,percent,label,plagiarized,lines,filename0,filename1,source0,source1
1,99,99,0,122,A2016/Z4/Z4/student9972,A2016/Z4/Z4/student9538,"#include <stdio.h>
#include<stdlib.h>
#define eps 0.0001

int dalitrebaizbacit(double x,double y,double x1, double y1, double x2, double y2) {
	if(y>y2 || y<y1 || x<x1 || x>x2)
	return 1;
	else return 0;
} double napravibroj(double cijelidio, double ostatak, int predznak) {
	double broj=(cijelidio+ostatak)*predznak;
	return broj;
}
int losformat (char znak) {
	if(!((znak>=48 && znak<=87) || znak=='-' || znak=='.'))
	return 1;
	else return 0;
}
char* obuhvat(char*tekst, double x1, double y1, double x2, double y2){//donji lijevi i gornjidesni

		char*s=tekst;
	    char*poc;
		
	double x,y,o,ostatak;
	int imadec, predznak,cijelidio;
		while(*s!='\0' ){
		if(*s=='(' && s!=tekst && *(s-1)!=',') return 0;
		if(*s='(') {poc=s;   s++;}
		if(*s=='.' || *s==',') return 0;
		x=0; ostatak=0; cijelidio=0; o=0.1;  imadec=0; predznak=1;
		while(*s!=',') {
			if(losformat(*s)==1) return 0;
			if(*s=='-'){ if(*(s-1)==',') return 0;  s++; predznak=-1;}
			if(*s=='.') {imadec=1; s++;}
			if(*s==',') break;
			
			if(imadec==0){
				cijelidio=cijelidio*10+(*s-48);
			}
			if(imadec==1){
				ostatak=ostatak+(*s-48)*o;
				o=o/10;
			}
			
			s++;
		}
		x=napravibroj(cijelidio,ostatak,predznak);
		
		s++;
		 if(*s=='.' ||*s==')') return 0;
            y=0; o=0.1; cijelidio=0; ostatak=0; imadec=0; predznak=1;
			while(*s!=')') {
				if(losformat(*s)==1) return 0;
			    if(*s=='-'){s++; predznak=-1;}
			    if(*s=='.') {imadec=1; s++;}
			
		
			if(imadec==0){
				cijelidio=cijelidio*10+(*s-48);
			}
			if(imadec==1){
				ostatak=ostatak+(*s-48)*o;
				o=o/10;
			}
			s++;
		}
	    y=napravibroj(cijelidio,ostatak,predznak);
		
		
		
	char*a=poc;
	int izb=0;
	int vr= dalitrebaizbacit(x,y,x1,y1,x2,y2);
	int zadnjarijec=0,jedinarijeczaizbacit=0;
		if(vr==1){
		    
			izb=1;
			if(poc==tekst && *(s+1)=='\0') {
				    jedinarijeczaizbacit=1;
				}
				
			if (*(s+1)=='\0') {
			    zadnjarijec=1;
			}
		
			
			if(jedinarijeczaizbacit==1){
			    *tekst='\0'; return tekst;
			}
			else if(zadnjarijec==1){
			    *(poc-1)='\0';  return tekst;
			}
			else {
			char*hod=s+2;
			while(*hod!='\0') {
			    *poc=*hod;
				poc++;hod++;
			}
			*poc='\0';
		
			}
		}
		
		
		if(izb==1){
		    s=a; 
		}
		
		else if(*(s+1)=='\0')  
		            s++;
		else s+=2;
		if(*s!='(') return 0;
	//	printf(""%c"",s);

		}
			
		//s na \0
		if(s!=tekst)
		s--;
		if(*s!=')') return 0;
		return tekst;
}
int main() {
	char s[]=""(0,-3.1),(-15.09,4),(2.,2),(-1.1,217)"";
	char*rez=obuhvat(s,-3,-3,3,3);
	printf(""%s %s"",rez,s);
	return 0;
}","#include <stdio.h>
#include<stdlib.h>
#define eps 0.0001

int dalitrebaizbacit(double x,double y,double x1, double y1, double x2, double y2) {
	if(y>y2 || y<y1 || x<x1 || x>x2)
	return 1;
	else return 0;
} double napravibroj(double cijelidio, double ostatak, int predznak) {
	double broj=(cijelidio+ostatak)*predznak;
	return broj;
}
int losformat (char znak) {
	if(!((znak>=48 && znak<=87) || znak=='-' || znak=='.'))
	return 1;
	else return 0;
}
char* obuhvat(char*tekst, double x1, double y1, double x2, double y2){//donji lijevi i gornjidesni

		char*s=tekst;
	    char*poc;
		
	double x,y,o,ostatak;
	int imadec, predznak,cijelidio;
		while(*s!='\0' ){
		if(*s=='(' && s!=tekst && *(s-1)!=',') return 0;
		if(*s='(') {poc=s;   s++;}
		if(*s=='.' || *s==',') return 0;
		x=0; ostatak=0; cijelidio=0; o=0.1;  imadec=0; predznak=1;
		while(*s!=',') {
			if(losformat(*s)==1) return 0;
			if(*s=='-'){ if(*(s-1)==',') return 0;  s++; predznak=-1;}
			if(*s=='.') {imadec=1; s++;}
			if(*s==',') break;
			
			if(imadec==0){
				cijelidio=cijelidio*10+(*s-48);
			}
			if(imadec==1){
				ostatak=ostatak+(*s-48)*o;
				o=o/10;
			}
			
			s++;
		}
		x=napravibroj(cijelidio,ostatak,predznak);
		
		s++;
		 if(*s=='.' ||*s==')') return 0;
            y=0; o=0.1; cijelidio=0; ostatak=0; imadec=0; predznak=1;
			while(*s!=')') {
				if(losformat(*s)==1) return 0;
			    if(*s=='-'){s++; predznak=-1;}
			    if(*s=='.') {imadec=1; s++;}
			
		
			if(imadec==0){
				cijelidio=cijelidio*10+(*s-48);
			}
			if(imadec==1){
				ostatak=ostatak+(*s-48)*o;
				o=o/10;
			}
			s++;
		}
	    y=napravibroj(cijelidio,ostatak,predznak);
		
		
		
	char*a=poc;
	int izb=0;
	int vr= dalitrebaizbacit(x,y,x1,y1,x2,y2);
	int zadnjarijec=0,jedinarijeczaizbacit=0;
		if(vr==1){
		    
			izb=1;
			if(poc==tekst && *(s+1)=='\0') {
				    jedinarijeczaizbacit=1;
				}
				
			if (*(s+1)=='\0') {
			    zadnjarijec=1;
			}
		
			
			if(jedinarijeczaizbacit==1){
			    *tekst='\0'; return tekst;
			}
			else if(zadnjarijec==1){
			    *(poc-1)='\0';  return tekst;
			}
			else {
			char*hod=s+2;
			while(*hod!='\0') {
			    *poc=*hod;
				poc++;hod++;
			}
			*poc='\0';
		
			}
		}
		
		
		if(izb==1){
		    s=a; 
		}
		
		else if(*(s+1)=='\0')  
		            s++;
		else s+=2;
		if(*s!='(') return 0;
	//	printf(""%c"",s);

		}
			
		//s na \0
		if(s!=tekst)
		s--;
		if(*s!=')') return 0;
		return tekst;
}
int main() {
	char s[]=""(0,-3.1),(-15.09,4),(2.,2),(-1.1,217)"";
	char*rez=obuhvat(s,-3,-3,3,3);
	printf(""%s %s"",rez,s);
	return 0;
}"
12,85,85,0,116,A2016/Z1/Z1/student6419,A2016/Z1/Z1/student3108,"#include <stdio.h>
#define E 0.00001
int main () {
	float tp1, tp2, tpr, tz, tzi, bp1, bp2, bpr, bz, bzi, mp1, mp2, mpr, mz, mzi;
	float tu, bu, mu;
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &tp1);
	if(tp1<0 || tp1>20) {
		printf(""Neispravan broj bodova"");
			return 1;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &tp2);
	if(tp2<0 || tp2>20) {
		printf(""Neispravan broj bodova"");
			return 1;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &tpr);
	if(tpr<0 || tpr >10) {
		printf(""Neispravan broj bodova"");
			return 1;
	}
	printf(""Zadace: "");
	scanf(""%f"", &tz);
	if(tz<0 || tz>10) {
		printf(""Neispravan broj bodova"");
			return 1;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &tzi);
	if(tzi<0 || tzi>40) {
	 	printf(""Neispravan broj bodova"");
	 		return 1;
	}
	printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &bp1);
	if(bp1<0 || bp1>20){
		printf(""Neispravan broj bodova"");
			return 1;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &bp2);
	if(bp2<0 || bp2>20) {
		printf(""Neispravan broj bodova"");
			return 1;
	}
 	printf(""Prisustvo: "");
 	scanf(""%f"", &bpr);
 	if(bpr<0 || bpr>10) {
 		printf(""Neispravan broj bodova"");
 			return 1;
	}
	printf(""Zadace: "");
	scanf(""%f"", &bz);
	if(bz<0 || bz>10) {
		printf(""Neispravan broj bodova"");
			return 1;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &bzi);
	if(bzi<0 || bzi>40) {
		printf(""Neispravan broj bodova"");
			return 1;
	}
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &mp1);
	if(mp1<0 || mp1>20) {
	 	printf(""Neispravan broj bodova"");
	 		return 1;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &mp2);
	if(mp2<0 || mp2>20) {
		printf(""Neispravan broj bodova"");
			return 1;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &mpr);
	if(mpr<0 || mpr>10){
		printf(""Neispravan broj bodova"");
			return 1;
	}
	printf(""Zadace: "");
	scanf(""%f"", &mz);
	if(mz<0 || mz>10){
		printf(""Neispravan broj bodova"");
			return 1;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &mzi);
	if(mzi<0 || mzi>40){
		printf(""Neispravan broj bodova"");
		return 1;
	}
	tu=tp1+tp2+tpr+tz+tzi+E;
	bu=bp1+bp2+bpr+bz+bzi+E;
	mu=mp1+mp2+mpr+mz+mzi+E;
	if(tu >= 55 && bu>=55 && mu>=55) {
		printf(""Sva tri studenta su polozila.\n"");
		if(tu>=55 && tu<65 && mu>=55 && mu<65 && bu>=55 && bu<65  ||  tu>=65 && tu<75 && bu>=65 && bu<75 && mu>=65 && mu<75  || tu>=75 && tu<85 && bu>=75 && bu<85 && mu>=75 && mu<85 || tu>=85 && tu<92 && bu>=85 && bu<92 && mu>=85 && mu<92  || tu>=92 && tu<=100 && bu>=92 && bu<=100 && mu>=92 && mu<=100)
			printf(""Sva tri studenta imaju istu ocjenu."");
		else if(tu>=55 && tu<65 && bu>=55 && bu<65  ||  tu>=65 && tu<75 && bu>=65 && bu<75  || tu>=75 && tu<85 && bu>=75 && bu<85  || tu>=85 && tu<92 && bu>=85 && bu<92  || tu>=92 && tu<=100 && bu>=92 && bu<=100)
			printf(""Dva od tri studenta imaju istu ocjenu."");
		else
			printf(""Svaki student ima razlicitu ocjenu."");
	}
	else if(tu>=55 && bu<55 && mu<55 || tu<55 && bu>=55 && mu<55 || tu<55 && bu<55 && mu>=55)
		printf(""Jedan student je polozio."");
	else if(tu>=55 && bu>=55 && mu<55 || tu>=55 && bu<55 && mu>=55 || tu<55 && bu>=55 && mu>=55)
		printf(""Dva studenta su polozila."");
	else if(tu<55 && bu<55 && mu<55)
		printf(""Nijedan student nije polozio."");
	return 0;

	}","#include <stdio.h>

int main() {
	float tpp, tdp, tp, tz, tzi, bpp, bdp, bp, bz, bzi, mpp, mdp, mp, mz, mzi, tb, bb, mb;
	
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &tpp);
	if(tpp>20 || tpp<0) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &tdp);
	if(tdp>20 || tdp<0) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &tp);
	if(tp<0 || tp>10) {
		printf(""Neispravan broj bodova."");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &tz);
	if(tz<0 || tz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &tzi);
	if(tzi>40 || tzi<0) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	
	printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &bpp);
	if(bpp>20 || bpp<0) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &bdp);
	if(bdp<0 || bdp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &bp);
	if(bp<0 || bp>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"",&bz);
	if(bz<0 || bz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &bzi);
	if(bzi>40 || bzi<0) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &mpp);
	if(mpp<0 || mpp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &mdp);
	if(mdp<0 || mdp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &mp);
	if(mp<0 || mp>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &mz);
	if(mz<0 || mz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &mzi);
	if(mzi<0 || mzi>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	
	
	
	tb = tpp + tdp + tp + tz + tzi;
	bb = bpp + bdp + bp + bz + bzi;
	mb = mpp + mdp + mp + mz + mzi;
	
	if(tb<55 && bb<55 && mb<55)  
	printf(""Nijedan student nije polozio.\n""); 
	
	
	else if((tb>=55 && bb<55 && mb<55) || (bb>=55 && tb<55 && mb<55)  || (mb>=55 && tb<55 && bb<55 )) 
	printf(""Jedan student je polozio.\n"");
	
	
	else if((tb>=55 && bb>=55 && mb<55) || (tb>=55 && bb<55 && mb>=55) || (tb<55 && bb>=55 && mb>=55)) 
		printf(""Dva studenta su polozila.\n"");
		
	
	
	else if(tb>=55 && bb>=55 && mb>=55) {
	printf(""Sva tri studenta su polozila.\n"");
	if((tb<55 && mb<55 && bb<55) || (tb>=55 && tb<65 && bb>=55 && bb<65 && mb>=55 && mb<65) || (tb>=65 && tb<75 && bb>=65 && bb<75 && mb>=65 && mb<75) || (tb>=75 && tb<85 && bb>=75 && bb<85 && mb>=75 && mb<85) || (tb>=85 && tb<92 && bb>=85 && bb<92 && mb>=85 && mb<92) || (tb>=92 && tb<=100 && bb>=92 && bb<=100 && mb>=92 && mb<=100))
	printf(""Sva tri studenta imaju istu ocjenu.\n"");
	 else if((tb<55 && bb<55 && mb>=55) || (tb>=55 && tb<65 && bb>=55 && bb<65 && mb>=65 || mb<55) || (tb>=65 && tb<75 && bb>=65 && bb<75 && mb<65 || mb>=75) || (tb>=75 && tb<85 && bb>=75 && bb<85 && mb<75 || mb>=85) || (tb>=85 && tb<92 && bb>=85 && bb<92 && mb<85 || mb>=92) || (tb>=92 && tb<=100 && bb>=92 && bb<=100 && mb<92))
	printf(""Dva od tri studenta imaju istu ocjenu.\n"");
	 else if((tb<55 && mb<55 && bb>=55) || (tb>=55 && tb<65 && mb>=55 && mb<65 && bb>=65 || bb<55) || (tb>=65 && tb<75 && mb>=65 && mb<75 && bb<65 || bb>=75) || (tb>=75 && tb<85 && mb>=75 && mb<85 && bb<75 || bb>=85) || (tb>=85 && tb<92 && mb>=85 && mb<92 && bb<85 || bb>=92) || (tb>=92 && tb<=100 && mb>=92 && mb<=100 && bb<=92))
	printf(""Dva od tri studenta imaju istu ocjenu.\n"");
	 else if((mb<55 && bb<55 && tb>=55) || (mb>=55 && mb<65 && bb>=55 && bb<65 && tb>=65 || tb<55) || (mb>=65 && mb<75 && bb>=65 && bb<75 && tb<65 || tb>=75) || (mb>=75 && mb<85 && bb>=75 && bb<85 && tb<75 || tb>=85) || (mb>=85 && mb<92 && bb>=85 && bb<92 && tb<85 || tb>=92) || (mb>=92 && mb<=100 && bb>=92 && bb<=100 && tb<=92))
	printf(""Dva od tri studenta imaju istu ocjenu.\n"");
	
	else {
	printf(""Svaki student ima razlicitu ocjenu."");
		
	} }
	
	
	
	
		return 0;
}
"
18,86,86,0,150,A2016/Z1/Z1/student8774,A2016/Z1/Z1/student4628,"#include <stdio.h>

int main() {
	double z1, z2, z3, p1, p2, p3, pp1, pp2, pp3, dp1, dp2, dp3, u1, u2, u3, ub1, ub2, ub3, o1, o2, o3;
	printf (""Unesite bodove za Tarika: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &pp1);
	if (pp1<0 || pp1>20) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &dp1);
	if (dp1<0 || dp1>20){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%lf"", &p1);
	if (p1<0 || p1>10){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%lf"", &z1);
	if (z1<0 || z1>10) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &u1);
	if (u1<0 || u1>40) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	
	printf (""Unesite bodove za Bojana: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &pp2);
	if (pp2<0 || pp2>20) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &dp2);
	if (dp2<0 || dp2>20){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%lf"", &p2);
	if (p2<0 || p2>10){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%lf"", &z2);
	if (z2<0 || z2>10) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &u2);
	if (u2<0 || u2>40) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	
	printf (""Unesite bodove za Mirzu: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &pp3);
	if (pp3<0 || pp3>20) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &dp3);
	if (dp3<0 || dp3>20){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%lf"", &p3);
	if (p3<0 || p3>10){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%lf"", &z3);
	if (z3<0 || z3>10) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &u3);
	if (u3<0 || u3>40) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	
	ub1=p1+pp1+dp1+z1+u1;
	if (ub1>=55 && ub1<65){
		o1=6;
	}
	else if (ub1>=65 && ub1<75){
		o1=7;
	}
	else if (ub1>=75 && ub1<85){
		o1=8;
	}
	else if (ub1>=85 && ub1<92){
		o1=9;
	}
	else if (ub1>=92 && ub1<=100){
		o1=10;
	}
	ub2=p2+pp2+dp2+z2+u2;
		if (ub2>=55 && ub2<65){
		o2=6;
	}
	else if (ub2>=65 && ub2<75){
		o2=7;
	}
	else if (ub2>=75 && ub2<85){
		o2=8;
	}
	else if (ub2>=85 && ub2<92){
		o2=9;
	}
	else if (ub2>=92 && ub2<=100){
		o2=10;
	}
	ub3=p3+pp3+dp3+z3+u3;
		if (ub3>=55 && ub3<65){
		o3=6;
	}
	else if (ub3>=65 && ub3<75){
		o3=7;
	}
	else if (ub3>=75 && ub3<85){
		o3=8;
	}
	else if (ub3>=85 && ub3<92){
		o3=9;
	}
	else if (ub3>=92 && ub3<=100){
		o3=10;
	}
	
	
	if (ub1>=55 && ub2>=55 && ub3>=55) {
		printf (""Sva tri studenta su polozila."");
		if (o1==o2 && o1==o3 && o2==o3) {
			printf (""\nSva tri studenta imaju istu ocjenu."");
		}
		else if (o1!=o2 && o1!=o3 && o2!=o3) {
			printf (""\nSvaki student ima razlicitu ocjenu."");
		}
		else if ((o1==o2 && o1!=o3 && o2!=o3) || (o1==o3 && o1!=o2 && o3!=o2) || (o2==o3 && o2!=o1 && o3!=o1)){
			printf (""\nDva od tri studenta imaju istu ocjenu."");
		}
	}
	else if ((ub1<55 && ub2>=55 && ub3>=55) || (ub1>=55 && ub2<55 && ub3>=55) || (ub1>=55 && ub2>=55 && ub3<55)) {
		printf (""Dva studenta su polozila."");
	}
	else if ((ub1>=55 && ub2<55 && ub3<55) || (ub1<55 && ub2>=55 && ub3<55) || (ub1<55 && ub2<55 && ub3>=55)) {
		printf (""Jedan student je polozio."");
	}
	else if (ub1<55 && ub2<55 && ub3<55) {
		printf (""Nijedan student nije polozio."");
	}
	
		return 0;
}
","#include <stdio.h>

int main() {
double a1, b1, c1, d1, e1, a2, b2, c2, d2, e2, a3, b3, c3, d3, e3, s1, s2, s3, oc1, oc2, oc3;

printf(""Unesite bodove za Tarika:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a1);
if(a1<0||a1>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b1);
if(b1<0||b1>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c1);
if(c1<0||c1>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d1);
if(d1<0||d1>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e1);
if(e1<0||e1>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

printf(""Unesite bodove za Bojana:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a2);
if(a2<0||a2>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b2);
if(b2<0||b2>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c2);
if(c2<0||c2>10){
	printf(""Neispravan broj brodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d2);
if(d2<0||d2>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e2);
if(e2<0||e2>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

printf(""Unesite bodove za Mirzu:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a3);
if(a3<0||a3>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b3);
if(b3<0||b3>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c3);
if(c3<0||c3>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d3);
if(d3<0||d3>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e3);
if(e3<0||e3>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

s1=a1+b1+c1+d1+e1;
s2=a2+b2+c2+d2+e2;
s3=a3+b3+c3+d3+e3;

if(s1<55)
oc1=5;
else if(s1>=55 && s1<65)
oc1=6;
else if(s1>=65 && s1<75)
oc1=7;
else if(s1>=75 && s1<85)
oc1=8;
else if(s1>=85 && s1<92)
oc1=9;
else if(s1>=92 && s1<=100)
oc1=10;

if(s2<55)
oc2=5;
if(s2>=55 && s2<65)
oc2=6;
else if(s2>=65 && s2<75)
oc2=7;
else if(s2>=75 && s2<85)
oc2=8;
else if(s2>=85 && s2<92)
oc2=9;
else if(s2>=92 && s2>=100)
oc2=10;

if(s3<55)
oc3=5;
else if(s3>=55 && s3<65)
oc3=6;
else if(s3>=65 && s3<75)
oc3=7;
else if(s3>=75 && s3<85)
oc3=8;
else if(s3>=85 && s3<92)
oc3=9;
else if(s3>=92 && s3<=100)
oc3=10;


if(s1>=55 && s2>=55 && s3>=55){
	printf(""Sva tri studenta su polozila."");
	if((oc1==oc2) && (oc2==oc3))
	{
		printf(""\nSva tri studenta imaju istu ocjenu."");
	}else if((oc1==oc2) || (oc2==oc3) && (oc1==oc3)){
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	}else {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	}

} else if((s1>=55 && s2<55 && s3<55) || (s1<55 && s2>=55 && s3<55) || (s1<55 && s2<55 && s3>=55)){
	printf(""Jedan student je polozio."");
} else if ((s1>=55 && s2>=55 && s3<55) || (s1<55 && s2>=55 && s3>=55) || (s1>=55 && s2<55 && s3>=55)){
	printf(""Dva studenta su polozila."");
}else{
	printf(""Nijedan student nije polozio."");

}

return 0;

}"
19,34,34,0,13,A2016/Z2/Z1/student8819,A2016/Z2/Z1/student2240,"#include <stdio.h>

int main() {
	//printf(""Zadaća 2, Zadatak 1"");
	
	int a;
	int tmp1=0;
	int tmp2=0;
	int b=0;
	int tmp3=0;
	int br=1;

	printf (""Unesite broj: "");
	scanf (""%d"", &a);

	if (a<0) a*=-1;
	
	for (;; ) {
		if ((int) a==0 || a<10)  break;
		tmp1=a%10;
		a=a/10;
		tmp2=a%10;
	
		tmp3=tmp1-tmp2;
		if (tmp3<0) tmp3*=-1;
	//	tmp1=tmp2;
	//	tmp2=(tmp3*br);
	//	b+=tmp2;
		b+=(tmp3*br);
		br*=10;
		
	}
	
	printf (""%d"", b);
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

int main() {
    
    int broj, decimale=1;
    int cifra1, cifra2, neg, rez=0;
    printf(""Unesite broj: "");
    scanf(""%d"",&broj);
    
    if (broj<0) broj*=-1;
    
    while(broj!=0) {
        cifra1=broj%10;
        broj/=10;
        if(broj!=0){
            cifra2=broj%10;
            neg=cifra1-cifra2;
            if(neg<0) neg*=-1;
            rez+=neg*decimale;
            decimale*=10;
        }
    }
    printf(""%d"", rez);
    return 0; }"
28,90,90,0,65,A2016/Z3/Z3/student5939,A2016/Z3/Z3/student4647,"#include <stdio.h>
#define V 200
#define S 200
int main() {
	int jednaki=0,i,j,k,z,p,r,M,N;
	int matrica[V][S];
	do { 
		printf(""Unesite brojeve M i N: "");
		scanf (""%d %d"",&M, &N);
		if (M<1 || M>200 || N<1 || N>200) {
			printf (""Brojevi nisu u trazenom opsegu.\n"");
		}
	
	}
	while (M<1 || M>200 || N<1 || N>200);
	printf (""Unesite elemente matrice: "");
 	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) {
			scanf (""%d"",&matrica[i][j]);
		}
	}
	for (i=0; i<M; i++) {
		for (k=i+1; k<M; k++) {
			for (z=0; z<N; z++) {
				if (matrica[i][z]==matrica[k][z]) {
						jednaki++;
				}		
					if (jednaki==N) {
						for (p=k; p<M-1; p++) {
							for (r=0; r<N; r++) {
							matrica[p][r]=matrica[p+1][r];
							}
						}
						
						M--;
						k--;
					}
				}
			jednaki=0;
			}
		}
	//	jednaki=0;
	for (j=0; j<N; j++) {                                            
		for (z=j+1; z<N; z++) {
			for (k=0; k<M; k++)	 {
				if (matrica[k][j]==matrica[k][z]) {
					jednaki++;
				}	
					if (jednaki==M) {
						for (p=0; p<M; p++) {
							for (r=z; r<N-1; r++){
								matrica[p][r]=matrica[p][r+1];
							}
						}
						
						N--;
						z--;
					}
				}
				jednaki=0;
			}
		}
	
		printf (""Nakon izbacivanja redova/kolona matrica glasi:\n"");
		for (i=0; i<M; i++) {
			for (j=0; j<N; j++) {
				printf ("" %4d"",matrica[i][j]);
		}
		printf (""\n"");
	} 
	
	return 0;
}
","#include <stdio.h>

int main() {
	int M, N, i, j, k, l, o, brojac=0;
	int matrica[201][201];
	/* unosenje dimenzija matrice */
	do {
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"", &M, &N);
		if(M>200 || N>200 || M<=0 || N<=0)
			printf(""Brojevi nisu u trazenom opsegu.\n"");
	}
	while (M>200 || N>200 || M<=0 || N<=0);
	/* unosenje elemenata matrice */
	printf(""Unesite elemente matrice: "");
	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) {
			scanf(""%d"", &matrica[i][j]);
		}
	}
	/* provjera da li postoje medjusobno isti redovi */
	for (i=0; i<M; i++) {
		for(k=i+1; k<M; k++) {
			for (j=0; j<N; j++) {
				if (matrica[i][j]==matrica[k][j]) brojac++;
			}
			if (brojac==N) {
				/* izbacivanje reda koji je jednak jednom od prehodnih iz matrice */
				for(l=k; l<M-1; l++) {
				for(o=0; o<N; o++) {
				matrica[l][o]=matrica[l+1][o];
				}}
				k--;
				M--;
			}
			brojac=0;
		}
	}
	/* provjera da li postoje medjusobno iste kolone */
	for (i=0; i<N; i++) {
		for (k=i+1; k<N; k++) {
			for (j=0; j<M; j++) {
				if (matrica[j][i]==matrica[j][k]) brojac++;
			}
			if (brojac==M) {
				/* izbacivanje kolone koja je jednaka jednoj od prehodnih iz matrice */
				for(l=0; l<M; l++) {
					for(o=k; o<N-1; o++) {
						matrica[l][o]=matrica[l][o+1];
					}
				}
				k--;
				N--;
			}
			brojac=0;
		}
	}
	/* ispis krajnje matrice */
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) 
			printf(""%5d"", matrica[i][j]);
		printf(""\n"");
	}
	return 0;
}
"
37,96,96,0,25,A2016/Z1/Z4/student2900,A2016/Z1/Z4/student4036,"#include <stdio.h>

int main() {
    int i,j,n;
    do {
	printf(""Unesite broj n: "");
	scanf (""%d"",&n);
	if (n<=0 || n>50)
		printf(""Pogresan unos\n"");
	else break;
	} while (1);
	if (n==1)
	printf(""**"");
	
	for (i=0; i<n;i++){
    for (j=0;j<4*n-3;j++){
    	if (i==j)
    	printf(""*"");
    	else if (j==2*(n-1)-i)
    	printf(""*"");
    	else if (j==2*(n-1)+i)
    	printf(""*"");
    	else if (j==4*(n-1)-i)
    	printf(""*"");
    	else printf("" "");
    }	
    printf(""\n"");
	}
    
	return 0;
}
","#include <stdio.h>

int main() {
    int i,j,n;
    do {
	printf(""Unesite broj n: "");
	scanf (""%d"",&n);
	if (n<=0 || n>50)
		printf(""Pogresan unos\n"");
	else break;
	} while (1);
	if (n==1)
	printf(""**"");
	
	for (i=0; i<n;i++){
    for (j=0;j<4*n-3;j++){
    	if (i==j)
    	printf(""*"");
    	else if (j==2*(n-1)-i)
    	printf(""*"");
    	else if (j==2*(n-1)+i)
    	printf(""*"");
    	else if (j==4*(n-1)-i)
    	printf(""*"");
    	else printf("" "");
    }	
    printf(""\n"");
	}
    
	return 0;
}
"
41,98,98,0,39,A2016/Z2/Z1/student4903,A2016/Z2/Z1/student5713,"#include <stdio.h>
#include<math.h>

int n, rezervna, cifre=0, ostatak2, ostatak1, a, maxo, pamti, preskok=0, remember_me, isti=0, koliko;


int main() {
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	
	if(n<0) n=-n;
	rezervna=n;
	
	
	while(n!=0)	{	
			
			n=n/10;
			if(remember_me==n) isti=1;
			remember_me=n;
			cifre++;
		}
		if(cifre==1){printf(""%d"", 0); return 0;}
		if(isti==1) {printf(""0""); return 0;}
	n=rezervna;
	maxo=cifre;
	ostatak2=n/pow(10, cifre-1);
	
	while(cifre>1){
		
		ostatak1=n/pow(10, cifre-2);
		ostatak1=ostatak1%10;
		a=ostatak1-ostatak2;
		
		if(preskok==1 && pamti==0  && a==0) { cifre--; ostatak2=ostatak1; pamti=a;continue;}
		if(cifre==maxo && a==0){ preskok=1; cifre--; ostatak2=ostatak1; pamti=a; continue; }
		if(a<0) a=-a;
		koliko=printf(""%d"", a); 
	pamti=a;
		cifre--;
		ostatak2=ostatak1;
	}
	if(koliko==0) printf(""0"");
	return 0;
}
		
		

","#include <stdio.h>
#include<math.h>

int n, rezervna, cifre=0, ostatak2, ostatak1, a, maxo, pamti, preskok=0, remember_me, isti=0, koliko;


int main() {
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	
	if(n<0) n=-n;
	rezervna=n;
	
	
	while(n!=0)	{	
			
			n=n/10;
			if(remember_me==n) isti=1;
			remember_me=n;
			cifre++;
		}
		if(cifre==1){printf(""%d"", 0); return 0;}
		if(isti==1) {printf(""0""); return 0;}
	n=rezervna;
	maxo=cifre;
	ostatak2=n/pow(10, cifre-1);
	
	while(cifre>1){
		
		ostatak1=n/pow(10, cifre-2);
		ostatak1=ostatak1%10;
		a=ostatak1-ostatak2;
		
		if(preskok==1 && pamti==0  && a==0) { cifre--; ostatak2=ostatak1; pamti=a;continue;}
		if(cifre==maxo && a==0){ preskok=1; cifre--; ostatak2=ostatak1; pamti=a; continue; }
		if(a<0) a=-a;
		koliko=printf(""%d"", a); 
	pamti=a;
		cifre--;
		ostatak2=ostatak1;
	}
	if(koliko==0) printf(""0"");
	return 0;
}
		
		

"
51,70,70,0,92,A2016/Z1/Z1/student9358,A2016/Z1/Z1/student3108,"#include <stdio.h>

int main() {
	double m,b,t,t1,t2,t3,t4,t5,b1,b2,b3,b4,b5,m1,m2,m3,m4,m5;
	printf(""Unesite bodove za Tarika:\nI parcijalni ispit: "");
	scanf(""%lf"",&t1);
	if(t1<0 || t1>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&t2);
	if(t2<0 || t2>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&t3);
	if(t3<0 || t3>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&t4);
	if(t4<0 || t4>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&t5);
	if(t5<0 || t5>40) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Unesite bodove za Bojana:\nI parcijalni ispit: "");
	scanf(""%lf"",&b1);
	if(b1<0 || b1>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&b2);
	if(b2<0 || b2>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&b3);
	if(b3<0 || b3>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&b4);
	if(b4<0 || b4>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&b5);
	if(b5<0 || b5>40) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Unesite bodove za Mirzu:\nI parcijalni ispit: "");
	scanf(""%lf"",&m1);
	if(m1<0 || m1>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&m2);
	if(m2<0 || m2>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&m3);
	if(m3<0 || m3>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&m4);
	if(m4<0 || m4>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&m5);
	if(m5<0 || m5>40) {printf(""Neispravan broj bodova""); return 0;}
	m=m1+m2+m3+m4+m5;
	t=t1+t2+t3+t4+t5;
	b=b1+b2+b3+b4+b5;
	if (m<55 && t<55 && b<55) {printf(""Nijedan student nije polozio.\n""); return 0;}
	else if((m>=55 && b<55 && t<55) || (m<55 && b>=55 && t<55) || (m<55 && b<55 && t>=55)) {printf(""Jedan student je polozio.\n""); return 0;}
	else if((m>55 && b>55 && t<55) || (m>55 && t>55 && b<55) || (m<55 && b>55 && t>55)) {printf(""Dva studenta su polozila.\n""); return 0;}
	else printf(""Sva tri studenta su polozila.\n"");
	if ((m>=55 && m<65 && t>=55 && t<65 && b>=55 && b<65) || (m>=65 && m<75 && t>=65 && t<75 && b>=65 && b<75) || (m>=75 && m<85 && t>=75 && t<85 && b>=75 && t<85) || (m>=85 && m<95 && t>=85 && t<95 && b>=85 && b<95) || (m>=95 && b>=95 && t>=95)) {printf(""Sva tri studenta imaju istu ocjenu.""); return 0;}
	if ((m>=55 && m<65 && t>=55 && t<65 && b>=65) || (m>=55 && m<65 && b>=55 && b<65 && t>=65) || (b>=55 && b<65 && t>=55 && t<65 && m>=65) || (m>=65 && m<75 && t>=65 && t<75 && (b>=75 || b<65)) || (m>=65 && m<75 && b>=65 && b<75 && (t>=75 || t<65)) || (b>=65 && b<75 && t>=65 && t<75 && (m<65 || m>=75)) ||  (m>=75 && m<85 && t>=75 && t<85 && (b>=85 || b<75)) || (m>=75 && m<85 && b>=75 && b<85 && (t>=85 || t<75)) || (b>=75 && b<85 && t>=75 && t<85 && (m<75 || m>=85)) || (m>=85 && m<95 && t>=85 && t<95 && (b>=95 || b<85)) || (m>=85 && m<95 && b>=85 && b<95 && (t>=95 || t<85)) || (b>=85 && b<95 && t>=85 && t<95 && (m<85 || m>=95)) || (m>=95 && t>=95 && b<95) || (m>=95 && b>=95 && t<95) || (b>=95 && t>=95 && m<95)) printf(""Dva od tri studenta imaju istu ocjenu."");
	else printf(""Svaki student ima razlicitu ocjenu."");
	
	return 0;
}
","#include <stdio.h>

int main() {
	float tpp, tdp, tp, tz, tzi, bpp, bdp, bp, bz, bzi, mpp, mdp, mp, mz, mzi, tb, bb, mb;
	
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &tpp);
	if(tpp>20 || tpp<0) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &tdp);
	if(tdp>20 || tdp<0) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &tp);
	if(tp<0 || tp>10) {
		printf(""Neispravan broj bodova."");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &tz);
	if(tz<0 || tz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &tzi);
	if(tzi>40 || tzi<0) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	
	printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &bpp);
	if(bpp>20 || bpp<0) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &bdp);
	if(bdp<0 || bdp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &bp);
	if(bp<0 || bp>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"",&bz);
	if(bz<0 || bz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &bzi);
	if(bzi>40 || bzi<0) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &mpp);
	if(mpp<0 || mpp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &mdp);
	if(mdp<0 || mdp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &mp);
	if(mp<0 || mp>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &mz);
	if(mz<0 || mz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &mzi);
	if(mzi<0 || mzi>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	
	
	
	tb = tpp + tdp + tp + tz + tzi;
	bb = bpp + bdp + bp + bz + bzi;
	mb = mpp + mdp + mp + mz + mzi;
	
	if(tb<55 && bb<55 && mb<55)  
	printf(""Nijedan student nije polozio.\n""); 
	
	
	else if((tb>=55 && bb<55 && mb<55) || (bb>=55 && tb<55 && mb<55)  || (mb>=55 && tb<55 && bb<55 )) 
	printf(""Jedan student je polozio.\n"");
	
	
	else if((tb>=55 && bb>=55 && mb<55) || (tb>=55 && bb<55 && mb>=55) || (tb<55 && bb>=55 && mb>=55)) 
		printf(""Dva studenta su polozila.\n"");
		
	
	
	else if(tb>=55 && bb>=55 && mb>=55) {
	printf(""Sva tri studenta su polozila.\n"");
	if((tb<55 && mb<55 && bb<55) || (tb>=55 && tb<65 && bb>=55 && bb<65 && mb>=55 && mb<65) || (tb>=65 && tb<75 && bb>=65 && bb<75 && mb>=65 && mb<75) || (tb>=75 && tb<85 && bb>=75 && bb<85 && mb>=75 && mb<85) || (tb>=85 && tb<92 && bb>=85 && bb<92 && mb>=85 && mb<92) || (tb>=92 && tb<=100 && bb>=92 && bb<=100 && mb>=92 && mb<=100))
	printf(""Sva tri studenta imaju istu ocjenu.\n"");
	 else if((tb<55 && bb<55 && mb>=55) || (tb>=55 && tb<65 && bb>=55 && bb<65 && mb>=65 || mb<55) || (tb>=65 && tb<75 && bb>=65 && bb<75 && mb<65 || mb>=75) || (tb>=75 && tb<85 && bb>=75 && bb<85 && mb<75 || mb>=85) || (tb>=85 && tb<92 && bb>=85 && bb<92 && mb<85 || mb>=92) || (tb>=92 && tb<=100 && bb>=92 && bb<=100 && mb<92))
	printf(""Dva od tri studenta imaju istu ocjenu.\n"");
	 else if((tb<55 && mb<55 && bb>=55) || (tb>=55 && tb<65 && mb>=55 && mb<65 && bb>=65 || bb<55) || (tb>=65 && tb<75 && mb>=65 && mb<75 && bb<65 || bb>=75) || (tb>=75 && tb<85 && mb>=75 && mb<85 && bb<75 || bb>=85) || (tb>=85 && tb<92 && mb>=85 && mb<92 && bb<85 || bb>=92) || (tb>=92 && tb<=100 && mb>=92 && mb<=100 && bb<=92))
	printf(""Dva od tri studenta imaju istu ocjenu.\n"");
	 else if((mb<55 && bb<55 && tb>=55) || (mb>=55 && mb<65 && bb>=55 && bb<65 && tb>=65 || tb<55) || (mb>=65 && mb<75 && bb>=65 && bb<75 && tb<65 || tb>=75) || (mb>=75 && mb<85 && bb>=75 && bb<85 && tb<75 || tb>=85) || (mb>=85 && mb<92 && bb>=85 && bb<92 && tb<85 || tb>=92) || (mb>=92 && mb<=100 && bb>=92 && bb<=100 && tb<=92))
	printf(""Dva od tri studenta imaju istu ocjenu.\n"");
	
	else {
	printf(""Svaki student ima razlicitu ocjenu."");
		
	} }
	
	
	
	
		return 0;
}
"
84,7,7,0,17,A2016/Z4/Z1/student5581,A2016/Z4/Z1/student9823,"#include<stdio.h>
#include<ctype.h>

/*funkcija za unos stringa*/
void unesi (char niz[], int velicina){
	
	char znak=getchar();
	
	if (znak == '\n'){
		znak=getchar();
	}
	
	int i=0;
	
	while (i<velicina-1 && znak != '\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	
	niz[i]='\0';
}

/*funkcija koja vraća pokazivač na n-tu riječ u stringu*/
char* vrati_rijec (char* s, int n){
	
	int neslovo=1, broj_rijeci1=0;
	
	while (*s != '\0'){
		
		if (!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))){
			neslovo=1;
		}
		else if (neslovo == 1){
			
			neslovo=0;
			broj_rijeci1++;
		}
		
		if (broj_rijeci1 == n){
			return s;
		}
	
	s++;
	}
}

/*funkcija koja vraća broj riječi*/
int broj_rijeci (char* s){
	
	int neslovo=1, broj_rijeci1=0;
	
	while(*s != '\0'){
		
		if (!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))){
			neslovo=1;
		}
		else if (neslovo == 1){
			
			neslovo=0;
			broj_rijeci1++;
		}
		s++;
	}
	
	return broj_rijeci1;
}

/*funkcija koja izbacuje n-tu riječ*/
void izbaci_rijec (char* s, int n){
	
	int neslovo=1, broj_rijeci1=0;
	char* pocetak;
	while (*s != '\0'){
		
		if (!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))){
			neslovo=1;
		}
		else if (neslovo == 1) {
			
			neslovo=0;
			broj_rijeci1++;
			
			if (broj_rijeci1 == n){
				pocetak=s;
				
				while ((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')){
					s++;
				}
				
				if (*s == '\0'){
					*pocetak='\0';
					return;
				}
				else {
					while (*pocetak++ = *s++);
					return;
				}
			}
		}
		
	s++;	
	}
}

/*funkcija izbaci_najcescu*/
char* izbaci_najcescu (char* s){
	
	int broj_rijeci1=broj_rijeci(s);
	int i,j;
	int broj_izbacenih=0;
	int pozicija=0, jednak, broj_jednakih=0, max=0;
	
	char* a;
	char* b;
	
	if (broj_rijeci1 == 0){
		return s;
	}
	
	/*123-153 Traži najučestaliju riječ i u varijablu pozicija sprema 
	mjesto u stringu na kojem se ta riječ prvi put pojavila.*/
	for (i=1; i<=broj_rijeci1; i++){
		for (j=i; j<=broj_rijeci1; j++){
			a=vrati_rijec(s, i);
			b=vrati_rijec(s, j);
			jednak=1;
			
			while (((*a>='a' && *a<='z') || (*a>='A' && *a<='Z')) && ((*b>='a' && *b<='z') || (*b>='A' && *b<='Z'))){
				if (tolower(*a) != tolower(*b)) {
					jednak=0;
					break;
				}
				a++;
				b++;
			}
			
			if (!((*a>='a' && *a<='z') || (*a>='A' && *a<='Z')) && !((*b>='a' && *b<='z') || (*b>='A' && *b<='Z')) && jednak==1){
				broj_jednakih++;
			}
		}
		
		if (broj_jednakih > max){
			max=broj_jednakih;
			pozicija=i;
		
		}
		if(max>broj_rijeci(s)-i){
			break;
		}
		broj_jednakih=0;
		
	}
	
	/*  157-180 Prolazi kroz sve riječi, provjerava da li se podudaraju sa najučestalijom.
	Ako da, izbacuje tu riječ*/
	for (i=broj_rijeci(s); i>= pozicija; i--){
		
		a=vrati_rijec(s, pozicija);
		b=vrati_rijec(s, i);
		jednak=1;
		
		while (((*a>='a' && *a<='z') || (*a>='A' && *a<='Z')) && ((*b>='a' && *b<='z') || (*b>='A' && *b<='Z'))){
				if (tolower(*a) != tolower(*b)) {
					jednak=0;
					break;
				}
				a++;
				b++;
			}
			
			if (!((*a>='a' && *a<='z') || (*a>='A' && *a<='Z')) && !((*b>='a' && *b<='z') || (*b>='A' && *b<='Z')) && jednak==1){
				izbaci_rijec(s, i);
				broj_izbacenih++;
			}
			
			if(broj_izbacenih==max){
				break;
			}
	}
	
	return s;
}

int main () {
	
	char niz[100000];
	unesi(niz, 100000);
	
printf(""%s"", izbaci_najcescu(niz));
	
	
	
	return 0;
}","#include <stdio.h>

void unesi(char niz[], int velicina)
{
	// obicna funkcija unesi - svrha test-a u main-u
	char znak = getchar();
	if (znak == '\n') znak=getchar();
	int i = 0;
	while (i < velicina-1 && znak != '\n') {
		niz[i] = znak;
		i++;
		znak = getchar();
	}
	niz[i]='\0';
}

char toUpper(char c)
{
	if (c>='a' && c<='z')
		return c - ('a' - 'A'); // prebaci c u veliko i vrati
	return c; // ako nije bilo malo slovo, ostaje nepromjenjeno
}

int isSlovo(char c)
{
	c = toUpper(c);
	// vrati 1 ako je c slovo, 0 ako nije
	return c>='A' && c<='Z';
}

int jesuLiIsti(char *s1, char *s2)
{
	int istina=1;
	while(isSlovo(*s1) && isSlovo(*s2)) {
		if(toUpper(*s1)==toUpper(*s2)) {
			istina=1;
		} else if(toUpper(*s1)!=toUpper(*s2)) return 0;

		s1++;
		s2++;
	}
	if(*s1=='\0' && isSlovo(*s2)) return 0;
	if(isSlovo(*s1) && *s2=='\0') return 0;
	return istina;
}


void izbaciRijec(char *pok, char *kraj)
{
	// izbacivanje rijeci tj. kopiranje 1za1
	while(*pok!='\0') {
		char *kraj1 = kraj;


		while (*pok != '\0') {

			*pok = *kraj1;
			if(*kraj1=='\0') {
				*pok='\0';
				break;

			}
			pok++;
			kraj1++;


		}
		if(*pok=='\0') pok--;
		pok++;
	}


}



char *izbaci_iz_kuce(char *s, char *rijec)
{
	char *reset =s;

	while (*s!='\0') {
		while(!isSlovo(*s)) ++s; // premotaj do rijeci
		char *kraj = s;
		while(!isSlovo(*kraj)) kraj++;
		while(isSlovo(*kraj)) kraj++;

		if (jesuLiIsti(s, rijec)==0) { // ukoliko nisu isti s treba premotati samo do naredne rijeci
			while(s<kraj) s++;
		} else if(jesuLiIsti(s, rijec)) izbaciRijec(s, kraj); // ukoliko jesu iste rijeci treba izbaciti

	}

	return reset;
}



int prebroji_rijeci(char *s, char *rijec)
{
	int brojac = 0;
	while (*s!='\0') {

		// premotaj na pocetak iduce rijeci
		while (!isSlovo(*s) && *s != '\0') ++s;
		if (*s=='\0') break;

		char* pom = rijec;
		while (isSlovo(*pom) && isSlovo(*s) && toUpper(*pom) == toUpper(*s)) {
			pom++;
			s++;
		}
		if (*pom=='\0') {
			// ako je pom dosao do \0, znaci da su mozda isti
			// treba jos provjeriti da li je rijec u glavnom stringu zavrsena

			if ((!isSlovo(*s)) == 1)
				brojac++;
		}

		// premotaj do kraja trenutne rijeci
		while (isSlovo(*s)) ++s;

		if (*s=='\0') break;
		++s;
	}
	return brojac;
}


char *izbaci_najcescu(char *s)
{
	int maximum=0, broj=0;
	char max_rijec[50000], trenutnonaredna[50000];
	char *maxR = max_rijec;
	char *maxR2 = max_rijec;

	char *trtn = trenutnonaredna;
	char *reset = s;


	if(*s=='\0' || (*s=='\n')) return s;

	while(*s==' ') s++; // motamo do pocetka stringa
	while(!isSlovo(*s) && *s!='\0') s++;
	char *prva = s;
	while(((*prva>='A' && *prva<='Z') || (*prva>='a' && *prva<='z')) && *prva!='\0') {
		*maxR=*prva;
		maxR++;
		prva++;
	}
	*maxR='\0'; // uzimamo prvu rijec i nju deklarisemo kao max-tu rijec



	if(*prva=='\0') prva--;

	char *naredna = prva; // uzimamo novi pokazivac za naredne rijeci

	maximum = prebroji_rijeci(s, max_rijec); // pomocu gornje funkcije dobivamo broj rijeci u stringu


	// vrtimo rijeci do kraja
	while(*naredna!='\0') {
		char *resetZaTrtn = trtn;
		if((*naredna>='A' && *naredna<='Z') || (*naredna>='a' && *naredna<='z')) {
			char *pom = naredna;
			char *kraj = naredna;

			while((*kraj>='A' && *kraj<='Z') || (*kraj>='a' && *kraj<='z')) kraj++;

			while(naredna<kraj) {
				*trtn = *naredna;
				trtn++;
				naredna++;
			}
			*trtn='\0';

			broj = prebroji_rijeci(s, trenutnonaredna); // brojimo svaku ponazasebno
			trtn = resetZaTrtn;



			if(broj>maximum) { // ako je ispunjen uslov da se neka rijec pojavljuje više puta ta riječ postaje max-ta rijec ponavljanja
				char *resetZaR2 = maxR2;
				while(pom<kraj) {
					*maxR2 = *pom;

					maxR2++;
					pom++;

				}
				*maxR2 ='\0';
				maxR2 = resetZaR2;

			}




			if(*naredna=='\0') naredna--; // moramo smanjiti jer se dole povecava naredna++;
		}

		naredna++;
	}

	izbaci_iz_kuce(s, max_rijec); // kada nadjemo max-tu rijec slijedi izbacivanje te max-te rijeci



	return reset;
}



int main()
{
	char a[1000];
	printf(""Unesite tekst: "");
	unesi(a,1000);

	izbaci_najcescu(a);
	char *pok = a;
	while(*pok!='\0') {
		printf(""%c"", *pok);
		pok++;

	}

	return 0;
}
"
85,69,69,0,28,A2016/Z2/Z3/student4614,A2016/Z2/Z3/student5268,"#include <stdio.h>
#include <stdlib.h>

int main() {
	int Xosa[10],Yosa[10],i,j,n;
	char koordsistem[20][20];
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			koordsistem[i][j]=' ';
		}
	}
	
        while(1){
		printf(""Unesite broj tacaka: "");
	    scanf(""%d"",&n);
	    if(n>0 && n<=10) break;
	    else  
	    printf(""Pogresan unos\n"");
		}
	    
	
	for(i=0;i<n;i++){
		printf(""Unesite %d. tacku: "",i+1);
		scanf(""%d %d"",&Xosa[i],&Yosa[i]);
		if(Xosa[i]<0 || Xosa[i]>19 || Yosa[i]<0 || Yosa[i]>19){
				printf(""Pogresan unos\n"");
				i--;
		}
	}
	for(i=0;i<n;i++){
		koordsistem[Yosa[i]][Xosa[i]]='*';
		}
		for(i=0;i<20;i++){
			for(j=0;j<20;j++){
				printf(""%c"",koordsistem[i][j]);
			}
			printf(""\n"");
		}
		
	return 0;
}
	","#include <stdio.h>

int main() {
	int i,j,k,m,t,n,pn[10],h,dn[10];
	char mat[20][20];
	
	
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			mat[i][j]=' ';
		}
	}
	for(i=0;i<1;i++){
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&t);
		if(t<=10 && t>0){
			break;
		}
		else{
			printf(""Pogresan unos\n"");
			i--;
		}
	}
	
	
	for(i=0;i<t;i++){
		printf(""Unesite %d. tacku: "",i+1);
		scanf(""%d%d"",&pn[i],&dn[i]);
		if((pn[i]>19 || pn[i]<0)||(dn[i]>19 || dn[i]<0)){
			printf(""Pogresan unos\n"");
			i--;
		}
	}
   for(h=0;h<t;h++){
   	
   	for(k=0;k<20;k++){
   		for(j=0;j<20;j++){
   			if(pn[h]==j && dn[h]==k)
   				mat[k][j]='*';
   			
   		}
   		
   	}
   }
   for(i=0; i<20; i++){
   	for(j=0; j<20; j++){
   		printf(""%c"", mat[i][j]);
   	}
   	printf(""\n"");
   }
	return 0;
}
"
89,55,55,0,49,A2016/Z3/Z2/student1483,A2016/Z3/Z2/student3610,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
void ubaci(int *niz, int vel)
{       
        int *p,*q,i,suma,a,b;
        p=q=niz;
        for(i=vel-1; i>=0; i--)
        {
        *(q+(2*i))=*(p+i);
        }
        p=niz;
        for(i=0; i<2*vel; i++)
        {
            suma=0;
            a=*(p+i);
            a=abs(a);
            while(a!=0)
            {
                b=a%10;
                a/=10;
                suma+=b;
            }
            *(p+i+1)=suma;
            i++;
        }
    }
    int fibniz(int n)
    {   
                int x,y,z;
        if(n<0)return 0;
        if(n==1)return 1;
        x=1;
        y=1;
        while(1)
        {
            z=x+y;
            if(n==z)return 1;
            else if(z>n)return 0;
            x=y;
            y=z;
        }
    }
    int izbaci(int *niz, int vel)
    {
        int i,a,j,*p;
        p=niz;
        for(i=0; i<vel; i++)   
        {
            a=fibniz(*(p+i));
            if(a==1)    
            {
                for(j=i; j<vel-1; j++)  
                {
                    *(p+j)=*(p+j+1);
                }
                vel--;
                i--;
            }
        }
        return vel;
    }
    int main()  {
        int niz[20],i,vel=10,a;
        printf(""Unesite niz od 10 brojeva:"");
        for(i=0; i<vel; i++)
        {
            scanf(""%d"", &niz[i]);
        }
        ubaci(niz,vel);
        a=izbaci(niz,2*vel);
         printf("" Modificirani niz glasi: "");
        for(i=0; i<a-1; i++)
        {
            printf(""%d, "", niz[i]);
        }
            printf(""%d."", niz[i]);
        return 0;
    }

        
        
        
        
        
        
        
        ","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
void ubaci(int *niz1,int velicina) {
	int *a,*b;
	int i,c,d,suma_cifara;
	a=b=niz1;
	/*Na posljednje mjesto niza postavljamo pokazivac*/ 
	for(i=(velicina-1);i>0;i--)
	{
		*(b+(2*i))=*(a+i);
		
	}
	a=niz1;
	for(i=0;i<velicina*2;i++) {
		suma_cifara=0;
		/* Uzimamo pozitivne vrijednosti zbog sume */
		c=*(a+i);
		c=abs(c);
		do {
			d=c%10;
			c=c/10;
			suma_cifara=suma_cifara+d;
			
		} while (c!=0);
		/* Upisujemo sumu u sljedeci clan */
		*(a+i+1)=suma_cifara;
		i++;
		
	}
	
}
int Fibon_niz(int f) {
	int e,g,h;
	if(f==1) 
	{ 
		return 1;
		
	}
	if(f<0) 
	{
		return 0;
		
	}
	e=1;
	g=1;
	while(1) {
		h=(e+g);
		if(h>f) 
		{
			return 0;
			
		}
		else if(f==h) 
		{
			return 1;
			
		}
		e=g;
		g=h;
		
	}

}
int izbaci( int *niz1, int velicina) {
	int i,c,j;
	int *a;
	a=niz1;
	for(i=0;i<velicina;i++) 
	{
		c=Fibon_niz(*(a+i));
		if(c==1)
		/*Ako pripada Fibonaccijevom nizu izbacujemo ga */
		{
			for(j=i;j<(velicina-1);j++) 
			{
				*(a+j)=*(a+j+1);
				
			}
			velicina--;
			i--;
		}
	}
	return velicina;
	
}
int main() {
	int niz1[20],i,c;
	int velicina=10;
	printf(""Unesite niz od 10 brojeva:"");
	for(i=0;i<velicina;i++) 
	{
		scanf(""%d"", &niz1[i]);
		
	}
	/*Velicina niza nakon funkcije je duplo veca od prvobitnog niza*/
	ubaci(niz1,velicina);
	c=izbaci(niz1,velicina*2);
	printf("" Modificirani niz glasi: "");
	for(i=0;i<(c-1);i++)
	{
		printf(""%d, "", niz1[i]);
			
		}  
		printf(""%d. "", niz1[i]);
	
	return 0;
}




















"
100,68,68,0,80,A2016/Z3/Z2/student3732,A2016/Z3/Z2/student9385,"#include <stdio.h>
#include<stdlib.h>
#include <math.h>
#define broje_elemenata 10
void ubaci(int *niz, int duzina_niza)
{
	int i,broj,broj2=0,cifra;
	for(i=duzina_niza-1;i>=0;i--)
	{
		niz[2*i]=niz[i];
	}
	for(i=0;i<2*duzina_niza;i+=2)
	{
		broj=abs(niz[i]);
		if(broj<10)
		{
			broj2=broj;
		}
		else
		{
			do
			{
				cifra=broj%10;
				broj2=broj2+cifra;
				broj=broj/10;
			}while(broj!=0);
		}
		niz[i+1]=broj2;
		broj2=0;
	}
}
/*funkcija treba vratiti broj elmenata*/
int izbaci(int *niz,int duzina_niza)
{
	/*fibonacijevi brojevi*/
	int prvi,drugi,treci;
	int i,j,k;
	for(k=0;k<duzina_niza;k++)
	{
		prvi=0;
		drugi=1;
		for(i=1;i<10000;i++)
		{
			
			if(i==1)
			{
				treci=1;
			}
			else
			{
				treci=prvi+drugi;
				prvi=drugi;
				drugi=treci;
			}
			if(niz[k]==treci)
			{
				for(j=k;j<duzina_niza-1;j++)
				{
					niz[j]=niz[j+1];
				}
				duzina_niza--;
				k--;
				break;
			}
		}
	}	
	return duzina_niza;
}

int main() {
	int niz[2*broje_elemenata],i;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	{
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,broje_elemenata);
	int funkcija;
	funkcija=izbaci(niz,2*broje_elemenata);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<funkcija;i++)
	{
		if(i==funkcija-1)
		{
			printf(""%d."",niz[i]);
		}
		else
		{
			printf(""%d, "",niz[i]);
		}
	}
	return 0;
}
","#include <stdio.h>
#include<math.h>
#include<stdlib.h>
void ubaci (int *niz, int DUPLO)
{
    int m,rastavi_cifru=0,zbir_cifara=0,elem;
                                                   /*pripremamo niz i prosirujemo ga*/
    for(m=DUPLO-1; m>=0; m--)
    {
        niz[2*m]=niz[m];                             /*NIz prosiren*/
    }
                                                /*U slucajuu da ne dode do greske*/
    for(m=0; m<2*DUPLO; m+=2)
    {
        elem=abs(niz[m]);
        if(elem<10)
        {
            zbir_cifara=elem;
        }
        else
        {
        
      do {
            rastavi_cifru=elem%10;      /*petlja racuna zbir cifara i novi elem koji unosi u petlju sve dok taj elem nije nula*/
           zbir_cifara=zbir_cifara+rastavi_cifru;
           elem=elem/10;
        } while(elem!=0);
        
         }                                                         /*ubacujem dobiveni zbir cifre izmedju dva elem i dodijelim mu dobiveni broj*/
         niz[m+1]=zbir_cifara;
             zbir_cifara=0;
         
    }
}
                                                       /*NOVA FUNKCIJA ZA IZBACIVANJE CLANOVA*/
                                                       
        
             
    int izbaci(int*niz, int DUPLO)                                /*funkcija izbacuje fibonacci brojeve iz niza*/
    {
            int i,j,prvi_broj=1,drugi_broj=1,zbir_brojeva=0;
            for(i=0; i<DUPLO; i++)
            {
                prvi_broj=1;
                drugi_broj=1;
                
                    for(j=i; j<1000; j++)
                    {
                        if(j==1)
                        {
                            zbir_brojeva=1;
                        }
                        else {
                            zbir_brojeva=prvi_broj+drugi_broj;
                            prvi_broj=drugi_broj;
                            drugi_broj=zbir_brojeva;
                        }
                        if(niz[i]==zbir_brojeva)
                        {
                            for(zbir_brojeva=i; zbir_brojeva<DUPLO-1; zbir_brojeva++)
                            {
                                niz[zbir_brojeva]=niz[zbir_brojeva+1];
                            }
                            DUPLO--;
                            i--;
                            break;
                        }
                    
                }
            }
            return DUPLO;
            
        
        
}
    
int main() {
  int niz[100],i,mojniz,duzina_niza=0;
  printf(""Unesite niz od 10 brojeva: "");
  for(i=0; i<20; i++)
   {
       duzina_niza++;
       scanf(""%d"", &niz[i]);
   }
   ubaci(niz, duzina_niza);
   mojniz=(niz, duzina_niza);
   
    printf(""Modificiran niz glasi: "");
    for(i=0; i<mojniz; i++)
    {
        if(i==mojniz-1)
        {
        printf(""%d."", niz[i]);
        }
    
    else {
        printf(""%d"", niz[i]);
    }
    }
	return 0;
    }
"
111,73,73,0,11,A2016/Z2/Z1/student2755,A2016/Z2/Z1/student1616,"#include <stdio.h>
#include <math.h>

int main() {
	int n=0, k=1, cifra1=0, cifra2=0, novi=0;
	
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	n=fabs(n);
	
	while(n>=10) {
		cifra1=n%10;
		cifra2=(n/10)%10;
		novi = novi + fabs(cifra1-cifra2)*k;
		k*=10;
		n/=10;
	}
	
	printf(""%d"", novi);
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include<math.h>
int main () {
	int n,c1=0,c2=0,r=0,k=1;
	printf (""Unesite broj: "");
	scanf (""%d"", &n);
	n=fabs(n);
	while (n>9)  {

    c1=n%10;
    c2=(n/10)%10;
    r=r+abs(c1-c2)*k;
    n=n/10;
    k*=10;
    }
    printf(""%d"",r);
	return 0;
}"
112,11,11,0,30,A2016/Z5/Z2/student6956,A2016/Z5/Z2/student2142,"#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define vel 100
void unesi(char niz[], int velicina){
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<velicina && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
void swap(char*p, char*q){
	char temp[vel];
	strcpy(temp,p);
	strcpy(p,q);
	strcpy(q,temp);
}
int slovo(int a){
	if(a>='A' && a<='Z' || a<='z' && a>='a')
	return 1;
	
	return 0;
}
void kompresuj(char* naziv, char*naziv1){
	char rijeci[1000][1000]={0};
	int duzina;
	char znak;
	int i, broj_rijeci=0;
	int brojac[1000]={0};
	FILE* ulaz;
	FILE* ulaz1;
	FILE* izlaz;
	char rijec[1000];
	ulaz=fopen(naziv,""r"");
	if(ulaz==NULL){
		printf(""Greska\n"");
		exit(1);
	}
	ulaz1=fopen(naziv, ""r"");
	if(ulaz1==NULL){
		printf(""Greska\n"");
		fclose(ulaz);
		exit(1);
	}
	izlaz=fopen(naziv1,""w"");
	if(izlaz==NULL){
		printf(""Greska\n"");
		fclose(ulaz);
		fclose(ulaz1);
		exit(1);
	}
	znak=fgetc(ulaz);
	while(znak!=EOF){
		duzina=0;
		while(slovo(znak)==1){
			rijec[duzina]=znak;
				znak=fgetc(ulaz);
				duzina++;
		}
		
		rijec[duzina] = '\0';
		
		if(duzina!=0 && duzina<=9){
			int j, ima;
			ima=0;
			
			for(j=0; j<broj_rijeci; j++){
				if(strcmp(rijeci[j], rijec)==0){
					ima=1;
					brojac[j]++;
					
					break;
				}
			}
			
			if(ima!=1){
				strcpy(rijeci[broj_rijeci], rijec);
				
				brojac[broj_rijeci++] = 1;
			}
		}
		
		znak=fgetc(ulaz);
		
		
	}
	
	int k;
	
	for(i=0; i<broj_rijeci; i++){
		for(k=i+1; k<broj_rijeci; k++){
			if((strcmp(rijeci[i], rijeci[k])==1 && brojac[k]==brojac[i]) || brojac[i]<brojac[k]){
				int temp;
				temp=brojac[k];
				brojac[k]=brojac[i];
				brojac[i]=temp;
				swap(rijeci[i], rijeci[k]);
			}
		}
	}
	
	char novi_red; int kraj;
	kraj=10;
	novi_red='\n';
	
	if(broj_rijeci<10) kraj=broj_rijeci;
	for(i=0; i<kraj; i++){
		fputs(rijeci[i],izlaz);
		fputc(novi_red, izlaz);
	}
	
	char c;
	c=fgetc(ulaz1);
	
	while(c!=EOF){
		duzina=0;
		while(slovo(c)==1){
			rijec[duzina]=c;
			duzina++;
			c=fgetc(ulaz1);
		}
		rijec[duzina] = '\0';
		
		int kont;
		kont=0;
		int j;
		if(duzina!=0 && duzina<10){
			for(j=0;j<kraj;j++){
				if(strcmp(rijeci[j], rijec)==0){
					char z;
					kont=1;
					z=j+20;
					fputc(z,izlaz);
					fputc(c, izlaz);
					break;
					
				}
			}
		}
		
		
		if(kont==0){
			char*r=rijec;
			
			while(*r !='\0'){
				fputc(*r,izlaz);
				r++;
			}
			fputc(c,izlaz);
		}
		
		c=fgetc(ulaz1);
	}
	
	
	printf(""Datoteka kompresovana.\n"");
	
	fclose(izlaz);
	fclose(ulaz);
	fclose(ulaz1);
}

void dekompresuj(char*naziv, char* naziv1){
	int broj_rijeci=0, brojac_krajeva=0, kontr=0;
	int duzina =0;
	char rijeci[1000][1000]={0};
	char rijec[1000];
	FILE* ulaz;
	FILE* ulaz1;
	FILE* izlaz;
	
	ulaz=fopen(naziv,""r"");
	
	
	ulaz1=fopen(naziv, ""r""); 

	
	izlaz=fopen(naziv1, ""w"");

	int n=0;
	char znak;
	znak=fgetc(ulaz);
	int j;
	
	while(znak!=EOF){
		duzina=0;
		kontr=0;
		while(slovo(znak)==1){
			rijec[duzina++]=znak;
			znak=fgetc(ulaz);
		}
		
		rijec[duzina] = '\0';
		
		if(duzina!=0 && duzina<=9){
			strcpy(rijeci[broj_rijeci], rijec);
		for(j=0; j<broj_rijeci; j++){
			if(strcmp(rijeci[j], rijec)==0){
				kontr=1;
				
				break;
			}
		}
		
		if(kontr==1) break;
		
		broj_rijeci++;
		}
		
		znak=fgetc(ulaz);
	}
	brojac_krajeva=0;
	char c=fgetc(ulaz1);
	
	while(c!=EOF){
	
		if(c=='\n') 
		brojac_krajeva++;
		if(broj_rijeci==brojac_krajeva) break;
		c=fgetc(ulaz1);
	}
	
	c=fgetc(ulaz1);
	
	while(c!=EOF){
		n=0;
		if(c<31 && c>19){
			n=1;
			char*p=rijeci[c-20];
			
			
			while(*p != '\0'){
				fputc(*p, izlaz);
				p++;
			}
		}
		
		if(n==0)
		fputc(c,izlaz);
		
		c=fgetc(ulaz1);
	}
	
	printf(""Datoteka dekompresovana.\n"");
	
	fclose(ulaz);
	fclose(ulaz1);
	fclose(izlaz);
	
}


int main() {
	char p[vel];
	char s[vel];
	int opcija;
	
	do{
		printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
		scanf(""%d"", &opcija);
		
		switch(opcija){
			case 1:
			printf(""Unesite ime ulazne datoteke: "");
			unesi(s,40);
			printf(""Unesite ime izlazne datoteke: "");
			unesi(p,40);
			kompresuj(s,p);
			break;
			case 2:
			printf(""Unesite ime ulazne datoteke: "");
			unesi(s,40);
			printf(""Unesite ime izlazne datoteke: "");
			unesi(p,40);
			dekompresuj(s,p);
			
		} 
	} while(opcija!=0);
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void unesi(char niz[], int velicina) {
    char znak = getchar();
    if (znak == '\n') znak = getchar();
    int i = 0;
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i] = '\0';
}

void zapisiKompresovaniTekst(char* ime_ulaza, char* ime_izlaza, char rijeci[][10], int* indeksi, int *ponavljanja){
    FILE* ulaz = fopen(ime_ulaza, ""r"");
    FILE* izlaz = fopen(ime_izlaza, ""a+"");
    char znak1 = fgetc(ulaz);
    while (znak1 != EOF){
        //Upisujem sve razmake, nove redove...
        while((znak1 < 'A' || znak1 > 'Z' && znak1 < 'a' || znak1 > 'z') && znak1 != EOF){
            fputc(znak1, izlaz);
            znak1 = fgetc(ulaz);
        }
        if (znak1 == EOF) break;
        //provjeravam da li se rijec nalazi na tabeli
        int zamjena = 0, vel_trenutne_rijeci = 0;
        char trenutna_rijec[10];
        long long pocetak_rijeci = ftell(ulaz) - 1;
        while((znak1 >= 'A' && znak1 <= 'Z' || znak1 >= 'a' && znak1 <= 'z') && znak1 != EOF){
            trenutna_rijec[vel_trenutne_rijeci++] = znak1;
            znak1 = fgetc(ulaz);
            if (vel_trenutne_rijeci == 10)  break;
        }
        if (vel_trenutne_rijeci > 1 && vel_trenutne_rijeci < 10) {
            trenutna_rijec[vel_trenutne_rijeci] = '\0';
            int i = 0;
            while (i < 10) {
                if (ponavljanja[i] == 0) break;
                if (strcmp(rijeci[indeksi[i]], trenutna_rijec) == 0) {
                    zamjena = 20 + i;
                    break;
                }
                i++;
            }
        }
        if(zamjena){
            fputc(zamjena, izlaz);
            while((znak1 >= 'A' && znak1 <= 'Z' || znak1 >= 'a' && znak1 <= 'z') && znak1 != EOF) znak1 = fgetc(ulaz);
        }
            //Ako se rijec ne nalazi u tabeli onda je samo prepisem
        else {
            fseek(ulaz, pocetak_rijeci, SEEK_SET);
            znak1 = fgetc(ulaz);
            while((znak1 >= 'A' && znak1 <= 'Z' || znak1 >= 'a' && znak1 <= 'z') && znak1 != EOF){
                fputc(znak1, izlaz);
                znak1 = fgetc(ulaz);
            }
        }
    }
    fclose(ulaz);
    fclose(izlaz);

}

int porediLeksikografski(char* rijec1, char* rijec2) {
    int i = 0;
    while (rijec1[i] != '\0' && rijec2[i] != '\0' && rijec1[i] == rijec2[i]) i++;
    if (rijec1[i] != '\0' && rijec2[i] != '\0') return rijec1[i] < rijec2[i];
    if (rijec1[i] != '\0' && rijec2[i] == '\0') return 0;
    if(rijec1[i] == '\0' && rijec2[i] != '\0') return 1;
    return 0;
}

void ubaciRijecUNajbrojnije(char rijeci[][10], int* indeksi,  int *ponavljanja, char* rijec, int indeks_rijeci, int ponavljanje_rijeci) {
    int i = 0;
    while (i < 10) {
        if (ponavljanja[i] == 0) {
            indeksi[i] = indeks_rijeci;
            ponavljanja[i] = ponavljanje_rijeci;
            return;
        }
        /* ukoliko primljena rijec se ponavlja veci broj puta od neke druge rijeci ili
          ukoliko je broj ponavljanja isti a rijec leksikografski prednjaci zamijeni sa trenutnom */
        if (ponavljanje_rijeci > ponavljanja[i] ||
            (ponavljanje_rijeci == ponavljanja[i] && porediLeksikografski(rijec, rijeci[indeksi[i]]) == 1)) {
            // stavi rijec na ovo mjesto a sve ostale pomjeri dalje
            int j = 9;
            while (j > i) {
                int temp_ponavljanja, temp_indeks;
                temp_ponavljanja = ponavljanja[j];
                ponavljanja[j] = ponavljanja[j - 1];
                ponavljanja[j - 1] = temp_ponavljanja;
                temp_indeks = indeksi[j];
                indeksi[j] = indeksi[j-1];
                indeksi[j-1] = temp_indeks;
                j--;
            }
            ponavljanja[i] =  ponavljanje_rijeci;
            indeksi[i] = indeks_rijeci;
            break;
        }
        i++;
    }
}

int nadjiRijec(char rijeci[][10], char* rijec, int broj_rijeci) {
    int i = -1;
    while (++i < broj_rijeci) {
        int j = 0;
        while (rijeci[i][j] != '\0' && rijec[j] != '\0' && rijeci[i][j] == rijec[j]) j++;
        if (rijeci[i][j] == '\0' && rijec[j] == '\0') return i;
    }
    return -1;
}

void kompresuj(char *ime_ulaza, char* ime_izlaza) {
    FILE *ulazna_datoteka = fopen(ime_ulaza, ""r"");
    char rijeci[1000][10];
    int ponavljanja_rijeci[1000] = {0}, broj_rijeci = 0;
    char znak = fgetc(ulazna_datoteka);
    // Naci sva ponavljanja rijeci
    while (znak != EOF){
        char trenutna_rijec[10];
        int vel_trenutne_rijeci  = 0;
        // Preskacemo sve znakove koji nisu slova
        while ((znak < 'A' || znak > 'Z' && znak < 'a' || znak > 'z') && znak != EOF) znak = fgetc(ulazna_datoteka);
        // Dosli smo do rijeci, ucitamo je ako je manja od 10 znakova
        while((znak >= 'A' && znak <= 'Z' || znak >= 'a' && znak <= 'z') && znak != EOF){
            trenutna_rijec[vel_trenutne_rijeci++] = znak;
            znak = fgetc(ulazna_datoteka);
            // Ako rijec ima vise od 10 znakova idemo do kraja rijeci i nastavljamo dalje
            if (vel_trenutne_rijeci == 10) {
                while((znak >= 'A' && znak <= 'Z' || znak >= 'a' && znak <= 'z') && znak != EOF) znak = fgetc(ulazna_datoteka);
                break;
            }
        }
        if (vel_trenutne_rijeci > 1 && vel_trenutne_rijeci < 10) {
            trenutna_rijec[vel_trenutne_rijeci] = '\0';
            int indeks_rijeci = nadjiRijec(rijeci, trenutna_rijec, broj_rijeci);
            if (indeks_rijeci != -1) ponavljanja_rijeci[indeks_rijeci]++;
            else {
                strcpy(rijeci[broj_rijeci], trenutna_rijec);
                ponavljanja_rijeci[broj_rijeci]++;
                broj_rijeci++;
            }
        }
    }
    // Naci deset najbrojnijih rijeci
    int indeksi_najbrojnijih[10] = {0};
    int ponavljanja_najbrojnijih[10] = {0};
    int i = 0;
    for (i = 0; i < broj_rijeci; i++) {
        ubaciRijecUNajbrojnije(rijeci, indeksi_najbrojnijih, ponavljanja_najbrojnijih, rijeci[i], i, ponavljanja_rijeci[i]);
    }

    // Zapisi pronadjene rijeci u izlaznu datoteku
    FILE* izlazna_datoteka = fopen(ime_izlaza, ""w+"");
    // Zapisujemo tabelu rijeci
    i = 0;
    while (i < 10) {
        if (ponavljanja_najbrojnijih[i] != 0){
            int j = 0;
            while (rijeci[indeksi_najbrojnijih[i]][j] != '\0') {
                fputc(rijeci[indeksi_najbrojnijih[i]][j++], izlazna_datoteka);
            }
        }
        else {
            fprintf(izlazna_datoteka, ""\n"");
            break;
        }
        fprintf(izlazna_datoteka, ""\n"");
        i++;
    }
    //Nakon sto se napravi tabela rijeci mora da se zatvori izlazna datoteka zbog daljeg dopisivanja u nju iz druge funkcije
    //Dok za ulaznu nije obavezno ali je dobro zbog smanjenja koristene memorije
    fclose(ulazna_datoteka);
    fclose(izlazna_datoteka);
    zapisiKompresovaniTekst(ime_ulaza, ime_izlaza, rijeci, indeksi_najbrojnijih, ponavljanja_najbrojnijih);
    printf(""Datoteka kompresovana.\n"");

}

void dekompresuj(char*ime_ulaza, char* ime_izlaza){
    FILE* ulaz = fopen(ime_ulaza, ""r"");
    FILE* izlaz = fopen(ime_izlaza, ""w+"");
    if (ulaz == NULL || izlaz == NULL) exit(1);
    char znak = fgetc(ulaz);
    int brojac_rijeci = 0;
    char rijeci[10][10];
    if (znak == '\n'){
        printf(""Nema rijeci u tabeli"");
        fclose(ulaz);
        return;
    }
    // Ucitavamo rijeci iz tabele
    while (znak != '\n'){
        int j = 0;
        while (znak != '\n') {
            rijeci[brojac_rijeci][j++] = znak;
            znak = fgetc (ulaz);
        }
        rijeci[brojac_rijeci][j] = '\0';
        brojac_rijeci++;
        if (brojac_rijeci == 10) break;
        znak = fgetc(ulaz);
    }

    // Dosli smo do teksta
    znak = fgetc(ulaz);
    char max_code = brojac_rijeci - 1 + 20;
    char min_code = 20;
    while (znak != EOF) {
        // Prepisi sve znakove koji nisu slova
        while ((znak < 'A' || znak > 'Z' && znak < 'a' || znak > 'z') && znak != EOF && (znak < min_code || znak > max_code)) {
            fputc(znak, izlaz);
            znak = fgetc(ulaz);
        }
        if (znak == EOF) break;
        // Ako je znak jedan od kodova provjeri da nije u sklopu rijeci i nadji indeks odgovarajuce rijeci
        int index_rijeci = -1;
        if (znak >= min_code && znak <= max_code) {
            char temp_znak = znak;
            znak = fgetc(ulaz);
            if ((znak < 'A' || znak > 'Z' && znak < 'a' || znak > 'z')) {
                index_rijeci = temp_znak % 20;
            } else {
                fputc(temp_znak, izlaz);
            }
        }
        // Ako je indeks odgovarajuce rijeci pronadjen zapisi je
        if (index_rijeci != -1) {
            // Zapisujemo zamjensku rijec
            int i = 0;
            while (rijeci[index_rijeci][i] != '\0') {
                fputc(rijeci[index_rijeci][i++], izlaz);
            }
        }
        // Prepisi ostatak rijeci koja nije imala zamjenu
        while((znak >= 'A' && znak <= 'Z' || znak >= 'a' && znak <= 'z') && znak != EOF) {
            fputc(znak, izlaz);
            znak = fgetc(ulaz);
        }
    }


    fclose(ulaz);
    fclose(izlaz);
    printf(""Datoteka dekompresovana.\n"");
}

int main() {
    int odabir;
    char ime_ulazne_datoteke[1000];
    char ime_izlazne_datoteke[1000];
    do {
        printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
        scanf(""%d"", &odabir);
        switch (odabir){
            case 1:
                printf(""Unesite ime ulazne datoteke: "");
                unesi(ime_ulazne_datoteke, 1000);
                printf(""Unesite ime izlazne datoteke: "");
                unesi(ime_izlazne_datoteke, 1000);
                kompresuj(ime_ulazne_datoteke, ime_izlazne_datoteke);
                break;
            case 2:
                printf(""Unesite ime ulazne datoteke: "");
                unesi(ime_ulazne_datoteke, 1000);
                printf(""Unesite ime izlazne datoteke: "");
                unesi(ime_izlazne_datoteke, 1000);
                dekompresuj(ime_ulazne_datoteke, ime_izlazne_datoteke);
                break;
            case 0:
                return 0;
            default:
                break;
        }
        printf (""\n"");
    } while (odabir != 0);
    return 0;
}"
114,87,87,0,57,A2016/Z2/Z2/student9972,A2016/Z2/Z2/student2406,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926
int main() {
    double niz[500];
    int i,j,n;
    double stepeni, minute, sekunde;
    double ugao;
    printf(""Unesite broj uglova: "");
    scanf(""%d"",&n);
   for(i=0;i<n;i++) {
       scanf(""%lf"",&niz[i]);
   }
   for(i=0;i<n;i++){
       ugao=fabs((niz[i]*180)/PI);
       minute=(ugao-(int)ugao)*60;
       sekunde=round((minute-(int)minute)*60);
       if(sekunde==60) {sekunde=0, minute++;}
       if(sekunde>30) {
    for(j=i; j<n-1;j++) {
niz[j]=niz[j+1]; }
n--;
i--;
}
}
printf(""Uglovi su:\n"");
for(i=0; i<n; i++) {
    ugao=(niz[i]*180)/PI;
    minute=fabs((ugao-(int)ugao)*60);
    sekunde=round((minute-(int)minute)*60);
    stepeni=(int)ugao;
    minute=(int)minute;
    sekunde=round(sekunde);
    if(stepeni>=0) {
        if(sekunde==60) {sekunde=0;minute++;}
        if(minute==60){minute=0; stepeni++;}}
    if (stepeni<0) {
        if(sekunde==60) {sekunde=0; minute++;}
        if(minute==60) {minute=0; stepeni--;}}
        printf(""%.f stepeni %.f minuta %.f sekundi\n"",stepeni,minute,sekunde);
    }
    return 0; }","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define PI 3.1415926
int main() {
	
	double niz[500], stepeni, minute, sekunde;
	double u;
	int  j, i, x;
	
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &x); 
		for(i=0;i<x;i++)
		{
			scanf(""%lf"", &niz[i]);
		}
		for(i=0;i<x;i++)
{
		u=fabs((niz[i]*180)/PI);
		minute=(u-(int)u)*60;
		sekunde=round((minute-(int)minute)*60);
		if(sekunde==60)
		{sekunde=0; minute++;}
		if (sekunde>30){
			for(j=i;j<x-1;j++)
			{
				niz[j]=niz[j+1];
			}
		x--;
		i--;
		}
}
	
	printf(""Uglovi su:\n"");
	for(i=0;i<x;i++){
		u=(niz[i]*180)/PI;
		minute=fabs((u-(int)u)*60);
		sekunde=round((minute-(int)minute)*60);
		
		stepeni=(int)u;
		minute=(int)minute;
		sekunde=round(sekunde);
		
			if(stepeni>0){
				if(sekunde==60){
					sekunde=0; minute++;}
					if(minute==60){
						minute=0; stepeni++;
					}
					
				}
				
				if(stepeni<0){
					if(sekunde==60)
					{sekunde=0;minute++;}
					if(minute==60)
					{minute=0;stepeni--;}}
					printf(""%.f stepeni %.f minuta %.f sekundi\n"", stepeni, minute, sekunde);
					
				}
				
				
			
	
	
	
	return 0;
}
"
120,99,99,0,69,A2016/Z3/Z3/student8774,A2016/Z3/Z3/student8753,"#include <stdio.h>

int main() {
	int i,j,k,l;
	int m,n,isti;
	int niz[200][200];
	
	do {
		printf (""Unesite brojeve M i N: "");
		scanf (""%d %d"", &m,&n);
		if (m<=0 || m>200 || n<=0 || n>200)
		printf (""Brojevi nisu u trazenom opsegu.\n"");
	}
	while (m<=0 || m>200 || n<=0 || n>200);
	
	printf (""Unesite elemente matrice: "");
	for (i=0;i<m;i++){
		for (j=0;j<n;j++){
			scanf (""%d"", &niz[i][j]);
		}
	}
	//provjeravanje clanova matrice// 
	for (i=0;i<m;i++){
		for (j=i+1;j<m;j++){
			isti=1;
			for (k=0;k<n;k++){
				if (niz[i][k]!=niz[j][k]){
					isti=0;
				}
			}//kraj provjere//
			if (isti==1){
				for (k=j;k<n-1;k++){
					for (l=0;l<m;l++){
						niz[k][l]=niz[k+1][l];
					}
				}
				m--;
				j--;
			}
		}
	}//smanjivanje//
	//isti postupak,samo po drugom kriteriju//
	for (i=0;i<n;i++){
		for (j=i+1;j<n;j++){
			isti=1;
			for (k=0;k<m;k++){
				if (niz[k][i]!=niz[k][j]){
					isti=0;
				}
			}
		if (isti==1){
			for (k=j;k<n-1;k++){
				for (l=0;l<m;l++){
					niz[l][k]=niz[l][k+1];
				}
			}
			n--;
			j--;
		  }
		}
	}
	
	printf (""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for (i=0;i<m;i++){
		for (j=0;j<n;j++){
			printf (""%5d"", niz[i][j]);
		}
		printf (""\n"");
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	int i,j,k,l;
	int m,n,isti;
	int niz[200][200];
	
	do {
		printf (""Unesite brojeve M i N: "");
		scanf (""%d %d"", &m,&n);
		if (m<=0 || m>200 || n<=0 || n>200)
		printf (""Brojevi nisu u trazenom opsegu.\n"");
	}
	while (m<=0 || m>200 || n<=0 || n>200);
	
	printf (""Unesite elemente matrice: "");
	for (i=0;i<m;i++){
		for (j=0;j<n;j++){
			scanf (""%d"", &niz[i][j]);
		}
	}
	//provjeravanje clanova matrice// 
	for (i=0;i<m;i++){
		for (j=i+1;j<m;j++){
			isti=1;
			for (k=0;k<n;k++){
				if (niz[i][k]!=niz[j][k]){
					isti=0;
				}
			}//kraj provjere//
			if (isti==1){
				for (k=j;k<n-1;k++){
					for (l=0;l<m;l++){
						niz[k][l]=niz[k+1][l];
					}
				}
				m--;
				j--;
			}
		}
	}//smanjivanje//
	//isti postupak,samo po drugom kriteriju//
	for (i=0;i<n;i++){
		for (j=i+1;j<n;j++){
			isti=1;
			for (k=0;k<m;k++){
				if (niz[k][i]!=niz[k][j]){
					isti=0;
				}
			}
		if (isti==1){
			for (k=j;k<n-1;k++){
				for (l=0;l<m;l++){
					niz[l][k]=niz[l][k+1];
				}
			}
			n--;
			j--;
		  }
		}
	}
	
	printf (""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for (i=0;i<m;i++){
		for (j=0;j<n;j++){
			printf (""%5d"", niz[i][j]);
		}
		printf (""\n"");
	}
	
	return 0;
}
"
126,49,49,0,21,A2016/Z3/Z1/student3943,A2016/Z3/Z1/student4526,"#include <stdio.h>

 int daj_prost()
{
	 int i;
	static   int a=1;
	a++;
	for(i=2; i<a; i++) {
		if(a%i==0) {     /*Nalazenje prosstog broja u funkciji*/
			a++;
			i=2;
		}
	}
	return a;
}





int main()
{
	  int A,B;
	do {
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"",&A,&B);
		if(A<=0) printf(""A nije prirodan broj.\n"");
		else {
			if(A>=B) printf(""A nije manje od B.\n"");
			else if(B<=0) printf(""B nije prirodan broj.\n"");
		}

	} while(!(A<B && (A>0 && B>0))); /*Unos prirodnih brojeva A i B */
	 int suma=0,i,prost;
	for(i=0; i<B; i++) {
		prost=daj_prost();
		if(prost>A && prost<B) suma=suma+prost; /*Izračunavanje sume*/
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
	return 0;
}
","#include <stdio.h>
int daj_prost(){/*funkcija za nalazenje prostih brojeva*/
long int k;
static long int a=1;a++;/*staticka promjenjiva zadrzava svoju vrijednost*/
	for(k=2;k<a;k++){
		if(a%k==0){
			a++;
		k=2;	}}return a;}/*vracamo vrijednost a */
int main() {
long int A,B,suma=0,broj,i;
do{printf(""\nUnesite brojeve A i B: "");scanf(""%ld %ld"", &A, &B);
if(A>=B){printf(""A nije manje od B."");}
else if(A<=0){printf(""A nije prirodan broj."");}}
while(A<=0 || A>=B);


for(i=0;i<B;i++){broj=daj_prost();if(broj>A && broj<B){suma=suma+broj;}}/*racunanje svih prostih brojeva
između brojeva unesenih između A i B*/
printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B, suma);
	return 0;
}
"
130,72,72,0,18,A2016/Z2/Z1/student7386,A2016/Z2/Z1/student2406,"#include <stdio.h>
#include <stdlib.h>
 
int main() {
	int n,m=0,x=1,c1,c2,r;
	printf(""Unesite broj: "");
	scanf(""%d"",&n);
	n=abs(n);
	if(n<10){
		printf(""0""); return 0;
	}
	do {
		c1=n%10;
		n=n/10;
		c2=n%10;
		r=abs(c1-c2);
		m=m+x*r;
		x=x*10;
	}
	while(n>9);
	printf(""%d"",m);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
int main() {

int a, c=0, cifra1, cifra2, b=1, razlika;
printf(""Unesite broj: "");
scanf(""%d"", &a);
 a=abs(a);

if(a<10)
{printf(""0""); 
return 0;}

do { 
	cifra1=a%10;
	a=a/10;
	cifra2=a%10;
	razlika=abs(cifra1-cifra2);
	c=c+b*razlika;
	b=b*10;
}
while(a>9);
printf(""%d"", c);
return 0;

}
"
134,98,98,0,86,A2016/Z4/Z3/student8774,A2016/Z4/Z3/student8753,"#include <stdio.h>

int provjera(char* p,char* q){
    int jesu=1;
    while(*q!='\0'){
        if(*q++!=*p++){
            jesu=0;
            break;
        }
        if(*q=='\0' && (*p!=' ' && *p!='\0')){
            jesu=0;
            break;
        }
    }
    return jesu;
}

void zamjena(char* rec,char* rijec){
    while(*rijec!='\0'){
        *rec++=*rijec++;
    }
    rec++;
}

int dict(char** rijeci,char** zamjene,int broj_rijeci){
    int i=0,jesu=1;
    char* s,* s1;
    for(i=0;i<broj_rijeci;i++){
        s=rijeci[i];
        s1=zamjene[i];
        while(*s!='\0' || *s1!='\0'){
            if(*s++!=*s1)
            jesu=0;
        }
        if(jesu==0) break;
    }
    return jesu;
}
char* zamjena_rijeci(char* tekst,char** rijeci,char** zamjene,int broj_rijeci){
    char*p=tekst;
    char*s,*t,*k,*h;
    int i,brojac;
    if (dict(rijeci,zamjene,broj_rijeci))
    return tekst;
    while(*p!='\0'){
        if(p==tekst || *(p-1)==' '){
            while(*p==' ') p++;
            t=p;
            for(i=0;i<broj_rijeci;i++){
                brojac=0;
                p=t;
                s=rijeci[i];
                
                if (provjera(p,s)){
                    k=t;
                    while(*p!='\0' && *p!=' ')
                    p++;
                    
                    while(*p!='\0'){
                        *k++=*p++;
                    }
                    *k='\0';
                    p=t;
                    s=zamjene[i];
                    while(*s!='\0'){
                        brojac++;
                        s++;
                    }
                    h=k+brojac;
                    p--;
                    while(k!=p){
                        *h--=*k--;
                    }
                    s=zamjene[i];
                    zamjena(t,s);
                }
            }
        }
        p++;
    }
    return tekst;
}

int main() {
    char tekst[100]=""beli sneg je pokrio beli breg"";
    char* rijeci[2]={""beli"",""sneg""};
    char* zamjene[2]={""bijeli"",""snijeg""};
    printf(""%s"",zamjena_rijeci(tekst,rijeci,zamjene,2));
    return 0;
}
","#include <stdio.h>

int provjera(char* p,char* q){
    int jesu=1;
    while(*q!='\0'){
        if(*q++!=*p++){
            jesu=0;
            break;
        }
        if(*q=='\0' && (*p!=' ' && *p!='\0')){
            jesu=0;
            break;
        }
    }
    return jesu;
}

void zamjena(char* rec,char* rijec){
    while(*rijec!='\0'){
        *rec++=*rijec++;
    }
    rec++;
}

int dict(char** rijeci,char** zamjene,int broj_rijeci){
    int i=0,jesu=1;
    char* s,* s1;
    for(i=0;i<broj_rijeci;i++){
        s=rijeci[i];
        s1=zamjene[i];
        while(*s!='\0' || *s1!='\0'){
            if(*s++!=*s1)
            jesu=0;
        }
        if(jesu==0) break;
    }
    return jesu;
}
char* zamjena_rijeci(char* tekst,char** rijeci,char** zamjene,int broj_rijeci){
    char*p=tekst;
    char*s,*t,*k,*h;
    int i,brojac;
    if (dict(rijeci,zamjene,broj_rijeci))
    return tekst;
    while(*p!='\0'){
        if(p==tekst || *(p-1)==' '){
            while(*p==' ') p++;
            t=p;
            for(i=0;i<broj_rijeci;i++){
                brojac=0;
                p=t;
                s=rijeci[i];
                
                if (provjera(p,s)){
                    k=t;
                    while(*p!='\0' && *p!=' ')
                    p++;
                    
                    while(*p!='\0'){
                        *k++=*p++;
                    }
                    *k='\0';
                    p=t;
                    s=zamjene[i];
                    while(*s!='\0'){
                        brojac++;
                        s++;
                    }
                    h=k+brojac;
                    p--;
                    while(k!=p){
                        *h--=*k--;
                    }
                    s=zamjene[i];
                    zamjena(t,s);
                }
            }
        }
        p++;
    }
    return tekst;
}

int main() {
    char tekst[100]=""beli sneg je pokrio beli breg"";
    char* rijeci[2]={""beli"",""sneg""};
    char* zamjene[2]={""bijeli"",""snijeg""};
    printf(""%s"",zamjena_rijeci(tekst,rijeci,zamjene,2));
    return 0;
}
"
137,99,99,0,81,A2016/Z2/Z3/student9569,A2016/Z2/Z3/student3515,"#include <stdio.h>
#define A 20

int main() {
	int k, m, n, l, j, i;
	char matrix[A][A]={ {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ', 
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '}        };


int vrste[21], kolone[21];
	
	s1:printf(""Unesite broj tacaka: "");
		scanf(""%i"", &l);
		
		if(l>10 || l<=0) {
			printf(""Pogresan unos\n"");
			goto s1;
		}
			
			for(i=0;i<l;i++)
			{
				
				s2: printf(""Unesite %i. tacku: "", i+1);
					scanf(""%i"", &m);
					scanf(""%i"", &n);
					
					if(m<0 || n<0 || m>19 || n>19) 
					{
						printf(""Pogresan unos\n"");
						
						goto s2;
					}
					
					else {
						vrste[i]=n;
						kolone[i]=m;
					}
					
				}
				
				for(k=0;k<l;k++)
				{
					for(i=0;i<20;i++) {
						for(j=0;j<20;j++) {
							
							if(vrste[k]==i && kolone[k]==j) {
								matrix[i][j]='*'; 
							}
						}
					}
				}
				
				for(i=0;i<20;i++)
				{
				for(j=0; j<20;j++)
				{
					printf(""%c"", matrix[i][j]);
				}
				printf(""\n"");
	}
							
						
	
	
	return 0;
}
","#include <stdio.h>
#define A 20

int main() {
	int k, m, n, l, j, i;
	char matrix[A][A]={ {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ', 
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '}        };


int vrste[21], kolone[21];
	
	s1:printf(""Unesite broj tacaka: "");
		scanf(""%i"", &l);
		
		if(l>10 || l<=0) {
			printf(""Pogresan unos\n"");
			goto s1;
		}
			
			for(i=0;i<l;i++)
			{
				
				s2: printf(""Unesite %i. tacku: "", i+1);
					scanf(""%i"", &m);
					scanf(""%i"", &n);
					
					if(m<0 || n<0 || m>19 || n>19) 
					{
						printf(""Pogresan unos\n"");
						
						goto s2;
					}
					
					else {
						vrste[i]=n;
						kolone[i]=m;
					}
					
				}
				
				for(k=0;k<l;k++)
				{
					for(i=0;i<20;i++) {
						for(j=0;j<20;j++) {
							
							if(vrste[k]==i && kolone[k]==j) {
								matrix[i][j]='*'; 
							}
						}
					}
				}
				
				for(i=0;i<20;i++)
				{
				for(j=0; j<20;j++)
				{
					printf(""%c"", matrix[i][j]);
				}
				printf(""\n"");
	}
							
						
	
	
	return 0;
}
"
145,75,75,0,24,A2016/Z2/Z4/student2704,A2016/Z2/Z4/student4973,"#include <stdio.h>

int main() {
	
	int m, n, a, b;
	double matrica[100][100];
	int tep=1, cirk=1;
	
	do{
	printf(""Unesite M i N: "");
	scanf(""%d %d"", &m, &n);
	if((m<=0 || m>100) || (n<=0 || n>100)) {printf(""Pogresan unos!\n"");}
	}
	while(m<=0 || m>100 || n<=0 || n>100);
	
	printf(""Unesite elemente matrice: ""); 
	
	for(a=0; a<m; a++) {
		for(b=0; b<n; b++) {
			scanf(""%lf"",&matrica[a][b]);}}
	
	for(a=0; a<m-1;a++){
		for(b=0; b<n-1; b++){
			
			if(matrica[a][b]!=matrica[a+1][b+1]) {tep=0;}
			}
		}
	
	for(a=0;a<m-1;a++) {
		if(matrica[a][n-1]!=matrica[a+1][0]) cirk=0;
	}
	
	
	if(cirk && tep) {printf(""Matrica je cirkularna"");}
	else if(tep) {printf(""Matrica je Teplicova"");}
	else  {printf(""Matrica nije ni cirkularna ni Teplicova"");}
		
	return 0;
}
","#include <stdio.h>

int main()
{
	int M,N,i,j;
	double mat[100][100];
	int cirkularna=0;
	do {

		printf(""Unesite M i N: "");
		scanf(""%d%d"",&M,&N);
		if(M<=0 || M>100 || N<=0 || N>100) printf(""Pogresan unos!\n"");
	} while(M<=0 || M>100 || N<=0 || N>100);
	printf(""Unesite elemente matrice: "");
	for(i=0; i<M; i++) {
		for(j=0; j<N; j++) {
			scanf(""%lf"",&mat[i][j]);
		}
	}
	int teplicova=1;
	for(i=0; i<M-1; i++) {
		for(j=0; j<N-1; j++) {
			if(mat[i][j]!=mat[i+1][j+1])
				teplicova=0;
		}
	}
	if(teplicova==1) {
		cirkularna=1;
		for(i=0; i<M-1; i++) {
			for(j=0; j<N-1; j++) {
				if(mat[i][N-1]!=mat[i+1][0])
					cirkularna=0;
			}
		}
	}
	if(cirkularna==1) printf(""Matrica je cirkularna"");
	else if(teplicova==1) printf(""Matrica je Teplicova"");
	else printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
"
147,9,9,0,21,A2016/Z5/Z3/student5378,A2016/Z5/Z3/student6548,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200
struct Vrijeme {
	int sati,minute,sekunde;
};
struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};

void unesi(char niz[]){
	char znak=getchar();
	if(znak=='\n')znak=getchar();
	int i=0;
	while(i<9 && znak!='\n'){
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	while(znak!='\n')
	znak=getchar();
}
int ucitaj_datoteku (struct Cas raspored[]){
	FILE *ulaz=fopen(""raspored.dat"",""rb+"");
	int greska=0;
	FILE *ulaz1=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL || ulaz1==NULL){
		greska = 1;
		return 0;
	}
	int ucitano,ucitano1;
	int vel=sizeof(struct Cas);
	ucitano=fread(raspored,vel,KAPACITET,ulaz);
	ucitano1=fread(raspored,vel,KAPACITET,ulaz1);
	fclose(ulaz);
	fclose(ulaz1);
	if(greska==0)
	return ucitano1;
	else return 0;
}
int zapisi_datoteku(struct Cas raspored[],int broj_casova){
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	FILE *ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL||ulaz1==NULL){
		return 0;
	}
	int vel=sizeof(struct Cas);
	int nova=fwrite(raspored,vel,broj_casova,ulaz);
	int zapisano=fwrite(raspored,vel,broj_casova,ulaz1);
	fclose(ulaz);
	fclose(ulaz1);
	if(nova==zapisano) return 1;
	else
	return 0;
}
int MAX(struct Cas raspored[],int broj_casova){
	int i,j,max=0,indexmaxa=0,min;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max){
			max=raspored[i].kraj.sati;
			indexmaxa=i;
			min=raspored[indexmaxa].kraj.minute;
		}
	}
	if(min==0) max=max-1;
	return max;
}
void ispis_rasporeda(struct Cas raspored[],int broj_casova){
	printf(""\n       PON       UTO       SRI       CET       PET       SUB\n"");
	int i,j,k;
	int max=MAX(raspored,broj_casova);
	int min=25;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].pocetak.sati<min)
		min=raspored[i].pocetak.sati;
	}
	for(i=min;i<=max;i++){
		if(i<10)printf(""9:00   "");
		else    printf(""%d:00  "",i);
		for(j=1;j<7;j++){
			for(k=0;k<broj_casova;k++){
				int sa=raspored[k].kraj.sati;
				int dan=raspored[k].dan_u_sedmici;
				int poc=raspored[k].pocetak.sati;
				if(poc<=i && dan==j &&sa>=i){
					printf(""%-10s"",raspored[k].predmet);
					break;
				}
			}
			if(k==broj_casova) printf(""          "");
		}
		printf(""\n"");
	}
}
int PorediVrj(struct Vrijeme t1,struct Vrijeme t2,int i) {
	int sat=t1.sati*3600,sat1=t2.sati*3600,min=t1.minute*60,min1=t2.minute*60;
	int d1=sat+min+t1.sekunde;
	int d2=sat1+min1+t2.sekunde;
	int ukpnosek=d1+d2;
	if(d1>d2) return 1;
	else if(d1<d2) return -1;
	else return 0;
}
int preklapanje(struct Cas raspored[],int broj_casova,struct Cas cas){
	int prekl=0;
	int i;
	int broj=broj_casova;
	int dan=cas.dan_u_sedmici;
	for(i=0; i < broj ;i++){
		int drugi=PorediVrj(cas.kraj,raspored[i].pocetak,i);
		int vr=PorediVrj(raspored[i].kraj,cas.pocetak,i);
		if(i<0) return prekl;
		if(dan==raspored[i].dan_u_sedmici && vr==1 && drugi==1){
			prekl=1;
			break;
		}
	}
	if(i>-1)return prekl;
}
void ispisi_dan(struct Cas raspored[],int broj_casova,int dan){
	int brojac=1,i;
	printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			printf(""\n%d) %s (%02d:%02d-%02d:%02d)"",brojac,raspored[i].predmet,raspored[i].pocetak.sati,raspored[i].pocetak.minute,raspored[i].kraj.sati,raspored[i].kraj.minute);
			brojac++;
		}
	}
}
void obrisi_cas(struct Cas raspored[],int broj_casova,int dan,int redni_broj){
	int i; int k=0; int j; int brojac=1;
	int obrisanih=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			k++;
			if(k==redni_broj){
				for(j=i;j<broj_casova-1;j++){
					raspored[j]=raspored[j+1];
					obrisanih++;
				}
				if(brojac>0 && obrisanih>0) break;
			}
			brojac++;
		}
	}
}
int dodaj_cas(struct Cas raspored[],int broj_casova,const char *predmet,int trajanje){
	int i,j,preklop,brojac=1;
	int ukupno=broj_casova;
	if(ukupno==200) return 0;
	for(i=0;i<6;i++)
		for(j=9;j<=19-trajanje;j++){
			struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
			strcpy(cas.predmet,predmet);
			struct Cas pom={"""",i,{j,0,0},{j,0,0}};
			preklop=preklapanje(raspored,broj_casova,cas);
			int pom1=preklapanje(raspored,broj_casova,cas);
			if(preklop==0){
				raspored[broj_casova]=cas;
				return 1;
			}
			brojac++;
		}
		if (brojac>0) return 0; 
			
		}
		struct Cas pr(int dan,int sat,int min,int sat1,int min1, char*ime){
			struct Cas casko={"""",dan,{sat,min,0},{sat1,min1,0}};
			strcpy(casko.predmet,ime);
			return casko;
		}
		void promijeni_cas(struct Cas raspored[],int broj_casova,int dan,int redni_broj,struct Cas promjena){
			int i; int k=0;
			for(i=0;i<broj_casova;i++){
				if(raspored[i].dan_u_sedmici==dan) k++;
				if(k==redni_broj)
				raspored[i]=promjena;
			}
		}

int main() {
	struct Cas raspored[KAPACITET];
	int ucit=ucitaj_datoteku(raspored);
	int broj,br,dan,cs,zap;
	char ime[100];
	do{
	printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
	scanf(""%d"",&broj);
	switch (broj){
	case 4:
		printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
		scanf(""%d"",&dan);
		ispisi_dan(raspored,ucit,dan);
		printf(""\nIzaberite koji cas zelite obrisati: "");
		scanf(""%d"",&cs);
		ucit--;
		obrisi_cas(raspored,ucit,dan,cs);
		printf(""Cas obrisan\n"");
		break;
	case 1:
		ispis_rasporeda(raspored,ucit);
		break;
	case 2:
		printf(""Unesite naziv predmeta: "");
		unesi(ime);
		printf(""Unesite broj casova: "");
		int nema;
		scanf(""%d"",&br);
		nema=dodaj_cas(raspored,ucit,ime,br);
		if(nema==0) printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br);
		if(nema==1) ucit++;
		break;
	case 3:
		printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
		scanf(""%d"",&dan);
		ispisi_dan(raspored,ucit,dan);
		printf(""\nIzaberite koji cas zelite promijeniti: "");
		scanf(""%d"",&cs);
		printf(""Naziv predmeta: "");
		unesi (ime);
		printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
		int sat,min,sat1,min1;
		char z,z1;
		scanf(""%d"",&sat);
		scanf(""%c"",&z);
		scanf(""%d"",&min);
		scanf(""%d"",&sat1);
		scanf(""%c"",&z1);
		scanf(""%d"",&min1);
		struct Cas casko=pr(dan,sat,min,sat1,min1,ime);
		promijeni_cas(raspored,ucit,dan,cs,casko);
		break;
		
		break;
		
		case 0: 
		zap=zapisi_datoteku(raspored,ucit);
		return 0;
	}
		

}
while(broj!=0);
return 0;

}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme{
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

char unesi(char niz[], int velicina){
	char znak=getchar();
	int vel=velicina;
		int i = 0, k=0;
	if (znak== '\n')
		znak = getchar();
	while (i<vel && znak !='\n'){
		niz[i] = znak;
		i++;k++;
		znak=getchar();
	}
	niz[i]='\0';
	return znak;
}

void cln(char znak){
	while(znak!='\n')
		znak=getchar();
		
}

int ucitaj_datoteku(struct Cas raspored[]){
	FILE* dat = fopen(""raspored.dat"", ""rb"");
	if(dat==NULL) return 0;
	int ucitanih=fread(raspored,sizeof(struct Cas), KAPACITET,dat);
	fclose(dat);
	return ucitanih;
}
void isp(int vel){
	int x;
	int veli=vel/2;
	for(x=0;x<veli;x++)
		printf(""  "");
		
}
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	
	for (i=0;i<broj_casova;i++){
		if(raspored [i].pocetak.sati<min)
			min=raspored[i].pocetak.sati;
	} 
	printf(""\n       PON       UTO       SRI""); //RAZMAK=7mjesta
	printf(""       CET       "");
	printf(""PET       SUB\n"");
	
int mintt=0;
int indexpamtimo;
for (i=0; i<broj_casova;i++){
	if (raspored[i].kraj.sati>max){
		max=raspored[i].kraj.sati;
		mintt=raspored[i].kraj.minute;
		indexpamtimo=1;
	}
}

int x;
int s,dan,n;
if(mintt==0) max=max-1;
int poc=min;
int kraj=max;
int ukupno=broj_casova;
	for(i=poc;i<=kraj;i++){
		if(i<10) printf(""%d:00   "",i); //4mjesta
	else printf(""%02d:00  "",i);
		for(j=1;j<7;j++){
			
			for(k=0;k<ukupno;k++){
				if(max>0){
					dan=raspored[k].dan_u_sedmici;
					n=raspored[k].kraj.sati;
				if (raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j && n>=i){
						printf(""%-10s"",raspored[k].predmet);
						break;
					}}}
					if(k==ukupno && ukupno>-1)
					isp(10);
		}
	printf(""\n"");
}
}

void pomispis(int k, char*s,int sat, int min, int sat1, int min1){
	printf(""\n%d) %s ("",k++,s);
	printf(""%02d:%02d-"",sat,min);
	printf(""%02d:%02d)"",sat1,min1);
}
void ispisi_dan(struct Cas raspored[], int broj_casova,int dan){
	int i,k=1;
		printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			int pocs=raspored[i].pocetak.sati;
			int pocm=raspored[i].pocetak.minute;
			int krajs=raspored[i].kraj.sati;
			int krajm=raspored[i].kraj.minute;
		pomispis(k++,raspored[i].predmet,pocs,pocm,krajs,krajm);
		
		}
	}
}


	
int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	FILE *ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL || ulaz1==NULL)
		return 0;
	int nova=fwrite(raspored, sizeof (struct Cas), broj_casova,ulaz);
	int zapisano=fwrite(raspored,sizeof(struct Cas), broj_casova,ulaz1);
	if(nova!=zapisano) return 0;
	fclose(ulaz);
	fclose(ulaz1);
	if (nova>0) return 1;
	else
		return 0;
}


void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,k=0,j;
	int bezzadnjeg=broj_casova-1;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			k++;
			if(k==redni_broj){
				for(j=i;j<bezzadnjeg;j++)
				raspored[j]=raspored[j+1];
				return;
			break;
			}
		}}}
int poredba(int p, int d){
	if (p > d) return 1;
	if (p < d) return -1;
	if (p == d) return 0;
}
int Poredi(struct Vrijeme t1, struct Vrijeme t2, int vel)
{
		int vr = t1.sati*vel*vel + t1.minute*vel + t1.sekunde, vr2 = t2.sati*vel*vel + t2.minute*vel + t2.sekunde;
		return poredba(vr,vr2);
		
}
int preklapanje (struct Cas raspored[],int broj_casova, struct Cas cas)
{
	
	int ima = 0;
	int i,prvi;
	for (i = 0; i < broj_casova; i++) {
		prvi=Poredi(raspored[i].kraj,cas.pocetak,60);
		if(prvi == 1 && Poredi(cas.kraj, raspored[i].pocetak,60)==1 && (cas.dan_u_sedmici==raspored[i].dan_u_sedmici))
		ima=1;
		break;
	}


return ima;
}


int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje){
	if(broj_casova==200) return 0;
	int i,j,preklop;
	int ukupno=19-trajanje;
	for (i=0; i<6; i++){
		for(j=9; j<=ukupno; j++){
			struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
			char *q=cas.predmet,*p=(char*) predmet;
			struct Cas cc;
			while (*q++=*p++);
			preklop=preklapanje(raspored,broj_casova,cas);
			if(preklop==1) continue;
			else{
				raspored[broj_casova]=cas;
				goto jedan;
			}
		}
	}
	
	return 0;
	jedan:
	return 1;
}


void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj,struct Cas promjena){
	int i, redni=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
			raspored[i]=promjena;
	}
}
void mjesto(int br){
	printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br);
}


int main() {
	int opcija, broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do{
		printf(""1) Ispis rasporeda\n"");
		printf(""2) Dodavanje casa\n3) Promjena casa\n"");
		printf(""4) Brisanje casa\n0) Kraj rada\n"");
		printf(""Izaberite opciju: "");
		scanf(""%d"",&opcija);
		
			if (opcija!=4 && opcija!=3 && opcija!=0 && opcija!=1){
				int br_casova,dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				cln(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				int vr=dodan;
				if(vr==0)
				mjesto(br_casova);
				if(vr==1)
				broj_casova++;
			}
			if (opcija!=0 && opcija!=3 && opcija!=2 && opcija!=1){
				int dan, redni;
				printf(""Unesite dan "");
				printf(""1=ponedjeljak, 2=utorak...,6=subota: "");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				printf(""\nIzaberite koji cas zelite obrisati: "");
				scanf(""%d"",&redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
					broj_casova--;
				printf(""Cas obrisan\n"");
			}
			if(opcija==0)
				zapisi_datoteku(raspored,broj_casova);
			if(opcija!=4 && opcija!=3 && opcija!=2 && opcija!=0);
				ispis_rasporeda(raspored,broj_casova);
			if(opcija!=4 && opcija!=0 && opcija!=2 && opcija!=1){
				struct Cas promjena;
				int dan,redni;
				char znak,predmet[10];
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota):"");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				promjena.dan_u_sedmici=dan;
				printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
				scanf(""%d"",&redni);
				cln(unesi(predmet,10));
				char *q=promjena.predmet;
				char *p=predmet;
				while(*q++=*p++);
				int prvi=broj_casova;
				int drugi=dan;
				int treci=redni;
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c"",&promjena.pocetak.sati,&znak);
				scanf(""%d"",&promjena.pocetak.minute);
				scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				promijeni_cas(raspored,prvi,drugi,redni,promjena);
			}
		
	} while(opcija!=0);
	return 0;
}"
148,99,99,0,43,A2016/Z2/Z3/student2111,A2016/Z2/Z3/student7165,"#include <stdio.h>
int main() {
	int broj_tacaka;
	int i,j;
	int k=0;
	int matrica[20][20]={5};
	int unos[10][2];
	int n=0;
	
	for(; ;){
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&broj_tacaka);
		if(broj_tacaka<=10 && broj_tacaka>0) break;
		if(broj_tacaka>10 || broj_tacaka<=0);
		{
			printf(""Pogresan unos\n"");
		}
		
	}

	for(i=0;i<broj_tacaka;i++){
	for(j=0;j<1;j++){
		printf(""Unesite %d. tacku: "",i+1);
		scanf(""%d %d"",&unos[j][i],&unos[j][i+1]);
		if(unos[j][i]>19 || unos[j][i+1]>19 || unos[j][i]<0 || unos[j][i+1]<0){
			printf(""Pogresan unos\n"");
			i--;
		}
	else	{matrica[unos[j][i]][unos[j][i+1]]=2;}
	}
	}
	
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			if(matrica[j][i]==2) printf(""*"");
			else printf("" "");
		}
	
		printf(""\n""); 
	}	
	
		
	
	return 0;
}
","#include <stdio.h>
int main() {
	int broj_tacaka;
	int i,j;
	int k=0;
	int matrica[20][20]={5};
	int unos[10][2];
	int n=0;
	
	for(; ;){
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&broj_tacaka);
		if(broj_tacaka<=10 && broj_tacaka>0) break;
		if(broj_tacaka>10 || broj_tacaka<=0);
		{
			printf(""Pogresan unos\n"");
		}
		
	}

	for(i=0;i<broj_tacaka;i++){
	for(j=0;j<1;j++){
		printf(""Unesite %d. tacku: "",i+1);
		scanf(""%d %d"",&unos[j][i],&unos[j][i+1]);
		if(unos[j][i]>19 || unos[j][i+1]>19 || unos[j][i]<0 || unos[j][i+1]<0){
			printf(""Pogresan unos\n"");
			i--;
		}
	else	{matrica[unos[j][i]][unos[j][i+1]]=2;}
	}
	}
	
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			if(matrica[j][i]==2) printf(""*"");
			else printf("" "");
		}
	
		printf(""\n""); 
	}	
	
		
	
	return 0;
}
"
152,86,86,0,81,A2016/Z3/Z3/student3301,A2016/Z3/Z3/student5830,"#include <stdio.h>

	
int main() {
	int matrica[200][200],j,M,N,i,k=0,m,n,temp;
	int brojac=0;
	
	/* Unos dimenzija matrice */ 
	
	do{
	printf (""Unesite brojeve M i N:"");
	scanf (""%d %d"",&M,&N);
	if (M<1||M>200||N<1||N>200) printf ("" Brojevi nisu u trazenom opsegu.\n"");
	}while(M<1||M>200||N<1||N>200);
	
	/* Unos elemenata matrice */ 
	
	printf ("" Unesite elemente matrice: "");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			scanf (""%d"",&matrica[i][j]);
		}
	}
	
	/* Poredenje i izbacivanje redova*/ 
	
	for (i=0;i<M;i++){
		for (j=i+1;j<M;j++)
		{
			brojac=0;
			for (k=0;k<N;k++){
				if(matrica[i][k]==matrica[j][k]){
					brojac++;
				}
				if(brojac==N){
					for (m=j+1;m<M;m++){ 
						for (n=0;n<N;n++){
							temp=matrica[m-1][n];
						    matrica[m-1][n]=matrica[m][n];
						    matrica[m][n]=temp;
						}
					}
					M--;
					j--;
				}
			}
		}
	}
	
	/* Poredenje i izbacivanje kolona*/ 
	
	for (i=0;i<N;i++){
		for (j=i+1;j<N;j++){
			brojac=0;
			for (k=0;k<M;k++){
				if(matrica[k][i]==matrica[k][j]){
					brojac++;
				}
				if(brojac==M){
					for (m=j+1;m<N;m++){ 
						for (n=0;n<M;n++){
							temp=matrica[n][m-1];
						    matrica[n][m-1]=matrica[n][m];
						    matrica[n][m]=temp;
						}
					}
					N--;
					j--;
				}
			}
		}
	}	
	
	/* Ispis matrice nakon izbacivanja  */ 
	
	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			printf (""%5d"",matrica[i][j]);
		}
		printf(""\n"");
	}
	

	return 0;
}
","#include <stdio.h>

int main()
{
	int mat[200][200];
	int j,M,N,i,k=0,a,b,temp;
	int brojac=0;
	do {
		printf(""Unesite brojeve M i N:"");
		scanf(""%d %d"",&M,&N);
		if (M<1||M>200||N<1||N>200) printf ("" Brojevi nisu u trazenom opsegu.\n"");
	} while(M<1||M>200||N<1||N>200);

	printf ("" Unesite elemente matrice: "");
	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) {
			scanf (""%d"",&mat[i][j]);
		}
	}
	for (i=0; i<N; i++) {
		for (j=i+1; j<N; j++) {
			brojac=0;
			for (k=0; k<M; k++) {
				if(mat[k][i]==mat[k][j]) {
					brojac++;
				}
				if(brojac==M) {
					for (a=j+1; a<N; a++) {
						for (b=0; b<M; b++) {
							temp=mat[b][a-1];
							mat[b][a-1]=mat[b][a];
							mat[b][a]=temp;
						}
					}
					N--;
					j--;
				}
			}
		}
	}
	for (i=0; i<M; i++) {
		for (j=i+1; j<M; j++) {
			brojac=0;
			for (k=0; k<N; k++) {
				if(mat[i][k]==mat[j][k]) {
					brojac++;
				}
				if(brojac==N) {
					for (a=j+1; a<M; a++) {
						for (b=0; b<N; b++) {
							temp=mat[a-1][b];
							mat[a-1][b]=mat[a][b];
							mat[a][b]=temp;
						}
					}
					M--;
					j--;
				}
			}
		}
	}

	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) {
			printf (""%5d"",mat[i] [j]);
		}
		printf(""\n"");
	}
	return 0;
}"
159,67,67,0,19,A2016/Z1/Z4/student8580,A2016/Z1/Z4/student6656,"#include <stdio.h>

int main() {
	int n,i,j;
	do{
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
		if(n<=0||n>50)
		printf(""Pogresan unos\n"");	}
	while(n<=0||n>50);
	if(n==1){
	printf(""***"");
	return 0;}
	
	
	for(i=0;i<n;i++){
		for(j=0;j<4*n-3;j++){
			if(i==j||2*n-2-i==j||2*n-2+i==j||4*n-4-i==j){
			printf(""*"");
			}
			else
			printf("" "");
		}printf(""\n"");
		}

	return 0;
}
","#include <stdio.h>

int main() {
	int i,j,n;
	do
	{
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	if(n<=0 || n>50)
	printf(""Pogresan unos\n"");
	}while(n<=0 || n>50);
	if(n==1)
	{
		printf(""***"");
		return 0;
	}
	for(i=0;i<n;i++)
	{
		for(j=0;j<(4*n-3);j++)
		{
			if(i==j || 2*n-2+i==j || 2*n-2-i==j || 4*n-4-i==j)
			printf(""*"");
			else
			printf("" "");
		}
		printf(""\n"");
	}
	
	return 0;
}
"
166,35,35,0,5,A2016/Z2/Z1/student6419,A2016/Z2/Z1/student4602,"#include <stdio.h>
#include <math.h>
int main () {
	int a, b=0, temp1=0, temp2=0, n=0, p=1, t=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &a);
	if(a<0) 
		a=fabs(a);
	while(a>10) {
		temp1=a%10;
		a/=10;
		b=a;
		temp2=b%10;
		n=p*(temp1-temp2);
		if(n<0)
			n=fabs(n);
		p*=10;
		t+=n;
	}
	printf(""%d"", t);
	return 0;
}","#include <stdio.h>
#include<stdlib.h>

int main() {
	int n=0, i=0, a=0,m=0, c=0,broj=0;
	
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	if(n<0) n=n*(-1);
	
	while(n>10){
		
		i=n%10;
	    a=n/10;
	    m=a%10;
		c *= 10 ;
		c+= abs(i-m);
		n/=10;
	}
	i=0;
		while(c){
			i=c%10;
			broj *=10;
			broj +=i;
			c/=10;
			
		}
	printf(""%d"", broj);
	return 0;
}
"
169,13,13,0,18,A2016/Z5/Z1/student1317,A2016/Z5/Z1/student6369,"#include <stdio.h>
#include <math.h>
#include <string.h>

struct Student
{
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};
/* Funkcija izbaci_osobu izbacuje sve osobe ciji je prosjek manji od
zadatog prosjeka */
void izbaci_osobu(struct Student* s, int poc_izb, int vel)
{
	int j=0;
	
	for(j=poc_izb+1; j<vel; j++)
	{
		s[j-1]=s[j];
	}
	return;
}

int genijalci(struct Student* s, int vel, float pros)
{
	int i=0, j=0, suma=0, max_ind=0;
	float prosjeci[1000]={0.0};
	char prez_isp[3][20]={{""""}};
	char ime_isp[3][20]={{""""}};
	float max_oc=0.0;
	
	for(i=0; i<vel; i++)
	{
		suma=0;
		if(s[i].br_ocjena==0) prosjeci[i]=5.0;
		else
		{
			for(j=0; j<s[i].br_ocjena; j++)
			{
				if(s[i].ocjene[j]==5) 
				{
					prosjeci[i]=5.0;
					break;
				}
				suma=suma+s[i].ocjene[j];
			}
			if(j==s[i].br_ocjena) prosjeci[i]=(float)suma/(float)s[i].br_ocjena;
		}
		if(prosjeci[i]<pros) 
		{
			izbaci_osobu(s, i, vel);
			i--;
			vel--;
		}
	}
	
	if(vel==0) return 0;
	
	if(vel==1) printf(""%s %s"", s[0].prezime, s[0].ime);
	
	if(vel==2)
	{
		if(prosjeci[0]>prosjeci[1])
		{
			printf(""%s %s\n"", s[0].prezime, s[0].ime);
			printf(""%s %s\n"", s[1].prezime, s[1].ime);
		}
		else if(prosjeci[0]<prosjeci[1])
		{
			printf(""%s %s\n"", s[1].prezime, s[1].ime);
			printf(""%s %s\n"", s[0].prezime, s[0].ime);
		}
		else
		{
			if(strcmp(s[0].prezime, s[1].prezime)<0)
			{
				printf(""%s %s\n"", s[0].prezime, s[0].ime);
				printf(""%s %s\n"", s[1].prezime, s[1].ime);
			}
			else if(strcmp(s[0].prezime, s[1].prezime)>0)
			{
				printf(""%s %s\n"", s[1].prezime, s[1].ime);
				printf(""%s %s\n"", s[0].prezime, s[0].ime);
			}
			else if(strcmp(s[0].prezime, s[1].prezime)==0)
			{
				if(strcmp(s[0].ime, s[1].ime)<0)
				{
					printf(""%s %s\n"", s[0].prezime, s[0].ime);
					printf(""%s %s\n"", s[1].prezime, s[1].ime);
				}
				else if(strcmp(s[0].ime, s[1].ime)>0)
				{
					printf(""%s %s\n"", s[1].prezime, s[1].ime);
					printf(""%s %s\n"", s[0].prezime, s[0].ime);
				}
				else if(strcmp(s[0].ime, s[1].ime)==0)
				{
					printf(""%s %s\n"", s[0].prezime, s[0].ime);
					printf(""%s %s\n"", s[1].prezime, s[1].ime);
				}
			}
		}
	}
	if(vel>=3)
	{
		for(i=0; i<3; i++)
		{
			max_oc=prosjeci[0];
			strncpy(prez_isp[i], s[0].prezime, 20);
			strncpy(ime_isp[i], s[0].ime, 20);
			max_ind=0;
			/* Odredjivanje studenata sa najvecim prosjekom */
			for(j=1; j<vel; j++)
			{
				if(prosjeci[j]>max_oc)
				{
					max_oc=prosjeci[j];
					strncpy(prez_isp[i], s[j].prezime, 20);
					strncpy(ime_isp[i], s[j].ime, 20);
					max_ind=j;
				}
			}
			/* Odredjivanje redoslijeda studenata po leksikografskom redoslijedu */
			for(j=0; j<vel; j++)
			{
				if(prosjeci[j]==max_oc && j!=max_ind)
				{
					if(strcmp(s[j].prezime, prez_isp[i])<0 || (strcmp(s[j].prezime, prez_isp[i])==0 && strcmp(s[j].ime, ime_isp[i])<0))
					{
						strncpy(prez_isp[i], s[j].prezime, 20);
						strncpy(ime_isp[i], s[j].ime, 20);
						max_ind=j;
					}
				}
			}
			prosjeci[max_ind]=0.0;
			printf(""%s %s\n"", s[max_ind].prezime, s[max_ind].ime);
		}
	}
	
	return vel;
}

int main() 
{
	struct Student studenti[] = {
   	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
    };
	int vel=sizeof studenti/sizeof studenti[0];
	float prosjek=6.5;
	
	genijalci(studenti, vel, prosjek);
	
	return 0;
}
","#include <stdio.h>


struct Student {
    char ime[20], prezime[20];
    int ocjene[50];
    int br_ocjena;
};

double dajProsjek(struct Student student)
{
    int i;
    double suma = 0;
    if(student.br_ocjena == 0)
    {
        return 5.0;
    }
    for(i = 0; i < student.br_ocjena; i++)
    {
        if(student.ocjene[i] == 5)
        {
            return 5.0;
        }
        suma += student.ocjene[i];
    }

    return suma/student.br_ocjena;
}

int uporedi(struct Student prvi, struct Student drugi)
{
    int i = 0;
    for(i = 0; i < 20; i++)
    {
        if(prvi.prezime[i] < drugi.prezime[i])
        {
            return 0;
        } else if(prvi.prezime[i] > drugi.prezime[i])
        {
            return 1;
        }
    }
    for(i = 0; i < 20; i++)
    {
        if(prvi.ime[i] < drugi.ime[i])
        {
            return 0;
        } else if(prvi.ime[i] > drugi.ime[i])
        {
            return 1;
        }
    }
    return 0;
}

int uporedi_tri(struct Student prvi, struct Student drugi, struct Student treci)
{
    if(uporedi(prvi,drugi) == 0 && uporedi(prvi, treci) == 0 && uporedi(drugi,treci) == 0)
    {
        return 123;
    } else if(uporedi(prvi,drugi) == 0 && uporedi(prvi, treci) == 0 && uporedi(drugi,treci) == 1)
    {
        return 132;
    } else if(uporedi(prvi,drugi) == 1 && uporedi(prvi, treci) == 0 && uporedi(drugi,treci) == 0)
    {
        return 213;
    } else if(uporedi(prvi,drugi) == 1 && uporedi(prvi, treci) == 1 && uporedi(drugi,treci) == 0)
    {
        return 231;
    } else if(uporedi(prvi,drugi) == 1 && uporedi(prvi, treci) == 1 && uporedi(drugi,treci) == 1)
    {
        return 321;
    } else if(uporedi(prvi,drugi) == 0 && uporedi(prvi, treci) == 1 && uporedi(drugi,treci) == 1)
    {
        return 312;
    }
}

void printaj(struct Student* niz, int vel)
{
    if(vel == 0);
    else if(vel == 1)
    {
        printf(""%s %s"", niz[0].prezime, niz[0].ime);
    } else if(vel == 2)
    {
        if(dajProsjek(niz[0]) > dajProsjek(niz[1]))
        {
            printf(""%s %s\n"", niz[0].prezime, niz[0].ime);
            printf(""%s %s\n"", niz[1].prezime, niz[1].ime);
        } else if(dajProsjek(niz[0]) < dajProsjek(niz[1]))
        {
            printf(""%s %s\n"", niz[1].prezime, niz[1].ime);
            printf(""%s %s\n"", niz[0].prezime, niz[0].ime);
        } else
        {
            if(uporedi(niz[0],niz[1]) == 0)
            {
                printf(""%s %s\n"", niz[0].prezime, niz[0].ime);
                printf(""%s %s\n"", niz[1].prezime, niz[1].ime);
            } else
            {
                printf(""%s %s\n"", niz[1].prezime, niz[1].ime);
                printf(""%s %s\n"", niz[0].prezime, niz[0].ime);
            }
        }
    } else
    {
        int i,j;
        for(i = 0; i < 3; i++)
        {
            int pozicija_najboljeg = 0;
            double najbolji_prosjek = 0;

            for(j = 0; j < vel; j++)
            {
                if(dajProsjek(niz[j]) > najbolji_prosjek)
                {
                    najbolji_prosjek = dajProsjek(niz[j]);
                    pozicija_najboljeg = j;
                }
            }

            struct Student temp = niz[vel-1];
            niz[vel-1] = niz[pozicija_najboljeg];
            niz[pozicija_najboljeg] = temp;
            vel--;
        }

        if(dajProsjek(niz[vel]) == dajProsjek(niz[vel+1]) && dajProsjek(niz[vel]) == dajProsjek(niz[vel+2]))
        {
            int redoslijed = uporedi_tri(niz[vel],niz[vel+1],niz[vel+2]);
            switch (redoslijed)
            {
                case 123:
                    printf(""%s %s\n"", niz[vel].prezime, niz[vel].ime);
                    printf(""%s %s\n"", niz[vel+1].prezime, niz[vel+1].ime);
                    printf(""%s %s\n"", niz[vel+2].prezime, niz[vel+2].ime);
                    break;

                case 132:
                    printf(""%s %s\n"", niz[vel].prezime, niz[vel].ime);
                    printf(""%s %s\n"", niz[vel+2].prezime, niz[vel+2].ime);
                    printf(""%s %s\n"", niz[vel+1].prezime, niz[vel+1].ime);
                    break;

                case 213:
                    printf(""%s %s\n"", niz[vel+1].prezime, niz[vel+1].ime);
                    printf(""%s %s\n"", niz[vel].prezime, niz[vel].ime);
                    printf(""%s %s\n"", niz[vel+2].prezime, niz[vel+2].ime);
                    break;

                case 231:
                    printf(""%s %s\n"", niz[vel+1].prezime, niz[vel+1].ime);
                    printf(""%s %s\n"", niz[vel+2].prezime, niz[vel+2].ime);
                    printf(""%s %s\n"", niz[vel].prezime, niz[vel].ime);
                    break;

                case 321:
                    printf(""%s %s\n"", niz[vel+2].prezime, niz[vel+2].ime);
                    printf(""%s %s\n"", niz[vel+1].prezime, niz[vel+1].ime);
                    printf(""%s %s\n"", niz[vel].prezime, niz[vel].ime);
                    break;

                case 312:
                    printf(""%s %s\n"", niz[vel+2].prezime, niz[vel+2].ime);
                    printf(""%s %s\n"", niz[vel].prezime, niz[vel].ime);
                    printf(""%s %s\n"", niz[vel+1].prezime, niz[vel+1].ime);
                    break;
            }
        } else if(dajProsjek(niz[vel]) == dajProsjek(niz[vel+1]) && dajProsjek(niz[vel]) != dajProsjek(niz[vel+2]))
        {
            printf(""%s %s\n"", niz[vel+2].prezime, niz[vel+2].ime);
            if(uporedi(niz[vel],niz[vel+1]) == 0)
            {
                printf(""%s %s\n"", niz[vel].prezime, niz[vel].ime);
                printf(""%s %s\n"", niz[vel+1].prezime, niz[vel+1].ime);
            } else
            {
                printf(""%s %s\n"", niz[vel+1].prezime, niz[vel+1].ime);
                printf(""%s %s\n"", niz[vel].prezime, niz[vel].ime);
            }
        } else if(dajProsjek(niz[vel]) != dajProsjek(niz[vel+1]) && dajProsjek(niz[vel+1]) == dajProsjek(niz[vel+2]))
        {
            if(uporedi(niz[vel+1],niz[vel+2]) == 0)
            {
                printf(""%s %s\n"", niz[vel+1].prezime, niz[vel+1].ime);
                printf(""%s %s\n"", niz[vel+2].prezime, niz[vel+2].ime);
            } else
            {
                printf(""%s %s\n"", niz[vel+2].prezime, niz[vel+2].ime);
                printf(""%s %s\n"", niz[vel+1].prezime, niz[vel+1].ime);
            }
            printf(""%s %s\n"", niz[vel].prezime, niz[vel].ime);
        }
        else
        {
            for(i = vel+3; i > 0; i--)
            {
                printf(""%s %s\n"", niz[i].prezime, niz[i].ime);
            }
        }
    }
}

int genijalci(struct Student* niz, int vel, double prosjek)
{
    int i;
    struct Student pomocni_niz[100];
    int velicina_pomocnog_niza = 0;

    for(i = 0; i < vel; i++)
    {
        if(dajProsjek(niz[i]) >= prosjek)
        {
            pomocni_niz[velicina_pomocnog_niza] = niz[i];
            velicina_pomocnog_niza++;
        }
    }

    for(i = 0; i < velicina_pomocnog_niza; i++)
    {
        niz[i] = pomocni_niz[i];
    }

    printaj(pomocni_niz,velicina_pomocnog_niza);

    return  velicina_pomocnog_niza;
}

int main() {

    struct Student niz[3] = {{""Mujo"",""Mujic"",{8},1},{""Suljo"",""Suljic"",{},0}, {""Haso"", ""Hasic"",{6,9,10},3}};

    genijalci(niz,3,7.0);

    return 0;
}
"
182,85,85,0,18,A2016/Z2/Z3/student7823,A2016/Z2/Z3/student8192,"#include <stdio.h>

int main()
{
//	printf(""Zadaća 2, Zadatak 3"");
	int i,j,k,broj, vrijednostA[10],  vrijednostB[10];
	do {
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &broj);
		if(broj<=0 || broj>10)
			printf(""Pogresan unos\n"");
	} while(broj<=0 || broj>10);
	for(i=0; i<broj; i++) {
		printf(""Unesite %d. tacku: "", i+1);
		scanf(""%d %d"", &vrijednostA[i], &vrijednostB[i]);
		if(vrijednostA[i]>19 || vrijednostA[i]<0 || vrijednostB[i]>19 || vrijednostB[i]<0) {
			i--;
			printf(""Pogresan unos\n"");
			continue;
		}
	}
	for(i=0; i<20; i++) {
		for(j=0; j<20; j++) {
			for(k=0; k<broj; k++) {
				if(vrijednostA[k]==j && vrijednostB[k]==i) {
					printf(""*"");
					j++;
				}
			}
			printf("" "");
		}
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>
#include <math.h>

int main()
{
    int i, j, k, n, nizx[10], nizy[10];
    
    do{
        printf(""Unesite broj tacaka: "");
        scanf(""%d"", &n);
        if(n<=0 || n>10) printf(""Pogresan unos\n"");
    } while(n<=0 || n>10);
    
    for(i=0; i<n; i++){
        printf(""Unesite %d. tacku: "", i+1);
        scanf(""%d%d"", &nizx[i], &nizy[i]);
        if(nizx[i]<0 || nizx[i]>19 || nizy[i]<0 || nizy[i]>19){
            printf(""Pogresan unos\n"");
            i--;
        }
    }
    
    for(i=0; i<20; i++){
        for(j=0; j<20; j++){
            for(k=0; k<n; k++){
                if(nizx[k] == j && nizy[k] == i){
                    printf(""*"");
                    break;
                }
            }
            if(n==k) printf("" "");
        }
        printf(""\n"");
    }

    return 0;
}
"
185,99,99,0,35,A2016/Z2/Z3/student6534,A2016/Z2/Z3/student4438,"#include <stdio.h>

int main() {
	int brojt,k,z,x,y;
	int mat[20][20];
	for (k=0;k<20;k++)
	for (z=0;z<20;z++)
	mat[k][z]=0;
printf(""Unesite broj tacaka: "");
scanf (""%d"",&brojt);
while (brojt<=0 || brojt>10) 
	{
		printf (""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf (""%d"",&brojt); 
		}
	for (k=0;k<brojt;k++)
{
			printf (""Unesite %d. tacku: "",k+1);
			scanf (""%d%d"",&x, &y);
			if (x>=0 && x<20 && y>=0 && y<20)mat[y][x]=1;
			else {
			printf (""Pogresan unos\n"");
			k--;
			}
		}
		for (k=0;k<20;k++)
		{
		for (z=0;z<20;z++) 
			if (mat[k][z]==1) 
			printf (""*"");
			else 
			printf ("" "");
			printf (""\n"");
	
		}
			return 0;
}","#include <stdio.h>

int main() {
	int brojt,k,z,x,y;
	int mat[20][20];
	for (k=0;k<20;k++)
	for (z=0;z<20;z++)
	mat[k][z]=0;
printf(""Unesite broj tacaka: "");
scanf (""%d"",&brojt);
while (brojt<=0 || brojt>10) 
	{
		printf (""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf (""%d"",&brojt); 
		}
	for (k=0;k<brojt;k++)
{
			printf (""Unesite %d. tacku: "",k+1);
			scanf (""%d%d"",&x, &y);
			if (x>=0 && x<20 && y>=0 && y<20)mat[y][x]=1;
			else {
			printf (""Pogresan unos\n"");
			k--;
			}
		}
		for (k=0;k<20;k++)
		{
		for (z=0;z<20;z++) 
			if (mat[k][z]==1) 
			printf (""*"");
			else 
			printf ("" "");
			printf (""\n"");
	
		}
			return 0;
}"
192,35,35,0,47,A2016/Z5/Z1/student9897,A2016/Z5/Z1/student8776,"#include <stdio.h>
#include <string.h>
#define epsilon 0.0001

struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

float prosjek_svih_studenata(int niz[], int vel) {
	float prosjek_svih=0.0;
	int i;
	float suma=0;
	for(i=0;i<vel;i++) {
		if(niz[i]==5 || vel==0) return 5.0;
		suma+=niz[i];
		prosjek_svih=suma/vel;
	}
	return prosjek_svih;
}

int uporedi(char* s1, char* s2) {
	if(strcmp(s1,s2)==0) return 0;
	if(strcmp(s1,s2)<0) return -1;
	if(strcmp(s1,s2)>0) return 1;
	while(*s1!='\0' && *s2!='\0') {
		if(*s1<*s2) return -1;
		if(*s1>*s2) return 1;
		s1++;
		s2++;
	}
	if(*s1!='\0') return 1;
	if(*s2!='\0') return -1;
	return 0;
}
 int redoslijed(struct Student prvi, struct Student drugi) {
	float prosjek1=prosjek_svih_studenata(prvi.ocjene,prvi.br_ocjena);
	float prosjek2=prosjek_svih_studenata(drugi.ocjene,drugi.br_ocjena);
		if(prosjek1>prosjek2) return 1;
		else if(prosjek1<prosjek2) return 0;
		
		if(uporedi(prvi.prezime,drugi.prezime)==-1) return 1;
		else if(uporedi(prvi.prezime,drugi.prezime)==1) return 0;
		
		if(uporedi(prvi.ime,drugi.ime)==-1) return 1;
		else if(uporedi(prvi.ime,drugi.ime)==1) return 0;
		else return 1;
}

int genijalci(struct Student niz[], int vel, float prosjekk) {
	int i, j, index1, index2, index3, indexmin=0;
	double temp_prosjek, min=10;
	for(i=0;i<vel;i++) {
		if(prosjekk-prosjek_svih_studenata(niz[i].ocjene,niz[i].br_ocjena)>epsilon) {
              for(j=i;j<vel-1;j++) {
			  niz[j]=niz[j+1];
			}
			vel--;
			i--;
		}
	}
	for(i=0;i<vel;i++) {
		temp_prosjek=prosjek_svih_studenata(niz[i].ocjene, niz[i].br_ocjena);
		if(min-prosjek_svih_studenata(niz[i].ocjene,niz[i].br_ocjena)>epsilon)
		{
			min=temp_prosjek;
			indexmin=i;
		}
	}
		if(vel==0) return 0;
		if(vel==1) goto jedan;
		if(vel>1) goto dva;
		
		jedan:
		index1=indexmin;
		printf(""\n%s %s"", niz[index1].prezime,niz[index1].ime);
		return vel;
		
		dva:
		index1=indexmin;
		for(i=0;i<vel;i++) {
			if(redoslijed(niz[i],niz[index1]))
			index1=i;
		}
		index2=indexmin;
		for(i=0;i<vel;i++) {
			if(i==index1) continue;
			if(redoslijed(niz[i],niz[index2]))
			index2=i;
		}
		printf(""\n%s %s"",niz[index1].prezime,niz[index1].ime);
		printf(""\n%s %s"",niz[index2].prezime,niz[index2].ime);
		
		if(vel>2) {
			index3=indexmin;
			for(i=0;i<vel;i++) {
				if(i==index1 || i==index2) continue;
				if(redoslijed(niz[i],niz[index3]))
				index3=i;
			}
			printf(""\n%s %s"",niz[index3].prezime,niz[index3].ime);
		}
		return vel;
}

int main() {
	struct Student studenti[] = {
		{""Ajla"", ""Smajic"", {7, 9, 10, 10}, 4},
		{""Sajra"", ""Gujic"", {6, 8, 9}, 3},
		{""Imad"", ""Fazlinovic"", {7, 9, 5, 8}, 4}
	};
	int i;
  int vel=genijalci(studenti,4,7.7);
  printf(""Vel:%dStudenti:"",vel);
  for(i=0;i<vel;i++);
  printf(""%s %s"", studenti[i].prezime,studenti[i].ime);
	return 0;
}
","#include <stdio.h>

#define epsilon 0.0001

struct Student{
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};

int uporedi(char* s1, char*s2){
	while(*s1!='\0' && *s2!='\0'){
		if (*s1 < *s2) return 1;
		if (*s1 > *s2) return 2;
		s1++; s2++;
	}
	if(*s1!='\0') return 2;
	if(*s2!='\0') return 1;
	
	return 0;
}
float prosjek(int niz[], int vel){
	int i=0, suma=0;
	if(vel==0) return 5;
	for(i=0; i<vel; i++){
		if(niz[i]==5) return 5;
		suma+=niz[i];
	}
	return (float)suma/vel;
}
int dalijeveci ( struct Student pr, struct Student dr){
	float prosjekprvog=prosjek(pr.ocjene, pr.br_ocjena);
	float prosjekdrugog=prosjek(dr.ocjene, dr.br_ocjena);
	int sta_je_vratila_f=uporedi(pr.prezime, dr.prezime);

	if(prosjekprvog > prosjekdrugog) return 1;
	if(prosjekprvog < prosjekdrugog) return 0;
	
	if(sta_je_vratila_f==1) return 1;
	if(sta_je_vratila_f==2) return 0;
	
	sta_je_vratila_f=uporedi(pr.ime, dr.ime);
	if(sta_je_vratila_f==1) return 1;
	if(sta_je_vratila_f==2) return 0;
	
	else return 1;
}
int genijalci(struct Student niz[], int vel, double prosjekk){
	int i,j,indexprvi,indexdrugi,indextreci,indexmin=0;
	double min=10;
	for(i=0; i<vel; i++){
		if(prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon) {
			for(j=i; j<vel-1; j++){
				niz[j]=niz[j+1];
			}
			vel--;
			i--;
		}
	}
	
for(i=0; i<vel;i++)	{
	if(min-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon){
		min=prosjek(niz[i].ocjene,niz[i].br_ocjena);
		indexmin=i;
	}
	
}

if(vel>0){
	indexprvi=indexmin;
	for(i=0; i<vel;i++){
		if(dalijeveci(niz[i],niz[indexprvi]))
		indexprvi=i;
	}
	printf(""\n%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime);
}
if(vel>1){
	indexdrugi=indexmin;
	for(i=0; i<vel;i++){
		if(i==indexprvi) continue;
		
		if(dalijeveci(niz[i], niz[indexdrugi])){
			indexdrugi=i;
		}
	}
	printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
}
if(vel>2){
	
	indextreci=indexmin;
	for(i=0; i<vel;i++){
		if(i==indexprvi || i==indexdrugi) continue;
		if(dalijeveci(niz[i],niz[indextreci]))
		indextreci=i;
	}
	printf(""%s %s\n"",niz[indextreci].prezime, niz[indextreci].ime);
}
return vel;

}



int main() {
struct Student studenti[5]={
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Meho"", ""Mujic"", {7,7,7,7,8},5},
	{""Beba"", ""Bebic"", {10,10,10,10,5},5},
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Fata"", ""Fatic"", {7,7,7,7,8},5},
};
genijalci (studenti, 5, 6.5);
	return 0;
}



"
196,98,98,0,70,A2016/Z3/Z2/student9463,A2016/Z3/Z2/student4389,"#include <stdio.h>
#include <stdlib.h>

/*Funkcija ""ubaci"" prima niz elemenata i nakon svakog elementa ubacuje sumu cifara istog.*/

void ubaci (int *niz, int vel) {
    int i, j, copy[10], copy2[20]={0}, sum_num, temp;
    for(i=0; i<vel; i++){
        copy[i]=niz[i];
        copy2[i]=copy[i];
    }
    j=2;
    for(i=1; i<vel; i++){
        copy2[j]=copy[i];
        j+=2;
    }
    for(i=0; i<vel*2; i+=2){
        sum_num=0;
        temp=copy2[i];
        while(abs(temp)!=0){
            sum_num+=temp%10;
            temp/=10;
        }
        copy2[i+1]=abs(sum_num);
    }
    for(i=0; i<vel*2; i++){
        *(niz+i)=copy2[i];
    }
}

/*Funkcija ""izbaci"" prima niz elemenata i izbacuje iz njega sve elemente koji su Fibonaccijev broj*/

int izbaci (int *niz, int vel) {
    int i, j, n1, n2, check=0;
    for(i=0; i<vel;){
        n1=1; n2=1;     /*n1 i n2 su prva dva clana Fibonaccijevog niza koji se sabiraju da bi stvorili sljedece clanove niza*/
        do{
            if(check==1) i--;
            check=0;
            if(i<0) i++;
            if(niz[i]==n1 || niz[i]==n2){
                for(j=i; j<vel-1; j++){
                    niz[j]=niz[j+1];
                }
                i--;
                vel--;
            }
            n1=n1+n2;
            n2=n1+n2;
            if(i<0){
                i++;
                check=1;        /*Varijabla ""check"" provjerava vrijednost varijable ""i"" da se u uslovu ""while"" ne bi pristupilo zabranjenoj memoriji, a ukoliko je manja od nule, povecava za jedan, a nakon uslova smanjuje za 1*/
            }
        }while(n1<=niz[i]);
        i++;
        if(i==vel && check==1) i--;
    }
    return vel;
}

/*Funkcija ""main"" trazi od korisnika unos 10 brojeva, nakon cega pomocu funkcija ""ubaci"" i ""izbaci"" modificira uneseni niz elemenata i ispisuje isti na ekran*/

int main() {
    int niz[20]={0}, i, vel=10;
    printf(""Unesite niz od 10 brojeva: "");
    for(i=0; i<10; i++){
        scanf(""%d"", &niz[i]);
    }
    ubaci(niz, vel);
    vel=izbaci(niz, 20);
    printf(""Modificirani niz glasi: "");
    for(i=0; i<vel; i++){
        if(i!=vel-1)
            printf(""%d, "", niz[i]);
        else printf(""%d."", niz[i]);
    }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

/*Funkcija ""ubaci"" prima niz elemenata i nakon svakog elementa ubacuje sumu cifara istog.*/

void ubaci (int *niz, int vel) {
    int i, j, copy[10], copy2[20]={0}, sum_num, temp;
    for(i=0; i<vel; i++){
        copy[i]=niz[i];
        copy2[i]=copy[i];
    }
    j=2;
    for(i=1; i<vel; i++){
        copy2[j]=copy[i];
        j+=2;
    }
    for(i=0; i<vel*2; i+=2){
        sum_num=0;
        temp=copy2[i];
        while(abs(temp)!=0){
            sum_num+=temp%10;
            temp/=10;
        }
        copy2[i+1]=abs(sum_num);
    }
    for(i=0; i<vel*2; i++){
        *(niz+i)=copy2[i];
    }
}

/*Funkcija ""izbaci"" prima niz elemenata i izbacuje iz njega sve elemente koji su Fibonaccijev broj*/

int izbaci (int *niz, int vel) {
    int i, j, n1, n2, check=0;
    for(i=0; i<vel;){
        n1=1; n2=1;     /*n1 i n2 su prva dva clana Fibonaccijevog niza koji se sabiraju da bi stvorili sljedece clanove niza*/
        do{
            if(check==1) i--;
            check=0;
            if(i<0) i++;
            if(niz[i]==n1 || niz[i]==n2){
                for(j=i; j<vel-1; j++){
                    niz[j]=niz[j+1];
                }
                i--;
                vel--;
            }
            n1=n1+n2;
            n2=n1+n2;
            if(i<0){
                i++;
                check=1;        /*Varijabla ""check"" provjerava vrijednost varijable ""i"" da se u uslovu ""while"" ne bi pristupilo zabranjenoj memoriji, a ukoliko je manja od nule, povecava za jedan, a nakon uslova smanjuje za 1*/
            }
        }while(n1<=niz[i]);
        i++;
        if(i==vel && check==1) i--;
    }
    return vel;
}

/*Funkcija ""main"" trazi od korisnika unos 10 brojeva, nakon cega pomocu funkcija ""ubaci"" i ""izbaci"" modificira uneseni niz elemenata i ispisuje isti na ekran*/

int main() {
    int niz[20]={0}, i, vel=10;
    printf(""Unesite niz od 10 brojeva: "");
    for(i=0; i<10; i++){
        scanf(""%d"", &niz[i]);
    }
    ubaci(niz, vel);
    vel=izbaci(niz, 20);
    printf(""Modificirani niz glasi: "");
    for(i=0; i<vel; i++){
        if(i!=vel-1)
            printf(""%d, "", niz[i]);
        else printf(""%d."", niz[i]);
    }
    return 0;
}"
200,98,98,0,74,A2016/Z3/Z2/student5744,A2016/Z3/Z2/student2675,"#include <stdio.h>
#include <stdlib.h>

void ubaci(int* p,int n)
{
	int i;
	int temp,suma;
	//Pomjera clanove da bi bilo mjesta za dodane
	for(i=n-1;i>0;i--)
	{
		p[2*i]=p[i];
	}
	//Dodaje clanove
	for (i=0;i<2*n;i+=2)
	{
		suma=0;
		if(p[i]>=0)
			temp=(p[i]);
		else
			temp=-p[i];
		while(temp>0)
		{
			suma+=temp%10;
			temp/=10;
		}
		p[i+1]=suma;
	}
}
int izbaci(int *p,int n)
{
	int i,j,k;
	int fib[87];
	fib[0]=1;
	fib[1]=1;
	for(i=0;i<n;i++)
	{
		j=1;
		//Provjerava da li je broj fibonccijev, ako jeste izbacuje ga
		while(p[i]>=fib[j])
		{
			if(p[i]==fib[j])
			{
				for(k=i;k<n-1;k++)
				{
					p[k]=p[k+1];
				}
				i--;
				n--;
				break;
			}
			fib[j+1]=fib[j]+fib[j-1];
			j++;
		}
	}
	return n;
}

int main()
{
	int i,l;
	int niz[20]={0};
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	{
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,10);
	l=izbaci(niz,20);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<l;i++)
	{
		printf(""%d"",niz[i]);
		if(i==l-1)
		{
			printf(""."");
		}
		else
		{
			printf("", "");
		}
	}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ubaci(int* p,int n)
{
	int i;
	int temp,suma;
	//Pomjera clanove da bi bilo mjesta za dodane
	for(i=n-1;i>0;i--)
	{
		p[2*i]=p[i];
	}
	//Dodaje clanove
	for (i=0;i<2*n;i+=2)
	{
		suma=0;
		if(p[i]>=0)
			temp=(p[i]);
		else
			temp=-p[i];
		while(temp>0)
		{
			suma+=temp%10;
			temp/=10;
		}
		p[i+1]=suma;
	}
}
int izbaci(int *p,int n)
{
	int i,j,k;
	int fib[87];
	fib[0]=1;
	fib[1]=1;
	for(i=0;i<n;i++)
	{
		j=1;
		//Provjerava da li je broj fibonccijev, ako jeste izbacuje ga
		while(p[i]>=fib[j])
		{
			if(p[i]==fib[j])
			{
				for(k=i;k<n-1;k++)
				{
					p[k]=p[k+1];
				}
				i--;
				n--;
				break;
			}
			fib[j+1]=fib[j]+fib[j-1];
			j++;
		}
	}
	return n;
}

int main()
{
	int i,l;
	int niz[20]={0};
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	{
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,10);
	l=izbaci(niz,20);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<l;i++)
	{
		printf(""%d"",niz[i]);
		if(i==l-1)
		{
			printf(""."");
		}
		else
		{
			printf("", "");
		}
	}
	return 0;
}"
201,96,96,0,44,A2016/Z2/Z4/student9569,A2016/Z2/Z4/student4389,"#include <stdio.h>

int main() {
	double s[100][100];
	int i, j, M, N, tepl= 1, cirk= 1;
	
	do{
		printf(""Unesite M i N: "");
		scanf(""%d %d"", &M, &N);
		if(M<=0 || M>100 || N<=0 || N>100) {
			printf(""Pogresan unos!\n"");
		}
	}
	while(M<=0 || M>100 || N<=0 || N>100);
	printf(""Unesite elemente matrice: "");
	
	for(i=0;i<M;i++)
	{
		for(j=0;j<N;j++)
		{
			scanf (""%lf"",&s[i][j]);
		}
	}
	
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			if(s[0][j]!=s[i][(i+j)%N]){
				
				cirk= 0; 
			}
		}
	}
	
	for(i=0;i<M-1;i++){
		for(j=0;j<N-1;j++){
			if(j+1<N){
				if(s[i][j]!=s[i+1][j+1]){
					tepl= 0;
				}
			}
		}
	}
	
		if(cirk==1) printf(""Matrica je cirkularna"");
		else if(cirk==0 && tepl==1) printf(""Matrica je Teplicova"");
		else printf(""Matrica nije ni cirkularna ni Teplicova"");
	

	return 0;
}
","#include <stdio.h>

int main() {
	double a[100][100];
	int i, j, M, N, teplicova = 1, cirkularna = 1;
	do{
		printf(""Unesite M i N: "");
		scanf(""%d %d"", &M, &N);
		if(M<=0 || M>100 || N<=0 || N>100){
			printf(""Pogresan unos!\n"");
		}
	}while(M<=0 || M>100 || N<=0 || N>100);
	printf(""Unesite elemente matrice: "");
	for(i=0; i<M; i++){
		for(j=0; j<N; j++){
			scanf(""%lf"", &a[i][j]);
		}
	}
	for(i=0; i<M; i++){
		for(j=0; j<N; j++){
			if(a[0][j]!=a[i][(i+j)%N]){
				cirkularna = 0;
			}
		}
	}
	for(i=0; i<M-1; i++){
		for(j=0; j<N; j++){
			if(j+1<N){
				if(a[i][j]!=a[i+1][j+1]){
					teplicova = 0;
				}
			}
		}
	}
	if(cirkularna==1) printf(""Matrica je cirkularna"");
	else if(cirkularna == 0 && teplicova == 1) printf(""Matrica je Teplicova"");
	else printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}"
202,77,77,0,30,A2016/Z2/Z4/student7001,A2016/Z2/Z4/student7673,"#include <stdio.h>
#define EPSILON 0.001
int main() {
	int mat[100][100], M, N, i, j, teplicova=1, cirkularna=1;
	do {
	printf (""Unesite M i N: "");
	scanf (""%d %d"", &M, &N);
	if (M<=0 || M>100 || N<=0 || N>100) printf (""Pogresan unos!\n"");
	} while (M<=0 || M>100 || N<=0 || N>100);
	printf (""Unesite elemente matrice: "");
	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) {
			scanf (""%f"", &mat[i][j]);
		}
	}
	for (i=0; i<M-1; i++) {
		for (j=0; j<N-1; j++) {
			if (mat[i][j]!=mat[i+1][j+1]) {
				teplicova=0;
			}
		}
	}
	if (teplicova) {
	for (i=0; i<M-1; i++) {
		for (j=0; j<N-1; j++) {
			if (mat[i][N-1]!=mat[i+1][0]) {
				cirkularna=0;
			}
		}
	}
	}
	if (cirkularna) printf (""Matrica je cirkularna"");
	else if (cirkularna==0 && teplicova==1) printf (""Matrica je Teplicova"");
	else printf (""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}","#include <stdio.h>

int main() {
	double mat[100][100];
	 int M,N,cirk=1,i,j;int tep=1;
 
     do { 
   	printf(""Unesite M i N: "");
    scanf(""%d %d"",&M,&N);
    if( M<=0 || M>100 || N<=0 || N>100 ) printf(""Pogresan unos!\n"");
   } while( M<=0 || M>100 || N<=0 || N>100 ) ;
   
   
    printf(""Unesite elemente matrice: "");
    for(i=0;i<M;i++){
    	for(j=0;j<N;j++){
    		scanf(""%lf"",&mat[i][j]);
    	}
    }
    
    for(i=0;i<M-1;i++){
    	for(j=0;j<N-1;j++){
    		if(mat[i][j]!=mat[i+1][j+1]) tep=0;
    	}
    }
    if(tep==1)
    {
     for(i=0;i<M-1;i++){
    	
    		if(mat[i][N-1]!=mat[i+1][0])
    		{cirk=0;}
    	
    }
    }
    	if(tep==1)
    	{
    	 if (cirk==1) printf(""Matrica je cirkularna"");
    	 else printf(""Matrica je Teplicova"");
    	}
   else printf(""Matrica nije ni cirkularna ni Teplicova"");
   
	return 0;
}
"
209,91,91,0,16,A2016/Z1/Z2/student4804,A2016/Z1/Z2/student4195,"#include <stdio.h>
#include <math.h>
#define E 0.0001
int main() {
	double a1,a2,b1,b2,x,y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%lf,%lf,%lf,%lf"",&a1,&b1,&a2,&b2);
	if(fabs(a1-a2)<E && fabs(b1-b2)>E)
		{
			printf(""Paralelne su"");
			return 0;
		}
	if(fabs(a1-a2)<E && fabs(b1-b2)<E)
		{
			printf(""Poklapaju se"");
			return 0;
		}
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	return 0;
}","#include <stdio.h>
#include<math.h>
#define EPSILON 0.0001
#define printaj printf
#define citaj scanf

int main() {
	double a1,b1,a2,b2,x,y;
	printaj(""Unesite a1,b1,a2,b2: "");
	citaj(""%lf,%lf,%lf,%lf"",&a1,&b1,&a2,&b2);
	if(fabs(a1-a2)<EPSILON && fabs(b1-b2)>EPSILON) {
		printaj(""Paralelne su"");
		return 0;
	}

	else if(fabs(a1-a2)<EPSILON && fabs(b1-b2)<EPSILON) {
		printaj(""Poklapaju se"");
		return 0;
	}
		
	x=(b2-b1)/(a1-a2);
	y=a1*x + b1;
	printaj(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	return 0;
}
"
211,88,88,0,72,A2016/Z3/Z3/student8561,A2016/Z3/Z3/student5805,"#include <stdio.h>

int main() {
	int matrica[100][100],m,n,i,j,k,l,p,c,r,s;
	p=0;
	s=0;
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"",&m,&n);
		if(m<1 || m>200 || n<1 || n>200) 
		printf(""Brojevi nisu u trazenom opsegu.\n"");
	} while(m<1 || m>200 || n<1 || n>200);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++)
		scanf(""%d"",&matrica[i][j]);
	}
	
	for(i=0;i<m;i++){
		if(p==1)
		i--;
		for(k=i+1;k<m;k++){
			c=0;                                                  /*c=kolona, r=red*/
			while(c<n){
				if(matrica[i][c]==matrica[k][c]) p=1;
				else {
					p=0;
					break;
				}
				c++;
			}
			if(p==1){
				for(j=k;j<m-1;j++){
					for(l=0;l<n;l++) matrica[j][l]=matrica[j+1][l];
				}
			m--;
			k--;
			}
		}
	}
	
	for(i=0;i<n;i++){
		if(s==1)
		i--;
		for(k=i+1;k<n;k++){
			r=0;
			while(r<m){
				if(matrica[r][i]==matrica[r][k]) s=1;
				else{
					s=0;
					break;
				}
				r++;
			}
			if(s==1){
				for(j=k;j<n;j++){
					for(l=0;l<m;l++) 
					matrica[l][j]==matrica[l][j+1];
				}
				n--;
				k--;
			}
		}
	}
	
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++)
		printf(""%5d"",matrica[i][j]);
		printf(""\n"");
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	int M,N,matrica[100][100],i,j,k,h,kolona,red,ind=0,ind1=0;
	do{
	printf(""Unesite brojeve M i N: "");
	scanf(""%d %d"",&M,&N);
	if(M<1 || N<1 || M>200 || N>200)
		printf(""Brojevi nisu u trazenom opsegu.\n"");
	}while(M<1 || N<1 || M>200 || N>200);
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			scanf(""%d"",&matrica[i][j]);	
		}
	} 
	for(i=0;i<M-1;i++){
		if(ind==1)
			i--;
		for(k=i+1;k<M;k++){
			kolona=0;
			while(kolona<N){
				if(matrica[i][kolona]==matrica[k][kolona])
					ind=1;
				else{
					ind=0;
					break;
				}
				kolona++;
			}
		if(ind==1){
			for(j=k;j<M-1;j++){
				for(h=0;h<N;h++){
					matrica[j][h]=matrica[j+1][h];
				}
			}
			M--;
			k--;
		}
		}
	} 
	for(i=0;i<N-1;i++){
		if(ind1==1)
			i--;
		for(k=i+1;k<N;k++){
			red=0;
			while(red<M){
				if(matrica[red][i]==matrica[red][k])
					ind1=1;
				else{
					ind1=0;
					break;
				}
				red++;
			}
		if(ind1==1){
			for(j=k;j<N;j++){
				for(h=0;h<M;h++){
					matrica[h][j]=matrica[h][j+1];
				}
			}
			N--;
			k--;
		}
		}
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for(i=0;i<M;i++){
		for(j=0;j<N;j++)
			printf(""%5d"",matrica[i][j]);
		printf(""\n"");
	}
	return 0;
}

"
214,21,21,0,14,A2016/Z4/Z2/student2351,A2016/Z4/Z2/student1616,"#include <stdio.h>

void sortiranje(int *sortiraj, int *index)
{
	int i=0, j, temp1, temp2;
	i=0;
	while(i<95)
	{
		j=0;
		while(j<95)
		{
			if(sortiraj[j]<sortiraj[i])
			{
				temp1=sortiraj[i];
				sortiraj[i]=sortiraj[j];
				sortiraj[j]=temp1;
				
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			
			if(sortiraj[i]==sortiraj[j] && index[i]<index[j])
			{
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			j++;
		}
		i++;
	}
}

void stvori(char *kljuc, int *sortiraj, int *index)
{
	int i;
	i=0;
	do
	{
		if(sortiraj[i]!=0) 
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	
	i=0;
	do{
		if(sortiraj[i]==0)
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	*kljuc='\0';
}

char *kodiraj (char *tekst, char *kljuc)
{
	char *p=tekst;
	char *q;
	int niz[95], sort[95], in[95];
	int i, br;
	
	i=0;
	while(i<95) 
	{
		niz[i]=0;
		i++;
	}
	do{
		q=p;
		br=0;
		while(*q!='\0')
		{
		if(*p==*q) br++;
		q++;
		}
		if(niz[*p-32]==0) {niz[*p-32]=br;}
		p++;
	}
	while(*p!='\0');
	
	i=0;
	while(i<95)
	{
		sort[i]=niz[i];
		in[i]=i;
		i++;
	}
	sortiranje(sort, in);
	stvori(kljuc, sort, in);
	p=tekst;
	q=kljuc;
	
	do{
		q=kljuc;
		br=0;
		while(*q!='\0')
		{
			if(*p==*q)
			{
				*p=126-br;
				break;
			}
			br++;
			q++;
		}
		p++;
	} while(*p!='\0');
	return tekst;
}

char *dekodiraj(char *tekst, char *kljuc)
{
	char *p=tekst;
	do
	{
	*p=kljuc[126-*p];
	p++;
	} while(*p!='\0');
	return tekst;
}

int main() {
	char primjer[]=""LLMLNLNMONM"";
	char sifra[100]="""";
	printf(""%s"", kodiraj(primjer, sifra));
	return 0;
}
","#include <stdio.h>
void sortiraj(int *niz,int *sort,int *index)
{
	int i,j;
	int temp;

		for(i=0;i<127;i++)
		{
			for(j=i;j<127;j
			{
				if(niz[i]<niz[j])
				{
					temp=niz[i];
					niz[i]=niz[j];
					niz[j]=temp;

					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
				else if(niz[i]==niz[j] && index[i]>index[j])
				{
					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
			}
		}


}
void Pretvori(char *s,char *sifrarnik)
{
	char *p=s,*kljuc=sifrarnik;
	int br;
		while(*p!='\0')
		{	br=0;
			kljuc=sifrarnik;

			while(*kljuc!='\0')
			{
				if(*p==*kljuc++){*p=126-br;break;}
				br++;
			}
			p++;
		}

}
char *kodiraj(char *s,char *sifrarnik)
{

	char *p=s,*pok=sifrarnik;
	int i;
	int niz[127];
	int sort[127];
	int index[127];

		for(i=0;i<127;i++)
		{
			if(i<32){ niz[i]=-1; index[i]=-1;}
			else{niz[i]=0;index[i]=i;}
		}
		while(*p!='\0')
		{
			niz[*p+0]++;
			p++;
        }

		for(i=0;i<127;i++)
			sort[i]=niz[i];

		sortiraj(niz,sort,index);

		for(i=0;i<127;i++)
		{
			if(index[i]!=-1)
			{
				*pok=index[i];
				pok++;
			}
		}
		Pretvori(s,sifrarnik);

	return s;
}
char* dekodiraj(char *s,char *sifrarnik)
{

	char *p=s;

		while(*p!='\0')
		{
			*p=sifrarnik[126-*p];
			p++;
		}
	return s;

}
int main() {

	char tekst[] = ""U ovom testu cemo testirati samo kodiranje"";
    char sifrarnik[100] = """";
    kodiraj(tekst, sifrarnik);
    printf(""%s\n"", tekst);
    dekodiraj(tekst, sifrarnik);
    printf (""%s\n"", tekst);
    printf(""%s\n"", sifrarnik);

	return 0;
}
"
241,63,63,0,29,A2016/Z2/Z4/student6547,A2016/Z2/Z4/student6248,"#include <stdio.h>
#define SIRINA 100

int main() {
	int i,j,m,n,teplicova=1,cirkularna=1;
	double mat[SIRINA][SIRINA];
	do {
	printf(""Unesite M i N: "");
	scanf(""%d %d"",&m,&n);
	if(m<=0 || m>100 || n<=0 || n>100) printf(""Pogresan unos!\n""); } while(m<=0 || m>100 || n<=0 || n>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++) {
		for(j=0;j<n;j++) {
			scanf(""%lf"",&mat[i][j]);
		}
	}
	
		for(i=0;i<m-1;i++) {
			for(j=0;j<n-1;j++) {
				if(mat[i][j]!=mat[i+1][j+1] || mat[i][n-1]!=mat[i+1][0]) {
					cirkularna=0;
					break;
				}
			}
			if(cirkularna==0) break;
		}
		if(cirkularna==1) printf(""Matrica je cirkularna"");
		
		else {
	
	for(i=0;i<m-1;i++) {
		for(j=0;j<n-1;j++) {
			if(mat[i][j]!=mat[i+1][j+1]) {
				teplicova=0;
				break; }
		}
		if(teplicova==0) break;
		
	}
	if(teplicova==1) printf(""Matrica je Teplicova"");
	
}
	if(teplicova==0 && cirkularna==0) printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
","#include <stdio.h>

int main() {
	int mat[100][100]={{0}};
	int m,n,i,j,tep=1,cirk=1,negativni=1;
	do{
		printf(""Unesite M i N: "");
		scanf(""%d %d"",&m,&n);
		if(m>100 || m<1 || n>100 || n<1) printf(""Pogresan unos!\n"");
	} while(m>100 || m<1 || n>100 || n<1);
	printf(""Unesite elemente matrice: "");
	for(i=0; i<m; i++){
		for(j=0; j<n; j++){
			scanf(""%d"",&mat[i][j]);
		}
	}
	for(i=0; i<m; i++){
		for(j=0; j<n; j++){
			if(mat[i][j]<0) { negativni=0; break; }
		}
	}
	if(m==1 && n==1) printf(""Matrica je cirkularna"");
	else if(m==1) printf(""Matrica je cirkularna"");
	else if(n==1) printf(""Matrica je Teplicova"");
	else {
	for(i=0; i<m-1; i++){
		for(j=0; j<n-1; j++){
			if(mat[i][j]!=mat[i+1][j+1]) { tep=0; break; }
		}
	}
	if (tep==1){
	for(i=0; i<m-1; i++){
		for(j=0; j<n; j++){
			if(mat[i][n-1]!=mat[i+1][0]) { cirk=0; break; }
		}
	}
	}
	if(negativni==0 || tep==0) printf(""Matrica nije ni cirkularna ni Teplicova"");
    else if(cirk==1 ) printf(""Matrica je cirkularna"");
	else if(tep==1 || (tep==1 && cirk==0)) printf(""Matrica je Teplicova"");
	}

	return 0;
}
"
244,36,36,0,23,A2016/Z3/Z1/student1772,A2016/Z3/Z1/student6008,"#include <stdio.h>
int daj_prost () {
	int i,m,l;
	static int t=2;
	
	if(t==2){
         t++;	
		return 2;
	}
    for(i=t;i<10000;i++){
    	m=1;
    	for(l=2;l<t;l++){
    		if(t%l==0){
    			m=0;
    		}
    	}
    		t++;
    		if(m==0){
    			continue;
    		}
    	if(m==1){
    		return i;
    	}
    		
    	}
    	
    }

int main() {
	int i,a,b,suma=0,l;
	for(i=0;i<1;i++){
		printf(""Unesite brojeve A i B: "");
		scanf(""%d%d"",&a,&b);
		if(a<1){
			printf(""A nije prirodan broj.\n"");
			i--;
			continue;
		}
		if(a>=b){
			printf(""A nije manje od B.\n"");
			i--;
		}
	}
	for(i=1;i<b;i++){
		l=daj_prost();
		if(l>a && l<b){
			suma=suma+l;
		}
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b,suma);
	return 0;
}
","#include <stdio.h>

int daj_prost(){
	int k, c, j;
	static int i = 2;
	for (c = i; c < 1000000; c++){ 
		k = 1;
		for (j = 2; j < c; j++){
			if(c % j == 0){
				k = 0; 
			}
		}
		i++;
		
		if (k == 0) 
			continue;
		
		if (k == 1)
			return c;
	}
}


int main() {
	int a, b, i, suma=0, d = 0;
	
	while(2>1){ 
		printf(""Unesite brojeve A i B: "");
		scanf(""%d%d"", &a, &b);
		if(a>=b){
			printf(""A nije manje od B.\n"");
			continue;
		}
		if(a<=0){
			printf(""A nije prirodan broj.\n"");
			continue;
		}
		if (b < 1) {
			printf(""B nije prirodan broj.\n"");
			continue;
		}
		break;
	}
	
	
	while(d < a)
		d = daj_prost();
	
	for(i=a; i<b; i++){
		if(d>a && d<b)
			suma = suma + d;
		d=daj_prost();
		
	}
	
	printf(""Suma prostih brojeva izmedju %d i %d je %d."", a, b, suma);
	
	return 0;
}
"
260,97,97,0,27,A2016/Z2/Z3/student8580,A2016/Z2/Z3/student4852,"#include <stdio.h>

int main() {
	int x[10],y[10],i,j,u,t,b;
	do{
	    printf(""Unesite broj tacaka: "");
	    scanf(""%d"",&b);
	    if(b>10||b<=0){
	    printf(""Pogresan unos\n"");}
	}while(b>10||b<=0);
	for(u=0;u<b;u++){
	    printf(""Unesite %d. tacku: "",u+1);
	    scanf(""%d %d"",&x[u],&y[u]);
	    if(x[u]<0||x[u]>19||y[u]<0||y[u]>19){
	    printf(""Pogresan unos\n"");u--;}
	    	}
	    	
	    	
	    for(i=0;i<=19;i++){
	        for(j=0;j<=19;j++){
	            for(t=0;t<b;t++){
	                if(i==y[t]&&j==x[t]){
	                printf(""*"");
	                break;}
	            }
	            if(t==b)
	            printf("" "");
	        }
	        printf(""\n"");
	        
	    }
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	return 0;
}
","#include <stdio.h>

int main() {
	int x[10],y[10],i,j,u,t,b;
	do{
	    printf(""Unesite broj tacaka: "");
	    scanf(""%d"",&b);
	    if(b>10||b<=0){
	    printf(""Pogresan unos\n"");}
	}while(b>10||b<=0);
	for(u=0;u<b;u++){
	    printf(""Unesite %d. tacku: "",u+1);
	    scanf(""%d %d"",&x[u],&y[u]);
	    if(x[u]<0||x[u]>19||y[u]<0||y[u]>19){
	    printf(""Pogresan unos\n"");u--;}
	    	}
	    	
	    	
	    for(i=0;i<=19;i++){
	        for(j=0;j<=19;j++){
	            for(t=0;t<b;t++){
	                if(i==y[t]&&j==x[t]){
	                printf(""*"");
	                break;}
	            }
	            if(t==b)
	            printf("" "");
	        }
	        printf(""\n"");
	        
	    }
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	return 0;
}
"
261,33,33,0,18,A2016/Z2/Z2/student6259,A2016/Z2/Z2/student7173,"#include <stdio.h>
#include <stdlib.h>
#define PI 3.1415926

int main() {
	
	int n, i, k;
	double niz[500], st[500], m[500], s[500];
	
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	
	for(i=0; i<n; i++) {
		scanf(""%lf"", &niz[i]);
	}
	
	printf(""Uglovi su:\n"");
	for(i=0; i<n; i++) {
		
		niz[i]=niz[i]*(double)180/PI;
		st[i]=(int)niz[i];
		
		niz[i]=(niz[i]-st[i])*60;
		m[i]=(int)niz[i];
		
		niz[i]=(niz[i]-m[i])*60;
		if(niz[i]>0)
			s[i]=(niz[i] +0.5);
		else s[i]=(niz[i]-0.5);
		
		if(abs((int)s[i])==60){
			s[i]=0;
			if(niz[i]>0) m[i]++;
			else m[i]--;
		}
			
		if(abs((int)m[i])==60){
			m[i]=0;
			if(niz[i]>0) st[i]++;
			else st[i]--;
		}
		
		if(abs(s[i])>30) {
			for(k=i; k<n-1; k++)
			niz[k]=niz[k+1];
			i--;
			n--;
			}
	}
	
	for(i=0; i<n; i++)
	printf(""%d stepeni %d minuta %d sekundi\n"", (int)st[i], abs((int)m[i]), abs((int)s[i]));

	return 0;
}
","#include <stdio.h>
#define pi 3.1415926

int main() {
	int i,j,n;
	double step[500],min[500],sek[500],niz[500];

	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
    
	
	for(i=0; i<n; i++) {
	scanf(""%lf"", &niz[i]);
	}
	
	for(i=0; i<n; i++) {
	if (niz[i]>0){
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=niz[i]-step[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=(niz[i]-min[i]);
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	
		if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]++;
		min[i]=0; }
	
		}
		
	
	else {
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=step[i]-niz[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=niz[i]-min[i];
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]--;
		min[i]=0; }
	
	
	}
	}
	

	for(i=0; i<n; i++) {
		if(sek[i]>30) {
			for (j=i; j<n-1; j++) {
			step[j]=step[j+1];	
			min[j]=min[j+1];
			sek[j]=sek[j+1];
			}
			
		n--;
		i--;
		}
	}
	
	printf(""Uglovi su:"");
	for(i=0; i<n; i++) 
    printf(""\n%g stepeni %g minuta %g sekundi"",step[i], min[i], sek[i]);
	
	return 0;
}
"
262,99,99,0,52,A2016/Z2/Z2/student4639,A2016/Z2/Z2/student4416,"#include <stdio.h>
#include <math.h>
#define PI 3.1415926
int main() {
	int n,st[500],min[500],sek[500],j,i;
	double x,niz[500];
	printf(""Unesite broj uglova: "");
	scanf (""%d"",&n);
	printf (""Uglovi su: "");
	for (i=0;i<n;i++)
	scanf (""%lf"",&niz[i]);
	for (i=0;i<n;i++){
		x=niz[i]*180/PI;
		st[i]=(int)x;
		min[i]=(int)fabs(60*(x-st[i]));
		sek[i]=(int)((60*(fabs(60*(x-st[i]))-min[i]))+0.5);
		if (sek[i]==60) {
			min[i]++;
			sek[i]=0;
		}
		if (min[i]==60) {
			if (st[i]>0)
			st[i]++;
			else st[i]--;
			min[i]=0;
		}
	}
	for (i=0;i<n;i++){
		if (sek[i]>30){
			for(j=i;j<n-1;j++) {
				niz[j]=niz[j+1];
				sek[j]=sek[j+1];
			}
			n--;
			i--;
		}
	}
	for (i=0;i<n;i++) {
		x=niz[i]*180/PI;
		st[i]=(int)x;
		min[i]=(int)fabs(60*(x-st[i]));
		sek[i]=(int)((60*(fabs(60*(x-st[i]))-min[i]))+0.5);
		if (sek[i]==60) {
			min[i]++;
			sek[i]=0;
		}
		if (min[i]==60) {
			if (st[i]>0)
			st[i]++;
			else st[i]--;
			min[i]=0;
		}
		printf (""\n%d stepeni %d minuta %d sekundi"",st[i],min[i],sek[i]);
	}
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define PI 3.1415926
int main() {
	int n,st[500],min[500],sek[500],j,i;
	double x,niz[500];
	printf(""Unesite broj uglova: "");
	scanf (""%d"",&n);
	printf (""Uglovi su: "");
	for (i=0;i<n;i++)
	scanf (""%lf"",&niz[i]);
	for (i=0;i<n;i++){
		x=niz[i]*180/PI;
		st[i]=(int)x;
		min[i]=(int)fabs(60*(x-st[i]));
		sek[i]=(int)((60*(fabs(60*(x-st[i]))-min[i]))+0.5);
		if (sek[i]==60) {
			min[i]++;
			sek[i]=0;
		}
		if (min[i]==60) {
			if (st[i]>0)
			st[i]++;
			else st[i]--;
			min[i]=0;
		}
	}
	for (i=0;i<n;i++){
		if (sek[i]>30){
			for(j=i;j<n-1;j++) {
				niz[j]=niz[j+1];
				sek[j]=sek[j+1];
			}
			n--;
			i--;
		}
	}
	for (i=0;i<n;i++) {
		x=niz[i]*180/PI;
		st[i]=(int)x;
		min[i]=(int)fabs(60*(x-st[i]));
		sek[i]=(int)((60*(fabs(60*(x-st[i]))-min[i]))+0.5);
		if (sek[i]==60) {
			min[i]++;
			sek[i]=0;
		}
		if (min[i]==60) {
			if (st[i]>0)
			st[i]++;
			else st[i]--;
			min[i]=0;
		}
		printf (""\n%d stepeni %d minuta %d sekundi"",st[i],min[i],sek[i]);
	}
	return 0;
}
"
265,70,70,0,32,A2016/Z3/Z2/student4108,A2016/Z3/Z2/student6877,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define br_el 10
#define br_el2 20


int ubaci (int *niz, int velicina){
	int cifra,i,br, br2=0;
	for(i=velicina-1; i>=0;i--){
		*(niz+2*i)=*(niz+i);
	}
	for(i=0;i<velicina*2;i++){
		if(i%2==1){
			br=*(niz+i-1);
			while(br!=0){
				cifra=br%10;
				br2+=cifra;
				br/=10;	
			}
			br2=abs(br2);
			*(niz+i)=br2;
			br2=0;
		}
	}
		
	}
	
	

/*
int izbaci(){
	
}
*/
int main() {

	int niz[10],i,n;
	
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++){
	scanf(""%d"",&niz[i]);
	}
	
/*	n=ubaci(niz, br_el);
	
	n=izbaci (niz, br_el2);

	
*/
	printf(""Modificirani niz glasi: "");
	for(i=0;i<n;i++){
		if(i<(n-1)){
			printf(""%d"",niz[i]);
		}
		else {
			printf(""%d"",niz[i]);
		}
	}
	
	
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>

#define velniz1 10
#define velniz2 20

void ubaci(int *niz,int vel1)
{
	int i,suma=0,zadcifra,broj;
	for(i=vel1-1;i>=0;i--)
	*(niz+2*i)=*(niz+i);
	for(i=0;i<vel1*2;i++)
	{
		if (i%2==1)
		{
			broj=*(niz+i-1);
			while(broj!=0)
			{
			zadcifra=broj%10;
			suma=suma+zadcifra;
			broj=broj/10;
			}
		suma=abs(suma);	
		*(niz+i)=suma;
		suma=0;
		}
	}
}

int izbaci(int *niz,int vel2)
{
	int i,j,k,prvi,drugi,temp;
	for(i=0;i<vel2;i++)
	{
		prvi=0;
		drugi=1;
		for(j=0;j<1000;j++)
		{
			temp=prvi+drugi;
			prvi=drugi;
			drugi=temp;
			if( *(niz+i)==temp)
			{
				for(k=i;k<vel2-1;k++)
				{
					*(niz+k)=*(niz+k+1);
				}
			vel2--;
			i--;
			break;
			}
		}
	}
    return vel2;	
}

int main() {
	int niz[20],i,brclanova;
	printf(""\nUnesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	scanf(""%d"",&niz[i]);
	ubaci(niz,velniz1);
	brclanova=izbaci(niz,velniz2);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<brclanova;i++)
	{
		if(i<(brclanova-1)) printf(""%d, "",niz[i]);
		else printf(""%d. "",niz[i]);
	}
	return 0;
}
"
269,88,88,0,58,A2016/Z2/Z4/student2585,A2016/Z2/Z4/student4185,"#include <stdio.h>

int main() {
int  M, N, i, j, cirkularna, teplicova;
teplicova=1;
cirkularna=1;
double m[100][100];

do
{
    printf(""Unesite M i N: "");
    scanf(""%d %d"", &M, &N);
    if(M>100 || N>100 || M<=0 || N<=0) {printf(""Pogresan unos!\n"");}
    
} while (M>100 || N>100 || M<=0 || N<=0);

printf(""Unesite elemente matrice: "");

for(i=0; i<M; i++)
{
    for(j=0; j<N; j++)
    {
        scanf(""%lf"", &m[i][j]);
        
    }
}

for(i=1; i<M; i++)
{
    for(j=1; j<N; j++)
    {
        if(m[i][j]!=m[i-1][j-1])
        {
            teplicova=0;
            
        }
    }
}

for(i=1; i<M; i++)
{
    
         if(m[i][0]!=m[i-1][N-1] )
        {
           cirkularna=0;
           break;
        }
        
    
    
}

    if(cirkularna && teplicova) 
    {
        printf(""Matrica je cirkularna\n"");
    }
  
    else if(teplicova && cirkularna==0)
    {
        printf(""Matrica je Teplicova\n"");
    }
    else
    {
        printf(""Matrica nije ni cirkularna ni Teplicova"");
        
    }

return 0;
}","#include <stdio.h>

int main() {
	int m,n,cir=1, tep=1,i,j,k;
	double mat[100][100];
	do{
	printf(""Unesite M i N: "");
	scanf(""%d %d"", &m, &n);
	if(m>100 || n>100 || n<=0 || m<=0){printf(""Pogresan unos!\n"");}
	} while(m>100 || n>100 || m<=0 || n<=0);
	
	
	printf(""Unesite elemente matrice: "");
	
	for(i=0; i<m; i++)
	{
		for(j=0; j<n; j++)
		{
			scanf(""%lf"", &mat[i][j]);
		}
		
		
	}
	
	for(i=1; i<m; i++)
	{
		for(j=1; j<n; j++)
		{
			if(mat[i][j]!=mat[i-1][j-1]) {  tep=0;   }
			
		}
		
		
	}
	
	for(i=1; i<m; i++)
	{
		if(mat[i][0]!=mat[i-1][n-1]){  cir=0; break;  }
		
		
		
	}
		
	if(cir && tep){ printf(""Matrica je cirkularna "");   }
	else if(tep && cir==0) { printf(""Matrica je Teplicova "");}
	else  { printf(""Matrica nije ni cirkularna ni Teplicova"");}
	

	
	return 0;
}
"
271,53,53,0,30,A2016/Z2/Z2/student4682,A2016/Z2/Z2/student5659,"#include <stdio.h>
#define pi 3.1415926

int main() {
	int i,j,n;
	double step[500],min[500],sek[500],niz[500];

	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
    
	
	for(i=0; i<n; i++) {
	scanf(""%lf"", &niz[i]);
	}
	
	for(i=0; i<n; i++) {
	if (niz[i]>0){
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=niz[i]-step[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=(niz[i]-min[i]);
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	
		if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]++;
		min[i]=0; }
	
		}
		
	
	else {
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=step[i]-niz[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=niz[i]-min[i];
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]--;
		min[i]=0; }
	
	
	}
	}
	

	for(i=0; i<n; i++) {
		if(sek[i]>30) {
			for (j=i; j<n-1; j++) {
			step[j]=step[j+1];	
			min[j]=min[j+1];
			sek[j]=sek[j+1];
			}
			
		n--;
		i--;
		}
	}
	
	printf(""Uglovi su:"");
	for(i=0; i<n; i++) 
    printf(""\n%g stepeni %g minuta %g sekundi"",step[i], min[i], sek[i]);
	
	return 0;
}
","#include <stdio.h>
#include<math.h>
#define pi 3.1415926
#define m 0.1

int main() {
	int i,j,n;
	double niz[500],sec[500],step[500],min[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	for(i=0;i<n;i++) {
		scanf(""%lf"",&niz[i]);
	}
	for(i=0;i<n;i++){
	
		niz[i]=niz[i]*(180/pi);
		step[i]=(int)niz[i];
		min[i]=(niz[i]-(int)niz[i])*60;
		sec[i]=(min[i]-(int)min[i])*60;
		min[i]=(int)min[i];
		if(niz[i]<0) {
			sec[i]=-(int)(sec[i]-0.5);
			min[i]=-min[i];
		}
		if(min[i]==-0) min[i]=0;
		sec[i]=(int)(sec[i]+0.5);
		
	}
	for(i=0;i<n;i++){
		if(sec[i]>30 || sec[i]<-30) {
			for(j=i;j<n;j++){
			sec[j]=sec[j+1];
			min[j]=min[j+1];
			step[j]=step[j+1];
		}
		n--;
		i--;
		}
	}
	printf(""Uglovi su: \n"");
	for(i=0;i<n;i++) {
		printf(""%g stepeni %g minuta %g sekundi \n"",step[i],min[i],sec[i]);
		}
	return 0;
}
"
272,95,95,0,68,A2016/Z2/Z2/student4934,A2016/Z2/Z2/student3610,"#include <stdio.h>
#include <math.h>
#define PI 3.1415926
#define B 500
int main () {
    int j,a;
    double nstup[B],nmin[B],nsek[B],x[B];
    
    do {
        printf (""Unesite broj uglova: "");
        scanf (""%d"",&a);
        }
    while (a>500 || a<0);
        for (j=0;j<a;j++) {
            printf ("""",j+1);
            scanf (""%lf"",&nstup[j]);
        }
    for (j=0;j<a;j++) {
        nstup[j]=nstup[j]*(180/PI);
        if (nstup[j]>360) {
            nstup[j]=(nstup[j]-((int)(nstup[j]/360)*360));
        }
        nmin[j]=((nstup[j]*60)-(int)nstup[j]*60);
        nsek[j]=(nmin[j]*60)-(int)nmin[j]*60;
        nsek[j]=(floor(nsek[j]+0.5));
        if ((nsek[j]>30 && nsek[j]<=59.49) || (nsek[j]<-30 && nsek[j]>=-59.49)) {
            x[j]=0;
        }else {
            x[j]=1;
        }
        if (nsek[j]>59.5){
            nmin[j]=nmin[j]+1;
            nsek[j]=0;
        }
        else if (nsek[j]<-59.5){
            nmin[j]=nmin[j]-1;
            nsek[j]=0;
        }
        if(nmin[j]>59.5){
            nstup[j]=nstup[j]+1;
            nmin[j]=0;
        }
        else if (nmin[j]<-59.5){
            nstup[j]=nstup[j]-1;
            nmin[j]=0;
        }
    }
    printf (""Uglovi su:\n"");
    for (j=0;j<a;j++) {
        if (x[j]==1){
            nmin[j]=fabs(nmin[j]);
            nsek[j]=fabs(nsek[j]);
            printf (""%d stepeni "",(int)nstup[j]);
            printf(""%d minuta "",(int)nmin[j]);
            printf (""%d sekundi "",(int)nsek[j]);
            printf (""\n"");
        }
    }
        return 0;
    }","#include <stdio.h>
#include <math.h>
#define PI 3.1415926
#define BMAX 500
int main() {
	int a,b;
	double NSTEPENI[BMAX],NMINUTA[BMAX],NSEKUNDI[BMAX],C[BMAX];
	do 
	{
		printf(""Unesite broj uglova: "");
		scanf(""%d"",&b);
		
	}
	while(b<0 || b>500);
	for(a=0;a<b;a++)
	{
		printf("""",a+1);
		scanf(""%lf"",&NSTEPENI[a]);
		
	}
	for(a=0;a<b;a++)
	{
		NSTEPENI[a]=NSTEPENI[a]*(180/PI);
		if(NSTEPENI[a]>360)
		{
			NSTEPENI[a]=(NSTEPENI[a]-((int)(NSTEPENI[a]/360)*360));
			
		}
		NMINUTA[a]=((NSTEPENI[a]*60)-(int)NSTEPENI[a]*60);
		NSEKUNDI[a]=(NMINUTA[a]*60)-(int)NMINUTA[a]*60;
		NSEKUNDI[a]=(floor(NSEKUNDI[a]+0.5));
		if((NSEKUNDI[a]>30 && NSEKUNDI[a]<=59.49) || (NSEKUNDI[a]<-30 && NSEKUNDI[a]>=-59.49))
		{
			C[a]=0;
			
		}
		else
		{ C[a]=1;
			
		}
		if(NSEKUNDI[a]>59.5)
		{
			NMINUTA[a]=NMINUTA[a]+1;
			NSEKUNDI[a]=0;
			
		}
		else if(NSEKUNDI[a]<-59.5)
		{
			NMINUTA[a]=NMINUTA[a]-1;
			NSEKUNDI[a]=0;
			
		}
		if(NMINUTA[a]>59.5)
		{
			NSTEPENI[a]=NSTEPENI[a]+1;
			NMINUTA[a]=0;
		}
		else if(NMINUTA[a]<-59.5)
		{
			NSTEPENI[a]=NSTEPENI[a]-1;
			NMINUTA[a]=0;
		}
		
	}
	printf(""Uglovi su:\n"");
	for(a=0;a<b;a++)
	{
		if(C[a]==1)
		{
			NMINUTA[a]=fabs(NMINUTA[a]);
			NSEKUNDI[a]=fabs(NSEKUNDI[a]);
			printf(""%d stepeni %d minuta %d sekundi"",(int)NSTEPENI[a],(int)NMINUTA[a],(int)NSEKUNDI[a]);
			printf(""\n"");
			
		}
		
	}
	return 0;
}
		
	
"
282,16,16,0,18,A2016/Z5/Z1/student8480,A2016/Z5/Z1/student2526,"#include <stdio.h>
#define epsilon 0.0001

struct Student{ //zadana struktura
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

int uporedi(char* s1, char* s2){ //funkcija iz predavanja koja leksikografski poredi dva stringa
	while(*s1!='\0' && *s2!='\0'){
		if(*s1<*s2) return 1; //ako prvi string treba biti ispred drugog vrati 1
		if(*s1>*s2) return 2; //ako drugi string treba biti ispred prvog vrati 2
		s1++; s2++;
	}
		if(*s1!='\0') return 2; //ako prvi string nije dosao na kraj, tj. ima jos slova, drugi je ispred njega i vrati 2
		if(*s2!='\0') return 1;//ako drugi string nije dosao na kraj, tj. ima jos slova, prvi je ispred njega i vrati 1
	return 0; //ako su dva ista stringa vrati 0
}

float prosjek(int niz[], int vel){ //funkcija racuna prosjek svakog studenta pojedinacno i to u zavisnosti od broja ocjena
	int i=0, suma=0;
	
	if(vel==0) return 5; // u zadatku je receno ako je velicina 0, da je prosjek 5, tj. pao
	
	for(i=0;i<vel;i++) 
		if(niz[i]==5) return 5; //ako ima ijednu 5, prosjek je 5, tj. pao
			for(i=0;i<vel;i++){
				suma+=niz[i]; //racunamo sumu
			}

	float prosjek=(float)suma/vel; //float da bi dobili decimalan broj
	return prosjek;
}



int dalijeveci(struct Student pr, struct Student dr){ // funkcija priam dva studenta, vraca 1 ako prvi treba biti ispred drugog, u suprotnom 0
	if(prosjek(pr.ocjene, pr.br_ocjena)>prosjek(dr.ocjene, dr.br_ocjena)) return 1; //ako je prosjek prvog veci, onda treba vratiti 1, tj. da on bude prije drugog
	if(prosjek(pr.ocjene, pr.br_ocjena)<prosjek(dr.ocjene, dr.br_ocjena)) return 0; //ako je prosjek prvog manji, onda ovaj student ne treba biti prije drugog
//ovdje se podrazumijeva da im je prosjek jednak je funkcija nije nista vratila, pa dalje poredimo prezimena
	if(uporedi(pr.prezime, dr.prezime)==1) return 1;
	if(uporedi(pr.prezime, dr.prezime)==2) return 0;
//podrazumijeva se da su im imena ista ako nije do sada nista vratila, pa isto kao i za prezimena, poredimo imena	
	if(uporedi(pr.ime, dr.ime)==1) return 1;
	if(uporedi(pr.ime, dr.ime)==2) return 0;
	else return 1; //ako su im jednaki prosjeci, prezimena i imena, svejedno je sta ce funkcija vratiti
}


int genijalci(struct Student niz[], int vel, double prosjekk){ //glavna funkcija koja primi niz struktura, velicinu niza i zadani prosjek
	int i, j, indexmin=0, indexprvi, indexdrugi, indextreci;
	double min=10;
	
for(i=0;i<vel;i++){
	if(prosjekk-prosjek(niz[i].ocjene, niz[i].br_ocjena)>epsilon){//ako je nas prosjek manji od zadanog moramo izbaciti
		for(j=i;j<vel-1;j++){ //izbacivanje kao i kod obicnih nizova
			niz[j]=niz[j+1];
		}
	vel--;
	i--;
	}
}
//iznad se vel niza smanjivala, sada nam je vel onolliko koliko je ostalo struktura u nizu nakon izbacivanja onih ispod prosjeka
for(i=0;i<vel;i++){//prolazak kroz preostali niz i nalazenje minimuma i pamtimo mu index
	if(min-prosjek(niz[i].ocjene, niz[i].br_ocjena)>epsilon){
		min=prosjek(niz[i].ocjene, niz[i].br_ocjena);
			indexmin=i;
	}
}
	
int maxprvi=5;

switch(vel){
		
case 0:
	break;
case 1: //ako je vel 1, printamo samo tog jednog studenta
	maxprvi=5; indexprvi=indexmin; //indexmin smo morali naci prije da bi bili sigurni da pokazuje na najmanji i trazimo sve vece od njega
		
	for(i=0;i<vel;i++){
		int temp_prosjek=prosjek(niz[i].ocjene, niz[i].br_ocjena);
		
		if(dalijeveci(niz[i],niz[indexprvi])){ //poziv funkcije koja trazi studenta koji ima najveci prosjek, ako ima isti onda poredi imena i prezimena
			indexprvi=i; //pamtimo index
			maxprvi=temp_prosjek;
		}
	}

printf(""\n%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime); //printamo najboljeg studenta
	break;
		
case 2: //ako je vel 2, printamo ta dva studenta
	indexprvi=indexmin;
		
	for(i=0;i<vel;i++){
		if(dalijeveci(niz[i],niz[indexprvi])==1) indexprvi=i; //pamtimo indexprvog tj. najveceg studenta da bi u iducoj petlji mogli ga preskociti
	}
		
printf(""%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime);
	
indexdrugi=indexmin;
		
for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){ //preskacemo onog najboljeg
			indexdrugi=i;
	}
}

printf(""%s %s\n"", niz[indexdrugi].prezime, niz[indexdrugi].ime);
	break;
		
default: 
	
	indexprvi=indexmin; //nadjemo najveceg
		
for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indexprvi])==1)
		indexprvi=i; 
}
		
printf(""%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime);

indexdrugi=indexmin;

for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){
		indexdrugi=i;
	}
}
	
printf(""%s %s\n"", niz[indexdrugi].prezime, niz[indexdrugi].ime);

indextreci=indexmin;

for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indextreci])==1 && i!=indexprvi && i!=indexdrugi)//preskacemo one koje smo ispisali
		indextreci=i;
}

printf(""%s %s\n"", niz[indextreci].prezime, niz[indextreci].ime);
}
	return vel;
}


int main() {

struct Student studenti[5]={
	
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Meho"", ""Mujic"", {7,7,7,7,8},5},
	{""Beba"", ""Bebic"", {10,10,10,10,5},5},
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Fata"", ""Fatic"", {7,7,7,7,8},5},
};

genijalci(studenti,5,6.5);

	return 0;
}
","#include <stdio.h>
#include <string.h>
struct Student {
char ime[20], prezime[20];
int ocjene[50];
	int br_ocjena;
};
/* Funkcija za racunanje prosjeka ocjena */
float prosjekstudenta(int *niz,int brojocjena){
	if(brojocjena==0) return 5;
	int i,suma=0;
	double prosjek1;
	for (i=0;i<brojocjena;i++){
		if(niz[i]==5) return 5;
		else suma+=niz[i];
	}
	prosjek1=(float)suma/brojocjena;
	return prosjek1;
}
int genijalci(struct Student *niz,int velicina,double prosjek){
	int i,j;
	/* Izbacivanje studenata sa manjim prosjekom od zadatog */
	for (i=0;i<velicina;i++){
		if (prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena)<prosjek){
			for (j=i;j<velicina-1;j++){
				niz[j]=niz[j+1];
			}
			velicina--;
			i--;
		}
	}
	/* Trazenje najboljih studenata */
	int max1=0,max2=0,max3=0;
	double prosjek1=0,prosjek2=0,prosjek3=0;
	for (i=0;i<velicina;i++){
		if ((prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena))>=prosjek&&prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena)>prosjek1){
			max1=i; 
			prosjek1=prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena);
		}
	}
	for (i=0;i<velicina;i++){
		if ((prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena))>=prosjek&&i!=max1&&prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena)>prosjek2){
			max2=i; 
			prosjek2=prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena);
		}
	}
	for (i=0;i<velicina;i++){
		if ((prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena))>=prosjek&&i!=max1&&i!=max2&&prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena)>prosjek3){
			max3=i; 
			prosjek3=prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena);
		}
	}
	int tmp;
	/* Leksikografsko poredjenje, a zatim ispis */
	for (i=0;i<velicina;i++){
		if (prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena)==prosjek1&&i!=max1){
			if (strcmp (niz[max1].prezime,niz[i].prezime)>0) {
				tmp=max1;
				max1=i;
			}
			if (max2==max1) max2=tmp;
			if (max3==max1) max3=tmp;
		}
	}
	for (i=0;i<velicina;i++){
		if (prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena)==prosjek2&&i!=max2&&i!=max1){
			if (strcmp (niz[max2].prezime,niz[i].prezime)>0){
				tmp=max2;
				max2=i;
			
			}
			if (max3==max2) max3=tmp;
		}
	}
	for (i=0;i<velicina;i++){
		if (prosjekstudenta(niz[i].ocjene,niz[i].br_ocjena)==prosjek3&&i!=max3&&i!=max1&&i!=max2){
			if (strcmp (niz[max3].prezime,niz[i].prezime)>0) max3=i;
		}
	}
	if (prosjek1!=0) printf (""%s %s \n"",niz[max1].prezime,niz[max1].ime);
	if (prosjek2!=0) printf (""%s %s \n"",niz[max2].prezime,niz[max2].ime);
	if (prosjek3!=0) printf (""%s %s \n"",niz[max3].prezime,niz[max3].ime);

	
	return velicina;
	
	
}


int main() {
struct Student studenti[4] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 4, 6.5);

	return 0;
}
"
284,99,99,0,32,A2016/Z1/Z4/student3421,A2016/Z1/Z4/student4852,"#include <stdio.h>

int main() 
{
	int a,b,n;
    
    
	do {
	    printf(""Unesite broj n: "");
		scanf(""%d"", &n);
		if(n<=0 || n>50){
			printf(""Pogresan unos \n"");
			
		}
		
		}	while(n<=0 || n>50);
		if(n==1){
			printf(""***"");
			return 0;
		}
		
		for(a=0; a<n; a++)
		{
			for(b=0; b<4*n-3; b++) {
				if(a==b || 2*n-2-a==b || 2*n-2+a==b || 4*n-4-a==b) {
					printf(""*"");
				}
			else { 
				printf("" ""); }
			
			}
	printf(""\n"");
		}	
	return 0;
		}
","#include <stdio.h>

int main() {
	int n,i,j;
	do{
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
		if(n<=0||n>50)
		printf(""Pogresan unos\n"");	}
	while(n<=0||n>50);
	if(n==1){
	printf(""***"");
	return 0;}
	
	
	for(i=0;i<n;i++){
		for(j=0;j<4*n-3;j++){
			if(i==j||2*n-2-i==j||2*n-2+i==j||4*n-4-i==j){
			printf(""*"");
			}
			else
			printf("" "");
		}printf(""\n"");
		}

	return 0;
}
"
286,99,99,0,30,A2016/Z2/Z2/student2463,A2016/Z2/Z2/student5222,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define PI 3.1415926
int main()
{
	int n, i, j, ugao;
	float polje[500];
	int step=0, min=0, sec=0;

	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	for(i=0; i<n; i++) {
		scanf(""%f"", &polje[i]);
	}
	printf(""Uglovi su: "");
	for(i=0; i<n; i++) {
		if(polje[i]>=0)
			ugao=((polje[i]*180*3600/PI)+0.5);
		else
			ugao=((polje[i]*648000/PI)-0.5);
		step=ugao/3600;
		if(ugao<0)
			ugao=ugao*-1;
		sec=ugao%60;
		ugao=ugao/60;
		min=ugao%60;
		if(sec<=30) {
			printf(""\n%d stepeni"", step);
			printf("" %d minuta"", min);
			printf("" %d sekundi"", sec);
		}
	}
	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define PI 3.1415926
int main()
{
	int n, i, j, ugao;
	float polje[500];
	int step=0, min=0, sec=0;

	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	for(i=0; i<n; i++) {
		scanf(""%f"", &polje[i]);
	}
	printf(""Uglovi su: "");
	for(i=0; i<n; i++) {
		if(polje[i]>=0)
			ugao=((polje[i]*180*3600/PI)+0.5);
		else
			ugao=((polje[i]*648000/PI)-0.5);
		step=ugao/3600;
		if(ugao<0)
			ugao=ugao*-1;
		sec=ugao%60;
		ugao=ugao/60;
		min=ugao%60;
		if(sec<=30) {
			printf(""\n%d stepeni"", step);
			printf("" %d minuta"", min);
			printf("" %d sekundi"", sec);
		}
	}
	return 0;
}
"
291,99,99,0,67,A2016/Z2/Z2/student1278,A2016/Z2/Z2/student8598,"#include <stdio.h>
#include <stdlib.h>
#define PI 3.1415925
#include <math.h>
#define g 0.0000000000000000000000000000000000000000000001
int main() {
	int i,j,n,sec,st,min;
	double niz[500]={0},sekunda,m,b=0.5;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	for(i=0;i<n;i++){
		scanf(""%lf"",&niz[i]);
		niz[i]*=180./PI;
	}
	for(i=0;i<n;i++){
		m=((60*(niz[i]-(int)(niz[i])))-(int)(60*(niz[i]-(int)(niz[i]))));
		sekunda=fabs(60*m);
		sekunda+=b;
		sec=sekunda;
		if(sec==60){
			sec=0;
		}
		if(sec>30){
			for(j=i;j<n;j++){
				niz[j]=niz[j+1];
			}
			n--;
			i--;
		}
	}
	printf(""Uglovi su: \n"");
	for(i=0;i<n;i++){
		st=niz[i];
		min=abs((60*(niz[i]-(int)niz[i])));
		if(niz[i]>=0){
			sekunda=fabs((int)((60*((60*(niz[i]-(int)(niz[i])))-(int)(60*(niz[i]-(int)(niz[i])))))+b));
		}
		else{
			sekunda=fabs((int)((60*((60*(niz[i]-(int)(niz[i])))-(int)(60*(niz[i]-(int)(niz[i])))))-b));
		}
		if(fabs(sekunda-60)<g){
			min++;
			sekunda=0;
		}
		if(niz[i]>=0)
		{
			if(min>=60){
				st++;
				min=0;
			}
		}
		else{
			if(min>=60){
				st--;
				min=0;
			}
		}
		sec=sekunda;
		printf(""%d stepeni %d minuta %d sekundi\n"",st,min,sec);
	}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926
#define g 0.0000000000000000000000000000000000000000000001

int main()
{
	    int i,j,n,sekundaF,stepen,minuta;
    double niz[500]={0},sekunda,m,b=0.5;
    printf(""Unesite broj uglova: "");
    scanf(""%d"",&n);
    for(i=0;i<n;i++)
    {
        scanf(""%lf"",&niz[i]);
        niz[i]*=180./PI;
    }
    for(i=0;i<n;i++)
    {
        m=((60*(niz[i]-(int)(niz[i])))-(int)(60*(niz[i]-(int)(niz[i]))));
        sekunda=fabs(60*m);
        sekunda+=b;
        sekundaF=sekunda;
        if(sekundaF==60) 
        {
            sekundaF=0;
        }
                if(sekundaF>30)
            {
                for(j=i;j<n;j++)
                {
                    niz[j]=niz[j+1];
                }
                n--;
                i--;
            }
}
    printf(""Uglovi su: \n"");
    for (i=0;i<n;i++)
    {
        stepen=niz[i];
        minuta=abs((60*(niz[i]-(int)niz[i])));
        if(niz[i]>=0)
        {
        sekunda=fabs((int)((60*((60*(niz[i]-(int)(niz[i])))-(int)(60*(niz[i]-(int)(niz[i])))))+b));
        }
        else
        {
        sekunda=fabs((int)((60*((60*(niz[i]-(int)(niz[i])))-(int)(60*(niz[i]-(int)(niz[i])))))-b));
        }
        if(fabs(sekunda-60)<g)
        { 
            minuta++; 
            sekunda=0;
        }
        if(niz[i]>=0)
        {
            if(minuta>=60) 
            { 
                stepen++; 
                minuta=0;
            }
        }
        else
        {
            if (minuta>=60)
            {
                stepen--;
                minuta=0;
            }
        }
        sekundaF=sekunda;
        printf (""%d stepeni %d minuta %d sekundi\n"",stepen,minuta,sekundaF);
    }
    return 0;
}

"
293,88,88,0,65,A2016/Z3/Z3/student5624,A2016/Z3/Z3/student6227,"#include <stdio.h>

int main() {
    int matrica[200][200], i, j, k, l, m, n,pret,pret1,p;
    do{
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"", &m, &n);
        if(m<=0||n<=0||m>200||n>200) 
            printf(""Brojevi nisu u trazenom opsegu.\n"");
    } 
    while(m<=0||n<=0||m>200||n>200); // petlja osigurava da su brojevi u trazenom opsegu
    printf(""Unesite elemente matrice: "");
    for(i=0;i<m;i++)
        for(j=0;j<n;j++)
            scanf(""%d"",&matrica[i][j]);
    for(i=0;i<m;i++){
        for(k=i+1;k<m;k++){ 
            pret=1;
            for(j=0;j<n;j++){
                if(matrica[i][j]!=matrica[k][j]) pret=0; //ispitujemo da li su redovi matrice jednaki
            } 
            if(pret==1){ //izbacivanje jednakog reda matrice
                for(l=k;l<m-1;l++){
                    for(p=0;p<n;p++)
                        matrica[l][p]=matrica[l+1][p];
                }
                m--;
                k--;
            }
        }
    }
    for(i=0;i<n;i++){
        for(k=i+1;k<n;k++){
            pret1=1;
            for(j=0;j<m;j++){
                if(matrica[j][i]!=matrica[j][k]) pret1=0; //ispitujemo da li su kolone matrice jednake
            }
            if(pret1==1){//izbacivanje jednake kolone matrice
                for(l=k;l<n-1;l++){
                    for(p=0;p<m;p++)
                        matrica[p][l]=matrica[p][l+1];
                }
                    n--;
                    k--;
            }
        }
    }
    printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
    for(i=0;i<m;i++){
        for(j=0;j<n;j++)
            printf(""%5d"",matrica[i][j]);
        printf(""\n"");
    }
    return 0;
}
","#include <stdio.h>


int main(){
    int mat[200][200],a,b,c,d,e,i,j,k,f;
    do{
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"", &a,&b );
        if(a<=0 || a>200 || b<=0 || b>200) printf(""Brojevi nisu u trazenom opsegu.\n"");
    }
    while(a<=0 || a>200 || b<=0 || b>200);
    
    printf(""Unesite elemente matrice: "");
    for(i=0;i<a;i++){
        for(j=0;j<b;j++){
            scanf(""%d"", &mat[i][j]);
        }
    }
    
    for(i=0;i<a-1;i++){
        for(j=i+1;j<a;j++){
            c=0;
            if(mat[i][0]==mat[j][0]){
                c=1;
                for(d=1;d<b;d++){
                    if(mat[i][d]!=mat[j][d]) c=0;
                }
            }
            if(c==1){
                for(k=j;k<a-1;k++){
                    for(e=0;e<b;e++){
                        mat[k][e]=mat[k+1][e];
                    }
                }
                a--;
                j--;
            }
        }
    }
    
    
    
    
    for(i=0;i<b-1;i++){
        for(j=(i+1);j<b;j++){
            c=0;
            if(mat[0][i]==mat[0][j]){
                c=1;
                for(d=1;d<a;d++){
                    if(mat[d][i]!=mat[d][j]) c=0;
                }
                
                
            
            if(c==1){
                for(k=j;k<b-1;k++){
                    for(f=0;f<a;f++){
                        mat[f][k]=mat[f][k+1];
                    }
                }
                b--;
                j--;
            }
        }
        
    }
}

    printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
    for(i=0;i<a;i++){
        for(j=0;j<b;j++){
            printf(""%5d"", mat[i][j]);
        }
        printf(""\n"");
    }
    return 0;
}"
298,87,87,0,53,A2016/Z1/Z3/student8189,A2016/Z1/Z3/student4863,"#include <stdio.h>

int main() {
	int brc=0,brb=0,brs=0,brv=0,brp=0,br=0;
	float y;
    char x;

printf(""Unesite vozila: "");
do
{   scanf(""%c"",&x);  
	if(x=='k' || x=='K') break;
	
	else if(x=='C' || x=='c') { br++;  brc++;}
	else if(x=='B' || x=='b') { br++;  brb++; }
	else if(x=='S' || x=='s') { br++;  brs++; }
	else if(x=='V' || x=='v') { br++; brv++; }
	else if(x=='P' || x=='p') { br++; brp++; }

	else if(x!='C' && x!='c' && x!='B' && x!='b'&& x!='S' && x!='s' && x!='V' && x!='v' && x!='P' && x!='p' && x!='K' && x!='k')
	{ printf(""Neispravan unos\n""); }

} 
while(x!='k');

printf(""Ukupno evidentirano %d vozila.\n"",br);
if(br!=0)
{
	if(brc>=brs && brc>=brv && brc>=brp && brc>=brb)
	{ 	y=(float)brc*100/br;
		printf(""Najpopularnija boja je crna (%.2f%%)."",y); }
else if(brb>=brc && brb>=brs && brb>=brv && brb>=brp)
	{ 	y=(float)brb*100/br;
		printf(""Najpopularnija boja je bijela (%.2f%%)."",y); }
else if(brs>=brc && brs>=brv && brs>=brb && brs>=brp)
	{	y=(float)brs*100/br;
		printf(""Najpopularnija boja je siva (%.2f%%)."",y);  }
else if(brv>=brc && brv>=brb && brv>=brs && brv>=brp)
	{ 	y=(float)brv*100/br;
		printf(""Najpopularnija boja je crvena (%.2f%%)."",y); }
else if(brp>=brc && brp>=brb && br>=brs && brp>=brv)
	{	y=(float)brp*100/br;
		printf(""Najpopularnija boja je plava (%.2f%%)."",y);}
}
else printf(""Najpopularnija boja je crna (0.00%)."");

	return 0;
}

","#include <stdio.h>

int main() {
	char x;
	int brojac=0,c=0, b=0,s=0,v=0,p=0;
	float u;
	printf(""Unesite vozila: "");
	do
	{
	
		x = getchar();
		if(x == 'k' || x == 'K')
			break;
		if(x == 'c' || x == 'C'){
			brojac++;
			c++;
		}
		else if(x == 'b' || x == 'B'){
			brojac++;
			b++;
		}
		else if(x == 's' || x == 'S'){
			brojac++;
			s++;
		}
		else if(x == 'v' || x == 'V'){
			brojac++;
			v++;
		}
		else if(x == 'p' || x == 'P'){
			brojac++;
			p++;
		}
		else if(x != 'k' && x!='K' && x!= 'c' && x!= 'C' && x!='s' && x!='S' && x!='v' && x!='V' && x!='p' && x!='P')
			printf(""Neispravan unos\n"");
		
		
		
	}while(x != 'k' && x != 'K');
	
	
	printf(""Ukupno evidentirano %d vozila.\n"", brojac);
	
	if(brojac != 0){
		
		if(c >= b && c >= s && c>= p && c>= v){
		u = (float) c*100/brojac;
		printf(""Najpopularnija boja je crna (%.2f%)."",u);
	}
	
		else if(b >= c &&  b>= s &&  b>= p &&  b>=v){
		u = (float)b*100/brojac;
		printf(""Najpopularnija boja je bijela (%.2f%)."",u);
	}
		else if(s >= c && s>= b && s>= p && s>= v){
		u = (float)s*100/brojac;
		printf(""Najpopularnija boja je siva (%.2f%)."",u);
	}
		
		else if(v >= c &&  v >= b && v >= s &&  v >= p){
		u = (float)v*100/brojac;
		printf(""Najpopularnija boja je crvena (%.2f%)."",u);
	}
		
		else if(p >= c && p>= b && p >= s && p >= v){
		u = (float)p*100/brojac;
		printf(""Najpopularnija boja je plava (%.2f%)."",u);
	}
		
	
	
	}
	
	else if (brojac == 0)
		printf(""Najpopularnija boja je crna (0.00%%)."");
	
		
	
	
	
	
	return 0;
}
"
300,95,95,0,15,A2016/Z1/Z2/student4850,A2016/Z1/Z2/student7258,"#include <stdio.h>
#include <math.h>
#define e 0.00001

int main() {

	float a1, a2, b1, b2, x, y;

	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
	
	if(fabs(a1-a2)<e && fabs(b1-b2)>e) {
		printf(""Paralelne su "");
	} else if(fabs(a1-a2)<e && fabs(b1-b2)<e) {
		printf(""Poklapaju se "");
	} else {
	x=(b2-b1)/(a1-a2);
	y=a1*x +b1;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x, y);
	}




	return 0;
}
","#include <stdio.h>
#include <math.h>
#define E 0.0001
int main() {
	float a1,a2,b1,b2,x,y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	if(fabs (a1-a2)<E && fabs (b1-b2)>E) {
		printf(""Paralelne su""); 
	} else if (fabs (a1-a2)<E && fabs (b1-b2)<E) {
		printf(""Poklapaju se"");
	} else {
			x=(b2-b1)/(a1-a2);
			y=a1*x+b1;
			printf(""Prave se sijeku u tacci (%.1f,%.1f)"" , x, y);	
	}
	return 0;
}
"
307,87,87,0,51,A2016/Z3/Z3/student4959,A2016/Z3/Z3/student9923,"#include <stdio.h>
#include <math.h>
int main()
{ int m,n,i,j,mat[200][200],check,a,b,c,x,y;
    
    do{
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"",&m,&n);
        if(m>200 || m<1 || n>200 || n<1) printf(""Brojevi nisu u trazenom opsegu.\n"");
    }
    while(m>200 || m<1 || n>200 || n<1);
    printf(""Unesite elemente matrice: "");
    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
            scanf(""%d"",&mat[i][j]);
        }
    }
    x=m;
    for(i=0;i<x;i++){
        for(j=i+1;j<x;j++){
            check=1;
            for(a=0;a<n;a++){
                if(mat[i][a]!=mat[j][a])
                { check=0;
                break;
                    
                }
            }
            if(check){
                for(b=j;b<x-1;b++){
                    for(c=0;c<n;c++){
                        mat[b][c]=mat[b+1][c];
                    }}
                    j--;
                    x--;
                }
            }
            
        }
         y=n;
    for(j=0;j<y;j++){
        for(i=j+1;i<y;i++){
            check=1;
            for(a=0;a<x;a++){
                if(mat[a][i]!=mat[a][j])
                { check=0;
                break;
                    
                }
            }
            if(check){
                for(b=i;b<y-1;b++){
                    for(c=0;c<x;c++){
                        mat[c][b]=mat[c][b+1];
                    }}
                    i--;
                    y--;
                }
            }
            
        }
    printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
    for(i=0;i<x;i++){
        for(j=0;j<y;j++){
            printf(""%5d"",mat[i][j]);
        }
        printf(""\n"");
    }
    
    return 0;
}","#include <stdio.h>

int main() {
	int niz[200][200];
	int i,j,m,n,k,p,q,pret;
	 do {
	printf(""\nUnesite brojeve M i N: "");
	scanf(""%d %d"", &m, &n);
	if((m>200 || n>200 || m<1 || n<1))
	printf(""Brojevi nisu u trazenom opsegu."");
	} while(m<1 || m>200 || n<1 || n>200); 
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
	 for(j=0;j<n;j++){
	 	scanf(""%d"", &niz[i][j]);
	 }
	 }
	for(i=0;i<m;i++)
	{
		for(j=i+1;j<m;j++)
		{
			pret=1;
			for(k=0;k<n;k++)
			if(niz[i][k]!=niz[j][k])
			      pret=0;
			if(pret==1)
			{
				for(p=j;p<m-1;p++)
				  for(q=0;q<n;q++)
				    niz[p][q]=niz[p+1][q];
				m--;
				j--;
			}
		}
	}

for(i=0;i<n;i++)
 {
	for(j=i+1;j<n;j++)
	{
		pret=1;
		for(k=0;k<m;k++)
		if(niz[k][i] != niz[k][j])
		pret=0;
		if(pret==1)
		{
			for(p=j;p<n-1;p++) 
			for(q=0;q<m;q++) 
			niz[q][p]=niz[q][p+1];
			n--;
			j--; 
			
		}
	}
}
printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
for(i=0;i<m;i++){
	for(j=0;j<n;j++)
	{
		printf(""%5d"", niz[i][j]);
	}
	printf(""\n"");
}


	return 0;
}
"
308,98,98,0,84,A2016/Z3/Z2/student6824,A2016/Z3/Z2/student5899,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define VEL 10
#define velicina 20
void ubaci(int *niz, int vel)
{
	int i,broj,broj1,nbroj=0,j;
	for(j=vel-1;j>=0;j--)
	{
		niz[2*j]=niz[j];
	}
		for(i=0; i<2*vel; i+=2)
		{
			broj=abs(niz[i]);
			if(broj<10)
			{
				nbroj=broj;
			}
			else
			{
				do
				{
					broj1=broj%10;
					nbroj=nbroj+broj1;
					broj=broj/10;
				}
				while(broj!=0);
			}
			niz[i+1]=nbroj;
			nbroj=0;
		}
}
	
	
int izbaci(int *niz, int vel)
{
	int i,j,a=1,b=1,c,s;
	for(i=0;i<vel;i++)
	{
		a=1;
		b=1;
		for(j=1;j<10000;j++)
		{
			if(j==1)
			{
				c=1;
			}
			else
			{
				c=a+b;
				a=b;
				b=c;
			}
			if(niz[i]==c)
			{
				for(s=i; s<vel-1; s++)
				{
					niz[s]=niz[s+1];
					
				}
			vel--;
			i--;
			break;
		}
	}
}
return vel;
}
int main()
{
	int niz[2*VEL],s,i;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<VEL;i++)
	{
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,VEL);
	s=izbaci(niz,velicina);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<s;i++)
	{
		if(i==s-1)
		{
			printf(""%d."",niz[i]);
		}
		else
		{
			printf(""%d, "",niz[i]);
		}
	}
	return 0;
}
	
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define VEL 10
#define velicina 20
void ubaci(int *niz, int vel)
{
	int i,broj,broj1,nbroj=0,j;
	for(j=vel-1;j>=0;j--)
	{
		niz[2*j]=niz[j];
	}
		for(i=0; i<2*vel; i+=2)
		{
			broj=abs(niz[i]);
			if(broj<10)
			{
				nbroj=broj;
			}
			else
			{
				do
				{
					broj1=broj%10;
					nbroj=nbroj+broj1;
					broj=broj/10;
				}
				while(broj!=0);
			}
			niz[i+1]=nbroj;
			nbroj=0;
		}
}
	
	
int izbaci(int *niz, int vel)
{
	int i,j,a=1,b=1,c,s;
	for(i=0;i<vel;i++)
	{
		a=1;
		b=1;
		for(j=1;j<10000;j++)
		{
			if(j==1)
			{
				c=1;
			}
			else
			{
				c=a+b;
				a=b;
				b=c;
			}
			if(niz[i]==c)
			{
				for(s=i; s<vel-1; s++)
				{
					niz[s]=niz[s+1];
					
				}
			vel--;
			i--;
			break;
		}
	}
}
return vel;
}
int main()
{
	int niz[2*VEL],s,i;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<VEL;i++)
	{
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,VEL);
	s=izbaci(niz,velicina);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<s;i++)
	{
		if(i==s-1)
		{
			printf(""%d."",niz[i]);
		}
		else
		{
			printf(""%d, "",niz[i]);
		}
	}
	return 0;
}
	
"
311,26,26,0,22,A2016/Z5/Z1/student4416,A2016/Z5/Z1/student1390,"#include <stdio.h>
struct Student {
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};
float prosj(int *ocj,int brocj){
	int suma=0,i;
	for(i=0;i<brocj;i++){
		if(ocj[i]==5) return 5;
		suma=suma+ocj[i];
	}
	if (suma==0) return 5;
	return (float)suma/brocj;
}
int leks(char*i1,char*p1,char*i2,char*p2){
	while(*p1!=0 && *p2!=0){
		if(*p1<*p2) return 1;
		if(*p1>*p2) return 2;
		p1++;
		p2++;
	}
	if(*p1!=0) return 2;
	if(*p2!=0) return 1;
	while(*i1!=0 && *i2!=0){
		if(*i1<*i2) return 1;
		if(*i1>*i2) return 2;
		i1++;
		i2++;
	}
	if(*i1!=0) return 2;
	if(*i2!=0) return 1;
	return 0;
}
int genijalci(struct Student *niz, int velicina, float prosjek){
	int veci,i,j,max1=0,max2=0,max3=0;
	float t,p1=0,p2=0,p3=0;
	for(i=0;i<velicina;i++){
		if(prosjek>prosj(niz[i].ocjene,niz[i].br_ocjena)){
			for (j=i;j<velicina-1;j++){
				niz[j]=niz[j+1];
			}
			i--;
			velicina--;
		}
	}
	for(i=0;i<velicina;i++){
		t=(prosj(niz[i].ocjene,niz[i].br_ocjena));
		if(t>p1){
			p3=p2;
			max3=max2;
			p2=p1;
			max2=max1;
			p1=t;
			max1=i;
		}
		else if(t==p1){
			veci=leks(niz[i].ime,niz[i].prezime,niz[max1].ime,niz[max1].prezime);
			if(veci==1){
				p3=p2;
				max3=max2;
				p2=p1;
				max2=max1;
				p1=t;
				max1=i;
			}
			else if(veci==2){
				veci=leks(niz[i].ime,niz[i].prezime,niz[max2].ime,niz[max2].prezime);
				if(veci==1){
					p3=p2;
					max3=max2;
					p2=t;
					max2=i;
				}
				else if(veci==2){
					veci=leks(niz[i].ime,niz[i].prezime,niz[max3].ime,niz[max3].prezime);
					if(veci==1 || veci==0){	
						p3=t;
						max3=i;
					}
				}	
			}
			else if(veci==0){
				p3=p2;
				max3=max2;
				p2=t;
				max2=i;
			}
		}
		else if(t>p2){
			p3=p2;
			max3=max2;
			p2=t;
			max2=i;
		}
		else if(t==p2){
			veci=leks(niz[i].ime,niz[i].prezime,niz[max2].ime,niz[max2].prezime);
			if(veci==1){
				p3=p2;
				max3=max2;
				p2=t;
				max2=i;
			}
			else if(veci==2){
				veci=leks(niz[i].ime,niz[i].prezime,niz[max3].ime,niz[max3].prezime);
				if(veci==1){
					p3=t;
					max3=i;
				}
			}
			else if(veci==0){
				p3=t;
				max3=i;
			}
		}
		else if(t>p3){
			p3=t;
			max3=i;
		}
		else if(t==p3){
			veci=leks(niz[i].ime,niz[i].prezime,niz[max3].ime,niz[max3].prezime);
			if(veci==1){
				p3=t;
				max3=i;
			}
		}
	}
	if(p1>0) printf(""\n%s %s"",niz[max1].prezime,niz[max1].ime);
	if(p2>0) printf(""\n%s %s"",niz[max2].prezime,niz[max2].ime);
	if(p3>0) printf(""\n%s %s"",niz[max3].prezime,niz[max3].ime);	
	return velicina;
}
int main() {
	struct Student studenti[4] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,8,8}, 5},
};
genijalci(studenti, 4, 6.5);
	return 0;
}
","#include <stdio.h>
#include <string.h>

struct Student{
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

float prosjek1(int niz[], int vel){
	float suma=0;
	int i;
	for(i=0;i<vel;i++){
		if(niz[i]==5)return 5;
		suma+=niz[i];
	}
	suma/=vel;
	return suma;
}

int provjera(char ime1[], char prezime1[], char ime2[], char prezime2[]){
	if(strcmp(prezime1,prezime2)<0)return 1;
	else if(strcmp(prezime1,prezime2)>0)return -1;
	else {
		if(strcmp(ime1,ime2)<0)return 1;
		else if(strcmp(ime1,ime2)>0)return -1;
		else return 0;
	}
	
}
int genijalci(struct Student niz[], int vel, float prosjek){
	int i,j,max1=0,max2=0,max3=0;
	
	for(i=0;i<vel;i++){
		if(niz[i].br_ocjena==0){
			for(j=i+1;j<vel;j++){
				niz[j-1]=niz[j];
			}vel--;
			i--;
		}
		else if(prosjek1(niz[i].ocjene,niz[i].br_ocjena)<prosjek){
			for(j=i+1;j<vel;j++){
				niz[j-1]=niz[j];
			}vel--;
			i--;
		}
	}
	for(i=0;i<vel;i++){
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)>prosjek1(niz[max1].ocjene,niz[max1].br_ocjena)){
			max1=i;
		}
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)==prosjek1(niz[max1].ocjene,niz[max1].br_ocjena)){
			if(provjera(niz[i].ime, niz[i].prezime, niz[max1].ime, niz[max1].prezime)==1){
				max1=i;
			}
		}
	}
	for(i=0;i<vel;i++){
		if(i==max1)continue;
		if(max2==max1)max2++;
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)>prosjek1(niz[max2].ocjene,niz[max2].br_ocjena)){
			max2=i;
		}
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)==prosjek1(niz[max2].ocjene,niz[max2].br_ocjena)){
			if(provjera(niz[i].ime, niz[i].prezime, niz[max2].ime, niz[max2].prezime)==1){
				max2=i;
			}
		}
	}
	for(i=0;i<vel;i++){
		if(i==max1 || i==max2)continue;
		if(max3==max1)max3++;
		if(max3==max2)max3++;
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)>prosjek1(niz[max3].ocjene,niz[max3].br_ocjena)){
			max3=i;
		}
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)==prosjek1(niz[max3].ocjene,niz[max3].br_ocjena)){
			if(provjera(niz[i].ime, niz[i].prezime, niz[max3].ime, niz[max3].prezime)==1){
				max3=i;
			}
		}
	}
	
	if(vel>0)printf(""%s %s"",niz[max1].prezime,niz[max1].ime);
	if(vel>1)printf(""\n%s %s"",niz[max2].prezime,niz[max2].ime);
	if(vel>2)printf(""\n%s %s"",niz[max3].prezime,niz[max3].ime);
	
	
	return vel;
}

int main() {
	struct Student studenti[6] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 6, 6.5);

	return 0;
}
"
316,79,79,0,28,A2016/Z2/Z3/student6707,A2016/Z2/Z3/student2508,"#include <stdio.h>

int main()
{
    char mat[20][20];
    int n,i,j,m,k,l;
    
     for( i=0; i<20; i++)
    {
       for( j=0; j<20; j++)
    {
         mat[i][j]=' ';
      
    } 
    }
    do{
        printf(""Unesite broj tacaka: "");
        scanf(""%d"",&n);
        if(n<=0 || n>10) printf(""Pogresan unos\n"");
        }while(n<=0 || n>10);
    
    
    m=0;
    while(m!=n)
    {
        do{
        printf(""Unesite %d. tacku: "", m+1);
        scanf(""%d %d"",&k, &l);
        if(k<0 || k>19 || l<0 || l>19 ) printf(""Pogresan unos\n"");
        }while(k<0 || k>19 || l<0 || l>19 );
        mat[l][k]='*';
    m++;
    }
    for( i=0; i<20; i++)
    {
       for( j=0; j<20; j++)
    {
        printf(""%c"",mat[i][j]);
    } 
    printf(""\n"");
    }
    return 0;
    
}","#include <stdio.h>

int main() {
	char a[20][20];
	int n,i,k,l;
	do{
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&n);
	if(n<=0 || n>10)
	printf(""Pogresan unos\n"");
	} while(n<=0 || n>10);
	
	for(k=0;k<20;k++)
	{
		for(l=0;l<20;l++)
		a[l][k]=' ';
	}
	
	
	for(i=0;i<n;i++)
	{
		
	
		do
	{
		printf(""Unesite %d. tacku: "",i+1);
		scanf(""%d %d"",&k,&l);
			if(k<0 || k>19 || l<0 || l>19)
			printf(""Pogresan unos\n"");
		
		} while(k<0 || k>19 || l<0 || l>19);
		a[k][l]='*';
	}
	for(k=0;k<20;k++)
	{
		for(l=0;l<20;l++)
		{
			printf(""%c"",a[l][k]);
		}
		printf(""\n"");
	}
	return 0;
}
"
320,45,45,0,21,A2016/Z3/Z1/student2155,A2016/Z3/Z1/student7810,"#include <stdio.h>
long daj_prost(){
	static long prost_broj = 2;
	int i,flag;
while(prost_broj){
flag = 1;
for(i = 2;i < prost_broj;i++){
if(prost_broj%i==0){
	flag = 0;
	break;
}
}
if(flag)
	return prost_broj++;
prost_broj++;
}
}	
int main() {
long A,B,j;
long suma;
suma = 0;
do{
	printf(""Unesite brojeve A i B: "");
	scanf(""%ld %ld"", &A,&B);
	if(A < 1)
		printf(""A nije prirodan broj.\n"");
	else if(A >= B)
		printf(""A nije manje od B.\n"");
	}while(A < 1  || A >= B);
	
do{
	j=daj_prost();
	if(j > A &&  j < B)
		suma+=j;
}while(j < B);
printf(""Suma prostih brojeva izmedju %ld i %ld je %ld."",A,B,suma);
return 0;
}

","#include <stdio.h>
/*Funkcija koja daje sljedeci prost broj prilikom svakog poziva pocev od broja 2*/
int daj_prost(){
	static int broj=2;
	int i;
	while (1) {
		int prost=1;
		for (i=2;i<broj;i++){
		if (broj%i==0) {prost=0;break;}
	} if (prost) return broj++;
	broj++;
	
	}
}
int main() {
	int n,n1,A,B,suma=0;
	/*Petlja koja omogucava unos prirodnih brojeva A i B gdje je A strogo manje od B*/
	do {
		printf(""Unesite brojeve A i B: "");
	    scanf(""%d%d"",&A,&B);
	    if (A<=0) {printf(""A nije prirodan broj.\n"");}
	    else if (A>=B) {printf(""A nije manje od B.\n"");}
	} while (A<=0 || B<=0 || A>=B);
	/*Petlja koja nam daje prvi prost broj veci od A*/
		do {
		    n=daj_prost();	
		} while (n<=A);
		suma+=n;
		/*Suma svih prostih brojeva izmedju A i B*/
		do {
			n1= daj_prost(); if (n1>=B) break;
			suma=suma+n1;
		} while (n1<=B);
    if (suma==n) suma=0;
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
	return 0;
}
"
326,29,29,0,24,A2016/Z2/Z2/student4959,A2016/Z2/Z2/student4682,"#include <stdio.h>
#include <math.h>
#define pi 3.1415926
int main() {
	
	double niz[500];
	double s[500],m[500],ss[500];
	int n,i,k,d;
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	for(i=0;i<n;i++)
	scanf(""%lf"",&niz[i]);
	for(i=0;i<n;i++)
	{ scanf(""%lf"",&niz[i]);
	niz[i]*=180/pi;
	s[i]=(int)niz[i];
	niz[i]-=s[i];
	niz[i]*=60;
	m[i]=(int)niz[i];
	niz[i]-=m[i];
	niz[i]*=60;
    if(niz[i]>=0)
    niz[i]=niz[i]+0.5;
    else niz[i]=niz[i]-0.5;
	ss[i]=(int)niz[i];
	if(fabs(ss[i])>=60)
	{ ss[i]=0;
	if(m[i]>0) m[i]+=1;
	else m[i]-=1;
	}
	if(fabs(m[i])>=60)
	{ m[i]=0;
	if(s[i]>0) s[i]+=1;
	else s[i]-=1;
	}
	}
	for(k=0;k<n;k++){
		if(fabs(ss[k])>30){
		for (d=k;d<n-1;d++)
		{ s[d]=s[d+1];
		  m[d]=m[d+1];
		  ss[d]=ss[d+1];
		}
		n--;
		k--;
		}
	}printf(""Uglovi su: \n"");
	for(i=0;i<n;i++)
	{ printf(""%.0lf stepeni %.0lf minuta %.0lf sekundi \n"",s[i],fabs(m[i]),fabs(ss[i]));
		
	}
	return 0;
}
","#include <stdio.h>
#define pi 3.1415926

int main() {
	int i,j,n;
	double step[500],min[500],sek[500],niz[500];

	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
    
	
	for(i=0; i<n; i++) {
	scanf(""%lf"", &niz[i]);
	}
	
	for(i=0; i<n; i++) {
	if (niz[i]>0){
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=niz[i]-step[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=(niz[i]-min[i]);
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	
		if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]++;
		min[i]=0; }
	
		}
		
	
	else {
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=step[i]-niz[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=niz[i]-min[i];
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]--;
		min[i]=0; }
	
	
	}
	}
	

	for(i=0; i<n; i++) {
		if(sek[i]>30) {
			for (j=i; j<n-1; j++) {
			step[j]=step[j+1];	
			min[j]=min[j+1];
			sek[j]=sek[j+1];
			}
			
		n--;
		i--;
		}
	}
	
	printf(""Uglovi su:"");
	for(i=0; i<n; i++) 
    printf(""\n%g stepeni %g minuta %g sekundi"",step[i], min[i], sek[i]);
	
	return 0;
}
"
339,89,89,0,40,A2016/Z2/Z3/student9569,A2016/Z2/Z3/student4419,"#include <stdio.h>
#define A 20

int main() {
	int k, m, n, l, j, i;
	char matrix[A][A]={ {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ', 
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '},{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
' ',' ',' ',' ',' ',' '}        };


int vrste[21], kolone[21];
	
	s1:printf(""Unesite broj tacaka: "");
		scanf(""%i"", &l);
		
		if(l>10 || l<=0) {
			printf(""Pogresan unos\n"");
			goto s1;
		}
			
			for(i=0;i<l;i++)
			{
				
				s2: printf(""Unesite %i. tacku: "", i+1);
					scanf(""%i"", &m);
					scanf(""%i"", &n);
					
					if(m<0 || n<0 || m>19 || n>19) 
					{
						printf(""Pogresan unos\n"");
						
						goto s2;
					}
					
					else {
						vrste[i]=n;
						kolone[i]=m;
					}
					
				}
				
				for(k=0;k<l;k++)
				{
					for(i=0;i<20;i++) {
						for(j=0;j<20;j++) {
							
							if(vrste[k]==i && kolone[k]==j) {
								matrix[i][j]='*'; 
							}
						}
					}
				}
				
				for(i=0;i<20;i++)
				{
				for(j=0; j<20;j++)
				{
					printf(""%c"", matrix[i][j]);
				}
				printf(""\n"");
	}
							
						
	
	
	return 0;
}
","#include <stdio.h>

int main() {
	
	int i,n,x,y,j;
	char mat[20][20]={ {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '} };
	
	
	do{
		printf(""\nUnesite broj tacaka: "");
		scanf(""%d"", &n);
		if(n<1 || n>10) printf(""Pogresan unos"");
	} while(n<1 || n>10);
	
	for(i=0; i<n; i++)
	{
		printf(""Unesite %d. tacku: "", i+1);
		scanf(""%d%d"", &x,&y);
		if(x<0 || x>19 || y<0 || y>19 ) 
		{
			printf(""Pogresan unos\n"");
			i--;
		}
		mat[y][x]='*';
	}
	
	for(i=0; i<20; i++)
	{
		for(j=0; j<20; j++)
		{
		printf(""%c"", mat[i][j]);
		}
		printf(""\n"");
	}
	return 0;
}
"
346,46,46,0,28,A2016/Z2/Z2/student8599,A2016/Z2/Z2/student4804,"
#include <stdio.h>
#define PI 3.1415926
#include <math.h>
#define e 0.00001

int main() {
	int n, i, j; 
	double sekundi[500], minuta[500], niz[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	for(i=0; i<n; i++){
		scanf(""%lf"", &niz[i]);}
		
	for(i=0; i<n; i++){
		
		niz[i]*=180/PI;
		minuta[i]=fabs(niz[i]-(int)niz[i])*60;
		sekundi[i]=(minuta[i]-(int)minuta[i])*60;
		if(fabs(sekundi[i]-(int)sekundi[i])>=0.5)
		sekundi[i]=(int)(sekundi[i]+1);
		if((fabs(niz[i]-55.99986)<e)){
			niz[i]=56;
			minuta[i]=0;
			sekundi[i]=0;}
			if((fabs(niz[i]+55.99986)<e)){
			niz[i]=-56;
			minuta[i]=0;
			sekundi[i]=0;}
		if(sekundi[i]>30){
			for(j=i; j<n-1; j++){
				niz[j]=niz[j+1];
			}
			n--;
			i--;
		}
	}
	printf(""Uglovi su: \n"");
	for(i=0; i<n; i++){
		printf(""%d stepeni %d minuta %d sekundi \n"", (int)niz[i], (int)minuta[i], (int)sekundi[i]);
	}
	return 0;
}","#include <stdio.h>
#define PI 3.1415926
#include <stdlib.h>
#include <math.h>
int main() {
	int n,i,j;
	double ugao[500],min[500],sec[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	for(i=0;i<n;i++)
	{
		scanf(""%lf"",&ugao[i]);
		ugao[i]=ugao[i]*180/PI;
		min[i]=(fabs(ugao[i])-abs((int)ugao[i]))*60;
		sec[i]=(min[i]-(int)min[i])*60;
		sec[i]=(int)(sec[i]+0.5);
		if (sec[i]>=60)
		{
		min[i]=min[i]+1;
		sec[i]=0;
		}
		if(min[i]>=60)
			{
				if(ugao[i]>=0)
				ugao[i]=ugao[i]+1;
				else
				ugao[i]=ugao[i]-1;
			min[i]=0;
			}
			if(sec[i]>30)
		{
			for(j=i;j<n-1;j++)
			{
				ugao[j]=ugao[j+1];
			}
		n--;
		i--;
		}
	}
	
	
	printf(""Uglovi su: "");
	for(i=0;i<n;i++)
	{
	printf(""\n%d stepeni %d minuta %d sekundi"",(int)ugao[i],(int)min[i],(int)sec[i]);	
	}
	return 0;
}
"
347,21,21,0,14,A2016/Z4/Z2/student2351,A2016/Z4/Z2/student8631,"#include <stdio.h>

void sortiranje(int *sortiraj, int *index)
{
	int i=0, j, temp1, temp2;
	i=0;
	while(i<95)
	{
		j=0;
		while(j<95)
		{
			if(sortiraj[j]<sortiraj[i])
			{
				temp1=sortiraj[i];
				sortiraj[i]=sortiraj[j];
				sortiraj[j]=temp1;
				
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			
			if(sortiraj[i]==sortiraj[j] && index[i]<index[j])
			{
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			j++;
		}
		i++;
	}
}

void stvori(char *kljuc, int *sortiraj, int *index)
{
	int i;
	i=0;
	do
	{
		if(sortiraj[i]!=0) 
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	
	i=0;
	do{
		if(sortiraj[i]==0)
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	*kljuc='\0';
}

char *kodiraj (char *tekst, char *kljuc)
{
	char *p=tekst;
	char *q;
	int niz[95], sort[95], in[95];
	int i, br;
	
	i=0;
	while(i<95) 
	{
		niz[i]=0;
		i++;
	}
	do{
		q=p;
		br=0;
		while(*q!='\0')
		{
		if(*p==*q) br++;
		q++;
		}
		if(niz[*p-32]==0) {niz[*p-32]=br;}
		p++;
	}
	while(*p!='\0');
	
	i=0;
	while(i<95)
	{
		sort[i]=niz[i];
		in[i]=i;
		i++;
	}
	sortiranje(sort, in);
	stvori(kljuc, sort, in);
	p=tekst;
	q=kljuc;
	
	do{
		q=kljuc;
		br=0;
		while(*q!='\0')
		{
			if(*p==*q)
			{
				*p=126-br;
				break;
			}
			br++;
			q++;
		}
		p++;
	} while(*p!='\0');
	return tekst;
}

char *dekodiraj(char *tekst, char *kljuc)
{
	char *p=tekst;
	do
	{
	*p=kljuc[126-*p];
	p++;
	} while(*p!='\0');
	return tekst;
}

int main() {
	char primjer[]=""LLMLNLNMONM"";
	char sifra[100]="""";
	printf(""%s"", kodiraj(primjer, sifra));
	return 0;
}
","#include <stdio.h>

void sortiraj(int *niz,int *sort,int *index)
{
	int i,j;
	int temp;
	
		for(i=0;i<127;i++)
		{
			for(j=i;j<127;j++)
			{
				if(niz[i]<niz[j])
				{
					temp=niz[i];
					niz[i]=niz[j];
					niz[j]=temp;
					
					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
				else if(niz[i]==niz[j] && index[i]>index[j])
				{
					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
			}
		}
}

void Pretvori(char *s,char *sifrarnik)
{
	char *p=s,*kljuc=sifrarnik;
	int br;
		while(*p!='\0')
		{	br=0;
			kljuc=sifrarnik;
			
			while(*kljuc!='\0')
			{
				if(*p==*kljuc++){*p=126-br;break;}
				br++;
			}
			p++;
		}
	
}


char *kodiraj(char *s,char *sifrarnik)
{
	
	char *p=s,*pok=sifrarnik;
	int i;
	int niz[127];
	int sort[127];
	int index[127];
	
		for(i=0;i<127;i++)
		{
			if(i<32){ niz[i]=-1; index[i]=-1;}
			else{niz[i]=0;index[i]=i;}
		}
		while(*p!='\0')
		{
			niz[*p+0]++;
			p++;
		}
		
		for(i=0;i<127;i++)
			sort[i]=niz[i];
			
		sortiraj(niz,sort,index);
		
		for(i=0;i<127;i++)
		{   
			if(index[i]!=-1)
			{
				*pok=index[i];
				pok++;
			}
		}
		Pretvori(s,sifrarnik);
	return s;
}

char* dekodiraj(char *s,char *sifrarnik)
{
	
	char *p=s;
	
		while(*p!='\0')
		{
			*p=sifrarnik[126-*p];
			p++;
		}
	return s;
	
}

int main() {
	char tekst[] = ""U ovom testu cemo testirati samo kodiranje"";
    char sifrarnik[100] = """";
    kodiraj(tekst, sifrarnik);
    printf(""%s\n"", tekst);
    printf(""%s\n"", sifrarnik);
	
	return 0;
}
"
350,97,97,0,24,A2016/Z2/Z1/student6720,A2016/Z2/Z1/student4628,"#include <stdio.h>
#include <stdlib.h>
int main() {
int n, br1, br2, m=0, d_jedinica=1;

printf(""Unesite broj: "");
scanf(""%d"", &n);

do{
	if(n<0)
	n=abs(n);
	
	if(n<10)
	break;
	
	br1=n%10;
	n=n/10;
	br2=n%10;
	m=m+abs(br1-br2)*d_jedinica;
	d_jedinica*=10;

}while(n>=10);

printf(""%d"",m);

	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
int main() {
int n, br1, br2, m=0, d_jedinica=1;

printf(""Unesite broj: "");
scanf(""%d"", &n);

do{
	if(n<0)
	n=abs(n);
	
	if(n<10)
	break;
	
	br1=n%10;
	n=n/10;
	br2=n%10;
	m=m+abs(br1-br2)*d_jedinica;
	d_jedinica*=10;

}while(n>=10);

printf(""%d"",m);

	return 0;
}
"
356,99,99,0,85,A2016/Z4/Z4/student2463,A2016/Z4/Z4/student5222,"#include <stdio.h>
char * obuhvat(char *s,double xprim,double yprim, double xsec,double ysec)
{
	char *p=s,*pi,*ci,*pt,*kt;
	int znakx,znaky;
	double k,x1,x2,y1,y2,x,y;
	while(*p!='\0')
	{
		if(*p!='(')return 0;
		if(*p=='(')
		{
			pt=p;
			p++;
			znakx=1;
			x=0;
			if(*p=='-'){p++; znakx=-1;}
			else if(*p<'0' ||*p>'9')return 0;
			while(*p>='0'&& *p<='9'){x=x*10+*p-'0';p++;}
			if(*p=='.')
			{
				x2=0;
				p++;
				k=10;
				while(*p>='0'&& *p<='9')
				{
					
					x2=x2+(*p-'0')/k;
					p++;
					k*=10;
				}
				x=x+x2;
			
			}else if(*p!=',')return 0;
			if(*p==',')
			{
				p++;
			znaky=1;
			y=0;
			if(*p=='-'){p++; znaky=-1;}
			else if(*p<'0' ||*p>'9')return 0;
			while(*p>='0'&& *p<='9'){y=y*10+*p-'0';p++;}
			kt=p+1;
			if(*p=='.')
			{
				y2=0;
				p++;
				k=10;
				while(*p>='0'&& *p<='9')
				{
					
					y2=y2+(*p-'0')/k;
					p++;
					k*=10;
				}
				y=y+y2;
				
				kt=p+1;
			}else if(*p!=')')return 0;
			
			}
		
				y=y*znaky;
				x=x*znakx;
			if(x<xprim || x>xsec || y<yprim || y>ysec)
			{
			  if(*kt==',')kt++;	
			  pi=pt,ci=kt;
			  while(*ci!=-'\0')
			  {
			  	*pi++=*ci++;
			  }
			  *pi='\0';
			  p=pt-1;
			}
		}
		
	p++;}
	p=s;
	while(*p!='\0')p++;
	if(p!=s && *(p-1)==',')*(p-1)='\0';
	return s;
}
int main() {
	char s[100]=""(0,-3.1),(-15.09,4),(2.,2),(-1.1,217)"";
	obuhvat(s,0,0,0,0);
	printf(""%s"",s);
	return 0;
}
","#include <stdio.h>
char * obuhvat(char *s,double xprim,double yprim, double xsec,double ysec)
{
	char *p=s,*pi,*ci,*pt,*kt;
	int znakx,znaky;
	double k,x1,x2,y1,y2,x,y;
	while(*p!='\0')
	{
		if(*p!='(')return 0;
		if(*p=='(')
		{
			pt=p;
			p++;
			znakx=1;
			x=0;
			if(*p=='-'){p++; znakx=-1;}
			else if(*p<'0' ||*p>'9')return 0;
			while(*p>='0'&& *p<='9'){x=x*10+*p-'0';p++;}
			if(*p=='.')
			{
				x2=0;
				p++;
				k=10;
				while(*p>='0'&& *p<='9')
				{
					
					x2=x2+(*p-'0')/k;
					p++;
					k*=10;
				}
				x=x+x2;
			
			}else if(*p!=',')return 0;
			if(*p==',')
			{
				p++;
			znaky=1;
			y=0;
			if(*p=='-'){p++; znaky=-1;}
			else if(*p<'0' ||*p>'9')return 0;
			while(*p>='0'&& *p<='9'){y=y*10+*p-'0';p++;}
			kt=p+1;
			if(*p=='.')
			{
				y2=0;
				p++;
				k=10;
				while(*p>='0'&& *p<='9')
				{
					
					y2=y2+(*p-'0')/k;
					p++;
					k*=10;
				}
				y=y+y2;
				
				kt=p+1;
			}else if(*p!=')')return 0;
			
			}
		
				y=y*znaky;
				x=x*znakx;
			if(x<xprim || x>xsec || y<yprim || y>ysec)
			{
			  if(*kt==',')kt++;	
			  pi=pt,ci=kt;
			  while(*ci!=-'\0')
			  {
			  	*pi++=*ci++;
			  }
			  *pi='\0';
			  p=pt-1;
			}
		}
		
	p++;}
	p=s;
	while(*p!='\0')p++;
	if(p!=s && *(p-1)==',')*(p-1)='\0';
	return s;
}
int main() {
	char s[100]=""(0,-3.1),(-15.09,4),(2.,2),(-1.1,217)"";
	obuhvat(s,0,0,0,0);
	printf(""%s"",s);
	return 0;
}
"
358,10,10,0,21,A2016/Z4/Z3/student5170,A2016/Z4/Z3/student6631,"#include <stdio.h>

int provjera (char* text, char* zamjena)
{
	int je_li_isto=1;
	char* reset=text;
	char* prvoslovo=zamjena;
	while (*zamjena!='\0' && *text!='\0') {
		if(*text!=*zamjena)
			je_li_isto=0;
		zamjena++;
		text++;
	}
	if(*zamjena!='\0' || (*text!='\0' && *text!=' ')) je_li_isto=0;
	zamjena=prvoslovo;
	text=reset;
	return je_li_isto;
}

void promjena(char* text, char* zamjena, char* nova)
{
	int ostatak=0, cont=1,i;
	char* rst=text;
	char* reset_rij=zamjena;
	char* reset=nova;
	char* kraj=text;
	while(*text!='\0') {
		cont=0;
		while(*text!='\0' && *text!=*zamjena) text++;
		if(provjera(text, zamjena) && (text==rst || *(text-1)==' ') && *text!='\0') {
			while(*nova!='\0') {
				if(*text=='\0' || *text==' ') {
					kraj=text;
					while(*text!='\0') text++;
					text++;
					while(text>kraj) {
						*text=*(text-1);
						text=text-1;
					}
				}
				*text=*nova;
				nova++;
				text++;
			}
			cont=1;
		}
		if(cont==1 && *text!='\0' && *text!=' ') {
			kraj=text;
			while(*text!='\0' && *text!=' ') {
				text++;
				ostatak++;
			}
			text=kraj;
			for(i=0; i<ostatak; i++) {
				text=kraj;
				while(*text!='\0') {
					*text=*(text+1);
					text++;
				}
			}
			text=kraj;
		}
		if(*text!='\0' && *text!=' ') text++;
		nova=reset;
		zamjena=reset_rij;
	}
	nova=reset;
	zamjena=reset_rij;
	text=rst;
}

char* zamjena_rijeci(char*tekst, char** rijeci, char** zamjene, int broj_rijeci)
{
	char *reset=tekst;
	int i,br;
	br=broj_rijeci;
	for(i=0; i<br; i++) {
		tekst=reset;
		while(*tekst!='\0') {
			while(*tekst!='\0' && *tekst==' ')
				tekst++;
			if(provjera(tekst,rijeci[i])) {
				promjena(tekst, rijeci[i], zamjene[i]);
			}
			while(*tekst!='\0' && *tekst!=' ') tekst++;
		}
	}
	return reset;
}

int main()
{
	char* promjene[2]= {"""",""""};
	char* rij[2]= {"""",""""};
	char t[100]="""";
	printf(""%s"", zamjena_rijeci(t, rij, promjene, 2));
	return 0;
}","#include <stdio.h>
#include <math.h>

int duzinaRijeci(char* s){
	int brojac;
	brojac=0;
	
	while(*s != '\0'){
		brojac++;
		s++;
	}
	return brojac;
}

int rijecBrojac(char* s){
	char* kopija, *poredi;
	int brojRijeci;
	kopija=s;
	brojRijeci=1;
	poredi=kopija+1;
	
	while(*kopija != '\0' && *poredi != '\0'){
		if(*poredi==' ' || *poredi=='\0'){
			if(*poredi==*kopija) brojRijeci--;
			brojRijeci++;
		}
		kopija++;
		poredi++;
	}
	return brojRijeci;
}

char* trazilicafix(char* s, char* rijec){
	while(*s!='\0'){
		while(*s== ' '){
			s++;
		}
		char* p=s;
		char* start=s;
		char* q=rijec;
		
		while(*p++==*q++){
			if(*q=='\0' && (*p==' ' || *p=='\0')) return start;
		}
		while(*s != '\0' && *s != ' '){
			s++;
		}
	}
	return NULL;
}
char* trazilica(char* string, char* rijec){
	char* pamti=rijec,*lokacija;
	int radi=1;
	while(*string!='\0'){
		if(*string==*rijec){
			lokacija=string;
			while(*rijec!='\0' ){
				if(*rijec!=*string){radi=0;break;}
				rijec++;
				string++;
			}
			if(radi==1)return lokacija;
			else {radi=1;rijec=pamti;}
		}string++;
	}
	return NULL;
}

int trazilicaPonavljanja(char* string, char* rijec){
	char* pamti=rijec,*lokacija;
	int radi=1;
	while(*string!='\0'){
		if(*string==*rijec){
			lokacija=string;
			while(*rijec!='\0' ){
				if(*rijec!=*string){radi=0;break;}
				rijec++;
				string++;
			}
			if(radi==1)return 1;
			else {radi=1;rijec=pamti;}
		}string++;
	}
	return 0;
}




char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	int duzinaPrve, duzinaDruge;
	char* pocetak=tekst;
	int j, i, k, h, izbaciti, razlika;
	char* p;
	char* q;
	char* prazan=tekst;
	int ponavljanje=0,greska=1;
	int rijeciString;
	
	rijeciString=rijecBrojac(tekst);
	
	if(*prazan==' ') return tekst;


	for(i=0;i<broj_rijeci;i++){
		for(j=0;j<rijeciString;j++){
	/*	do{
		if(trazilicaPonavljanja(tekst, rijeci[i]))
		ponavljanje+=trazilicaPonavljanja(tekst, rijeci[i]);
		else greska=0;
	}while(greska==0);
	
	*/
	
		
	duzinaPrve=duzinaRijeci(rijeci[i]);
	duzinaDruge=duzinaRijeci(zamjene[i]);
	
	
		
	char* p= trazilicafix(tekst, rijeci[i]);

	if(p == NULL) continue;
	if(p != NULL){
	
	
	
	if(duzinaPrve<duzinaDruge){
		
		razlika=duzinaDruge-duzinaPrve;
		
		char* kraj=p;
		char* temp=kraj;
		while(*kraj != '\0') kraj++;
		while(kraj>p){
			*(kraj+razlika)=*kraj;
			kraj--;
		}
		
		char* prvoSlovo=p;
		char* z=zamjene[i];
		while(*z != '\0'){
			*prvoSlovo = *z;
			z++;
			prvoSlovo++;
		}
	}
	
	if(duzinaPrve>duzinaDruge){
		razlika=duzinaPrve-duzinaDruge;
		razlika=fabs(razlika);
		char* slovo=p;
		char* sljedeceSlovo=p+1;
		for(h=0;h<razlika;h++){
			char* slovo=p;
			char* sljedeceSlovo=p+1;
		while(*slovo++=*sljedeceSlovo++);}
		char* prvoSlovo=p;
		char* z=zamjene[i];
		while(*z != '\0'){
			*prvoSlovo = *z;
			z++;
			prvoSlovo++;
		}
		
	}
	
	else if(duzinaPrve==duzinaDruge){
	
		char* x= p;
		char* y=zamjene[i];
		while(*y !='\0'){
		
		*x=*y;
		
		x++;
		y++;
		}
	}
	}
	}
	}
	return pocetak;

}
	


int main() {
	
	char* rijeci[2] = { ""beli"", ""sneg"" };
	char* zamjene[2] = { ""bijeli"", ""snijeg"" };
	char tekst[100] = ""beli sneg je pokrio beli breg"";
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));

	
	return 0;
}



	/*char* pocetak=tekst;
	char* pocetakRijeci;
	char* zamjenaPok;
	int duzinaStvarne, duzinaTrazene, duzina;
	int i;
	
	while(*tekst != '\0'){
		for(i=0;i<broj_rijeci;i++){
		pocetakRijeci=podstring(tekst,(*zamjene+i));
		zamjenaPok=*(zamjene+i);
		if(pocetakRijeci==NULL) return 0;
		
		duzinaStvarne= duzinaRijeci(pocetakRijeci);
		duzinaTrazene= duzinaRijeci(*zamjene);
		duzina=duzinaStvarne-duzinaTrazene;
		
		while(*pocetakRijeci != '\0'){
			
			
				char* kraj=pocetakRijeci;
				while(*kraj != '\0') kraj++;
				while(kraj > pocetakRijeci){
					*(kraj+duzina)=*kraj;
					kraj--;
				}
			
		
			*pocetakRijeci=*zamjenaPok;
			pocetakRijeci++;
			zamjenaPok++;
		}
		
		tekst++;
	}	
	}
	
	
	return pocetak;
}*/




/*-----------------------------------------------------------------------------	
	char* rijeci[2]={""beli"", ""sneg""};
	char* test[2]={""belise"", ""aneg""};
	char* zamjene[2]={""bijeli"", ""snijeg""};
	char tekst[100]= ""beli sneg je pokrio beli breg"";
	int d,i;
	char** pointer=test[1];
	char** pointer2=zamjene[1];
	
	d=duzinaRijeci(rijeci[0]);
	
	

	
	printf(""%s"", test[1]);
	

	/*printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
	*/
/*	printf(""%d"", duzinaRijeci(test[1]));*/"
362,98,98,0,54,A2016/Z2/Z4/student4903,A2016/Z2/Z4/student5713,"#include <stdio.h>
#include <math.h>
#define epsilon 0.0001
int  M, N, i, j, teplicova=0, cirkularna=0, kraj=0, k, l;
double niz[100][100];
int main() {
	do{
	printf(""Unesite M i N: "");
	scanf(""%d %d"", &M, &N);
	if(M<=0 || M>100 || N<=0 || N>100) printf(""Pogresan unos!\n"");
	}while (M<=0 || M>100 || N<=0 || N>100);
	
	
	printf(""Unesite elemente matrice: "");
	for(i=0; i<M; i++){
	
		for(j=0; j<N; j++){
			scanf(""%lf"", &niz[i][j]);
		}
	}
	
	if(M==1) {printf(""Matrica je cirkularna""); return 0;}
	if(N==1) {printf(""Matrica je Teplicova""); return 0;}
	
	/*ispitivanje da li je cirkularna*/
		
					if(fabs(niz[0][N-1]-niz[1][0])<epsilon){
						
						for(k=0; k<M-1; k++){
							for(l=0; l<N-1; l++){
								if(fabs(niz[k][N-1]- niz[k+1][0])<epsilon){
								if(fabs(niz[k][l]-niz[k+1][l+1])<epsilon) cirkularna=1;
								
								else {cirkularna=0; break; kraj=1;}
									
								}
								else {cirkularna=0; kraj=1;}
							} if(kraj==1) break;
						}
					}
					else cirkularna=0;
		
	
		if(cirkularna==1) {printf(""Matrica je cirkularna""); return 0;}
		/*ako je cirkularna onda je i teplicova*/
	
	/*ispitivanje da li je matrica teplikova*/
	for(i=1; i<M; i++){
		for(j=1; j<N; j++){
				if(fabs(niz[i-1][j-1]-niz[i][j])<epsilon) teplicova=1;
							else {teplicova=0; break;}
				
			}if(teplicova==0)break;
	}
	
	if(teplicova==1 && cirkularna !=1) printf(""Matrica je Teplicova"");
	if(teplicova !=1 && cirkularna !=1 ) printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define epsilon 0.0001
int  M, N, i, j, teplicova=0, cirkularna=0, kraj=0, k, l;
double niz[100][100];
int main() {
	do{
	printf(""Unesite M i N: "");
	scanf(""%d %d"", &M, &N);
	if(M<=0 || M>100 || N<=0 || N>100) printf(""Pogresan unos!\n"");
	}while (M<=0 || M>100 || N<=0 || N>100);
	
	
	printf(""Unesite elemente matrice: "");
	for(i=0; i<M; i++){
	
		for(j=0; j<N; j++){
			scanf(""%lf"", &niz[i][j]);
		}
	}
	
	if(M==1) {printf(""Matrica je cirkularna""); return 0;}
	if(N==1) {printf(""Matrica je Teplicova""); return 0;}
	
	/*ispitivanje da li je cirkularna*/
		
					if(fabs(niz[0][N-1]-niz[1][0])<epsilon){
						
						for(k=0; k<M-1; k++){
							for(l=0; l<N-1; l++){
								if(fabs(niz[k][N-1]- niz[k+1][0])<epsilon){
								if(fabs(niz[k][l]-niz[k+1][l+1])<epsilon) cirkularna=1;
								
								else {cirkularna=0; break; kraj=1;}
									
								}
								else {cirkularna=0; kraj=1;}
							} if(kraj==1) break;
						}
					}
					else cirkularna=0;
		
	
		if(cirkularna==1) {printf(""Matrica je cirkularna""); return 0;}
		/*ako je cirkularna onda je i teplicova*/
	
	/*ispitivanje da li je matrica teplikova*/
	for(i=1; i<M; i++){
		for(j=1; j<N; j++){
				if(fabs(niz[i-1][j-1]-niz[i][j])<epsilon) teplicova=1;
							else {teplicova=0; break;}
				
			}if(teplicova==0)break;
	}
	
	if(teplicova==1 && cirkularna !=1) printf(""Matrica je Teplicova"");
	if(teplicova !=1 && cirkularna !=1 ) printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
"
370,52,52,0,44,A2016/Z3/Z2/student5533,A2016/Z3/Z2/student3557,"#include <stdio.h>
void ubaci(int*niz, int vel)
{
	int niz1[30], i,j=0,suma=0,broj;
	for (i=0; i<vel; i++)
	{
		niz1[j]=niz[i];
		j++;
		broj=niz[i];
		suma=0;
		while (broj!=0)
		{
			suma+=broj%10;
			broj/=10;
		}
		if (suma<0)
		   suma*=-1;
		niz1[j]=suma;
		j++;
		
	}
	for (i=0;i<2*vel; i++)
	{
		niz[i]=niz1[i];
	}
}
int izbaci (int *niz, int vel)
{
  int fib[300], i, j, k;
  fib[0]=1;
  fib[1]=1;
  for (i=2; i<300; i++)
  {
  	fib[i]=fib[i-1]+fib[i-2];
  }
  for (i=0; i<vel; i++)
  
     for (j=0; j<300; j++ )
     
        if (fib[j]==niz[i])
        {
        	for (k=i; k<vel-1; k++)
        		niz[k]=niz[k+1];
        vel--;
        i--;
        break;
        }
        //printf(""%d"", vel);
  return vel;
}

int main() {
	int i,niz[30],vel=10;
	printf(""Unesite niz od 10 brojeva: "");
	for (i=0; i<vel; i++)
	   scanf (""%d"", &niz[i]);
	ubaci(niz,vel);
	vel=vel*2;
	vel=izbaci(niz,vel);
	printf(""Modificirani niz glasi: "");
	for (i=0; i<vel; i++)
	{
		if (i<=vel-2)
		   printf (""%d, "", niz[i]);
		else
		   printf (""%d."", niz[i]);
	}
	return 0;
}
","#include <stdio.h>


 void ubaci (int *niz, int n) {
	int i=0,a, cifra, suma=0, niz2[100];
	
	niz2[0]=niz[0];
	int j=2;
	for(i=1; i<n; i++) {
		niz2[j]=niz[i];
		j+=2;
	}
	
	
	j=1;
	
	for(i=0; i<n; i++) {
		
				a=niz[i];
				suma=0;
				if(a<0) a*=-1;
				while(a!=0) {
					cifra=a%10;
					suma+=cifra;
					a/=10;
					
				}
				niz2[j]=suma;
				j+=2;
				
			}

 	for(i=0; i<2*n; i++ ) niz[i]=niz2[i];
 		
 	
 }

// IZBACIVANJE

int izbaci (int *niz,int n) {
	int fib[1000], i=0, j=0, k=0;
	fib[0]=1;
	fib[1]=1;
	
	for(i=2; i<1000; i++) {
		fib[i]=fib[i-1]+fib[i-2];
	}
	
	for(i=0; i<n; i++) {
		for(j=0; j<100; j++){
			if(niz[i]==fib[j]) {
				for(k=i; k<n-1; k++) {
					niz[k]=niz[k+1];
				}
				n--;
				i--;
				break;
			}
		}
	}
	
	return n;
}

int main() {
	
	int i=0, niz[1000], n=10;
	
	printf(""Unesite niz od 10 brojeva: "");
	
	for(i=0; i<n; i++) {
		scanf(""%d"", &niz[i]);
	}

	ubaci(niz, n);
	n+=n;
	n=izbaci(niz, n);
	printf(""Modificirani niz glasi:"");
	
	for(i=0; i<n; i++) {
		printf("" %d"", niz[i]);
		if(i<n-1) printf("","");
		if(i==n-1) printf(""."");
	}
	
	
	return 0;
	
} 

"
376,99,99,0,130,A2016/Z3/Z3/student1833,A2016/Z3/Z3/student9897,"#include <stdio.h>
int br_redova=1, br_kolona=5;
//int mat[200][200] = {{1,2,1,2,3}};
int mat[200][200];
void ispisi(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int br_redova){
	int i,j;
	for(i=0;i<br_redova;i++){
        for(j=0;j<br_kolona;j++){
        	if(mat[i][j]<-1000){
        		printf(""%d"", mat[i][j]);
        	}else if(mat[i][j]<-100){
        		printf("" %d"", mat[i][j]);
        	}else if(mat[i][j]<-10){
        		printf(""  %d"", mat[i][j]);
        	}else if(mat[i][j]<0){
        		printf(""   %d"", mat[i][j]);
        	}


        	else if(mat[i][j]<10){
        		printf(""    %d"", mat[i][j]);
        	}else if(mat[i][j]<100){
        		printf(""   %d"", mat[i][j]);
        	}else if(mat[i][j]<1000){
        		printf(""  %d"", mat[i][j]);
        	}else if(mat[i][j]<10000){
        		printf("" %d"", mat[i][j]);
        	}
        }
        printf(""\n"");
	}
}
int jesuLiIsti(int *niz1, int *niz2){
    int i;
    for(i=0;i<br_kolona;i++){
        if(niz1[i] != niz2[i]){
            return 0;
        }
    } return 1;
}

void izbaciRed(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int broj){
    int i,j,k;
    for(i=0;i<br_redova;i++){
        if(i == broj){
            for(k=i;k<br_redova;k++){
                for(j=0;j<br_kolona;j++){
                    mat[k][j] = mat[k+1][j];
                }
            }return;
        }
    }
}



int jesuLiIste(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int prva, int druga){
    int j;
    for(j=0;j<br_redova;j++){
        if(mat[j][prva] != mat[j][druga]) return 0;
    }return 1;
}


int izbaciRedove(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int br_redova){
    int i,j,k;
    for(i=0;i<br_redova;i++){
        for(j=i+1;j<br_redova;j++){
            if(jesuLiIsti(mat[i], mat[j])){
                izbaciRed(mat, j);
                br_redova--;
                if(jesuLiIsti(mat[i], mat[j]) && br_redova > 1){
                    //printf(""Broj redova : %d \n"", br_redova);
                    j--;
                }
            }
        }
    }return br_redova;
}


void izbaciKolonu(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int broj){
    int i,j;
    for(i=broj;i<br_kolona;i++){
        for(j=0;j<br_redova;j++){
            //printf(""mat[%d][%d](%d) = mat[%d][%d](%d)\n"", j,i,mat[j][i],j,i+1,mat[j][i+1]);
            mat[j][i] = mat[j][i+1];
        }
    }
}

void izbaciKolone(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int br_redova){
    int i,j,k;
    for(i=0;i<br_kolona;i++){
        for(j=i+1;j<br_kolona;j++){
            if(jesuLiIste(mat, i, j)){
                izbaciKolonu(mat, j);
                br_kolona--;
                if(jesuLiIste(mat, i , j)){
                    j--;
                }
            }
        }
    }
}

int main() {
    int m,n,i,j;
    while(1){
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"", &m, &n);
        if(m < 0 || m> 200){
            printf(""Brojevi nisu u trazenom opsegu.\n"");
            continue;
        }else if(n< 0 || n > 200){
            printf(""Brojevi nisu u trazenom opsegu.\n"");
            continue;
        }else break;
    }
    printf(""Unesite elemente matrice: "");
	br_redova = m;
	br_kolona = n;
	for(i=0;i<m;i++){
        for(j=0;j<n;j++){
            scanf(""%d"", &mat[i][j]);
        }
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	br_redova = izbaciRedove(mat, br_redova);
	izbaciKolone(mat, br_redova);
	ispisi(mat, br_redova);
	return 0;
}
","#include <stdio.h>
int br_redova=1, br_kolona=5;
//int mat[200][200] = {{1,2,1,2,3}};
int mat[200][200];
void ispisi(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int br_redova){
	int i,j;
	for(i=0;i<br_redova;i++){
        for(j=0;j<br_kolona;j++){
        	if(mat[i][j]<-1000){
        		printf(""%d"", mat[i][j]);
        	}else if(mat[i][j]<-100){
        		printf("" %d"", mat[i][j]);
        	}else if(mat[i][j]<-10){
        		printf(""  %d"", mat[i][j]);
        	}else if(mat[i][j]<0){
        		printf(""   %d"", mat[i][j]);
        	}


        	else if(mat[i][j]<10){
        		printf(""    %d"", mat[i][j]);
        	}else if(mat[i][j]<100){
        		printf(""   %d"", mat[i][j]);
        	}else if(mat[i][j]<1000){
        		printf(""  %d"", mat[i][j]);
        	}else if(mat[i][j]<10000){
        		printf("" %d"", mat[i][j]);
        	}
        }
        printf(""\n"");
	}
}
int jesuLiIsti(int *niz1, int *niz2){
    int i;
    for(i=0;i<br_kolona;i++){
        if(niz1[i] != niz2[i]){
            return 0;
        }
    } return 1;
}

void izbaciRed(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int broj){
    int i,j,k;
    for(i=0;i<br_redova;i++){
        if(i == broj){
            for(k=i;k<br_redova;k++){
                for(j=0;j<br_kolona;j++){
                    mat[k][j] = mat[k+1][j];
                }
            }return;
        }
    }
}



int jesuLiIste(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int prva, int druga){
    int j;
    for(j=0;j<br_redova;j++){
        if(mat[j][prva] != mat[j][druga]) return 0;
    }return 1;
}


int izbaciRedove(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int br_redova){
    int i,j,k;
    for(i=0;i<br_redova;i++){
        for(j=i+1;j<br_redova;j++){
            if(jesuLiIsti(mat[i], mat[j])){
                izbaciRed(mat, j);
                br_redova--;
                if(jesuLiIsti(mat[i], mat[j]) && br_redova > 1){
                    //printf(""Broj redova : %d \n"", br_redova);
                    j--;
                }
            }
        }
    }return br_redova;
}


void izbaciKolonu(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int broj){
    int i,j;
    for(i=broj;i<br_kolona;i++){
        for(j=0;j<br_redova;j++){
            //printf(""mat[%d][%d](%d) = mat[%d][%d](%d)\n"", j,i,mat[j][i],j,i+1,mat[j][i+1]);
            mat[j][i] = mat[j][i+1];
        }
    }
}

void izbaciKolone(int mat[][sizeof(mat[0])/sizeof(*mat[0])], int br_redova){
    int i,j,k;
    for(i=0;i<br_kolona;i++){
        for(j=i+1;j<br_kolona;j++){
            if(jesuLiIste(mat, i, j)){
                izbaciKolonu(mat, j);
                br_kolona--;
                if(jesuLiIste(mat, i , j)){
                    j--;
                }
            }
        }
    }
}

int main() {
    int m,n,i,j;
    while(1){
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"", &m, &n);
        if(m < 0 || m> 200){
            printf(""Brojevi nisu u trazenom opsegu.\n"");
            continue;
        }else if(n< 0 || n > 200){
            printf(""Brojevi nisu u trazenom opsegu.\n"");
            continue;
        }else break;
    }
    printf(""Unesite elemente matrice: "");
	br_redova = m;
	br_kolona = n;
	for(i=0;i<m;i++){
        for(j=0;j<n;j++){
            scanf(""%d"", &mat[i][j]);
        }
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	br_redova = izbaciRedove(mat, br_redova);
	izbaciKolone(mat, br_redova);
	ispisi(mat, br_redova);
	return 0;
}
"
390,84,84,0,124,A2016/Z4/Z3/student4473,A2016/Z4/Z3/student3315,"#include <stdio.h>
//ispisati slucaj kada je brojac==1
int uporedi(char *prva, char *druga, int duzina){
	char *p=prva, *d=druga;
	int brojac=0;
	while(*d!='\0'){
		if(*p!=*d)
			return 0;
		p++;
		d++;
		brojac++;
	}
	if(*d=='\0'&&brojac!=duzina)		//potencijalna greska
			return 0;
	return 1;
}
	
char  *prepisi(char *tekst,char *prva, char *druga, int duzina, int brojac){
	int i;
	char *d=druga, *kraj=tekst, *p=prva;
	if(brojac==0){
		while(*kraj!='\0') kraj++;
		char *pok=prva;
		while(pok!=kraj-duzina){
			*pok=*(pok+duzina);
			pok++;
			
		}
		*pok='\0';
		return tekst;
	}
	
	if(brojac!=duzina){
		if(brojac==1){
			while(*kraj!='\0') kraj++;
			char *pok=prva+1;
			while(pok!=kraj-duzina+1){
				*pok=*(pok+duzina-1);
				pok++;
			}
			*pok='\0';
			*prva=*druga;
			return tekst;
		}
		while(*kraj!='\0') kraj++;
		if(brojac>duzina){
			while(kraj!=p){
				*(kraj+brojac-duzina)=*kraj;
				kraj--;
			}
		}
		if(brojac<duzina){
			char *oduzima=p+duzina-brojac-1;
			while(oduzima!=kraj-(duzina-brojac)){
				*oduzima=*(oduzima+duzina-brojac);
				oduzima++;
			}
			*oduzima='\0';
			
		}
		
	}
	
	
	for(i=0;i<brojac;i++)
		*(p+i)=*(d+i);
	return tekst;
	
}

char *zamjena_rijeci(char *tekst, char **rijeci, char **zamjene, int broj_rijeci){
	int i=0,j=0,brojac_slova[100]={0}, brojac_rijeci=1, zamjena_velicina[50]={0};
	char *p, *pok[100], *p_rijec[100], *p_zamjena[100];

	for(i=0;i<broj_rijeci;i++){
		p_zamjena[i]=zamjene[i];
	}
	for(i=0;i<broj_rijeci;i++){
		char *z=p_zamjena[i];
		while(*z!='\0'){
			zamjena_velicina[i]++;
			z++;
		}
	}
	//printf(""%d"", zamjena_velicina[0]);
	//printf(""%c\n"", *(rijeci[0]+1));
	for(i=0;i<broj_rijeci;i++){
		p_rijec[i]=rijeci[i];
	}
	//printf(""%c\n"", *(p_rijec[1]+1));
	p=tekst;
	pok[j]=p;
	i=0;
	while(*p!='\0'){
		if(*p==' '){
			brojac_rijeci++;
			do{
				p++;
			}while(*p==' ');
			i++;
			j++;
			pok[j]=p;
			continue;
			
		}
		brojac_slova[i]++;
		p++;
	}
	//brojac_slova[0] broj slova na prvoj rijeci
	//pok[0] je pokazivac na prvu rijec u stringu
	int k,z;
	for(i=0;i<brojac_rijeci;i++){
		for(j=0;j<broj_rijeci;j++){
			if(uporedi(pok[i],p_rijec[j],brojac_slova[i])){ //funkcija uporedi radi :D, vraca 1 ako su rijeci iste 0 ako nisu
				tekst=prepisi(tekst,pok[i],p_zamjena[j],brojac_slova[i], zamjena_velicina[j]);
				int z;
				if(zamjena_velicina[j]>brojac_slova[i]){
					for(k=0;k<zamjena_velicina[j]-brojac_slova[i];k++){
						for(z=i;z<brojac_rijeci;z++)
							pok[z+1]++;
					}
				}
				if(zamjena_velicina[j]<brojac_slova[i]){
					for(k=0;k<-zamjena_velicina[j]+brojac_slova[i];k++){
						for(z=i;z<brojac_rijeci;z++)
							pok[z+1]--;
					}
				}
			}
				//jos manjiti kad je brojac slova veci od zamjene velicine
		}
	}
	
	
	
	
	
	return tekst;
}



int main() {
	char *rijeci[3]={""proba"", ""Ovo"", ""je""};
	char *zamjene[3]={""a"", ""a"", ""a""};
	char tekst[100]=""Ovo je proba"";
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 3));
	return 0;
}
","#include <stdio.h>

int uporedi(char *rijec1, char *rijec2, int duzina){
	char *m=rijec1, *n=rijec2;
	int brojac=0;
	while(*n!='\0'){
		if(*m!=*n)
			return 0;
		m++;
		n++;
		brojac++;
	}
	if(*n=='\0'&&brojac!=duzina)		
			return 0;
	return 1;
}
char  *prepisi(char *tekst,char *rijec1, char *rijec2, int duzina, int brojac){
	int i;
	char *n=rijec2, *kraj=tekst, *m=rijec1;
	if(brojac==0){
		while(*kraj!='\0') kraj++;
		char *pok=rijec1;
		while(pok!=kraj-duzina){
			*pok=*(pok+duzina);
			pok++;
			
		}
		*pok='\0';
		return tekst;
	}
	
	if(brojac!=duzina){
		if(brojac==1){
			while(*kraj!='\0') kraj++;
			char *pok=rijec1+1;
			while(pok!=kraj-duzina+1){
				*pok=*(pok+duzina-1);
				pok++;
			}
			
			*rijec1=*rijec2;
			return tekst;
		}
		while(*kraj!='\0') kraj++;
		if(brojac>duzina){
			while(kraj!=m){
				*(kraj+brojac-duzina)=*kraj;
				kraj--;
			}
		}
		if(brojac<duzina){
			char *oduzima=m+duzina-brojac-1;
			while(oduzima!=kraj-(duzina-brojac)){
				*oduzima=*(oduzima+duzina-brojac);
				oduzima++;
			}
			
			
		}
		
	}
	
	
	for(i=0;i<brojac;i++)
		*(m+i)=*(n+i);
	return tekst;
	
}
char *p, *pok[100], *p_rijec[100], *p_zamjena[100];
char *zamjena_rijeci(char *tekst, char **rijeci, char **zamjene, int broj_rijeci){
	int i=0,j=0,brojac_slova[100]={0}, brojac_rijeci=1, zamjena_velicina[50]={0};
	

	for(i=0;i<broj_rijeci;i++){
		p_zamjena[i]=zamjene[i];
	}
	for(i=0;i<broj_rijeci;i++){
		char *z=p_zamjena[i];
		while(*z!='\0'){
			zamjena_velicina[i]++;
			z++;
		}
	}
	
	for(i=0;i<broj_rijeci;i++){
		p_rijec[i]=rijeci[i];
	}
	
	p=tekst;
	pok[j]=p;
	i=0;
	while(*p!='\0'){
		if(*p==' '){
			brojac_rijeci++;
			do{
				p++;
			}while(*p==' ');
			i++;
			j++;
			pok[j]=p;
			continue;
			
		}
		brojac_slova[i]++;
		p++;
	}

	
	int a,b;
	for(i=0;i<brojac_rijeci;i++){
		for(j=0;j<broj_rijeci;j++){
			if(uporedi(pok[i],p_rijec[j],brojac_slova[i])){ 
				tekst=prepisi(tekst,pok[i],p_zamjena[j],brojac_slova[i], zamjena_velicina[j]);
				
				if(zamjena_velicina[j]>brojac_slova[i]){
					for(a=0;a<zamjena_velicina[j]-brojac_slova[i];a++){
						for(b=i;b<brojac_rijeci;b++)
							pok[b+1]++;
					}
				}
				if(zamjena_velicina[j]<brojac_slova[i]){
					for(a=0;a<-zamjena_velicina[j]+brojac_slova[i];a++){
						for(b=i;b<brojac_rijeci;b++)
							pok[b+1]--;
					}
				}
			}
				
		}
	}
	
	
	
	
	
	return tekst;
}



int main() {
	char tekst[100]=""Ispisi dati tekst"";
	char *rijeci[3]={""proba"", ""Ovo"", ""je""};
	char *zamjene[3]={""a"", ""a"", ""a""};
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 3));
	return 0;
}"
392,99,99,0,116,A2016/Z1/Z1/student2160,A2016/Z1/Z1/student8189,"#include <stdio.h>
#include <math.h>

int main() {
	double t1,t2,t3,t4,t5,b1,b2,b3,b4,b5,x1,x2,x3,x4,x5,t,b,m;
	int  ocjenaT,ocjenaB,ocjenaM;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&t1);
	if(t1<0 || t1>20) { printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&t2);
	if(t2<0 || t2>20) { printf(""Neispravan broj bodova\n"");
						return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&t3);
	if(t3<0 || t3>10) { printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""Zadace: "");
	scanf(""%lf"",&t4);
	if(t4<0 || t4>10) { printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&t5);
	if(t5<0 || t5>40) { printf(""Neispravan broj bodova\n"");
						return 0; }
	
	
	
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&b1);
	if(b1<0 || b1>20) { printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&b2);
	if(b2<0 || b2>20) { printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""Prisustvo: "");
	scanf(""%lf"",&b3);
		if(b3<0 || b3>10)
	{ printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""Zadace: "");
	scanf(""%lf"",&b4);
		if(b4<0 || b4>10)
	{ printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&b5);
		if(b5<0 || b5>40)
	{ printf(""Neispravan broj bodova\n"");
						return 0; }
			
		printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&x1);
	if(x1<0 || x1>20)   	{ printf(""Neispravan broj bodova\n"");
							return 0; }
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&x2);
	if(x2<0 || x2>20)   	{ printf(""Neispravan broj bodova\n"");
							return 0; }
	printf(""Prisustvo: "");
	scanf(""%lf"",&x3);
	if(x3<0 || x3>10)   	{ printf(""Neispravan broj bodova\n"");
							return 0; }
	printf(""Zadace: "");
	scanf(""%lf"",&x4);
	if(x4<0 || x4>10)   	{ printf(""Neispravan broj bodova\n"");
							return 0; }
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&x5);
	if(x5<0 || x5>40)   	{ printf(""Neispravan broj bodova\n"");
							return 0; }
	
	t=t1+t2+t3+t4+t5;
	b=b1+b2+b3+b4+b5;
	m=x1+x2+x3+x4+x5;

	if(t<55 && b<55 && m<55)
		 printf(""Nijedan student nije polozio.\n"");
	
	else if((t>=55 && b<55 && m<55) || (t<55 && b>=55 && m<55) || (t<55 && b<55 && m>=55)) printf(""Jedan student je polozio.\n"");
	else if((t>=55 && b>=55 && m<55) || (t<55 && b>=55 && m>=55) || (t>=55 && b<55 && m>=55))  printf(""Dva studenta su polozila.\n"");
	
	if(t<55 ) ocjenaT=5;
	else if (t>=55 && t<65) ocjenaT=6;
	else if (t>=65 && t<75) ocjenaT=7;
	else if (t>=75 && t<85) ocjenaT=8;
	else if (t>=85 && t<95) ocjenaT=9;
	else if (t>=95 && t<=100) ocjenaT=10;
	
	if (b<55)  ocjenaB=5;
	else if (b>=55 && b<65)  ocjenaB=6;
	else if (b>=65 && b<75)  ocjenaB=7;
	else if (b>=75 && b<85)  ocjenaB=8;
	else if (b>=85 && b<95)  ocjenaB=9;
	else if (b>=95 && b<=100) ocjenaB=10;
	
	
	if	(m<55) 	ocjenaM=5;
	else if(m>=55 && m<65)  	ocjenaM=6;
	else if(m>=65 && m<75)  	ocjenaM=7;
	else if(m>=75 && m<85) 	    ocjenaM=8;
	else if(m>=85 && m<95)  	ocjenaM=9;
	else if(m>=95 && m<=100)  	ocjenaM=10;
	
	 if(t>=55 && b>=55 && m>=55) 
	{ 	printf(""Sva tri studenta su polozila.\n"");
 		if((ocjenaT==ocjenaB) && (ocjenaB==ocjenaM)  && (ocjenaT==ocjenaM))  
			{  printf(""Sva tri studenta imaju istu ocjenu."");} 
		else  if((ocjenaT!=ocjenaM) && (ocjenaB!=ocjenaM) &&(ocjenaT!=ocjenaB))  {
 		printf(""Svaki student ima razlicitu ocjenu.\n"");}
		else if(((ocjenaT==ocjenaB) && (ocjenaB!=ocjenaM)) || ((ocjenaT==ocjenaM) && (ocjenaT!=ocjenaB)) || ((ocjenaB==ocjenaM) && (ocjenaM!=ocjenaT))) 
			{ printf(""Dva od tri studenta imaju istu ocjenu.\n"");} 
	 }
	return 0;
}

","#include <stdio.h>
#include <math.h>

int main() {
	double t1,t2,t3,t4,t5,b1,b2,b3,b4,b5,x1,x2,x3,x4,x5,t,b,m;
	int  ocjenaT,ocjenaB,ocjenaM;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&t1);
	if(t1<0 || t1>20) { printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&t2);
	if(t2<0 || t2>20) { printf(""Neispravan broj bodova\n"");
						return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&t3);
	if(t3<0 || t3>10) { printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""Zadace: "");
	scanf(""%lf"",&t4);
	if(t4<0 || t4>10) { printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&t5);
	if(t5<0 || t5>40) { printf(""Neispravan broj bodova\n"");
						return 0; }
	
	
	
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&b1);
	if(b1<0 || b1>20) { printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&b2);
	if(b2<0 || b2>20) { printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""Prisustvo: "");
	scanf(""%lf"",&b3);
		if(b3<0 || b3>10)
	{ printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""Zadace: "");
	scanf(""%lf"",&b4);
		if(b4<0 || b4>10)
	{ printf(""Neispravan broj bodova\n"");
						return 0; }
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&b5);
		if(b5<0 || b5>40)
	{ printf(""Neispravan broj bodova\n"");
						return 0; }
			
		printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&x1);
	if(x1<0 || x1>20)   	{ printf(""Neispravan broj bodova\n"");
							return 0; }
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&x2);
	if(x2<0 || x2>20)   	{ printf(""Neispravan broj bodova\n"");
							return 0; }
	printf(""Prisustvo: "");
	scanf(""%lf"",&x3);
	if(x3<0 || x3>10)   	{ printf(""Neispravan broj bodova\n"");
							return 0; }
	printf(""Zadace: "");
	scanf(""%lf"",&x4);
	if(x4<0 || x4>10)   	{ printf(""Neispravan broj bodova\n"");
							return 0; }
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&x5);
	if(x5<0 || x5>40)   	{ printf(""Neispravan broj bodova\n"");
							return 0; }
	
	t=t1+t2+t3+t4+t5;
	b=b1+b2+b3+b4+b5;
	m=x1+x2+x3+x4+x5;

	if(t<55 && b<55 && m<55)
		 printf(""Nijedan student nije polozio.\n"");
	
	else if((t>=55 && b<55 && m<55) || (t<55 && b>=55 && m<55) || (t<55 && b<55 && m>=55)) printf(""Jedan student je polozio.\n"");
	else if((t>=55 && b>=55 && m<55) || (t<55 && b>=55 && m>=55) || (t>=55 && b<55 && m>=55))  printf(""Dva studenta su polozila.\n"");
	
	if(t<55 ) ocjenaT=5;
	else if (t>=55 && t<65) ocjenaT=6;
	else if (t>=65 && t<75) ocjenaT=7;
	else if (t>=75 && t<85) ocjenaT=8;
	else if (t>=85 && t<95) ocjenaT=9;
	else if (t>=95 && t<=100) ocjenaT=10;
	
	if (b<55)  ocjenaB=5;
	else if (b>=55 && b<65)  ocjenaB=6;
	else if (b>=65 && b<75)  ocjenaB=7;
	else if (b>=75 && b<85)  ocjenaB=8;
	else if (b>=85 && b<95)  ocjenaB=9;
	else if (b>=95 && b<=100) ocjenaB=10;
	
	
	if	(m<55) 	ocjenaM=5;
	else if(m>=55 && m<65)  	ocjenaM=6;
	else if(m>=65 && m<75)  	ocjenaM=7;
	else if(m>=75 && m<85) 	    ocjenaM=8;
	else if(m>=85 && m<95)  	ocjenaM=9;
	else if(m>=95 && m<=100)  	ocjenaM=10;
	
	 if(t>=55 && b>=55 && m>=55) 
	{ 	printf(""Sva tri studenta su polozila.\n"");
 		if((ocjenaT==ocjenaB) && (ocjenaB==ocjenaM)  && (ocjenaT==ocjenaM))  
			{  printf(""Sva tri studenta imaju istu ocjenu."");} 
		else  if((ocjenaT!=ocjenaM) && (ocjenaB!=ocjenaM) &&(ocjenaT!=ocjenaB))  {
 		printf(""Svaki student ima razlicitu ocjenu.\n"");}
		else if(((ocjenaT==ocjenaB) && (ocjenaB!=ocjenaM)) || ((ocjenaT==ocjenaM) && (ocjenaT!=ocjenaB)) || ((ocjenaB==ocjenaM) && (ocjenaM!=ocjenaT))) 
			{ printf(""Dva od tri studenta imaju istu ocjenu.\n"");} 
	 }
	return 0;
}

"
398,97,97,0,23,A2016/Z1/Z4/student5529,A2016/Z1/Z4/student6571,"#include <stdio.h>

int main() {
	int n,i,j,m,polovica;
	do{
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	if(n<=0||n>50)
		printf(""Pogresan unos\n"");
	
	} while(n<=0||n>50);
	m=4*n;
	polovica = n*2;
	if(n==1)
	printf(""**"");
	
	for(i=1;i<=n;i++){
		for(j=1;j<=m-1;j++) {
			 if(j==i || j==polovica-i || j==polovica+i-2 || j==m-i-2) {
				printf(""*"");
			} else {
				printf("" "");
			}
		}
		printf(""\n"");
	}
	

	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j,m,polovica;
	do{
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	if(n<=0||n>50)
		printf(""Pogresan unos\n"");
	
	} while(n<=0||n>50);
	m=4*n;
	polovica = n*2;
	if(n==1)
	printf(""**"");
	
	for(i=1;i<=n;i++){
		for(j=1;j<=m-1;j++) {
			 if(j==i || j==polovica-i || j==polovica+i-2 || j==m-i-2) {
				printf(""*"");
			} else {
				printf("" "");
			}
		}
		printf(""\n"");
	}
	

	return 0;
}
"
402,37,37,0,19,A2016/Z2/Z2/student7970,A2016/Z2/Z2/student1943,"#include <stdio.h>
#define BROJ_EL 500
#define PI 3.1415926

int main() {
	int n,i,j;
	float uglovi[BROJ_EL];
	float ukupno_sekundi;
	int stepeni, minute, sekunde;
	
	
	
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	    
	for(i=0; i<n; i++){
		scanf(""%f\n"",&uglovi[i]);
	}
	
    printf(""Uglovi su:\n"");
	
	for(i=0; i<n; i++){
		ukupno_sekundi=((uglovi[i]*180)/PI)*60*60;
		ukupno_sekundi=(int)(ukupno_sekundi+0.5);
		stepeni=ukupno_sekundi/3600;
		minute=(ukupno_sekundi-stepeni*3600)/60;
		sekunde=ukupno_sekundi-stepeni*3600-minute*60;
		
		if(sekunde>=60){
			minute=minute+1;
			sekunde=sekunde-60;
		}
		if(minute>=60){
			stepeni=stepeni+1;
			minute=minute-60;
		}
		
		if(sekunde>30) {
		for(j=i; j<n-1; j++){
			uglovi[j]=uglovi[j+1];
		}
		n--;
		i--;
		}
	}
		for(i=0; i<n; i++){
		ukupno_sekundi=((uglovi[i]*180)/PI)*60*60;
		ukupno_sekundi=(int)(ukupno_sekundi+0.5);
		stepeni=ukupno_sekundi/3600;
		minute=(ukupno_sekundi-stepeni*3600)/60;
		sekunde=ukupno_sekundi-stepeni*3600-minute*60;
		
		if(sekunde>=60){
			minute=minute+1;
			sekunde=sekunde-60;
		}
		if(minute>=60){
			stepeni=stepeni+1;
			minute=minute-60;
		}
		if(uglovi[i]<0){
			minute=-minute;
			sekunde=-sekunde;
			printf(""%d stepeni %d minuta %d sekundi\n"",stepeni,minute,sekunde+1);
		} else
		printf(""%d stepeni %d minuta %d sekundi\n"",stepeni,minute,sekunde);
	}
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define PI 3.1415926
#define EPSILON 0.0001
int main() {
          float niz[500],n;
          float ukupnosekundi;
          int minuta,sekunda,stepen;
          int i,j;
          printf(""Unesite broj uglova: "");
          scanf(""%f"",&n);
          if(n<0 || n>500) return 0;
          for(i=0;i<500;i++) {
                    if(fabs(i-n)<EPSILON) break;
          	scanf(""%f"",&niz[i]);
          }
              for(i=0;i<n;i++) {
        ukupnosekundi=(niz[i]*180/PI)*3600; 
        ukupnosekundi=(int)(ukupnosekundi+0.5);          
        stepen=ukupnosekundi/3600;            
         minuta=(ukupnosekundi-stepen*3600)/60;
        sekunda=ukupnosekundi-stepen*3600-minuta*60;
        if (sekunda>=60) {minuta+=1; sekunda-=60;}
        if (minuta>=60) {stepen+=1; minuta-=60;}
        if (sekunda>30) {
            for (j=i; j<n-1; j++) {
                niz[j] = niz[j+1];
            }
            n--;            
            i--;
        }
    }
    printf(""Uglovi su: "");
    for(i=0;i<n;i++){
        ukupnosekundi=(niz[i]*180/PI)*3600; 
        ukupnosekundi=(int)(ukupnosekundi+0.5);          
        stepen=ukupnosekundi/3600;            
         minuta=(ukupnosekundi-stepen*3600)/60;
        sekunda=ukupnosekundi-stepen*3600-minuta*60;
        if (sekunda>=60) {minuta+=1; sekunda-=60;}
        if (minuta>=60) {stepen+=1; minuta-=60;}
              printf(""\n%d stepeni %d minuta %d sekundi"",stepen,minuta,sekunda);
    }
    return 0;
}
"
416,45,45,0,13,A2016/Z2/Z1/student5355,A2016/Z2/Z1/student2736,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int main() {
	int n, broj, cifra1, cifra2, i = 0, rjesenje = 0, razlika;
	printf (""Unesite broj: "");
	scanf (""%d"", &n);
	if (n < 0) n*=-1;
	while (n > 9) {
		cifra1= n%10;
		n/=10;
		cifra2 = n%10;
		razlika = fabs(cifra1-cifra2);
		rjesenje += razlika * (pow(10, i));
		i++;
	}
	printf (""%d"", rjesenje);
	return 0;
}
","#include <stdio.h>
#include <math.h>

int main() 
{
	int n,br1,br2,a,b=0,c=1;
	
	printf(""Unesite broj: "");
	scanf(""%d"",&n);
	
	if(n<0)
		n=fabs(n);
	if(n<10)
	{
		printf(""0"");
		return 0;
	}	
	
	while(n>=10)
	{
		br1=n%10;
		n/=10;
		br2=(n%10);
		
		a=fabs(br1-br2);
		
		b+=a*pow(10,c);c++;
		
	}
	
	printf(""%d"",b/10);
	
	return 0;
}
"
428,66,66,0,18,A2016/Z1/Z4/student6613,A2016/Z1/Z4/student4640,"#include <stdio.h>

int main() {

   int n,i,j;
   printf(""Unesite broj n: "");
   scanf(""%d"",&n);
   if(n<=0 || n>50){
      while(n<=0 || n>50){
         printf(""Pogresan unos"");
         printf(""\nUnesite broj n: "");
         scanf(""%d"", &n);
      }
   } if(n==1)printf(""***""); 
   else{
   for(i=0;i<n;i++){
   	
   	for(j=0;j<=4*n-4;j++){
   	      if(i==j || (i+j)==(2*n-2) || (j-i)==(2*n-2) || (i+j)==(4*n-4))
            printf(""*"");
            else printf("" "");
            
   	}
       printf(""\n"");
   }}
            return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	
	printf (""Unesite broj n: "");
	scanf (""%i"",&n);
	if (n<=0 || n>50) {
		while (n<=0 || n>50) {
	    printf (""Pogresan unos"");
		printf (""\nUnesite broj n: "");
	    scanf (""%i"",&n);
		}
	} if (n==1)
	printf(""***"");
	else {
	for (i=0;i<n;i++) {
		
		for (j=0;j<=4*n-4;j++) {
			if ((i==j) || (j-i)==(2*n-2) || (i+j)==(4*n-4) || (i+j)==(2*n-2))
			printf (""*"");
			else printf("" "");
		}
		printf (""\n"");
		}
	}
	return 0;
}
	
"
442,69,69,0,18,A2016/Z1/Z4/student9676,A2016/Z1/Z4/student3671,"#include <stdio.h>

int main() {
	int n, i, j;
	do {
	printf(""\nUnesite broj n: "");
	scanf(""%d"", &n);
	
	   if (n <= 0 || n > 50){
	   	printf(""Pogresan unos"");
	   }
	   
	} while (n <= 0 || n > 50);
	
			if (n == 1){
				printf(""***"");
				return 0;
			}
	
	for (i=0; i < n; i++){
			
		for (j=0; j<4*n-3; j++){
				
			if (j==i || j == 2*n-2-i || j == 4*n-4-i || j == 2*n-2+i){
					printf(""*"");
			} else {
					printf("" "");
				}
				
			}
			
			printf(""\n"");
		}
			
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	do{
		printf(""Unesite broj n: "");
		scanf(""%d"", &n);
		if(n<=0 || n>50) 
		{printf(""Pogresan unos\n"");}
	} 
	while(n<=0 || n>50);
	
	
	
if(n==1)
{printf(""***"");}

else
{	for(i=0; i<n; i++) 
	{
	  for(j=0; j<4*n-3; j++)
	    {
	        if(i==j || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i ) 
	        {
	        printf(""*"");
	        }
	        else 
	        {
	        	printf("" "");
	        }
	    }
	    printf(""\n"");
	}
}
	
	return 0;
}"
446,42,42,0,20,A2016/Z1/Z4/student4949,A2016/Z1/Z4/student8854,"#include <stdio.h>

int main() {
	int n,i,j,k,l,o,s,m,h,g,d,t,p;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while (n<=0 || n>50)
    { printf(""Pogresan unos \n"");
	  printf(""Unesite broj n: "");
	  scanf(""%d"",&p);
		n=p;
	}
	
	if(n==1) printf(""***"");
	
	
	else{
	
	printf(""*"");
	for(h=1; h<=2*(n-1)-1; h++) printf("" "");
	printf(""*"");
		for(g=1; g<=2*(n-1)-1; g++) printf("" "");
		printf(""*"");
	printf(""\n"");
	
	
	for(i=2; i<=n-1; i++){
		for(j=1; j<i; j++) {printf("" ""); 
		}
		printf(""*"");
		
		for(l=1; l<2*(n-i); l++) {printf("" ""); 
		}
		 printf(""*"");
		
		for(m=1; m<2*i-2; m++) {printf("" ""); 
		}
		printf(""*"");
		for(o=1; o<2*(n-i); o++) {printf("" ""); 
		}
		printf(""*"");
		
		printf(""\n"");
	}
	
	
	for(d=1; d<=n-1; d++) printf("" "");
	printf(""*"");
		for(t=1; t<=2*i-3; t++) printf("" "");
		printf(""*"");
	printf(""\n"");	
	
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	int i,j,k,l,m,n,p,q,r,s;
	
	do
	{
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
		if(n<1 || n>50)
		printf(""Pogresan unos\n"");
		
	}
	while (n<1 || n>50);
	
if (n==1)
printf(""***"");
else
{printf(""*"");
for (i=1;i<=2*n-3;i++)
printf("" "");
printf(""*"");
for (j=1;j<=2*n-3;j++)
printf("" "");
printf(""*\n"");

for(k=1;k<=n-2;k++)
{
	for(m=1;m<=k;m++)
	printf("" "");
	printf(""*"");
	
	for(l=1;l<=2*n-3-k*2;l++)
	printf("" "");
	printf(""*"");
	
	for(p=1;p<=2*k-1;p++)
	printf("" "");
	printf(""*"");
	
	for(q=1;q<=2*n-3-k*2;q++)
	printf("" "");
	printf(""*\n"");
	
	
}



for (r=1;r<=n-1;r++)
printf("" "");
printf(""*"");
for (s=1;s<=2*n-3;s++)
printf("" "");
printf(""*\n"");


}	
	
	return 0;
}
"
447,94,94,0,16,A2016/Z1/Z2/student4959,A2016/Z1/Z2/student2421,"#include <stdio.h>
#include <math.h>
#define epsilon 0.000001
int main() {
	float a1,a2,b1,b2,x,y;

	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f, %f, %f, %f"",&a1,&b1,&a2,&b2);
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	if(fabs(a1-a2)<epsilon && fabs(b1-b2)>epsilon) printf(""Paralelne su"");
	else if( fabs(a1-a2)<epsilon && fabs(b1-b2)<epsilon) printf(""Poklapaju se"");
	else printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);


	return 0;
}
","#include <stdio.h>
#include <math.h>
#define EPSILON 0.001

int main() {
	float a1,b1,a2,b2,x,y1;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	
	x=(b2-b1)/(a1-a2);
	y1=a1*x+b1;

	
	if (fabs(a1-a2)<EPSILON && fabs(b1-b2)>EPSILON){
		printf(""Paralelne su"");
	}else {
		if (fabs(a1-a2)<EPSILON && fabs(b1-b2)<EPSILON){
			printf(""Poklapaju se"");
		}else {
			printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y1);
		}
	}
	
	
	return 0;
}
"
451,93,93,0,61,A2016/Z3/Z3/student9931,A2016/Z3/Z3/student3329,"#include <stdio.h>
 
int main() {
    int m, n, mat[200][200], i, j, p, z, l, w;
    do {
        printf (""Unesite brojeve M i N: "");
        scanf (""%d %d"", &m, &n);
        if (m<=0 || m>200 || n<=0 || n>200) {
            printf (""Brojevi nisu u trazenom opsegu.\n"");
        }
    }while (m<=0 || m>200 || n<=0 || n>200);
    printf (""Unesite elemente matrice: "");
    for (i=0; i<m; i++){
        for (j=0; j<n; j++){
            scanf(""%d"", &mat[i][j]);
    }}
    for (i = 0; i < m; i++){
      for (j = i + 1; j < m; j++){
    w = 1;
         for (p = 0; p < n; p++){
         if (mat[i][p] != mat[j][p]){
    w = 0;break;
    }}
    if (w){
    for (z = j; z < m - 1; z++){
      for (l = 0; l < n; l++){
      mat[z][l] = mat[z+1][l];
    }}
    j--;m--;
    }}}
    for (j = 0; j < n; j++){
      for (i = j + 1; i < n; i++){
    w = 1;
         for (p = 0; p < m; p++){
         if (mat[p][j] != mat[p][i]){
    w = 0;break;}}
    if (w){
    for (z = i; z < n - 1; z++){
      for (l = 0; l < m; l++){
      mat[l][z] = mat[l][z+1];
    }}
    i--;n--;
    }}}
    printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
    for (i = 0; i < m; i++){
      for (j = 0; j < n; j++){
      printf(""%5d"", mat[i][j]);
    }
    printf (""\n"");
    }
    return 0;
}","#include <stdio.h>

int main() {
	int mat[200][200];
	int M, N, i, j, k, m, n, checker;
	do{
		printf(""Unesite brojeve M i N: ""); scanf(""%d %d"", &M, &N);
		if(M<=0||M>200||N<=0||N>200) printf(""Brojevi nisu u trazenom opsegu.\n"");
	}while(M<=0||M>200||N<=0||N>200);
	
	printf(""Unesite elemente matrice: "");
	for(i=0; i<M; i++){
		for(j=0; j<N; j++){
			scanf(""%d"",&mat[i][j]);
		}
	}
	/*izbacivanje redova*/
	
	for(i=0; i<M; i++){
		for(k=i+1; k<M; k++){
			checker=1;
			for(j=0; j<N; j++){
				if(mat[i][j]!=mat[k][j]){
					checker=0; break;
				}
			}
			if(checker){
				for(m=k; m<M-1; m++){
					for(n=0; n<N; n++){
						mat[m][n]=mat[m+1][n];
					}
				}
				M--; k--;
			}
		}
	}
	/*izbacivanje kolona analogno kao za izbacivanje redova..................*/
	
	for(j=0; j<N; j++){
		for(k=j+1; k<N; k++){
			checker=1;
			for(i=0; i<M; i++){
				if(mat[i][j]!=mat[i][k]){
					checker=0; break;
				}
			}
			if(checker){
				for(n=k; n<N-1; n++){
					for(m=0; m<M; m++){
						mat[m][n]=mat[m][n+1];
					}
				}
				N--; k--;
			}
		}
	}
	
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0; i<M; i++){
		for(j=0; j<N; j++){
			printf(""%5d"", mat[i][j]);
		}
		printf(""\n"");
	}
	return 0;
}"
456,89,89,0,117,A2016/Z1/Z1/student3790,A2016/Z1/Z1/student5236,"#include <stdio.h>

int main() {
	
	double p1,p2,p3,z1,z2,z3,pi11,pi12,pi13,pi21,pi22,pi23,u1,u2,u3,b1,b2,b3;
	int o1,o2,o3;
	

	
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &pi11);
	if(pi11<0 || pi11>20){printf(""Neispravan broj bodova"");}
	else {
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &pi21);
	if(pi21<0 || pi21>20){printf(""Neispravan broj bodova"");}
	else {
	printf(""Prisustvo: "");
	scanf(""%lf"", &p1);
	if(p1<0 || p1>10){printf(""Neispravan broj bodova"");}
	else {
	printf(""Zadace: "");
	scanf(""%lf"", &z1);
	if(z1<0 || z1>10){printf(""Neispravan broj bodova"");}
	else {
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &u1);
	if(u1<0 || u1>40){printf(""Neispravan broj bodova"");}
	
	else {
		
	printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &pi12);
	if(pi12<0 || pi12>20){printf(""Neispravan broj bodova"");}
	else {
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &pi22);
	if(pi22<0 || pi22>20){printf(""Neispravan broj bodova"");}
	else {
	printf(""Prisustvo: "");
	scanf(""%lf"", &p2);
	if(p2<0 || p2>10){printf(""Neispravan broj bodova"");}
	else {
	printf(""Zadace: "");
	scanf(""%lf"", &z2);
	if(z2<0 || z2>10){printf(""Neispravan broj bodova"");}
	else {
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &u2);
	if(u2<0 || u2>40){printf(""Neispravan broj bodova"");}
	
	else {
		
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &pi13);
	if(pi13<0 || pi13>20){printf(""Neispravan broj bodova"");}
	else {
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &pi23);
	if(pi23<0 || pi23>20){printf(""Neispravan broj bodova"");}
	else {
	printf(""Prisustvo: "");
	scanf(""%lf"", &p3);
	if(p3<0 || p3>10){printf(""Neispravan broj bodova"");}
	else {
	printf(""Zadace: "");
	scanf(""%lf"", &z3);
	if(z3<0 || z3>10){printf(""Neispravan broj bodova"");}
	else {
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &u3);
	if(u3<0 || u3>40){printf(""Neispravan broj bodova"");}
		
	else {
		
	b1=pi11+pi21+p1+z1+u1;
	b2=pi12+pi22+p2+z2+u2;
	b3=pi13+pi23+p3+z3+u3;
	
	
	
	
	
	
	if(b1<55 && b2<55 && b3<55){printf(""Nijedan student nije polozio."");}
	else if(b1>=55 && b2<55 && b3<55 || b1<55 && b2>=55 && b3<55 || b1<55 && b2<55 && b3>=55){printf(""Jedan student je polozio."");}
	else if(b1>=55 && b2>=55 && b3<55 || b1<55 && b2>=55 && b3>=55 || b1>=55 && b2<55 && b3>=55){printf(""Dva studenta su polozila."");}
	else {printf(""Sva tri studenta su polozila."");}
	
	if(b1<55){o1=5;}
	else if(b1>=55 && b1<65){o1=6;}
	else if(b1>=65 && b1<75){o1=7;}
	else if(b1>=75 && b1<85){o1=8;}
	else if(b1>=85 && b1<92){o1=9;}
	else {o1=10;}
	
	if(b2<55){o2=5;}
	else if(b2>=55 && b2<65){o2=6;}
	else if(b2>=65 && b2<75){o2=7;}
	else if(b2>=75 && b2<85){o2=8;}
	else if(b2>=85 && b2<92){o2=9;}
	else {o2=10;}
	
	if(b3<55){o3=5;}
	else if(b3>=55 && b3<65){o3=6;}
	else if(b3>=65 && b3<75){o3=7;}
	else if(b3>=75 && b3<85){o3=8;}
	else if(b3>=85 && b3<92){o3=9;}
	else {o3=10;}
	
	if(b1>=55 && b2>=55 && b3>=55){
		if(o1==o2 && o2==o3){printf(""\nSva tri studenta imaju istu ocjenu."");}
		else if(o1==o2 && o1!=o3 || o1==o3 && o1!=o2 || o2==o3 && o1!=o2){printf(""\nDva od tri studenta imaju istu ocjenu."");}
		else {printf(""\nSvaki student ima razlicitu ocjenu."");}}
		
	}}}}}}}}}}}}}}}
		
	
	return 0;
}
","#include <stdio.h>

int main() {
	double ppT,dpT,pT,zT,ziT,ppB,dpB,pB,zB,ziB,ppM,dpM,pM,zM,ziM,uT,uB,uM,ocjena1,ocjena2,ocjena3;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&ppT);
	if(ppT<0 || ppT>20){
		printf(""Neisprava broj bodova"");
	}else {
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&dpT);
	if(dpT<0 || dpT>20){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""Prisustvo: "");
	scanf(""%lf"",&pT);
	if(pT<0 || pT>10){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""Zadace: "");
	scanf(""%lf"",&zT);
	 if(zT<0 || zT>10){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ziT);
	if(ziT<0 || ziT>40){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&ppB);
	if(ppB<0 || ppB>20){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&dpB);
	if(dpB<0 || dpB>20){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""Prisustvo: "");
	scanf(""%lf"",&pB);
	if(pB<0 || pB>10){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""Zadace: "");
	scanf(""%lf"",&zB);
	if(zB<0 || zB>10){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ziB);
	if(ziB<0 || ziB>40){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&ppM);
	if(ppM<0 || ppM>20){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&dpM);
	if(dpM<0 || dpM>20){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""Prisustvo: "");
	scanf(""%lf"",&pM);
	if(pM<0 || pM>10){
		printf(""Neispravan broj bodova"");	
	}else{
	printf(""Zadace: "");
	scanf(""%lf"",&zM);
	if(zM<0 || zM>10){
		printf(""Neispravan broj bodova"");
	}else{
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ziM);
	} if(ziM<0 || ziM>40){
	printf(""Neispravan broj bodova"");
    }else{
    uT=ppT+dpT+pT+zT+ziT;
	uB=ppB+dpB+pB+zB+ziB;
	uM=ppM+dpM+pM+zM+ziM;
	if(uT>=55 && uT<65){
	ocjena1=6;	
	}else if(uT>=65 && uT<75){
	ocjena1=7;	
	}else if(uT>=75 && uT<85){
	ocjena1=8;	
	}else if(uT>=85 && uT<92 ){
	ocjena1=9;	
	}else if(uT>92 && uT<=100){
	ocjena1=10;	
	}if(uB>=55 && uB<65){
	ocjena2=6;
	}else if(uB>=65 && uB<75){
    ocjena2=7;
	}else if(uB>=75 && uB<85){
	ocjena2=8;
	}else if(uB>=85 && uB<92){
	ocjena2=9;
	}else if(uB>=92 && uB<=100){
	ocjena2=10;
	}if(uM>=55 && uM<65){
	ocjena3=6;
	}else if(uM>=65 && uM<75){
	ocjena3=7;
	}else if(uM>=75 && uM<85){
	ocjena3=8;
	}else if(uM>=85 && uM<92){
	ocjena3=9;
	}else if(uM>=92 && uM<=100){
	ocjena3=10;
	}
	if(uB<55 && uT<55 && uM<55){
		printf(""Nijedan student nije polozio."");
	}else if(uB>55 && uT>55 && uM>55){
		printf(""Sva tri studenta su polozila.\n"");
		if(ocjena1==ocjena2 && ocjena1==ocjena3 && ocjena2==ocjena3){
		printf(""Sva tri studenta imaju istu ocjenu."");
	}else if(ocjena1 != ocjena2 && ocjena1 != ocjena3 && ocjena2 != ocjena3 ){
		printf(""Svaki student ima razlicitu ocjenu."");
	}else{
		printf(""Dva od tri studenta imaju istu ocjenu."");
	}
	}else if(uT>=55 && uB<=55 && uM<=55 || uT<=55 && uM<=55 && uB>=55 || uT<=55 && uB<=55 && uM>=55){
		printf(""Jedan student je polozio."");
	}else if(uT>55 && uB>55 && uM<55 || uT<55 && uB>55 && uM>55 || uM>55 && uT>55 || uB<55) {
		printf(""Dva studenta su polozila."");}
    }
		
	}}}}}}}}}}}}}
		
	return 0;
}
"
457,98,98,0,30,A2016/Z2/Z4/student8560,A2016/Z2/Z4/student1202,"#include <stdio.h>
#define dimenzija 100
int main() {
double MATRICA[dimenzija][dimenzija]; /* tipa double zbog preciznosti,zbog testa 11 */
int M,N,i,j;
int Teplicova,cirkularna;
do {
	printf(""Unesite M i N: "");
	scanf(""%d %d"", &M,&N);
	if(M<=0 || M>100 || N<=0 || N>100)printf(""Pogresan unos!\n"");
}
while(M<=0 || M>100 || N<=0 || N>100);
printf(""Unesite elemente matrice: "");
/* unos matrice ugnjezdenom for petljom */
for(i=0;i<M;i++){
	for(j=0;j<N;j++){
		scanf(""%lf"", &MATRICA[i][j]);
}
}
/* napocetku pretpostavka da je matrica i cirkularna i Teplicova */
Teplicova=1, cirkularna=1;
for(i=1;i<M;i++){
	for(j=1;j<N;j++){
		if(MATRICA[i][0]!=MATRICA[i-1][N-1] || MATRICA[i][j]!=MATRICA[i-1][j-1]){ cirkularna=0;}
		if(MATRICA[i][j]!=MATRICA[i-1][j-1] ){Teplicova=0;}
	}
}
/* kada imamo matricu 100x1 ona jedino moze biti Teplicova */
 if(N==1 && M==100 ){printf(""Matrica je Teplicova""); return 0;}
if(cirkularna==1)printf(""Matrica je cirkularna"");
else if(Teplicova==1)printf(""Matrica je Teplicova"");
else printf(""Matrica nije ni cirkularna ni Teplicova"");
return 0;
}
","#include <stdio.h>
#define dimenzija 100
int main() {
double MATRICA[dimenzija][dimenzija]; /* tipa double zbog preciznosti,zbog testa 11 */
int M,N,i,j;
int Teplicova,cirkularna;
do {
	printf(""Unesite M i N: "");
	scanf(""%d %d"", &M,&N);
	if(M<=0 || M>100 || N<=0 || N>100)printf(""Pogresan unos!\n"");
}
while(M<=0 || M>100 || N<=0 || N>100);
printf(""Unesite elemente matrice: "");
/* unos matrice ugnjezdenom for petljom */
for(i=0;i<M;i++){
	for(j=0;j<N;j++){
		scanf(""%lf"", &MATRICA[i][j]);
}
}
/* napocetku pretpostavka da je matrica i cirkularna i Teplicova */
Teplicova=1, cirkularna=1;
for(i=1;i<M;i++){
	for(j=1;j<N;j++){
		if(MATRICA[i][0]!=MATRICA[i-1][N-1] || MATRICA[i][j]!=MATRICA[i-1][j-1]){ cirkularna=0;}
		if(MATRICA[i][j]!=MATRICA[i-1][j-1] ){Teplicova=0;}
	}
}
/* kada imamo matricu 100x1 ona jedino moze biti Teplicova */
 if(N==1 && M==100 ){printf(""Matrica je Teplicova""); return 0;}
if(cirkularna==1)printf(""Matrica je cirkularna"");
else if(Teplicova==1)printf(""Matrica je Teplicova"");
else printf(""Matrica nije ni cirkularna ni Teplicova"");
return 0;
}
"
459,98,98,0,84,A2016/Z1/Z3/student2351,A2016/Z1/Z3/student1477,"#include <stdio.h>

int main()
{
    char autom;
    int max=0;
    float procenat;
    int brojac_ukupno_auta=0;
    int brojac_crnih=0,brojac_bijelih=0, brojac_sivih=0, brojac_crvenih=0, brojac_plavih=0;
    char max_znak=0;
    
    printf(""Unesite vozila: "");
    /*beskonacna petlja koju prekidam sa break; */
    while (100000000==100000000)
	{
	
    scanf(""%c"", &autom);
    if (autom=='C' || autom=='c')
    { 
       brojac_crnih++;
    if (brojac_crnih>max) {max=brojac_crnih; 
    max_znak='C';}
	}
	else if (autom=='B' || autom=='b')
	{
	   brojac_bijelih++;
	   if (brojac_bijelih>max) {max=brojac_bijelih; 
	   max_znak='B';}
	}
	else if (autom=='S' || autom=='s')
	{
	    brojac_sivih++;
	    if (brojac_sivih>max){ max=brojac_sivih; 
	    max_znak='S';}
	}
	else if (autom=='V' || autom=='v')
	{
	    brojac_crvenih++;
	    if (brojac_crvenih>max) {max=brojac_crvenih; 
	    max_znak='V';}
	}
	else if (autom=='P' || autom=='p') 
	{
	    brojac_plavih++;
	    if (brojac_plavih>max){ max=brojac_plavih;
	    
	    max_znak='P';}
	}
	else if (autom=='K' || autom=='k')
	{
	    break;
	}
	else 
	{
	    printf(""Neispravan unos\n"");
	}
}
/*brojac za ukupan broj auta*/
brojac_ukupno_auta=brojac_crnih+brojac_bijelih+brojac_sivih+brojac_crvenih+brojac_plavih;
printf (""Ukupno evidentirano %d vozila.\n"", brojac_ukupno_auta);

if (brojac_ukupno_auta==0) { printf(""Najpopularnija boja je crna (0.00%).""); 

return 0; }

else {  
if (max_znak=='C') 
{ 
	procenat=(max*100.)/brojac_ukupno_auta;
	printf(""Najpopularnija boja je crna (%.2f%). "", procenat);  return 0;}
if (max_znak=='B')
{
   procenat=(max*100.)/brojac_ukupno_auta;
   printf(""Najpopularnija boja je bijela (%.2f%)."", procenat);  return 0;}
if (max_znak=='P') 
{
	procenat=(max*100.)/brojac_ukupno_auta;
	printf(""Najpopularnija boja je plava (%.2f%)."", procenat); return 0;}
if (max_znak=='V') 
{
	procenat=(max*100.)/brojac_ukupno_auta; 
	printf(""Najpopularnija boja je crvena (%.2f%)."", procenat); return 0;}
if (max_znak=='S') 
{
	procenat=(max*100.)/brojac_ukupno_auta; 
	printf(""Najpopularnija boja je siva (%.2f%)."", procenat); return 0; } 
	
}

return 0;
}

","#include <stdio.h>

int main()
{
    char autom;
    int max=0;
    float procenat;
    int brojac_ukupno_auta=0;
    int brojac_crnih=0,brojac_bijelih=0, brojac_sivih=0, brojac_crvenih=0, brojac_plavih=0;
    char max_znak=0;
    
    printf(""Unesite vozila: "");
    /*beskonacna petlja koju prekidam sa break; */
    while (100000000==100000000)
	{
	
    scanf(""%c"", &autom);
    if (autom=='C' || autom=='c')
    { 
       brojac_crnih++;
    if (brojac_crnih>max) {max=brojac_crnih; 
    max_znak='C';}
	}
	else if (autom=='B' || autom=='b')
	{
	   brojac_bijelih++;
	   if (brojac_bijelih>max) {max=brojac_bijelih; 
	   max_znak='B';}
	}
	else if (autom=='S' || autom=='s')
	{
	    brojac_sivih++;
	    if (brojac_sivih>max){ max=brojac_sivih; 
	    max_znak='S';}
	}
	else if (autom=='V' || autom=='v')
	{
	    brojac_crvenih++;
	    if (brojac_crvenih>max) {max=brojac_crvenih; 
	    max_znak='V';}
	}
	else if (autom=='P' || autom=='p') 
	{
	    brojac_plavih++;
	    if (brojac_plavih>max){ max=brojac_plavih;
	    
	    max_znak='P';}
	}
	else if (autom=='K' || autom=='k')
	{
	    break;
	}
	else 
	{
	    printf(""Neispravan unos\n"");
	}
}
/*brojac za ukupan broj auta*/
brojac_ukupno_auta=brojac_crnih+brojac_bijelih+brojac_sivih+brojac_crvenih+brojac_plavih;
printf (""Ukupno evidentirano %d vozila.\n"", brojac_ukupno_auta);

if (brojac_ukupno_auta==0) { printf(""Najpopularnija boja je crna (0.00%).""); 

return 0; }

else {  
if (max_znak=='C') 
{ 
	procenat=(max*100.)/brojac_ukupno_auta;
	printf(""Najpopularnija boja je crna (%.2f%). "", procenat);  return 0;}
if (max_znak=='B')
{
   procenat=(max*100.)/brojac_ukupno_auta;
   printf(""Najpopularnija boja je bijela (%.2f%)."", procenat);  return 0;}
if (max_znak=='P') 
{
	procenat=(max*100.)/brojac_ukupno_auta;
	printf(""Najpopularnija boja je plava (%.2f%)."", procenat); return 0;}
if (max_znak=='V') 
{
	procenat=(max*100.)/brojac_ukupno_auta; 
	printf(""Najpopularnija boja je crvena (%.2f%)."", procenat); return 0;}
if (max_znak=='S') 
{
	procenat=(max*100.)/brojac_ukupno_auta; 
	printf(""Najpopularnija boja je siva (%.2f%)."", procenat); return 0; } 
	
}

return 0;
}

"
462,99,99,0,125,A2016/Z4/Z1/student8004,A2016/Z4/Z1/student5468,"#include <stdio.h>
void unesi(char* niz,int vel){
	int i=0;
	char znak=getchar();
	if (znak=='\0')
	znak=getchar();
	while(i<vel-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
char* izbaci_najcescu(char* s){
	char *ret=s,*prvo_slovo[1000],*kraj_rijeci[1000],rijec[1000][1000]={{0}},*pomocni1,*pomocni2,rijec_za_izbaciti[1000],*pokazivac_rijec_za_izbaciti,konvertovano_velika,*kraj_rijeci_pronadjene;
	int neslovo=1,broj_rijeci=0,i,broj_slova=0,j,red,k,brojac_ponavljanja_rijeci[1000]={0},broj_reda_maximuma,logicka_rijec,konvertovano_mala;
	//postavljanje pokazivaca na pocetak svake rijeci i prebrojavanje rijeci
	if(*s=='\0') return ret;
	while(*s!='\0'){
		if(!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')))
        neslovo=1;
        else if (neslovo==1){
         neslovo=0;
         prvo_slovo[broj_rijeci]=s;
         broj_rijeci++;
        }
		s++;
	}
	//postavljanje pokazivaca na kraj rijeci
	for(i=0; i<broj_rijeci; i++){
		kraj_rijeci[i]=prvo_slovo[i];
		while((*kraj_rijeci[i]>='A' && *kraj_rijeci[i]<='Z') || (*kraj_rijeci[i]>='a' && *kraj_rijeci[i]<='z'))
		kraj_rijeci[i]++;
		/*prepisivanje rijeci u matricu*/
		j=0;
		while(kraj_rijeci[i]>prvo_slovo[i]){
				rijec[i][j]=*prvo_slovo[i];
			prvo_slovo[i]++;
			j++;
		}
		rijec[i][j]='\0';
	}
	//pronalazenje istih redova matrice
	for(i=0; i<broj_rijeci-1; i++){
		for(j=i+1; j<broj_rijeci; j++){
			red=1;
			k=0;
			while((rijec[i][k]!='\0')&&(rijec[j][k]!='\0')){
				if((rijec[i][k]!=rijec[j][k]) && (rijec[i][k]!=rijec[j][k]+('a'-'A')) && (rijec[i][k]!=rijec[j][k]-('a'-'A')))
					red=0;
					k++;
			}
			if(rijec[i][k]!=rijec[j][k])
				red=0;
			if(red){
			brojac_ponavljanja_rijeci[i]++;
			}
		}
	}
	//pronalazenje rijeci za izbacivanje
	broj_reda_maximuma=0;
	for(i=1; i<broj_rijeci-1; i++){
			if(brojac_ponavljanja_rijeci[i]>brojac_ponavljanja_rijeci[broj_reda_maximuma])
				broj_reda_maximuma=i;
		}
	
	for(i=0; rijec[broj_reda_maximuma][i]!='\0' ; i++){
		rijec_za_izbaciti[i]=rijec[broj_reda_maximuma][i];
	}
	rijec_za_izbaciti[i]='\0';
	/*prebojavanje duzine rijeci*/
		pomocni1=rijec_za_izbaciti;
		pomocni2=rijec_za_izbaciti;
		while(*pomocni2!='\0'){
			pomocni2++;
		}
		broj_slova=0;
		while(pomocni1<pomocni2){
			pomocni1++;
			broj_slova++;
		}
		
	pokazivac_rijec_za_izbaciti=rijec_za_izbaciti;
	s=ret;
	//izbacivanje rijeci
	while(*s!='\0'){
		logicka_rijec=1;
		pomocni1=s;
		if(((s==ret) || ((*(s-1)<'A' || *(s-1)>'Z') && (*(s-1)<'a' || *(s-1)>'z'))) && ((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))){
			for(i=0; i<broj_slova; i++){
				
				konvertovano_velika=*(pokazivac_rijec_za_izbaciti+i)-('a'-'A');
				konvertovano_mala=*(pokazivac_rijec_za_izbaciti+i)+('a'-'A');
				if((*(pomocni1+i)!=*(pokazivac_rijec_za_izbaciti+i)) && (*(pomocni1+i)!=konvertovano_velika) && (*(pomocni1+i)!=konvertovano_mala))
					logicka_rijec=0;
			
			
				
			}
			if(*(pomocni1+i-1)!='\0')
				if(((*(pomocni1+i)>='A' && *(pomocni1+i)<='Z') || (*(pomocni1+i)>='a' && *(pomocni1+i)<='z')))
					logicka_rijec=0;
		}
		else logicka_rijec=0;
		
		if(logicka_rijec==1){
		kraj_rijeci_pronadjene=s;
		pomocni2=s;
		while((*kraj_rijeci_pronadjene>='A' && *kraj_rijeci_pronadjene<='Z') || (*kraj_rijeci_pronadjene>='a' && *kraj_rijeci_pronadjene<='z'))
            kraj_rijeci_pronadjene++;
		while(*kraj_rijeci_pronadjene!='\0'){
            *pomocni2=*kraj_rijeci_pronadjene;
            pomocni2++;
            kraj_rijeci_pronadjene++;
		}
		*pomocni2='\0';
		}
		s++;
	}
	return ret;
}
int main() {
char tekst[100];
printf(""Unesite tekst: "");
unesi(tekst,100);
printf(""String nakon funkcije: '%s'"", izbaci_najcescu(tekst));
	return 0;
}
","#include <stdio.h>
void unesi(char* niz,int vel){
	int i=0;
	char znak=getchar();
	if (znak=='\0')
	znak=getchar();
	while(i<vel-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
char* izbaci_najcescu(char* s){
	char *ret=s,*prvo_slovo[1000],*kraj_rijeci[1000],rijec[1000][1000]={{0}},*pomocni1,*pomocni2,rijec_za_izbaciti[1000],*pokazivac_rijec_za_izbaciti,konvertovano_velika,*kraj_rijeci_pronadjene;
	int neslovo=1,broj_rijeci=0,i,broj_slova=0,j,red,k,brojac_ponavljanja_rijeci[1000]={0},broj_reda_maximuma,logicka_rijec,konvertovano_mala;
	//postavljanje pokazivaca na pocetak svake rijeci i prebrojavanje rijeci
	if(*s=='\0') return ret;
	while(*s!='\0'){
		if(!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')))
        neslovo=1;
        else if (neslovo==1){
         neslovo=0;
         prvo_slovo[broj_rijeci]=s;
         broj_rijeci++;
        }
		s++;
	}
	//postavljanje pokazivaca na kraj rijeci
	for(i=0; i<broj_rijeci; i++){
		kraj_rijeci[i]=prvo_slovo[i];
		while((*kraj_rijeci[i]>='A' && *kraj_rijeci[i]<='Z') || (*kraj_rijeci[i]>='a' && *kraj_rijeci[i]<='z'))
		kraj_rijeci[i]++;
		/*prepisivanje rijeci u matricu*/
		j=0;
		while(kraj_rijeci[i]>prvo_slovo[i]){
				rijec[i][j]=*prvo_slovo[i];
			prvo_slovo[i]++;
			j++;
		}
		rijec[i][j]='\0';
	}
	//pronalazenje istih redova matrice
	for(i=0; i<broj_rijeci-1; i++){
		for(j=i+1; j<broj_rijeci; j++){
			red=1;
			k=0;
			while((rijec[i][k]!='\0')&&(rijec[j][k]!='\0')){
				if((rijec[i][k]!=rijec[j][k]) && (rijec[i][k]!=rijec[j][k]+('a'-'A')) && (rijec[i][k]!=rijec[j][k]-('a'-'A')))
					red=0;
					k++;
			}
			if(rijec[i][k]!=rijec[j][k])
				red=0;
			if(red){
			brojac_ponavljanja_rijeci[i]++;
			}
		}
	}
	//pronalazenje rijeci za izbacivanje
	broj_reda_maximuma=0;
	for(i=1; i<broj_rijeci-1; i++){
			if(brojac_ponavljanja_rijeci[i]>brojac_ponavljanja_rijeci[broj_reda_maximuma])
				broj_reda_maximuma=i;
		}
	
	for(i=0; rijec[broj_reda_maximuma][i]!='\0' ; i++){
		rijec_za_izbaciti[i]=rijec[broj_reda_maximuma][i];
	}
	rijec_za_izbaciti[i]='\0';
	/*prebojavanje duzine rijeci*/
		pomocni1=rijec_za_izbaciti;
		pomocni2=rijec_za_izbaciti;
		while(*pomocni2!='\0'){
			pomocni2++;
		}
		broj_slova=0;
		while(pomocni1<pomocni2){
			pomocni1++;
			broj_slova++;
		}
		
	pokazivac_rijec_za_izbaciti=rijec_za_izbaciti;
	s=ret;
	//izbacivanje rijeci
	while(*s!='\0'){
		logicka_rijec=1;
		pomocni1=s;
		if(((s==ret) || ((*(s-1)<'A' || *(s-1)>'Z') && (*(s-1)<'a' || *(s-1)>'z'))) && ((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))){
			for(i=0; i<broj_slova; i++){
				
				konvertovano_velika=*(pokazivac_rijec_za_izbaciti+i)-('a'-'A');
				konvertovano_mala=*(pokazivac_rijec_za_izbaciti+i)+('a'-'A');
				if((*(pomocni1+i)!=*(pokazivac_rijec_za_izbaciti+i)) && (*(pomocni1+i)!=konvertovano_velika) && (*(pomocni1+i)!=konvertovano_mala))
					logicka_rijec=0;
			
			
				
			}
			if(*(pomocni1+i-1)!='\0')
				if(((*(pomocni1+i)>='A' && *(pomocni1+i)<='Z') || (*(pomocni1+i)>='a' && *(pomocni1+i)<='z')))
					logicka_rijec=0;
		}
		else logicka_rijec=0;
		
		if(logicka_rijec==1){
		kraj_rijeci_pronadjene=s;
		pomocni2=s;
		while((*kraj_rijeci_pronadjene>='A' && *kraj_rijeci_pronadjene<='Z') || (*kraj_rijeci_pronadjene>='a' && *kraj_rijeci_pronadjene<='z'))
            kraj_rijeci_pronadjene++;
		while(*kraj_rijeci_pronadjene!='\0'){
            *pomocni2=*kraj_rijeci_pronadjene;
            pomocni2++;
            kraj_rijeci_pronadjene++;
		}
		*pomocni2='\0';
		}
		s++;
	}
	return ret;
}
int main() {
char tekst[100];
printf(""Unesite tekst: "");
unesi(tekst,100);
printf(""String nakon funkcije: '%s'"", izbaci_najcescu(tekst));
	return 0;
}
"
482,96,96,0,22,A2016/Z1/Z4/student4639,A2016/Z1/Z4/student4416,"#include <stdio.h>

int main() {
	int n,i,j;
	for (;;) {
	printf(""Unesite broj n: "");		
	scanf(""%d"",&n);
	if (n<=0 || n>50) printf (""Pogresan unos\n"");
	else {
		 if (n==1) { printf (""***""); return 0;
		 }
		 else
		 {
			for (i=1;i<=n;i++)
			{
				for (j=1;j<=4*n-3;j++) {
					if (i==j || i+j==2*n || j-i==2*n-2 || j+i==4*n-2)
					printf (""*"");
					else printf ("" "");
			}
			printf (""\n"");
	}
	}
	return 0;
	}
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	for (;;) {
	printf(""Unesite broj n: "");		
	scanf(""%d"",&n);
	if (n<=0 || n>50) printf (""Pogresan unos\n"");
	else {
		 if (n==1) { printf (""***""); return 0;
		 }
		 else
		 {
			for (i=1;i<=n;i++)
			{
				for (j=1;j<=4*n-3;j++) {
					if (i==j || i+j==2*n || j-i==2*n-2 || j+i==4*n-2)
					printf (""*"");
					else printf ("" "");
			}
			printf (""\n"");
	}
	}
	return 0;
	}
	}
	return 0;
}
"
495,97,97,0,41,A2016/Z3/Z1/student4456,A2016/Z3/Z1/student5789,"#include <stdio.h>

int daj_prost() {
	int i,k,prost=1;
	static int b=2;
		do{
			for(i=2; i<b; i++){
				if(b%i==0){
					prost=0;
					break;
					
				}
			}
				if(i==b)
					prost=1;
				if(prost==0)
					b++;
				}
		while(prost==0);
		k=b++;
		return k;
}


int main() {
	int A,B,k=2,suma=0;
	do{
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"", &A,&B);
		if(A<1)
			printf(""A nije prirodan broj.\n"");
		if(A>=B)
			printf(""A nije manje od B.\n"");
	}
	while(A<1 || A>=B);
	
	while(k<B){
		if(k>A && k<B)
			suma=suma+k;
			k=daj_prost();
		if(k>=B) break;
		}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."", A,B,suma);
	return 0;
}
","#include <stdio.h>

int daj_prost() {
	int i,k,prost=1;
	static int b=2;
		do{
			for(i=2; i<b; i++){
				if(b%i==0){
					prost=0;
					break;
					
				}
			}
				if(i==b)
					prost=1;
				if(prost==0)
					b++;
				}
		while(prost==0);
		k=b++;
		return k;
}


int main() {
	int A,B,k=2,suma=0;
	do{
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"", &A,&B);
		if(A<1)
			printf(""A nije prirodan broj.\n"");
		if(A>=B)
			printf(""A nije manje od B.\n"");
	}
	while(A<1 || A>=B);
	
	while(k<B){
		if(k>A && k<B)
			suma=suma+k;
			k=daj_prost();
		if(k>=B) break;
		}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."", A,B,suma);
	return 0;
}
"
510,11,11,0,14,A2016/Z4/Z3/student5170,A2016/Z4/Z3/student8317,"#include <stdio.h>

int provjera (char* text, char* zamjena)
{
	int je_li_isto=1;
	char* reset=text;
	char* prvoslovo=zamjena;
	while (*zamjena!='\0' && *text!='\0') {
		if(*text!=*zamjena)
			je_li_isto=0;
		zamjena++;
		text++;
	}
	if(*zamjena!='\0' || (*text!='\0' && *text!=' ')) je_li_isto=0;
	zamjena=prvoslovo;
	text=reset;
	return je_li_isto;
}

void promjena(char* text, char* zamjena, char* nova)
{
	int ostatak=0, cont=1,i;
	char* rst=text;
	char* reset_rij=zamjena;
	char* reset=nova;
	char* kraj=text;
	while(*text!='\0') {
		cont=0;
		while(*text!='\0' && *text!=*zamjena) text++;
		if(provjera(text, zamjena) && (text==rst || *(text-1)==' ') && *text!='\0') {
			while(*nova!='\0') {
				if(*text=='\0' || *text==' ') {
					kraj=text;
					while(*text!='\0') text++;
					text++;
					while(text>kraj) {
						*text=*(text-1);
						text=text-1;
					}
				}
				*text=*nova;
				nova++;
				text++;
			}
			cont=1;
		}
		if(cont==1 && *text!='\0' && *text!=' ') {
			kraj=text;
			while(*text!='\0' && *text!=' ') {
				text++;
				ostatak++;
			}
			text=kraj;
			for(i=0; i<ostatak; i++) {
				text=kraj;
				while(*text!='\0') {
					*text=*(text+1);
					text++;
				}
			}
			text=kraj;
		}
		if(*text!='\0' && *text!=' ') text++;
		nova=reset;
		zamjena=reset_rij;
	}
	nova=reset;
	zamjena=reset_rij;
	text=rst;
}

char* zamjena_rijeci(char*tekst, char** rijeci, char** zamjene, int broj_rijeci)
{
	char *reset=tekst;
	int i,br;
	br=broj_rijeci;
	for(i=0; i<br; i++) {
		tekst=reset;
		while(*tekst!='\0') {
			while(*tekst!='\0' && *tekst==' ')
				tekst++;
			if(provjera(tekst,rijeci[i])) {
				promjena(tekst, rijeci[i], zamjene[i]);
			}
			while(*tekst!='\0' && *tekst!=' ') tekst++;
		}
	}
	return reset;
}

int main()
{
	char* promjene[2]= {"""",""""};
	char* rij[2]= {"""",""""};
	char t[100]="""";
	printf(""%s"", zamjena_rijeci(t, rij, promjene, 2));
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

/*duzina stringa*/
int duzina_stringa (char *s) {
	
	int duzina=0;
	while (*s != '\0'){
		
		duzina++;
		s++;
	}
	
	return duzina;
}

/*funkcija koja pronalazi određenu riječ u stringu i vraća pokazivač na početak te riječi*/
char* trazi_rijec (char* s, char* rijec){
	
	while (*s != '\0'){
		while (*s == ' ') {
			s++;
		}
		char* p=s;
		char* a=s;
		char* q=rijec;
		
		while (*p++ == *q++) {
			if (*q == '\0' && (*p == ' ' || *p == '\0')) {
				return a;
			}
		}
		while (*s != '\0' && *s != ' '){
			s++;
		}
	}
	
	return NULL;
}

/*funkcija koja vraća broj riječi*/
int broj_rijeci1 (char* s)
{

	int neslovo=1, broj_rijeci1=0;

	while(*s != '\0') {

		if (!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))) {
			neslovo=1;
		} 
		else if (neslovo == 1) {

			neslovo=0;
			broj_rijeci1++;
		}
		s++;
	}

	return broj_rijeci1;
}

/*funkcija zamjena_rijeci*/
char* zamjena_rijeci (char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	
	int duzina;
	int i,j;
	
	if (duzina_stringa(tekst)==0 || broj_rijeci==0){
		return tekst;
	}
	
	
	for (j=0; j<broj_rijeci1(tekst); j++){
		for (i=0; i<broj_rijeci; i++){
			
			char* a;
			char* pok;
			a=trazi_rijec(tekst, rijeci[i]);
			
			if (a==NULL){
				continue;
			}
			
			duzina=duzina_stringa(zamjene[i])-duzina_stringa(rijeci[i]);
			
			/*slučaj kada je riječ koja se mijenja kraća od riječi sa kojom se mijenja*/
			if (duzina>=0) {
				
				char* kraj = a;
				while (*kraj != '\0') {
					kraj++;
				}
				
				/*ubacuje slobodna mjesta*/
				while (kraj>a) {
					*(kraj+duzina) = *kraj;
					kraj--;
				}
				/*prepisuje zamjenu preko riječi*/
				pok=zamjene[i];
				while (*pok != '\0') {
					*a=*pok;
					pok++;
					if (*pok != '\0') {
						a++;
					}
				}
			}
			
			/*slučaj kada je riječ koja se mijenja duža od riječi sa kojom se mijenja*/
			if(duzina<0){
				
				duzina=abs(duzina);
				
				/*izbacuje višak karaktera u riječi koja se mijenja*/
				char* pocetak=a;
				char* kraj=a+duzina;
				while (*pocetak++=*kraj++);
				
				/*prepisuje zamjenu preko riječi*/
				char* pocetak1=a;
				char* zamjena=zamjene[i];
				while (*zamjena != '\0'){
					*pocetak1=*zamjena;
					pocetak1++;
					zamjena++;
				}
			}
			
			a++;
		}
	}
	return tekst;
}
	
int main (){

char* rijeci[2] = { ""auto"", ""stop"" };
char* zamjene[2] = { ""vozilo"", ""start"" };
char tekst[100] = ""auto-stop auto. stop auto kj stop"";
printf (""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));

	return 0;
}
"
514,90,90,0,118,A2016/Z4/Z1/student4473,A2016/Z4/Z1/student3315,"#include <stdio.h>

void unesi(char niz[], int velicina){
	char znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\0'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}

int uporedi(char *rijec1, char *rijec2,int vel1,int vel2){
	int i;
	char*p1=rijec1, *p2=rijec2;
	if(vel1!=vel2)
		return 0;
	else{
		for(i=0;i<vel1-1;i++){
			if(*(p2+i)>='A'&&*(p2+i)<='Z'&&*(p1+i)>='A'&&*(p1+i)<='Z'){
				if(*(p1+i)+32!=*(p2+i)+32)
					return 0;
				continue;
			}
			if(*(p1+i)>='A'&&*(p1+i)<='Z'){
				if(*(p1+i)+32!=*(p2+i))
					return 0;
				continue;
			}
			
			
			if(*(p2+i)>='A'&&*(p2+i)<='Z'){
				if(*(p1+i)!=*(p2+i)+32)
					return 0;
				continue;
			}
			
			
			
			if(*(p1+i)!=*(p2+i))
					return 0;
			
			
			
			
		}
	}
	return 1;
}




char* izbaci_najcescu(char *s){
	char *p, *pok[500];
	int i=0, j=0,brojac_slova[500]={0}, brojac_rijeci=1, brojac_najcesce[500]={0};
	p=s;
	pok[j]=p;
	if(*p=='\0')
		return NULL;
	while(*p!='\0'){
		if((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127)){
			brojac_rijeci++;
			do{
				p++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			j++;
			i++;
			pok[j]=p;
			continue;
		}
		brojac_slova[i]++;
		p++;
	}
	// daje nam broj slova za svaku rijec i stavlja pokazivac na svaku rijec
	
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(uporedi(pok[i], pok[j],brojac_slova[i], brojac_slova[j]))
				brojac_najcesce[i]++;
		}
	}
	//do sad je u niz brojac_najcece[i] ubacilo vrijednosti koliko puta se ponavlja rijec na mijestu u stringu s
	
	int max;
	max=0;
	for(i=0;i<brojac_rijeci;i++){
		if(brojac_najcesce[i]>brojac_najcesce[max]) 	
			max=i;
	}
	// pronasli smo za sad clan najcesce rijeci

	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(uporedi(pok[max], pok[i], brojac_slova[max], brojac_slova[i])){
			p=pok[i];
			if(i==brojac_rijeci-1){
				*p='\0';
				break;
			}
			while(*p!='\0'){
				*p=*(p+brojac_slova[i]);	
				if(*p=='\0') break;
				p++;
			}
			do{
				pok[i]++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pok[j]-=brojac_slova[i];
				
			}
			
		}
		
	}
	//izbacene su sve rijeci koje se ponavljaju osim prve
	p=pok[max];
	while(*p!='\0'){
		*p=*(p+brojac_slova[max]);	
		if(*p=='\0') break;
		p++;
	}
	
	return s;
}	
	
int main() {
	char tekst[]=""1PsT1 psT2 3Pst pstpst pst"";
	printf(""%s"",izbaci_najcescu(tekst));
	return 0;
}
","#include <stdio.h>
void unesi(char niz[], int velicina){
	char znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\0'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
int poredjenje(char *prva_rijec, char *druga_rijec,int vel1,int vel2){
	int k;
	char*p1=prva_rijec, *p2=druga_rijec;
	if(vel1!=vel2)
		return 0;
		
	
		for(k=0;k<vel1-1;k++){
			if(*(p2+k)>='A'&&*(p2+k)<='Z'){
				if(*(p1+k)!=*(p2+k)+32)
					return 0;
				continue;
			}
		
		
		
		
		
			if(*(p2+k)>='A'&&*(p2+k)<='Z'&&*(p1+k)>='A'&&*(p1+k)<='Z'){
				if(*(p1+k)+32!=*(p2+k)+32)
					return 0;
				continue;
			}
			if(*(p1+k)>='A'&&*(p1+k)<='Z'){
				if(*(p1+k)+32!=*(p2+k))
					return 0;
				continue;
			}
			
			
			
			
			
			
			if(*(p1+k)!=*(p2+k))
					return 0;
			
			
			
			
		
	}
	
	return 1;
}
char* izbaci_najcescu(char *s){
	char *p, *pok[500];
	int i=0, j=0,brojac[500]={0}, brojac_rijeci=1, najcesca[500]={0};
	p=s;
	pok[j]=p;
	if(*p=='\0')
		return NULL;
	while(*p!='\0'){
		if((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127)){
			brojac_rijeci++;
			do{
				p++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			j++;
			i++;
			pok[j]=p;
			continue;
		}
		brojac[i]++;
		p++;
	}
	
	
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(poredjenje(pok[i], pok[j],brojac[i], brojac[j]))
				najcesca[i]++;
		}
	}
	//u nizu imamo koliko se ponavlja rijec u nasem strigu//
	
	int max;
	max=0;
   for(i=0;i<brojac_rijeci;i++){
		if(najcesca[i]>najcesca[max]) 	
			max=i;
	}
	//clan najcesce rijeci//
	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(poredjenje(pok[max], pok[i], brojac[max], brojac[i])){
			p=pok[i];
			if(i==brojac_rijeci-1){
				*p='\0';
				break;
			}
			while(*p!='\0'){
				*p=*(p+brojac[i]);	
				if(*p=='\0') break;
				p++;
			}
			do{
				pok[i]++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pok[j]-=brojac[i];
				
			}
			
		}
		
	}
	//izbacene su ponovljene rijeci osim prve//
	p=pok[max];
	while(*p!='\0'){
		*p=*(p+brojac[max]);	
		if(*p=='\0') break;
		p++;
	}
	
	return s;
}	


int main() {
    char tekst[10000];
    printf(""Unesite tekst: "");
    unesi(tekst,10000);
    printf(""%s"", izbaci_najcescu);
    return 0;
}

	
"
518,99,99,0,123,A2016/Z4/Z1/student7457,A2016/Z4/Z1/student9175,"#include <stdio.h>

//funkcija koja izbacuje rijec iz stringa 

void izbacivanje(char* str1ng, int vel) {
	while(*(str1ng+vel)) {
		*str1ng=*(str1ng+vel);
		str1ng++;
	}
	*str1ng=*(str1ng+vel);
}

char* izbaci_najcescu(char* string) {
	
	char *max = string, *p = string, *pocetak, *kraj, *temp, *sljedeciPocetak, *sljedeciKraj, *temp1, *p2, *p3;
	int vel1, BrojRijeci=0, vel2, jednaka, vel3, maxBrojRijeci=0, maxVelicina=0, znak;
	char znak1,znak2;
	
	
	if (*p == '\0') return string;
	while(*p != '\0') {
		while((*p < 'A' || (*p > 'Z' && *p < 'a') || *p > 'z') && *(p+1) != '\0') p++;
			if(*p != '\0') {
				//Odredivanje prvog i posljednjeg slova trenutne rijeci
				pocetak = p;
				kraj = p;
				vel1 = 1;
				while(((*(kraj+1) >= 'A' && *(kraj+1) <= 'Z') || (*(kraj+1) >= 'a' && *(kraj+1) <= 'z')) && *(kraj+1) != '\0') {
					vel1++;
					kraj++;
				}
				BrojRijeci=1;
				temp=kraj+1;
				
				while (*temp != '\0') {
					//Odredivanje prvog i posljednjeg slova sljedece rijeci
					sljedeciPocetak=temp;
					
					while ((*sljedeciPocetak < 'A' || (*sljedeciPocetak > 'Z' && *sljedeciPocetak < 'a') || *sljedeciPocetak > 'z') && *(sljedeciPocetak+1) != '\0') sljedeciPocetak++;
					sljedeciKraj = sljedeciPocetak;
					vel2=1;
					
					while(((*(sljedeciKraj+1) >= 'A' && *(sljedeciKraj+1) <= 'Z') || (*(sljedeciKraj+1) >= 'a' && *(sljedeciKraj+1) <= 'z')) && *(sljedeciKraj+1) != '\0') {
						vel2++;
						sljedeciKraj++;					
					}					
					jednaka=1; vel3=0;
					
					temp1=pocetak;
					
					if (vel1 != vel2 ) jednaka=0;
					else 
					while (vel3 < vel2) {
						
						if(*temp1 >= 'A' && *temp1 <= 'Z') znak1=(*temp1) + ('a' - 'A');
						else znak1=*temp1;
						
						if(*sljedeciPocetak >= 'A' && *sljedeciPocetak <= 'Z') znak2=(*sljedeciPocetak) + ('a' - 'A');
						else znak2=*sljedeciPocetak;
						
						if(znak1 != znak2) jednaka=0;
						
						temp1++; sljedeciPocetak++; vel3++;
						
					}
					
					if(jednaka) BrojRijeci++;
					temp=sljedeciKraj+1;
					
				}
				
				if(BrojRijeci>maxBrojRijeci ) {
				maxBrojRijeci=BrojRijeci;
				max=kraj;
				maxVelicina=vel1;
				}
			}
			p=kraj+1;
	}
	//izbacivanje najcesce rijeci
	p=temp-1;
	while (p>=string) {
		znak=0;
		if((*(p+1) < 'A' || (*(p+1)>'Z' && *(p+1)<'a') || *(p+1)>'z') || *(p+1)=='\0') znak=1;
		
		if(*p>='A' && *p<='Z') znak1=(*p)+('a'-'A'); 
		else znak1=*p;
		
		if(*max >= 'A' && *max <='Z') znak2=(*max)+('a'-'A'); else znak2=*max;
		
		
		
		if(znak1==znak2 && znak){
			p3=p;
			p2=max;
			vel2=0;
			jednaka=1;
			
			while(p3>=string && (( *p3>='A' && *p3  <= 'Z') || (*p3>= 'a' && *p3 <= 'z'))) {
				if(p2>=string) {
					if(*p2>='A' && *p2<= 'Z') znak1=(*p2)+('a'-'A'); 
					else znak1=*p2;
					if(*p2>='A' && *p2<= 'Z') znak2=(*p2)+('a'-'A'); 
					else znak2=*p2;
					if(znak1!=znak2) jednaka=0;
					
				}
				vel2++;
				p3--;
				p2--;
			}
			p3++;
			if(maxVelicina!=vel2) jednaka=0;
			if(jednaka==1) {
				izbacivanje(p3,vel2);
			}
		}
		p--;
	}
	return string;
}

int main() {
	char str1ng[400]="" Koristio sam auto-stop da dodjem do znaka stop ali prije stopa sam otvorio dekstop kompjutera stop"";
	printf(""%s"", izbaci_najcescu(str1ng));
	return 0;
	
}","#include <stdio.h>

//funkcija koja izbacuje rijec iz stringa 

void izbacivanje(char* str1ng, int vel) {
	while(*(str1ng+vel)) {
		*str1ng=*(str1ng+vel);
		str1ng++;
	}
	*str1ng=*(str1ng+vel);
}

char* izbaci_najcescu(char* str) {
	
	char *max = str, *p = str, *pocetak, *kraj, *temp, *sljpocetak, *sljkraj, *tempoc, *p2, *p3;
	int vel1, broj_rijeci=0, vel2, jednaka, vel3, max_broj_rijeci=0, maxvel=0, znak;
	char c1,c2;
	
	
	if (*p == '\0') return str;
	while(*p != '\0') {
		while((*p < 'A' || (*p > 'Z' && *p < 'a') || *p > 'z') && *(p+1) != '\0') p++;
			if(*p != '\0') {
				//Odredivanje prvog i posljednjeg slova trenutne rijeci
				pocetak = p;
				kraj = p;
				vel1 = 1;
				while(((*(kraj+1) >= 'A' && *(kraj+1) <= 'Z') || (*(kraj+1) >= 'a' && *(kraj+1) <= 'z')) && *(kraj+1) != '\0') {
					vel1++;
					kraj++;
				}
				broj_rijeci=1;
				temp=kraj+1;
				
				while (*temp != '\0') {
					//Odredivanje prvog i posljednjeg slova sljedece rijeci
					sljpocetak=temp;
					
					while ((*sljpocetak < 'A' || (*sljpocetak > 'Z' && *sljpocetak < 'a') || *sljpocetak > 'z') && *(sljpocetak+1) != '\0') sljpocetak++;
					sljkraj = sljpocetak;
					vel2=1;
					
					while(((*(sljkraj+1) >= 'A' && *(sljkraj+1) <= 'Z') || (*(sljkraj+1) >= 'a' && *(sljkraj+1) <= 'z')) && *(sljkraj+1) != '\0') {
						vel2++;
						sljkraj++;
					
					}
					
					jednaka=1; vel3=0;
					
					tempoc=pocetak;
					
					if (vel1 != vel2 ) jednaka=0;
					else 
					while (vel3 < vel2) {
						
						if(*tempoc >= 'A' && *tempoc <= 'Z') c1=(*tempoc) + ('a' - 'A');
						else c1=*tempoc;
						
						if(*sljpocetak >= 'A' && *sljpocetak <= 'Z') c2=(*sljpocetak) + ('a' - 'A');
						else c2=*sljpocetak;
						
						if(c1 != c2) jednaka=0;
						
						tempoc++; sljpocetak++; vel3++;
						
					}
					
					if(jednaka) broj_rijeci++;
					temp=sljkraj+1;
					
				}
				
				if(broj_rijeci>max_broj_rijeci ) {
				max_broj_rijeci=broj_rijeci;
				max=kraj;
				maxvel=vel1;
				}
			}
			p=kraj+1;
	}
	//izbacivanje najcesce rijeci
	p=temp-1;
	while (p>=str) {
		znak=0;
		if((*(p+1) < 'A' || (*(p+1)>'Z' && *(p+1)<'a') || *(p+1)>'z') || *(p+1)=='\0') znak=1;
		
		if(*p>='A' && *p<='Z') c1=(*p)+('a'-'A'); 
		else c1=*p;
		
		if(*max >= 'A' && *max <='Z') c2=(*max)+('a'-'A'); else c2=*max;
		
		
		
		if(c1==c2 && znak){
			p3=p;
			p2=max;
			vel2=0;
			jednaka=1;
			
			while(p3>=str && (( *p3>='A' && *p3  <= 'Z') || (*p3>= 'a' && *p3 <= 'z'))) {
				if(p2>=str) {
					if(*p2>='A' && *p2<= 'Z') c1=(*p2)+('a'-'A'); 
					else c1=*p2;
					if(*p2>='A' && *p2<= 'Z') c2=(*p2)+('a'-'A'); 
					else c2=*p2;
					if(c1!=c2) jednaka=0;
					
				}
				vel2++;
				p3--;
				p2--;
			}
			p3++;
			if(maxvel!=vel2) jednaka=0;
			if(jednaka==1) {
				izbacivanje(p3,vel2);
			}
		}
		p--;
	}
	return str;
}

int main() {
	char str1ng[400]="" zghklkvedza zvezda zdvdwa"";
	printf(""%s"", izbaci_najcescu(str1ng));
	return 0;
	
}
"
536,99,99,0,77,A2016/Z3/Z3/student1375,A2016/Z3/Z3/student2142,"#include <stdio.h>

int main() {
	 int M, N, mat[200][200], i, j, k, e, f, jeste, m, n;

	do {
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"", &M, &N);
		if(M<=0 || M>200 || N<=0 || N>200) printf(""Brojevi nisu u trazenom opsegu.\n"");
	}while(M<=0 || M>200 || N<=0 || N>200);
	printf(""Unesite elemente matrice: "");

	for(i=0; i<M; i++)
	{
		for(j=0; j<N; j++)
		{
		scanf(""%d"", &mat[i][j]);	
		}

	}
	 m = M;
    for (i = 0; i < m; i++){
        for (j = i + 1; j < m; j++){
            jeste = 1;
            for (k = 0; k < N; k++){
                if (mat[i][k] != mat[j][k]){
                    jeste = 0;
                    break;
                }
            }
            if (jeste){
                for (e = j; e < m - 1; e++){
                    for (f = 0; f < N; f++){
                        mat[e][f] = mat[e+1][f];
                    }
                }
                j--;
                m--;
            }
        }
    }
    n = N;
 
    for (j = 0; j < n; j++){
        for (i = j + 1; i < n; i++){
            jeste = 1;
            for (k = 0; k < m; k++){

                if (mat[k][j] != mat[k][i]){
                    jeste = 0;
                    break;
                }
            }
            if (jeste){
                for (e = i; e < n - 1; e++){
                    for (f = 0; f < m; f++){
                        mat[f][e] = mat[f][e+1];
                         }
                }
                i--;
                n--;
            }
        }
    }
 

	
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for(i=0; i<m; i++)
	{
		for(j=0; j<n; j++)
		{
		printf(""%5d"", mat[i][j]);	
		}
		printf(""\n"");
	}

	
	return 0;
}
","#include <stdio.h>

int main() {
	int M, N, matrica[200][200], i, j, k, e, f, jeste, m, n;
	do {
		printf (""Unesite brojeve M i N: "");
		scanf (""%d %d"", &M, &N);
		if (M<1 || M>200 || N<1 || N>200) {
			printf (""Brojevi nisu u trazenom opsegu.\n"");
		}
	}while (M<1 || M>200 || N<1 || N>200);
	printf (""Unesite elemente matrice: "");
	for (i=0; i<M; i++){
		for (j=0; j<N; j++){
			scanf(""%d"", &matrica[i][j]);
		}
	}
	m = M;
	for (i = 0; i < m; i++){
		for (j = i + 1; j < m; j++){
			jeste = 1;
			for (k = 0; k < N; k++){
				if (matrica[i][k] != matrica[j][k]){
                    jeste = 0;
                    break;
				}
			}
			if (jeste){
				for (e = j; e < m - 1; e++){
					for (f = 0; f < N; f++){
						matrica[e][f] = matrica[e+1][f];
					}
				}
				j--;
				m--;
			}
		}
	}
	n = N;

	for (j = 0; j < n; j++){
		for (i = j + 1; i < n; i++){
			jeste = 1;
			for (k = 0; k < m; k++){
				if (matrica[k][j] != matrica[k][i]){
					jeste = 0;
					break;
				}
			}
			if (jeste){
                for (e = i; e < n - 1; e++){
                    for (f = 0; f < m; f++){
                        matrica[f][e] = matrica[f][e+1];
                    }
                }
                i--;
                n--;
            }
		}
	}

	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i = 0; i < m; i++){
		for (j = 0; j < n; j++){
			printf(""%5d"", matrica[i][j]);
		}
		printf (""\n"");
	}


	return 0;
}"
540,78,78,0,166,A2016/Z1/Z1/student1278,A2016/Z1/Z1/student7496,"#include <stdio.h>
#include <stdlib.h>
int main() {
    float t1,t2,t3,t4,t5,b1,b2,b3,b4,b5,m1,m2,m3,m4,m5;
	int a,b,c;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &t1);
	if (t1<0 || t1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
    printf(""II parcijalni ispit: "");
	scanf(""%f"", &t2);
	if (t2<0 || t2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &t3);
	if (t3<0 || t3>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &t4);
	if (t4<0 || t4>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &t5);
	if (t5<0 || t5>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &b1);
	if (b1<0 || b1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &b2);
	if (b2<0 || b2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &b3);
	if (b3<0 || b3>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &b4);
	if (b4<0 || b4>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &b5);
	if (b5<0 || b5>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &m1);
	if (m1<0 || m1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &m2);
	if (m2<0 || m2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &m3);
	if (m3<0 || m3>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &m4);
	if (m4<0 || m4>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &m5);
	if (m5<0 || m5>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	system(""clear"");
a=t1 + t2 + t3 + t4 + t5;
b=b1 + b2 + b3 + b4 + b5;
c=m1 + m2 + m3 + m4 + m5;
if(a<55) {
	a=5;
}
if(a>=55 && a<65) {
	a=6;
}
if(a>=65 && a<75) {
	a=7;
}
if(a>=75 && a<85) {
	a=8;
}
if(a>=85 && a<92) {
	a=9;
}
if(a>=92 && a<=100) {
	a=10;
}
if(b<55) {
	b=5;
}
if(b>=55 && b<65) {
	b=6;
}
if(b>=65 && b<75) {
	b=7;
}
if(b>=75 && b<85) {
	b=8;
}
if(b>=85 && b<92) {
	b=9;
}
if(b>=92 && b<=100) {
	b=10;
}
if(c<55) {
	c=5;
}
if(c>=55 && c<65) {
	c=6;
}
if(c>=65 && c<75) {
	c=7;
}
if(c>=75 && c<85) {
	c=8;
}
if(c>=85 && c<92) {
	c=9;
}
if(c>=92 && c<100) {
	c=10;
}
if(a>5 && b>5 && c>5){
		printf(""Sva tri studenta su polozila. \n"");
}
if(a<=5 && b<=5 && c<=5){
		printf(""Nijedan student nije polozio.\n"");
		return 0;
}
	if(a>5 && b<=5 && c<=5){
		printf(""Jedan student je polozio.\n"");
		return 0;
}
	if(a<=5 && b>5 && c<=5){
		printf(""Jedan student je polozio.\n"");
		return 0;
}
	if(a<=5 && b<=5 && c>5){
		printf(""Jedan student je polozio.\n"");
		return 0;
}
if(a>5 && b>5 && c<= 5)
	{
	printf(""Dva studenta su polozila.\n"");
	return 0;
}
if(a<=5 && b>5 && c>5)
	{
	printf(""Dva studenta su polozila.\n"");
	return 0;
}
if(a>5 && b<=5 && c>5)
	{
	printf(""Dva studenta su polozila.\n"");
	return 0;
}
if(a == b && b == c ){
		printf(""Sva tri studenta imaju istu ocjenu.\n"");
}
if(a != b && b != c ){
		printf(""Svaki student ima razlicitu ocjenu.\n"");
}
if(a == b && b != c )
	{
		printf(""Dva od tri studenta imaju istu ocjenu.\n"");
}
if(a != b && b == c )
	{
		printf(""Dva od tri studenta imaju istu ocjenu.\n"");
}
if(a == c && b != c )
	{
		printf(""Dva od tri studenta imaju istu ocjenu.\n"");
}
return 0;
}

","#include <stdio.h>
#include <stdlib.h>
int main () {
    float a,b,c,x1,x2,x3,x4,x5,y1,y2,y3,y4,y5,z1,z2,z3,z4,z5;
    int x,y,z;
    printf(""Unesite bodove za Tarika:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &x1);
    if (x1<0 || x1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    } 
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &x2);
    if (x2<0 || x2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"", &x3);
    if(x3<0 || x3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%f"", &x4);
    if(x4<0 || x4>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &x5);
    if(x5<0 || x5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/*za prvog studenta*/
    
    printf(""Unesite bodove za Bojana:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &y1);
    if(y1<0 || y1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &y2);
    if(y2<0 || y2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"", &y3);
    if(y3<0 || y3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%f"", &y4);
    if(y4<0 || y4>10) {
        printf (""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &y5);
    if(y5<0 || y5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/* za drugog studenta*/
    
    printf(""Unesite bodove za Mirzu:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &z1);
    if(z1<0 || z1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &z2);
    if(z2<0 || z2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"",&z3);
    if(z3<0 || z3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }  
    printf(""Zadace: "");
    scanf(""%f"", &z4);
    if(z4<0 || z4>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &z5);
    if(z5<0 || z5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/* za treceg studenta*/
    
    system(""clear"");
    a=x1+x2+x3+x4+x5; 
    b=y1+y2+y3+y4+y5;
    c=z1+z2+z3+z4+z5;
    
    x=a;
    y=b;
    z=c;
    
    if(x<55) {
        x=5;
    }
    if(x>=55 && x<65) {
        x=6;
    }
    if(x>=65 && x<75) {
        x=7;
    }
    if (x>=75 && x<85) {
        x=8;
    }
    if (x>=85 && x<92) {
        x=9;
    }
    if (x>=92 && x<100) {
        x=10;
    }
    
    if(y<55) {
        y=5;
    }
    if(y>=55 && y<65) {
        y=6;
    }
    if(y>=65 && y<75) {
        y=7;
    }
    if (y>=75 && y<85) {
        y=8;
    }
    if (y>=85 && y<92) {
        y=9;
    }
    if (y>=92 && y<100) {
        y=10;
    }
    
    if(z<55) {
        z=5;
    }
    if(z>=55 && z<65) {
        z=6;
    }
    if(z>=65 && z<75) {
        z=7;
    }
    if (z>=75 && z<85) {
        z=8;
    }
    if (z>=85 && z<92) {
        z=9;
    }
    if (z>=92 && z<100) {
        z=10;
    }
    
    if(x>5 && y>5 && z>5) {
        printf(""Sva tri studenta su polozila.\n"");
        printf(""Svaki student ima razlicitu ocjenu.\n"");
        return 0;
    }
    
    if(x<=5 && y<=5 && z<=5) {
        printf(""Nijedan student nije polozio.\n"");
        return 0;
    }
    
    if((x>5 && y<=5 && z<=5) || (x<=5 && y>5 && z<=5) || (x<=5 && y<=5 && z>5)) {
        printf(""Jedan student je polozio.\n"");
        return 0;
    } 
    
    if((x>5 && y>5 && z<=5) || (x<=5 && y>5 && z>5) || (x>5 && y<=5 && z>5)) {
        printf(""Dva studenta su polozila.\n"");
        return 0;
    }
        
    if(x==y && y==z) {
        printf(""Sva tri studenta imaju istu ocjenu.\n"");
        return 0;
    }   
    
    if(x!=y && y!=z) {
        printf(""Sva tri studenta imaju razlicitu ocjenu.\n"");
        return 0;
    }
    
    if((x==y && y!=z) || (x!=y && y==z) || (x==y && y!=z)) {
        printf(""Dva od tri studenta imaju istu ocjenu.\n"");
        return 0;
    }
    
    return 0;
}     
       

"
542,61,61,0,23,A2016/Z2/Z2/student2513,A2016/Z2/Z2/student9388,"#include <stdio.h>
#include <math.h>
#define PI 3.1415926
int main() {
    int a, deg, min, sec, j, i;
    double niz[500], tot=0;
    printf(""Unesite broj uglova: "");
    scanf(""%d"", &a);
    
    for(j=0;j<a;j++){
      scanf(""%lf"",&niz[j]);  
    }
    printf(""Uglovi su:\n"");
    for(j=0;j<a;j++){
        tot=fabs(niz[j])*(180/PI)*3600;
        tot=(int)(tot+0.5);
        deg=tot/3600;
        min=(tot-deg*3600)/60;
        sec=(tot-deg*3600-min*60);
    
        if(sec>=60){
            min++;
            sec=sec-60;}
        
        if(min>=60){
            deg++;
            min=min-60;
        }
        if(sec<=30){
            if(niz[j]<0) 
            printf(""-%d stepeni %d minuta %d sekundi\n"",deg, min, sec);
            else {
                printf(""%d stepeni %d minuta %d sekundi\n"",deg, min, sec);
            }
        } if(sec>30) {
            for(i=j; i<a-1; i++) {
                niz[i]=niz[i+1];
            } a--;
              j--;    
        }
}


	return 0;
}
","#include <stdio.h>
#define MAX 500
#define PI 3.14

int main() {
	
	
	float a[MAX];
	float ukupno=0;
	int i,n, j,st=0, min=0, sec=0;
	
	printf(""Unesite broj uglova: \n"");
	scanf(""%d"", &n);
	for(i=0; i<n; i++)
	{
		scanf(""%f"", &a[i]);
		ukupno=(a[i]*180/PI)*3600;
		ukupno=(int)(ukupno+0.5);
		st=ukupno/3600;
		min=(ukupno-st*3600)/60;
		sec=ukupno-st*3600-min*60;
		
		if(sec>=60){
			min++;
			sec-=60;
		}
		if(min>=60){
			st++;
			min-=60;
			
		}
		if(sec>30){
			for(j=i; j<n-1; j++)
			{
				a[j]=a[j+1];
			}
			n--;
		    i--;
		}
		printf(""Uglovi su:\n  %d  stepeni  %d minuta %d  sekundi \n"", st,min,sec );
		
	}
	
	
	
	return 0;
}
"
545,99,99,0,68,A2016/Z1/Z3/student8864,A2016/Z1/Z3/student2547,"#include <stdio.h>

int main() {
	int crna=0, bijela=0, siva=0, crvena=0, plava=0, i, procenat=0;
	char auta[2000];
	float procc,procb,procs,procv,procp;
	printf(""Unesite vozila: "");
	scanf(""%s"", &auta);
	for(i=0; auta[i]!='\0'; ++i)
	{
		if(auta[i]=='c' || auta[i]=='C')
		{
			crna++;	
		}
		if(auta[i]=='b' || auta[i]=='B')
		{
			bijela++;	
		}
		if(auta[i]=='s' || auta[i]=='S')
		{
			siva++;	
		}
		if(auta[i]=='v' || auta[i]=='V')
		{
			crvena++;	
		}
		if(auta[i]=='p' || auta[i]=='P')
		{
			plava++;	
		}
		if(auta[i]=='a' || auta[i]=='d' || auta[i]=='e' || auta[i]=='f' || auta[i]=='g' || auta[i]=='h' || auta[i]=='i' || auta[i]=='j' || auta[i]=='l' || auta[i]=='m' || auta[i]=='n' || auta[i]=='o' || auta[i]=='r' || auta[i]=='t' || auta[i]=='u' || auta[i]=='z' || auta[i]=='y' || auta[i]=='x' || auta[i]=='w' || auta[i]==' ' || auta[i]==',' || auta[i]=='1' || auta[i]=='2'  || auta[i]=='0' || auta[i]==' 3' || auta[i]=='4' || auta[i]=='5' || auta[i]=='6' || auta[i]=='7' || auta[i]=='8' || auta[i]=='9' || auta[i]=='/' || auta[i]=='*' || auta[i]=='-' || auta[i]=='.' || auta[i]=='-' || auta[i]=='<' || auta[i]=='>' || auta[i]=='A' || auta[i]=='D' || auta[i]=='E' || auta[i]=='F' || auta[i]=='G' || auta[i]=='H' || auta[i]=='I' || auta[i]=='J' || auta[i]=='L' || auta[i]=='M' || auta[i]=='N' || auta[i]=='O' || auta[i]=='R' || auta[i]=='T' || auta[i]=='U' || auta[i]=='Z' || auta[i]=='Y' || auta[i]=='W' || auta[i]=='X')
		{
			printf(""Neispravan unos\n"");	
		}
		if(auta[i]=='k' || auta[i]=='K')
		{
			break;	
		}
	}
	procenat=crna+bijela+siva+crvena+plava;
	procc=(crna/(float)procenat)*100;
	procb=(bijela/(float)procenat)*100;
	procs=(siva/(float)procenat)*100;
	procv=(crvena/(float)procenat)*100;
	procp=(plava/(float)procenat)*100;
	printf(""Ukupno evidentirano %d vozila.\n"",procenat);
	if(procc>=procb && procc>=procs && procc>=procv && procc>=procp)
	{
		printf(""Najpopularnija boja je crna (%.2f%)."", procc);
	}
	else if(procb>=procc && procb>=procs && procb>=procv && procb>=procp)
	{
		printf(""Najpopularnija boja je bijela (%.2f%)."", procb);
	}
	else if(procs>=procc && procs>=procb && procs>=procv && procs>=procp)
	{
		printf(""Najpopularnija boja je siva (%.2f%)."", procs);
	}
	else if(procv>=procc && procv>=procb && procv>=procv && procv>=procp)
	{
		printf(""Najpopularnija boja je crvena (%.2f%)."", procv);
	}
	else if(procp>=procc && procp>=procb && procp>=procs && procp>=procv)
	{
		printf(""Najpopularnija boja je plava (%.2f%)."", procp);
	}
	else if (procenat==0)
	{
		procc=0;
		printf(""Najpopularnija boja je crna (%.2f%)."", procc);	
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int crna=0, bijela=0, siva=0, crvena=0, plava=0, i, procenat=0;
	char auta[2000];
	float procc,procb,procs,procv,procp;
	printf(""Unesite vozila: "");
	scanf(""%s"", &auta);
	for(i=0; auta[i]!='\0'; ++i)
	{
		if(auta[i]=='c' || auta[i]=='C')
		{
			crna++;	
		}
		if(auta[i]=='b' || auta[i]=='B')
		{
			bijela++;	
		}
		if(auta[i]=='s' || auta[i]=='S')
		{
			siva++;	
		}
		if(auta[i]=='v' || auta[i]=='V')
		{
			crvena++;	
		}
		if(auta[i]=='p' || auta[i]=='P')
		{
			plava++;	
		}
		if(auta[i]=='a' || auta[i]=='d' || auta[i]=='e' || auta[i]=='f' || auta[i]=='g' || auta[i]=='h' || auta[i]=='i' || auta[i]=='j' || auta[i]=='l' || auta[i]=='m' || auta[i]=='n' || auta[i]=='o' || auta[i]=='r' || auta[i]=='t' || auta[i]=='u' || auta[i]=='z' || auta[i]=='y' || auta[i]=='x' || auta[i]=='w' || auta[i]==' ' || auta[i]==',' || auta[i]=='1' || auta[i]=='2'  || auta[i]=='0' || auta[i]==' 3' || auta[i]=='4' || auta[i]=='5' || auta[i]=='6' || auta[i]=='7' || auta[i]=='8' || auta[i]=='9' || auta[i]=='/' || auta[i]=='*' || auta[i]=='-' || auta[i]=='.' || auta[i]=='-' || auta[i]=='<' || auta[i]=='>' || auta[i]=='A' || auta[i]=='D' || auta[i]=='E' || auta[i]=='F' || auta[i]=='G' || auta[i]=='H' || auta[i]=='I' || auta[i]=='J' || auta[i]=='L' || auta[i]=='M' || auta[i]=='N' || auta[i]=='O' || auta[i]=='R' || auta[i]=='T' || auta[i]=='U' || auta[i]=='Z' || auta[i]=='Y' || auta[i]=='W' || auta[i]=='X')
		{
			printf(""Neispravan unos\n"");	
		}
		if(auta[i]=='k' || auta[i]=='K')
		{
			break;	
		}
	}
	procenat=crna+bijela+siva+crvena+plava;
	procc=(crna/(float)procenat)*100;
	procb=(bijela/(float)procenat)*100;
	procs=(siva/(float)procenat)*100;
	procv=(crvena/(float)procenat)*100;
	procp=(plava/(float)procenat)*100;
	printf(""Ukupno evidentirano %d vozila.\n"",procenat);
	if(procc>=procb && procc>=procs && procc>=procv && procc>=procp)
	{
		printf(""Najpopularnija boja je crna (%.2f%)."", procc);
	}
	else if(procb>=procc && procb>=procs && procb>=procv && procb>=procp)
	{
		printf(""Najpopularnija boja je bijela (%.2f%)."", procb);
	}
	else if(procs>=procc && procs>=procb && procs>=procv && procs>=procp)
	{
		printf(""Najpopularnija boja je siva (%.2f%)."", procs);
	}
	else if(procv>=procc && procv>=procb && procv>=procv && procv>=procp)
	{
		printf(""Najpopularnija boja je crvena (%.2f%)."", procv);
	}
	else if(procp>=procc && procp>=procb && procp>=procs && procp>=procv)
	{
		printf(""Najpopularnija boja je plava (%.2f%)."", procp);
	}
	else if (procenat==0)
	{
		procc=0;
		printf(""Najpopularnija boja je crna (%.2f%)."", procc);	
	}
	return 0;
}
"
550,38,38,0,24,A2016/Z2/Z2/student9463,A2016/Z2/Z2/student2806,"#include <stdio.h>
#include <math.h>
#define PI 3.1415926

int main() {
	int n, i, k, j;
	double uglovi[500],stepeni, minute, sekunde, stepeni1, minute1, sekunde1;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	for (i=0; i<n; i++){
		scanf(""%lf"", &uglovi[i]);
	}
	for(j=0; j<n; j++){
		stepeni=uglovi[j]*(180/PI);
		minute=fabs((double)(stepeni-(int)stepeni)*60);
		sekunde=fabs((double)(minute-(int)minute)*60);
		stepeni1=(int)stepeni;
		minute1=(int)minute;
		sekunde1=(int)(sekunde+0.5);
		if(sekunde1>=60){minute1++; sekunde1=sekunde1-60;}
		if(minute1>=60){
			if (stepeni1<0){
				stepeni1--;
				minute1=minute1-60;
			}
			else{
			(stepeni1)++; 
			minute1=minute1-60;
			}
		}
		
		if (fabs(sekunde1)>30){
			for (k=j; k<n-1; k++){
				uglovi[k]=uglovi[k+1];
			}
			n--;
			j--;
		}
	}
	printf(""Uglovi su:\n"");
	for (i=0; i<n; i++){
		stepeni=uglovi[i]*(180/PI);
		minute=fabs((double)(stepeni-(int)stepeni)*60);
		sekunde=fabs((double)(minute-(int)minute)*60);
		stepeni1=(int)stepeni;
		minute1=(int)minute;
		sekunde1=(int)(sekunde+0.5);
		if(sekunde1>=60){minute1++; sekunde1=sekunde1-60;}
		if(minute1>=60){
			if(stepeni1<0){
				stepeni1--;
				minute1=minute1-60;
			}
			else{
			stepeni1++; 
			minute1=minute1-60;}
		}
		printf(""%.lf stepeni %.lf minuta %.lf sekundi\n"", stepeni1, minute1, sekunde1);
	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926
#define KAPACITET 500
int main()
{
	double uglovi[KAPACITET];
	int i, j, brojUglova, h, m, s, y;
	printf(""Unesite broj uglova: "");
	scanf (""%d"", &brojUglova);

	for (i=0; i<brojUglova; i++) {
		scanf(""\n%lf"", &uglovi[i]);
	}

	for (i=0; i<brojUglova; i++) {
		y=(uglovi[i]*180*3600)/PI+0.5;
		h=y/3600;
		m=(y%3600)/60;
		s=(y%3600)%60;
		if (s>=60) {
			m++;
			s=abs(s)-60;
		}
		if (m>=60) {
			h++;
			m=abs(m)-60;
			
		}
		
		
		if (abs(s)>30) {
			for (j=i; j<brojUglova-1; j++) {
				uglovi[j]=uglovi[j+1];
			}
			brojUglova--;
			i--;

		}

	}

	printf (""Uglovi su:"");
	for (i=0; i<brojUglova; i++) {
		y=(uglovi[i]*180*3600)/PI+0.5;
		h=y/3600;
		m=(y%3600)/60;
		s=(y%3600)%60;
		if (s>=60) {
			m++;
			s=abs(s)-60;
		}
		if (m>=60) {
			h++;
			m=abs(m)-60;
			
		}
		if (abs(s)>30) {
			for (j=i; j<brojUglova-1; j++) {
				uglovi[j]=uglovi[j+1];
			}
			brojUglova--;
			i--;

		}

		printf(""\n%d stepeni %d minuta %d sekundi"", h, abs(m), abs(s));
	}


	return 0;
}
"
555,79,79,0,30,A2016/Z2/Z4/student8794,A2016/Z2/Z4/student5829,"#include <stdio.h>
#include <math.h>
#define epsilon 0.00000000000001

int main() {
	
	int i,j,M,N,tep=1,cirk=1;
	double  niz[100][100];
	
	do{
	  	  printf(""Unesite M i N: "");
	      scanf(""%d %d"",&M,&N);
	      if(M<=0||M>100||N<=0||N>100)
	      printf(""Pogresan unos!\n"");
	}while(M<=0||M>100||N<=0||N>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++){
	    for(j=0;j<N;j++)
	    scanf(""%lf"",&niz[i][j]);
	}
	
	for(i=0;i<M-1;i++){
	    for(j=0;j<N-1;j++){
	        if(fabs(niz[i][j]-niz[i+1][j+1])>epsilon)
	            tep=0; }	}

	      	for(i=0;i<M-1;i++){
	        if(fabs(niz[i][N-1]-niz[i+1][0])>epsilon)
	        cirk=0;    }	
	if(cirk==1 && tep==1) printf(""Matrica je cirkularna"");
	else if(tep==1 && cirk==0) printf(""Matrica je Teplicova"");
	else if (tep==0 && cirk==0)printf(""Matrica nije ni cirkularna ni Teplicova"");
	else if (tep==0 && cirk==1)printf(""Matrica nije ni cirkularna ni Teplicova"");
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define epsilon 0.001
int main() {
	int M,N,i,j;
	int tep=1, cir=1;;
	double mat[100][100];
	do {
		printf(""\nUnesite M i N: "");
		scanf (""%d %d"", &M,&N);
		if (M<=0 || M>100 || N<=0 || N>100) printf (""Pogresan unos!"");
	}
	while (M<=0 || M>100 || N<=0 || N>100 );
	
	printf (""Unesite elemente matrice: "");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			
			scanf (""%lf"", &mat [i][j]);
			
		}
	}
	
	
	for (i=0;i<M-1;i++){
		for (j=0;j<N-1;j++){
			
			if (fabs (mat[i][j]-mat[i+1][j+1])>epsilon )
                    tep=0;
		
		}
	}
	
		for (i=0;i<M-1;i++){
			if (fabs(mat[i][N-1]-mat[i+1][0]) ) 
					cir=0;
		
		
		}
	
	
		
	
	if (tep==1 && cir==0) printf (""Matrica je Teplicova"");

	else if (cir==1 && tep==1) printf (""Matrica je cirkularna"");
	else printf (""Matrica nije ni cirkularna ni Teplicova"");
	return 0; 
}
"
568,99,99,0,34,A2016/Z2/Z3/student7735,A2016/Z2/Z3/student9498,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main() {
    int mat[20][20]={0}, n=0, x=0, y=0, i=0, j=0;
    do
    {
    printf(""Unesite broj tacaka: "");
    scanf(""%d"", &n);
    if(n < 1 || n > 10)
    printf(""Pogresan unos\n"");
}
while(n < 1 || n > 10);
for(i = 0; i < n; i++)
{ 
    printf(""Unesite %d. tacku: "", i+1);
scanf(""%d %d"", &x, &y);
if(x < 0 || x > 19 || y < 0 || y > 19)
{
printf(""Pogresan unos\n"");
i--;
continue;
}
mat[y][x] = 1;
}
for(i = 0; i < 20; i++)
{
for (j = 0; j < 20; j++)
{
    if (mat[i][j] == 1)
    printf(""*"");
    else
    printf("" "");
}
printf(""\n"");
}
return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main() {
    int mat[20][20]={0}, n=0, x=0, y=0, i=0, j=0;
    do
    {
    printf(""Unesite broj tacaka: "");
    scanf(""%d"", &n);
    if(n < 1 || n > 10)
    printf(""Pogresan unos\n"");
}
while(n < 1 || n > 10);
for(i = 0; i < n; i++)
{ 
    printf(""Unesite %d. tacku: "", i+1);
scanf(""%d %d"", &x, &y);
if(x < 0 || x > 19 || y < 0 || y > 19)
{
printf(""Pogresan unos\n"");
i--;
continue;
}
mat[y][x] = 1;
}
for(i = 0; i < 20; i++)
{
for (j = 0; j < 20; j++)
{
    if (mat[i][j] == 1)
    printf(""*"");
    else
    printf("" "");
}
printf(""\n"");
}
return 0;
}"
569,78,78,0,196,A2016/Z1/Z1/student8187,A2016/Z1/Z1/student5830,"#include <stdio.h>

int main() {
	double a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,ut=0,ub=0,um=0;
	int o1,o2,o3;
	printf (""Unesite bodove za Tarika: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &a);
	if (a<0 || a>20)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &b );
	if (b<0 || b>20)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""Prisustvo: "");
	scanf (""%lf"", &c);
	if (c<0 || c>10)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""Zadace: "");
	scanf (""%lf"", &d);
	if (d<0 || d>10)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &e);
	if (e<0 || e>40)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""Unesite bodove za Bojana: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &f);
	if (f<0 || f>20)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &g );
	if (g<0 || g>20)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""Prisustvo: "");
	scanf (""%lf"", &h);
	if (h<0 || h>10)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""Zadace: "");
	scanf (""%lf"", &i);
	if (i<0 || i>10)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &j);
	if (j<0 || j>40)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""Unesite bodove za Mirzu: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &k);
	if (k<0 || k>20)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &l );
	if (l<0 || l>20)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""Prisustvo: "");
	scanf (""%lf"", &m);
	if (m<0 || m>10)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""Zadace: "");
	scanf (""%lf"", &n);
	if (n<0 || n>10)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &o);
	if (o<0 || o>40)
		{
			printf (""Neispravan broj bodova"");
			return 0;
		}
	ut=a+b+c+d+e;
	ub=f+g+h+i+j;
	um=k+l+m+n+o;
	
	
	if (ut<55)
	{
		o1=5;
	}
	else if (ut>=55 && ut<65)
	{
		o1=6;
	}
	else if (ut>=65 && ut<75)
	{
		o1=7;
	}
	else if (ut>=75 && ut<85)
	{
		o1=8;
	}
	else if (ut>=85 && ut<92)
	{
		o1=9;
	}
	else if (ut>=92 && ut<=100)
	{
		o1=10;
	}
	
	
	
	if (ub<55)
	{
		o2=5;
	}
	else if (ub>=55 && ub<65)
	{
		o2=6;
	}
	else if (ub>=65 && ub<75)
	{
		o2=7;
	}
	else if (ub>=75 && ub<85)
	{
		o2=8;
	}
	else if (ub>=85 && ub<92)
	{
		o2=9;
	}
	else if (ub>=92 && ub<=100)
	{
		o2=10;
	}
	
	
	
	if (um<55)
	{
		o3=5;
	}
	else if (um>=55 && um<65)
	{
		o3=6;
	}
	else if (um>=65 && um<75)
	{
		o3=7;
	}
	else if (um>=75 && um<85)
	{
		o3=8;
	}
	else if (um>=85 && um<92)
	{
		o3=9;
	}
	else if (um>=92 && um<=100)
	{
		o3=10;
	}
	
	if (o1==5 && o2==5 && o3==5) { printf (""Nijedan student nije polozio.""); return 0;}
	else if (o1>5 && o2==5 && o3==5) { printf (""Jedan student je polozio.""); return 0;}
	else if (o1==5 && o2>5 && o3==5) { printf (""Jedan student je polozio.""); return 0;}
	else if (o1==5 && o2==5 && o3>5) { printf (""Jedan student je polozio.""); return 0;}
	else if (o1>5 && o2>5 && o3==5) { printf (""Dva studenta su polozila.""); return 0;}
	else if (o1>5 && o2==5 && o3>5) { printf (""Dva studenta su polozila.""); return 0;}
	else if (o1==5 && o2>5 && o3>5) { printf (""Dva studenta su polozila.""); return 0;}
	else if ((o1>5 && o2>5 && o3>5) && (o1==o2 && o2==o3)) { printf (""Sva tri studenta su polozila. \nSva tri studenta imaju istu ocjenu.""); return 0;}
	else if ((o1>5 && o2>5 && o3>5) && (o1==o2 && o1!=o3)) { printf (""Sva tri studenta su polozila. \nDva od tri studenta imaju istu ocjenu.""); return 0;}
	else if ((o1>5 && o2>5 && o3>5) && (o1==o3 && o1!=o2)) { printf (""Sva tri studenta su polozila. \nDva od tri studenta imaju istu ocjenu.""); return 0;}
	else if ((o1>5 && o2>5 && o3>5) && (o2==o3 && o2!=o1)) { printf (""Sva tri studenta su polozila. \nDva od tri studenta imaju istu ocjenu.""); return 0;}
	else if ((o1>5 && o2>5 && o3>5) && (o1!=o2 && o2!=o3 && o1!=o3)) { printf (""Sva tri studenta su polozila. \nSvaki student ima razlicitu ocjenu.""); return 0;}
	
	return 0;
}
","#include <stdio.h>

int main() {
	double t1,t2,t3,t4,t5,b1,b2,b3,b4,b5,m1,m2,m3,m4,m5;
	double t,b,m;
	int ot,ob,om;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&t1);if(t1<0 || t1>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&t2);if(t2<0 || t2>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&t3);if(t3<0 || t3>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&t4);if(t4<0 || t4>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&t5);if(t5<0 || t3>40){printf(""Neispravan broj bodova""); return 0;}
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&b1);if(b1<0 || b1>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&b2);if(b2<0 || b2>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&b3);if(b3<0 || b3>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&b4);if(b4<0 || b4>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&b5);if(b5<0 || b3>40){printf(""Neispravan broj bodova""); return 0;}
	printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&m1);if(m1<0 || m1>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&m2);if(m2<0 || m2>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&m3);if(m3<0 || m3>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&m4);if(m4<0 || m4>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&m5);if(m5<0 || m3>40){printf(""Neispravan broj bodova""); return 0;}
	t=t1+t2+t3+t4+t5;
	b=b1+b2+b3+b4+b5;
	m=m1+m2+m3+m4+m5;
	if (t<55)
	{ot=5;}
	else if(t>=55 && t<65)
	{ot=6;}
	else if(t>=65 && t<75)
	{ot=7;}
	else if(t>=75 && t<85)
	{ot=8;}
	else if(t>=85 && t<92)
	{ot=9;}
	else if(t>=92 && t<=100)
	{ot=10;}
	if (b<55)
	{ob=5;}
	else if(b>=55 && b<65)
	{ob=6;}
	else if(b>=65 && b<75)
	{ob=7;}
	else if(b>=75 && b<85)
	{ob=8;}
	else if(b>=85 && b<92)
	{ob=9;}
	else if(b>=92 && b<=100)
	{ob=10;}
	if (m<55)
	{om=5;}
	else if(m>=55 && m<65)
	{om=6;}
	else if(m>=65 && m<75)
	{om=7;}
	else if(m>=75 && m<85)
	{om=8;}
	else if(m>=85 && m<92)
	{om=9;}
	else if(m>=92 && m<=100)
	{om=10;}
	if(ot==5 && ob==5 && om==5)
	{printf(""Nijedan student nije polozio.\n""); return 0;}
	if ((ot>5 && ob==5 && om==5)||(ot==5 && ob>5 && om==5)||(ot==5 && ob==5 && om>5))
	{printf(""Jedan student je polozio.\n""); return 0;}
	if ((ot>5 && ob>5 && om==5)||(ot==5 && ob>5 && om>5)||(ot>5 && ob==5 && om>5))
	{printf(""Dva studenta su polozila.\n"");}
	if (ot>5 && ob>5 && om>5)
	{printf(""Sva tri studenta su polozila.\n"");}
	if (ot==ob && ot==om)
	{printf(""Sva tri studenta imaju istu ocjenu.\n"");}
	if (ot==ob || ot==om || ob==om)
	{printf(""Dva od tri studenta imaju istu ocjenu.\n"");}
	if ((ot>5 && ob>5 && om>5)&&(ot!=ob && ot!=om && ob!=om))
	{printf(""Svaki student ima razlicitu ocjenu.\n"");}
	return 0;
}
"
581,97,97,0,48,A2016/Z1/Z4/student7735,A2016/Z1/Z4/student3331,"#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50){
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1){
		printf(""***"");
		return 0;
	}
	for(i=1;i<n;i++){
		for(j=1;j<i;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*"");
		if(i<2){
				for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
		if(i>=2){
		for(j=1;j<=2*i-3;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	}
		if(i==n){
			for(j=1;j<n;j++){
				printf("" "");
			}
			printf(""*"");
		for(j=1;j<=2*n-3;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50) {
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1) {
		printf(""***"");
		return 0;
	}
    for(i=1;i<n;i++) {
    	for(j=1;j<i;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	for(j=1;j<=((n-i)*2)-1;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	if(i<2) {
    		for(j=1;j<=((n-i)*2)-1;j++) {
    			printf("" "");
    		}	
    		printf(""*\n"");
    	}	
    	if(i>=2) {
    		for(j=1;j<=2*i-3;j++) {
    		printf("" "");
    		}
    		printf(""*"");
    		for(j=1;j<=((n-i)*2)-1;j++) {
    		printf("" "");
    	}
    	printf(""*\n"");
        }
    }
    if(i==n) {
    	for(j=1;j<n;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	for(j=1;j<=2*n-3;j++) {
    		printf("" "");
    	}
    	printf(""*\n"");
        }
	return 0;
}
"
595,62,62,0,78,A2016/Z3/Z2/student9160,A2016/Z3/Z2/student9385,"#include <stdio.h>
#include<math.h>
#include<stdlib.h>
#define duzina 10
void ubaci(int *niz,int velicina)
{
	int broj,broj2=0,cifra,i,j;
	for(j=velicina-1; j>=0; j--)niz[2*j]=niz[j];
	for(i=0; i<2*velicina; i+=2) 
	{
		broj=abs(niz[i]);
		if(broj<10)broj2=broj;
		else {
			do {
				cifra=broj%10;
				broj2+=cifra;
				broj/=10;
			} while(broj!=0);
		}
		niz[i+1]=broj2;
		broj2=0;
	}
}
int izbaci(int *niz, int velicina)
{
	int j,prvi=0,drugi=1,treci,i;
	for(i=0; i<velicina; i++) {
		prvi=0;
		drugi=1;
		for(j=1; j<10000; j++) {
			if(j==1)treci=1;
			else {
				treci=prvi+drugi;
				prvi=drugi;
				drugi=treci;
			}
			if(niz[i]==treci) {
				int k;
				for(k=i; k<velicina-1; k++)niz[k]=niz[k+1];
				velicina--;
				i--;
				break;
			}
		}
	}
	return velicina;
}

int main()
{
	int niz[2*duzina],i,pozivanje;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<duzina; i++)scanf(""%d"",&niz[i]);
	ubaci(niz,duzina);
	pozivanje=izbaci(niz,2*duzina);
	printf(""Modificirani niz glasi: "");
	for(i=0; i<pozivanje; i++)
		if(i==pozivanje-1)printf(""%d."",niz[i]);
		else printf(""%d, "",niz[i]);
	return 0;
}
","#include <stdio.h>
#include<math.h>
#include<stdlib.h>
void ubaci (int *niz, int DUPLO)
{
    int m,rastavi_cifru=0,zbir_cifara=0,elem;
                                                   /*pripremamo niz i prosirujemo ga*/
    for(m=DUPLO-1; m>=0; m--)
    {
        niz[2*m]=niz[m];                             /*NIz prosiren*/
    }
                                                /*U slucajuu da ne dode do greske*/
    for(m=0; m<2*DUPLO; m+=2)
    {
        elem=abs(niz[m]);
        if(elem<10)
        {
            zbir_cifara=elem;
        }
        else
        {
        
      do {
            rastavi_cifru=elem%10;      /*petlja racuna zbir cifara i novi elem koji unosi u petlju sve dok taj elem nije nula*/
           zbir_cifara=zbir_cifara+rastavi_cifru;
           elem=elem/10;
        } while(elem!=0);
        
         }                                                         /*ubacujem dobiveni zbir cifre izmedju dva elem i dodijelim mu dobiveni broj*/
         niz[m+1]=zbir_cifara;
             zbir_cifara=0;
         
    }
}
                                                       /*NOVA FUNKCIJA ZA IZBACIVANJE CLANOVA*/
                                                       
        
             
    int izbaci(int*niz, int DUPLO)                                /*funkcija izbacuje fibonacci brojeve iz niza*/
    {
            int i,j,prvi_broj=1,drugi_broj=1,zbir_brojeva=0;
            for(i=0; i<DUPLO; i++)
            {
                prvi_broj=1;
                drugi_broj=1;
                
                    for(j=i; j<1000; j++)
                    {
                        if(j==1)
                        {
                            zbir_brojeva=1;
                        }
                        else {
                            zbir_brojeva=prvi_broj+drugi_broj;
                            prvi_broj=drugi_broj;
                            drugi_broj=zbir_brojeva;
                        }
                        if(niz[i]==zbir_brojeva)
                        {
                            for(zbir_brojeva=i; zbir_brojeva<DUPLO-1; zbir_brojeva++)
                            {
                                niz[zbir_brojeva]=niz[zbir_brojeva+1];
                            }
                            DUPLO--;
                            i--;
                            break;
                        }
                    
                }
            }
            return DUPLO;
            
        
        
}
    
int main() {
  int niz[100],i,mojniz,duzina_niza=0;
  printf(""Unesite niz od 10 brojeva: "");
  for(i=0; i<20; i++)
   {
       duzina_niza++;
       scanf(""%d"", &niz[i]);
   }
   ubaci(niz, duzina_niza);
   mojniz=(niz, duzina_niza);
   
    printf(""Modificiran niz glasi: "");
    for(i=0; i<mojniz; i++)
    {
        if(i==mojniz-1)
        {
        printf(""%d."", niz[i]);
        }
    
    else {
        printf(""%d"", niz[i]);
    }
    }
	return 0;
    }
"
597,23,23,0,20,A2016/Z5/Z1/student8776,A2016/Z5/Z1/student6548,"#include <stdio.h>

#define epsilon 0.0001

struct Student{
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};

int uporedi(char* s1, char*s2){
	while(*s1!='\0' && *s2!='\0'){
		if (*s1 < *s2) return 1;
		if (*s1 > *s2) return 2;
		s1++; s2++;
	}
	if(*s1!='\0') return 2;
	if(*s2!='\0') return 1;
	
	return 0;
}
float prosjek(int niz[], int vel){
	int i=0, suma=0;
	if(vel==0) return 5;
	for(i=0; i<vel; i++){
		if(niz[i]==5) return 5;
		suma+=niz[i];
	}
	return (float)suma/vel;
}
int dalijeveci ( struct Student pr, struct Student dr){
	float prosjekprvog=prosjek(pr.ocjene, pr.br_ocjena);
	float prosjekdrugog=prosjek(dr.ocjene, dr.br_ocjena);
	int sta_je_vratila_f=uporedi(pr.prezime, dr.prezime);

	if(prosjekprvog > prosjekdrugog) return 1;
	if(prosjekprvog < prosjekdrugog) return 0;
	
	if(sta_je_vratila_f==1) return 1;
	if(sta_je_vratila_f==2) return 0;
	
	sta_je_vratila_f=uporedi(pr.ime, dr.ime);
	if(sta_je_vratila_f==1) return 1;
	if(sta_je_vratila_f==2) return 0;
	
	else return 1;
}
int genijalci(struct Student niz[], int vel, double prosjekk){
	int i,j,indexprvi,indexdrugi,indextreci,indexmin=0;
	double min=10;
	for(i=0; i<vel; i++){
		if(prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon) {
			for(j=i; j<vel-1; j++){
				niz[j]=niz[j+1];
			}
			vel--;
			i--;
		}
	}
	
for(i=0; i<vel;i++)	{
	if(min-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon){
		min=prosjek(niz[i].ocjene,niz[i].br_ocjena);
		indexmin=i;
	}
	
}

if(vel>0){
	indexprvi=indexmin;
	for(i=0; i<vel;i++){
		if(dalijeveci(niz[i],niz[indexprvi]))
		indexprvi=i;
	}
	printf(""\n%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime);
}
if(vel>1){
	indexdrugi=indexmin;
	for(i=0; i<vel;i++){
		if(i==indexprvi) continue;
		
		if(dalijeveci(niz[i], niz[indexdrugi])){
			indexdrugi=i;
		}
	}
	printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
}
if(vel>2){
	
	indextreci=indexmin;
	for(i=0; i<vel;i++){
		if(i==indexprvi || i==indexdrugi) continue;
		if(dalijeveci(niz[i],niz[indextreci]))
		indextreci=i;
	}
	printf(""%s %s\n"",niz[indextreci].prezime, niz[indextreci].ime);
}
return vel;

}



int main() {
struct Student studenti[5]={
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Meho"", ""Mujic"", {7,7,7,7,8},5},
	{""Beba"", ""Bebic"", {10,10,10,10,5},5},
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Fata"", ""Fatic"", {7,7,7,7,8},5},
};
genijalci (studenti, 5, 6.5);
	return 0;
}



","#include <stdio.h>
#include <string.h>

struct Student{
    char ime[20],prezime[20];
    int ocjene[50];
    int br_ocjena;
};

double prosjecna_ocjena(int niz[],int vel){
    if(vel==0) return 0;
    int i;
    double prosjek=5, suma=0;
    for(i=0;i<vel;i++){
        if(niz[i]==5) return 5;
        suma+=niz[i];
    }
    prosjek=suma/vel;
    return prosjek;
}

int uporedi(char* s1, char* s2){
    while (*s1!='\0' && *s2!='\0'){
        if(*s1<*s2) return -1;
        if(*s1>*s2) return 1;
        s1++;
        s2++;
    }
    if(*s1!='\0') return 1;
    if(*s2!='\0') return -1;
    return 0;
}
int genijalci(struct Student studenti[], int velicina, double prosjek){
    int i,j;
    for(i=0;i<velicina;i++){
        if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)<prosjek){
            for(j=i; j<velicina-1; j++)
                studenti[j]=studenti[j+1];
            velicina--;
            i--;
        }
    }
int prvi=-1, drugi=-1, treci=-1;
double najveci=0, prosj;
int ispred;

for(i=0; i<velicina; i++){
    if(prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena) >= najveci){
        if(prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena) > najveci){
            prvi=i;
            najveci=prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena);
                continue;
        }
        najveci=prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena);
        ispred=uporedi(studenti[prvi].prezime, studenti[i].prezime);
        if(ispred==0)
            ispred=uporedi(studenti[prvi].ime,studenti[i].ime);
        if(ispred==1){
            prvi=i;
            }
        }
    }
    najveci=0;
    for(i=0;i<velicina;i++){
        if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)>=najveci && i!=prvi){
            if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)>najveci){
                drugi=i;
        najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
            continue;
            }
            najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
            ispred=uporedi(studenti[drugi].prezime,studenti[i].prezime);
            if(ispred==0)
                ispred=uporedi(studenti[drugi].ime,studenti[i].ime);
                if(ispred==1){
                    drugi=i;
                }
        }
    }
    najveci=0;
    for(i=0;i<velicina;i++){
        if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)>=najveci && i!=prvi && i!=drugi){
            if(prosjecna_ocjena (studenti[i].ocjene,studenti[i].br_ocjena)>najveci){
                
                treci=i;
                najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
                continue;
            }
            najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
            ispred=uporedi(studenti[treci].prezime,studenti[i].prezime);
            if(ispred==0)
                ispred=uporedi(studenti[treci].ime,studenti[i].ime);
            if(ispred==1){
                treci=i;
            }
        }
    }
    for (i=0;i<velicina;i++)
        if(i==prvi)
            printf(""\n%s %s\n"", studenti[prvi].prezime, studenti[prvi].ime);
    for (i=0;i<velicina;i++)
        if(i==drugi)
            printf(""%s %s\n"", studenti[drugi].prezime, studenti[drugi].ime);
    for(i=0;i<velicina;i++)
        if(i==treci)
            printf(""%s %s\n"",studenti[treci].prezime, studenti[treci].ime);
    return velicina;
}
    
int main(){
    struct Student studenti[10]={
        {""Meho"", ""Mujic"",{7,7,7,7,8},5},
        {""Pero"", ""Peric"",{8,8,8,8,7},5},
        {""Beba"", ""Bebic"",{7,8,9},3},
        {""Mujo"", ""Mujic"",{10,10,10,10,9},5},
        {""Mujo"", ""Mujic"",{7,7,7,7,7,7,7},7},
        {""Fata"", ""Fatic"",{7,7,7,7,7,7,6,6,6,5},10},
        {""Osman"", ""Osmic"",{8,6,9,10,9},5},
        {""Pero"", ""Mujic"",{10,6,10,10,9},5},
        {""Beba"", ""Mujic"",{10,8,7,6,9},5},
        
    };
    
    int vel=genijalci(studenti, 9, 7);
    return 0;
}"
604,67,67,0,16,A2016/Z1/Z4/student7802,A2016/Z1/Z4/student5649,"#include <stdio.h>
int main() {
    int n,i,j;
    do{
    printf(""Unesite broj n: "");
    scanf(""%d"", &n);
    if(n<=0 || n>50){
        printf(""Pogresan unos"");
        printf(""\n"");
         }   
    }while(n<=0 || n>50);
     if(n==1){
             printf(""***"");
         }else{
             for(i=0; i < n; i++){
                for(j=0; j <= 4*n-4; j++){
                    if (j==i || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i){
                        printf(""*"");
                    }else{
                        printf("" "");
                }
            }printf(""\n"");
        }
    }
    
return 0;
}","#include <stdio.h>

int main() {
	int n, j, i;
	printf(""Unesite broj n: "");
	scanf(""%d"", &n);
	while(n<=0 || n>50) {
	printf(""Pogresan unos"");
	printf(""\nUnesite broj n: "");
	scanf(""%d"", &n);}
	if(n==1) {
		printf(""***"");}
		else {
		for(i=0;i<n;i++)
		{
			for(j=0;j<=4*n-4;j++)
		{
			if(i==j || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i) {
			printf(""*"");}
			else{
			printf("" "");}
		}
		printf(""\n"");
	}
	}
	return 0;
}






"
639,97,97,0,49,A2016/Z1/Z4/student5741,A2016/Z1/Z4/student9095,"#include <stdio.h>

int main() {
	int i,j,n;
	jump:
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	if(n<=0 || n>50){
		printf(""Pogresan unos\n"");
		goto jump;
	}
	
	else{
		printf(""*"");
		for(i=0;i<2*n-3;i++){
			printf("" "");
		}
		printf(""*"");
		for(i=0;i<2*n-3;i++){
			printf("" "");
		}
		printf(""*\n"");
	
		for(i=0;i<n-2;i++){
			for(j=0;j<=i;j++){
				printf("" "");
			}
			printf(""*"");
			for(j=0;j<2*n-5-2*i;j++){
				printf("" "");
			}
			printf(""*"");
			for(j=0;j<2*(i+1)-1;j++){
				printf("" "");
			}
			printf(""*"");
			for(j=0;j<2*n-5-2*i;j++){
				printf("" "");
			}
			printf(""*\n"");
		}
	
		if(n>1){
			for(i=0;i<n-1;i++){
				printf("" "");
			}
			printf(""*"");
			for(i=0;i<2*n-3;i++){
				printf("" "");
			}
			printf(""*\n"");
		}
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int i,j,n;
	jump:
	printf(""Unesite broj n: "");
	scanf (""%d"", &n);
	if(n<=0 || n>50){
		printf(""Pogresan unos\n"");
		goto jump;
	}
	
	else{
		printf (""*"");
		for(i=0; i<2*n-3;i++){
			printf ("" "");
		}
		printf (""*"");
		for(i=0;i<2*n-3;i++){
				printf("" "");
			
			}
			printf(""*\n"");
			for(i=0;i<n-2;i++){
				for(j=0;j<=i;j++){
					printf("" "");
				}
				printf(""*"");
				for(j=0;j<2*n-5-2*i;j++){
					printf("" "");
				}
				printf(""*"");
				for(j=0;j<2*(i+1)-1;j++){
					printf("" "");
				}
				printf(""*"");
				for(j=0;j<2*n-5-2*i;j++)
				printf("" "");
			}
	printf(""*\n"");
		}
		
		if(n>1){
			for(i=0;i<n-1;i++){
				printf("" "");
			}
			printf(""*"");
			for(i=0;i<2*n-3;i++){
				printf("" "");
			}
			printf(""*\n"");
		}
	
	return 0;
}
"
648,35,35,0,19,A2016/Z3/Z1/student6303,A2016/Z3/Z1/student7671,"#include <stdio.h>

int daj_prost() {
	static int snimi=0,izlaz=1,var=-1;
	int i,j,prost_broj=1;
	i=++izlaz;
	while(i>0) { 
		prost_broj=1;
		for(j=i-1;j>1; j--)
		if(i%j==0) prost_broj=0;
		if(prost_broj==1)var++;
		if(snimi==var){izlaz=i;snimi++;break;}
		i++;
	}
	return izlaz;
}

int main() {
	int i, broj_A=0, broj_B=0,radi=1;
	long long int suma_prostih=0;
	while(radi==1){
	printf(""Unesite brojeve A i B: "");
	scanf(""%d %d"", &broj_A, &broj_B);
	if(broj_A<1) printf(""A nije prirodan broj.\n"");
	else if(broj_A+1>broj_B) printf(""A nije manje od B.\n"");
	else radi=0;}

	while(radi<broj_B){
		radi=daj_prost();
	if(radi<=broj_A)continue;
	else if(radi<broj_B) suma_prostih+=radi;
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d.\n"", broj_A, broj_B, suma_prostih);
	return 0;
}
","#include <stdio.h>

int daj_prost () {
	int i, j, prost=1;
	static int a=0, izl=1, slucaj=-1;
	i=++izl;
	while(i>0) {
		prost=1;
		for(j=i-1;j>1;j--) 
		if(i%j==0) prost=0;
		if(prost==1) slucaj++;
		if(a==slucaj) {
			izl=i;
			a++;
			break;
		}
		i++;
	}
	return izl;
}

int main(){
	int A, B, i, suma=0, niz[10000];
	printf(""Unesite brojeve A i B: "");
	scanf(""%d %d"", &A, &B);
	while (A<=0 || B<=0 || B<=A) {
	if(A<=0) printf(""A nije prirodan broj.\n"");
	else if(B<=A) printf(""A nije manje od B.\n"");
	else if(B<=0) printf(""B nije prirodan broj.\n"");
	printf(""Unesite brojeve A i B: "");
	scanf(""%d %d"", &A, &B);
	}
	for(i=0;i<1000;i++) {
		niz[i]=daj_prost();
		if(niz[i]>=B) break;
		else if(niz[i]<=A) continue;
		suma+=niz[i];

	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."", A, B, suma);
	return 0;
	
}



"
649,38,38,0,19,A2016/Z2/Z2/student4804,A2016/Z2/Z2/student4982,"#include <stdio.h>
#define PI 3.1415926
#include <stdlib.h>
#include <math.h>
int main() {
	int n,i,j;
	double ugao[500],min[500],sec[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	for(i=0;i<n;i++)
	{
		scanf(""%lf"",&ugao[i]);
		ugao[i]=ugao[i]*180/PI;
		min[i]=(fabs(ugao[i])-abs((int)ugao[i]))*60;
		sec[i]=(min[i]-(int)min[i])*60;
		sec[i]=(int)(sec[i]+0.5);
		if (sec[i]>=60)
		{
		min[i]=min[i]+1;
		sec[i]=0;
		}
		if(min[i]>=60)
			{
				if(ugao[i]>=0)
				ugao[i]=ugao[i]+1;
				else
				ugao[i]=ugao[i]-1;
			min[i]=0;
			}
			if(sec[i]>30)
		{
			for(j=i;j<n-1;j++)
			{
				ugao[j]=ugao[j+1];
			}
		n--;
		i--;
		}
	}
	
	
	printf(""Uglovi su: "");
	for(i=0;i<n;i++)
	{
	printf(""\n%d stepeni %d minuta %d sekundi"",(int)ugao[i],(int)min[i],(int)sec[i]);	
	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926
int main() {
	
	int n,i,j;
	double uglovi[500],stepeni[500],minute[500],sekunde[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	if(n<=0 || n>500)
	{ printf(""Pogresan unos\n""); return 0;}
	for(i=0;i<n;i++)
	{
		scanf(""%lf"",&uglovi[i]);
	}
	
	for(i=0;i<n;i++)
	{   
		stepeni[i]=uglovi[i]*180/PI;
		minute[i]=(fabs(stepeni[i])-fabs((int)stepeni[i]))*60;
		sekunde[i]=(minute[i]-(int)minute[i])*60;
		if(sekunde[i] - (int)sekunde[i]>=0.5) {sekunde[i]=(int)sekunde[i]+1;}
		if(sekunde[i]>=60) {minute[i]++; sekunde[i]-=60;}
		if(stepeni[i]>0 &&minute[i]>=60) {stepeni[i]++; minute[i]-=60;}
		if(stepeni[i]<0 &&minute[i]>=60) {stepeni[i]--; minute[i]-=60;}
		
		
	}
	for(i=0;i<n; i++) {
		if(sekunde[i]>30)
		{
			for(j=i;j<n-1;j++)
			{
				stepeni[j]=stepeni[j+1];
				minute[j]=minute[j+1];
				sekunde[j]=sekunde[j+1];
				
			}
			n--; i--;
		}
		
	}
	
	printf(""Uglovi su:\n"");
	for(i=0;i<n;i++)
	{
		printf(""%d stepeni %d minuta %d sekundi\n"", (int)stepeni[i],(int)minute[i],(int)sekunde[i] );
	}

	
	return 0;
}
"
651,99,99,0,189,A2016/Z4/Z1/student7119,A2016/Z4/Z1/student9673,"#include <stdio.h> 

void unesi(char niz[], int velicina){
    char znak;
    int i=0;
    /* korisnik unosi znak sa tastature (u slucaju entera ponavlja unos) */
    do{
        znak=getchar();
    }while(znak=='\n');
    /* sve dok ne unese enter od unesenih karaktera pravi se niz */
    while(i<velicina-1 && znak!='\n'){
        niz[i++]=znak;
        znak=getchar();
    }
    /* string po standardu zavrsava znakom \0 */
    niz[i]='\0';
}

char* izbaci_najcescu(char* niz){
    char* p=niz;
    char* q=niz;
    char* r=niz;
    char* poc=niz;
    char* kraj=niz;
    char* pi=niz;
    char* ki=niz;
    char* prvi=niz;
    char* drugi=niz;
    char* pocetak_izbacivanja=niz;
    char* kraj_izbacivanja=niz;
    char* temp=niz;
    char* pomocna=niz;
    char string[10000];
    int brojac=0, max=0, pret=1, i=0, pret_1=0, pret_2=0;
    
    while(*p!='\0'){
        /* pronalazi pocetak rijeci u stringu */
        if(((*p>='A' && *p<='Z') || (*p>='a' && *p<='z')) && (p==niz || *(p-1)==' ' || *(p-1)=='-'  || *p=='-' || (*p>='0' && *p<='9'))){
            poc=p; 
            while((*p>='A' && *p<='Z') || (*p>='a' && *p<='z'))p++;
                /* ako je samo jedna rijec u stringu */
                if(poc==niz && *p=='\0'){
                    max=1;
                    pocetak_izbacivanja=poc;
                    kraj_izbacivanja=p;
                    break;
                    }
                /* pronalazi kraj rijeci */    
                else if(*p==' ' || *p=='\0' || *p=='-' || (*p>='0' && *p<='9')){
                    kraj=p;
                    brojac=0;
                    r=p;
                    /* prolazi kroz string i pronalazi ostale rijeci */
                while(*r!='\0'){
                if(((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')) && (r==niz || *(r-1)==' ' || *(r-1)=='-' || (*(r-1)>='0' && *(r-1)<='9'))){
                    pi=r; /* pocetak pronadjene rijeci */
                    while((*r>='A' && *r<='Z') || (*r>='a' && *r<='z'))r++;
                        if(*r==' ' || *r=='\0' || *r=='-'  || (*p>='0' && *p<='9')){
                            ki=r; /* kraj pronadjene rijeci */
                            pret=1; /* logicka promjenjiva postavljena na 1- pretpostavka da su rijeci jednake */
                        }
                    prvi=poc;
                    drugi=pi;
                    /* da li je trenutna rijec ista kao i ona sa kojom poredimo (bez obzira na velika i mala slova) */
                    while(drugi!=ki && drugi!='\0'){
                        pret_1=0;
                        pret_2=0;
                        if(*prvi>='A' && *prvi<='Z'){
                            *prvi+='a'-'A';
                            pret_1=1;
                        }
                        if(*drugi>='A' && *drugi<='Z'){
                            *drugi+='a'-'A';
                            pret_2=1;
                        }
                        if(*prvi!=*drugi)pret=0;
                        if(pret_1)*prvi-='a'-'A';
                        if(pret_2)*drugi-='a'-'A';
                        prvi++;
                        drugi++;
                    }
                    /* ako jeste (pret==1) uveca se broj njenog ponavljanja u stringu */
                    if(pret==1)brojac++;
                   
                }  
                if(*r=='\0')break;
                 r++;
                }
    
             }
             if(*p=='\0')break;
        }
        /* ako je broj ponavljanja trenutne veci od prethodnog maksimuma postavimo tu rijec kao rijec koju treba izbaciti */
        if(brojac>max)
        {
            max=brojac;
            pocetak_izbacivanja=poc;
            kraj_izbacivanja=kraj;
        }
        
    p++;    
    }

    /* ako se string sastoji od samo jedne rijeci */
    if(poc==niz)
    {
        do{
            *pocetak_izbacivanja=*kraj_izbacivanja;
        }while(*kraj_izbacivanja!='\0' && pocetak_izbacivanja++!=kraj_izbacivanja++);
    }
    
    p=niz;
    
    /* ako se nijedna rijec ne ponavlja izbaci prvu! */
    if(max==0){
        while(*p!='\0'){
             if(((*p>='A' && *p<='Z') || (*p>='a' && *p<='z')) && ((p==niz || *(p-1)==' ' || *(p-1)=='-' || (*(p-1)>='0' && *(p-1)<='9')))){
                 poc=p;
                 while(((*p>='A' && *p<='Z') || (*p>='a' && *p<='z')))p++;
                    if(*p==' ' || *p=='\0')kraj=p;
                    break;
            }
        p++;
        }
    
    /* izbacivanje */
        while(*kraj!='\0'){
                *poc=*kraj;
                poc++;
                kraj++;
            }
             if(*kraj=='\0')*poc='\0';
        }
        
    /* rijec koja se ponavlja */
    if(max!=0 && poc!=niz){
        /* kreiranje pomocnog stringa (cine ga samo mala slova) preko kojeg cemo traziti rijec za izbaciti */
        while(pocetak_izbacivanja!=kraj_izbacivanja){
            if(*pocetak_izbacivanja>='A' && *pocetak_izbacivanja<='Z')string[i]=(*pocetak_izbacivanja+32);
            else string[i]=*pocetak_izbacivanja;
            pocetak_izbacivanja++;
            i++;
        }
        string[i]='\0';

    p=niz;
    temp=string;
    
    while(*p!='\0'){
        poc=niz;
        kraj=niz;
        temp=string;
        pret=0;
        if((*p==*temp || *p==(*temp-32)) && (p==niz || *(p-1)==' ' || *(p-1)=='-' || (*(p-1)>='0' && *(p-1)<='9'))){
            poc=p;
            pomocna=p;
            while((*pomocna==*temp || *pomocna==(*temp-32)) && *temp!='\0'){
                pomocna++; temp++;
            }
            if(*temp=='\0' && (*pomocna==' ' || *pomocna=='\0' || *pomocna=='-' || (*pomocna>='0' && *pomocna<='9'))){
                kraj=pomocna;
                pret=1;
            }
            
        }
        /* ako je rijec pronadjena logicka promjenjiva je 1, slijedi izbacivanje */
        if(pret){
                while(*kraj!='\0'){
                    *poc++=*kraj++;
                }
                if(*kraj=='\0')*poc='\0';
        }
        p++;
       }
    
    }
       
    /*prazan string - ne radi nista */
    else{
        return q;
    }
return q;
}

int main(){
    char tekst[100];
    printf(""Unesi tekst: "");
    unesi(tekst,100);
    izbaci_najcescu(tekst);
    printf(""%s"",tekst);
    return 0;
}


","#include <stdio.h> 

void unesi(char niz[], int velicina){
    char znak;
    int i=0;
    /* korisnik unosi znak sa tastature (u slucaju entera ponavlja unos) */
    do{
        znak=getchar();
    }while(znak=='\n');
    /* sve dok ne unese enter od unesenih karaktera pravi se niz */
    while(i<velicina-1 && znak!='\n'){
        niz[i++]=znak;
        znak=getchar();
    }
    /* string po standardu zavrsava znakom \0 */
    niz[i]='\0';
}

char* izbaci_najcescu(char* niz){
    char* p=niz;
    char* q=niz;
    char* r=niz;
    char* poc=niz;
    char* kraj=niz;
    char* pi=niz;
    char* ki=niz;
    char* prvi=niz;
    char* drugi=niz;
    char* pocetak_izbacivanja=niz;
    char* kraj_izbacivanja=niz;
    char* temp=niz;
    char* pomocna=niz;
    char string[10000];
    int brojac=0, max=0, pret=1, i=0, pret_1=0, pret_2=0;
    
    while(*p!='\0'){
        /* pronalazi pocetak rijeci u stringu */
        if(((*p>='A' && *p<='Z') || (*p>='a' && *p<='z')) && (p==niz || *(p-1)==' ' || *(p-1)=='-'  || *p=='-' || (*p>='0' && *p<='9'))){
            poc=p; 
            while((*p>='A' && *p<='Z') || (*p>='a' && *p<='z'))p++;
                /* ako je samo jedna rijec u stringu */
                if(poc==niz && *p=='\0'){
                    max=1;
                    pocetak_izbacivanja=poc;
                    kraj_izbacivanja=p;
                    break;
                    }
                /* pronalazi kraj rijeci */    
                else if(*p==' ' || *p=='\0' || *p=='-' || (*p>='0' && *p<='9')){
                    kraj=p;
                    brojac=0;
                    r=p;
                    /* prolazi kroz string i pronalazi ostale rijeci */
                while(*r!='\0'){
                if(((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')) && (r==niz || *(r-1)==' ' || *(r-1)=='-' || (*(r-1)>='0' && *(r-1)<='9'))){
                    pi=r; /* pocetak pronadjene rijeci */
                    while((*r>='A' && *r<='Z') || (*r>='a' && *r<='z'))r++;
                        if(*r==' ' || *r=='\0' || *r=='-'  || (*p>='0' && *p<='9')){
                            ki=r; /* kraj pronadjene rijeci */
                            pret=1; /* logicka promjenjiva postavljena na 1- pretpostavka da su rijeci jednake */
                        }
                    prvi=poc;
                    drugi=pi;
                    /* da li je trenutna rijec ista kao i ona sa kojom poredimo (bez obzira na velika i mala slova) */
                    while(drugi!=ki && drugi!='\0'){
                        pret_1=0;
                        pret_2=0;
                        if(*prvi>='A' && *prvi<='Z'){
                            *prvi+='a'-'A';
                            pret_1=1;
                        }
                        if(*drugi>='A' && *drugi<='Z'){
                            *drugi+='a'-'A';
                            pret_2=1;
                        }
                        if(*prvi!=*drugi)pret=0;
                        if(pret_1)*prvi-='a'-'A';
                        if(pret_2)*drugi-='a'-'A';
                        prvi++;
                        drugi++;
                    }
                    /* ako jeste (pret==1) uveca se broj njenog ponavljanja u stringu */
                    if(pret==1)brojac++;
                   
                }  
                if(*r=='\0')break;
                 r++;
                }
    
             }
             if(*p=='\0')break;
        }
        /* ako je broj ponavljanja trenutne veci od prethodnog maksimuma postavimo tu rijec kao rijec koju treba izbaciti */
        if(brojac>max)
        {
            max=brojac;
            pocetak_izbacivanja=poc;
            kraj_izbacivanja=kraj;
        }
        
    p++;    
    }

    /* ako se string sastoji od samo jedne rijeci */
    if(poc==niz)
    {
        do{
            *pocetak_izbacivanja=*kraj_izbacivanja;
        }while(*kraj_izbacivanja!='\0' && pocetak_izbacivanja++!=kraj_izbacivanja++);
    }
    
    p=niz;
    
    /* ako se nijedna rijec ne ponavlja izbaci prvu! */
    if(max==0){
        while(*p!='\0'){
             if(((*p>='A' && *p<='Z') || (*p>='a' && *p<='z')) && ((p==niz || *(p-1)==' ' || *(p-1)=='-' || (*(p-1)>='0' && *(p-1)<='9')))){
                 poc=p;
                 while(((*p>='A' && *p<='Z') || (*p>='a' && *p<='z')))p++;
                    if(*p==' ' || *p=='\0')kraj=p;
                    break;
            }
        p++;
        }
    
    /* izbacivanje */
        while(*kraj!='\0'){
                *poc=*kraj;
                poc++;
                kraj++;
            }
             if(*kraj=='\0')*poc='\0';
        }
        
    /* rijec koja se ponavlja */
    if(max!=0 && poc!=niz){
        /* kreiranje pomocnog stringa (cine ga samo mala slova) preko kojeg cemo traziti rijec za izbaciti */
        while(pocetak_izbacivanja!=kraj_izbacivanja){
            if(*pocetak_izbacivanja>='A' && *pocetak_izbacivanja<='Z')string[i]=(*pocetak_izbacivanja+32);
            else string[i]=*pocetak_izbacivanja;
            pocetak_izbacivanja++;
            i++;
        }
        string[i]='\0';

    p=niz;
    temp=string;
    
    while(*p!='\0'){
        poc=niz;
        kraj=niz;
        temp=string;
        pret=0;
        if((*p==*temp || *p==(*temp-32)) && (p==niz || *(p-1)==' ' || *(p-1)=='-' || (*(p-1)>='0' && *(p-1)<='9'))){
            poc=p;
            pomocna=p;
            while((*pomocna==*temp || *pomocna==(*temp-32)) && *temp!='\0'){
                pomocna++; temp++;
            }
            if(*temp=='\0' && (*pomocna==' ' || *pomocna=='\0' || *pomocna=='-' || (*pomocna>='0' && *pomocna<='9'))){
                kraj=pomocna;
                pret=1;
            }
            
        }
        /* ako je rijec pronadjena logicka promjenjiva je 1, slijedi izbacivanje */
        if(pret){
                while(*kraj!='\0'){
                    *poc++=*kraj++;
                }
                if(*kraj=='\0')*poc='\0';
        }
        p++;
       }
    
    }
       
    /*prazan string - ne radi nista */
    else{
        return q;
    }
return q;
}

int main(){
    char tekst[100];
    printf(""Unesi tekst: "");
    unesi(tekst,100);
    izbaci_najcescu(tekst);
    printf(""%s"",tekst);
    return 0;
}


"
656,98,98,0,72,A2016/Z3/Z2/student3301,A2016/Z3/Z2/student2086,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define brel 10
#define brel2 20
/* Funkcija ubaci */ 
void ubaci(int *niz,int velicina){
	int i,cifra,broj,broj2=0;
	for (i=velicina-1;i>=0;i--){    /* Pomjeranje clanova niza */ 
		*(niz+2*i)=*(niz+i);
	}
	for (i=0;i<velicina*2;i++){
		if (i%2==1){
			broj=*(niz+i-1);
			while (broj!=0){        /* Dodavanje clanova sabiranjem cifara prethodnog clana */ 
				cifra=broj%10;
				broj2+=cifra;
				broj/=10;
		    }
		    broj2=abs(broj2);
			*(niz+i)=broj2;
			broj2=0;
		}
	}
}

/* Funkcija izbaci */ 
/* Formiranje pretlji za prolazak po nizu i uporedivanje njegovih clanova sa Fibonaccijevim nizom, izbacivanje jednakih */
int izbaci(int *niz,int velicina){
	int i,j,m,prvi=0,drugi=1,slijedeci;
	for (i=0;i<velicina;i++){
		prvi=0;
		drugi=1;
		for (j=1;j<10000;j++){   
			if (j==1) slijedeci=j;                
			else {
				slijedeci=prvi+drugi;
				prvi=drugi;
				drugi=slijedeci;
			}
			if (*(niz+i)==slijedeci){
				for (m=i;m<velicina-1;m++){
						*(niz+m)=*(niz+m+1);
				}
				velicina--;
				i--;
				break;
			}
		}
	}
	return velicina;
}

int main() {
	int niz[20],i,n;
	
	/* Unos elemenata */ 
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0;i<10;i++){
		scanf(""%d"",&niz[i]);
	}
	
	/* Pozivanje funkcije ubaci */ 
	
	ubaci(niz,brel);
	
	/* Pozivanje funkcije izbaci */ 
		
	n=izbaci(niz,brel2);
	
	/* Ispis niza */
	printf (""Modificirani niz glasi: "");
	for (i=0;i<n;i++){
		if (i<(n-1)){
			printf (""%d, "",niz[i]);
	    }
	    else {
	    	printf (""%d. "",niz[i]);
	    }
	}
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define bre1 10
#define bre12 20
void ubaci (int *niz, int size) {
	int n, dig, num1, num2=0;
	for (n=size-1; n>=0; n--) {
		*(niz+2*n)=*(niz+n);
	}
	for (n=0; n<size*2; n++) {
		if (n%2==1) {
			num1=*(niz+n-1);
			while (num1!=0) {
				dig=num1%10;
				num2+=dig;
				num1/=10;
			}
			num2=abs(num2);
			*(niz+n)=num2;
			num2=0;
		}
	}
}

int izbaci (int*niz, int size) {
	int n, m, p, first=0, second=1, next;
	for (n=0; n<size; n++) {
		first=0;
		second=1;
		for (m=1; m<10000; m++) {
			if (m==1) {
				next=m;
			} else {
				next=first+second;
				first=second;
				second=next;
			}
			if (*(niz+n)==next) {
				for (p=n; p<size-1; p++) {
					*(niz+p)=*(niz+p+1);
				}
				size--;
				n--;
				break;
			}
		}
	}
	return size;
}

int main () {
	int niz[20], n, x;
	
	/*UNOS */
	printf (""Unesite niz od 10 brojeva: "");
	for (n=0; n<10; n++) {
		scanf (""%d"", &niz[n]);
	}
	
	/*POZIVANJE FUNKCIJE ""UBACI""*/
	ubaci (niz, bre1);
	
	/*POZIVANJE FUNKCIJE ""IZBACI""*/
	x=izbaci (niz, bre12);
	
	printf (""Modificirani niz glasi: "");
	for (n=0; n<x; n++) {
		if (n<(x-1)) {
			printf (""%d, "", niz[n]);
		} else {
			printf (""%d. "", niz[n]);
		}
	}
	return 0;
}"
664,15,15,0,14,A2016/Z4/Z3/student1317,A2016/Z4/Z3/student8540,"#include <stdio.h>

/* Funkcija trazi rijec na koju pokazuje pokazivac s2 u stringu na koji pokazuje s1,
vraca adresu sljedeceg znaka iza rijeci koju je nasao, ili NULL ako ne nadje rijec */
char* trazi_rijec(char* s1, char* s2)
{
	char* p=s1;
	char* q=s2;
	int pocetak=1;
	while(*s1!='\0')
	{
		while(*s1==' ') 
		{
			s1++;
			pocetak=0;
		}
		p=s1;
		q=s2;
		while(*p==*q)
		{
			p++;
			q++;
			if(pocetak==1 && *q=='\0' && (*p==' ' || *p=='\0')) return p;
			if(pocetak==0 && *q=='\0' && (*p==' ' || *p=='\0') && *(s1-1)==' ') return p;
		}
		if(*s1!='\0') 
		{
			s1++;
			pocetak=0;
		}
	}
	return NULL;
}

int broji_slova(char* s1)
{
	int brojac=0;
	while(*s1!='\0')
	{
		brojac++;
		s1++;
	}
	return brojac;
}

/* Funkcija poredi_rij poredi dva niza znakova,
vraca 1 ako su isti, a vraca 0 ako su razliciti */
int poredi_rij(char* s1, char* s2)
{
	char *p=s1, *q=s2;
	while(*q!='\0')
	{
		if(*p!=*q) return 0;
		p++;
		q++;
	}
	if(*p=='\0') return 1;
	else return 0;
}

/* Funkcija ubaci_rijec ubacuje znakove na adresu na koju pokazuje
pokazivac s1 sa adrese na koju pokazuje pokazivac s2 */
void ubaci_rijec(char* s1, char* s2, int duzina)
{
	char *kraj=s1, *temp1=s1, *temp2=s2, *temp3=s1;
	while(*kraj!='\0') kraj++;
	temp3=kraj+duzina;
	
	while(kraj>s1)
	{
		*(kraj+duzina)=*kraj;
		kraj--;
	}
	while(*temp2!='\0')
	{
		*temp1=*temp2;
		temp1++;
		temp2++;
	}
	if(temp1<temp3) *temp1=' ';
	else *temp1='\0';
}

char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci)
{
	char *poc_tekst=tekst, *adr_rij=tekst, *temp_pok=tekst;
	int i=0, praz_zam=1, praz_rij=0, br_slova=0;
	
	if(broj_rijeci<1) return poc_tekst;
	for(i=0; i<broj_rijeci; i++)
	{
		if(zamjene[i]!='\0') praz_zam=0;
		if(rijeci[i]!='\0') praz_rij=0;
	}
	if(*tekst=='\0' || (praz_zam==1 && praz_rij==1)) return poc_tekst;
	for(i=0; i<broj_rijeci; i++)
	{
		if(poredi_rij(rijeci[i], zamjene[i])) continue;
		do
		{
			adr_rij=trazi_rijec(tekst, rijeci[i]);
			if(adr_rij!=NULL)
			{
				br_slova=broji_slova(rijeci[i]);
				if(br_slova>0)
				{
					/* Izbacivanje rijeci */
					temp_pok=adr_rij-br_slova;
					while(*adr_rij!='\0')
					{
						*(adr_rij-br_slova)=*adr_rij;
						adr_rij++;
					}
					*(adr_rij-br_slova)=*adr_rij;
					br_slova=0;
				}
				adr_rij=temp_pok;
				br_slova=broji_slova(zamjene[i]);
				if(br_slova>0)
				{
					ubaci_rijec(adr_rij, zamjene[i], br_slova);
					br_slova=0;
				}
				tekst=adr_rij;
			}
		} while(adr_rij!=NULL);
		
		if(i==broj_rijeci) *tekst='\0';
		else tekst=poc_tekst;
	}
	if(praz_zam==1 && praz_rij==0) *tekst='\0';
	
	return poc_tekst;
}

int main() 
{
	char* rijeci[2]={""beli"", ""sneg""};
	char* zamjene[2]={""bijeli"", ""snijeg""};
	char tekst[100]=""beli sneg je pokrio beli breg"";
	
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
	return 0;
}
","#include <stdio.h>
int ifchange(char* t, char* r ){
	char* b=t;
	char* br=r;
	int m=1;
	
	while(*t!='\0' && *r!='\0'){
		if(*t!=*r)m=0;
		t++;
		r++;
	}
	if((*t!=' ' && *t!='\0') || *r!='\0')m=0;
	t=b;
	r=br;
	return m;
}
void change(char* txt, char* w, char*nw){
	char* tmp=txt;
	char* wtmp=w, *ntmp=nw, *c=txt;
	int m=0, i, cnt=1;
	while(*txt!='\0'){
		cnt=0;
		while(*txt!='\0' && *txt!=*w){
			txt++;
		}
		if(*txt!='\0' && (txt==tmp || *(txt-1)==' ') && ifchange(txt, w)){
			
			while(*nw!='\0'){
				if(*txt==' ' ||*txt=='\0' ){
					c=txt;
					while(*txt!='\0'){txt++;}
					txt++;
					while(txt>c){
						*txt=*(txt-1);
						txt--;
					}
			}
			*txt=*nw;
			txt++;
			nw++;
		}
		cnt=1;
	}
	if(*txt!=' ' && *txt!='\0' && cnt==1){
		c=txt;
		while(*txt!=' ' && *txt!='\0'){
			m++;
			txt++;
		}
		txt=c;
		for(i=0;i<m;i++){
			txt=c;
			while(*txt!='\0'){
				*txt=*(txt+1);
				txt++;
			}
		}
		txt=c;
	}
	if(*txt!=' ' && *txt!='\0')txt++;
	w=wtmp;
	nw=ntmp;
}
txt=tmp;
w=wtmp;
nw=ntmp;
}

char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	char* tmptxt=tekst;
	int i;
	for(i=0;i<broj_rijeci;i++){
		tekst=tmptxt;
		while(*tekst!='\0'){
			while(*tekst!='\0' && *tekst==' '){tekst++;	}
			if(ifchange(tekst, rijeci[i])){
				
				change(tekst, rijeci[i], zamjene[i]);
			}
			while(*tekst!=' ' && *tekst!='\0')tekst++;
		}
	}return tmptxt;
}
int main() {
	char* rijeci[2]={"""", """"};
	char* zamjene[2]={"""", """"};
	char tekst[100]="""";
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
	
	return 0;
	
}

"
668,96,96,0,43,A2016/Z1/Z4/student9163,A2016/Z1/Z4/student7193,"#include <stdio.h>

int main() {
	int n,i,j;
	
		
	   do
	    {
	    printf(""Unesite broj n: "");
		scanf(""%d"",&n);
		if( n<=0 || n>50)
		printf(""Pogresan unos\n"");
	    }while(n<=0 || n>50);
	    if(n==1) printf(""***"");
	else
	{
	for(i=0; i<n; i++)
	 {
	 	for(j=0; j<(n-1); j++)
	 	{
	 	if(i==j)
	 	printf(""*"");
	 	else
	 	printf("" "");
	 	}
	 	for (j=n; j<2*n; j++)
	 	 {
	 		if(j==2*n-i-1)
	 		printf(""*"");
	 		else
	 		printf("" "");
	   	}
	   	for(j=1; j<n-1; j++)
	   	{
	   		if(i==j)
	   		printf(""*"");
	   		else
	   		printf("" "");
	   	}
	   	for(j=n; j<2*n; j++)
	   	{
	   		if(j==2*n-1-i)
	   		printf(""*"");
	   		else 
	   		printf("" "");
	    }
	 printf(""\n"");
	 }
	 
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	
		
	   do
	    {
	    printf(""Unesite broj n: "");
		scanf(""%d"",&n);
		if( n<=0 || n>50)
		printf(""Pogresan unos\n"");
	    }while(n<=0 || n>50);
	    if(n==1) printf(""***"");
	else
	{
	for(i=0; i<n; i++)
	 {
	 	for(j=0; j<(n-1); j++)
	 	{
	 	if(i==j)
	 	printf(""*"");
	 	else
	 	printf("" "");
	 	}
	 	for (j=n; j<2*n; j++)
	 	 {
	 		if(j==2*n-i-1)
	 		printf(""*"");
	 		else
	 		printf("" "");
	   	}
	   	for(j=1; j<n-1; j++)
	   	{
	   		if(i==j)
	   		printf(""*"");
	   		else
	   		printf("" "");
	   	}
	   	for(j=n; j<2*n; j++)
	   	{
	   		if(j==2*n-1-i)
	   		printf(""*"");
	   		else 
	   		printf("" "");
	    }
	 printf(""\n"");
	 }
	 
	}
	return 0;
}
"
678,99,99,0,37,A2016/Z2/Z4/student7119,A2016/Z2/Z4/student4128,"#include <stdio.h>

int main() {
	int m,n,i,j,teplicova,cirkularna;
	double mat[100][100];
//	printf(""Zadaća 2, Zadatak 4"");
	do{
	g:	printf(""Unesite M i N: "");
	scanf(""%d %d"",&m,&n);
	if(m>100 || m<=0 || n>100 || n<=0) {
		printf(""Pogresan unos!\n"");
		 goto g;
	}
	}
	while(m>100 || m<0 || n>100 || n<0);
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++) {
		for(j=0;j<n;j++) {
			scanf(""%lf"",&mat[i][j]);
		}
	}
	
	cirkularna=1;
	teplicova=1;
	for(i=0;i<m-1;i++) {
		for(j=0;j<n-1; j++) {
		if( mat[i][j]!=mat[i+1][j+1] || mat[i][n-1]!=mat[i+1][0] ) {
		cirkularna=0;
			}
		if( mat[i][j]!=mat[i+1][j+1]) {
		teplicova=0;
			}
		}
	}
	if(n==1 && m!=1) printf(""Matrica je Teplicova"");
	 else if(cirkularna==1) printf(""Matrica je cirkularna"");
	else if(teplicova==1) printf(""Matrica je Teplicova"");
	else printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
","#include <stdio.h>

int main() {
	int m,n,i,j,teplicova,cirkularna;
	double mat[100][100];
//	printf(""Zadaća 2, Zadatak 4"");
	do{
	g:	printf(""Unesite M i N: "");
	scanf(""%d %d"",&m,&n);
	if(m>100 || m<=0 || n>100 || n<=0) {
		printf(""Pogresan unos!\n"");
		 goto g;
	}
	}
	while(m>100 || m<0 || n>100 || n<0);
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++) {
		for(j=0;j<n;j++) {
			scanf(""%lf"",&mat[i][j]);
		}
	}
	
	cirkularna=1;
	teplicova=1;
	for(i=0;i<m-1;i++) {
		for(j=0;j<n-1; j++) {
		if( mat[i][j]!=mat[i+1][j+1] || mat[i][n-1]!=mat[i+1][0] ) {
		cirkularna=0;
			}
		if( mat[i][j]!=mat[i+1][j+1]) {
		teplicova=0;
			}
		}
	}
	if(n==1 && m!=1) printf(""Matrica je Teplicova"");
	 else if(cirkularna==1) printf(""Matrica je cirkularna"");
	else if(teplicova==1) printf(""Matrica je Teplicova"");
	else printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
"
684,14,14,0,14,A2016/Z4/Z3/student6877,A2016/Z4/Z3/student1317,"#include <stdio.h>
int slovo(char c){
	if((c>=65 && c<=90)||(c>=97 && c<=122)) return 1;
	return 0;
}
int mjenjati(char *tekst, char *rijec){
	char *pocetak=tekst;
	char *pocetakrijeci=rijec;
	int isto=1;
	while (*tekst!='\0' && *rijec!='\0') {
		if(*tekst!=*rijec) isto=0;
		tekst++;
		rijec++;
	}
	if((*tekst!='\0' && *tekst!=' ') || (*rijec!='\0' )) isto=0;
	tekst=pocetak;
	rijec=pocetakrijeci;
	return isto;
}
void zamjeni(char* tekst, char* rijec, char* novarijec){
	char* temp=tekst,*a=tekst,*rijtemp=rijec,*novatemp=novarijec;
	int visak=0,i,nastavi=1;
	while(*tekst!='\0'){
		nastavi=0;
		while(*tekst!=*rijec && *tekst!='\0'){
			tekst++;
		}
		if(*tekst!='\0' && (tekst==temp || *(tekst-1)==' ') && mjenjati(tekst,rijec)){
		   while(*novarijec!='\0'){
		   	if(*tekst==' '|| *tekst=='\0'){
		   		a=tekst;
		   		while(*tekst!='\0') tekst++;
		   		tekst++;
		   		while(tekst>a){
		   			*tekst=*(tekst-1);
		   			tekst--;
		   		}
		   	}
		   	*tekst=*novarijec;
		   	tekst++;
		   	novarijec++;
		   }	
		   nastavi=1;
		}
		if(*tekst!=' ' && *tekst!='\0' && nastavi==1){
			a=tekst;
			while(*tekst!=' ' && *tekst!='\0'){
				visak++;
				tekst++;
			}
		
		tekst=a;
		for(i=0;i<visak;i++){
			tekst=a;
			while(*tekst!='\0'){
				*tekst=*(tekst+1);
				tekst++;
			}
		}
		tekst=a;
	}
	if(*tekst!=' ' && *tekst!='\0') tekst++;
	rijec=rijtemp;
	novarijec=novatemp;
	}
	tekst=temp;
	rijec=rijtemp;
	novarijec=novatemp;
}
char* zamjena_rijeci(char* tekst, char**rijeci, char**zamjene , int broj_rijec){
	char* temptekst=tekst;
	int i;
	for(i=0;i<broj_rijec;i++){
		tekst=temptekst;
		while(*tekst!='\0'){
			while(*tekst==' ' && *tekst!='\0') tekst++;
			if(mjenjati(tekst,rijeci[i])){
				zamjeni(tekst,rijeci[i],zamjene[i]);
			}
			while(*tekst!=' ' && *tekst!='\0') tekst++;
		}
	}
	return temptekst;
}

int main() {
	char* rijeci[2] = {"""", """"};
	char* zamjene[2] = {"""", """"};
	char tekst[100] = """";
	printf(""%s"",zamjena_rijeci(tekst,rijeci,zamjene,2));
	return 0;
}
","#include <stdio.h>

/* Funkcija trazi rijec na koju pokazuje pokazivac s2 u stringu na koji pokazuje s1,
vraca adresu sljedeceg znaka iza rijeci koju je nasao, ili NULL ako ne nadje rijec */
char* trazi_rijec(char* s1, char* s2)
{
	char* p=s1;
	char* q=s2;
	int pocetak=1;
	while(*s1!='\0')
	{
		while(*s1==' ') 
		{
			s1++;
			pocetak=0;
		}
		p=s1;
		q=s2;
		while(*p==*q)
		{
			p++;
			q++;
			if(pocetak==1 && *q=='\0' && (*p==' ' || *p=='\0')) return p;
			if(pocetak==0 && *q=='\0' && (*p==' ' || *p=='\0') && *(s1-1)==' ') return p;
		}
		if(*s1!='\0') 
		{
			s1++;
			pocetak=0;
		}
	}
	return NULL;
}

int broji_slova(char* s1)
{
	int brojac=0;
	while(*s1!='\0')
	{
		brojac++;
		s1++;
	}
	return brojac;
}

/* Funkcija poredi_rij poredi dva niza znakova,
vraca 1 ako su isti, a vraca 0 ako su razliciti */
int poredi_rij(char* s1, char* s2)
{
	char *p=s1, *q=s2;
	while(*q!='\0')
	{
		if(*p!=*q) return 0;
		p++;
		q++;
	}
	if(*p=='\0') return 1;
	else return 0;
}

/* Funkcija ubaci_rijec ubacuje znakove na adresu na koju pokazuje
pokazivac s1 sa adrese na koju pokazuje pokazivac s2 */
void ubaci_rijec(char* s1, char* s2, int duzina)
{
	char *kraj=s1, *temp1=s1, *temp2=s2, *temp3=s1;
	while(*kraj!='\0') kraj++;
	temp3=kraj+duzina;
	
	while(kraj>s1)
	{
		*(kraj+duzina)=*kraj;
		kraj--;
	}
	while(*temp2!='\0')
	{
		*temp1=*temp2;
		temp1++;
		temp2++;
	}
	if(temp1<temp3) *temp1=' ';
	else *temp1='\0';
}

char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci)
{
	char *poc_tekst=tekst, *adr_rij=tekst, *temp_pok=tekst;
	int i=0, praz_zam=1, praz_rij=0, br_slova=0;
	
	if(broj_rijeci<1) return poc_tekst;
	for(i=0; i<broj_rijeci; i++)
	{
		if(zamjene[i]!='\0') praz_zam=0;
		if(rijeci[i]!='\0') praz_rij=0;
	}
	if(*tekst=='\0' || (praz_zam==1 && praz_rij==1)) return poc_tekst;
	for(i=0; i<broj_rijeci; i++)
	{
		if(poredi_rij(rijeci[i], zamjene[i])) continue;
		do
		{
			adr_rij=trazi_rijec(tekst, rijeci[i]);
			if(adr_rij!=NULL)
			{
				br_slova=broji_slova(rijeci[i]);
				if(br_slova>0)
				{
					/* Izbacivanje rijeci */
					temp_pok=adr_rij-br_slova;
					while(*adr_rij!='\0')
					{
						*(adr_rij-br_slova)=*adr_rij;
						adr_rij++;
					}
					*(adr_rij-br_slova)=*adr_rij;
					br_slova=0;
				}
				adr_rij=temp_pok;
				br_slova=broji_slova(zamjene[i]);
				if(br_slova>0)
				{
					ubaci_rijec(adr_rij, zamjene[i], br_slova);
					br_slova=0;
				}
				tekst=adr_rij;
			}
		} while(adr_rij!=NULL);
		
		if(i==broj_rijeci) *tekst='\0';
		else tekst=poc_tekst;
	}
	if(praz_zam==1 && praz_rij==0) *tekst='\0';
	
	return poc_tekst;
}

int main() 
{
	char* rijeci[2]={""beli"", ""sneg""};
	char* zamjene[2]={""bijeli"", ""snijeg""};
	char tekst[100]=""beli sneg je pokrio beli breg"";
	
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
	return 0;
}
"
686,92,92,0,32,A2016/Z2/Z4/student6303,A2016/Z2/Z4/student7671,"#include <stdio.h>

int main() {
	int M, N;
	int i, j, rez=0, tacno_tepl=1, tacno_cirk=1;
	double A[100][100]={{0}};
	do {
	    printf(""Unesite M i N: "");
	    scanf(""%d %d"", &M, &N);
	    if(!(M>0 && M<101 && N>0 && N<101 ))printf(""Pogresan unos!\n"");
	    rez=M-N;
	    if(rez<0) rez=-rez;
	}while(M<1 || M>100 || N<1 ||N>100);
	    printf(""Unesite elemente matrice: "");
	    for(i=0;i<M;i++)
	    	for(j=0;j<N;j++)
	    		scanf(""%lf"",&A[i][j]);
	    for(i=0; i<M-1; i++) {
	        for(j=0; j<N-1; j++) //{
	            //scanf(""%d"", &A[i][j]);
	            if(A[i][j]!=A[i+1][j+1]) tacno_tepl=0; 
	            if(A[i][N-1]!=A[i+1][0] || A[0][rez]!=A[M-1][N-1]) tacno_cirk=0;
	          //  else if(tacno_tepl==1)  { printf(""Matrica je Teplicova""); }
	          //  else if(tacno_cirk==1) { printf(""Matrica je cirkularna""); }
	           // }
	        }
	    if(tacno_tepl==0) {
	    	tacno_cirk=0;
	    for(i=1; i<M; i++) {
	            if(A[i][0]!=A[0][M-i]) tacno_cirk=0;
	    }
	}
	if(tacno_cirk==1)printf(""Matrica je cirkularna"");
	else if(tacno_tepl==1)printf(""Matrica je Teplicova"");
	else printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}","#include <stdio.h>

int main() {
	int M, N, i, j, teplicova=1, cirkularna=1, ukupno=0;
	double mat[100][100]={{0}};
	do {
		printf (""\nUnesite M i N: "");
		scanf (""%d %d"", &M, &N);
		if(!(M>0 && M<101 && N>0 && N<101))
		printf(""Pogresan unos!"");
		ukupno=M-N;
		if(ukupno<0) ukupno=-ukupno;
	} while (M<1 || M>100 || N<1 || N>100);
	printf (""Unesite elemente matrice: "");
	for(i=0;i<M;i++) {
		for(j=0;j<N;j++) {
			scanf(""%lf"", &mat[i][j]);
		}
	}
	for(i=0;i<M-1;i++) {
		for(j=0;j<N-1;j++) {
			if(mat[i][j]!=mat[i+1][j+1]) teplicova=0;
			else if (mat[i][N-1]!=mat[i+1][0] || mat[0][ukupno]!=mat[M-1][N-1]) cirkularna=0;
		}
	}
	if(teplicova==0) {
		cirkularna=0;
			for(i=1;i<M;i++) {
				if(mat[i][0]!=mat[0][M-i])
				cirkularna=0;
			}
	}
	if(cirkularna==1) printf(""Matrica je cirkularna"");
	else if(teplicova==1) printf(""Matrica je Teplicova"");
	else printf(""Matrica nije ni cirkularna ni Teplicova"");
	
	return 0;
}
"
687,99,99,0,75,A2016/Z4/Z3/student5744,A2016/Z4/Z3/student2675,"#include <stdio.h>

char* zamjena_rijeci(char* s, char** rijeci, char** zamjene, int broj_rijeci)
{
    char* pom=s;
    char* poc;
    char* kraj;
    int i,j,t,d,duzina;
    for(d=0;d<broj_rijeci;d++)
    {
    	s=pom;
	while(*s!='\0')
	{
	    //dolazi do rijeci
	    while(*s==' ')
	    {
	        s++;
	    }
	    for(i=0;i<broj_rijeci;i++)
	    {
	        kraj=s;
	        poc=s;
	        t=1;
	        if(rijeci[i][0]=='\0') t=0;
	        //provjerava da li rijec treba izbaciti
	        for(j=0;rijeci[i][j]!='\0'&&*kraj!='\0'&&*kraj!=' ';j++,kraj++)
	        {
	            if(rijeci[i][j]!=*kraj) t=0;
	        }
	        if(s!=pom)
	        {
	            if(*(s-1)!=' ') t=0;
	        }
	        if(rijeci[i][j]!='\0'||(*kraj!='\0'&&*kraj!=' ')) t=0;
	        //ako treba
	        if(t)
	        {
	            //prvo obrise tu rijec
	            while(*kraj!='\0')
	            {
	                *(poc++)=*(kraj++);
	            }
	            *poc='\0';
	            duzina=0;
	            //onda prosiri string za unos zamjene
	            for(j=0;zamjene[i][j]!='\0'&&zamjene[i][j]!=' ';j++)
	            {
	                duzina++;
	            }
                while(poc!=s)
                {
                    *(poc+duzina)=*poc;
                    poc--;
                }
                *(poc+duzina)=*poc;
                //unese zamjenu
                for(j=0;zamjene[i][j]!='\0'&&zamjene[i][j]!=' ';j++,s++)
                {
                    *s=zamjene[i][j];
                }
	        }
	    }
	    if(*s!='\0') s++;
	}
    }
	return pom;
}

int main()
{
    char* rijeci[2] = { ""ss"", ""ss"" };
char* zamjene[2] = { ""bijeli"", ""snijeg"" };
char tekst[100] = "" s ss s ss s s  s s s"";
printf(""%s\n"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
/* Da li je promijenjen i polazni string? */
printf(""%s"", tekst);
	return 0;
}
","#include <stdio.h>

char* zamjena_rijeci(char* s, char** rijeci, char** zamjene, int broj_rijeci)
{
    char* pom=s;
    char* poc;
    char* kraj;
    int i,j,t,d,duzina;
    for(d=0;d<broj_rijeci;d++)
    {
    	s=pom;
	while(*s!='\0')
	{
	    //dolazi do rijeci
	    while(*s==' ')
	    {
	        s++;
	    }
	    for(i=0;i<broj_rijeci;i++)
	    {
	        kraj=s;
	        poc=s;
	        t=1;
	        if(rijeci[i][0]=='\0') t=0;
	        //provjerava da li rijec treba izbaciti
	        for(j=0;rijeci[i][j]!='\0'&&*kraj!='\0'&&*kraj!=' ';j++,kraj++)
	        {
	            if(rijeci[i][j]!=*kraj) t=0;
	        }
	        if(s!=pom)
	        {
	            if(*(s-1)!=' ') t=0;
	        }
	        if(rijeci[i][j]!='\0'||(*kraj!='\0'&&*kraj!=' ')) t=0;
	        //ako treba
	        if(t)
	        {
	            //prvo obrise tu rijec
	            while(*kraj!='\0')
	            {
	                *(poc++)=*(kraj++);
	            }
	            *poc='\0';
	            duzina=0;
	            //onda prosiri string za unos zamjene
	            for(j=0;zamjene[i][j]!='\0'&&zamjene[i][j]!=' ';j++)
	            {
	                duzina++;
	            }
                while(poc!=s)
                {
                    *(poc+duzina)=*poc;
                    poc--;
                }
                *(poc+duzina)=*poc;
                //unese zamjenu
                for(j=0;zamjene[i][j]!='\0'&&zamjene[i][j]!=' ';j++,s++)
                {
                    *s=zamjene[i][j];
                }
	        }
	    }
	    if(*s!='\0') s++;
	}
    }
	return pom;
}

int main()
{
    char* rijeci[2] = { ""ss"", ""ss"" };
char* zamjene[2] = { ""bijeli"", ""snijeg"" };
char tekst[100] = "" s ss s ss s s  s s s"";
printf(""%s\n"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
/* Da li je promijenjen i polazni string? */
printf(""%s"", tekst);
	return 0;
}
"
697,99,99,0,160,A2016/Z1/Z1/student6720,A2016/Z1/Z1/student4628,"#include <stdio.h>

int main() {
double a1, b1, c1, d1, e1, a2, b2, c2, d2, e2, a3, b3, c3, d3, e3, s1, s2, s3, oc1, oc2, oc3;

printf(""Unesite bodove za Tarika:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a1);
if(a1<0||a1>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b1);
if(b1<0||b1>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c1);
if(c1<0||c1>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d1);
if(d1<0||d1>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e1);
if(e1<0||e1>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

printf(""Unesite bodove za Bojana:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a2);
if(a2<0||a2>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b2);
if(b2<0||b2>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c2);
if(c2<0||c2>10){
	printf(""Neispravan broj brodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d2);
if(d2<0||d2>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e2);
if(e2<0||e2>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

printf(""Unesite bodove za Mirzu:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a3);
if(a3<0||a3>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b3);
if(b3<0||b3>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c3);
if(c3<0||c3>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d3);
if(d3<0||d3>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e3);
if(e3<0||e3>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

s1=a1+b1+c1+d1+e1;
s2=a2+b2+c2+d2+e2;
s3=a3+b3+c3+d3+e3;

if(s1<55)
oc1=5;
else if(s1>=55 && s1<65)
oc1=6;
else if(s1>=65 && s1<75)
oc1=7;
else if(s1>=75 && s1<85)
oc1=8;
else if(s1>=85 && s1<92)
oc1=9;
else if(s1>=92 && s1<=100)
oc1=10;

if(s2<55)
oc2=5;
if(s2>=55 && s2<65)
oc2=6;
else if(s2>=65 && s2<75)
oc2=7;
else if(s2>=75 && s2<85)
oc2=8;
else if(s2>=85 && s2<92)
oc2=9;
else if(s2>=92 && s2>=100)
oc2=10;

if(s3<55)
oc3=5;
else if(s3>=55 && s3<65)
oc3=6;
else if(s3>=65 && s3<75)
oc3=7;
else if(s3>=75 && s3<85)
oc3=8;
else if(s3>=85 && s3<92)
oc3=9;
else if(s3>=92 && s3<=100)
oc3=10;


if(s1>=55 && s2>=55 && s3>=55){
	printf(""Sva tri studenta su polozila."");
	if((oc1==oc2) && (oc2==oc3))
	{
		printf(""\nSva tri studenta imaju istu ocjenu."");
	}else if((oc1==oc2) || (oc2==oc3) && (oc1==oc3)){
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	}else {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	}

} else if((s1>=55 && s2<55 && s3<55) || (s1<55 && s2>=55 && s3<55) || (s1<55 && s2<55 && s3>=55)){
	printf(""Jedan student je polozio."");
} else if ((s1>=55 && s2>=55 && s3<55) || (s1<55 && s2>=55 && s3>=55) || (s1>=55 && s2<55 && s3>=55)){
	printf(""Dva studenta su polozila."");
}else{
	printf(""Nijedan student nije polozio."");

}

return 0;

}","#include <stdio.h>

int main() {
double a1, b1, c1, d1, e1, a2, b2, c2, d2, e2, a3, b3, c3, d3, e3, s1, s2, s3, oc1, oc2, oc3;

printf(""Unesite bodove za Tarika:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a1);
if(a1<0||a1>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b1);
if(b1<0||b1>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c1);
if(c1<0||c1>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d1);
if(d1<0||d1>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e1);
if(e1<0||e1>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

printf(""Unesite bodove za Bojana:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a2);
if(a2<0||a2>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b2);
if(b2<0||b2>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c2);
if(c2<0||c2>10){
	printf(""Neispravan broj brodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d2);
if(d2<0||d2>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e2);
if(e2<0||e2>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

printf(""Unesite bodove za Mirzu:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a3);
if(a3<0||a3>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b3);
if(b3<0||b3>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c3);
if(c3<0||c3>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d3);
if(d3<0||d3>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e3);
if(e3<0||e3>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

s1=a1+b1+c1+d1+e1;
s2=a2+b2+c2+d2+e2;
s3=a3+b3+c3+d3+e3;

if(s1<55)
oc1=5;
else if(s1>=55 && s1<65)
oc1=6;
else if(s1>=65 && s1<75)
oc1=7;
else if(s1>=75 && s1<85)
oc1=8;
else if(s1>=85 && s1<92)
oc1=9;
else if(s1>=92 && s1<=100)
oc1=10;

if(s2<55)
oc2=5;
if(s2>=55 && s2<65)
oc2=6;
else if(s2>=65 && s2<75)
oc2=7;
else if(s2>=75 && s2<85)
oc2=8;
else if(s2>=85 && s2<92)
oc2=9;
else if(s2>=92 && s2>=100)
oc2=10;

if(s3<55)
oc3=5;
else if(s3>=55 && s3<65)
oc3=6;
else if(s3>=65 && s3<75)
oc3=7;
else if(s3>=75 && s3<85)
oc3=8;
else if(s3>=85 && s3<92)
oc3=9;
else if(s3>=92 && s3<=100)
oc3=10;


if(s1>=55 && s2>=55 && s3>=55){
	printf(""Sva tri studenta su polozila."");
	if((oc1==oc2) && (oc2==oc3))
	{
		printf(""\nSva tri studenta imaju istu ocjenu."");
	}else if((oc1==oc2) || (oc2==oc3) && (oc1==oc3)){
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	}else {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	}

} else if((s1>=55 && s2<55 && s3<55) || (s1<55 && s2>=55 && s3<55) || (s1<55 && s2<55 && s3>=55)){
	printf(""Jedan student je polozio."");
} else if ((s1>=55 && s2>=55 && s3<55) || (s1<55 && s2>=55 && s3>=55) || (s1>=55 && s2<55 && s3>=55)){
	printf(""Dva studenta su polozila."");
}else{
	printf(""Nijedan student nije polozio."");

}

return 0;

}"
712,97,97,0,86,A2016/Z3/Z2/student2464,A2016/Z3/Z2/student2676,"#include <stdio.h>
#include <stdlib.h>

void ubaci(int* niz, int duz)
{
	int* clan;
	clan=niz;
	while(clan<niz+duz)
	{
		
		// zbrajanje cifara clana niza
		
		int broj=0;
		int bniz=abs(*clan);
		while(bniz>0)
		{
			broj+=(bniz%10);
			bniz/=10;
		}
		
		// pomjeranje clanova niza
		
		int* qclan;
		qclan=niz+duz;
		while(qclan>clan)
		{
			*qclan=*(qclan-1);
			qclan--;
		}
		
		// ubacivanje novog clana niza
		
		*(clan+1)=broj;
		
		clan+=2;
		duz+=1;
	}
}

int izbaci(int *niz, int duz)
{
	int* clan;
	clan=niz;
	while(clan<niz+duz)
	{
		// provjeravanje da li je clan niza fibonaccijev broj
		int ftrue=0, pprosli=0, prosli=1, fbroj=1;
		while(fbroj<=*clan)
		{
			if(*clan==fbroj) ftrue=1;
			pprosli=prosli;
			prosli=fbroj;
			fbroj=prosli+pprosli;
		}
		if(ftrue)
		{
			// izbacivanje clana iz niza
			int *qclan;
			qclan=clan;
			while(qclan<niz+duz-1)
			{
				*qclan=*(qclan+1);
				qclan++;
			}
			duz--;
			clan--;
		}
		clan++;
	}
	return duz;
}

int main() 
{
	int niz[301], duz;
	int i;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	{
		scanf(""%d"", &niz[i]);
	}
	ubaci(niz, 10);
	duz=izbaci(niz, 20);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<duz;i++)
	{
		printf(""%d"", niz[i]);
		if(i==duz-1) printf(""."");
		else printf("", "");
	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

void ubaci(int* niz, int duz)
{
	int* clan;
	clan=niz;
	while(clan<niz+duz)
	{
		
		// zbrajanje cifara clana niza
		
		int broj=0;
		int bniz=abs(*clan);
		while(bniz>0)
		{
			broj+=(bniz%10);
			bniz/=10;
		}
		
		// pomjeranje clanova niza
		
		int* qclan;
		qclan=niz+duz;
		while(qclan>clan)
		{
			*qclan=*(qclan-1);
			qclan--;
		}
		
		// ubacivanje novog clana niza
		
		*(clan+1)=broj;
		
		clan+=2;
		duz+=1;
	}
}

int izbaci(int *niz, int duz)
{
	int* clan;
	clan=niz;
	while(clan<niz+duz)
	{
		// provjeravanje da li je clan niza fibonaccijev broj
		int ftrue=0, pprosli=0, prosli=1, fbroj=1;
		while(fbroj<=*clan)
		{
			if(*clan==fbroj) ftrue=1;
			pprosli=prosli;
			prosli=fbroj;
			fbroj=prosli+pprosli;
		}
		if(ftrue)
		{
			// izbacivanje clana iz niza
			int *qclan;
			qclan=clan;
			while(qclan<niz+duz-1)
			{
				*qclan=*(qclan+1);
				qclan++;
			}
			duz--;
			clan--;
		}
		clan++;
	}
	return duz;
}

int main() 
{
	int niz[301], duz;
	int i;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	{
		scanf(""%d"", &niz[i]);
	}
	ubaci(niz, 10);
	duz=izbaci(niz, 20);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<duz;i++)
	{
		printf(""%d"", niz[i]);
		if(i==duz-1) printf(""."");
		else printf("", "");
	}
	return 0;
}
"
726,89,89,0,61,A2016/Z1/Z3/student4420,A2016/Z1/Z3/student7496,"#include <stdio.h>

int main() {
	int c=0,p=0,b=0,s=0,v=0,uk=0;
	float postotak;
	char boja=' ';
	printf(""Unesite vozila: "");
//	scanf(""%c"",&boja);
	while(boja!='k' || boja!='K')
	{
		scanf(""%c"",&boja);
		if(boja=='k' || boja=='K')
		{
			goto l1;
		}
		if(boja=='v' || boja=='V')
		{
			v++;
			uk++;
		}
		if(boja=='p' || boja=='P')
		{
			p++;
			uk++;
		}
		if(boja=='c' || boja=='C')
		{
			c++;
			uk++;
		}
		if(boja=='b' || boja=='B')
		{
			b++;
			uk++;
		}
		if(boja=='s' || boja=='S')
		{
			s++;
			uk++;
		}
		if(boja!='c' && boja!='s' && boja!='v' && boja!='p' && boja!='b' && boja!='C' && boja!='S' && boja!='V' && boja!='P' && boja!='B' && boja!='k' && boja!='K')
		{
			printf(""Neispravan unos\n"");
		}
	}
	l1:
	printf(""Ukupno evidentirano %d vozila.\n"",uk);
	if(uk==0)
	{
		printf(""Najpopularnija boja je crna (0.00%%)."");
		return 0;
	}
	if(c>s && c>v && c>p && c>b)
	{
		postotak=((float)c/uk)*100;
		printf(""Najpopularnija boja je crna (%.2f%%)."",postotak);
		return 0;
	}
	if(s>c && s>v && s>p && s>b)
	{ 
		postotak=((float)s/uk)*100;
		printf(""Najpopularnija boja je siva (%.2f%%)."",postotak);
		return 0;
	}
	if(v>s && v>c && v>p && v>b)
	{
		postotak=((float)v/uk)*100;
		printf(""Najpopularnija boja je crvena (%.2f%%)."",postotak);
		return 0;
	}
	if(p>s && p>v && p>c && p>b)
	{
		postotak=((float)p/uk)*100;
		printf(""Najpopularnija boja je plava (%.2f%%)."",postotak);
		return 0;
	}
	if(b>s && b>v && b>p && b>c)
	{
		postotak=((float) b/uk)*100;
		printf(""Najpopularnija boja je bijela (%.2f%%)."",postotak);
		return 0;
	}
	if(c==s)
	{
	postotak=((float)c/uk)*100;
		printf(""Najpopularnija boja je crna (%.2f%%)."",postotak);	
	}

	if(s==v && v==p)
	{
	postotak=((float)s/uk)*100;
	printf(""Najpopularnija boja je siva (%.2f%%)."",postotak);	
	}
	
	return 0;
}","#include <stdio.h>

int main() {
	int c=0,p=0,b=0,s=0,v=0,uk=0;
	float procenat;
	char boja=' ';
	printf(""Unesite vozila: "");
	while(boja!='k' || boja!='K'){
		scanf(""%c"",&boja);
		     if(boja=='c' || boja=='C') {
		    	c++;
		    	uk++;
		     }
		     if(boja=='b' || boja=='B') {
		    	b++;
		    	uk++;
		     }
		     if(boja=='s' || boja=='S') {
		    	s++;
		    	uk++;
		     }
		     if(boja=='v' || boja=='V') {
		    	v++;
		    	uk++;
		     }
		     if(boja=='p' || boja=='P') {
		    	p++;
		    	uk++;
		     }
		     
		     if(boja!='c' && boja!='C' && boja!='b' && boja!='B' && boja!='s' && boja!='S' && boja!='v' && boja!='V' && boja!='p' && boja!='P' && boja!='k' && boja!='K') {
		     	printf(""Neispravan unos\n"");
		     } 
		     
		     if(boja=='k' ||  boja=='K') {
		     	goto l1; 
		     }
	}
	
	 l1:
	 
	 printf(""Ukupno evidentirano %d vozila.\n"",uk);
	 if(uk==0) {
	 	printf(""Najpopularnija boja je crna (00.00%%)."");
	 	return 0;
	 }
	 if(c>b  && c>s  && c>v  && c>p) {
	 	procenat=((float)c/uk)*100;
	 	printf(""Najpopularnija boja je crna (%.2f%%)."");
	 }
	 if(c<b  && b>s  && b>v  && b>p) {
	 	procenat=((float)b/uk)*100;
	 	printf(""Najpopularnija boja je bijela (%.2f%%)."",procenat);
     }
     if(c<s  && b<s  && s>v  && s>p) {
     	procenat=((float)s/uk)*100;
     	printf(""Najpopularnija boja je siva (%.2f%%)."",procenat);	
     }
     if(c<v  && b<v  && s<v  && v>p) {
     	procenat=((float)v/uk)*100;
     	printf(""Najpopularnija boja je crvena (%.2f%%)."",procenat);
     }	
     if(c<p  && b<p  && s<p  && v<p) {
     	procenat=((float)p/uk)*100;
     	printf(""Najpopularnija boja je plava (%.2f%%)."",procenat);	
     }
	return 0;
}
"
736,50,50,0,37,A2016/Z3/Z2/student8886,A2016/Z3/Z2/student8631,"#include <stdio.h>
#include <stdlib.h>

/*Racunanje sume cifara i-tog clana niza*/
int suma(int n) {
    int c, sum=0;
    while (n!=0) {
        c=abs(n%10);
        sum+=c;
        n=n/10;
    }
    return sum;
}

/*Ubacivanje sume cifara i-tog clana niza u niz nakon tog clana*/ 
void ubaci(int *niz, int vel) {
    int i, j;
    for (i=0; i<vel; i++) {
        for (j=vel-1; j>i; j--) 
            niz [j+1]=niz[j];
            niz [i+1]=suma(niz[i]);
            vel++;
            i++;
        
    }
}

/*Provjeravanje da li se i-ti clan niza pojavljuje u Fibonacijevom nizu*/
int fibonaci(int n)
{
    int x,y;
    x=1;
    y=1;
    while (x<n && y<n) {
        x=x+y;
        y=x+y;
    }
    if (x==n || y==n) return 1;
    else return 0;
}

/*Izbacivanje onih clanova iz niza koji se pojavljuju u Fibonacijevom nizu*/
int izbaci(int* niz,int vel)
{
    int i,j;
    for(i=0; i<vel; i++)
    {
        if (fibonaci(niz[i])==1){
        for(j=i; j<vel-1; j++)
        {
            niz[j]=niz[j+1];
        }
        vel--;
        i--;
        }
    }
    return vel;

}
int main () {
    
    int niz[1000], i, vel=10;
    printf(""Unesite niz od 10 brojeva: "");
    for (i=0; i<vel; i++) {
        scanf (""%d"", &niz[i]);
    }
    ubaci(niz, vel);
    vel=vel*2;
    vel=izbaci(niz, vel);
    
/*Ispis modificiranog niza*/
    printf(""Modificirani niz glasi: "");
    for(i=0; i<vel; i++)
    {
        if(i==vel-1) {
            printf(""%d."", niz[i]);
        } else
        printf(""%d, "", niz[i]);
    }
    return 0;
}","#include <stdio.h>
int negativno(int n){
 int a; 
 a=-n; 
 return a; 
}
int cifra(int n) {
 int c;
 c=n%10; 
 return c; 
}
int f(int n){
 int b; 
 b=n/10; 
 return b;
}
/*Funkcija za izracunavanje sume*/
int suma(int n) {
 int c, suma=0; 
  if(n<0) 
  n=negativno(n);
while(n!=0){
 c=cifra(n) ; 
 suma=suma+c; 
 n=f(n); 
}
return suma; 
}
/*Fukcija za ubacivnje elemenata*/
void ubaci(int*niz, int vel) {
 int i,j;  
  for(i=0; i<vel; i++) {
	for(j=vel-1; j>i; j--) {
	niz[j+1]=niz[j];
	}
	niz[i+1]=suma(niz[i]); 
	vel++;
	i++; 
	}	
	return;
	}
int fibonaci(int n) {
 int a=1; int b=1; 
 if(n<1) 
 return 0; 
 while (a<n && b<n)
	{
		a=b+a; 
		b=b+a; 
	}
	if(a==n || b==n)
	return 1; 
	return 0; 
}
/*Funkcija za izbacijanje elemenata*/
int izbaci(int*niz, int vel) {
 int i; 
 int j; 
 for(i=0; i<vel;i++) {
  if(fibonaci(niz[i])) { 
  	for(j=i; j<vel-1; j++) {
	 niz[j]=niz[j+1];
	}
	vel--; 
	i--;
	}
}
return vel;
}

int main() {
 int i, niz[20]; 
 int vel=10; 
 printf(""Unesite niz od 10 brojeva: ""); 
 for(i=0; i<vel; i++) {
 scanf(""%d"", &niz[i]); 
}
ubaci(niz,vel);
vel=izbaci(niz, vel*2);
printf(""Modificirani niz glasi: ""); 
for(i=0; i<vel; i++) {
 if(i==vel-1) printf(""%d."", niz[i]); 
 else printf(""%d, "",niz[i]);
}
return 0; 
}"
746,99,99,0,93,A2016/Z5/Z1/student3900,A2016/Z5/Z1/student7802,"#include <stdio.h>
void unesi(char niz[], int velicina) {
    char znak = getchar();
    int i=0;
    if (znak == '\n') znak=getchar();
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i]='\0';
}

int provjera(double niz){
	int i,j;
	
	
	return 0;
}
struct Student {
char ime[20],prezime[20];
int ocjene[50];
	int br_ocjena;
};
double prosj (int niz[], int br){
	int i=0,provj=0;
	double suma=0,pr;
	if(br==0) return 5;
	for(i=0;i<br;i++){
		if(niz[i]==5)
			return 5;
		suma=suma+niz[i];
	}
	pr=suma/br;
	
	return pr;
	
}

int genijalci (struct Student pod[], int velicina, double prosjek){
	struct Student temp;
	int i,j;
	double niz_prosjeka[100],max;
	for(i=0;i<velicina;i++) {
		if(prosj(pod[i].ocjene,pod[i].br_ocjena)>prosjek)
			niz_prosjeka[i]=prosj(pod[i].ocjene,pod[i].br_ocjena);
			
		if(prosj(pod[i].ocjene,pod[i].br_ocjena)<prosjek) {
			for(j=i;j<velicina-1;j++) {
				pod[j]=pod[j+1];
			}
			velicina--;
			i--;
		}	
	}


		
	
	for(i=0;i<velicina;i++){
		printf(""%s %s\n"", pod[i].prezime,pod[i].ime);
		
		
	}
		
	
	return velicina;
}
int main() {
	struct Student pod[100];
	double prosjek=0;
	int vel=0,i=0,j=0,br_studenata1;
	
	printf(""Unesite broj studenata: "");
	scanf(""%d"", &br_studenata1);

	for(i=0;i<br_studenata1;i++){
		printf(""Unesite prezime studenta"");
		unesi(pod[i].prezime,20);
		printf(""Unesite ime studenta"");
		unesi(pod[i].ime,20);
		printf(""Unesite broj ocjena studenta"");
		scanf(""%d"", &pod[i].br_ocjena);
		printf(""Unesite ocjene"");
		for(j=0;j<pod[i].br_ocjena;j++){
			scanf(""%d"", &pod[i].ocjene[j]);
		}
	}
	printf(""Unesite prosjek ocjena: "");
	scanf(""%lf"", &prosjek);
	
	vel=genijalci(pod,br_studenata1,prosjek);
	
	return 0;
}
","#include <stdio.h>
void unesi(char niz[], int velicina) {
    char znak = getchar();
    int i=0;
    if (znak == '\n') znak=getchar();
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i]='\0';
}

int provjera(double niz){
	int i,j;
	
	
	return 0;
}
struct Student {
char ime[20],prezime[20];
int ocjene[50];
	int br_ocjena;
};
double prosj (int niz[], int br){
	int i=0,provj=0;
	double suma=0,pr;
	if(br==0) return 5;
	for(i=0;i<br;i++){
		if(niz[i]==5)
			return 5;
		suma=suma+niz[i];
	}
	pr=suma/br;
	
	return pr;
	
}

int genijalci (struct Student pod[], int velicina, double prosjek){
	struct Student temp;
	int i,j;
	double niz_prosjeka[100],max;
	for(i=0;i<velicina;i++) {
		if(prosj(pod[i].ocjene,pod[i].br_ocjena)>prosjek)
			niz_prosjeka[i]=prosj(pod[i].ocjene,pod[i].br_ocjena);
			
		if(prosj(pod[i].ocjene,pod[i].br_ocjena)<prosjek) {
			for(j=i;j<velicina-1;j++) {
				pod[j]=pod[j+1];
			}
			velicina--;
			i--;
		}	
	}


		
	
	for(i=0;i<velicina;i++){
		printf(""%s %s\n"", pod[i].prezime,pod[i].ime);
		
		
	}
		
	
	return velicina;
}
int main() {
	struct Student pod[100];
	double prosjek=0;
	int vel=0,i=0,j=0,br_studenata1;
	
	printf(""Unesite broj studenata: "");
	scanf(""%d"", &br_studenata1);

	for(i=0;i<br_studenata1;i++){
		printf(""Unesite prezime studenta"");
		unesi(pod[i].prezime,20);
		printf(""Unesite ime studenta"");
		unesi(pod[i].ime,20);
		printf(""Unesite broj ocjena studenta"");
		scanf(""%d"", &pod[i].br_ocjena);
		printf(""Unesite ocjene"");
		for(j=0;j<pod[i].br_ocjena;j++){
			scanf(""%d"", &pod[i].ocjene[j]);
		}
	}
	printf(""Unesite prosjek ocjena: "");
	scanf(""%lf"", &prosjek);
	
	vel=genijalci(pod,br_studenata1,prosjek);
	
	return 0;
}
"
765,96,96,0,22,A2016/Z1/Z2/student9972,A2016/Z1/Z2/student5867,"#include <stdio.h>
#include <math.h>
int main () {
	float a1,b1,a2,b2,x,y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
if (a1==a2 && b1!=b2) { printf(""Paralelne su"");
return 0; }
else if (a1==a2 && b1==b2) { printf(""Poklapaju se""); return 0; }
x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	return 0;
}","#include <stdio.h>
#include <math.h>

int main() 
{
	float a1, b1, a2, b2, x, y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
	
	if(a1==a2 && b1!=b2)
	{
	printf(""Paralelne su"");
	return 0;
	}
	
	else if(a1==a2 && b1==b2)
	{
		printf(""Poklapaju se"");
		return 0;
	}
	
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x, y);
	return 0;
}
"
780,65,65,0,28,A2016/Z2/Z3/student3572,A2016/Z2/Z3/student6008,"#include <stdio.h>

int main() {
	int i,j,n,k,osaX[20],osaY[20];
	char matrica[20][20];
	do {
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &n);
	if(n<=0||n>10)
	printf(""Pogresan unos\n"");
	}
	while(n<=0||n>10);
	
	for(k=0;k<n;k++){
		printf(""Unesite %d. tacku: "",k+1);
		scanf(""%d %d"", &osaX[k], &osaY[k]);
		while ((osaX[k]<0 || osaX[k]>19) || (osaY[k]<0 || osaY[k]>19)){
		printf(""Pogresan unos\n"");
		printf(""Unesite %d. tacku: "",k+1);
		scanf(""%d %d"", &osaX[k], &osaY[k]);
		}
		
	}
	
	
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			matrica[i][j]=' ';
		}
	}
	for(k=0;k<n;k++){
		for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			if(i==osaY[k] && j==osaX[k])
			matrica[i][j]='*'; 
			
		}
		}
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			printf(""%c"", matrica[i][j]);
		}
		printf(""\n"");	
	}
	
	
		
		
		
	return 0;
		}

	

","#include <stdio.h>

int main() {
	int n, i, j=0, niz1[10], niz2[10], k=0;
	char matrica[20][20];
	while(2>1){
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &n);
		if(n>0 && n<11)
		break;
		if(n<=0 || n>10)
			printf(""Pogresan unos\n"");
	}
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			matrica[i][j]=' ';
		}
	}
	j=0;
	for(i=0; i<n; i++){
		printf(""Unesite %d. tacku: "", i+1);
		scanf(""%d%d"", &niz1[i], &niz2[j]);
		
		
		if((niz1[i]<0 || niz1[i]>19) || (niz2[j]<0 || niz2[j]>19)){
			printf(""Pogresan unos\n"");
			i--;
			j--;
		}
		j++;
	}
	for(i=0; i<n; i++){
		for(j=0; j<20; j++){
			for(k=0; k<20; k++){
				if(j==niz2[i] && k==niz1[i])
					matrica[j][k]='*';
			}
		}
	}
	for(j=0; j<20; j++){
		for(k=0; k<20; k++){
			printf(""%c"", matrica[j][k]);
		}
		printf(""\n"");
	}
	
	return 0;
}
"
783,92,92,0,61,A2016/Z3/Z3/student9318,A2016/Z3/Z3/student3483,"#include <stdio.h>

int main (){
    int mat[200][200]={{0}},i=0,j=0,M=0,N=0,k=0,p=0,h=0,isti;
    do{
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"", &M,&N);
        if(M<1 || N<1 || M>200 || N>200) printf(""Brojevi nisu u trazenom opsegu.\n"");
    }while(M<1 || N<1 || M>200 || N>200);
        printf(""Unesite elemente matrice: "");
        for(i=0; i<M; i++){
            for(j=0; j<N; j++){
                scanf(""%d"", &mat[i][j]);
            }
        }        for(j=0; j<N; j++){
            for(i=j+1; i<N; i++){
                isti=1;
                for(k=0; k<M; k++){
                    if(mat[k][j]!=mat[k][i]){ isti=0; break; }
            }
                if(isti==1){
                    for(p=i; p<(N-1); p++){
                        for(h=0; h<M; h++){
                         mat[h][p]=mat[h][p+1];
                    }
                } 
                N--;
                i--;
            }
        }
    }
        
       
    for(i=0; i<M; i++){
        for(j=i+1; j<M; j++){
            isti=1;
            for(k=0; k<N; k++){
                if(mat[i][k]!=mat[j][k]){ isti=0; break; }
            }
                if(isti==1){
                    for(p=j; p<(M-1); p++){
                        for(h=0; h<N; h++){
                            mat[p][h]=mat[p+1][h];
                        }
                    }
                    M--;
                    j--;
                }
            }
        } 
        
         printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
        for(i=0; i<M; i++){
            for(j=0; j<N; j++){
                printf(""%5d"", mat[i][j]);
            }printf(""\n"");
        }
   
    
    return 0;
}","#include <stdio.h>

int main() {
	int a[200][200], m, n, i, j, k, t, jednak;
	
	/* Unos dimenzija matrice */
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"", &m, &n);
		if(m<1 || m>200 || n<1 || n>200)
			printf(""Brojevi nisu u trazenom opsegu.\n"");
	}
	while(m<1 || m>200 || n<1 || n>200);
	
	/* Unos elemenata matrice*/
	printf(""Unesite elemente matrice: "");
	for(i=0; i<m; i++)
		for(j=0; j<n; j++)
			scanf(""%d"", &a[i][j]);
			
	/* Izbacivanje redova koji se ponavljaju */
	for(i=0; i<m; i++)
		for(k=i+1; k<m; k++){
			jednak=1;
				for(j=0; j<n; j++)
					if(a[i][j]!=a[k][j]){
						jednak=0;
						break;
				}
			if(jednak==1){
				for(t=k; t<m-1; t++)
					for(j=0; j<n; j++)
						a[t][j]=a[t+1][j];
				m--;
				k--;
			}
		}
		
	/* Izbacivanje kolona koje se ponavljaju */
	for(j=0; j<n; j++)
		for(k=j+1; k<n; k++){
			jednak=1;
				for(i=0; i<m; i++)
					if(a[i][j]!=a[i][k]){
						jednak=0;
						break;
					}
				if(jednak==1){
					for(t=k; t<n-1; t++)
						for(i=0; i<n; i++)
							a[i][t]=a[i][t+1];
					n--;
					k--;
			}
		}
		
	/* Ispis matrice */
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0; i<m; i++){
		for(j=0; j<n; j++)
			printf(""%5d"", a[i][j]);
		printf(""\n"");
	}
	return 0;
}
"
791,67,67,0,22,A2016/Z1/Z4/student9949,A2016/Z1/Z4/student3671,"#include <stdio.h>
int main() {
	int i,j,n;
    printf(""Unesite broj n: "");
    scanf(""%d"", &n);
    while(n<=0 || n>50){
    	printf(""Pogresan unos\n"");
    	printf(""Unesite broj n: "");
    	scanf(""%d"", &n);}
    if(n==1){
    	printf(""***"");}
    else { 
    for(i=0; i<n; i++){
    	for(j=0; j<=4*n-4; j++){
    	   if(i==j || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i) {
    	   	printf(""*"");}
           else {printf("" "");} }
        printf(""\n"");}}
        return 0;
}","#include <stdio.h>

int main() {
	int n,i,j;
	do{
		printf(""Unesite broj n: "");
		scanf(""%d"", &n);
		if(n<=0 || n>50) 
		{printf(""Pogresan unos\n"");}
	} 
	while(n<=0 || n>50);
	
	
	
if(n==1)
{printf(""***"");}

else
{	for(i=0; i<n; i++) 
	{
	  for(j=0; j<4*n-3; j++)
	    {
	        if(i==j || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i ) 
	        {
	        printf(""*"");
	        }
	        else 
	        {
	        	printf("" "");
	        }
	    }
	    printf(""\n"");
	}
}
	
	return 0;
}"
796,97,97,0,25,A2016/Z1/Z2/student9160,A2016/Z1/Z2/student3421,"#include <stdio.h>

int main() {
	double a1=0, a2=0, b1=0, b2=0, x=0, y=0;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%lf,%lf,%lf,%lf"", &a1,&b1,&a2,&b2);
	if(a1==a2)
	{
	 if(b1==b2)
	{
		printf(""Poklapaju se"");
	}
	else
	{
		printf(""Paralelne su"");	
	}
	}
	else if(a1!=a2 && b1!=b2)
	{
		x=((b2-b1)/(a1-a2));
		y=(a1*x+b1);
		printf(""Prave se sijeku u tacci (%.1lf,%.1lf)"", x,y);
	}
	return 0;
}
","#include <stdio.h>

int main() {
	double a1=0, b1=0, a2=0, b2=0, x=0, y=0;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%lf,%lf,%lf,%lf"", &a1, &b1, &a2, &b2);
	  if(a1==a2)
	{
	  if(b1==b2)
	{
	
		printf(""Poklapaju se"");
	}
     	else
	{
		printf(""Paralelne su"");
	}
	}
	   else if(a1!=a2 && b1!=b2)
	
	
	{	x=((b2-b1)/(a1-a2));
		y=(a1*x+b1);
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x,y);
	}
	
	return 0;
}
"
808,89,89,0,43,A2016/Z3/Z1/student5268,A2016/Z3/Z1/student6913,"#include <stdio.h>
int daj_prost(){
	int i,j,prost;
static int g=2;
for(i=g;i<10000;i++){
	prost=1;
	for(j=2;j<i;j++){
		if(i%j==0){
			prost=0;
		}
		
	}
	g++;
	if(prost==0) continue;
	if(prost==1) return i;
}

}


int main () {
     int i,a,b,suma=0,s;
     for(i=0;i<1;i++){
     printf(""Unesite brojeve A i B: "");
     scanf(""%d%d"",&a,&b);
     if(a<1){
     	i--;
     	printf(""A nije prirodan broj.\n"");
     	continue;
     }
     if(a>=b){
     	printf(""A nije manje od B.\n"");
     	i--;
     }
	
}
for(i=0;i<b;i++){
	s=daj_prost();
	if(s>a && s<b){
		suma=suma+s;
	}

}
printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b,suma);

return 0;
}
","#include <stdio.h>
int daj_prost () {
	int i,m,l;
	static int t=2;
	
	if(t==2){
         t++;	
		return 2;
	}
    for(i=t;i<10000;i++){
    	m=1;
    	for(l=2;l<t;l++){
    		if(t%l==0){
    			m=0;
    		}
    	}
    		t++;
    		if(m==0){
    			continue;
    		}
    	if(m==1){
    		return i;
    	}
    		
    	}
    	
    }

int main() {
	int i,a,b,suma=0,l;
	for(i=0;i<1;i++){
		printf(""Unesite brojeve A i B: "");
		scanf(""%d%d"",&a,&b);
		if(a<1){
			printf(""A nije prirodan broj.\n"");
			i--;
			continue;
		}
		if(a>=b){
			printf(""A nije manje od B.\n"");
			i--;
		}
	}
	for(i=1;i<b;i++){
		l=daj_prost();
		if(l>a && l<b){
			suma=suma+l;
		}
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b,suma);
	return 0;
}
"
811,84,84,0,79,A2016/Z1/Z1/student8670,A2016/Z1/Z1/student5830,"#include <stdio.h>
int main() {
  double Tp1,Tp2,Tp,Tz,Tzi,Bp1,Bp2,Bp,Bz,Bzi,Mp1,Mp2,Mp,Mz,Mzi;
  double Tb,Bb,Mb;
    int Toc,Boc,Moc;
    printf(""Unesite bodove za Tarika:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%lf"",&Tp1);if(Tp1<0 || Tp1>20){printf(""Neispravan broj bodova""); return 0;}
    printf(""II parcijalni ispit: "");
    scanf(""%lf"",&Tp2);if(Tp2<0 || Tp2>20){printf(""Neispravan broj bodova""); return 0;}
    printf(""Prisustvo: "");
    scanf(""%lf"",&Tp);if (Tp<0 || Tp>10) {printf (""Neispravan broj bodova""); return 0; }
    printf(""Zadace: "");
    scanf(""%lf"",&Tz);if(Tz<0 || Tz>10) {printf(""Neispravan broj bodova""); return 0; }
    printf(""Zavrsni ispit: "");
    scanf(""%lf"",&Tzi);if (Tzi<0 || Tzi >40) {printf(""Neispravan broj bodova""); return 0; }
    printf(""Unesite bodove za Bojana:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%lf"",&Bp1);if(Bp1<0 || Bp1>20) {printf(""Neispravan broj bodova""); return 0; }
    printf(""II parcijalni ispit: "");
    scanf(""%lf"",&Bp2); if(Bp2<0 || Bp2>20) {printf(""Neispravan broj bodova""); return 0; }
    printf(""Prisustvo: "");
    scanf(""%lf"",&Bp);if(Bp<0 || Bp>10) {printf(""Neispravan broj bodova""); return 0; }
    printf(""Zadace: "");
    scanf(""%lf"",&Bz);if(Bz<0 || Bz>10) {printf(""Neispravan broj bodova""); return 0; }
    printf(""Zavrsni ispit: "");
    scanf(""%lf"",&Bzi);if(Bzi<0 || Bzi>40) {printf(""Neispravan broj bodova""); return 0; }
    printf(""Unesite bodove za Mirzu:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%lf"",&Mp1);if(Mp1<0 || Mp1>20) {printf(""Neispravan broj bodova""); return 0; }
    printf(""II parcijalni ispit: "");
    scanf(""%lf"",&Mp2);if(Mp2<0 || Mp2>20) {printf(""Neispravan broj bodova""); return 0; }
    printf(""Prisustvo: "");
    scanf(""%lf"",&Mp);if(Mp<0 || Mp>10) {printf(""Neispravan broj bodova""); return 0; }
    printf(""Zadace: "");
    scanf(""%lf"",&Mz);if(Mz<0 || Mz>10) {printf(""Neispravan broj bodova""); return 0; }
    printf(""Zavrsni ispit: "");
    scanf(""%lf"",&Mzi);if( Mzi<0 || Mzi>40) {printf(""Neispravan broj bodova""); return 0; }
    Tb=Tp1+Tp2+Tp+Tz+Tzi;
    Bb=Bp1+Bp2+Bp+Bz+Bzi;
    Mb=Mp1+Mp2+Mp+Mz+Mzi;
    if(Tb<55) {Toc=5;} else 
    if(Tb>=55 && Tb<65) {Toc=6;} else
    if(Tb>=65 && Tb<75) {Toc=7;} else
    if(Tb>=75 && Tb<85) {Toc=8;} else
    if(Tb>=85 && Tb<92) {Toc=9;} else
    if(Tb>=92 && Tb<=100) {Toc=10;}
    if(Bb<55) {Boc=5; } else
    if(Bb>=55 && Bb<65) {Boc=6;} else
    if(Bb>=65 && Bb<75) {Boc=7;} else
    if(Bb>=75 && Bb<85) {Boc=8;} else
    if(Bb>=85 && Bb<92) {Boc=9;} else
    if(Bb>=92 && Bb<=100) {Boc=10;}
    if(Mb<55) {Moc=5;} else
    if(Mb>=55 && Mb<65) {Moc=6;} else
    if(Mb>=65 && Mb<75) {Moc=7;} else
    if(Mb>=75 && Mb<85) {Moc=8;} else
    if(Mb>=85 && Mb<92) {Moc=9;} else
    if(Mb>=92 && Mb<=100) {Moc=10;}
    if(Toc==5 && Boc==5 && Moc==5) {
      printf (""Nijedan student nije polozio.\n"");}
    else if((Toc>5 && Boc==5 && Moc==5) || (Toc==5 && Boc>5 && Moc==5) || (Toc==5 && Boc==5 && Moc>5)) {
      printf(""Jedan student je polozio.\n"");} 
      else if((Toc>5 && Boc>5 && Moc==5) || (Toc>5 && Boc==5 && Moc>5) || (Toc==5 && Boc>5 && Moc>5)) { 
      printf(""Dva studenta su polozila.\n""); }
       else if(Toc>5 && Boc>5 && Moc>5) { printf(""Sva tri studenta su polozila.\n"");
       if((Tb>55 && Bb>55 && Mb>55) && (Toc==Boc && Boc==Moc)){ printf(""Sva tri studenta imaju istu ocjenu.\n""); } 
      else if(Toc==Boc || Toc==Moc || Boc==Moc) { printf(""Dva od tri studenta imaju istu ocjenu.\n""); }
      else if(Toc!=Boc && Toc!=Moc && Boc!=Moc) { printf(""Svaki student ima razlicitu ocjenu.\n""); }
       }
      return 0; }
","#include <stdio.h>

int main() {
	double t1,t2,t3,t4,t5,b1,b2,b3,b4,b5,m1,m2,m3,m4,m5;
	double t,b,m;
	int ot,ob,om;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&t1);if(t1<0 || t1>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&t2);if(t2<0 || t2>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&t3);if(t3<0 || t3>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&t4);if(t4<0 || t4>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&t5);if(t5<0 || t3>40){printf(""Neispravan broj bodova""); return 0;}
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&b1);if(b1<0 || b1>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&b2);if(b2<0 || b2>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&b3);if(b3<0 || b3>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&b4);if(b4<0 || b4>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&b5);if(b5<0 || b3>40){printf(""Neispravan broj bodova""); return 0;}
	printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&m1);if(m1<0 || m1>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&m2);if(m2<0 || m2>20){printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&m3);if(m3<0 || m3>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&m4);if(m4<0 || m4>10){printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&m5);if(m5<0 || m3>40){printf(""Neispravan broj bodova""); return 0;}
	t=t1+t2+t3+t4+t5;
	b=b1+b2+b3+b4+b5;
	m=m1+m2+m3+m4+m5;
	if (t<55)
	{ot=5;}
	else if(t>=55 && t<65)
	{ot=6;}
	else if(t>=65 && t<75)
	{ot=7;}
	else if(t>=75 && t<85)
	{ot=8;}
	else if(t>=85 && t<92)
	{ot=9;}
	else if(t>=92 && t<=100)
	{ot=10;}
	if (b<55)
	{ob=5;}
	else if(b>=55 && b<65)
	{ob=6;}
	else if(b>=65 && b<75)
	{ob=7;}
	else if(b>=75 && b<85)
	{ob=8;}
	else if(b>=85 && b<92)
	{ob=9;}
	else if(b>=92 && b<=100)
	{ob=10;}
	if (m<55)
	{om=5;}
	else if(m>=55 && m<65)
	{om=6;}
	else if(m>=65 && m<75)
	{om=7;}
	else if(m>=75 && m<85)
	{om=8;}
	else if(m>=85 && m<92)
	{om=9;}
	else if(m>=92 && m<=100)
	{om=10;}
	if(ot==5 && ob==5 && om==5)
	{printf(""Nijedan student nije polozio.\n""); return 0;}
	if ((ot>5 && ob==5 && om==5)||(ot==5 && ob>5 && om==5)||(ot==5 && ob==5 && om>5))
	{printf(""Jedan student je polozio.\n""); return 0;}
	if ((ot>5 && ob>5 && om==5)||(ot==5 && ob>5 && om>5)||(ot>5 && ob==5 && om>5))
	{printf(""Dva studenta su polozila.\n"");}
	if (ot>5 && ob>5 && om>5)
	{printf(""Sva tri studenta su polozila.\n"");}
	if (ot==ob && ot==om)
	{printf(""Sva tri studenta imaju istu ocjenu.\n"");}
	if (ot==ob || ot==om || ob==om)
	{printf(""Dva od tri studenta imaju istu ocjenu.\n"");}
	if ((ot>5 && ob>5 && om>5)&&(ot!=ob && ot!=om && ob!=om))
	{printf(""Svaki student ima razlicitu ocjenu.\n"");}
	return 0;
}
"
818,82,82,0,26,A2016/Z2/Z2/student8561,A2016/Z2/Z2/student5496,"#include <stdio.h>
#define PI 3.1415926
#define c 500
int main() {
	int n,i,j,st[c],min[c],sek[c];
	double ugao;
	
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	
	for(i=0;i<n;i++){
	
		scanf(""%lf"",&ugao);
			if (ugao>0)
			j=(ugao*180*3600/PI)+0.5;
			if (ugao<0)
			j=(ugao+180*3600/PI)-0.5;
			st[i]=j/3600;
			if(j<0)
			j*=-1;
			sek[i]=j%60;
			j/=60;
			min[i]=j%60;
			if (sek[i]>30){
				n--;
				i--;
			}
		
	}
	printf(""Uglovi su: \n"");
	for(i=0;i<n;i++) printf(""%d stepeni %d minuta %d sekundi\n"", st[i],min[i],sek[i]);
	return 0;
}
","#include <stdio.h>
#define PI 3.1415926
int main () {
	int i,y,broj;
	int STEP[500],MIN[500],SEC[500];
	double ugao;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &broj);
	for (i=0; i<broj; i++){
		scanf(""%lf"", &ugao);
		if(ugao>0)
		y=(ugao*180*3600)/PI+0.5;
		if(ugao<0)
		y=(ugao*180*3600)/PI-0.5;
		STEP[i]=y/3600;
		if(y<0){ y*=-1;
		}
		SEC[i]=y%60;
		y/=60;
		MIN[i]=y%60;
		if(SEC[i]>30){
		   broj--;
		    i--;
		}
	}
			printf(""Uglovi su:\n"");
			for(i=0;i<broj;i++)
			printf(""%d stepeni %d minuta %d sekundi\n"", STEP[i],MIN[i],SEC[i]);
			
	return 0;
}
"
819,55,55,0,10,A2016/Z2/Z1/student5624,A2016/Z2/Z1/student8631,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main() {
	int a, b,c, p=0, broj=0, i=0,fbroj=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &a);
	while(a!=0){
		b=a%10;
		c=(a%100-b)/10;
		a=a/10;
		if(a==0) break;
		p=abs(b-c);
	    broj=pow(10,i)*p;
	    fbroj+=broj;
	       i++;}
	    
printf(""%d"", fbroj)	;
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int main() {
	int a, i=0,zadnjacifra, predzadnja, rezultat=0, broj=0; 
	int sum=0;
	printf(""Unesite broj: "");
	scanf(""%d"",  &a);
while (a!=0)
	{zadnjacifra=a%10; 
    predzadnja=(a%100-zadnjacifra)/10;
    a=a/10;
    if(a==0) break;
   rezultat=abs(zadnjacifra-predzadnja);
   broj=pow(10, i)*rezultat;
   sum=sum+broj; i++;}
	   printf(""%d"", sum);
	
 
   return 0;}"
823,86,86,0,188,A2016/Z1/Z1/student5512,A2016/Z1/Z1/student2498,"#include <stdio.h>
int main() {
	double Tb, Bb, Mb, p1, p2, P, dz, zi, Bp1, Bp2, BP, Bdz, Bzi, Mp1, Mp2, MP, Mdz, Mzi;
	int oT, oB, oM;
	printf (""Unesite bodove za Tarika: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &p1);
	if (p1>20 || p1<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &p2);
	if (p2>20 || p2<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Prisustvo: "");
	scanf (""%lf"", &P);
	if (P>10 || P<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zadace: "");
	scanf (""%lf"", &dz);
	if (dz>10 || dz<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &zi);
	if (zi>40 || zi<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	Tb=p1+p2+P+dz+zi;
	
	printf (""Unesite bodove za Bojana: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &Bp1);
	if (Bp1>20 || Bp1<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &Bp2);
	if (Bp2>20 || Bp2<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Prisustvo: "");
	scanf (""%lf"", &BP);
	if (BP>10 || BP<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zadace: "");
	scanf (""%lf"", &Bdz);
	if (Bdz>10 || Bdz<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &Bzi);
	if (Bzi>40 || Bzi<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	Bb=Bp1+Bp2+BP+Bdz+Bzi;
	
	printf (""Unesite bodove za Mirzu: \n"");
		printf (""I parcijalni ispit: "");
	scanf (""%lf"", &Mp1);
	if (Mp1>20 || Mp1<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &Mp2);
	if (Mp2>20 || Mp2<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Prisustvo: "");
	scanf (""%lf"", &MP);
	if (MP>10 || MP<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zadace: "");
	scanf (""%lf"", &Mdz);
	if (Mdz>10 || Mdz<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &Mzi);
	if (Mzi>40 || Mzi<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	Mb=Mp1+Mp1+MP+Mdz+Mzi;
	
	if (Tb>=55 && Tb<65)
	oT=6;
	else if (Tb>=65 && Tb<75)
	oT=7;
	else if (Tb>=75 && Tb<85)
	oT=8;
	else if (Tb>=85 && Tb<92)
	oT=9;
	else if (Tb>=92 && Tb<=100)
	oT=10;
	else oT=0;
	if (Bb>=55 && Bb<65)
	oB=6;
	else if (Bb>=65 && Bb<75)
	oB=7;
	else if (Bb>=75 && Bb<85)
	oB=8;
	else if (Bb>=85 && Bb<92)
	oB=9;
	else if (Bb>=92 && Bb<=100)
	oB=10;
	else oB=0;
	if (Mb>=55 && Mb<65)
	oM=6;
	else if (Mb>=65 && Mb<75)
	oM=7;
	else if (Mb>=75 && Mb<85)
	oM=8;
	else if (Mb>=85 && Mb<92)
	oM=9;
	else if (Mb>=92 && Mb<=100)
	oM=10;
	else oM=0;
	if (oT<6 && oB<6 && oM<6)
    printf (""Nijedan student nije polozio."");
    if (Tb>=55 && Bb>=55 && Mb>=55){
    printf (""Sva tri studenta su polozila."");
    if (oT==oB && oB==oM )
    printf (""\nSva tri studenta imaju istu ocjenu."");
    else if (oT==oB || oB==oM || oM==oT)
    printf (""\nDva od tri studenta imaju istu ocjenu."");
    else
    printf (""\nSvaki student ima razlicitu ocjenu."");}
    if ((Tb>=55 && Bb>=55 && Mb<55) || (Tb<55 && Bb>=55 && Mb>=55) || (Tb>=55 && Bb<55 && Mb>=55))
    printf (""Dva studenta su polozila."");
    if ((Tb>=55 && Bb<55 && Mb<55) || (Tb<55 && Bb>=55 && Mb<55) || (Tb<55 && Bb<55 && Mb>=55))
    printf (""Jedan student je polozio."");
   
    return 0;
	
}","#include <stdio.h>

int main() {
	float I1, II1, DZ1, P1, Z1, S1, O1, I2, II2, P2, DZ2, Z2, S2, O2, I3, II3, P3, DZ3, Z3, S3, O3;

	
	
	printf(""Unesite bodove za Tarika:\n"");
	
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &I1);
	
	if(I1<0 || I1>20)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &II1);
	
	if(II1<0 || II1>20)
	{
		printf(""Neispravan broj bodova\n"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &P1);
	
	if(P1<0 || P1>10)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}	
	
	printf(""Zadace: "");
	scanf(""%f"", &DZ1);
	
	if(DZ1<0 || DZ1>10)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Z1);
	
	if(Z1<0 || Z1>40)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	S1=I1+II1+P1+DZ1+Z1;
	
	if(S1==0 && S1<=55)
		O1=5;
	else if(S1>55 && S1<=65)
		O1=6;
	else if(S1>65 && S1<=75)
		O1=7;
	else if(S1>75 && S1<=85)
		O1=8;
	else if(S1>85 && S1<=92)
		O1=9;
	else
		O1=10;
	
	
	
	printf(""Unesite bodove za Bojana:\n"");
	
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &I2);
	
	if(I2<0 || I2>20)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &II2);
	
	if(II2<0 || II2>20)
	{
		printf(""Neispravan broj bodova\n"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &P2);
	
	if(P2<0 || P2>10)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}	
	
	printf(""Zadace: "");
	scanf(""%f"", &DZ2);
	
	if(DZ2<0 || DZ2>10)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Z2);
	
	if(Z2<0 || Z2>40)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	S2=I2+II2+P2+DZ2+Z2;
	
	if(S2==0 && S2<=55)
		O2=5;
	else if(S2>55 && S2<=65)
		O2=6;
	else if(S2>65 && S2<=75)
		O2=7;
	else if(S2>75 && S2<=85)
		O2=8;
	else if(S2>85 && S2<=92)
		O2=9;
	else
		O2=10;
		
	
	
	printf(""Unesite bodove za Mirzu:\n"");
	
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &I3);
	
	if(I3<0 || I3>20)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &II3);
	
	if(II3<0 || II3>20)
	{
		printf(""Neispravan broj bodova\n"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &P3);
	
	if(P3<0 || P3>10)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}	
	
	printf(""Zadace: "");
	scanf(""%f"", &DZ3);
	
	if(DZ3<0 || DZ3>10)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Z3);
	
	if(Z3<0 || Z3>40)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	S3=I3+II3+P3+DZ3+Z3;
	
	if(S3==0 && S3<=55)
		O3=5;
	else if(S3>55 && S3<=65)
		O3=6;
	else if(S3>65 && S3<=75)
		O3=7;
	else if(S3>75 && S3<=85)
		O3=8;
	else if(S3>85 && S3<=92)
		O3=9;
	else
		O3=10;
		
	
	
	if(O1<6 && O2<6 && O3<6)
		printf(""Nijedan student nije polozio.\n"");
		
	
	if((O1>5 && O2<6 && O3) || (O1<6 && O2>5 && O3<6) || (O1<6 && O2<6 && O3>5))
		printf(""Jedan student je polozio.\n"");
		
	
	if((O1>5 && O2>5 && O3<6) || (O1>5 && O2<6 && O3>5) || (O1<6 && O2>5 && O3>5))
		printf(""Dva studenta su polozila.\n"");
		
	
	if(O1>5 && O2>5 && O3>5)
		printf(""Sva tri studenta su polozila.\n"");
		
	
	if(O1==O2 && O1==O3)
		printf(""Sva tri studenta imaju istu ocjenu."");
		
	
	if((O1==O2 && O1!=O3) || (O1==O3 && O1!=O2) || (O2==O3 && O2!=O1))
		printf(""Dva od tri studenta imaju istu ocjenu."");
	
	
	if(O1!=O2 && O1!=O3 && O2!=O3)
		printf(""Svaki student ima razlicitu ocjenu."");
		
	return 0;
}
"
831,99,99,0,86,A2016/Z4/Z2/student5744,A2016/Z4/Z2/student2675,"#include <stdio.h>

char* kodiraj(char* s,char* kod)
{
	int broj[96]={0},i,j,pomi;
	char* pom=s;
	char pomc=' ';
	//generise sifrarnik kao niz ASCII znakova
	for(i=0;i<95;i++,pomc++)
	{
		kod[i]=pomc;
	}
	//broji koliko se puta koji clan pojavljuje
	while(*s!='\0')
	{
		for(i=0;i<95;i++)
		{
			if(*s==kod[i])
			{
				broj[i]++;
				break;
			}
		}
		s++;
	}
	//sortira clanove po ucestalosti
	for(i=0;i<94;i++)
	{
		for(j=i;j<95;j++)
		{
			if(broj[i]<broj[j]||(broj[i]==broj[j] && kod[i]>kod[j]))
			{
				pomc=kod[i];
				kod[i]=kod[j];
				kod[j]=pomc;
				pomi=broj[i];
				broj[i]=broj[j];
				broj[j]=pomi;
			}
		}
	}
	s=pom;
	//mijenja clanove za clanove iz tabele po ucestalosti
	while(*s!='\0')
	{
		for(i=0;i<95;i++)
		{
			if(*s==kod[i])
			{
				*s='~'-i;
				break;
			}
		}
		s++;
	}
	return pom;
}

char* dekodiraj(char *s,char *kod)
{
	int i;
	char* pom=s;
	while(*s!='\0')
	{
		//mijenja clanove za one od kojih ih je napravio
		for(i=0;i<95;i++)
		{
			if(*s==126-i)
			{
				*s=kod[i];
				break;
			}
		}
		s++;
	}
	return pom;
}

int main() {
	char s[]=""ssUU"",kod[96];
	char *p=s;
	int i;
	p=kodiraj(s,kod);
	for(i=0;i<4;p++,i++)
	{
		printf(""%c"",*p);
	}
	return 0;
}
","#include <stdio.h>

char* kodiraj(char* s,char* kod)
{
	int broj[96]={0},i,j,pomi;
	char* pom=s;
	char pomc=' ';
	//generise sifrarnik kao niz ASCII znakova
	for(i=0;i<95;i++,pomc++)
	{
		kod[i]=pomc;
	}
	//broji koliko se puta koji clan pojavljuje
	while(*s!='\0')
	{
		for(i=0;i<95;i++)
		{
			if(*s==kod[i])
			{
				broj[i]++;
				break;
			}
		}
		s++;
	}
	//sortira clanove po ucestalosti
	for(i=0;i<94;i++)
	{
		for(j=i;j<95;j++)
		{
			if(broj[i]<broj[j]||(broj[i]==broj[j] && kod[i]>kod[j]))
			{
				pomc=kod[i];
				kod[i]=kod[j];
				kod[j]=pomc;
				pomi=broj[i];
				broj[i]=broj[j];
				broj[j]=pomi;
			}
		}
	}
	s=pom;
	//mijenja clanove za clanove iz tabele po ucestalosti
	while(*s!='\0')
	{
		for(i=0;i<95;i++)
		{
			if(*s==kod[i])
			{
				*s='~'-i;
				break;
			}
		}
		s++;
	}
	return pom;
}

char* dekodiraj(char *s,char *kod)
{
	int i;
	char* pom=s;
	while(*s!='\0')
	{
		//mijenja clanove za one od kojih ih je napravio
		for(i=0;i<95;i++)
		{
			if(*s==126-i)
			{
				*s=kod[i];
				break;
			}
		}
		s++;
	}
	return pom;
}

int main() {
	char s[]=""ssUU"",kod[96];
	char *p=s;
	int i;
	p=kodiraj(s,kod);
	for(i=0;i<4;p++,i++)
	{
		printf(""%c"",*p);
	}
	return 0;
}
"
837,33,33,0,55,A2016/Z4/Z4/student5284,A2016/Z4/Z4/student3116,"#include <stdio.h>
#include <string.h>


char* obuhvat(char* s,float x1,float y1,float x2,float y2)
{
	char *p=s;
	int neg=0;
	char *pt,*kt;
	float x,y;
	float a,b;
    char *pom=p;


		if(*pom=='\0') return 0;


	        while(*pom!='\0')
	        {

	    		if(*pom!='(') return 0;
	    		else pom++;

	    		if(*pom==',') return 0;

				 while(*pom!=',')
				 {
				 	if((*pom<'0' || *pom>'9') && (*pom!='.' && *pom!='-')){ return 0;}
				 	if(*pom=='.' && *(pom-1)=='(') return 0;
				    pom++;
				 }

			   	if(*pom!=',') return 0;
			   	else pom++;

			   	if(*pom==')') return 0;

			   	while(*pom!=')')
			   	{
			   		if((*pom<'0' || *pom>'9') && (*pom!='.' && *pom!='-')){return 0;}
				   	if(*pom=='.' && *(pom-1)==',') return 0;
				    pom++;
			   	}

			 	if(*pom!=')'){return 0;}
				else pom++;

			 	if(*pom!='\0') pom++;

				if(*pom=='\0' && *(pom-1)!=')') return 0;

	    }


		while(*p!='\0')
		{
			if(*p=='(')
			{

				pt=p;
				p++;

			neg=0;

			if(*p=='-')
				{neg=1;p++;}

			x=0;
			while(*p>='0' && *p<='9')
			{

				x=x*10+(*p-'0');
				p++;
			}


			if(*p=='.')
			{
				p++;a=0;
				while(*p>='0' && *p<='9')
			    {
					a=a*10+(*p-'0');
					p++;
			    }
			    while(a>=1)
			     	a/=10;

			    x=x+a;
			}

			if(neg==1) x*=-1;

			if(*p==',') p++;
			neg=0;
			if(*p=='-')
				{neg=1;p++;}

			y=0;
			while(*p>='0' && *p<='9')
			{
				y=y*10+(*p-'0');
				p++;
			}

			if(*p=='.')
			{
				p++;b=0;
				while(*p>='0' && *p<='9')
			    {
				b=b*10+(*p-'0');
				p++;
			    }
			    while(b>=1)
			     	b=b/10;
			    y=y+b;
			}

			if(neg==1) y*=-1;


			if(x<x1 || x>x2 || y<y1 || y>y2)
			{
			   p++;
			   if(*p==',') p++;

			   kt=p;

				while(*kt!='\0')
				{
					*pt++=*kt++;
				}
			    *pt='\0';
				p=p-(kt-pt);

			}
		}else
			p++;

		}
		if(p!=s) p--;
		if(*p==',') *p='\0';


   return s;
}


int main() {
char s[] = ""(-15,-30)"";
char pom[100];

strcpy(pom,s);
obuhvat(pom, -15, -30, -14, -29);
printf(""'%s' "", pom);

strcpy(pom,s);
obuhvat(pom, -30, -30, -15, -15);
printf(""'%s' "", pom);

strcpy(pom,s);
obuhvat(pom, -32, -31, -16, -15);
printf(""'%s' "", pom);

strcpy(pom,s);
obuhvat(pom, -15, -30, -15, -30);
printf(""'%s' "", pom);

strcpy(pom,s);
obuhvat(pom, 14, 29, 16, 31);
printf(""'%s' "", pom);

return 0;
}
","#include <stdio.h>

void DajBroj(char *pt,char *kt,float *x,float *y)
{
	
	char *p=pt;
	int neg;
	float a,b;
	
	*x=0;*y=0;
	
		while(p!=kt)
		{
			p++;neg=0;
			
			if(*p=='-'){neg=1;p++;}
		
			*x=0;
			while(*p>='0' && *p<='9')
			{
				*x=*x*10+(*p-'0');
				p++;
			}
			if(*p=='.')
			{
				p++;a=0;
				while(*p>='0' && *p<='9')
				{
					a=a*10+(*p-'0');
					p++;
				}
				while(a>=1)
				 a/=10;
				*x=*x+a;
			}
			if(neg==1) *x*=-1;
			if(*p==',')p++;
			neg=0;
			if(*p=='-'){neg=1;p++;}
			*y=0;
			while(*p>='0' && *p<='9')
			{
				*y=*y*10+(*p-'0');
				p++;
			}
			if(*p=='.')
			{
				p++;b=0;
				while(*p>='0' && *p<='9')
				{
					b=b*10+(*p-'0');
					p++;
				}
				while(b>=1)
				 b/=10;
				*y=*y+b;
			}
			if(neg==1) *y*=-1;
			
		}
		
	
}


char* obuhvat(char *s,float x1,float y1,float x2,float y2)
{
	char* p=s;
	char *pt,*kt,*izb;
	float x,y;

		while(*p!='\0')
		{ 
			
			if(*p=='(')
			{
				pt=p;
				while(*p!=')')p++;
				kt=p;
			
			DajBroj(pt,kt,&x,&y);
			
		
			if(x<x1 || x>x2 || y<y1 || y>y2)
			{   
				p++;
				while(*p==',')p++;
				izb=p;
				
				while(*izb!='\0')
				{
					*pt++=*izb++;
				}
				*pt='\0';
				p=p-(izb-pt);
			}
			
		
			}else p++;
				
		}
		
	    if(p!=s) p--;
		if(*p==',') *p='\0';
	
	return s;	
}




int main() {
	
	char s[] = ""(0,-3.1),(-15.09,4),(2.,2),(-1.1,217)"";
	char* rez = obuhvat(s, -3, -3, 3, 3);
	printf(""%s %s\n"", rez, s);
	return 0;
}
"
842,36,36,0,7,A2016/Z2/Z1/student3116,A2016/Z2/Z1/student4665,"#include <stdio.h>

int main() {
	int UlazniBroj=0, Broj1=0, Broj2=0, I=0, IzlazniBroj=0, dec=1;
	printf(""Unesite broj: "");
	scanf(""%d"", &UlazniBroj);
	if (UlazniBroj<0) UlazniBroj*=-1;
	
	Broj2=UlazniBroj%10;
	
	while (UlazniBroj>9)
	{
		UlazniBroj-=Broj2;
		UlazniBroj/=10;
		Broj1=UlazniBroj%10;
		I=Broj2-Broj1;
		if (I<0) I*=-1;
		IzlazniBroj+=dec*I;
		dec*=10;
		Broj2=Broj1;
	}
	printf(""%d"", IzlazniBroj);
	
	return 0;
}
","#include <stdio.h>
#include<math.h>

int main() {
	int cifra1, broj, novi=0, cifra2, k=1,trenutni=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &broj);
	if(broj<0) 
		broj*=-1;
	while((broj/10)>0){
		cifra1=broj%10;
		broj/=10;
		cifra2=broj%10;
		trenutni=(cifra1-cifra2);
		if (trenutni<0)
			trenutni*=-1;
		novi+=k*trenutni;
		k*=10;
		
	}
	printf(""%d"", novi);
	return 0;
}
"
857,97,97,0,172,A2016/Z1/Z1/student4860,A2016/Z1/Z1/student9923,"#include <stdio.h>
#include <math.h>


int main() {
	
	double tpp,tdp,tp,tzad,tzi,mpp,mdp,mp,mzad,mzi,bpp,bdp,bp,bzad,bzi,ocjena,ocjena2,ocjena3;
    int ocjena1,ocjena21,ocjena31;

	printf(""Unesite bodove za Tarika:"");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &tpp);
	if (tpp<0 || tpp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &tdp);
	if (tdp<0 || tdp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%lf"", &tp);
	if (tp<0 || tp>10){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &tzad);
	if (tzad<0 || tzad>10){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &tzi);
	if (tzi<0 || tzi>40){
     	printf(""Neispravan broj bodova"");
     	return 0;
	
	}

	else if  ((tpp>=0 && tpp<=20) && (tdp>=0 && tdp<=20) && (tp>=0 && tp<=10) && (tzad>=0 && tzad<=10) && (tzi>=0 && tzi<=40) ) {
	 	ocjena=tpp+tdp+tp+tzad+tzi;
	}
	if(ocjena<55){
	ocjena1=5;}
	else if(ocjena>=55 && ocjena<65){
	ocjena1=6;}
	else if(ocjena>=65 && ocjena<75){
	ocjena1=7;}
	else if(ocjena>=75 && ocjena<85){
	ocjena1=8;}
	else if(ocjena>=85 && ocjena<92){
	ocjena1=9;}
	else if(ocjena>=92 && ocjena<=100){
	ocjena1=10;}
	
	
	printf(""Unesite bodove za Bojana:"");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &bpp);
	if (bpp<0 || bpp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &bdp);
	if (bdp<0 || bdp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
		
	}
	printf(""Prisustvo: "");
	scanf(""%lf"", &bp);
		if (bp<0 || bp>10){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &bzad);
	if (bzad<0 || bzad>10){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &bzi);
		if (bzi<0 || bzi>40){
     	printf(""Neispravan broj bodova"");
     	return 0;
	
	}

	
	else if  ((bpp>=0 && bpp<=20) && (bdp>=0 && bdp<=20) && (bp>=0 && bp<=10) && (bzad>=0 && bzad<=10) && (bzi>=0 && bzi<=40) ) {
	 	ocjena2=bpp+bdp+bp+bzad+bzi;
		
	}
	if(ocjena2<55 ){
	ocjena21=5;}
	else if(ocjena2>=55 && ocjena2<65){
	ocjena21=6;}
	else if(ocjena2>=65 && ocjena2<75){
	ocjena21=7;}
	else if(ocjena2>=75 && ocjena2<85){
	ocjena21=8;}
	else if(ocjena2>=85 && ocjena2<92){
	ocjena21=9;}
	else if(ocjena2>=92 && ocjena2<=100){
	ocjena21=10;}

   	
    printf(""Unesite bodove za Mirzu:"");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &mpp);
	if (mpp<0 || mpp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &mdp);
		if (mdp<0 || mdp>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%lf"", &mp);
		if (mp<0 || mp>10){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &mzad);
	if (mzad<0 || mzad>10){
		printf(""Neispravan broj bodova"");
		return 0;
		
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &mzi);
		if (mzi<0 || mzi>40){
     	printf(""Neispravan broj bodova"");
     	return 0;
		}

		
	else if  ((mpp>=0 && mpp<=20) && (mdp>=0 && mdp<=20) && (mp>=0 && mp<=10) && (mzad>=0 && mzad<=10) && (mzi>=0 && mzi<=40) ) {
	 	ocjena3=mpp+mdp+mp+mzad+mzi;
	}
	if(ocjena3<55 ){
	ocjena31=5;}
	else if(ocjena3>=55 && ocjena3<65){
	ocjena31=6;}
	else if(ocjena3>=65 && ocjena3<75){
	ocjena31=7;}
	else if(ocjena3>=75 && ocjena3<85){
	ocjena31=8;}
	else if(ocjena3>=85 && ocjena3<92){
	ocjena31=9;}
	else if(ocjena3>=92 && ocjena3<=100){
	ocjena31=10;}

if(ocjena1>=6 && ocjena21>=6 && ocjena31>=6)
printf(""Sva tri studenta su polozila."");
else if(ocjena1>=6 && ocjena21>=6 && ocjena31<6)
printf(""Dva studenta su polozila."");
else if(ocjena1<6 && ocjena21>=6 && ocjena31>=6)
printf(""Dva studenta su polozila."");
else if(ocjena1>=6 && ocjena21<6 && ocjena31>=6)
printf(""Dva studenta su polozila."");
else if(ocjena1<6 && ocjena21<6 && ocjena31>=6)
printf(""Jedan student je polozio."");
else if(ocjena1>=6 && ocjena21<6 && ocjena31<6)
printf(""Jedan student je polozio."");
else if(ocjena1<6 && ocjena21>=6 && ocjena31<6)
printf(""Jedan student je polozio."");
else if(ocjena1<6 && ocjena21<6 && ocjena31<6)
printf(""Nijedan student nije polozio."");

if(ocjena1==ocjena21 && ocjena21==ocjena31 && ocjena1>=6 && ocjena21>=6 && ocjena31>=6)
printf(""\nSva tri studenta imaju istu ocjenu."");
else if(ocjena1==ocjena21 && ocjena21!=ocjena31 && ocjena1>=6 && ocjena21>=6 && ocjena31>=6)
printf(""\nDva od tri studenta imaju istu ocjenu."");
else if(ocjena1==ocjena31 && ocjena21!=ocjena1 && ocjena1>=6 && ocjena21>=6 && ocjena31>=6)
printf(""\nDva od tri studenta imaju istu ocjenu."");
else if(ocjena21==ocjena31 && ocjena21!=ocjena1 && ocjena1>=6 && ocjena21>=6 && ocjena31>=6)
printf(""\nDva od tri studenta imaju istu ocjenu."");
else if(ocjena1!=ocjena21 && ocjena21!=ocjena31 && ocjena1!=ocjena31 && ocjena1>=6 && ocjena21>=6 && ocjena31>=6)
printf(""\nSvaki student ima razlicitu ocjenu."");




	return 0;
}
","#include <stdio.h>

int main() {
double TIp, TIIp,Tp,Tz,Tzi,To,BIp,BIIp,Bp,Bz,Bzi,Bo,MIp,MIIp,Mp,Mz,Mzi,Mo;
int ocj1, ocj2, ocj3;
printf(""Unesite bodove za Tarika: "");
printf(""\nI parcijalni ispit: "");
scanf(""%lf"",&TIp);
if(TIp<0 || TIp>20) {
printf(""Neispravan broj bodova"");
return 0;}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &TIIp);
if( TIIp<0 || TIIp>20) {
printf(""Neispravan broj bodova"");
return 0;}
printf(""Prisustvo: "");
scanf(""%lf"", &Tp);
if(Tp<0 || Tp > 10){
printf(""Neispravan broj bodova"");
return 0;}
printf(""Zadace: "");
scanf(""%lf"", &Tz);
if(Tz<0 || Tz > 10){
printf(""Neispravan broj bodova"");
return 0;}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &Tzi);
if(Tzi<0 || Tzi>40){
printf(""Neispravan broj bodova"");
return 0;}

 if((TIp>=0 && TIp <= 20) && ( TIIp>=0 && TIIp <=20) && (Tp>=0 && Tp <=10) && (Tz>=0 && Tz <= 10) && (Tzi>=0 && Tzi <= 40))
   {
   	To=(TIp+TIIp+Tp+Tz+Tzi);
  } 
  if(To<55)
  ocj1=5;
  else if(To>=55 && To<65)
   ocj1=6;
  else if(To>=65 && To<75)
   ocj1=7;
  else if(To>=75 && To<85)
  ocj1=8;
  else if(To>=85 && To<92)
  ocj1=9;
  else if(To>=92 && To<=100)
  ocj1=10;
printf(""Unesite bodove za Bojana: "");
printf(""\nI parcijalni ispit: "");
scanf(""%lf"",&BIp);
if(BIp<0 || BIp>20){
printf(""Neispravan broj bodova"");
return 0;}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &BIIp);
if( BIIp<0 || BIIp>20){
printf(""Neispravan broj bodova"");
return 0;}
printf(""Prisustvo: "");
scanf(""%lf"", &Bp);
if(Bp<0 || Bp > 10){
printf(""Neispravan broj bodova"");
return 0;}
printf(""Zadace: "");
scanf(""%lf"", &Bz);
if(Bz<0 || Bz > 10){
printf(""Neispravan broj bodova"");
return 0;}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &Bzi);
if(Bzi<0 || Bzi>40){
printf(""Neispravan broj bodova"");
return 0;}

  if((BIp>=0 && BIp <= 20) && ( BIIp>=0 && BIIp <=20) && (Bp>=0 && Bp <=10) && (Bz>=0 && Bz <= 10) && (Bzi>=0 && Bzi <= 40))
   {
   	Bo=BIp+BIIp+Bp+Bz+Bzi;
  }
  if(Bo<55)
  ocj2=5;
  else if(Bo>=55 && Bo<65)
  ocj2=6;
  else if(Bo>=65 && Bo<75)
  ocj2=7;
  else if(Bo>=75 && Bo<85)
  ocj2=8;
  else if(Bo>=85 && Bo<92)
  ocj2=9;
  else if(Bo>=92 && Bo<=100)
  ocj2=10;
printf(""Unesite bodove za Mirzu: "");
printf(""\nI parcijalni ispit: "");
scanf(""%lf"",&MIp);
if(MIp<0 || MIp>20){
printf(""Neispravan broj bodova"");
return 0;}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &MIIp);
if( MIIp<0 || MIIp>20){
printf(""Neispravan broj bodova"");
return 0;}
printf(""Prisustvo: "");
scanf(""%lf"", &Mp);
if(Mp<0 || Mp > 10){
printf(""Neispravan broj bodova"");
return 0;}
printf(""Zadace: "");
scanf(""%lf"", &Mz);
if(Mz<0 || Mz > 10){
printf(""Neispravan broj bodova"");
return 0;}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &Mzi);
if(Mzi<0 || Mzi>40){
printf(""Neispravan broj bodova"");
return 0;
}
 if((MIp>=0 && MIp <= 20) && ( MIIp>=0 && MIIp <=20) && (Mp>=0 && Mp <=10) && (Mz>=0 && Mz <= 10) && (Mzi>=0 && Mzi <= 40))
   {
   	Mo=MIp+MIIp+Mp+Mz+Mzi;
}
if(Mo<55)
  ocj3=5;
  else if(Mo>=55 && Mo<65)
  ocj3=6;
  else if(Mo>=65 && Mo<75)
  ocj3=7;
  else if(Mo>=75 && Mo<85)
  ocj3=8;
  else if(Mo>=85 && Mo<92)
  ocj3=9;
  else if(Mo>=92 && Mo<=100)
  ocj3=10;
  
  if(ocj1>=6 && ocj2>=6 && ocj3>=6){
     printf(""Sva tri studenta su polozila."");}
    else if(ocj1>=6 && ocj2>=6 && ocj3<6) {
      printf(""Dva studenta su polozila."");}
  else if(ocj1<6 && ocj2>=6 && ocj3>=6) {
      printf(""Dva studenta su polozila."");}
  else if(ocj1>=6 && ocj2<6 && ocj3>=6){
      printf(""Dva studenta su polozila.""); }
  else if(ocj1>=6 && ocj2<6 && ocj3<6){
      printf(""Jedan student je polozio."");}
  else if(ocj1<6 && ocj2>=6 && ocj3<6){
      printf(""Jedan student je polozio."");}
  else if(ocj1<6 && ocj2<6 && ocj3>=6){
      printf(""Jedan student je polozio."");}
   else if(ocj1<6 && ocj2<6 && ocj3<6){
    printf(""Nijedan student nije polozio.""); }
    
     if(ocj1==ocj2 && ocj2==ocj3 && ocj1==ocj3 && ocj1>=6 && ocj2>=6 && ocj3>=6)
     {	printf(""\nSva tri studenta imaju istu ocjenu."");}
    	else if(ocj1==ocj2 && ocj2!=ocj3 && ocj1>=6 && ocj2>=6 && ocj3>=6) 
    	{ printf(""\nDva od tri studenta imaju istu ocjenu."");}
    	else if(ocj1==ocj3 && ocj2!=ocj1 && ocj1>=6 && ocj2>=6 && ocj3>=6)
    	{ printf(""\nDva od tri studenta imaju istu ocjenu."");}
    	else if(ocj2==ocj3 && ocj2!=ocj1 && ocj1>=6 && ocj2>=6 && ocj3>=6)
    	{ printf(""\nDva od tri studenta imaju istu ocjenu."");}
    	else if(ocj1!=ocj2 && ocj2!=ocj3 && ocj1!=ocj3 && ocj1>=6 && ocj2>=6 && ocj3>=6)
       { printf(""\nSvaki student ima razlicitu ocjenu. ""); }   
  
	return 0;
}
"
865,72,72,0,47,A2016/Z1/Z3/student7704,A2016/Z1/Z3/student7697,"#include <stdio.h>

int main() {
	int C,B,S,V,P, ukupno, max;
	double procenat;
	char boja;
	C = 0;
	B = 0;
	S = 0;
	V = 0;
	P = 0;
	max = 0;
	printf(""Unesite vozila: "");
	do {
		scanf(""%c"", &boja);
    if (boja == 'c' || boja == 'C') {
			C++;
			if (C > max) {
				max = C;
			}
		} else if (boja == 'b' || boja == 'B') {
			B++;
			if (B > max) {
				max = B;
				
			}
		} else if (boja == 's' || boja == 'S') {
			S++;
			if (S > max) {
				max = S;
				
			}
		} else if (boja == 'v' || boja == 'V') {
			V++;
			if (V > max) {
				max = V;
				
			}
		} else if (boja == 'p' || boja == 'P') {
			P++;
			if (P > max) {
				max = P;
			}
		} else if (!(boja == 'k' || boja == 'K')) {
			printf(""Neispravan unos\n"");
	    	} 
		} while(!(boja == 'k' || boja == 'K'));
		ukupno = C + V + B + P + S;
		printf(""Ukupno evidentirano %d vozila.\n"", ukupno);
		if (ukupno == 0) {
			procenat = 0;
		} else {
			procenat = (max * 100.)/ukupno;
		}
		if (max == C) {
			printf(""Najpopularnija boja je crna (%.2f%%)."", procenat);
		} else if (max == B) {
			printf(""Najpopularnija boja je bijela (%.2f%%)."", procenat);
		} else if (max == S) {
			printf(""Najpopularnija boja je siva (%.2f%%)."", procenat);
		} else if (max == V) {
			printf(""Najpopularnija boja je crvena (%.2f%%)."", procenat);
		} else if (max == P) {
			printf(""Najpopularnija boja je plava (%.2f%%)."", procenat);
			
		}
	return 0;
}
","#include <stdio.h>

int main() {
	int C=0,B=0,S=0,V=0,P=0,K=0,Ukupno,max;
	double procenat=0;
	char slovo='a';
	C=0;
	B=0;
	S=0;
	V=0;
	P=0;
	max=0;
	printf(""Unesite vozila: "");
	
	while(1) {
		scanf(""%c"",&slovo);
		   if(slovo=='C' || slovo=='c') {
			   C++;
			   if (C>max) {
			   max=C;
		       }
		   } else if(slovo=='B' || slovo=='b') {
			    B++;
			    if (B>max) {
			    max=B;
	     	    }
		   } else if (slovo=='S' || slovo=='s') {
		        S++;
			    if (S>max) {
			    max=S;
			    }
		   } else if(slovo=='V' || slovo=='v') {
			    V++;
			    if (V>max) {
			    max=V;
			    }
		   } else if(slovo=='P' || slovo=='p') {
			    P++;
			    if (P>max) {
			    max=P;
		     	}
		   } else if(slovo == 'k' ||slovo == 'K') 
		   	break;
		   
          else 
              printf(""Neispravan unos\n"");
          } 
          
		Ukupno=C+B+S+V+P;
		
		printf(""Ukupno evidentirano %d vozila.\n"", Ukupno);
		
		if (Ukupno==0) {
			procenat=0;
		} else {
			procenat=(max*100.)/Ukupno;
		}
		
		if (max==C) {
		printf(""Najpopularnija boja je crna (%.2f%%)."",procenat);
		} else if (max==B) {
		printf(""Najpopularnija boja je bijela (%.2f%%)."",procenat);
		} else if (max==S) {
		printf(""Najpopularnija boja je siva (%.2f%%)."",procenat);
		} else if (max==V) {
		printf(""Najpopularnija boja je crvena (%.2f%%)."",procenat);
		} else if (max==P) {
		printf(""Najpopularnija boja je plava (%.2f%%)."",procenat);
	}
	
	return 0;
}
"
868,72,72,0,47,A2016/Z1/Z3/student2925,A2016/Z1/Z3/student7697,"#include <stdio.h>

int main () {
	int C,B,S,V,P, ukupno, max;
	double procenat;
	char boja;
	C = 0;
	B = 0;
	S = 0;
	V = 0;
	P = 0;
	max = 0;

	printf(""Unesite vozila: "");
	do {
		scanf(""%c"", &boja);
	if (boja == 'c' || boja == 'C') {
		C++;
		if (C > max) {
			max = C;
		}
	} else if (boja == 'b' || boja == 'B') {
		B++;
		if (B > max) {
			max = B;
		}
	} else if (boja == 's' || boja == 'S') {
		S++;
		if (S > max) {
			max = S;
		}
	} else if (boja == 'v' || boja =='V') {
		V++;
		if (V > max) {
			max = V;
		}
	} else if (boja == 'p' || boja == 'P') {
		P++;
		if(P > max) {
			max = P;
		}
	} else if (!(boja == 'k' || boja == 'K')) {
		printf(""Neispravan unos\n""); }
	} while(!(boja == 'k' || boja == 'K')); 
	ukupno = C + B + S + V + P;
	printf(""Ukupno evidentirano %d vozila.\n"", ukupno);
	if (ukupno == 0) {
		procenat = 0;
	} else {
		procenat = (max * 100.)/ukupno;
	}
	if (max == C) {
		printf(""Najpopularnija boja je crna (%.2f%%)."", procenat);
	} else if (max == B) {
		printf(""Najpopularnija boja je bijela (%.2f%%)."", procenat);
	} else if (max == S) {
		printf(""Najpopularnija boja je siva (%.2f%%)."", procenat);
	} else if (max == V) {
		printf(""Najpopularnija boja je crvena (%.2f%%)."", procenat);
	} else if (max == P) {
		printf(""Najpopularnija boja je plava (%.2f%%)."", procenat);
		
	 }
	return 0;
}

","#include <stdio.h>

int main() {
	int C=0,B=0,S=0,V=0,P=0,K=0,Ukupno,max;
	double procenat=0;
	char slovo='a';
	C=0;
	B=0;
	S=0;
	V=0;
	P=0;
	max=0;
	printf(""Unesite vozila: "");
	
	while(1) {
		scanf(""%c"",&slovo);
		   if(slovo=='C' || slovo=='c') {
			   C++;
			   if (C>max) {
			   max=C;
		       }
		   } else if(slovo=='B' || slovo=='b') {
			    B++;
			    if (B>max) {
			    max=B;
	     	    }
		   } else if (slovo=='S' || slovo=='s') {
		        S++;
			    if (S>max) {
			    max=S;
			    }
		   } else if(slovo=='V' || slovo=='v') {
			    V++;
			    if (V>max) {
			    max=V;
			    }
		   } else if(slovo=='P' || slovo=='p') {
			    P++;
			    if (P>max) {
			    max=P;
		     	}
		   } else if(slovo == 'k' ||slovo == 'K') 
		   	break;
		   
          else 
              printf(""Neispravan unos\n"");
          } 
          
		Ukupno=C+B+S+V+P;
		
		printf(""Ukupno evidentirano %d vozila.\n"", Ukupno);
		
		if (Ukupno==0) {
			procenat=0;
		} else {
			procenat=(max*100.)/Ukupno;
		}
		
		if (max==C) {
		printf(""Najpopularnija boja je crna (%.2f%%)."",procenat);
		} else if (max==B) {
		printf(""Najpopularnija boja je bijela (%.2f%%)."",procenat);
		} else if (max==S) {
		printf(""Najpopularnija boja je siva (%.2f%%)."",procenat);
		} else if (max==V) {
		printf(""Najpopularnija boja je crvena (%.2f%%)."",procenat);
		} else if (max==P) {
		printf(""Najpopularnija boja je plava (%.2f%%)."",procenat);
	}
	
	return 0;
}
"
874,72,72,0,18,A2016/Z2/Z1/student1547,A2016/Z2/Z1/student6516,"#include <stdio.h>
#include <stdlib.h>

int main() {
	int pc, dc, jed=1, broj=0, unos;
	printf(""Unesite broj: "");
	scanf(""%d"", &unos);
	unos=abs(unos);
	if(unos<10){ printf(""0""); return 0;}
	while (unos>=10){
		pc=unos%10;
	
		unos=unos/10;
		dc=unos%10;
		broj=broj+(abs(pc-dc))*jed;
		jed=jed*10;
	}
	
	printf(""%d"", broj);
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
int main() {
int a,b, broj, rezultat=0, kolicnik=1;
printf(""Unesite broj: "");
scanf(""%d"",&broj);

broj=abs(broj);
if(broj<10)
{ printf(""0"");return 0;
} while 
(broj>=10){
	a=broj%10;
	broj=broj/10;
	b=broj%10;
	rezultat=rezultat+(abs(a-b))*kolicnik;
	kolicnik=kolicnik*10;
	

}
printf(""%d"",rezultat);

	return 0;
}
"
879,54,54,0,18,A2016/Z2/Z1/student4150,A2016/Z2/Z1/student9923,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int main() {
	int broj,brojac=0,kopija,broj1,broj2,razlika=0,i, konacno=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &broj);

	if(broj<0) broj*=-1;
		kopija=broj;
	while(broj!=0) {
		broj/=10;
		brojac++;
	}	
	if(broj<10 && broj>0) {
		printf(""0"");
		return 0;
	}	
		
		for(i=0; i<brojac-1; i++) {
		broj1=kopija%10;
		kopija/=10;
		broj2=kopija%10;
		razlika+=abs(broj1-broj2);
		razlika*=10;
	}
	razlika/=10;

	for(i=0;i<brojac-1;i++) {
		konacno+=razlika%10;
		konacno*=10;
		razlika/=10;
	}
konacno/=10;
printf(""%d"",konacno);
		
return 0;
}","#include <stdio.h>
#include <stdlib.h>
int main() { 
	int e,d,br=0,broj1,broj2,zbir=0,kon=0,i;
	printf(""Unesite broj: "");
	scanf(""%d"", &e);
	if(e>0 && e<10) {
		printf(""0"");
		return 0;
	}
	d=e;
	while(e!=0) {
		e/=10;
		br++;
	}
	
for(i=0;i<br-1;i++) {
	broj1=d%10;
	d/=10;
	broj2=d%10;
	zbir+=abs(broj1-broj2);
	zbir*=10;
}
zbir/=10;
for(i=0;i<br-1;i++) {
	kon+=zbir%10;
	kon*=10;
	zbir/=10;
}
kon/=10;
	printf(""%d"",kon);

	return 0;
}
"
891,99,99,0,55,A2016/Z2/Z2/student9315,A2016/Z2/Z2/student4766,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926
#define MAX_SIZE 500
int main(){
	double ugao[MAX_SIZE], stepeni[MAX_SIZE],minute[MAX_SIZE],sekunde[MAX_SIZE];
	int n,i,j,sgn;
	double stepsec, minsec, sec;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	
	if(n>MAX_SIZE)
	n=MAX_SIZE;
	//unos
	for(i=0; i<n; i++){
		scanf(""%lf"", &ugao[i]);
		ugao[i] = ugao[i]*(180/PI);
	
	}
	//dodjela vrijednosti
	for(i=0;i<n;i++){
		sec = ugao[i]*3600;
		
		stepeni[i] = ((int)sec)/3600;
		stepsec = (stepeni[i]*3600);
		minute[i] =(int)(((int)(sec-stepsec))/60);
		minsec = minute[i]*60;
		sekunde[i]= sec -stepsec-minsec;
	}
	//zaokruzivanje
	for(i=0; i<n; i++){
		sgn=1;
		if(sekunde[i]<0)
		sgn=-1;
		sekunde[i]= (int) (sekunde[i]+ sgn*0.5);
		if(fabs(sekunde[i])==60){
			sekunde[i]=0;
			minute[i]+=sgn*1;
			if(fabs(minute[i])==60){
				minute[i]=0;
				stepeni[i]+=sgn*1;
			}
		}
		if(fabs(sekunde[i])>30){
		for(j=i; j<n-1; j++){
			ugao[j]=ugao[j+1];
			stepeni[j]=stepeni[j+1];
			minute[j]=minute[j+1];
			sekunde[j]=sekunde[j+1];
			
		}
		i--;
		n--;
		}
	}

		printf(""Uglovi su: \n"");
		for(i=0; i<n; i++){
			printf(""%d stepeni %d minuta %d sekundi \n"", (int)stepeni[i],abs(minute[i]), abs(sekunde[i]));
		}
	
	return 0;
}


","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926
#define MAX_SIZE 500
int main(){
	double ugao[MAX_SIZE], stepeni[MAX_SIZE],minute[MAX_SIZE],sekunde[MAX_SIZE];
	int n,i,j,sgn;
	double stepsec, minsec, sec;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	
	if(n>MAX_SIZE)
	n=MAX_SIZE;
	//unos
	for(i=0; i<n; i++){
		scanf(""%lf"", &ugao[i]);
		ugao[i] = ugao[i]*(180/PI);
	
	}
	//dodjela vrijednosti
	for(i=0;i<n;i++){
		sec = ugao[i]*3600;
		
		stepeni[i] = ((int)sec)/3600;
		stepsec = (stepeni[i]*3600);
		minute[i] =(int)(((int)(sec-stepsec))/60);
		minsec = minute[i]*60;
		sekunde[i]= sec -stepsec-minsec;
	}
	//zaokruzivanje
	for(i=0; i<n; i++){
		sgn=1;
		if(sekunde[i]<0)
		sgn=-1;
		sekunde[i]= (int) (sekunde[i]+ sgn*0.5);
		if(fabs(sekunde[i])==60){
			sekunde[i]=0;
			minute[i]+=sgn*1;
			if(fabs(minute[i])==60){
				minute[i]=0;
				stepeni[i]+=sgn*1;
			}
		}
		if(fabs(sekunde[i])>30){
		for(j=i; j<n-1; j++){
			ugao[j]=ugao[j+1];
			stepeni[j]=stepeni[j+1];
			minute[j]=minute[j+1];
			sekunde[j]=sekunde[j+1];
			
		}
		i--;
		n--;
		}
	}

		printf(""Uglovi su: \n"");
		for(i=0; i<n; i++){
			printf(""%d stepeni %d minuta %d sekundi \n"", (int)stepeni[i],abs(minute[i]), abs(sekunde[i]));
		}
	
	return 0;
}


"
900,89,89,0,90,A2016/Z3/Z3/student5612,A2016/Z3/Z3/student7293,"#include <stdio.h>
#include <stdlib.h>
int main(){
	int i;
	int j;
	int M;
	int N;
	int x = 0;
	int MATRIX[200][200];
	int l = 0;
	int a, b;
	int zamjena;
	do {
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"", &M, &N);
		if (M > 200 || M < 1 || N > 200 || N < 1){
			printf(""Brojevi nisu u trazenom opsegu.\n"");
		}} while(M > 200 || M < 1 || N > 200 || N < 1);
		printf(""Unesite elemente matrice: "");
		for(i = 0; i < M; i++){
			for(j = 0; j < N; j++){
			scanf(""%d"", &MATRIX[i][j]);
		}
	}
	for(i = 0; i < M; i++){
		for (j = i + 1; j < M; j++){
			l = 0;
			for(x = 0; x < N; x++){
				if (MATRIX[i][x] == MATRIX[j][x]){
					l ++;
				}
				if (l == N){
					for(a = j + 1; a < M; a++ ){
						for(b = 0; b < N; b++){
							zamjena = MATRIX[a-1];
							MATRIX[a-1][b] = MATRIX[a][b];
							MATRIX[a][b] = zamjena;
						}
					}
					M --;
					j --;
				}
			}
		}
	}
	for (i = 0; i < N; i++){
		for(j = i +  1; j < N; j++){
			l = 0;
			for(x = 0; x < M; x ++){
				if (MATRIX[x][i] == MATRIX[x][j]){
					l++;
				}
				if(l == M){
					for(a = j+1; a < N; a++){
						for(b = 0; b < M; b++){
							zamjena = MATRIX[b][a-1];
							MATRIX[b][a-1] = MATRIX[b][a];
							MATRIX[b][a] = zamjena;
						}
					}
					N -- ;
					j --;
				}
			}
		}
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i = 0; i < M; i++){
		for (j = 0; j < N; j++){
			printf(""%5d"", MATRIX[i][j]);
		}
		printf(""\n"");
	}
	return 0;
	}
	
","#include <stdio.h>

int main() 
{
	int m,n,i,j,mat[200][200],br=0,k=0,l,temp,p;

	do 
	{
		printf(""Unesite brojeve M i N: "");
		scanf (""%d %d"", &m,&n);
		if (m<=0 || m>200 || n<=0 || n>200)
		{
			printf (""Brojevi nisu u trazenom opsegu.\n"");
		}
	} while (m<=0 || m>200 || n<=0 || n>200);
	
	printf (""Unesite elemente matrice: "");
	for (i=0; i<m; i++)
	{
		for (j=0; j<n; j++)
		{
			scanf (""%d"", &mat[i][j]);
		}
	}
	


	for (i=0; i<m; i++)
	{
		for (j=i+1; j<m; j++)
		{
			br=0;
			for (k=0; k<n; k++)
			{
				if (mat[i][k]==mat[j][k]);
				{
					br++;
				}
				if (br==n)
				{
					for (l=j+1; l<m; l++)
					{
						for (p=0; p<n; p++)
						{
							temp=mat[l-1][p];
							mat[l-1][p]=mat[l][p];
							mat[l][p]=temp;
						}
					}
					m--;
					j--;
				}
			}
		}
	}
	
	for (i=0; i<n; i++)
	{
		for (j=i+1; j<n; j++)
		{
			br=0;
			for (k=0; k<m; k++)
			{
				if (mat[k][i]==mat[k][j])
				{
					br++;
				}
				if (br==m)
				{
					for (l=j+1; l<n; l++)
					{
						for (p=0; p<m; p++)
						{
							temp=mat[p][l-1];
							mat[p][l-1]=mat[p][l];
							mat[p][l]=temp;
						}
					}
					n--;
					j--;
				}
			}
		}
	}
	
	
	printf (""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	
		for (i=0; i<m; i++);
		{
			for (j=0; j<n; j++)
			{
				printf (""%5d"", mat[i][j]);
			}
			printf(""\n"");
		}
	return 0;
}
"
901,99,99,0,39,A2016/Z1/Z3/student5621,A2016/Z1/Z3/student7255,"#include <stdio.h>

int main() {
	float C=0,B=0,S=0,V=0,P=0,cp=0.0,bp=0.0,sp=0.0,vp=0.0,pp=0.0,Uv=0;
	char unos;
	printf(""Unesite vozila: "");
	do{
		scanf(""%c"",&unos);
		if((unos=='c')||(unos=='C')){C++; }
		else if ((unos=='b')||(unos=='B')){B++; }
		else if ((unos=='s')||(unos=='S')){S++; }
		else if ((unos=='v')||(unos=='V')){V++; }
		else if ((unos=='p')||(unos=='P')){P++; }
		else if ((unos!='k')&&(unos!='K')){printf(""Neispravan unos\n"");}
		} while ((unos!='k')&&(unos!='K'));
		Uv=C+B+S+V+P;
		cp=(C/Uv)*100;
		bp=(B/Uv)*100;
		sp=(S/Uv)*100;
		vp=(V/Uv)*100;
		pp=(P/Uv)*100;
		printf(""Ukupno evidentirano %g vozila.\n"",Uv);
		if(Uv==0){
			printf(""Najpopularnija boja je crna (0.00%%)."");
			return 0;}
		if((C>=B)&&(C>=S)&&(C>=V)&&(C>=P)){
			printf(""Najpopularnija boja je crna (%.2f%%)."",cp);
			return 0;}
		if((B>=C)&&(B>=S)&&(B>=V)&&(B>=P)){
			printf(""Najpopularnija boja je bijela (%.2f%%)."",bp);
			return 0;}
		if((S>=C)&&(S>=B)&&(S>=V)&&(S>=P)){
			printf(""Najpopularnija boja je siva (%.2f%%)."",sp);
			return 0;}
		if((V>=C)&&(V>=B)&&(V>=S)&&(V>=P)){
			printf(""Najpopularnija boja je crvena (%.2f%%)."",vp);
			return 0;}
		if((P>=C)&&(P>=B)&&(P>=S)&&(P>=V)){
			printf(""Najpopularnija boja je plava (%.2f%%)."",pp);
			return 0;}
		return 0;

}
","#include <stdio.h>

int main() {
	float C=0,B=0,S=0,V=0,P=0,cp=0.0,bp=0.0,sp=0.0,vp=0.0,pp=0.0,Uv=0;
	char unos;
	printf(""Unesite vozila: "");
	do{
		scanf(""%c"",&unos);
		if((unos=='c')||(unos=='C')){C++; }
		else if ((unos=='b')||(unos=='B')){B++; }
		else if ((unos=='s')||(unos=='S')){S++; }
		else if ((unos=='v')||(unos=='V')){V++; }
		else if ((unos=='p')||(unos=='P')){P++; }
		else if ((unos!='k')&&(unos!='K')){printf(""Neispravan unos\n"");}
		} while ((unos!='k')&&(unos!='K'));
		Uv=C+B+S+V+P;
		cp=(C/Uv)*100;
		bp=(B/Uv)*100;
		sp=(S/Uv)*100;
		vp=(V/Uv)*100;
		pp=(P/Uv)*100;
		printf(""Ukupno evidentirano %g vozila.\n"",Uv);
		if(Uv==0){
			printf(""Najpopularnija boja je crna (0.00%%)."");
			return 0;}
		if((C>=B)&&(C>=S)&&(C>=V)&&(C>=P)){
			printf(""Najpopularnija boja je crna (%.2f%%)."",cp);
			return 0;}
		if((B>=C)&&(B>=S)&&(B>=V)&&(B>=P)){
			printf(""Najpopularnija boja je bijela (%.2f%%)."",bp);
			return 0;}
		if((S>=C)&&(S>=B)&&(S>=V)&&(S>=P)){
			printf(""Najpopularnija boja je siva (%.2f%%)."",sp);
			return 0;}
		if((V>=C)&&(V>=B)&&(V>=S)&&(V>=P)){
			printf(""Najpopularnija boja je crvena (%.2f%%)."",vp);
			return 0;}
		if((P>=C)&&(P>=B)&&(P>=S)&&(P>=V)){
			printf(""Najpopularnija boja je plava (%.2f%%)."",pp);
			return 0;}
		return 0;

}
"
914,81,81,0,65,A2016/Z2/Z4/student6824,A2016/Z2/Z4/student3329,"#include <stdio.h>
/*eh idemo*/
int main() 
{
    int M,N,i,j,teplicova=1,cirkularna=1;
    double selma[100][100];
    double suma[100]={0};
    do
    {
        printf(""Unesite M i N: "");
        scanf(""%d %d"",&M,&N);
        if(M<1 || M>100 ||N<1 || N>100)
        {
            printf(""Pogresan unos!\n"");
        }
    }
    while(M<1||M>100 || N<1 || N>100);
    
    printf(""Unesite elemente matrice: "");
    for(i=0;i<M;i++)
    {
        for(j=0;j<N;j++)
        {
            scanf(""%lf"",&selma[i][j]);
        }
    }
    
    for(i=0;i<M-1;i++)
    {
        for(j=0;j<N-1;j++)
        {
            if(selma[i][j]!=selma[i+1][j+1])
            {
           
                teplicova=0;
            }
            
            
    }
    }
     if(teplicova==1)
     {
    for(i=0;i<M;i++)
    {
        for(j=0;j<N;j++)
        {
            suma[i]=suma[i]+selma[i][j];
        }
        for(i=0;i<M-1;i++)
        {
            if(suma[i]!=suma[i+1])
            {
              
                cirkularna=0;
            }
            
        }
    }
     }
     else
     {
         cirkularna=0;
     }
    
    if(teplicova==1 && cirkularna==0)
    {
        printf(""Matrica je Teplicova\n"");
    }
    else if(teplicova==1 && cirkularna==1)
    {
        printf(""Matrica je cirkularna"");
    }
    else if(teplicova==0 && cirkularna==0)
    {
        printf(""Matrica nije ni cirkularna ni Teplicova"");
    }
	
	
	
	
	
	
	
	return 0;
	
	
}
","#include <stdio.h>

int main() {
    int M,N,teplicova=1,cirkularna=1,i,j;
    double mat[100][100];
    double sumaReda[100]={0};
    /*Unos dimenzija matrice*/
    do {
        printf(""Unesite M i N: ""); scanf(""%d %d"",&M,&N);
        if (M>100||M<1||N>100||N<1) printf(""Pogresan unos!\n"");
    } while (M>100||M<1||N>100||N<1);
    /*Unos elemenata matrice*/
    printf(""Unesite elemente matrice: "");
    for (i=0; i<M; i++){
        for (j=0; j<N; j++){
            scanf(""%lf"", &mat[i][j]);
        }
    }
    /*Provjera da li je matrica teplicova*/
    for (i=0; i<M-1; i++){
        for (j=0; j<N-1; j++){
            if (mat[i][j]!=mat[i+1][j+1]) {teplicova=0;}
        }
    }
    /*Pojedinacna suma redova i provjera da li je matrica cirkularna*/
    if (teplicova==1){
        for (i=0; i<M; i++){
            for (j=0; j<N; j++){
                sumaReda[i]+=mat[i][j];
            }
        }
        for (i=0; i<M-1; i++){
            if (sumaReda[i]!=sumaReda[i+1]) {cirkularna=0;}
        }
    }else{
        cirkularna=0;
    }
    /*Ispis odgovora za datu matricu*/
    if (teplicova==1 && cirkularna==0){
        printf(""Matrica je Teplicova"");
    }else if (cirkularna==1){
        printf(""Matrica je cirkularna"");
    }else if (teplicova==0 && cirkularna==0){
        printf(""Matrica nije ni cirkularna ni Teplicova"");
    }
	return 0;
}"
915,87,87,0,34,A2016/Z2/Z3/student1476,A2016/Z2/Z3/student7255,"#include <stdio.h>
int main() {
	int i,j,n,br;
	char mat[20][20];
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &n);
	while (n<1 || n>10) {printf(""Pogresan unos\n"");
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&n);
	}
	for(i=0; i<20; i++){
	 for(j=0; j<20; j++){
	  mat[i][j]=' ';
	 	}
	}
	for(br=0;br<n;br++){
		printf(""Unesite %d. tacku: "", br+1);
		scanf(""%d"", &i);
		scanf(""%d"", &j);
		while((i<0 || i>19)||(j<0 || j>19)) 
		{
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "", br+1);
			scanf(""%d"", &i);
			scanf(""%d"", &j);
		}
	mat[i][j]='*'; 
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			printf(""%c"", mat[j][i]);
		}
		printf(""\n"");
}
return 0;
}","#include <stdio.h>

int main() {
	int bt,n,i,j;
	int p,d;
	char niz[20][20];
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &bt);
	while (bt<1 || bt>10){
		printf(""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &bt);
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			niz[i][j]=' ';
		}
	}
	
	for(i=0;i<bt;i++){
		printf(""Unesite %d. tacku: "",i+1);
		scanf(""%d %d"",&p,&d);
		while(p<0 || p>19 || d<0 || d>19){
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "",i+1);
			scanf(""%d %d"",&p,&d);
		}
		niz[d][p]='*';
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			printf(""%c"",niz[i][j]);
		}
		printf(""\n"");
	}
	
	return 0;
}
"
923,38,38,0,19,A2016/Z2/Z2/student1313,A2016/Z2/Z2/student4982,"#include <stdio.h>
#define Pi 3.1415926
#include <stdlib.h>
#include <math.h>

int main() {
	int n,i,j;
	double ugao[500],min[500],sek[500];
	/*BROJ uglova tj cl niza*/ 
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	
	/*unos UGLOVA tj clanova ugao[i] i pretvaranje*/ 
	for (i=0;i<n;i++) {
		scanf(""%lf"",&ugao[i]);
		ugao[i]=ugao[i] * (180/Pi);
	/*MINUTE min[i] npr 45,27 treba mi 0,27 znaci od ukupnog oduzimam zaokruzeno
	 pomnoziti sa 60, moze biti neg ug pa apsolutnu*/
	min[i]=(fabs(ugao [i])-abs((int)ugao[i]))*60;
	/*SEKUNDE sek[i] opet oduzeti od minuta sad i pomn*/
	sek[i]=(min[i]-(int)min[i])*60;
	sek[i]=(int)(sek[i]+0.5);
	/*npr 60sek*/
	if (sek[i]>=60){
		min[i]=min[i]+1;
		sek[i]=0;}
	if (min[i]>=60){
		if (ugao[i]<0) ugao[i]=ugao[i]-1;
		else ugao[i]=ugao[i]+1;
		min[i]=0;}
		
	/*izbacivanje*/	
	if(sek[i]>30){
	 for(j=i;j<n-1;j++){
	 	ugao[j]=ugao[j+1];
	 }
	 n--; i--;
	}
	}
	
	/*ispis*/
	printf(""Uglovi su: "");
	for (i=0;i<n;i++)
	 printf(""\n%d stepeni %d minuta %d sekundi"",(int)ugao[i],(int)min[i],(int)sek[i]);
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926
int main() {
	
	int n,i,j;
	double uglovi[500],stepeni[500],minute[500],sekunde[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	if(n<=0 || n>500)
	{ printf(""Pogresan unos\n""); return 0;}
	for(i=0;i<n;i++)
	{
		scanf(""%lf"",&uglovi[i]);
	}
	
	for(i=0;i<n;i++)
	{   
		stepeni[i]=uglovi[i]*180/PI;
		minute[i]=(fabs(stepeni[i])-fabs((int)stepeni[i]))*60;
		sekunde[i]=(minute[i]-(int)minute[i])*60;
		if(sekunde[i] - (int)sekunde[i]>=0.5) {sekunde[i]=(int)sekunde[i]+1;}
		if(sekunde[i]>=60) {minute[i]++; sekunde[i]-=60;}
		if(stepeni[i]>0 &&minute[i]>=60) {stepeni[i]++; minute[i]-=60;}
		if(stepeni[i]<0 &&minute[i]>=60) {stepeni[i]--; minute[i]-=60;}
		
		
	}
	for(i=0;i<n; i++) {
		if(sekunde[i]>30)
		{
			for(j=i;j<n-1;j++)
			{
				stepeni[j]=stepeni[j+1];
				minute[j]=minute[j+1];
				sekunde[j]=sekunde[j+1];
				
			}
			n--; i--;
		}
		
	}
	
	printf(""Uglovi su:\n"");
	for(i=0;i<n;i++)
	{
		printf(""%d stepeni %d minuta %d sekundi\n"", (int)stepeni[i],(int)minute[i],(int)sekunde[i] );
	}

	
	return 0;
}
"
929,99,99,0,75,A2016/Z3/Z3/student8532,A2016/Z3/Z3/student3186,"#include <stdio.h>
#define vel 200

/* funkcija koja izbacuje red matrice i kao rezultat vraca novi broj redova */
int izbaci_red (int mat[vel][vel], int red, int kolona) {
	int i, j, k, l, brojac;
	
	for (i=0; i<red; i++) {
		for (j=i+1; j<red; j++) {
			brojac = 0;
			for (k=0; k<kolona; k++) {
				if (mat[i][k] == mat[j][k])
				brojac ++;
			}
			if (brojac == kolona) {
				for (k=0; k<kolona; k++) {
					for (l=j; l<red-1; l++)
					mat[l][k] = mat[l+1][k];
				}
					red--; 
					j--;
			}
		}
	}
	return red;
}

/* funkcija koja izbacuje kolonu matrice i kao rezultat vraca novi broj kolona */
int izbaci_kolonu (int mat[vel][vel], int red, int kolona) {
	int i, j, k, l, brojac;
	
	for (i=0; i<kolona; i++) {
		for (j=i+1; j<kolona; j++) {
			brojac = 0;
			for (k=0; k<red; k++) {
				if (mat[k][i] == mat[k][j])
				brojac ++;
			}
			if (brojac == red) {
				for (k=0; k<red; k++) {
					for (l=j; l<kolona-1; l++)
					mat[k][l] = mat[k][l+1];
				}
					kolona--;
					j--;
			}
		}
	}
	return kolona;
}

int main() {
	int m, n, i, j, mat[vel][vel];
	
	do {
	printf(""Unesite brojeve M i N: "");
	scanf (""%d %d"", &m, &n);
	
	if (m>200 || n>200 || m<1 || n<1)
	printf (""Brojevi nisu u trazenom opsegu.\n"");
	} while (m>200 || n>200 || m<1 || n<1);
	
	printf (""Unesite elemente matrice: "");
	for (i=0; i<m; i++)
		for (j=0; j<n; j++) {
			scanf (""%d"", &mat[i][j]);
	}
	
	m = izbaci_red(mat, m, n);
	n = izbaci_kolonu(mat, m, n);
	
	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i=0; i<m; i++) {
		for (j=0; j<n; j++) {
			printf (""%5d"", mat[i][j]);
		}	printf (""\n"");
	}
	
	return 0;
}","#include <stdio.h>
#define vel 200

/* funkcija koja izbacuje red matrice i kao rezultat vraca novi broj redova */
int izbaci_red (int mat[vel][vel], int red, int kolona) {
	int i, j, k, l, brojac;
	
	for (i=0; i<red; i++) {
		for (j=i+1; j<red; j++) {
			brojac = 0;
			for (k=0; k<kolona; k++) {
				if (mat[i][k] == mat[j][k])
				brojac ++;
			}
			if (brojac == kolona) {
				for (k=0; k<kolona; k++) {
					for (l=j; l<red-1; l++)
					mat[l][k] = mat[l+1][k];
				}
					red--; 
					j--;
			}
		}
	}
	return red;
}

/* funkcija koja izbacuje kolonu matrice i kao rezultat vraca novi broj kolona */
int izbaci_kolonu (int mat[vel][vel], int red, int kolona) {
	int i, j, k, l, brojac;
	
	for (i=0; i<kolona; i++) {
		for (j=i+1; j<kolona; j++) {
			brojac = 0;
			for (k=0; k<red; k++) {
				if (mat[k][i] == mat[k][j])
				brojac ++;
			}
			if (brojac == red) {
				for (k=0; k<red; k++) {
					for (l=j; l<kolona-1; l++)
					mat[k][l] = mat[k][l+1];
				}
					kolona--;
					j--;
			}
		}
	}
	return kolona;
}

int main() {
	int m, n, i, j, mat[vel][vel];
	
	do {
	printf(""Unesite brojeve M i N: "");
	scanf (""%d %d"", &m, &n);
	
	if (m>200 || n>200 || m<1 || n<1)
	printf (""Brojevi nisu u trazenom opsegu.\n"");
	} while (m>200 || n>200 || m<1 || n<1);
	
	printf (""Unesite elemente matrice: "");
	for (i=0; i<m; i++)
		for (j=0; j<n; j++) {
			scanf (""%d"", &mat[i][j]);
	}
	
	m = izbaci_red(mat, m, n);
	n = izbaci_kolonu(mat, m, n);
	
	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i=0; i<m; i++) {
		for (j=0; j<n; j++) {
			printf (""%5d"", mat[i][j]);
		}	printf (""\n"");
	}
	
	return 0;
}"
942,98,98,0,40,A2016/Z2/Z4/student6122,A2016/Z2/Z4/student2126,"#include <stdio.h>
#include <math.h>
#define epsilon 0.000001
int main() {
	
	double mat[100][100]={{0}}; 
	int i, j, m, n,t1=1;
	printf(""Unesite M i N: "");
	scanf(""%d%d"", &m, &n);
	if ((m>100 || m<=0) || (n>100 || n<=0)){
		do {
			printf(""Pogresan unos!"");
			printf(""\nUnesite M i N: "");
			scanf(""%d%d"", &m, &n);
		} while ((m>100 || m<=0) || (n>100 || n<=0));
	}
	printf(""Unesite elemente matrice: "");
	for(i=0; i<m; i++ ){ 
		for(j=0; j<n; j++){
			scanf(""%lf"", &mat[i][j]);
		}
	}
	if(n==1 && m!=1) {
		printf(""Matrica je Teplicova"");
		return 0;
	}

	for (i=0; i<m-1; i++){
		for (j=0; j<n-1; j++){
		
			if (fabs(mat[i][j]-mat[i+1][j+1])>epsilon){ printf (""Matrica nije ni cirkularna ni Teplicova""); return 0;}
			
		}
	}
	
	for(i=0; i<m-1; i++){
		for(j=0; j<n-1; j++){
			if (fabs(mat[i][n-1]-mat[i+1][0])>epsilon) { t1=0;}
		}
	}
	
	if(t1)printf(""Matrica je cirkularna""); 
	else printf(""Matrica je Teplicova""); 
	
	return 0;
	
}","#include <stdio.h>
#include <math.h>
#define epsilon 0.000001
int main() {
	
	double mat[100][100]={{0}}; 
	int i, j, m, n,t1=1;
	printf(""Unesite M i N: "");
	scanf(""%d%d"", &m, &n);
	if ((m>100 || m<=0) || (n>100 || n<=0)){
		do {
			printf(""Pogresan unos!"");
			printf(""\nUnesite M i N: "");
			scanf(""%d%d"", &m, &n);
		} while ((m>100 || m<=0) || (n>100 || n<=0));
	}
	printf(""Unesite elemente matrice: "");
	for(i=0; i<m; i++ ){ 
		for(j=0; j<n; j++){
			scanf(""%lf"", &mat[i][j]);
		}
	}
	if(n==1 && m!=1) {
		printf(""Matrica je Teplicova"");
		return 0;
	}

	for (i=0; i<m-1; i++){
		for (j=0; j<n-1; j++){
		
			if (fabs(mat[i][j]-mat[i+1][j+1])>epsilon){ printf (""Matrica nije ni cirkularna ni Teplicova""); return 0;}
			
		}
	}
	
	for(i=0; i<m-1; i++){
		for(j=0; j<n-1; j++){
			if (fabs(mat[i][n-1]-mat[i+1][0])>epsilon) { t1=0;}
		}
	}
	
	if(t1)printf(""Matrica je cirkularna""); 
	else printf(""Matrica je Teplicova""); 
	
	return 0;
	
}"
950,88,88,0,66,A2016/Z3/Z3/student9358,A2016/Z3/Z3/student7810,"#include <stdio.h>

int main() {
	int m=0,n=0,i,j,k,mat[200][200],isticl=0,a,b,postoji;
	do {
	  printf(""Unesite brojeve M i N: "");
	  scanf(""%d %d"",&m,&n);
	  if(m<=0 || n<=0 || m>200 || n>200) printf(""Brojevi nisu u trazenom opsegu.\n"");
	} while(m<=0 || n<=0 || m>200 || n>200);

	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++)
		for(j=0;j<n;j++)
			scanf(""%d"",&mat[i][j]);
	
	/*izbacivanje reda*/
	
	while(1){  
		postoji=0;
		for(i=0;i<m;i++){   
			for(k=i+1;k<m;k++){
				for(j=0;j<n;j++){
					if (mat[i][j]==mat[k][j]) isticl++;
				}
		 		if (isticl==n){   
				postoji=1;	
				for(b=k;b<m-1;b++){
					for(a=0;a<n;a++){
						mat[b][a]=mat[b+1][a];
					}
				}
				m--;
				}
			isticl=0;
			}
		}
    if(postoji==0) break;
	}
	
/*izbacivanje kolone*/


	while(1){  
		postoji=0;
		for(j=0;j<n;j++){   
			for(k=j+1;k<n;k++){
				for(i=0;i<m;i++){
					if (mat[i][j]==mat[i][k]) isticl++;
				}
	    		if (isticl==m){   
				postoji=1;	
				for(b=k;b<n-1;b++){
					for(a=0;a<m;a++){
						mat[a][b]=mat[a][b+1];
					}
				}
				n--;
				}
			isticl=0;
			}
		}
    if(postoji==0) break;
	}
	
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			printf(""%5d"",mat[i][j]);
		}
		printf(""\n"");
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	int M,N,i,j,k,matrica[200][200],brojac=0,isticlan=0,z,t;
	/*Petlja koja omogucava unos dimenzija matrice u trazenom opsegu*/
	do {
		printf(""Unesite brojeve M i N: "");
		scanf(""%d%d"",&M,&N);
		if (M>200 || N>200 || M<=0 || N<=0) printf(""Brojevi nisu u trazenom opsegu.\n"");
	}while (M>200 || N>200 || M<=0 || N<=0);
	printf(""Unesite elemente matrice: "");
	/*Unos elemenata matrice*/
	for (i=0;i<M;i++)
	     for (j=0;j<N;j++)
	          scanf(""%d"",&matrica[i][j]);
	/*While petlja koja izbacuje redove sa istim clanovima izuzev prvog takvog reda*/
	while (1){
		isticlan=0;
		for(i=0;i<M;i++){ /*petlje 'i' i 'k' prolaze kroz redove matrice*/
		    for(k=i+1;k<M;k++){
		     	for (j=0;j<N;j++){ /*petlja 'j' prolazi kroz kolone matrice*/
		     		if (matrica[i][j]==matrica[k][j]) brojac++; /*trazenje istih clanova u redovima matrice*/
		     	}
		     	if (brojac==N){ /*ako je brojac jednak broju kolona to znaci da red 'k' ima sve iste clanove kao i red 'i' */
		     		isticlan=1;
		     		/*izbacivanje reda iz matrice*/
		     		for (z=k;z<M-1;z++){
		     		     for(t=0;t<M;t++){
		     		         matrica[z][t]=matrica[z+1][t];
		     		     }
		     		}
		     		M=M-1;
		     	}
		     	brojac=0;
		     }
	    }
	if (isticlan==0) break;
	}
	/*potpuno isti postupak se ponavlja pri izabcivanju redova matrice sa istim clanovima*/
		while (1){
			isticlan=0;
		for(j=0;j<N;j++){
		    for(k=j+1;k<N;k++){
		     	for (i=0;i<M;i++){
		     		if (matrica[i][j]==matrica[i][k]) brojac++;
		     	}
		     	if (brojac==M){
		     		isticlan=1;
		     		for (z=k;z<N-1;z++){
		     		     for(t=0;t<M;t++){
		     		         matrica[t][z]=matrica[t][z+1];
		     		     }
		     		}     
		     		N--;
		     	}
		     brojac=0;
	    	}
		}
	    if (isticlan==0) break;
		}
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i=0;i<M;i++){
	     for (j=0;j<N;j++)
	          printf(""%5d"",matrica[i][j]);
	                 printf(""\n"");}
	return 0;
}
"
951,88,88,0,84,A2016/Z3/Z3/student4554,A2016/Z3/Z3/student8561,"#include <stdio.h>
int main() 
{
	int N, M;
	int m[100][100];
	int l, j, i, f, r, kol;
	int ind1=0, ind2=0;
	
	do 
	{
		printf (""Unesite brojeve M i N: "");
		scanf (""%d %d"", &M, &N);
		if ( M < 1 || N < 1 || M > 200 || N > 200 ) 
		{
		   printf(""Brojevi nisu u trazenom opsegu.\n"");
		}
		
	} while ( M < 1 || N < 1 || M > 200 || N >200 );
	      printf(""Unesite elemente matrice: "");
	for ( i=0; i<M; i++ ) {
		for ( j=0; j<N; j++ ) {
			scanf (""%d"", &m[i][j]);
		}
	}
	for ( i=0; i<M-1; i++ ) {
		if (ind1 == 1)
		   i--;
		for ( f=i+1; f<M; f++ ) {
			kol = 0;
			while (kol < N) 
			{
				if (m[i][kol]==m[f][kol])
				{
				   ind1 = 1;
				}
				else {
					ind1 = 0;
					break;
				}
			    kol++;
		    }
	    if (ind1 == 1) {
		    for ( j=f; j<M-1; j++ ) {
			    for ( l=0; l<N; l++ ) {
				    m[j][l]=m[j+1][l];
			    }
		    }
		    M--;
		    f--;
	    }
	    }
	 }
     for ( i=0; i<N-1; i++ ) {
    	if (ind2 == 1)
    	{
    	   i--;
    	}
    	for ( f=i+1; f<N; f++ ) {
    		r = 0;
    		while (r < M) {
    			if (m[r][i]==m[r][f])
    			{
    			   ind2 = 1;
    			}
    			else {
    				ind2 = 0;
    				break;
    			}
    			r++;
    		}
    	if(ind2 == 1) {
    		for ( j=f; j<N; j++ ) {
    			for (l=0; l<M; l++) {
    			m[l][j]=m[l][j+1];
    		}
    	}
    	N--;
    	f--;
    	}
    	}
    }
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for ( i=0; i<M; i++ ) {
		for ( j=0; j<N; j++ )
		    printf(""%5d"", m[i][j]);
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int matrica[100][100],m,n,i,j,k,l,p,c,r,s;
	p=0;
	s=0;
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"",&m,&n);
		if(m<1 || m>200 || n<1 || n>200) 
		printf(""Brojevi nisu u trazenom opsegu.\n"");
	} while(m<1 || m>200 || n<1 || n>200);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++)
		scanf(""%d"",&matrica[i][j]);
	}
	
	for(i=0;i<m;i++){
		if(p==1)
		i--;
		for(k=i+1;k<m;k++){
			c=0;                                                  /*c=kolona, r=red*/
			while(c<n){
				if(matrica[i][c]==matrica[k][c]) p=1;
				else {
					p=0;
					break;
				}
				c++;
			}
			if(p==1){
				for(j=k;j<m-1;j++){
					for(l=0;l<n;l++) matrica[j][l]=matrica[j+1][l];
				}
			m--;
			k--;
			}
		}
	}
	
	for(i=0;i<n;i++){
		if(s==1)
		i--;
		for(k=i+1;k<n;k++){
			r=0;
			while(r<m){
				if(matrica[r][i]==matrica[r][k]) s=1;
				else{
					s=0;
					break;
				}
				r++;
			}
			if(s==1){
				for(j=k;j<n;j++){
					for(l=0;l<m;l++) 
					matrica[l][j]==matrica[l][j+1];
				}
				n--;
				k--;
			}
		}
	}
	
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++)
		printf(""%5d"",matrica[i][j]);
		printf(""\n"");
	}
	
	return 0;
}
"
953,55,55,0,22,A2016/Z1/Z3/student7255,A2016/Z1/Z3/student9805,"#include <stdio.h>

int main() {
	float C=0,B=0,S=0,V=0,P=0,cp=0.0,bp=0.0,sp=0.0,vp=0.0,pp=0.0,Uv=0;
	char unos;
	printf(""Unesite vozila: "");
	do{
		scanf(""%c"",&unos);
		if((unos=='c')||(unos=='C')){C++; }
		else if ((unos=='b')||(unos=='B')){B++; }
		else if ((unos=='s')||(unos=='S')){S++; }
		else if ((unos=='v')||(unos=='V')){V++; }
		else if ((unos=='p')||(unos=='P')){P++; }
		else if ((unos!='k')&&(unos!='K')){printf(""Neispravan unos\n"");}
		} while ((unos!='k')&&(unos!='K'));
		Uv=C+B+S+V+P;
		cp=(C/Uv)*100;
		bp=(B/Uv)*100;
		sp=(S/Uv)*100;
		vp=(V/Uv)*100;
		pp=(P/Uv)*100;
		printf(""Ukupno evidentirano %g vozila.\n"",Uv);
		if(Uv==0){
			printf(""Najpopularnija boja je crna (0.00%%)."");
			return 0;}
		if((C>=B)&&(C>=S)&&(C>=V)&&(C>=P)){
			printf(""Najpopularnija boja je crna (%.2f%%)."",cp);
			return 0;}
		if((B>=C)&&(B>=S)&&(B>=V)&&(B>=P)){
			printf(""Najpopularnija boja je bijela (%.2f%%)."",bp);
			return 0;}
		if((S>=C)&&(S>=B)&&(S>=V)&&(S>=P)){
			printf(""Najpopularnija boja je siva (%.2f%%)."",sp);
			return 0;}
		if((V>=C)&&(V>=B)&&(V>=S)&&(V>=P)){
			printf(""Najpopularnija boja je crvena (%.2f%%)."",vp);
			return 0;}
		if((P>=C)&&(P>=B)&&(P>=S)&&(P>=V)){
			printf(""Najpopularnija boja je plava (%.2f%%)."",pp);
			return 0;}
		return 0;

}
","#include <stdio.h>
#include <math.h>

int main() {
	float B=0, S=0, C=0, V=0, P=0, pb=0.0, ps=0.0, pc=0.0, pv=0.0, pp=0.0, ubv;
	char boja;
	printf(""Unesite vozila: "");
	do { 
		scanf(""%c"", &boja);
		while(boja=='\n' ){
			scanf(""%c"",&boja);
		}
		if ((boja=='c')||(boja=='C')){C++; continue;}
		if ((boja=='b')||(boja=='B')){B++; continue;}
		if ((boja=='s')||(boja=='S')){S++; continue;}
		if ((boja=='v')||(boja=='V')){V++; continue;}
		if ((boja=='p')||(boja=='P')){P++; continue;}
		if ((boja != 'c') && (boja != 'C') && (boja != 'B') && (boja !='b')&&(boja != 's') && (boja !='S')&&(boja != 'V') && (boja !='v')&&(boja != 'p') && (boja !='P')&&(boja!='k')&&(boja!='K')){
			printf (""Neispravan unos\n"");
			continue;
		}
	} while (boja!='K' && boja!='k');
	ubv=B+S+C+V+P;
	pc=C*100/ubv;
	pb=B*100/ubv;
	ps=S*100/ubv;
	pv=V*100/ubv;
	pp=P*100/ubv;
	printf (""Ukupno evidentirano %g vozila. \n"",ubv);
	if(ubv==0){printf (""Najpopularnija boja je crna (0.00%%)."");
		return 0;
	}
	if (C>=B && C>=S && C>=V && C>=P){printf (""Najpopularnija boja je crna (%.2f%%)."",pc);
		return 0;
	}	if (B>=C && B>=S && B>=V && B>=P){printf (""Najpopularnija boja je bijela (%.2f%%)."",pb);
		return 0;
	}	if (S>=C && S>=B && S>=V && S>=P){printf (""Najpopularnija boja je siva (%.2f%%)."",ps);
		return 0;
	}	if (V>=C && V>=S && V>=B && V>=P){printf (""Najpopularnija boja je crvena (%.2f%%)."",pv);
		return 0;
	}	if (P>=C && P>=S && P>=V && P>=B){printf (""Najpopularnija boja je plava (%.2f%%)."",pp);
		return 0;
	}
	return 0;
}

"
965,98,98,0,49,A2016/Z2/Z3/student1476,A2016/Z2/Z3/student3421,"#include <stdio.h>
int main() {
	int i,j,n,br;
	char mat[20][20];
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &n);
	while (n<1 || n>10) {printf(""Pogresan unos\n"");
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&n);
	}
	for(i=0; i<20; i++){
	 for(j=0; j<20; j++){
	  mat[i][j]=' ';
	 	}
	}
	for(br=0;br<n;br++){
		printf(""Unesite %d. tacku: "", br+1);
		scanf(""%d"", &i);
		scanf(""%d"", &j);
		while((i<0 || i>19)||(j<0 || j>19)) 
		{
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "", br+1);
			scanf(""%d"", &i);
			scanf(""%d"", &j);
		}
	mat[i][j]='*'; 
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			printf(""%c"", mat[j][i]);
		}
		printf(""\n"");
}
return 0;
}","#include <stdio.h>

int main() {
	int broj_tacaka,brojac,n,m;
	char niz[20][20];
	
	
	
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &broj_tacaka);
	while(broj_tacaka<1 || broj_tacaka>10)
{	printf(""Pogresan unos\n"");
	    
	    printf(""Unesite broj tacaka: "");
	    scanf(""%d"", &broj_tacaka);
    
}
      for(n=0; n<20; n++)
      {
          for(m=0; m<20; m++)
      
      {
          niz[n][m]=' '; 
      }}
  
   for(brojac=0; brojac<broj_tacaka; brojac++)
   {
      	printf(""Unesite %d. tacku: "", brojac+1);
       	scanf(""%d"",&n);
    	scanf(""%d"", &m);
        while(n<0 || m<0 || n>19 || m>19)
        {
        	
        printf(""Pogresan unos\n""); 
        printf(""Unesite %d. tacku: "", brojac+1);
        scanf(""%d"",&n);
        scanf(""%d"", &m);}
        niz[n][m]='*';
       }
        

        
        for(n=0; n<20; n++)
        {
           for(m=0; m<20; m++){
              printf(""%c"", niz[m][n]);
              
           }
            printf(""\n"");
          }
		return 0;
}
"
966,97,97,0,27,A2016/Z1/Z4/student6720,A2016/Z1/Z4/student4628,"#include <stdio.h>

int main() {
int i, j, n;

do{
    printf(""\nUnesite broj n: "");
    scanf(""%d"", &n);
    if(n<=0 || n>50)
    printf(""Pogresan unos"");
   
}while(n<=0 || n>50);

 
if(n==1)
printf(""***"");

else{

int a=0, sredina=2*n-1, kraj=4*n-3;
for(i=0; i<n; i++){
    for(j=0; j<4*n-3; j++){
        if(j==a || j==sredina-a-1 || j==sredina+a-1 || j==kraj-a-1)
        printf(""*"");
        else 
        printf("" "");
    }
printf(""\n"");
a++;

}
}
	return 0;
}
","#include <stdio.h>

int main() {
int i, j, n;

do{
    printf(""\nUnesite broj n: "");
    scanf(""%d"", &n);
    if(n<=0 || n>50)
    printf(""Pogresan unos"");
   
}while(n<=0 || n>50);

 
if(n==1)
printf(""***"");

else{

int a=0, sredina=2*n-1, kraj=4*n-3;
for(i=0; i<n; i++){
    for(j=0; j<4*n-3; j++){
        if(j==a || j==sredina-a-1 || j==sredina+a-1 || j==kraj-a-1)
        printf(""*"");
        else 
        printf("" "");
    }
printf(""\n"");
a++;

}
}
	return 0;
}
"
970,52,52,0,32,A2016/Z3/Z2/student8631,A2016/Z3/Z2/student2513,"#include <stdio.h>
int negativno(int n){
 int a; 
 a=-n; 
 return a; 
}
int cifra(int n) {
 int c;
 c=n%10; 
 return c; 
}
int f(int n){
 int b; 
 b=n/10; 
 return b;
}
/*Funkcija za izracunavanje sume*/
int suma(int n) {
 int c, suma=0; 
  if(n<0) 
  n=negativno(n);
while(n!=0){
 c=cifra(n) ; 
 suma=suma+c; 
 n=f(n); 
}
return suma; 
}
/*Fukcija za ubacivnje elemenata*/
void ubaci(int*niz, int vel) {
 int i,j;  
  for(i=0; i<vel; i++) {
	for(j=vel-1; j>i; j--) {
	niz[j+1]=niz[j];
	}
	niz[i+1]=suma(niz[i]); 
	vel++;
	i++; 
	}	
	return;
	}
int fibonaci(int n) {
 int a=1; int b=1; 
 if(n<1) 
 return 0; 
 while (a<n && b<n)
	{
		a=b+a; 
		b=b+a; 
	}
	if(a==n || b==n)
	return 1; 
	return 0; 
}
/*Funkcija za izbacijanje elemenata*/
int izbaci(int*niz, int vel) {
 int i; 
 int j; 
 for(i=0; i<vel;i++) {
  if(fibonaci(niz[i])) { 
  	for(j=i; j<vel-1; j++) {
	 niz[j]=niz[j+1];
	}
	vel--; 
	i--;
	}
}
return vel;
}

int main() {
 int i, niz[20]; 
 int vel=10; 
 printf(""Unesite niz od 10 brojeva: ""); 
 for(i=0; i<vel; i++) {
 scanf(""%d"", &niz[i]); 
}
ubaci(niz,vel);
vel=izbaci(niz, vel*2);
printf(""Modificirani niz glasi: ""); 
for(i=0; i<vel; i++) {
 if(i==vel-1) printf(""%d."", niz[i]); 
 else printf(""%d, "",niz[i]);
}
return 0; 
}","#include <stdio.h>
#include <stdlib.h>

/*Funkcija koja izracunava sumu cifara proslijedjenog broja*/
int suma (int n){
    int s=0;
    n=abs(n);
    while(n!=0){
        s=s+n%10;
        n=n/10;
    }
    return s;
}

/*Funkcija provjerava da li je njoj proslijedjeni broj fibonacijev*/
int fibonaci(int n){
    int a=1,b=1;
    while(a<n && b<n){
        a=a+b;
        b=a+b;
    }
    if(n==a || n==b) 
        return 1;
    else 
        return 0;
    
}

/*Funkcija koja izbacuje iz niza brojeva one brojeve koji su fibonacijevi */
int izbaci(int* niz, int vel){
    int i, j;
    for(i=0;i<vel;i++){
        if(fibonaci(niz[i])==1){
            for(j=i;j<vel-1;j++){
                niz[j]=niz[j+1];
            }
        i--;
        vel--;
        }
    }
    return vel;
}

/*Ubacivanje elemenata u niz jednakih sumi cifara odgovarajucih im prethodnih elementa*/
void ubaci(int* niz, int vel){
    int i,j;
    for(i=0; i<vel; i++){
        for(j=vel-1; j>i; j--){
            niz[j+1]=niz[j];
        }
            niz[i+1]=suma(niz[i]);
            vel++;
            i++;
    }

}

int main() {
    int niz[20],i,vel;
    printf(""Unesite niz od 10 brojeva: "");
    for(i=0;i<10;i++)
    scanf(""%d"",&niz[i]);
    ubaci(niz,10);
    vel=izbaci(niz,20);
    printf(""Modificirani niz glasi: "");
    for(i=0; i<vel; i++){
        if(i==vel-1)
            printf(""%d."",niz[i]);
        else
            printf(""%d, "",niz[i]);
    }
    
	
	return 0;
}
"
977,97,97,0,23,A2016/Z2/Z1/student8520,A2016/Z2/Z1/student8753,"#include <stdio.h>
#include <math.h>

int oduzmi(int broj){
	int zadnja,predzadnja;
	zadnja = broj%10;
	predzadnja = (broj/10)%10;
	return fabs(zadnja-predzadnja);
}
int main() {
	int broj;
	int noviBroj = 0;
	int i, cifra, cifra2;

	i = 1;
	printf(""Unesite broj: "");
	scanf(""%i"", &broj);
	broj = fabs(broj);
	while(broj > 10){
		noviBroj += oduzmi(broj) * i;
		i*=10;
		broj/=10;
	}

	
	printf(""%d"",noviBroj);
}","#include <stdio.h>
#include <math.h>

int oduzmi(int broj) {
	int zadnjibr,predzadnjibr;
	zadnjibr= broj%10;
	predzadnjibr=(broj/10)%10;
	return fabs(zadnjibr-predzadnjibr);
}

int main() {
	int br; 
	int nbr=0;
	int m, cifra, cifra2;
	
	m=1;
	printf(""Unesite broj: "");
	scanf(""%d"",&br);
	br=fabs(br);
	while(br>10) {
		nbr+=oduzmi(br)*m;
		m*=10;
		br/=10;
	}
 printf(""%d"",nbr);

return 0;
}
"
985,66,66,0,24,A2016/Z2/Z4/student6547,A2016/Z2/Z4/student5268,"#include <stdio.h>
#define SIRINA 100

int main() {
	int i,j,m,n,teplicova=1,cirkularna=1;
	double mat[SIRINA][SIRINA];
	do {
	printf(""Unesite M i N: "");
	scanf(""%d %d"",&m,&n);
	if(m<=0 || m>100 || n<=0 || n>100) printf(""Pogresan unos!\n""); } while(m<=0 || m>100 || n<=0 || n>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++) {
		for(j=0;j<n;j++) {
			scanf(""%lf"",&mat[i][j]);
		}
	}
	
		for(i=0;i<m-1;i++) {
			for(j=0;j<n-1;j++) {
				if(mat[i][j]!=mat[i+1][j+1] || mat[i][n-1]!=mat[i+1][0]) {
					cirkularna=0;
					break;
				}
			}
			if(cirkularna==0) break;
		}
		if(cirkularna==1) printf(""Matrica je cirkularna"");
		
		else {
	
	for(i=0;i<m-1;i++) {
		for(j=0;j<n-1;j++) {
			if(mat[i][j]!=mat[i+1][j+1]) {
				teplicova=0;
				break; }
		}
		if(teplicova==0) break;
		
	}
	if(teplicova==1) printf(""Matrica je Teplicova"");
	
}
	if(teplicova==0 && cirkularna==0) printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
","#include <stdio.h>

int main() {

	double mat[100][100];
	int j, k, m, n, cirk=1, tepl=1;

	do {
		printf(""Unesite M i N: "");
		scanf(""%d%d"",&m, &n);
		if((m<1 || m>100) || (n>100 || n<1)) 
			printf(""Pogresan unos!\n"");
		
	} while(m<1 || m>100 || n<1 || n>100);
	printf(""Unesite elemente matrice: "");
	for(j=0; j<m; j++) {
		for(k=0; k<n; k++) {
			scanf(""%lf"", &mat[j][k]);
		}
	}
	for(j=0; j<m-1; j++){
		for(k=0; k<n-1; k++){
			if(mat[j][n-1]!=mat[j+1][0]){
				cirk=0;
				break;
			}
		}
	}

	for(j=0; j<m-1; j++){
		for(k=0; k<n-1; k++){
			if(mat[j][k]!=mat[j+1][k+1]){
				tepl=0;
				break;
			}
		}
	}
    if(n==1 && m>1){
    	printf(""Matrica je Teplicova"");
    	return 0;
    }
	if(tepl==1) {
		if(cirk==1) {
			printf(""Matrica je cirkularna"");
		} else {
			printf(""Matrica je Teplicova"");
		}

	} else {
		printf(""Matrica nije ni cirkularna ni Teplicova"");
	}
	return 0;
}
"
996,97,97,0,46,A2016/Z1/Z4/student4824,A2016/Z1/Z4/student1483,"#include <stdio.h>

int main() {
	int n;
	unos:
	printf(""\nUnesite broj n: "");
	scanf(""%d"",&n);
	if((n<1)||(n>50))
	{ 
		printf(""Pogresan unos"");
		goto unos;
	}
	int i,j,k,z,q;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if(n==1)
			printf(""**"");
			if(i==j)
			printf(""*"");
			else 
			printf("" "");
			
		}
		for(k=0;k<n-1;k++)
		{
			if(i+k==n-2)
			printf(""*"");
			else
			printf("" "");
			
		}
		for(z=0;z<n-1;z++)
		{
			if(i==z+1)
			printf(""*"");
			else printf("" "");
			
		}
		for(q=0;q<=n;q++)
		{
			if(i+q==n-2)
			printf(""*"");
			else printf("" "");
			
		}
		printf(""\n"");
		
    }
	return 0;
}
","#include <stdio.h>
int main() {
    int n;
    unos:
    printf(""Unesite broj n: "");
    scanf(""%d"",&n);
    if(n<1||n>50)
     {printf(""Pogresan unos \n"");goto unos;
     }
    
    int i,j,k,l,s;
    for(i=0;i<n;i++){
        for(j=0;j<n;j++){
            if(n==1)
            printf(""**"");
            if(i==j)
            printf(""*"");
            else printf("" "");
        }
        for(k=0;k<n-1;k++){
            if(i+k==n-2)
            printf(""*"");
            else printf("" "");
        }
        for(l=0;l<n-1;l++){
            if(i==l+1)
            printf(""*"");
            else printf("" "");
        }
        for(s=0;s<=n;s++){
            if(i+s==n-2)
            printf(""*"");
            else printf("" "");
        }
        printf(""\n"");
    }
	return 0;
}"
1004,84,84,0,37,A2016/Z2/Z3/student6877,A2016/Z2/Z3/student3732,"#include <stdio.h>

int main() {
	char matrica[20][20];
	int n,i,j,x,y;
	do
	{
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&n);
		if (n<1 || n>10) printf(""Pogresan unos\n"");
	}
	while (n<1 || n>10);
	for (i=0;i<20;i++)
	{
	    for(j=0;j<20;j++)
	    {
	    	matrica[i][j]=' ';
	    }
	}   
	for(i=0;i<n;i++)    
	{
	  do
	    {
	    	printf(""Unesite %d. tacku: "",i+1);
	    	scanf(""%d %d"", &x, &y);
	    	if (x<0 || x>19 || y<0 || y>19) printf(""Pogresan unos\n"");
	    }while(x<0 || x>19 || y<0 || y>19);
	    matrica[y][x]='*';
	}
	for(i=0;i<20;i++)
	   {
	   	for(j=0;j<20;j++)
	   	{
	   		printf(""%c"",matrica[i][j]);
	   	}
	   	printf(""\n"");
	   }
	   	
	   	
	   
	return 0;
}
","#include <stdio.h>

int main() {
	int i, j, br_tacke, broj;
	char niz[20][20];
	do{
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&br_tacke);
	if(br_tacke<1 || br_tacke>10)
	printf(""Pogresan unos\n"");
	}while(br_tacke<1 || br_tacke>10);
	
	for(i=0;i<20;i++){for(j=0;j<20;j++){niz[i][j]=' ';}}
	for(broj=0;broj<br_tacke;broj++)
	{
		do{
		printf(""Unesite %d. tacku: "", broj+1);
		scanf(""%d"",&i);
		scanf(""%d"", &j);
		if(i<0 || j<0 || i>19 || j>19)printf(""Pogresan unos\n"");
		}while(i<0 || j<0 || i>19 || j>19);
		niz[i][j]='*';}
		for(i=0;i<20;i++)
		{
			for(j=0;j<20;j++)
			{
				printf(""%c"", niz[j][i]);
			}
			printf(""\n"");
		}
	return 0;
}
"
1015,22,22,0,33,A2016/Z5/Z1/student9897,A2016/Z5/Z1/student8357,"#include <stdio.h>
#include <string.h>
#define epsilon 0.0001

struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

float prosjek_svih_studenata(int niz[], int vel) {
	float prosjek_svih=0.0;
	int i;
	float suma=0;
	for(i=0;i<vel;i++) {
		if(niz[i]==5 || vel==0) return 5.0;
		suma+=niz[i];
		prosjek_svih=suma/vel;
	}
	return prosjek_svih;
}

int uporedi(char* s1, char* s2) {
	if(strcmp(s1,s2)==0) return 0;
	if(strcmp(s1,s2)<0) return -1;
	if(strcmp(s1,s2)>0) return 1;
	while(*s1!='\0' && *s2!='\0') {
		if(*s1<*s2) return -1;
		if(*s1>*s2) return 1;
		s1++;
		s2++;
	}
	if(*s1!='\0') return 1;
	if(*s2!='\0') return -1;
	return 0;
}
 int redoslijed(struct Student prvi, struct Student drugi) {
	float prosjek1=prosjek_svih_studenata(prvi.ocjene,prvi.br_ocjena);
	float prosjek2=prosjek_svih_studenata(drugi.ocjene,drugi.br_ocjena);
		if(prosjek1>prosjek2) return 1;
		else if(prosjek1<prosjek2) return 0;
		
		if(uporedi(prvi.prezime,drugi.prezime)==-1) return 1;
		else if(uporedi(prvi.prezime,drugi.prezime)==1) return 0;
		
		if(uporedi(prvi.ime,drugi.ime)==-1) return 1;
		else if(uporedi(prvi.ime,drugi.ime)==1) return 0;
		else return 1;
}

int genijalci(struct Student niz[], int vel, float prosjekk) {
	int i, j, index1, index2, index3, indexmin=0;
	double temp_prosjek, min=10;
	for(i=0;i<vel;i++) {
		if(prosjekk-prosjek_svih_studenata(niz[i].ocjene,niz[i].br_ocjena)>epsilon) {
              for(j=i;j<vel-1;j++) {
			  niz[j]=niz[j+1];
			}
			vel--;
			i--;
		}
	}
	for(i=0;i<vel;i++) {
		temp_prosjek=prosjek_svih_studenata(niz[i].ocjene, niz[i].br_ocjena);
		if(min-prosjek_svih_studenata(niz[i].ocjene,niz[i].br_ocjena)>epsilon)
		{
			min=temp_prosjek;
			indexmin=i;
		}
	}
		if(vel==0) return 0;
		if(vel==1) goto jedan;
		if(vel>1) goto dva;
		
		jedan:
		index1=indexmin;
		printf(""\n%s %s"", niz[index1].prezime,niz[index1].ime);
		return vel;
		
		dva:
		index1=indexmin;
		for(i=0;i<vel;i++) {
			if(redoslijed(niz[i],niz[index1]))
			index1=i;
		}
		index2=indexmin;
		for(i=0;i<vel;i++) {
			if(i==index1) continue;
			if(redoslijed(niz[i],niz[index2]))
			index2=i;
		}
		printf(""\n%s %s"",niz[index1].prezime,niz[index1].ime);
		printf(""\n%s %s"",niz[index2].prezime,niz[index2].ime);
		
		if(vel>2) {
			index3=indexmin;
			for(i=0;i<vel;i++) {
				if(i==index1 || i==index2) continue;
				if(redoslijed(niz[i],niz[index3]))
				index3=i;
			}
			printf(""\n%s %s"",niz[index3].prezime,niz[index3].ime);
		}
		return vel;
}

int main() {
	struct Student studenti[] = {
		{""Ajla"", ""Smajic"", {7, 9, 10, 10}, 4},
		{""Sajra"", ""Gujic"", {6, 8, 9}, 3},
		{""Imad"", ""Fazlinovic"", {7, 9, 5, 8}, 4}
	};
	int i;
  int vel=genijalci(studenti,4,7.7);
  printf(""Vel:%dStudenti:"",vel);
  for(i=0;i<vel;i++);
  printf(""%s %s"", studenti[i].prezime,studenti[i].ime);
	return 0;
}
","#include <stdio.h>
#define epsilon 0.0001
#include <string.h>

struct Student{    
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};


/*Funckija racuna prosjek svakog studenta pojedinacno u zavsnosti koliko ima ocjena*/
float prosjek(int niz[],int vel){   
	int i=0,suma=0;
	if (vel==0) return 5;           
	for(i=0;i<vel;i++){
		if (niz[i]==5) return 5;    
		suma+=niz[i];     
	}
	return (float)suma/vel;         
}

/*Funkcija prima 2 studenta, vraca 1 ako prvi treba biti ispred drugog, odnosno 0 ako ne treba*/
int dalijeveci(struct Student pr, struct Student dr){  
     
        if(prosjek(pr.ocjene,pr.br_ocjena)>prosjek(dr.ocjene,dr.br_ocjena)) return 1;       
        if(prosjek(pr.ocjene,pr.br_ocjena)<prosjek(dr.ocjene,dr.br_ocjena)) return 0;       
  
     
        if(strcmp(pr.prezime,dr.prezime)>0) return 0;
        else if(strcmp(pr.prezime,dr.prezime)<0) return 1;
           
        
       
        if(strcmp(pr.ime,dr.ime)>0) return 0;            
        else if(strcmp(pr.ime,dr.ime)<0) return 1;
        else return 1;          
}
/*Funkcija prima niz struktura, velicinu niza i zadani prosjek*/
int genijalci(struct Student niz[], int vel, double prosjekk){  
    int i,j,indexprvi,indexdrugi,indextreci,indexmin=0;
    double maxprvi, maxdrugi, maxtreci,temp_prosjek,min=10;
	
	/*Izbacivanje iz niza ako je prosjek manji od zadanog*/
	for(i=0;i<vel;i++){ 
		if(prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon) {         
                for(j=i;j<vel-1;j++){           
                    niz[j]=niz[j+1];
                }
			vel--;
			i--;
		}
	}
  /*Trazimo min i upamtimo mu indeks*/
  for(i=0;i<vel;i++){ 
  float temp=prosjek(niz[i].ocjene,niz[i].br_ocjena);
      	if(min-temp>epsilon) {
      	    min=temp; indexmin=i;
      	}
  }
    
    /*Pamtimo index prvog clana tj najveceg studenta*/
    float max=5;
	if(vel>0) { 
	 indexprvi=indexmin;        
    for(i=0;i<vel;i++){
        int vr=dalijeveci(niz[i],niz[indexprvi]);
        if(vr==1)      
            indexprvi=i;     
            max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
	}
	
	/*Ispis najboljeg studenta*/
	if(i>0)
	printf(""\n%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);  
	}
	
	/*Ako je velicina veca od 1, treba jos jednog minimalno ispisati*/
	if(vel>1){ 
	indexdrugi=indexmin;
	for(i=0;i<vel;i++){
	    if(i==indexprvi) continue;  
	     int vr=dalijeveci(niz[i],niz[indexdrugi]);
        if(vr==1) 
        
            indexdrugi=i;
            max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
        }
	
		printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
	}
	/*Ako je velicina 3 ili vise, ispisujemo i treceg studenta*/
	if(vel>2){ 
    indextreci=indexmin;
    for(i=0;i<vel;i++){
        if(i==indexprvi ||i==indexdrugi) continue;      
         int vr=dalijeveci(niz[i],niz[indextreci]);
        if(vr==1) 
        
            indextreci=i;
            max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
	}
     if(i>0)    
    	printf(""%s %s\n"",niz[indextreci].prezime,niz[indextreci].ime);
	}

 return vel;
}


int main() {
    struct Student studenti[5] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Eso"", ""Esic"", { 10, 10, 10, 10, 5}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 5, 6.5);
 
	return 0;
}
"
1030,95,95,0,18,A2016/Z1/Z2/student7085,A2016/Z1/Z2/student4780,"#include <stdio.h>
#include <math.h>
#define e 0.0001
int main() {
	float a1,b1,a2,b2,y,x;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);

	

	if(fabs(a1-a2)<e && fabs(b1-b2)<e){
		
		printf(""Poklapaju se"");
	}else
	if(fabs(a1-a2)<e && fabs(b1-b2)>e){
		printf(""Paralelne su"");
	}
	else {
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	}
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define e 0.0001
int main() {
float a1,b1,a2,b2,x,y;
printf(""Unesite a1,b1,a2,b2: "");
scanf(""%f,%f,%f,%f"",&a1,&b1,&a2, &b2);

if(fabs(a1-a2)<e && fabs(b1-b2)>e){
	printf(""Paralelne su"");
} else if (fabs(a1-a2)<e && fabs(b1-b2)<e){
	printf(""Poklapaju se"");
} else {
	x=(b2-b1)/(a1-a2);
	y=a2*x+b2;
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
} 

return 0;
}
"
1037,46,46,0,27,A2016/Z2/Z2/student8599,A2016/Z2/Z2/student1313,"
#include <stdio.h>
#define PI 3.1415926
#include <math.h>
#define e 0.00001

int main() {
	int n, i, j; 
	double sekundi[500], minuta[500], niz[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	for(i=0; i<n; i++){
		scanf(""%lf"", &niz[i]);}
		
	for(i=0; i<n; i++){
		
		niz[i]*=180/PI;
		minuta[i]=fabs(niz[i]-(int)niz[i])*60;
		sekundi[i]=(minuta[i]-(int)minuta[i])*60;
		if(fabs(sekundi[i]-(int)sekundi[i])>=0.5)
		sekundi[i]=(int)(sekundi[i]+1);
		if((fabs(niz[i]-55.99986)<e)){
			niz[i]=56;
			minuta[i]=0;
			sekundi[i]=0;}
			if((fabs(niz[i]+55.99986)<e)){
			niz[i]=-56;
			minuta[i]=0;
			sekundi[i]=0;}
		if(sekundi[i]>30){
			for(j=i; j<n-1; j++){
				niz[j]=niz[j+1];
			}
			n--;
			i--;
		}
	}
	printf(""Uglovi su: \n"");
	for(i=0; i<n; i++){
		printf(""%d stepeni %d minuta %d sekundi \n"", (int)niz[i], (int)minuta[i], (int)sekundi[i]);
	}
	return 0;
}","#include <stdio.h>
#define Pi 3.1415926
#include <stdlib.h>
#include <math.h>

int main() {
	int n,i,j;
	double ugao[500],min[500],sek[500];
	/*BROJ uglova tj cl niza*/ 
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	
	/*unos UGLOVA tj clanova ugao[i] i pretvaranje*/ 
	for (i=0;i<n;i++) {
		scanf(""%lf"",&ugao[i]);
		ugao[i]=ugao[i] * (180/Pi);
	/*MINUTE min[i] npr 45,27 treba mi 0,27 znaci od ukupnog oduzimam zaokruzeno
	 pomnoziti sa 60, moze biti neg ug pa apsolutnu*/
	min[i]=(fabs(ugao [i])-abs((int)ugao[i]))*60;
	/*SEKUNDE sek[i] opet oduzeti od minuta sad i pomn*/
	sek[i]=(min[i]-(int)min[i])*60;
	sek[i]=(int)(sek[i]+0.5);
	/*npr 60sek*/
	if (sek[i]>=60){
		min[i]=min[i]+1;
		sek[i]=0;}
	if (min[i]>=60){
		if (ugao[i]<0) ugao[i]=ugao[i]-1;
		else ugao[i]=ugao[i]+1;
		min[i]=0;}
		
	/*izbacivanje*/	
	if(sek[i]>30){
	 for(j=i;j<n-1;j++){
	 	ugao[j]=ugao[j+1];
	 }
	 n--; i--;
	}
	}
	
	/*ispis*/
	printf(""Uglovi su: "");
	for (i=0;i<n;i++)
	 printf(""\n%d stepeni %d minuta %d sekundi"",(int)ugao[i],(int)min[i],(int)sek[i]);
	
	return 0;
}
"
1040,25,25,0,75,A2016/Z5/Z3/student6956,A2016/Z5/Z3/student8357,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200
struct Vrijeme{
	int sati, minute, sekunde;
};

struct Cas{
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};


char unesi(char niz[], int velicina){
	char znak=getchar();
	int vr=znak;
	int i=0;
	while (znak=='\n') 
	znak=getchar();
	while (i<velicina-1 && znak!='\n' && vr>0){
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	return znak;
}
void ocisti(char znak){
	int ima=0;
	if(znak=='\0') return;
	while(znak!='\n')
	znak=getchar();
}
int ucitaj_datoteku(struct Cas raspored[]){
	FILE* ulaz=fopen(""raspored.dat"",""rb+"");
	FILE* ulaz1=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL || ulaz1==NULL){
		return 0;
	}
	int ucitano=fread(raspored,sizeof(struct Cas), KAPACITET, ulaz);
	int ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);
	fclose(ulaz);
	fclose(ulaz1);
	if(ucitano==ucitano1) 
	return ucitano;
}

int MAX(struct Cas raspored[], int broj_casova){
	int nasao=0;
	
	int i,j,max=0,indexmaxa=0;
	
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max){
			nasao=1;
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	if(raspored[indexmaxa].kraj.minute==0 && nasao==1) max=max-1;
	if(nasao == 1)return max;
}

int MIN(struct Cas raspored[],int broj_casova){
	int i, j, min=25;
	int nasao=0;
	
	for(i=0; i<broj_casova; i++){
		if(raspored[i].pocetak.sati<min) 
		nasao=1;
		min=raspored[i].pocetak.sati;
	}
	if(nasao==1)
	return min;
}

void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k;
	
	printf(""\n       "");
	printf(""PON       "");
	printf(""UTO       "");
	printf(""SRI       "");
	printf(""CET       "");
	printf(""PET       "");
	printf(""SUB\n"");
	
	for(i=MIN(raspored,broj_casova);i<=MAX(raspored,broj_casova);i++){
		if(i<10) printf(""9:00   "");
		else printf(""%d:00  "",i);
		
		for(j=1;j<7;j++){
			for(k=0;k<broj_casova;k++)
			if (raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i){
				printf(""%-10s"", raspored[k].predmet);
				break;
			}
			if(k==broj_casova)
			printf(""          "");
		}
		printf(""\n"");
	}
	
}

void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
	int i;
	printf(""Uneseni su casovi: "");
	int k=1;
	int brojac=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			printf(""\n%d) %s ("",k++,raspored[i].predmet);
			if(raspored[i].pocetak.sati<10) printf(""0"");
			printf(""%d:"",raspored[i].pocetak.sati);
			if(raspored[i].pocetak.minute<10) printf(""0"");
			printf(""%d-"",raspored[i].pocetak.minute);
			if(raspored[i].kraj.sati<10) printf(""0"");
			printf(""%d:"",raspored[i].kraj.sati);
			if(raspored[i].kraj.minute<10) printf(""0"");
			printf(""%d"",raspored[i].kraj.minute);
			printf("")"");
		}
		
		brojac++;
	}
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	int zapisano; int nova;
	FILE* ulaz=fopen(""raspored.dat"",""wb+"");
	FILE* ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL || ulaz1==NULL){
		return 0;
	}
	
	nova=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz);
	zapisano=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz1);
	
	fclose(ulaz);
	fclose(ulaz1);
	
	if(zapisano>=1 && nova==zapisano) return 1;
	else
	return 0;
}

void obrisi_cas(struct Cas raspored[],int broj_casova,int dan, int redni_broj){
	
	int i,j=0,obrisan=0;
	
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan) j++;
		if(redni_broj==j){
			obrisan=1;
			for(;i<broj_casova-1;i++)
			raspored[i]=raspored[i+1];
			break;
		}
	}
}

int PorediVrj(struct Vrijeme t1, struct Vrijeme t2){
	int d1=t1.sati*3600 + t1.minute*60 + t1.sekunde;
	int d2=t2.sati*3600 + t2.minute*60 + t2.sekunde;
	
	if(d1>d2) return 1;
	if(d1<d2) return -1;
	if(d1==d2) return 0;
	
	return -2;
}

int preklapanje(struct Cas raspored[],int broj_casova, struct Cas cas){
	
	int flag=0;
	int i;
	for(i=0;i<broj_casova;i++){
		int prvi=PorediVrj(raspored[i].kraj,cas.pocetak);
		int drugi=PorediVrj(cas.kraj,raspored[i].pocetak);
		
		if(prvi==1 && drugi==1 && (cas.dan_u_sedmici==raspored[i].dan_u_sedmici)){
			flag=1;
			break;
		}
	}
	
	return flag;
}

int dodaj_cas(struct Cas raspored[],int broj_casova, const char* predmet, int trajanje){
	
	if(broj_casova==200) return 0;
	int i,j,preklop;
	int dokle=19-trajanje;
	
	for(i=0;i<6;i++)
	for(j=9;j<=dokle;j++){
		struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
		struct Cas cas1={""pom"",2,{0,0,0},{0,0,0}};
		char*q=cas.predmet,*p=(char*)predmet;
		
		while(*q++=*p++);
		char*a=cas1.predmet;
		char*b=cas1.predmet;
		if(a==b)
		preklop=preklapanje(raspored,broj_casova,cas);
		if(preklop==0){
			raspored[broj_casova]=cas;
			return 1;
		}
	}
	return 0;
}

void promijeni_cas(struct Cas raspored[], int broj_casova,int dan,int redni_broj,struct Cas promjena){
	
	int i, redni=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
		raspored[i]=promjena;
	}
}

int main() {
	int opcija, broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do{
		printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
		scanf(""%d"",&opcija);
		switch(opcija){
			case 0: 
			{
				zapisi_datoteku(raspored,broj_casova);
				break;
			}
			case 1:
			{
				ispis_rasporeda(raspored,broj_casova);
				break;
			}
			case 2:
			{
				int br_casova, dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				ocisti(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				int vr=dodan;
				if(vr==0)
				printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
				if(vr==1)
				broj_casova++;
				
				break;
			}
			
			case 3:
			{
				struct Cas promjena;
				int dan, redni;
				char*q,*p;
				char znak, predmet[10];
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"", &dan);
				int BROJ=broj_casova;
				ispisi_dan(raspored,BROJ,dan);
				promjena.dan_u_sedmici=dan;
				int dani=dan+7;
				printf(""\nIzaberite koji cas zelite promijeniti:  Naziv predmeta: "");
				scanf(""%d"",&redni);
				ocisti(unesi(predmet,10));
				
				q=promjena.predmet;
				p=predmet;
				strcpy(q,p);
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c%d"",&promjena.pocetak.sati,&znak,&promjena.pocetak.minute);
				scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				
				
				if(dani>0) promijeni_cas(raspored, BROJ, dan, redni, promjena);
				break;
			}
			
			case 4:
			{
				int dan, redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"", &dan);
				
				ispisi_dan(raspored,broj_casova,dan);
				
				printf(""\nIzaberite koji cas zelite obrisati: "");
				scanf(""%d"", &redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
				printf("" Cas obrisan\n"");
				broj_casova--;
			}
			
			
			
		}
		
	}
	
	while(opcija!=0);
	
	return 0;
}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};

char unesi(char niz[], int velicina) {
    
	char znak = getchar();
	if(velicina<0) return znak;
	if (znak == '\n') znak = getchar();
	int i = 0,k=0;
	while (i < velicina-1 && znak != '\n') {
		niz[i] = znak;
		i++;
		znak = getchar();
		k++;
	}

	niz[k] = '\0';
	return znak;
}

void ocisti(char znak){
	while(znak!='\n')
		znak=getchar();
}

int ucitaj_datoteku(struct Cas raspored[]){
	FILE *ulaz=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL)
		return 0;
	int kap=KAPACITET;
	int vel=sizeof (struct Cas);
	int ucitano;
	ucitano=fread(raspored,vel,KAPACITET,ulaz);
	fclose(ulaz);
	return ucitano;
}
int mmm(int d){
    if(d==0) return -1;
    else return 0;
}
int MAX(struct Cas raspored[], int broj_casova){
    int brojac=1;
      int i,j,max=0,indexmaxa=0;
    for (i=0; i<broj_casova;i++){
        brojac++;
            if (raspored[i].kraj.sati>max ){
                max=raspored[i].kraj.sati;
                indexmaxa=i;
}}
max=max-mmm(raspored[indexmaxa].kraj.minute);
return max;

}

int MIN(struct Cas raspored[], int broj_casova){
     int i,j,min=25;
    for (i=0; i<broj_casova;i++)
            if (raspored[i].pocetak.sati<min)
            	min=raspored[i].pocetak.sati;
    return min;
}
void ispisss(){
    printf(""\n       PON       UTO       SRI       CET       PET       SUB\n"");
}
void ispispr(char *pr){
    printf(""%-10s"",pr);
}
void ispispraz(int d){
     printf(""          "");
}
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
    int i,j, k;
   int max=MAX(raspored,broj_casova);
   int min=MIN(raspored,broj_casova);
       ispisss();
    for(i=min;i<=max;i++){
         if(i<10) printf(""9:00   "");
             else printf(""%d:00  "",i);
        for(j=1;j<7;j++){
			
                for(k=0;k<broj_casova;k++)
                    if ( raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j  && raspored[k].kraj.sati>=i){
                            ispispr(raspored[k].predmet);
                            break;
                            ispispraz(10);
                    }
                    if (k==broj_casova)
                       ispispraz(10);
            }
        printf(""\n"");
    }
}


    void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
        int i;
    printf(""Uneseni su casovi: "");
        int k=1;
        for(i=0;i<broj_casova;i++){
            if(raspored[i].dan_u_sedmici==dan){
            	int sat=raspored[i].pocetak.sati;
            	int min=raspored[i].pocetak.minute;
                printf(""\n%d) %s ("",k++,raspored[i].predmet);
                 if(sat<10) printf(""0"");
                 printf(""%d:"",sat);
                  if(min<10) printf(""0"");
                 printf(""%d-"",min);
                 if(raspored[i].kraj.sati<10) printf(""0"");
                 printf(""%d:"",raspored[i].kraj.sati);
                  if(raspored[i].kraj.minute<10) printf(""0"");
                 printf(""%d)\n"",raspored[i].kraj.minute);
            }
        }
    }


void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,j=0;
	for(i=0; i<broj_casova; i++){
		if (raspored[i].dan_u_sedmici==dan) j++;
		if (redni_broj==j){
		    for(;i<broj_casova-1;i++)
			    raspored[i]=raspored[i+1];
		    break;
		}
	}
}

int PorediVrj(struct Vrijeme t1, struct Vrijeme t2,int i)
{
    int sat=t1.sati*3600;
    int sat1=t2.sati*3600;
    int min=t1.minute*60;
    int min1=t2.minute*60;
    int d1 = sat+min+ t1.sekunde;
    int d2 = sat1+min1+ t2.sekunde;
    if (d1 > d2)  return 1; 
    if (d1 < d2)  return -1; 
    if (d1 == d2)  return 0; 
    
}
int preklapanje (struct Cas raspored[], int broj_casova, struct Cas cas)
{

    int prekl = 0;
    int i;
    for (i = 0; i < broj_casova; i++) {
		int drugi=PorediVrj(cas.kraj, raspored[i].pocetak,i);
		if(i<0) return prekl;
        if (PorediVrj(raspored[i].kraj,cas.pocetak,i)== 1 && drugi==1 && (cas.dan_u_sedmici == raspored[i].dan_u_sedmici)) {
            prekl= 1; 
            break;
        }
    }
   if(i>-1) return prekl;
}
int prazan(struct Cas cas){
    if(cas.predmet=="""") return 0;
    else return 1;
}


int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje){
	if(broj_casova==200) return 0;
	if(trajanje<0 ||trajanje>200) return 0;
	int i,j,preklop;
	for (i=0; i<6; i++)
		for(j=9; j<=19-trajanje; j++){
			struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
		cas.pocetak.minute=0;
		cas.kraj.minute=0;
		cas.pocetak.sekunde=0;
		cas.pocetak.minute=0;
		strcpy(cas.predmet,predmet);
		int praz=prazan(cas);
		struct Cas pom={"""",0,{0,0,0},{0,0,0}};
		strcpy(cas.predmet,predmet);
			preklop=preklapanje(raspored,broj_casova,cas);
			if (preklop==0){
				raspored[broj_casova]=cas;
				return 1;
			}
		}
	return 0;			
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
	int i,redni=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
			raspored[i]=promjena;
	}
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL)
		return 0;
	int kap=broj_casova;
	int vel=sizeof (struct Cas);
	int zapisano=fwrite(raspored,vel, broj_casova,ulaz);
	fclose(ulaz);
 return 1;

}

int main() {
	int opcija,broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do {
		printf(""1) Ispis rasporeda\n"");
	printf(""2) Dodavanje casa\n"");
	printf(""3) Promjena casa\n"");
	printf(""4) Brisanje casa\n"");
	printf(""0) Kraj rada\n"");
	printf(""Izaberite opciju: "");

		scanf(""%d"",&opcija);
		if (opcija==2){
				int br_casova,dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				ocisti(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				switch(dodan){
				    case 1: broj_casova++; break;
				    default: 	printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
				}
				
				
			}
		if (opcija==0) 
				zapisi_datoteku(raspored,broj_casova);
		if (opcija==1) 
				ispis_rasporeda(raspored,broj_casova);
		
		if (opcija==3 ){
				struct Cas promjena;
				int dan,redni;
				char predmet[10];
				printf(""Unesite dan (1=ponedjeljak, "");
				printf(""2=utorak..., "");
				printf(""6=subota): "");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				promjena.dan_u_sedmici=dan;
				printf(""Izaberite koji cas zelite promijeniti:  "");
				scanf(""%d"",&redni);
				if(redni>100 ||redni<0) goto preskok;
				printf(""Naziv predmeta: "");
				ocisti(unesi(predmet,10));
				char *q;
				
				if(opcija!=0) q=promjena.predmet;
				char*p;
			  if(opcija!=0)	p=predmet;
				preskok:
				strcpy(q,p);
				char znak;
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c%d%d%c%d"",&promjena.pocetak.sati,&znak,&promjena.pocetak.minute,&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				promijeni_cas(raspored,broj_casova,dan,redni,promjena);
			}
			if (opcija==4){
				int dan,redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				
				scanf(""%d"",&dan);
				if(opcija!=0){
				ispisi_dan(raspored,broj_casova,dan);
				printf(""Izaberite koji cas zelite obrisati: "");
				scanf(""%d"",&redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
				broj_casova=broj_casova-1;
				printf("" Cas obrisan\n"");
				}
			}
	} while (opcija!=0);
    
	return 0;
}
"
1043,28,28,0,38,A2016/Z5/Z1/student9972,A2016/Z5/Z1/student1624,"#include <string.h>
#include <stdio.h>
#define epsilon 0.0001

struct Student {
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena; 
};
int uporedi(char*s1,char*s2) {
	if(strcmp(s1,s2)==0) return 0;
	if(strcmp(s1,s2)<0)return 1;
	else return 2;
}
float prosjek(int niz[],int vel) {
	if(vel==0) return 5;
	int i=0,suma=0;
	for(i=0;i<vel;i++)
	if (niz[i]==5) return 5;
	for(i=0;i<vel;i++)
	suma=suma+niz[i];
	return(float)suma/vel; }
	int dalijeveci(struct Student pr,struct Student dr){
		float prosjekprvog=prosjek(pr.ocjene,pr.br_ocjena);
		float prosjekdrugog=prosjek(dr.ocjene,dr.br_ocjena);
		int sta_je_vratila_f=uporedi(pr.prezime,dr.prezime);
		if(prosjekprvog>prosjekdrugog) return 1;
		if(prosjekprvog<prosjekdrugog) return 0;
		if(sta_je_vratila_f==1) return 1;
		if(sta_je_vratila_f==2) return 0;
		int nesto=uporedi(pr.ime,dr.ime);
		if(nesto==1) return 1;
		if(nesto==2) return 0;
		else return 1; }
		int izbacivanj(struct Student niz[],int vel,double prosjekk){
			int i;int j; int izmjena=0;
			for(i=0;i<vel;i++){
				izmjena=0;
				if (prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon) izmjena=1;
			if(izmjena==1){
				for(j=i;j<vel-1;j++){
					niz[j]=niz[j+1];
				}
				vel--; i--;
			} }return vel;}
			int genijalci(struct Student niz[],int vel, double prosjekk) {
				int i,indexprvi,indexdrugi,indextreci,indexmin=0;
				double min=10;
				
				vel=izbacivanj(niz,vel,prosjekk);
				if(vel==0) return 0;
				for(i=0;i<vel;i++) {
					if(min-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon){
						min=prosjek(niz[i].ocjene,niz[i].br_ocjena);
						indexmin=i;
					}
				}
				indexprvi=indexmin;
				indexdrugi=indexmin;
				indextreci=indexmin;
				if(vel==1){
					printf(""\n%s %s"",niz[indexprvi].prezime,niz[indexprvi].ime);
					return 1;
				}
			if(vel==2){
				for(i=0;i<vel;i++) {
					if(dalijeveci(niz[i],niz[indexprvi])==1)
					indexprvi=i;}
					printf(""%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);
					for(i=0;i<vel;i++){
						if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){
							indexdrugi=i;
						}
					} printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
					return 2;}
					else { 
						for(i=0;i<vel;i++){
							if(dalijeveci(niz[i],niz[indexprvi])==1)
							indexprvi=i;}
							printf(""%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);
							for(i=0;i<vel;i++){
								if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){
									indexdrugi=i;
								}
							}
							printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
								for(i=0;i<vel;i++){
									if(dalijeveci(niz[i],niz[indextreci])==1 && i!=indexprvi && i!=indexdrugi)
									indextreci=i;
								}
				
							printf(""%s %s\n"",niz[indextreci].prezime,niz[indextreci].ime);
					}
						 return vel;
						}
						int main() {
							struct Student studenti[5]={
								{""Mujo"",""Mujic"",{7,7,7,7,8},5},
								{""Meho"",""Mujic"",{7,7,7,7,8},5},
								{""Beba"",""Bebic"",{10, 10, 10, 10, 5}, 5} 
							};
						genijalci(studenti, 3, 6.5);
						return 0; }
			
	
	

","#include <stdio.h>
#include <string.h>
#define eps 0.0001

struct Student {
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};
int summa(int niz[],int vel){//funkcija primi niz i velicinu i izracuna sumu, a vrati negativan broj ako ima neka ocjena koaj je 5
	int i,suma=0;
	for(i=0;i<vel;i++)
		if(niz[i]==5) return -100;
			else suma+=niz[i];
	return suma;
}
int uporedi(char*s1,char*s2){		//funkcija leksikografski poredi 2 stringa
	if(strcmp(s1,s2)<0) return 1;
	if(strcmp(s1,s2)>0) return 2;
}

float prosjek(int niz[],int vel){	//funkcija primi niz i velicinu i vrati prosjek ocjena
	int i=0,suma;
	suma=summa(niz,vel);
	if(vel==0 ||suma<0) return 5;		//ako je suma negativna il ako je velicina niza0 treb vratit 5 tj da je pao
	return (float)suma/vel;
}
int poredidouble(double d1,double d2){		//funkcija poredi 2 doubla, ako su jednaki vrati 5
	if(d1>d2) return 1;
	if(d1<d2)return 0;
	else return 5;
}
int izbaci(struct Student niz[], int vel,double prosjekk){	//funkcija vrati preostali broj clanova u nizu, nakon izbacivanja onih ispod prosjeka
	int i, j;
	for(i=0;i<vel;i++){
		if(prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena)>eps){
			for(j=i;j<vel-1;j++)
				niz[j]=niz[j+1];
			vel--;
			i--;
		}
	}
	return vel;
}
int dalijeveci(struct Student pr, struct Student dr){			//funkcija vrati 1 il 0 s obzirom dali 1 student treba ici prije drugog
	//prvo se porede prosjeci, pa prezimena pa imena
	int vr=poredidouble(prosjek(pr.ocjene,pr.br_ocjena),prosjek(dr.ocjene,dr.br_ocjena));
	if(vr==1 ||vr==5 && uporedi(pr.prezime, dr.prezime)==1) return 1;
	if(vr==0 ||vr==5 && uporedi(pr.prezime,dr.prezime)==2) return 0;
	if(vr==5){
		if(uporedi(pr.ime,dr.ime)==1) return 1;
		if(uporedi(pr.ime,dr.ime)==2) return 0;}
		return 1;	//receno moze vratit funkcija bilo sta ako gore nije nista vratila
	}
int vratimin(struct Student niz[],int vel,double prosjekk){	//funnkcija primi niz, i velicinu i vrati onaj index elementa koji ima namanji prosjek
	int i,j;
	double min=10;
	int indexmin=0;
	for(i=0;i<vel;i++){
		if(min-prosjek(niz[i].ocjene, niz[i].br_ocjena)>eps){
			min=prosjek(niz[i].ocjene, niz[i].br_ocjena);
			indexmin=i;
		}
	}
	return indexmin;
	
}
int genijalci(struct Student niz[],int vel,double prosjekk){
	int i,j,indexprvi,indexdrugi,indextreci;
	double min=10;
	vel=izbaci(niz,vel,prosjekk);	//izbacimo one ispod prosjeka
	int indexmin=vratimin(niz,vel,prosjekk);	//nadjemo index namjanjeg
	int bilo=0;
	switch(vel){
		case 1: 		//ako je ostao 1 element samo ga ispisemo jer je on najveci
			indexprvi=indexmin;
			printf(""\n%s %s"",niz[indexprvi].prezime,niz[indexprvi].ime);
			return vel;
		case 0: 	//ako je velicina 0 vrati 0
			return 0;
		case 2: //ako je velicina 2 printamo 2 najbolja
	
			indexprvi=indexmin;
		for(i=0;i<vel;i++){
			if(dalijeveci(niz[i],niz[indexprvi])==1)	//nadjemo najboljeg studenta
			indexprvi=i;
		}
		indexdrugi=indexmin;
		for(i=0;i<vel;i++){
			if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){	//nadjemo drugog najboljeg kojem je index razlicit od onog najboljeg
				indexdrugi=i;
			}
		}
		
	printf(""%s %s\n%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime,niz[indexdrugi].prezime,niz[indexdrugi].ime);
	
	return 2;
		
	default: 
	indexprvi=indexmin; indexdrugi=indexmin; indextreci=indexmin;
	for(i=0;i<vel;i++){
		if(dalijeveci(niz[i],niz[indexprvi])==1)
		indexprvi=i;
	}
	for(i=0;i<vel;i++){
		if(i==indexprvi) continue;
		if(dalijeveci(niz[i],niz[indexdrugi])==1) {
			indexdrugi=i;
		}
	}
	for(i=0;i<vel;i++){
		if(i==indexdrugi || i== indexdrugi) continue;	//preskacemo ona 2 najbolj sto smo ih ispisali
		if(dalijeveci(niz[i],niz[indextreci])==1 && i!=indexprvi)
		indextreci=i;
	}
		printf(""%s %s\n"",niz[indexprvi].prezime, niz[indexprvi].ime);
		printf(""%s %s\n"",niz[indexdrugi].prezime, niz[indexdrugi].ime );
		printf(""%s %s\n"",niz[indextreci].prezime,niz[indextreci].ime);
	return vel;
	
}
}
int main() {
	
	struct Student studenti[5]={
		{""Amra"",""Djelmo"",{7,10,10,10,10},5},
		{""Aske"",""Askelov"",{10,10,10,10,10},5},
	};
	genijalci(studenti,2,6.5);

	return 0;
}
"
1053,99,99,0,54,A2016/Z1/Z1/student4639,A2016/Z1/Z1/student4416,"#include <stdio.h>
#include <math.h>
#define eps 1e-5
int main() {
	double I1,I2,I3,II1,II2,II3,z1,z2,z3,P1,P2,P3,Z1,Z2,Z3,U1,U2,U3;
	double O1,O2,O3;
	printf (""Unesite bodove za Tarika: "");
	printf (""\nI parcijalni ispit: ""); scanf (""%lf"",&I1); if (I1<0 || I1>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""II parcijalni ispit: ""); scanf (""%lf"",&II1); if (II1<0 || II1>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Prisustvo: ""); scanf (""%lf"",&P1); if (P1<0 || P1>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zadace: ""); scanf (""%lf"",&z1); if (z1<0 || z1>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zavrsni ispit: ""); scanf (""%lf"",&Z1); if (Z1<0 || Z1>40) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Unesite bodove za Bojana: "");
	printf (""\nI parcijalni ispit: ""); scanf (""%lf"",&I2); if (I2<0 || I2>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""II parcijalni ispit: ""); scanf (""%lf"",&II2); if (II2<0 || II2>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Prisustvo: ""); scanf (""%lf"",&P2); if (P2<0 || P2>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zadace: ""); scanf (""%lf"",&z2); if (z2<0 || z2>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zavrsni ispit: ""); scanf (""%lf"",&Z2); if (Z2<0 || Z2>40) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Unesite bodove za Mirzu: "");
	printf (""\nI parcijalni ispit: ""); scanf (""%lf"",&I3); if (I3<0 || I3>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""II parcijalni ispit: ""); scanf (""%lf"",&II3); if (II3<0 || II3>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Prisustvo: ""); scanf (""%lf"",&P3); if (P3<0 || P3>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zadace: ""); scanf (""%lf"",&z3); if (z3<0 || z3>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zavrsni ispit: ""); scanf (""%lf"",&Z3); if (Z3<0 || Z3>40) { printf (""Neispravan broj bodova""); return 0; }
		U1=I1+II1+P1+z1+Z1;
		U2=I2+II2+P2+z2+Z2;
		U3=I3+II3+P3+z3+Z3;
	if (U1<55)  O1=5;
	if (U1>=55 && U1<65) O1=6;
	if (U1>=65 && U1<75) O1=7;
	if (U1>=75 && U1<85) O1=8;
	if (U1>=85 && U1<92) O1=9;
	if (U1>=92) O1=10;
	if (U2<55)	O2=5;
	if (U2>=55 && U2<65) O2=6;
	if (U2>=65 && U2<75) O2=7;
	if (U2>=75 && U2<85) O2=8;
	if (U2>=85 && U2<92) O2=9;
	if (U2>=92) O2=10;
	if (U3<55)	O3=5;
	if (U3>=55 && U3<65) O3=6;
	if (U3>=65 && U3<75) O3=7;
	if (U3>=75 && U3<85) O3=8;
	if (U3>=85 && U3<92) O3=9;
	if (U3>=92) O3=10;
	if (O1==5 && O2==5 && O3==5) printf (""Nijedan student nije polozio."");
	else {
		if ((O1==5 && O2==5 && O3!=5)||(O1!=5 && O2==5 && O3==5)||(O1==5 && O2!=5 && O3==5)) printf (""Jedan student je polozio."");
		if ((O1==5 && O2!=5 && O3!=5)||(O1!=5 && O2==5 && O3!=5)||(O1!=5 && O2!=5 && O3==5)) printf (""Dva studenta su polozila."");
	}
	if (O1!=5 && O2!=5 && O3!=5) {
		printf (""Sva tri studenta su polozila."");
		if (O1==O2 && O1==O3) printf (""\nSva tri studenta imaju istu ocjenu."");
		if (O1!=O2 && O1!=O3 && O2!=O3) printf (""\nSvaki student ima razlicitu ocjenu."");
		if ((O1==O2 && O1!=O3)||(O1==O3 && O2!=O3)||(O2==O3 && O1!=O2)) printf (""\nDva od tri studenta imaju istu ocjenu."");
	}
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define eps 1e-5
int main() {
	double I1,I2,I3,II1,II2,II3,z1,z2,z3,P1,P2,P3,Z1,Z2,Z3,U1,U2,U3;
	double O1,O2,O3;
	printf (""Unesite bodove za Tarika: "");
	printf (""\nI parcijalni ispit: ""); scanf (""%lf"",&I1); if (I1<0 || I1>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""II parcijalni ispit: ""); scanf (""%lf"",&II1); if (II1<0 || II1>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Prisustvo: ""); scanf (""%lf"",&P1); if (P1<0 || P1>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zadace: ""); scanf (""%lf"",&z1); if (z1<0 || z1>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zavrsni ispit: ""); scanf (""%lf"",&Z1); if (Z1<0 || Z1>40) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Unesite bodove za Bojana: "");
	printf (""\nI parcijalni ispit: ""); scanf (""%lf"",&I2); if (I2<0 || I2>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""II parcijalni ispit: ""); scanf (""%lf"",&II2); if (II2<0 || II2>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Prisustvo: ""); scanf (""%lf"",&P2); if (P2<0 || P2>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zadace: ""); scanf (""%lf"",&z2); if (z2<0 || z2>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zavrsni ispit: ""); scanf (""%lf"",&Z2); if (Z2<0 || Z2>40) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Unesite bodove za Mirzu: "");
	printf (""\nI parcijalni ispit: ""); scanf (""%lf"",&I3); if (I3<0 || I3>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""II parcijalni ispit: ""); scanf (""%lf"",&II3); if (II3<0 || II3>20) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Prisustvo: ""); scanf (""%lf"",&P3); if (P3<0 || P3>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zadace: ""); scanf (""%lf"",&z3); if (z3<0 || z3>10) { printf (""Neispravan broj bodova""); return 0; }
	printf (""Zavrsni ispit: ""); scanf (""%lf"",&Z3); if (Z3<0 || Z3>40) { printf (""Neispravan broj bodova""); return 0; }
		U1=I1+II1+P1+z1+Z1;
		U2=I2+II2+P2+z2+Z2;
		U3=I3+II3+P3+z3+Z3;
	if (U1<55)  O1=5;
	if (U1>=55 && U1<65) O1=6;
	if (U1>=65 && U1<75) O1=7;
	if (U1>=75 && U1<85) O1=8;
	if (U1>=85 && U1<92) O1=9;
	if (U1>=92) O1=10;
	if (U2<55)	O2=5;
	if (U2>=55 && U2<65) O2=6;
	if (U2>=65 && U2<75) O2=7;
	if (U2>=75 && U2<85) O2=8;
	if (U2>=85 && U2<92) O2=9;
	if (U2>=92) O2=10;
	if (U3<55)	O3=5;
	if (U3>=55 && U3<65) O3=6;
	if (U3>=65 && U3<75) O3=7;
	if (U3>=75 && U3<85) O3=8;
	if (U3>=85 && U3<92) O3=9;
	if (U3>=92) O3=10;
	if (O1==5 && O2==5 && O3==5) printf (""Nijedan student nije polozio."");
	else {
		if ((O1==5 && O2==5 && O3!=5)||(O1!=5 && O2==5 && O3==5)||(O1==5 && O2!=5 && O3==5)) printf (""Jedan student je polozio."");
		if ((O1==5 && O2!=5 && O3!=5)||(O1!=5 && O2==5 && O3!=5)||(O1!=5 && O2!=5 && O3==5)) printf (""Dva studenta su polozila."");
	}
	if (O1!=5 && O2!=5 && O3!=5) {
		printf (""Sva tri studenta su polozila."");
		if (O1==O2 && O1==O3) printf (""\nSva tri studenta imaju istu ocjenu."");
		if (O1!=O2 && O1!=O3 && O2!=O3) printf (""\nSvaki student ima razlicitu ocjenu."");
		if ((O1==O2 && O1!=O3)||(O1==O3 && O2!=O3)||(O2==O3 && O1!=O2)) printf (""\nDva od tri studenta imaju istu ocjenu."");
	}
	return 0;
}
"
1056,99,99,0,255,A2016/Z5/Z2/student7802,A2016/Z5/Z2/student5378,"#include <stdio.h>
#include <string.h>
void unesi(char niz[], int velicina)
{
    char znak=getchar();
    if(znak=='\n') znak=getchar();
    int i = 0;
    while (i<velicina-1 && znak!='\n')
    {
        niz[i]=znak;
        i++;
        znak=getchar();
    }
    niz[i]='\0';
}
/*vraca 1 ako je znak slovo*/
int slovo(int c)
{
    if(c>='A' && c<='Z' || c>='a' && c<='z')
        return 1;
    return 0;
}
/*funkcija prima 2 stringa i zamijeni ih*/
void swap(char *p, char *q)
{
    char temp[100];
    strcpy(temp,p);
    strcpy(p,q);
    strcpy(q,temp);
}
void kompresuj(char* naziv,char* naziv1)
{
    FILE *ulaz=fopen(naziv,""r"");
    FILE *ulaz1=fopen(naziv,""r"");
    FILE *izlaz=fopen(naziv1,""w"");
    char rijeci[1000][1000]={0};
    /*brojac za svaku rijec*/
    int brojac[1000]={0};
    int i, broj_rijeci=0;
    char rijec[1000];
    int duzina;
    char znak=fgetc(ulaz);
    /*dok ne dodjemo do kraja 
    datoteke uzimamo znak po znak*/
    while(znak!=EOF)
    {
        duzina=0;
        /*dok je znak slovo znaci da smo na rijeci
        pa uzmemo sva slova i ubacimo u trenutnu rijeci*/
        while(slovo(znak))
        {
            rijec[duzina++]=znak;
            znak=fgetc(ulaz);
        }
        rijec[duzina]='\0';
        if(duzina < 10 && duzina !=0)
        {
            int ima=0,j;
            /*prolazimo kroz rijeci koje smo do sada upisali*/
            for(j=0;j<broj_rijeci;j++)
            {
                /*ako se rijec vec nalazi tu 
                povecavamo broj ponavljanja*/
                if(strcmp(rijeci[j],rijec)==0)
                {
                    ima=1;
                    brojac[j]++;
                    break;
                }
            }
            /*ako je nema dodajemo je i 
            brojac postavljamo na 1*/
            if(ima!=1)
            {
                strcpy(rijeci[broj_rijeci],rijec);
                brojac[broj_rijeci++]=1;
            }
        }
        znak=fgetc(ulaz);
    }
    /*unijeli smo sve rijeci sada ih 
    sortiramo po broju ponavljanja i leksikografski*/
    int j;
    for(i=0;i<broj_rijeci;i++)
    {
        for(j=i+1;j<broj_rijeci;j++)
        {
            if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1))
            {
                int temp=brojac[j];
                brojac[j]=brojac[i];
                brojac[i]=temp;
                swap(rijeci[i],rijeci[j]);
            }
        }
    }
    int kraj=10;
    char novired='\n';
    /*treba nam 10 rijeci ako ih 
    ima manje onda to koristim*/
    if(broj_rijeci<10)
        kraj=broj_rijeci;
    /*prvo unosimo u izlaz 
    rijeci koje su u nizu*/
    for(i=0;i<kraj;i++)
    {
        fputs(rijeci[i],izlaz);
        fputc(novired,izlaz);
    }
    char c=fgetc(ulaz1);
    while(c!=EOF)
    {
        duzina=0;
        /*uzimamo rijec po rijec*/
        while(slovo(c))
        {
            rijec[duzina++]=c;
            c=fgetc(ulaz1);
        }
        rijec[duzina]='\0';
        int kontrola=0;
        if(duzina<10 && duzina!=0)
        {
            for(j=0;j<kraj;j++)
            {   
                /*ako nalazi u nizu mijenjamo 
                odgovarajucim znakom*/
                if(strcmp(rijeci[j],rijec)==0)
                {
                    char znk=j+20;
                    kontrola=1;
                    fputc(znk,izlaz);
                    fputc(c,izlaz);
                    break;
                }
            }
        }
        if(kontrola==0)
        {
            char *r=rijec;
            while(*r!='\0')
            {
                fputc(*r,izlaz);
                r++;
            }
            fputc(c,izlaz);
        }
        c=fgetc(ulaz1);
    }
    printf(""Datoteka kompresovana.\n"");
    fclose(ulaz);
    fclose(ulaz1);
    fclose(izlaz);
}
void dekompresuj(char *naziv, char *naziv1)
{
    FILE *ulaz=fopen(naziv,""r"");
    FILE *ulaz1=fopen(naziv,""r"");
    FILE *izlaz=fopen(naziv1,""w"");
    char rijeci[1000][1000]={0},rijec[1000];
    int broj_rijeci=0,duzina=0,brojackrajeva=0;
    char znak=fgetc(ulaz);
    int kontrola=0;
    while(znak!=EOF)
    {
        duzina=0;
        kontrola=0;
        while(slovo(znak))
        {
            rijec[duzina++]=znak;
            znak=fgetc(ulaz);
        }
        rijec[duzina]='\0';
        if(duzina<10 && duzina!=0)
        {
            strcpy(rijeci[broj_rijeci],rijec);
            int j;
            for(j=0;j<broj_rijeci;j++)
            {
                if(strcmp(rijeci[j],rijec)==0)
                {
                    kontrola=1;
                    break;
                }
            }
            if(kontrola)
                break;
            broj_rijeci++;
        }
        znak=fgetc(ulaz);
    }
    /*prebrojimo koliko ima rijeci*/
    brojackrajeva=0;
    char c=fgetc(ulaz1);
    while(c!=EOF)
    {
        /*brojimo nova mjesta*/
        if(c=='\n')
            brojackrajeva++;
        /*kad dodjemo do zadnje rijeci prekidamo*/
        if(brojackrajeva==broj_rijeci)
            break;
        c=fgetc(ulaz1);
    }
    c=fgetc(ulaz1);
        while(c!=EOF)
        {
            int n=0;
            /*sve znakove od 20 do 30 mijenjamo rijecima*/
            if(c>=20 && c<=30)
            {
                char *p=rijeci[c-20];
                n=1;
                /*ubacujemo rijec*/
                while(*p!='\0')
                {
                    fputc(*p,izlaz);
                    p++;
                }
            }
            /*ako nije znak prepisujem rijeci*/
            if(n==0)
                fputc(c,izlaz);
            c=fgetc(ulaz1);
        }
    printf(""Datoteka dekompresovana.\n"");
    fclose(ulaz);
    fclose(izlaz);
    fclose(ulaz1);
    
}
int main() {
    int opcija;
    char s[100], p[100];
    do
    {
        printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
        scanf(""%d"",&opcija);
        switch(opcija)
        {
            /*unosim datoteke i vrsim kompresiju/dekompresiju*/
            case 1:
                printf(""Unesite ime ulazne datoteke: "");
                unesi(s,40);
                printf(""Unesite ime izlazne datoteke: "");
                unesi(p,40);
                kompresuj(s,p);
                break;
            case 2:
                printf(""Unesite ime ulazne datoteke: "");
                unesi(s,40);
                printf(""Unesite ime izlazne datoteke: "");
                unesi(p,40);
                dekompresuj(s,p);
        }
    }while(opcija!=0);
	return 0;
}
","#include <stdio.h>
#include <string.h>
#include <ctype.h>

void unesi(char niz[],int velicina){
	char znak=getchar();
	if(znak=='\n') znak = getchar();
	int i=0;
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
int da_li_je_slovo(int n){
	if(n>='A'&&n<='Z'||n>='a'&&n<='z')	return 1;
	return 0;
}
void zamijeni(char *p, char *s){
	char temp[100];
	strcpy(temp,p);
	strcpy(p,s);
	strcpy(s,temp);
}
void kompresuj(char* naziv,char *naziv1){
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv1,""w"");
	char rijeci[1000][1000]={0};
	int brojac[1000]={0};
	int i,broj_rijeci=0;
	char rijec[1000];
	int duzina;
	char znak=fgetc(ulaz);
	while(znak!=EOF){
		duzina=0;
		while(da_li_je_slovo(znak)){
			rijec[duzina++]=znak;
			znak=fgetc(ulaz);
	}
	rijec[duzina]='\0';
	if(duzina<10 && duzina!=0){
		int ima=0;
		int j;
		for(j=0;j<broj_rijeci;j++){
			if(strcmp(rijeci[j],rijec)==0){
				ima =1;
				brojac[j]++;
				break;
			}
		}
		if(ima!=1){
			strcpy(rijeci[broj_rijeci],rijec);
			brojac[broj_rijeci++]=1;
		}
	}
	znak=fgetc(ulaz);
}
 int j;
    for(i=0;i<broj_rijeci;i++){ 
        for(j=i+1;j<broj_rijeci;j++){
            if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1)){
			int temp=brojac[j];
			brojac[j]=brojac[i];
			brojac[i]=temp;
			zamijeni(rijeci[i],rijeci[j]);
		}
	}
}
int kraj=10;
char novired='\n';
if(broj_rijeci<10) kraj=broj_rijeci;
for(i=0;i<kraj;i++){
	fputs(rijeci[i],izlaz);
	fputc(novired,izlaz);
}
char c=fgetc(ulaz1);
while(c!=EOF){
	duzina=0;
	while(da_li_je_slovo(c)){
		rijec[duzina++]=c;
		c=fgetc(ulaz1);
	}
	rijec[duzina]='\0';
	int kontrola=0;
	if(duzina<10 && duzina!=0){
		for(j=0;j<kraj;j++){
			if(strcmp(rijeci[j],rijec)==0){
				char znk=j+20;
				kontrola=1;
				fputc(znk,izlaz);
				fputc(c,izlaz);
				break;
			}
		}
	}
	if(kontrola==0){
		char *r=rijec;
		while (*r!='\0') {
			fputc(*r,izlaz);
			r++;
		}
		fputc(c,izlaz);
	}
	c=fgetc(ulaz1);
}
printf(""Datoteka kompresovana.\n"");
fclose(ulaz);
fclose(ulaz1);
fclose(izlaz);
}
void dekompresuj(char*naziv,char*naziv2){
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv2,""w"");
	char rijeci[1000][1000]={0}, rijec[1000];
	int br_rijeci=0,duzina=0,br=0;
	char znak=fgetc(ulaz);
	int flag=0;
	while (znak!=EOF) {
		duzina=0;
		flag=0;
		while(da_li_je_slovo(znak)){
			rijec[duzina++]=znak;
			znak=fgetc(ulaz);
		}
		rijec[duzina]='\0';
		if(duzina<10 && duzina!=0){
			strcpy(rijeci[br_rijeci],rijec);
			int j;
			for(j=0;j<br_rijeci;j++){
			if (strcmp(rijeci[j], rijec) == 0) {
					flag=1;
					break;
				}
			}
			if(flag)
			break;
			br_rijeci++;
		}
		znak=fgetc(ulaz);
	}
	br=0;
	char c=fgetc(ulaz1);
	while (c!=EOF){
		if(c=='\n') br++;
		if(br==br_rijeci) break;
		c=fgetc(ulaz1);
	}
	c=fgetc(ulaz1);
	while (c!=EOF) {
		int n=0;
		if(c>=20&&c<=30){
			char *q=rijeci[c-20];
			n=1;
			while(*q!='\0'){
				fputc(*q,izlaz);
				q++;
			}
		}
		if(n==0)
		fputc(c,izlaz);
		c=fgetc(ulaz1);
	}
	printf(""Datoteka dekompresovana.\n"");
	fclose(ulaz);
	fclose(izlaz);
	fclose(ulaz1);
}
int main() {
int biraj;
char s[100],p[100];
do{
	printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
	scanf(""%d"",&biraj);
	switch(biraj){
		case 1:
		printf(""Unesite ime ulazne datoteke: "");
		unesi(s,40);
		printf(""Unesite ime izlazne datoteke: "");
		unesi(p,40);
		kompresuj(s,p);
		break;
		case 2: 
		printf(""Unesite ime ulazne datoteke: "");
		unesi(s,40);
		printf(""Unesite ime izlazne datoteke: "");
		unesi(p,40);
		dekompresuj(s,p);
	}
}
while(biraj!=0);
	return 0;
}
"
1060,17,17,0,30,A2016/Z5/Z1/student8480,A2016/Z5/Z1/student5581,"#include <stdio.h>
#define epsilon 0.0001

struct Student{ //zadana struktura
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

int uporedi(char* s1, char* s2){ //funkcija iz predavanja koja leksikografski poredi dva stringa
	while(*s1!='\0' && *s2!='\0'){
		if(*s1<*s2) return 1; //ako prvi string treba biti ispred drugog vrati 1
		if(*s1>*s2) return 2; //ako drugi string treba biti ispred prvog vrati 2
		s1++; s2++;
	}
		if(*s1!='\0') return 2; //ako prvi string nije dosao na kraj, tj. ima jos slova, drugi je ispred njega i vrati 2
		if(*s2!='\0') return 1;//ako drugi string nije dosao na kraj, tj. ima jos slova, prvi je ispred njega i vrati 1
	return 0; //ako su dva ista stringa vrati 0
}

float prosjek(int niz[], int vel){ //funkcija racuna prosjek svakog studenta pojedinacno i to u zavisnosti od broja ocjena
	int i=0, suma=0;
	
	if(vel==0) return 5; // u zadatku je receno ako je velicina 0, da je prosjek 5, tj. pao
	
	for(i=0;i<vel;i++) 
		if(niz[i]==5) return 5; //ako ima ijednu 5, prosjek je 5, tj. pao
			for(i=0;i<vel;i++){
				suma+=niz[i]; //racunamo sumu
			}

	float prosjek=(float)suma/vel; //float da bi dobili decimalan broj
	return prosjek;
}



int dalijeveci(struct Student pr, struct Student dr){ // funkcija priam dva studenta, vraca 1 ako prvi treba biti ispred drugog, u suprotnom 0
	if(prosjek(pr.ocjene, pr.br_ocjena)>prosjek(dr.ocjene, dr.br_ocjena)) return 1; //ako je prosjek prvog veci, onda treba vratiti 1, tj. da on bude prije drugog
	if(prosjek(pr.ocjene, pr.br_ocjena)<prosjek(dr.ocjene, dr.br_ocjena)) return 0; //ako je prosjek prvog manji, onda ovaj student ne treba biti prije drugog
//ovdje se podrazumijeva da im je prosjek jednak je funkcija nije nista vratila, pa dalje poredimo prezimena
	if(uporedi(pr.prezime, dr.prezime)==1) return 1;
	if(uporedi(pr.prezime, dr.prezime)==2) return 0;
//podrazumijeva se da su im imena ista ako nije do sada nista vratila, pa isto kao i za prezimena, poredimo imena	
	if(uporedi(pr.ime, dr.ime)==1) return 1;
	if(uporedi(pr.ime, dr.ime)==2) return 0;
	else return 1; //ako su im jednaki prosjeci, prezimena i imena, svejedno je sta ce funkcija vratiti
}


int genijalci(struct Student niz[], int vel, double prosjekk){ //glavna funkcija koja primi niz struktura, velicinu niza i zadani prosjek
	int i, j, indexmin=0, indexprvi, indexdrugi, indextreci;
	double min=10;
	
for(i=0;i<vel;i++){
	if(prosjekk-prosjek(niz[i].ocjene, niz[i].br_ocjena)>epsilon){//ako je nas prosjek manji od zadanog moramo izbaciti
		for(j=i;j<vel-1;j++){ //izbacivanje kao i kod obicnih nizova
			niz[j]=niz[j+1];
		}
	vel--;
	i--;
	}
}
//iznad se vel niza smanjivala, sada nam je vel onolliko koliko je ostalo struktura u nizu nakon izbacivanja onih ispod prosjeka
for(i=0;i<vel;i++){//prolazak kroz preostali niz i nalazenje minimuma i pamtimo mu index
	if(min-prosjek(niz[i].ocjene, niz[i].br_ocjena)>epsilon){
		min=prosjek(niz[i].ocjene, niz[i].br_ocjena);
			indexmin=i;
	}
}
	
int maxprvi=5;

switch(vel){
		
case 0:
	break;
case 1: //ako je vel 1, printamo samo tog jednog studenta
	maxprvi=5; indexprvi=indexmin; //indexmin smo morali naci prije da bi bili sigurni da pokazuje na najmanji i trazimo sve vece od njega
		
	for(i=0;i<vel;i++){
		int temp_prosjek=prosjek(niz[i].ocjene, niz[i].br_ocjena);
		
		if(dalijeveci(niz[i],niz[indexprvi])){ //poziv funkcije koja trazi studenta koji ima najveci prosjek, ako ima isti onda poredi imena i prezimena
			indexprvi=i; //pamtimo index
			maxprvi=temp_prosjek;
		}
	}

printf(""\n%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime); //printamo najboljeg studenta
	break;
		
case 2: //ako je vel 2, printamo ta dva studenta
	indexprvi=indexmin;
		
	for(i=0;i<vel;i++){
		if(dalijeveci(niz[i],niz[indexprvi])==1) indexprvi=i; //pamtimo indexprvog tj. najveceg studenta da bi u iducoj petlji mogli ga preskociti
	}
		
printf(""%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime);
	
indexdrugi=indexmin;
		
for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){ //preskacemo onog najboljeg
			indexdrugi=i;
	}
}

printf(""%s %s\n"", niz[indexdrugi].prezime, niz[indexdrugi].ime);
	break;
		
default: 
	
	indexprvi=indexmin; //nadjemo najveceg
		
for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indexprvi])==1)
		indexprvi=i; 
}
		
printf(""%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime);

indexdrugi=indexmin;

for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){
		indexdrugi=i;
	}
}
	
printf(""%s %s\n"", niz[indexdrugi].prezime, niz[indexdrugi].ime);

indextreci=indexmin;

for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indextreci])==1 && i!=indexprvi && i!=indexdrugi)//preskacemo one koje smo ispisali
		indextreci=i;
}

printf(""%s %s\n"", niz[indextreci].prezime, niz[indextreci].ime);
}
	return vel;
}


int main() {

struct Student studenti[5]={
	
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Meho"", ""Mujic"", {7,7,7,7,8},5},
	{""Beba"", ""Bebic"", {10,10,10,10,5},5},
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Fata"", ""Fatic"", {7,7,7,7,8},5},
};

genijalci(studenti,5,6.5);

	return 0;
}
","#include <stdio.h>

int strcmp(char* s1, char* s2)
{
	while (*s1 != '\0' && *s2 != '\0') {
		if (*s1 < *s2) return -1;
		if (*s1 > *s2) return 1;
		s1++;
		s2++;
	}

	if(*s1=='\0'&&*s2=='\0') return 0;
	if (*s1 != '\0') return 1;
	if (*s2 != '\0') return -1;


	return 0;

}

struct Student {

	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

/*funkcija koja računa prosjek jednog studenta*/
double prosjek (struct Student st)
{

	int i;
	double sum=0;

	if(st.br_ocjena==0) {
		return 5;
	}

	for(i=0; i<st.br_ocjena; i++) {

		if(st.ocjene[i]==5) {
			return 5;
		}

		sum=sum+st.ocjene[i];
	}
	return sum/st.br_ocjena;
}

int genijalci (struct Student studenti[], int vel, float prosjek1)
{

	int i,j;
	int max1=0,max2=0,max3=0;

	/*izbacivanje studenata koji ne ispunjavaju uslov*/
	for(i=0; i<vel; i++) {

		if(prosjek(studenti[i])<prosjek1) {
			for(j=i; j<vel-1; j++) {
				studenti[j]=studenti[j+1];
			}

			vel--;
			i--;
		}
	}
	
	/*traženje studenta sa najvećim prosjekom*/
	for(i=0; i<vel; i++) {

		if(prosjek(studenti[i])>prosjek(studenti[max1])) {
			max1=i;
		} else if(prosjek(studenti[i])==prosjek(studenti[max1])) {
			if(strcmp(studenti[i].prezime,studenti[max1].prezime)<0) {
				max1=i;
			}
		} else if(strcmp(studenti[i].prezime,studenti[max1].prezime)==0) {
			if(strcmp(studenti[i].ime,studenti[max1].ime)<0) {
				max1=i;
			}
		}
	}

	if(max1==0) {
		max2++;
	}
	
	/*traženje drugog studenta sa najvećim prosjekom*/
	if(vel>=2) {
		for(i=0; i<vel; i++) {

			if(max2>vel)
				break;

			if(i==max1) {
				continue;
			}

			if(prosjek(studenti[i])>prosjek(studenti[max2])) {
				max2=i;
			} else if(prosjek(studenti[i])==prosjek(studenti[max2])) {
				if(strcmp(studenti[i].prezime,studenti[max2].prezime)<0) {
					max2=i;
				}
			} else if(strcmp(studenti[i].prezime,studenti[max2].prezime)==0) {
				if(strcmp(studenti[i].ime,studenti[max2].ime)<0) {
					max2=i;
				}
			}
		}
		
		/*traženje trećeg studenta sa najvećim prosjekom*/
		if (vel>=3) {
			if(max1==0||max2==0) {
				max3++;
				if(max1==1||max2==1) {
					max3++;
				}
			}

			for(i=0; i<vel; i++) {
				if(max3>vel)
					break;

				if(i==max1||i==max2) {
					continue;
				}


				if(prosjek(studenti[i])>prosjek(studenti[max3])) {
					max3=i;
				} else if(prosjek(studenti[i])==prosjek(studenti[max3])) {
					if(strcmp(studenti[i].prezime,studenti[max3].prezime)<0) {
						max3=i;
					}
				} else if(strcmp(studenti[i].prezime,studenti[max3].prezime)==0) {
					if(strcmp(studenti[i].ime,studenti[max3].ime)<0) {
						max3=i;
					}
				}
			}

		}
	}
	/*ispis studenata*/
	if(prosjek(studenti[max1])>=prosjek1) printf(""%s %s\n"", studenti[max1].prezime, studenti[max1].ime);
	if(prosjek(studenti[max2])>=prosjek1 && max2!=max1 && max2<=vel) printf(""%s %s\n"", studenti[max2].prezime, studenti[max2].ime);
	if(prosjek(studenti[max3])>=prosjek1 && max3!=max2 && max3!=max1 && max3<=vel) printf(""%s %s\n"", studenti[max3].prezime, studenti[max3].ime);



	return vel;
}


int main()
{

	struct Student studenti[6] = {
		{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5},
		{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5},
		{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5},
		{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
		{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5},
		{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5},
	};

	printf(""%d"", strcmp(studenti[1].ime, studenti[0].ime));

	return 0;

}
"
1063,24,24,0,32,A2016/Z5/Z1/student8480,A2016/Z5/Z1/student5744,"#include <stdio.h>
#define epsilon 0.0001

struct Student{ //zadana struktura
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

int uporedi(char* s1, char* s2){ //funkcija iz predavanja koja leksikografski poredi dva stringa
	while(*s1!='\0' && *s2!='\0'){
		if(*s1<*s2) return 1; //ako prvi string treba biti ispred drugog vrati 1
		if(*s1>*s2) return 2; //ako drugi string treba biti ispred prvog vrati 2
		s1++; s2++;
	}
		if(*s1!='\0') return 2; //ako prvi string nije dosao na kraj, tj. ima jos slova, drugi je ispred njega i vrati 2
		if(*s2!='\0') return 1;//ako drugi string nije dosao na kraj, tj. ima jos slova, prvi je ispred njega i vrati 1
	return 0; //ako su dva ista stringa vrati 0
}

float prosjek(int niz[], int vel){ //funkcija racuna prosjek svakog studenta pojedinacno i to u zavisnosti od broja ocjena
	int i=0, suma=0;
	
	if(vel==0) return 5; // u zadatku je receno ako je velicina 0, da je prosjek 5, tj. pao
	
	for(i=0;i<vel;i++) 
		if(niz[i]==5) return 5; //ako ima ijednu 5, prosjek je 5, tj. pao
			for(i=0;i<vel;i++){
				suma+=niz[i]; //racunamo sumu
			}

	float prosjek=(float)suma/vel; //float da bi dobili decimalan broj
	return prosjek;
}



int dalijeveci(struct Student pr, struct Student dr){ // funkcija priam dva studenta, vraca 1 ako prvi treba biti ispred drugog, u suprotnom 0
	if(prosjek(pr.ocjene, pr.br_ocjena)>prosjek(dr.ocjene, dr.br_ocjena)) return 1; //ako je prosjek prvog veci, onda treba vratiti 1, tj. da on bude prije drugog
	if(prosjek(pr.ocjene, pr.br_ocjena)<prosjek(dr.ocjene, dr.br_ocjena)) return 0; //ako je prosjek prvog manji, onda ovaj student ne treba biti prije drugog
//ovdje se podrazumijeva da im je prosjek jednak je funkcija nije nista vratila, pa dalje poredimo prezimena
	if(uporedi(pr.prezime, dr.prezime)==1) return 1;
	if(uporedi(pr.prezime, dr.prezime)==2) return 0;
//podrazumijeva se da su im imena ista ako nije do sada nista vratila, pa isto kao i za prezimena, poredimo imena	
	if(uporedi(pr.ime, dr.ime)==1) return 1;
	if(uporedi(pr.ime, dr.ime)==2) return 0;
	else return 1; //ako su im jednaki prosjeci, prezimena i imena, svejedno je sta ce funkcija vratiti
}


int genijalci(struct Student niz[], int vel, double prosjekk){ //glavna funkcija koja primi niz struktura, velicinu niza i zadani prosjek
	int i, j, indexmin=0, indexprvi, indexdrugi, indextreci;
	double min=10;
	
for(i=0;i<vel;i++){
	if(prosjekk-prosjek(niz[i].ocjene, niz[i].br_ocjena)>epsilon){//ako je nas prosjek manji od zadanog moramo izbaciti
		for(j=i;j<vel-1;j++){ //izbacivanje kao i kod obicnih nizova
			niz[j]=niz[j+1];
		}
	vel--;
	i--;
	}
}
//iznad se vel niza smanjivala, sada nam je vel onolliko koliko je ostalo struktura u nizu nakon izbacivanja onih ispod prosjeka
for(i=0;i<vel;i++){//prolazak kroz preostali niz i nalazenje minimuma i pamtimo mu index
	if(min-prosjek(niz[i].ocjene, niz[i].br_ocjena)>epsilon){
		min=prosjek(niz[i].ocjene, niz[i].br_ocjena);
			indexmin=i;
	}
}
	
int maxprvi=5;

switch(vel){
		
case 0:
	break;
case 1: //ako je vel 1, printamo samo tog jednog studenta
	maxprvi=5; indexprvi=indexmin; //indexmin smo morali naci prije da bi bili sigurni da pokazuje na najmanji i trazimo sve vece od njega
		
	for(i=0;i<vel;i++){
		int temp_prosjek=prosjek(niz[i].ocjene, niz[i].br_ocjena);
		
		if(dalijeveci(niz[i],niz[indexprvi])){ //poziv funkcije koja trazi studenta koji ima najveci prosjek, ako ima isti onda poredi imena i prezimena
			indexprvi=i; //pamtimo index
			maxprvi=temp_prosjek;
		}
	}

printf(""\n%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime); //printamo najboljeg studenta
	break;
		
case 2: //ako je vel 2, printamo ta dva studenta
	indexprvi=indexmin;
		
	for(i=0;i<vel;i++){
		if(dalijeveci(niz[i],niz[indexprvi])==1) indexprvi=i; //pamtimo indexprvog tj. najveceg studenta da bi u iducoj petlji mogli ga preskociti
	}
		
printf(""%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime);
	
indexdrugi=indexmin;
		
for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){ //preskacemo onog najboljeg
			indexdrugi=i;
	}
}

printf(""%s %s\n"", niz[indexdrugi].prezime, niz[indexdrugi].ime);
	break;
		
default: 
	
	indexprvi=indexmin; //nadjemo najveceg
		
for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indexprvi])==1)
		indexprvi=i; 
}
		
printf(""%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime);

indexdrugi=indexmin;

for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){
		indexdrugi=i;
	}
}
	
printf(""%s %s\n"", niz[indexdrugi].prezime, niz[indexdrugi].ime);

indextreci=indexmin;

for(i=0;i<vel;i++){
	if(dalijeveci(niz[i],niz[indextreci])==1 && i!=indexprvi && i!=indexdrugi)//preskacemo one koje smo ispisali
		indextreci=i;
}

printf(""%s %s\n"", niz[indextreci].prezime, niz[indextreci].ime);
}
	return vel;
}


int main() {

struct Student studenti[5]={
	
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Meho"", ""Mujic"", {7,7,7,7,8},5},
	{""Beba"", ""Bebic"", {10,10,10,10,5},5},
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Fata"", ""Fatic"", {7,7,7,7,8},5},
};

genijalci(studenti,5,6.5);

	return 0;
}
","#include <stdio.h>

struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};
//funkcija koja poredi leksikografski rijeci 
int poredi_rijeci(char *prva,char* druga)
{
	while(*prva!='\0'&&*druga!='\0')
	{
		if(*prva>*druga) return 0;
		if(*druga>*prva) return 1;
		druga++;
		prva++;
	}
	if(*prva!='\0'&&*druga=='\0') return 0;
	if(*prva=='\0'&&*druga!='\0') return 1;
	return -1;
}

int genijalci(struct Student* niz,int vel,double pro)
{
	int i,j;
	double tre,p=0,d=0,t=0;
	struct Student ps,ds,ts;
	//prolazi kroz niz studenata
	for(i=0;i<vel;i++)
	{
		tre=0;
		//racuna prosjek
		for(j=0;j<niz[i].br_ocjena;j++)
		{
			tre+=niz[i].ocjene[j];
			if(niz[i].ocjene[j]==5)
			{
				tre=5;	
				break;
			} 
		}
		if(niz[i].br_ocjena==0) tre=5;
		if(tre>5)
		{
			tre=tre/niz[i].br_ocjena;
		}
		//ako treba izbacuje studenta
		if(tre-pro<-0.00001)
		{
			for(j=i;j<vel-1;j++)
			{
				niz[j]=niz[j+1];
			}
			vel--;
			i--;
			continue;
		}
		//ako je student po kriterijima ispred dosadasnjeg prvog ubacuje ga 
		if(tre>p || (tre==p&&poredi_rijeci(niz[i].prezime,ps.prezime)==1)||(tre==p&&poredi_rijeci(niz[i].prezime,ps.prezime)==-1&&poredi_rijeci(niz[i].ime,ps.ime)==1))
		{
			t=d;
			d=p;
			p=tre;
			ts=ds;
			ds=ps;
			ps=niz[i];
		}
		//isto i za drugog
		else if(tre>d||(tre==d&&poredi_rijeci(niz[i].prezime,ds.prezime)==1)||(tre==d&&poredi_rijeci(niz[i].prezime,ds.prezime)==-1&&poredi_rijeci(niz[i].ime,ds.ime)==1))
		{
			t=d;
			d=tre;
			ts=ds;
			ds=niz[i];
		}
		//i treceg
		else if(tre>t||(tre==t&&poredi_rijeci(niz[i].prezime,ts.prezime)==1)||(tre==t&&poredi_rijeci(niz[i].prezime,ts.prezime)==-1&&poredi_rijeci(niz[i].ime,ts.ime)==1))
		{
			t=tre;
			ts=niz[i];
		}
	}
	//ispisuju koliko ima od najbolja tri studenta
	if(p!=0)
	{
		printf(""%s %s\n"",ps.prezime,ps.ime);
	}
	if(d!=0)
	{
		printf(""%s %s\n"",ds.prezime,ds.ime);
	}
	if(t!=0)
	{
		printf(""%s %s\n"",ts.prezime,ts.ime);
	}
	return vel;
}

int main()
{
	/* AT5: Test leksikografskog sortiranja no. 2, jedna petica je prosjek 5.0 */
struct Student studenti[5] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Beba"", ""Bebic"", { 10, 10, 10, 10, 5}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 5, 6.5);
if(poredi_rijeci(studenti[1].prezime,studenti[0].prezime)==-1&&poredi_rijeci(studenti[1].ime,studenti[0].ime))
printf(""da"");
printf(""%d"",poredi_rijeci(studenti[0].ime,studenti[1].ime));
	return 0;
}"
1066,99,99,0,72,A2016/Z3/Z3/student8561,A2016/Z3/Z3/student8419,"#include <stdio.h>

int main() {
	int matrica[100][100],m,n,i,j,k,l,p,c,r,s;
	p=0;
	s=0;
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"",&m,&n);
		if(m<1 || m>200 || n<1 || n>200) 
		printf(""Brojevi nisu u trazenom opsegu.\n"");
	} while(m<1 || m>200 || n<1 || n>200);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++)
		scanf(""%d"",&matrica[i][j]);
	}
	
	for(i=0;i<m;i++){
		if(p==1)
		i--;
		for(k=i+1;k<m;k++){
			c=0;                                                  /*c=kolona, r=red*/
			while(c<n){
				if(matrica[i][c]==matrica[k][c]) p=1;
				else {
					p=0;
					break;
				}
				c++;
			}
			if(p==1){
				for(j=k;j<m-1;j++){
					for(l=0;l<n;l++) matrica[j][l]=matrica[j+1][l];
				}
			m--;
			k--;
			}
		}
	}
	
	for(i=0;i<n;i++){
		if(s==1)
		i--;
		for(k=i+1;k<n;k++){
			r=0;
			while(r<m){
				if(matrica[r][i]==matrica[r][k]) s=1;
				else{
					s=0;
					break;
				}
				r++;
			}
			if(s==1){
				for(j=k;j<n;j++){
					for(l=0;l<m;l++) 
					matrica[l][j]==matrica[l][j+1];
				}
				n--;
				k--;
			}
		}
	}
	
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++)
		printf(""%5d"",matrica[i][j]);
		printf(""\n"");
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	int matrica[100][100],m,n,i,j,k,l,p,c,r,s;
	p=0;
	s=0;
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"",&m,&n);
		if(m<1 || m>200 || n<1 || n>200) 
		printf(""Brojevi nisu u trazenom opsegu.\n"");
	} while(m<1 || m>200 || n<1 || n>200);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++)
		scanf(""%d"",&matrica[i][j]);
	}
	
	for(i=0;i<m;i++){
		if(p==1)
		i--;
		for(k=i+1;k<m;k++){
			c=0;                                                  /*c=kolona, r=red*/
			while(c<n){
				if(matrica[i][c]==matrica[k][c]) p=1;
				else {
					p=0;
					break;
				}
				c++;
			}
			if(p==1){
				for(j=k;j<m-1;j++){
					for(l=0;l<n;l++) matrica[j][l]=matrica[j+1][l];
				}
			m--;
			k--;
			}
		}
	}
	
	for(i=0;i<n;i++){
		if(s==1)
		i--;
		for(k=i+1;k<n;k++){
			r=0;
			while(r<m){
				if(matrica[r][i]==matrica[r][k]) s=1;
				else{
					s=0;
					break;
				}
				r++;
			}
			if(s==1){
				for(j=k;j<n;j++){
					for(l=0;l<m;l++) 
					matrica[l][j]==matrica[l][j+1];
				}
				n--;
				k--;
			}
		}
	}
	
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++)
		printf(""%5d"",matrica[i][j]);
		printf(""\n"");
	}
	
	return 0;
}
"
1069,70,70,0,30,A2016/Z2/Z2/student6550,A2016/Z2/Z2/student4973,"#include <stdio.h>
#define PI 3.1415926



int main() {
	int i,j,n;
	double niz[500], D, minpom, secpom, step, min, sec;
		do {
		printf(""Unesite broj uglova: "");
		scanf(""%d"",&n);
		if(n<0 || n>500) printf(""Pogresan unos.\n"");
	} while(n<0 || n>500);
	for(i=0; i<n; i++){
		scanf(""%lf"", &niz[i]);

	}
			printf(""Uglovi su:\n "");

	    for(i=0; i<n; i++){

	    D = niz[i] * 180. / PI;
		step = (int) D;
	    minpom = (D - step)*60;
        if(minpom<0) minpom*=-1;
	    min = (int)minpom;
	    secpom = (minpom-min)*60;
	    sec = (int)secpom;

	    if(secpom-sec>0.5)sec++;
        if(sec==60) {sec=0; min++;}
		if(min==60 && step>0) {min=0; step++;}
		if(min==60 && step<0) {min=0; step--;}

	    if(sec>30){
	    		for(j=i;j<n-1;j++){
	    			niz[j] = niz[j+1];
	    		}
	    		n--;
	    		i--;

	    	}
        else printf(""\n%g stepeni %g minuta %g sekundi"",step,min,sec);

	    }


	return 0;
}
","#include <stdio.h>
#define PI 3.1415926

int main()
{
	int i,j,br_uglova;
	double stepeni,minuta,sekundi,niz[500];
	do {
		printf(""Unesite broj uglova: "");
		scanf(""%d"",&br_uglova);
		if(br_uglova<0 || br_uglova>500) printf(""Pogresan unos.\n"");
	} while(br_uglova<0 || br_uglova>500);

	for(i=0; i<br_uglova; i++)
		scanf(""%lf"",&niz[i]);
	printf(""Uglovi su: \n"");
	for(i=0; i<br_uglova; i++) {
		stepeni=niz[i]*180/PI;
		int s=stepeni;
		minuta=(stepeni-s)*60;
		if(minuta<0) minuta*=-1;
		int m=minuta;
		sekundi=(minuta-m)*60;
		int sec=sekundi;
		

		if(sekundi-sec>0.5)sec++;
		if(sec==60) {sec=0; m++;}
		if(m==60 && s>0) {m=0; s++;}
		if(m==60 && s<0) {m=0; s--;}



		if(sec>30) {
			for(j=i; j<br_uglova-1; j++)
				niz[j]=niz[j+1];
			br_uglova--;
			i--;

		}else
		printf(""%d stepeni %d minuta %d sekundi\n"",s,m,sec);
	}



	return 0;
}
"
1070,98,98,0,72,A2016/Z2/Z2/student4682,A2016/Z2/Z2/student7173,"#include <stdio.h>
#define pi 3.1415926

int main() {
	int i,j,n;
	double step[500],min[500],sek[500],niz[500];

	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
    
	
	for(i=0; i<n; i++) {
	scanf(""%lf"", &niz[i]);
	}
	
	for(i=0; i<n; i++) {
	if (niz[i]>0){
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=niz[i]-step[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=(niz[i]-min[i]);
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	
		if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]++;
		min[i]=0; }
	
		}
		
	
	else {
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=step[i]-niz[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=niz[i]-min[i];
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]--;
		min[i]=0; }
	
	
	}
	}
	

	for(i=0; i<n; i++) {
		if(sek[i]>30) {
			for (j=i; j<n-1; j++) {
			step[j]=step[j+1];	
			min[j]=min[j+1];
			sek[j]=sek[j+1];
			}
			
		n--;
		i--;
		}
	}
	
	printf(""Uglovi su:"");
	for(i=0; i<n; i++) 
    printf(""\n%g stepeni %g minuta %g sekundi"",step[i], min[i], sek[i]);
	
	return 0;
}
","#include <stdio.h>
#define pi 3.1415926

int main() {
	int i,j,n;
	double step[500],min[500],sek[500],niz[500];

	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
    
	
	for(i=0; i<n; i++) {
	scanf(""%lf"", &niz[i]);
	}
	
	for(i=0; i<n; i++) {
	if (niz[i]>0){
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=niz[i]-step[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=(niz[i]-min[i]);
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	
		if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]++;
		min[i]=0; }
	
		}
		
	
	else {
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=step[i]-niz[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=niz[i]-min[i];
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]--;
		min[i]=0; }
	
	
	}
	}
	

	for(i=0; i<n; i++) {
		if(sek[i]>30) {
			for (j=i; j<n-1; j++) {
			step[j]=step[j+1];	
			min[j]=min[j+1];
			sek[j]=sek[j+1];
			}
			
		n--;
		i--;
		}
	}
	
	printf(""Uglovi su:"");
	for(i=0; i<n; i++) 
    printf(""\n%g stepeni %g minuta %g sekundi"",step[i], min[i], sek[i]);
	
	return 0;
}
"
1071,84,84,0,27,A2016/Z2/Z4/student2886,A2016/Z2/Z4/student2704,"#include <stdio.h>


int main() {
	int i,j;
	int tep=1;
	int cirk=1;
	double mat[100][100];
	int m,n;
	do{
		printf(""Unesite M i N: "");
		scanf(""%d %d"",&m,&n);
		if(m<1 || n<1 || m>100 || n>100) printf(""Pogresan unos!\n"");
	}
	while(m<1 || n<1 || m>100 || n>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			scanf(""%lf"",&mat[i][j]);
			}
	}
	
	for(i=0;i<m-1;i++){
		for(j=0;j<n-1;j++){
			if(mat[i][j]!=mat[i+1][j+1]) {tep=0;}
		}
	}
	
	for(i=0;i<m-1;i++){
			if(mat[i][n-1]!=mat[i+1][0]) {cirk=0;}
		
	}
	
	if(cirk && tep) {printf(""Matrica je cirkularna"");}
	else if(tep) {printf(""Matrica je Teplicova"");}
	else {printf(""Matrica nije ni cirkularna ni Teplicova"");}
	
	
	return 0;
}
","#include <stdio.h>

int main() {
	
	int m, n, a, b;
	double matrica[100][100];
	int tep=1, cirk=1;
	
	do{
	printf(""Unesite M i N: "");
	scanf(""%d %d"", &m, &n);
	if((m<=0 || m>100) || (n<=0 || n>100)) {printf(""Pogresan unos!\n"");}
	}
	while(m<=0 || m>100 || n<=0 || n>100);
	
	printf(""Unesite elemente matrice: ""); 
	
	for(a=0; a<m; a++) {
		for(b=0; b<n; b++) {
			scanf(""%lf"",&matrica[a][b]);}}
	
	for(a=0; a<m-1;a++){
		for(b=0; b<n-1; b++){
			
			if(matrica[a][b]!=matrica[a+1][b+1]) {tep=0;}
			}
		}
	
	for(a=0;a<m-1;a++) {
		if(matrica[a][n-1]!=matrica[a+1][0]) cirk=0;
	}
	
	
	if(cirk && tep) {printf(""Matrica je cirkularna"");}
	else if(tep) {printf(""Matrica je Teplicova"");}
	else  {printf(""Matrica nije ni cirkularna ni Teplicova"");}
		
	return 0;
}
"
1078,23,23,0,39,A2016/Z5/Z1/student6497,A2016/Z5/Z1/student5581,"#include <stdio.h>
#include <math.h>
#define EPS 0.000001

/*Funkcija koja upoređuje dva stringa(bibliotecna strcmp)*/
int uporedi(const char*s1, const char*s2) {
	while(*s1!=0 && *s2!=0) {
		if(*s1<*s2)
			return -1;
		if(*s1>*s2)
			return 1;
		s1++;
		s2++;
	}
	if(*s1!='\0')
		return 1;
	if(*s2!='\0')
		return -1;
	return 0;
}
struct Student {
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};
/*Samodeskriptivno-prosjek ocjena nekog studenta*/
float racunajpr(struct Student s) {
	int i,suma=0;
	for(i=0; i<s.br_ocjena; ++i)
		suma+=s.ocjene[i];
	return((float)suma/s.br_ocjena);
}
int genijalci(struct Student s[],int velicina,float prosjek) {
	float prosjek1,suma,max_pros,temp;
	int i,j,maxpros,maxpros1,maxpros2;
	/*Racunanje prosjeka svakog studenta i izbacivanje studenta iz niza ako ima manji prosjek od proslijeđenog prosijeka*/
	for(i=0; i<velicina; i++) {
		if(s[i].br_ocjena==0)
			prosjek1=5.0;
		else {
			prosjek1=0;
			suma=0;
			for(j=0; j<s[i].br_ocjena; j++) {
				if(s[i].ocjene[j]==5)
					prosjek1=5.0;
				else 
					suma+=s[i].ocjene[j];	
			}
			if(prosjek1<EPS)
				prosjek1=(float)suma/s[i].br_ocjena;
		}
		if(prosjek1<prosjek) {
			for(j=i; j<velicina-1; j++) {
				s[j]=s[j+1];
			}
			velicina--;
			i--;
		}
	}
	/*Sta ako smo izbacili sve elemente iz niza?*/
	if(velicina==0)
		return 0;
	/*Potraga za maximalnim prosjekom nakon sto smo izbacili studente koje je trebalo izbaciti*/
	for(i=0; i<velicina; i++) {
		temp=racunajpr(s[i]);
		if(i==0) {
			maxpros=0;
			max_pros=temp;
		}
		if(i!=0) {
			if(temp>max_pros) {
				max_pros=temp;
				maxpros=i;
			}
			else if((fabs(temp-max_pros))<EPS) {
				if(uporedi(s[maxpros].prezime,s[i].prezime)==1) {
					maxpros=i;
					max_pros=temp;
				}
				else if(uporedi(s[maxpros].prezime,s[i].prezime)==0) {
					if(uporedi(s[maxpros].ime,s[i].ime)==1) {
						maxpros=i;
						max_pros=temp;
					}
				}
			}
		}
	}
	printf(""%s %s\n"", s[maxpros].prezime, s[maxpros].ime);
	/*Sad slijedi potraga za drugi prosjek po redu*/
	max_pros=0;
	maxpros1=-1;
	for(i=0; i<velicina; i++) {
		if(i==maxpros)
			continue;
		else {
			maxpros1=i;
			break;
		}
	}
	if(maxpros1==-1)
		return velicina;
	else {
		temp=racunajpr(s[maxpros1]);
		max_pros=temp;
		for(i=0; i<velicina; i++) {
			if(i==maxpros)
				continue;
			temp=racunajpr(s[i]);
			if(temp>max_pros) {
				max_pros=temp;
				maxpros1=i;
			}
			else if((fabs(temp-max_pros))<EPS) {
				if(uporedi(s[maxpros1].prezime,s[i].prezime)==1) {
					maxpros1=i;
					max_pros=temp;
				}
				else if(uporedi(s[maxpros1].prezime,s[i].prezime)==0) {
					if(uporedi(s[maxpros1].ime,s[i].ime)==1) {
						maxpros1=i;
						max_pros=temp;
					}
				}
			}
		}
	}
	printf(""%s %s\n"", s[maxpros1].prezime, s[maxpros1].ime);
	/*Sada slijedi potraga za treci prosjek po redu*/
	max_pros=0;
	maxpros2=-1;
	for(i=0; i<velicina; i++) {
		if(i==maxpros || i==maxpros1)
			continue;
		else {
			maxpros2=i;
			break;
		}
	}
	if(maxpros2==-1)
		return velicina;
	else {
		temp=racunajpr(s[maxpros2]);
		max_pros=temp;
		for(i=0; i<velicina; i++) {
			if(i==maxpros || i==maxpros1)
				continue;
			temp=racunajpr(s[i]);
			if(temp>max_pros) {
				max_pros=temp;
				maxpros2=i;
			}
			else if((fabs(temp-max_pros))<EPS) {
				if(uporedi(s[maxpros2].prezime,s[i].prezime)==1) {
				maxpros2=i;
				max_pros=temp;
				}
				else if(uporedi(s[maxpros2].prezime,s[i].prezime)==0) {
					if(uporedi(s[maxpros2].ime,s[i].ime)==1) {
						maxpros2=i;
						max_pros=temp;
					}
				}
			}
		}
	}
	printf(""%s %s\n"", s[maxpros2].prezime, s[maxpros2].ime);
	return velicina;
}
int main() {
	struct Student studenti[3] = {
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8}, 29}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8}, 29}, 
};

genijalci(studenti, 3, 7.0);
printf(""%f %s %s"",racunajpr(studenti[0]), studenti[0].ime, studenti[0].prezime);
return 0;
}","#include <stdio.h>

int strcmp(char* s1, char* s2)
{
	while (*s1 != '\0' && *s2 != '\0') {
		if (*s1 < *s2) return -1;
		if (*s1 > *s2) return 1;
		s1++;
		s2++;
	}

	if(*s1=='\0'&&*s2=='\0') return 0;
	if (*s1 != '\0') return 1;
	if (*s2 != '\0') return -1;


	return 0;

}

struct Student {

	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

/*funkcija koja računa prosjek jednog studenta*/
double prosjek (struct Student st)
{

	int i;
	double sum=0;

	if(st.br_ocjena==0) {
		return 5;
	}

	for(i=0; i<st.br_ocjena; i++) {

		if(st.ocjene[i]==5) {
			return 5;
		}

		sum=sum+st.ocjene[i];
	}
	return sum/st.br_ocjena;
}

int genijalci (struct Student studenti[], int vel, float prosjek1)
{

	int i,j;
	int max1=0,max2=0,max3=0;

	/*izbacivanje studenata koji ne ispunjavaju uslov*/
	for(i=0; i<vel; i++) {

		if(prosjek(studenti[i])<prosjek1) {
			for(j=i; j<vel-1; j++) {
				studenti[j]=studenti[j+1];
			}

			vel--;
			i--;
		}
	}
	
	/*traženje studenta sa najvećim prosjekom*/
	for(i=0; i<vel; i++) {

		if(prosjek(studenti[i])>prosjek(studenti[max1])) {
			max1=i;
		} else if(prosjek(studenti[i])==prosjek(studenti[max1])) {
			if(strcmp(studenti[i].prezime,studenti[max1].prezime)<0) {
				max1=i;
			}
		} else if(strcmp(studenti[i].prezime,studenti[max1].prezime)==0) {
			if(strcmp(studenti[i].ime,studenti[max1].ime)<0) {
				max1=i;
			}
		}
	}

	if(max1==0) {
		max2++;
	}
	
	/*traženje drugog studenta sa najvećim prosjekom*/
	if(vel>=2) {
		for(i=0; i<vel; i++) {

			if(max2>vel)
				break;

			if(i==max1) {
				continue;
			}

			if(prosjek(studenti[i])>prosjek(studenti[max2])) {
				max2=i;
			} else if(prosjek(studenti[i])==prosjek(studenti[max2])) {
				if(strcmp(studenti[i].prezime,studenti[max2].prezime)<0) {
					max2=i;
				}
			} else if(strcmp(studenti[i].prezime,studenti[max2].prezime)==0) {
				if(strcmp(studenti[i].ime,studenti[max2].ime)<0) {
					max2=i;
				}
			}
		}
		
		/*traženje trećeg studenta sa najvećim prosjekom*/
		if (vel>=3) {
			if(max1==0||max2==0) {
				max3++;
				if(max1==1||max2==1) {
					max3++;
				}
			}

			for(i=0; i<vel; i++) {
				if(max3>vel)
					break;

				if(i==max1||i==max2) {
					continue;
				}


				if(prosjek(studenti[i])>prosjek(studenti[max3])) {
					max3=i;
				} else if(prosjek(studenti[i])==prosjek(studenti[max3])) {
					if(strcmp(studenti[i].prezime,studenti[max3].prezime)<0) {
						max3=i;
					}
				} else if(strcmp(studenti[i].prezime,studenti[max3].prezime)==0) {
					if(strcmp(studenti[i].ime,studenti[max3].ime)<0) {
						max3=i;
					}
				}
			}

		}
	}
	/*ispis studenata*/
	if(prosjek(studenti[max1])>=prosjek1) printf(""%s %s\n"", studenti[max1].prezime, studenti[max1].ime);
	if(prosjek(studenti[max2])>=prosjek1 && max2!=max1 && max2<=vel) printf(""%s %s\n"", studenti[max2].prezime, studenti[max2].ime);
	if(prosjek(studenti[max3])>=prosjek1 && max3!=max2 && max3!=max1 && max3<=vel) printf(""%s %s\n"", studenti[max3].prezime, studenti[max3].ime);



	return vel;
}


int main()
{

	struct Student studenti[6] = {
		{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5},
		{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5},
		{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5},
		{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
		{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5},
		{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5},
	};

	printf(""%d"", strcmp(studenti[1].ime, studenti[0].ime));

	return 0;

}
"
1086,98,98,0,36,A2016/Z2/Z3/student4082,A2016/Z2/Z3/student7597,"#include <stdio.h>

int main() {
	char mat[20][20];
	int i,j,x,y;
	int n;
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			mat[i][j]=' ';
		}
	}
	while(1){
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &n);
	if(n>10 || n<=0){
		printf(""Pogresan unos\n"");
	}
	else break;
	}
	for(i=0; i<n; i++){
		printf(""Unesite %d. tacku: "", i+1);
		scanf(""%d %d"", &x, &y);
		if(x>19 || y>19 || y<0 || x<0){
			printf(""Pogresan unos\n"");
			i--;
		}
		else{
			mat[y][x]='*';
		}
	}
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			printf(""%c"", mat[i][j]);
			
		}
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main() {
	char mat[20][20];
	int i,j,x,y;
	int n;
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			mat[i][j]=' ';
		}
	}
	while(1){
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &n);
	if(n>10 || n<=0){
		printf(""Pogresan unos\n"");
	}
	else break;
	}
	for(i=0; i<n; i++){
		printf(""Unesite %d. tacku: "", i+1);
		scanf(""%d %d"", &x, &y);
		if(x>19 || y>19 || y<0 || x<0){
			printf(""Pogresan unos\n"");
			i--;
		}
		else{
			mat[y][x]='*';
		}
	}
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			printf(""%c"", mat[i][j]);
			
		}
		printf(""\n"");
	}
	return 0;
}
"
1087,99,99,0,31,A2016/Z2/Z4/student7507,A2016/Z2/Z4/student5162,"#include <stdio.h>

int main() {
	int i,j;
	int M=0,N=0;
	int teplicova=1,cirkularna=1;
	float mat[100][100];

	while(1){
		printf(""Unesite M i N: "");
		scanf(""%d %d"",&M,&N);
		if(M>100 || N>100 || M<=0 || N<=0){ printf(""Pogresan unos!\n""); continue;}
		if(M<=100 && M>0 && N<=100 && N>0) break;
	}
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			scanf(""%f"",&mat[i][j]);
		}
	}
	for(i=1;i<M-1;i++){
		for(j=1;j<N-1;j++){
			if(mat[i][j]!=mat[i+1][j+1]){
				teplicova=0;
			}
			if(mat[i][N-1]!=mat[i][0]){ cirkularna=0; }
			else teplicova=1;
		}
	}
	if(cirkularna==1 &&( teplicova==1|| teplicova==0)) printf(""Matrica je cirkularna\n"");
	else if(teplicova==1 && cirkularna==0) printf(""Matrica je Teplicova\n"");
	else if(teplicova==0 && cirkularna==0) printf(""Matrica nije ni cirkularna ni Teplicova\n"");
	return 0;
}
","#include <stdio.h>

int main() {
	int i,j;
	int M=0,N=0;
	int teplicova=1,cirkularna=1;
	float mat[100][100];

	while(1){
		printf(""Unesite M i N: "");
		scanf(""%d %d"",&M,&N);
		if(M>100 || N>100 || M<=0 || N<=0){ printf(""Pogresan unos!\n""); continue;}
		if(M<=100 && M>0 && N<=100 && N>0) break;
	}
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			scanf(""%f"",&mat[i][j]);
		}
	}
	for(i=1;i<M-1;i++){
		for(j=1;j<N-1;j++){
			if(mat[i][j]!=mat[i+1][j+1]){
				teplicova=0;
			}
			if(mat[i][N-1]!=mat[i][0]){ cirkularna=0; }
			else teplicova=1;
		}
	}
	if(cirkularna==1 &&( teplicova==1|| teplicova==0)) printf(""Matrica je cirkularna\n"");
	else if(teplicova==1 && cirkularna==0) printf(""Matrica je Teplicova\n"");
	else if(teplicova==0 && cirkularna==0) printf(""Matrica nije ni cirkularna ni Teplicova\n"");
	return 0;
}
"
1092,80,80,0,23,A2016/Z2/Z1/student5573,A2016/Z2/Z1/student7496,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int main()
{
    int n,i=0,a,b,c,d=0,e=0;
    printf(""Unesite broj: "");
    scanf(""%d"", &n);
    if(n<0)
    {
    	n=abs(n);
    }
    if(n>0 && n<10)
    {
    	e=0;
    	printf(""%d"",e);
    	return 0;
    }
    while(n>9){
            a=n%10;
            n=n/10;
            c=n%10;
            d=abs((a-c))*pow(10,i);
            e=e+d;
        i++;
    }
    printf(""%d"",e);
    return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>

int main() {
	int n,br=0,broj=0,broj1,broj2,i=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	if(n<0){
		n=abs(n);
	}
	if(n>=0 && n<10){
		broj=0;
		printf(""%d"",broj);
    	return 0;

	}
	 while (n>9){
		broj1 = n % 10;
		n=n/10;
		broj2=n% 10;
		br=abs((broj1-broj2))* pow(10,i);
		broj=broj+br;
		i++;
	}
	printf(""%d"", broj);
	return 0;
}
"
1098,28,28,0,35,A2016/Z5/Z1/student6613,A2016/Z5/Z1/student5659,"#include <stdio.h>
struct Student{
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};
void unesi(char niz[], int vel){
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<=vel-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
struct Student unesi_osobu(){
	struct Student s;
	int i=0;
	unesi(s.ime,20);
	unesi(s.prezime,20);
	scanf(""%d"",&s.br_ocjena);
	for(i=0; i<s.br_ocjena; i++){
		scanf(""%d"", &s.ocjene[i]);
	}
	return s;
}
double fprosjek(struct Student s){
	double suma=0, brocjena,prosjek2;
	int j,r;
		
		brocjena=s.br_ocjena;
		if(brocjena==0) r=-1;
		else r=0;
		for(j=r; j<brocjena; j++){
			
			if(s.ocjene[j]==5 || j==-1){
				suma=5;
				brocjena=1;
				j=brocjena-1;
			} else{
				suma=suma+s.ocjene[j];
			}
			if(j==brocjena-1){
				prosjek2=(double)suma/brocjena;
			}
		}
		return prosjek2;
}
int poredjenje(struct Student o1, struct Student o2){
	int i=0,t=2;
	do{
		if(o1.prezime[i]<o2.prezime[i]) return -1;
		if(o2.prezime[i]<o1.prezime[i]) return 1;
		i++;
		if(o1.prezime[i]=='\0' && o2.prezime[i]!='\0') return -1;
		if(o1.prezime[i]!='\0' && o2.prezime[i]=='\0') return 1;
		if(o1.prezime[i]=='\0' && o2.prezime[i]=='\0') t=0;
	}while(o1.prezime[i]!='\0' && o2.prezime[i]!='\0');
	if(t==0){
		i=0;
		do{
			if(o1.ime[i]<o2.ime[i]) return -1;
			if(o2.ime[i]<o1.ime[i]) return 1;
			i++;
			if(o1.ime[i]=='\0' && o2.ime[i]!='\0') return -1;
			if(o1.ime[i]!='\0' && o2.ime[i]=='\0') return 1;
			if(o1.ime[i]=='\0' && o2.ime[i]=='\0') t=0;
		}while(o1.ime[i]!='\0' && o2.ime[i]!='\0');
	}
	if(t==0) return 0;
	
	return 0;
}
int genijalci(struct Student niz[], int n, double prosjek){
	int i, j, k, s, brocjena,r,t=0,br=0,brojac=0,m,z=-1,h,u=0,rporedjenja, istimaxi=0,isti=0, kolikoistih=0;;
	int maxi=-1,drugi,treci,maxi2;
	double prosjek2=0;
	double max1=prosjek,max2=prosjek,max3=prosjek, prosjeci;
	for(i=0; i<n; i++){
		s=0;
		brocjena=niz[i].br_ocjena;
		if(brocjena==0) r=-1;
		else r=0;
		for(j=r; j<brocjena; j++){
			
			if(niz[i].ocjene[j]==5 || j==-1){
				s=5;
				brocjena=1;
				j=brocjena-1;
			} else{
				s=s+niz[i].ocjene[j];
			}
			if(j==brocjena-1){
				prosjek2=(double)s/brocjena;
				if(prosjek2<prosjek){
					for(k=i; k<n-1; k++){
						niz[k]=niz[k+1];
					}
					n--;
					i--;
					continue;
				}
				else if(prosjek2>max1) max1=prosjek2;
				else if(prosjek2==prosjek) u=1;
				
			}
		}
	}
	if(u==0 && max1==prosjek) return n;
/*prvi maximum!!!*/
	for(i=0; i<n; i++){
		
		prosjek2=fprosjek(niz[i]);
		if(prosjek2==max1) br++;
		}
	if(br==2 || br==1){
	for(i=0; i<n; i++){
		prosjek2=fprosjek(niz[i]);
		if(prosjek2==max1){
		brojac++;
		if(brojac==1){
			if(br==1){
				printf(""%s %s\n"", niz[i].prezime, niz[i].ime);
			}
			else{
				maxi=i;
				i++;
				continue;
			}
		}
		else if(brojac==2){
			if(br==2){
				h=poredjenje(niz[maxi], niz[i]);
				if(h==-1){
					printf(""%s %s\n"", niz[maxi].prezime, niz[maxi].ime );
					printf(""%s %s\n"", niz[i].prezime, niz[i].ime);
					break;
				}
				else if(h==1){
					printf(""%s %s\n"", niz[i].prezime, niz[i].ime);
					printf(""%s %s\n"", niz[maxi].prezime, niz[maxi].ime );
					break;
				}
				else if(h==0){
					printf(""%s %s\n"", niz[i].prezime, niz[i].ime);
					printf(""%s %s\n"", niz[maxi].prezime, niz[maxi].ime );
					break;
				}
			}
		}
	}
	}
	}	
	else if(br>=3){
		for(i=0; i<n; i++){
			prosjek2=fprosjek(niz[i]);
			if(prosjek2==max1){
				for(j=i+1; j<n; j++){
					prosjeci=fprosjek(niz[j]);
					if(prosjeci==max1){
						rporedjenja=poredjenje(niz[i], niz[j]);
						if(rporedjenja==-1)
							maxi=i;
						else if(rporedjenja==1) 
							maxi=j;
						else if(rporedjenja==0){
							maxi=i;
							istimaxi=i;
						}
					}
				}
			}
		}
		for(i=0; i<n; i++){
			prosjek2=fprosjek(niz[i]);
			if(prosjek2==max1){
				isti=poredjenje(niz[i], niz[maxi]);
				if(isti==0) kolikoistih++;
				else continue;
			}
		}
		if(istimaxi==maxi && kolikoistih>=3){
			printf(""%s %s\n"", niz[maxi].prezime, niz[maxi].ime);
			printf(""%s %s\n"", niz[maxi].prezime, niz[maxi].ime);
			printf(""%s %s\n"", niz[maxi].prezime, niz[maxi].ime);
		}
		else if(istimaxi==maxi && kolikoistih==2){
			printf(""%s %s\n"", niz[maxi].prezime, niz[maxi].ime);
			printf(""%s %s\n"", niz[maxi].prezime, niz[maxi].ime);
		}
		else printf(""%s %s\n"", niz[maxi].prezime, niz[maxi].ime);
	}
	
	return n;
}
int main() {
	struct Student niz[100];
	int i,n,j;
	double prosjek;
	scanf(""%d"", &n);
	for(i=0; i<n; i++){
		niz[i]=unesi_osobu();
		
	}
	scanf(""%lf"", &prosjek);
	n=genijalci(niz,n,prosjek);
	for(j=0;j<n; j++){
		printf(""\n%s %s"", niz[j].ime, niz[j].prezime);
	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Student {
char ime[20], prezime[20];
int ocjene[50];
	int br_ocjena;
};

void unesi(char niz[], int velicina) {
		char znak=getchar();
		if(znak='\n') znak=getchar();
		int i=0;
		while(i<velicina-1 && znak!='\n') {
			niz[i]=znak;
			i++;
			znak=getchar();
		}
			niz[i]='\0';
	}
struct Student unesi_studenta() {
		struct Student s;
		int i;
		unesi(s.ime,20);
		unesi(s.prezime,20);
		scanf(""%d"",&s.br_ocjena);
		for(i=0;i<s.br_ocjena;i++){
				scanf(""%d"",&s.ocjene[i]);
		}
		return s;
}
	double prosjek(struct Student st[],int i){
		int j,br=0;
		double p,s=0;
			for(j=0;j<st[i].br_ocjena;j++){
				s+=st[i].ocjene[j];
				br++;
				if(st[i].ocjene[j]==5) { s=5; br=1; break;}
			}
			p=s/br;
			return p;
	}
		int genijalci(struct Student st[100],int vel,double prosjek1) {
		int i,j,m,v;
		v=vel;
		for(i=0;i<v;i++){
		
			if(prosjek(st,i)<prosjek1) {
					for(j=i;j<v;j++){
						st[j]=st[j+1];
					}
				v--;
				i--;
			}
			
		}
		return v;
	}
	void ispisi_3(struct Student st[],int v,double prosjek1){
		int i,j,max,vel;
		double p;
		p=prosjek1;
		vel=v;
		struct Student tmp;
		for (i=0; i<v; i++) {
        max = i;
        for (j=i+1; j<v; j++)
            if (prosjek(st,j) > prosjek(st,max)) 
                max = j;

        tmp = st[i];
        st[i] = st[max];
        st[max] = tmp;
    }
    v=genijalci(st,vel,p);
    if(v==1)
    printf(""%s %s\n"",st[0].prezime,st[0].ime);
    else if(v==2){
    	printf(""%s %s\n"",st[0].prezime,st[0].ime);
    	printf(""%s %s\n"",st[1].prezime,st[1].ime);
    }
    else if(v>=3) {
    	printf(""%s %s\n"",st[0].prezime,st[0].ime);
    	printf(""%s %s\n"",st[1].prezime,st[1].ime);
    	printf(""%s %s\n"",st[2].prezime,st[2].ime);
    }
	}


	
int main() {
	struct Student st[100];
	int i,j,q,vel;
	double prosjek1;
	scanf(""%d"",&q);
	for(i=0;i<q;i++){
		st[i]=unesi_studenta();
	}
	scanf(""%lf"",&prosjek1);
	
	ispisi_3(st,q,prosjek1);

	return 0;
}
"
1102,73,73,0,45,A2016/Z2/Z4/student6824,A2016/Z2/Z4/student9160,"#include <stdio.h>
/*eh idemo*/
int main() 
{
    int M,N,i,j,teplicova=1,cirkularna=1;
    double selma[100][100];
    double suma[100]={0};
    do
    {
        printf(""Unesite M i N: "");
        scanf(""%d %d"",&M,&N);
        if(M<1 || M>100 ||N<1 || N>100)
        {
            printf(""Pogresan unos!\n"");
        }
    }
    while(M<1||M>100 || N<1 || N>100);
    
    printf(""Unesite elemente matrice: "");
    for(i=0;i<M;i++)
    {
        for(j=0;j<N;j++)
        {
            scanf(""%lf"",&selma[i][j]);
        }
    }
    
    for(i=0;i<M-1;i++)
    {
        for(j=0;j<N-1;j++)
        {
            if(selma[i][j]!=selma[i+1][j+1])
            {
           
                teplicova=0;
            }
            
            
    }
    }
     if(teplicova==1)
     {
    for(i=0;i<M;i++)
    {
        for(j=0;j<N;j++)
        {
            suma[i]=suma[i]+selma[i][j];
        }
        for(i=0;i<M-1;i++)
        {
            if(suma[i]!=suma[i+1])
            {
              
                cirkularna=0;
            }
            
        }
    }
     }
     else
     {
         cirkularna=0;
     }
    
    if(teplicova==1 && cirkularna==0)
    {
        printf(""Matrica je Teplicova\n"");
    }
    else if(teplicova==1 && cirkularna==1)
    {
        printf(""Matrica je cirkularna"");
    }
    else if(teplicova==0 && cirkularna==0)
    {
        printf(""Matrica nije ni cirkularna ni Teplicova"");
    }
	
	
	
	
	
	
	
	return 0;
	
	
}
","#include <stdio.h>

int main() {
	int M,N,i,j,teplicova=1,cirkularna=1;
	double mat[100][100];
	double suma[100]={0};
	/*format matrice*/
	do{
		printf(""Unesite M i N: "");
		scanf(""%d"",&M);
		scanf(""%d"",&N);
		if(M<1 || N<1 || M>100 || N>100)printf(""Pogresan unos!\n"");
	}while(M<1 || N<1 || M>100 || N>100);
	/*unos elemenaa matrice*/
	printf(""Unesite elemente matrice: "");
	for(i=0; i<M;i++){for(j=0;j<N;j++){scanf(""%lf"", &mat[i][j]);}}
	/*provjera vrste matrice matrice*/
	/*teplicova*/
	for(i=0; i<M-1;i++){for(j=0;j<N-1;j++){
	if(mat[i][j]!=mat[i+1][j+1])teplicova=0;}}
	/*cirkularna*/
	if(teplicova){for(i=0;i<M-1;i++){for(j=0;j<N-1;j++)suma[i]+=mat[i][j];}
	for(i=0;i<M-1;i++){if(suma[i]!=suma[i+1])cirkularna=0;}}
	
	if(cirkularna==1 && teplicova==1)printf(""Matrica je cirkularna"");
	else if(teplicova==1 && cirkularna==0)printf(""Matrica je Teplicova"");
	else printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}"
1107,69,69,0,36,A2016/Z2/Z3/student1845,A2016/Z2/Z3/student2547,"#include <stdio.h>

int main() {
	int i, j, n, x [10], y [10], k;
	char niz [20][20];
	
	for(i=0; i<20; i++) {
	for(j=0; j<20; j++) {
			
		 niz[i][j]=' ';
			
		}
		
	}
	
	do{
		
	printf(""\nUnesite broj tacaka: "");
	scanf(""%d"", &n);
    if(n>10 || n<=0) printf(""Pogresan unos"");
    
	}while(n>10 || n<=0);
    
    
    for(k=0; k<n; k++){
    	
        printf(""Unesite %d. tacku: "", k+1);
        scanf(""%d %d"",&x[k], &y[k] );
        
        if(x[k] < 0 || x[k] > 19 || y[k] < 0 || y[k] > 19){
        	printf(""Pogresan unos\n"");
        	k--;
        }
    }
	
	for(k=0; k<n; k++) {
	for(i=0; i<20; i++) {
		for(j=0; j<20; j++) {
			if(i==y[k] && j==x[k]){
			niz[i][j]='*';	
	     		} 
     		}
		}

	}
	
		for(i=0; i<20; i++) {
		for(j=0; j<20; j++) {
		printf(""%c"", niz[i][j]);
		  	}
		printf(""\n"");
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	int i,j,n=0,x[10]={0},y[10]={0},k;
	char praznamjesta[20][20];
	ponovi1:
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&n);
	if(n>10 || n<=0)
	{
		printf(""Pogresan unos\n"");
		goto ponovi1;
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			praznamjesta[i][j]=' ';
		}
	}
	for(i=0;i<n;i++)
	{
		ponovi2:
		printf(""Unesite %d. tacku: "",i+1);
		scanf(""%d %d"",&x[i],&y[i]);
		if((x[i]>=20 || x[i]<0) || (y[i]>=20 || y[i]<0))
		{
			printf(""Pogresan unos\n"");
			goto ponovi2;
		}
	}
	for(k=0;k<n;k++)
	{
		for(i=0;i<20;i++)
		{
			for(j=0;j<20;j++)
			{
				if(i==y[k] && j==x[k])
				{
					praznamjesta[i][j]='*';
				}
				
			}
		}
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			printf(""%c"",praznamjesta[i][j]);
		}
		printf(""\n"");
	}
	return 0;
}
"
1108,97,97,0,24,A2016/Z2/Z1/student5904,A2016/Z2/Z1/student7774,"#include <stdio.h>
#include <stdlib.h>

int main() {
	
	int broj, cifra, prethodna_cifra, znamenka, rezultat=0, a=1;
	
	printf(""Unesite broj: "");
	scanf(""%d"", &broj);
	
	broj = abs(broj);
	
	while (broj>10) {
		cifra = broj%10;
		broj /= 10;
		prethodna_cifra = broj%10;
		
		znamenka = abs(cifra-prethodna_cifra);
		
		rezultat = rezultat + a*znamenka;
		
		a*=10;
	}
	
	printf(""%d"", rezultat);
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

int main() {
	
	int broj, cifra, prethodna_cifra, znamenka, rezultat=0, a=1;
	
	printf(""Unesite broj: "");
	scanf(""%d"", &broj);
	
	broj = abs(broj);
	
	while (broj>10) {
		cifra = broj%10;
		broj /= 10;
		prethodna_cifra = broj%10;
		
		znamenka = abs(cifra-prethodna_cifra);
		
		rezultat = rezultat + a*znamenka;
		
		a*=10;
	}
	
	printf(""%d"", rezultat);
	
	return 0;
}
"
1115,96,96,0,20,A2016/Z2/Z2/student9175,A2016/Z2/Z2/student2086,"#include <stdio.h>
#define PI 3.1415926
int main() {
	int a,i,s,m,sec;
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&a);
	double niz[500];
	
	for(i=0;i<a;i++){
		scanf(""%lf"",&niz[i]);
	}
	printf(""Uglovi su:\n"");
	for(i=0;i<a;i++){
		niz[i]=niz[i]*180/PI;
		s=(int)(niz[i]);
		niz[i]=((niz[i]-(int)(niz[i]))*60);
		m=(int)(niz[i]+0.5);
		niz[i]=((niz[i]-(int)(niz[i]))*60);
		sec=(int)(niz[i]+0.5);
		
		if(sec>30)continue;
		printf(""%d stepeni %d minuta %d sekundi\n"",s,m,sec);
	}
	
	
	
	
	return 0;}
","#include <stdio.h>
#define PI 3.1415926
int main() {
	int a,i,s,m,sec;
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&a);
	double niz[500];
	
	for(i=0;i<a;i++){
		scanf(""%lf"",&niz[i]);
	}
	printf(""Uglovi su:\n"");
	for(i=0;i<a;i++){
		niz[i]=niz[i]*180/PI;
		s=(int)(niz[i]);
		niz[i]=((niz[i]-(int)(niz[i]))*60);
		m=(int)(niz[i]+0.5);
		niz[i]=((niz[i]-(int)(niz[i]))*60);
		sec=(int)(niz[i]+0.5);
		
		if(sec>30)continue;
		printf(""%d stepeni %d minuta %d sekundi\n"",s,m,sec);
	}
	
	
	
	
	return 0;}
"
1122,89,89,0,65,A2016/Z3/Z1/student4108,A2016/Z3/Z1/student2086,"#include <stdio.h>

    int daj_prost (){
        int i, prost=1;
        static int a=1;
       
        
        while(1){ 
            a++;
           
            if(a==2) {
            return a;
            }else {
            for (i=2; i<a; i++){
                if (a%i==0){ 
                    prost=0;
                    break;}
            }
        }
        if(prost){return a;}
        else{
            prost=1;
        }
        
    }

}




int main() {
	
	int a,b,c=0,suma=0;
	
	do{
	
	printf(""Unesite brojeve A i B: "");
	scanf(""%d %d"", &a, &b);
	
	if( a < 1  ){ 
	    printf(""A nije prirodan broj.\n"");
	}
	else if( b <= a ){
	    printf(""A nije manje od B.\n"");
	}

	 
	}while(a<1 || a>=b);
	
	
	
    while(c<b){

	c=daj_prost();
	if(c>a && c<b){
        suma+=c;
    }
	
}

	printf(""Suma prostih brojeva izmedju %d i %d je %d."", a,b,suma);
	
	
	
	
	
	
	
	
	
	return 0;
}
","#include<stdio.h>
int daj_prost () {
	int prost=1, n;
	static int br=1;
	while (1) {
		br++;
		if (br==2){
			return br;
		} else {
			for (n=2;n<br;n++) {
				if (br%n==0){
					prost=0;
					break;
				}
			}
			if (prost) {
				return br;
			} else {
				prost=1;
			}
		}
	}
}

int main () {
	int X,Y,zbir=0,br=0;
	
	/*UNOS INTERVALA*/
	do {
		printf (""Unesite brojeve A i B: "");
		scanf (""%d%d"", &X, &Y);
		if (X<1) {
			printf (""A nije prirodan broj.\n"");
		} else if (X>=Y) {
			printf (""A nije manje od B.\n"");
		}
	} while (X<1 || X>=Y || Y<=0);
	while (br<Y) {
		br=daj_prost ();
		if (br>X && br<Y) {
			zbir+=br;
		}
	}
	
	/*ISPPIS SUME*/
	printf (""Suma prostih brojeva izmedju %d i %d je %d."", X, Y, zbir);
	return 0;
}"
1140,72,72,0,35,A2016/Z1/Z4/student6776,A2016/Z1/Z4/student4824,"#include <stdio.h>

int main() {
    int n,i,j,k,l,s;
    unos:
    	printf(""Unesite broj n: "");
    	scanf(""%d"",&n);
    	if(n<1 || n>50){
        printf(""Pogresan unos \n"");
    goto unos;
    }
    for(i=0; i<n; i++){
        for(j=0; j<n; j++){
            if(n==1)
            	printf(""**"");
            if(i==j)
            	printf(""*"");
            else 
            	printf("" "");
        }
        for(k=0; k<n-1; k++){
            if(i+k==n-2)
            	printf(""*"");
            else 
            	printf("" "");
        }
        for(l=0; l<n-1; l++){
            if(i==l+1)
            	printf(""*"");
            else
            	printf("" "");
        }
        for(s=0; s<=n; s++){
            if(i+s==n-2)
            	printf(""*"");
            else
            	printf("" "");
        }
        printf(""\n"");
    }
	return 0;
}","#include <stdio.h>

int main() {
	int n;
	unos:
	printf(""\nUnesite broj n: "");
	scanf(""%d"",&n);
	if((n<1)||(n>50))
	{ 
		printf(""Pogresan unos"");
		goto unos;
	}
	int i,j,k,z,q;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if(n==1)
			printf(""**"");
			if(i==j)
			printf(""*"");
			else 
			printf("" "");
			
		}
		for(k=0;k<n-1;k++)
		{
			if(i+k==n-2)
			printf(""*"");
			else
			printf("" "");
			
		}
		for(z=0;z<n-1;z++)
		{
			if(i==z+1)
			printf(""*"");
			else printf("" "");
			
		}
		for(q=0;q<=n;q++)
		{
			if(i+q==n-2)
			printf(""*"");
			else printf("" "");
			
		}
		printf(""\n"");
		
    }
	return 0;
}
"
1153,33,33,0,55,A2016/Z4/Z4/student3116,A2016/Z4/Z4/student9188,"#include <stdio.h>

void DajBroj(char *pt,char *kt,float *x,float *y)
{
	
	char *p=pt;
	int neg;
	float a,b;
	
	*x=0;*y=0;
	
		while(p!=kt)
		{
			p++;neg=0;
			
			if(*p=='-'){neg=1;p++;}
		
			*x=0;
			while(*p>='0' && *p<='9')
			{
				*x=*x*10+(*p-'0');
				p++;
			}
			if(*p=='.')
			{
				p++;a=0;
				while(*p>='0' && *p<='9')
				{
					a=a*10+(*p-'0');
					p++;
				}
				while(a>=1)
				 a/=10;
				*x=*x+a;
			}
			if(neg==1) *x*=-1;
			if(*p==',')p++;
			neg=0;
			if(*p=='-'){neg=1;p++;}
			*y=0;
			while(*p>='0' && *p<='9')
			{
				*y=*y*10+(*p-'0');
				p++;
			}
			if(*p=='.')
			{
				p++;b=0;
				while(*p>='0' && *p<='9')
				{
					b=b*10+(*p-'0');
					p++;
				}
				while(b>=1)
				 b/=10;
				*y=*y+b;
			}
			if(neg==1) *y*=-1;
			
		}
		
	
}


char* obuhvat(char *s,float x1,float y1,float x2,float y2)
{
	char* p=s;
	char *pt,*kt,*izb;
	float x,y;

		while(*p!='\0')
		{ 
			
			if(*p=='(')
			{
				pt=p;
				while(*p!=')')p++;
				kt=p;
			
			DajBroj(pt,kt,&x,&y);
			
		
			if(x<x1 || x>x2 || y<y1 || y>y2)
			{   
				p++;
				while(*p==',')p++;
				izb=p;
				
				while(*izb!='\0')
				{
					*pt++=*izb++;
				}
				*pt='\0';
				p=p-(izb-pt);
			}
			
		
			}else p++;
				
		}
		
	    if(p!=s) p--;
		if(*p==',') *p='\0';
	
	return s;	
}




int main() {
	
	char s[] = ""(0,-3.1),(-15.09,4),(2.,2),(-1.1,217)"";
	char* rez = obuhvat(s, -3, -3, 3, 3);
	printf(""%s %s\n"", rez, s);
	return 0;
}
","#include <stdio.h>
#include <string.h>


char* obuhvat(char* s,float x1,float y1,float x2,float y2)
{
	char *p=s;
	int neg=0;
	char *pt,*kt;
	float x,y;
	float a,b;
    char *pom=p;
	
	
		if(*pom=='\0') return 0;
		
	    
	        while(*pom!='\0')
	        {    
	    	
	    		if(*pom!='(') return 0;
	    		else pom++;
	    		
	    		if(*pom==',') return 0;
				 
				 while(*pom!=',') 
				 {  
				 	if((*pom<'0' || *pom>'9') && (*pom!='.' && *pom!='-')){ return 0;}
				 	if(*pom=='.' && *(pom-1)=='(') return 0;
				    pom++;
				 }
				 
			   	if(*pom!=',') return 0;
			   	else pom++;
			   	
			   	if(*pom==')') return 0;
			   	
			   	while(*pom!=')')
			   	{
			   		if((*pom<'0' || *pom>'9') && (*pom!='.' && *pom!='-')){return 0;}
				   	if(*pom=='.' && *(pom-1)==',') return 0;
				    pom++;					
			   	}
			   	
			 	if(*pom!=')'){return 0;}
				else pom++;
				
			 	if(*pom!='\0') pom++;
			
				if(*pom=='\0' && *(pom-1)!=')') return 0;
					
	    }
	
	  
		while(*p!='\0')
		{  
			if(*p=='(')
			{	
				
				pt=p;
				p++;
					
			neg=0;
			
			if(*p=='-')
				{neg=1;p++;}	
			
			x=0;
			while(*p>='0' && *p<='9')
			{   
				
				x=x*10+(*p-'0');
				p++;
			}
			
			  
			if(*p=='.')
			{
				p++;a=0;
				while(*p>='0' && *p<='9')
			    { 
					a=a*10+(*p-'0');
					p++;
			    }
			    while(a>=1)
			     	a/=10;
			    
			    x=x+a;
			}
			
			if(neg==1) x*=-1;
			
			if(*p==',') p++;
			neg=0;
			if(*p=='-')
				{neg=1;p++;}	
			
			y=0;
			while(*p>='0' && *p<='9')
			{
				y=y*10+(*p-'0');
				p++;
			}
			
			if(*p=='.')
			{
				p++;b=0;
				while(*p>='0' && *p<='9')
			    { 
				b=b*10+(*p-'0');
				p++;
			    }
			    while(b>=1)
			     	b=b/10;
			    y=y+b;
			}
			
			if(neg==1) y*=-1;
		
		
			if(x<x1 || x>x2 || y<y1 || y>y2)
			{  
			   p++;
			   if(*p==',') p++;
			   
			   kt=p;
			  
				while(*kt!='\0')
				{  
					*pt++=*kt++;
				}
			    *pt='\0';
				p=p-(kt-pt);
				
			} 
		}else 
			p++;
	
		}
		if(p!=s) p--;
		if(*p==',') *p='\0';
	
	
   return s;
}


int main() {
char s[] = ""(-15,-30)"";
char pom[100];

strcpy(pom,s);
obuhvat(pom, -15, -30, -14, -29);
printf(""'%s' "", pom);

strcpy(pom,s);
obuhvat(pom, -30, -30, -15, -15);
printf(""'%s' "", pom);

strcpy(pom,s);
obuhvat(pom, -32, -31, -16, -15);
printf(""'%s' "", pom);

strcpy(pom,s);
obuhvat(pom, -15, -30, -15, -30);
printf(""'%s' "", pom);

strcpy(pom,s);
obuhvat(pom, 14, 29, 16, 31);
printf(""'%s' "", pom);

return 0;
}
"
1154,97,97,0,24,A2016/Z1/Z2/student1571,A2016/Z1/Z2/student4290,"#include <stdio.h>
#include <math.h>
#define EPS 0.000000001

int main() {
	float a1,a2,b1,b2,koordinata_x,koordinata_y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	
	if ((fabs(a1-a2)<EPS) && (fabs(b1-b2)<EPS))
	{
		printf(""Poklapaju se"");
		return 0;
	}
	else if ((fabs(a1-a2)<EPS))
	{
		printf(""Paralelne su"");
		return 0;
	}
	else
	{
		koordinata_x=(b2-b1)/(a1-a2);
		koordinata_y=a1*koordinata_x+b1;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"",koordinata_x,koordinata_y);
	}

	return 0;
}
","#include <stdio.h>
#include <math.h>
#define EPS 0.0001
int main() {
	float a1,a2,b1,b2,x,y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	
	if((fabs(a1-a2)<EPS)&&(fabs(b1-b2)>EPS)){
		printf(""Paralelne su"");
		return 0;
	}
	else if((fabs(a1-a2)<EPS)&&(fabs(b1-b2)<EPS)){
		printf(""Poklapaju se"");
		return 0;
	}
	else{
		x=(b2-b1)/(a1-a2);
		y=(a1*x)+b1;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
		return 0;
	}
	
}
"
1160,37,37,0,26,A2016/Z3/Z2/student8152,A2016/Z3/Z2/student1176,"#include <stdio.h>

int suma_cifara(int n) {
	int sum=0;
	if(n<0) n*=(-1);
	while(n>0) {
		sum+=n%10;
		n/=10;
	}
	return sum;
}

int da_li_je_fibonacci(int n) {
	int prvi=1,drugi=1,treci=1;
	while(1==1) {
		if(drugi==n) return 1;
		if(drugi>n) return 0;
		treci=prvi+drugi;
		prvi=drugi;
		drugi=treci;
	}
}

void ubaci(int* niz, int velicina) {
	int i,pomocni[100];
	for(i=0;i<velicina;i++) {
		pomocni[i]=niz[i];
	}
	for(i=velicina-1;i>=0;i--) {
		niz[2*i]=pomocni[i];
		niz[2*i+1]=suma_cifara(pomocni[i]);
	}
}

int izbaci(int* niz, int velicina) {
	int i,j;
	for(i=0;i<velicina;i++) {
		if(da_li_je_fibonacci(niz[i])) {
			for(j=i;j<velicina-1;j++)
				niz[j]=niz[j+1];
			velicina--;
			i--;
		}
	}
	return velicina;
}

int main() {
	int niz[20],i,n;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++) {
		scanf(""%d"", &niz[i]);
	}
	ubaci(niz,10);
	n=izbaci(niz,20);
	if(n==0) printf(""Prazan niz."");
	printf(""Modificirani niz glasi: "");
	for(i=0;i<n-1;i++) {
		printf(""%d, "", niz[i]);
	}
	printf(""%d."", niz[n-1]);
	return 0;
}
","#include <stdio.h>  

int Fibonacci(int x){
	int a=1, b=1, c=1;
    while(c<=x){
    	if(c==x) return 1;
    	c=a+b;
    	a=c; 
    	b=c-b;
    }
	return 0;
}


void ubaci(int niz[], int vel){ 
	int niz1[20000], i, x, suma;
	i=0;
	for(i=0;i<vel;i++)
		niz1[i*2]=niz[i]; 
	for(i=0; i<vel*2; i++){  
		if(i%2==1){
			x=niz1[i-1]; 
			suma=0;
			while(x!=0){ 
				suma+=x%10;
				x/=10; 
			}
		if(suma<1) suma*=(-1);
		niz1[i]=suma; 
		}
	}
	for(i=0; i<vel*2; i++){ 
		niz[i]=niz1[i]; 
	}
}
int izbaci(int niz[], int vel){
	int i, j;
	for(i=0; i<vel; i++){  
		if(Fibonacci(niz[i])){ 
			for(j=i; j<vel-1; j++){
			niz[j]=niz[j+1]; 
			}
			vel--;
			i--;
		} 
	}
	return vel;
}
int main() { 
	int niz[20]={0}, i, novavel;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<10; i++){
		scanf(""%d"", &niz[i]);
	}
	ubaci(niz, 10); 
	novavel=izbaci(niz, 20);
	printf(""Modificirani niz glasi: "");
	for(i=0; i<novavel-1; i++){
		printf(""%d, "", niz[i]);
	}
	printf(""%d."",niz[i]);

	return 0;
}
"
1177,11,11,0,14,A2016/Z4/Z3/student5170,A2016/Z4/Z3/student5581,"#include <stdio.h>

int provjera (char* text, char* zamjena)
{
	int je_li_isto=1;
	char* reset=text;
	char* prvoslovo=zamjena;
	while (*zamjena!='\0' && *text!='\0') {
		if(*text!=*zamjena)
			je_li_isto=0;
		zamjena++;
		text++;
	}
	if(*zamjena!='\0' || (*text!='\0' && *text!=' ')) je_li_isto=0;
	zamjena=prvoslovo;
	text=reset;
	return je_li_isto;
}

void promjena(char* text, char* zamjena, char* nova)
{
	int ostatak=0, cont=1,i;
	char* rst=text;
	char* reset_rij=zamjena;
	char* reset=nova;
	char* kraj=text;
	while(*text!='\0') {
		cont=0;
		while(*text!='\0' && *text!=*zamjena) text++;
		if(provjera(text, zamjena) && (text==rst || *(text-1)==' ') && *text!='\0') {
			while(*nova!='\0') {
				if(*text=='\0' || *text==' ') {
					kraj=text;
					while(*text!='\0') text++;
					text++;
					while(text>kraj) {
						*text=*(text-1);
						text=text-1;
					}
				}
				*text=*nova;
				nova++;
				text++;
			}
			cont=1;
		}
		if(cont==1 && *text!='\0' && *text!=' ') {
			kraj=text;
			while(*text!='\0' && *text!=' ') {
				text++;
				ostatak++;
			}
			text=kraj;
			for(i=0; i<ostatak; i++) {
				text=kraj;
				while(*text!='\0') {
					*text=*(text+1);
					text++;
				}
			}
			text=kraj;
		}
		if(*text!='\0' && *text!=' ') text++;
		nova=reset;
		zamjena=reset_rij;
	}
	nova=reset;
	zamjena=reset_rij;
	text=rst;
}

char* zamjena_rijeci(char*tekst, char** rijeci, char** zamjene, int broj_rijeci)
{
	char *reset=tekst;
	int i,br;
	br=broj_rijeci;
	for(i=0; i<br; i++) {
		tekst=reset;
		while(*tekst!='\0') {
			while(*tekst!='\0' && *tekst==' ')
				tekst++;
			if(provjera(tekst,rijeci[i])) {
				promjena(tekst, rijeci[i], zamjene[i]);
			}
			while(*tekst!='\0' && *tekst!=' ') tekst++;
		}
	}
	return reset;
}

int main()
{
	char* promjene[2]= {"""",""""};
	char* rij[2]= {"""",""""};
	char t[100]="""";
	printf(""%s"", zamjena_rijeci(t, rij, promjene, 2));
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

/*duzina stringa*/
int duzina_stringa (char *s) {
	
	int duzina=0;
	while (*s != '\0'){
		
		duzina++;
		s++;
	}
	
	return duzina;
}

/*funkcija koja pronalazi određenu riječ u stringu i vraća pokazivač na početak te riječi*/
char* trazi_rijec (char* s, char* rijec){
	
	while (*s != '\0'){
		while (*s == ' ') {
			s++;
		}
		char* p=s;
		char* a=s;
		char* q=rijec;
		
		while (*p++ == *q++) {
			if (*q == '\0' && (*p == ' ' || *p == '\0')) {
				return a;
			}
		}
		while (*s != '\0' && *s != ' '){
			s++;
		}
	}
	
	return NULL;
}

/*funkcija koja vraća broj riječi*/
int broj_rijeci1 (char* s)
{

	int neslovo=1, broj_rijeci1=0;

	while(*s != '\0') {

		if (!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))) {
			neslovo=1;
		} 
		else if (neslovo == 1) {

			neslovo=0;
			broj_rijeci1++;
		}
		s++;
	}

	return broj_rijeci1;
}

/*funkcija zamjena_rijeci*/
char* zamjena_rijeci (char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	
	int duzina;
	int i,j;
	
	if (duzina_stringa(tekst)==0 || broj_rijeci==0){
		return tekst;
	}
	
	
	for (j=0; j<broj_rijeci1(tekst); j++){
		for (i=0; i<broj_rijeci; i++){
			
			char* a;
			char* pok;
			a=trazi_rijec(tekst, rijeci[i]);
			
			if (a==NULL){
				continue;
			}
			
			duzina=duzina_stringa(zamjene[i])-duzina_stringa(rijeci[i]);
			
			/*slučaj kada je riječ koja se mijenja kraća od riječi sa kojom se mijenja*/
			if (duzina>=0) {
				
				char* kraj = a;
				while (*kraj != '\0') {
					kraj++;
				}
				
				/*ubacuje slobodna mjesta*/
				while (kraj>a) {
					*(kraj+duzina) = *kraj;
					kraj--;
				}
				/*prepisuje zamjenu preko riječi*/
				pok=zamjene[i];
				while (*pok != '\0') {
					*a=*pok;
					pok++;
					if (*pok != '\0') {
						a++;
					}
				}
			}
			
			/*slučaj kada je riječ koja se mijenja duža od riječi sa kojom se mijenja*/
			if(duzina<0){
				
				duzina=abs(duzina);
				
				/*izbacuje višak karaktera u riječi koja se mijenja*/
				char* pocetak=a;
				char* kraj=a+duzina;
				while (*pocetak++=*kraj++);
				
				/*prepisuje zamjenu preko riječi*/
				char* pocetak1=a;
				char* zamjena=zamjene[i];
				while (*zamjena != '\0'){
					*pocetak1=*zamjena;
					pocetak1++;
					zamjena++;
				}
			}
			
			a++;
		}
	}
	return tekst;
}
	
int main (){

char* rijeci[2] = { ""auto"", ""stop"" };
char* zamjene[2] = { ""vozilo"", ""start"" };
char tekst[100] = ""auto-stop auto. stop auto kj stop"";
printf (""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));

	return 0;
}
"
1178,88,88,0,65,A2016/Z3/Z3/student5624,A2016/Z3/Z3/student9821,"#include <stdio.h>

int main() {
    int matrica[200][200], i, j, k, l, m, n,pret,pret1,p;
    do{
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"", &m, &n);
        if(m<=0||n<=0||m>200||n>200) 
            printf(""Brojevi nisu u trazenom opsegu.\n"");
    } 
    while(m<=0||n<=0||m>200||n>200); // petlja osigurava da su brojevi u trazenom opsegu
    printf(""Unesite elemente matrice: "");
    for(i=0;i<m;i++)
        for(j=0;j<n;j++)
            scanf(""%d"",&matrica[i][j]);
    for(i=0;i<m;i++){
        for(k=i+1;k<m;k++){ 
            pret=1;
            for(j=0;j<n;j++){
                if(matrica[i][j]!=matrica[k][j]) pret=0; //ispitujemo da li su redovi matrice jednaki
            } 
            if(pret==1){ //izbacivanje jednakog reda matrice
                for(l=k;l<m-1;l++){
                    for(p=0;p<n;p++)
                        matrica[l][p]=matrica[l+1][p];
                }
                m--;
                k--;
            }
        }
    }
    for(i=0;i<n;i++){
        for(k=i+1;k<n;k++){
            pret1=1;
            for(j=0;j<m;j++){
                if(matrica[j][i]!=matrica[j][k]) pret1=0; //ispitujemo da li su kolone matrice jednake
            }
            if(pret1==1){//izbacivanje jednake kolone matrice
                for(l=k;l<n-1;l++){
                    for(p=0;p<m;p++)
                        matrica[p][l]=matrica[p][l+1];
                }
                    n--;
                    k--;
            }
        }
    }
    printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
    for(i=0;i<m;i++){
        for(j=0;j<n;j++)
            printf(""%5d"",matrica[i][j]);
        printf(""\n"");
    }
    return 0;
}
","#include <stdio.h>


int main(){
    int mat[200][200],a,b,c,d,e,i,j,k,f;
    do{
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"", &a,&b );
        if(a<=0 || a>200 || b<=0 || b>200) printf(""Brojevi nisu u trazenom opsegu.\n"");
    }
    while(a<=0 || a>200 || b<=0 || b>200);
    
    printf(""Unesite elemente matrice: "");
    for(i=0;i<a;i++){
        for(j=0;j<b;j++){
            scanf(""%d"", &mat[i][j]);
        }
    }
    
    for(i=0;i<a-1;i++){
        for(j=i+1;j<a;j++){
            c=0;
            if(mat[i][0]==mat[j][0]){
                c=1;
                for(d=1;d<b;d++){
                    if(mat[i][d]!=mat[j][d]) c=0;
                }
            }
            if(c==1){
                for(k=j;k<a-1;k++){
                    for(e=0;e<b;e++){
                        mat[k][e]=mat[k+1][e];
                    }
                }
                a--;
                j--;
            }
        }
    }
    
    
    
    
    for(i=0;i<b-1;i++){
        for(j=(i+1);j<b;j++){
            c=0;
            if(mat[0][i]==mat[0][j]){
                c=1;
                for(d=1;d<a;d++){
                    if(mat[d][i]!=mat[d][j]) c=0;
                }
                
                
            
            if(c==1){
                for(k=j;k<b-1;k++){
                    for(f=0;f<a;f++){
                        mat[f][k]=mat[f][k+1];
                    }
                }
                b--;
                j--;
            }
        }
        
    }
}

    printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
    for(i=0;i<a;i++){
        for(j=0;j<b;j++){
            printf(""%5d"", mat[i][j]);
        }
        printf(""\n"");
    }
    return 0;
}"
1183,99,99,0,50,A2016/Z3/Z1/student5621,A2016/Z3/Z1/student7255,"#include <stdio.h>

int daj_prost () {
	int p=0, i; 
	static int q=0; 
	
	while (1){
		q++;
		if(q==2){
			return q;
		}
		else if(q==3){
			return q;
		}
		else {
		for(i=2; i<q; i++){
			if(q%i==0){
				p=0;
				break;
			}
		}
		if (p){
			return q;
		}
		else{
			p=1;
		}
	}
}
}
int main() {
	int A,B, sum=0, q=0;
	do {
		printf(""Unesite brojeve A i B: "");
		scanf (""%d"", &A);
		scanf (""%d"", &B);
		if(A<1){
			printf(""A nije prirodan broj.\n"");
		}
		else if(A>=B){
			printf(""A nije manje od B.\n"");
		}
		
	}while(A<1 || A>=B || B<=0);
	while(q<B){
		q=daj_prost();
		if(q>A && q<B){
			sum+=q;
		}
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."", A, B, sum);
	return 0;
}","#include <stdio.h>

int daj_prost () {
	int p=0, i; 
	static int q=0; 
	
	while (1){
		q++;
		if(q==2){
			return q;
		}
		else if(q==3){
			return q;
		}
		else {
		for(i=2; i<q; i++){
			if(q%i==0){
				p=0;
				break;
			}
		}
		if (p){
			return q;
		}
		else{
			p=1;
		}
	}
}
}
int main() {
	int A,B, sum=0, q=0;
	do {
		printf(""Unesite brojeve A i B: "");
		scanf (""%d"", &A);
		scanf (""%d"", &B);
		if(A<1){
			printf(""A nije prirodan broj.\n"");
		}
		else if(A>=B){
			printf(""A nije manje od B.\n"");
		}
		
	}while(A<1 || A>=B || B<=0);
	while(q<B){
		q=daj_prost();
		if(q>A && q<B){
			sum+=q;
		}
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."", A, B, sum);
	return 0;
}"
1184,61,61,0,68,A2016/Z3/Z2/student4237,A2016/Z3/Z2/student4495,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

/*funkcija koja ubacuje clanove koji predstavljaju zbir cifara u niz*/

void ubaci (int* p, int duzina){
	int* pomp=p;
	int* pomp2;
	int clan=0;
	int k=0;
	int broj;

	while(pomp<p+2*duzina){
		broj=abs(*pomp);
		while(broj){
			clan=clan+broj%10;
			broj= broj/10;
		}
	
		for(pomp2=p+(duzina+k); pomp2>pomp; pomp2--){
			*pomp2=*(pomp2-1);
		}
		k++;
		pomp++;
		*pomp=clan;
		clan=0;
		pomp++;	
	}
}	
/*funkcija koja vraca 1 ako je fibbonacijaev broj*/

int fibonaccijeve(int broj){
	
	int niz[1000];
	niz[0]=1;
	niz[1]=1;
	
	if(broj==1) 
		return 1;
	
	int*pomp1=niz;
	int*pomp2=niz+1;
	int*pomp3=niz+2;
	
	while(1){
		*pomp3=*pomp2+*pomp1;
		if(*pomp3==broj)
			return 1;
		if(*pomp3>broj){
			return 0;
		}
		pomp1++;
		pomp2++;
		pomp3++;
	}
}

/*funkcija koja izbacuje clan niza ako je taj clan fibbonacijev broj*/

int izbaci(int*p, int duzina){
	int*pomp=p;
	int*pomp2;
	int broj;
	
	while(pomp<p+duzina){
		
		broj=*pomp;
        broj=fibonaccijeve(broj);
        if(broj==1){
        	for(pomp2=pomp; pomp2<p+duzina-1; pomp2++){
        		*pomp2=*(pomp2+1);
         }
        	duzina--;
        	pomp--;
    	 }
			pomp++;	
	}
	
	return duzina;	
}

int main() {
	
	int i,n; 
	int niz[100];
	
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<10; i++)
		scanf(""%d"", &niz[i]);
	
	ubaci(niz, 10);
	n=izbaci(niz, 20);
	
/* ispis modificiranog niza */

	printf(""Modificirani niz glasi: "");
	for(i=0; i<n; i++){
		if(i==n-1)
			printf(""%d."", niz[i]);
		else 
			printf(""%d, "", niz[i]);
	}
	return 0;
}","#include <stdio.h>
#include <math.h>
#include <stdlib.h>


void ubaci (int* niz, int vel) {
	
	int* clan;
	
	clan=niz;
	while (clan < niz + vel) {
		
		//Suma cifara clana niza
		
		int suma_c=0;
		int clan_niza=abs(*clan);
		
		while (clan_niza != 0) {
			suma_c=suma_c+(clan_niza%10);
			clan_niza=clan_niza/10;
		}
		
		//Pomjeranje clanova niza za jedno mjesto
		
		int* temp_p;
		temp_p=niz+vel;
		while (temp_p > clan) {
			*temp_p=*(temp_p-1);
			temp_p--;
		}
		
		//Ubacivanje novog clana niza
		
		*(clan+1)=suma_c;
		
		clan=clan+2;
		vel++;
			
		
	}
	
}

int fibonacci (int br) {
	
	int niz[1000];
	niz[0]=1;
	niz[1]=1;
	
	if (br == 1)
		return 1;
		
	int* p1=niz;
	int* p2=niz+1;
	int* p3=niz+2;
	
	while (1) {
		*p3=*p2+*p1;
		if (*p3 == br)
			return 1;
		if (*p3>br)
			return 0;
			
		p1++;
		p2++;
		p3++;
	}
}

int izbaci (int* p, int vel) {
	
	int* niz = p;
	int br;
	int* temp_p;
	while (niz < p+vel) {
		br=*niz;
		br=fibonacci(br);
	if (br == 1) {
		for (temp_p=niz; temp_p<p+vel-1; temp_p++) {
			*temp_p=*(temp_p+1);
		}
		vel--;
		niz--;
	}
		niz++;
	
}
	return vel;
}

int main() {
	int niz[100], i, izbaceni;
	 
	printf(""Unesite niz od 10 brojeva: "");
	for (i = 0; i < 10; i++) {
		scanf(""%d"", &niz[i]);
	}
	
	ubaci(niz, 10);
	izbaceni=izbaci(niz, 20);
	
	printf(""Modificirani niz glasi: "");
	for (i = 0; i < izbaceni; i++) {
		if (i < izbaceni -1) 
			printf(""%d, "", niz[i]);
		else 
			printf(""%d."", niz[i]);
	}
	return 0;
}
"
1187,31,31,0,32,A2016/Z4/Z2/student8886,A2016/Z4/Z2/student3631,"#include <stdio.h>

void sortiraj(int *niz, int *sortirani, int *indeks) {
	int i, j, pom;
	
	for (i=0; i<127; i++) {
		for (j=i; j<127; j++) {
			if (niz[i]<niz[j]) {
				pom=niz[i];
				niz[i]=niz[j];
				niz[j]=pom;
				pom=indeks[i];
				indeks[i]=indeks[j];
				indeks[j]=pom;
			}
			else if (niz[i]==niz[j] && indeks[i]>indeks[j]) {
				pom=indeks[i];
				indeks[i]=indeks[j];
				indeks[j]=pom;
			}
		}
	}
}

void konevertuj(char *s, char *sifrarnik) {
	char *p=s, *sifra=sifrarnik;
	int brojac;
	
	while (*p!='\0') {
		brojac=0;
		sifra=sifrarnik;
		while (*sifra!='\0') {
			if (*p==*sifra++) {
				*p=126-brojac;
				break;
			}
			brojac++;
		}
		p++;
	}
}

char* kodiraj(char *s, char *sifrarnik) {
	char *p=s, *q=sifrarnik;
	int i;
	int niz[127], sortirani[127], indeks[127];
	for (i=0; i<127; i++) {
		if (i<32) niz[i]=-1;
		else niz[i]=0;
	}
	for (i=0; i<127; i++) {
		if (i<32) indeks[i]=-1;
		else indeks[i]=i;
	}
	while (*p!='\0') {
		niz[*p+0]++;
		p++;
	}
	for (i=0; i<127; i++) 
	sortirani[i]=niz[i];
	sortiraj(niz, sortirani, indeks);
	for (i=0; i<127; i++)  {
		if (indeks[i]!=-1) {
			*q=indeks[i];
			q++;
		}
	}
	konevertuj(s, sifrarnik);
	return s;
}

char *dekodiraj(char *s, char *sifrarnik) {
	char *p=s;
	while (*p!='\0') {
		*p=sifrarnik[126-*p];
		p++;
	}
	return s;
}

int main () {
	char tekst[]="""";
	char sifrarnik[100]="""";
	kodiraj(tekst, sifrarnik);
	printf (""%s\n"", tekst);
	dekodiraj(tekst, sifrarnik);
	printf (""%s\n"", tekst);
	printf (""%s\n"", sifrarnik);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>



char* kodiraj(char*tekst, char*tabela){
    int brojaci[96]={0};
   
    int i,j;
    char *pok=tekst;

    
    
    while (*tekst ){
        char temp=*tekst;
        brojaci[temp-32]++;
        tekst++;
    }
    
  int ascii[96];  
  /* upisivanje ascii vrijednosti u prazan niz */
  for (i=0;i<95;i++)
  
    ascii[i]=32+i;   
  
  /* sortiranje niza prema učestalosti u stringu */
   for (i=0;i<95;i++)
      
     for (j=i;j<95;j++)
     {
          if (brojaci[i]<brojaci[j]){  
       
       int temp=brojaci[i];
       brojaci[i]=brojaci[j];
       brojaci[j]=temp;
       temp=ascii[i];
       ascii[i]=ascii[j];
       ascii[j]=temp;
   }
   
   else if(brojaci[i]==brojaci[j]){
       if(ascii[i]>ascii[j]){
             int temp=brojaci[i];
       brojaci[i]=brojaci[j];
       brojaci[j]=temp;
       temp=ascii[i];
       ascii[i]=ascii[j];
       ascii[j]=temp;
       }
           
       }
   }
  
  for (i=0;i<95;i++) {
     *tabela=ascii[i];
     tabela++;
  }
  *tabela='\0';
  tekst=pok;
  
  /*kodiranje teksta*/
  
  while(*tekst)
  {
      int indeks;
      char temp=*tekst;
      for (i=0;i<96;i++)
          if (ascii[i]==temp)
          {indeks=i;
          break;
      }
      *tekst=126-indeks;
      tekst++;
      
     
  }
  
    return pok;
}



char* dekodiraj (char *tekst, char *tabela) {
    char *pok=tekst;

    while(*pok){
        
        int brojac=0;
        char* kod=tabela;
        
        /*dekodiranje ovog teksta */
        while(*kod){
            
            if(*pok == 126 - brojac){
                *pok=*kod;
                break;
            }
            
            brojac++;
            kod++;
        }
        
        pok++;
       
    }

return tekst;
}

int main() {
    
/* unos teksta koji ce biti kodiran i praznog stringa pomocu kojeg obavljam kodiranje*/
char tekst[]=""LLMLNLNMONM"";
char sifrarnik[100]="""";

/* pozivanje funkcije za kodiranje teksta*/
kodiraj(tekst,sifrarnik);
printf (""%s\n"", tekst);

/* pozivanje funkcije za dekodiranje */
dekodiraj (tekst,sifrarnik);
printf (""%s"", tekst);

return 0;
}
"
1190,83,83,0,31,A2016/Z2/Z4/student1915,A2016/Z2/Z4/student8199,"#include <stdio.h>

int main(){
int i,j,m,n;
int cirk=0,tep=0;
double mat[100][100];


do{
printf(""Unesite M i N: "");
scanf(""%d %d"",&m,&n);

if(m<=0 || m>100 || n<=0 || n>100){
	printf(""Pogresan unos!\n"");
      }
   
   

}while(m<=0 || m>100 || n<=0 || n>100);

printf(""Unesite elemente matrice: "");
for(i=0;i<m;i++){
	for(j=0;j<n;j++){
		scanf(""%lf"",&mat[i][j]);
}
}
	
   
 
   
   for(i=0;i<m-1;i++){
   	for(j=0;j<n-1;j++){
   			if(mat[i][j]!=mat[i+1][j+1]){
   			tep=1;
   			}
   		}
   }
  

   for(i=0;i<m-1;i++){
      for(j=0;j<n-1;j++){
            if(mat[i][n-1]!=mat[i+1][0] || mat[i][j]!=mat[i+1][j+1]){
               cirk=1;
            }
      }
   }
            
    if(m==1)printf(""Matrica je cirkularna"");
    else if(n==1)printf(""Matrica je Teplicova"");
   else if(cirk==0 && tep==0) printf(""Matrica je cirkularna"");
   else if(cirk==0 && tep==1) printf(""Matrica je cirkularna"");
   else if(cirk==1 && tep==1) printf(""Matrica nije ni cirkularna ni Teplicova"");
   else if (tep==0 && cirk==1) printf(""Matrica je Teplicova"");
   	
  
   
   
return 0;	
}","#include <stdio.h>
#include <math.h>

int main() {
	int m, n, i, j;
	double mat[100][100];
	
	/*Unos dimenzija matrice*/
	
	do {
		printf (""Unesite M i N: "");
		scanf (""%d %d"", &m, &n);
		if (m <= 0 || m > 100 || n <= 0 || n > 100) {
			printf (""Pogresan unos!\n"");
		}
		
	} while (m <= 0 || m > 100 || n <= 0 || n > 100);
	
	/*Unos clanova matrice*/
	
	printf (""Unesite elemente matrice: "");
	
	for (i = 0; i < m; i++) {
		for (j = 0; j < n; j++) {
			scanf (""%lf"", &mat[i][j]);
			
		}
	}
	
	/*Provjera matrice*/
	
	for (i = 0; i < m - 1; i++) {
		for (j = 0; j < n - 1; j++) {
			if (mat[i][j] != mat[i + 1][j + 1]) {
				printf (""Matrica nije ni cirkularna ni Teplicova"");
				return 0;
			}
		}
	}
	
	for (i = 0; i < m - 1; i++) {
		if (mat[i][n - 1] != mat[i + 1][0]) {
			printf (""Matrica je Teplicova"");
			return 0;
		}
	}
	
		printf (""Matrica je cirkularna"");
	
	return 0;
}
"
1192,94,94,0,34,A2016/Z2/Z3/student1476,A2016/Z2/Z3/student2526,"#include <stdio.h>
int main() {
	int i,j,n,br;
	char mat[20][20];
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &n);
	while (n<1 || n>10) {printf(""Pogresan unos\n"");
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&n);
	}
	for(i=0; i<20; i++){
	 for(j=0; j<20; j++){
	  mat[i][j]=' ';
	 	}
	}
	for(br=0;br<n;br++){
		printf(""Unesite %d. tacku: "", br+1);
		scanf(""%d"", &i);
		scanf(""%d"", &j);
		while((i<0 || i>19)||(j<0 || j>19)) 
		{
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "", br+1);
			scanf(""%d"", &i);
			scanf(""%d"", &j);
		}
	mat[i][j]='*'; 
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			printf(""%c"", mat[j][i]);
		}
		printf(""\n"");
}
return 0;
}","#include <stdio.h>

int main() {
	int bt,i,j,tacke;
	char niz[20][20];
	printf (""Unesite broj tacaka: "");
	scanf (""%d"",&bt);
	while (bt<1||bt>10){
		printf (""Pogresan unos\n"");
	    printf (""Unesite broj tacaka: "");
	    scanf (""%d"",&bt);}
	for (i=0;i<20;i++){
		for (j=0;j<20;j++){
		niz[i][j]=' ';
			
		}
	}
	for (tacke=0;tacke<bt;tacke++) {
		printf (""Unesite %d. tacku: "",tacke+1);
		scanf (""%d %d"",&i,&j);
		while (i<0||j<0||i>19||j>19){
			printf (""Pogresan unos\n"");
			printf (""Unesite %d. tacku: "",tacke+1);
			scanf (""%d %d"",&i,&j);
		}
		niz[i][j]='*';
		
	}
	for (i=0;i<20;i++){
		for (j=0;j<20;j++){
			printf (""%c"",niz[j][i]);
	}
	printf(""\n"");
	}
    return 0;
}
"
1195,99,99,0,111,A2016/Z1/Z1/student9163,A2016/Z1/Z1/student7193,"#include <stdio.h>
#include <math.h>
#define EPS 0.001
int main() {
	float Ipt,IIpt,pt,zt,kt,Ipb,IIpb,pb,zb,kb,Ipm,IIpm,pm,zm,km,t,b,m;
	int oc1=0,oc2=0,oc3=0;
	
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"",&Ipt);
	if(Ipt<0 || Ipt>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &IIpt);
	if(IIpt<0 || IIpt>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%f"",&pt);
	if(pt<0 || pt>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%f"",&zt);
	if(zt<0 || zt>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%f"",&kt);
	if(kt<0 || kt>40)
	{printf(""Neispravan broj bodova""); return 0;}
    t=Ipt+IIpt+pt+zt+kt; 
    printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"",&Ipb);
	if(Ipb<0 || Ipb>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%f"",&IIpb);
	if(IIpb<0 || IIpb>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%f"",&pb);
	if(pb<0 || pb>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%f"",&zb);
	if(zb<0 || zb>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%f"",&kb);
	if(kb<0 || kb>40)
	{printf(""Neispravan broj bodova""); return 0;}
	b=Ipb+IIpb+pb+zb+kb;
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"",&Ipm);
	if(Ipm<0 || Ipm>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%f"",&IIpm);
	if(IIpm<0 || IIpm>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%f"",&pm);
	if(pm<0 || pm>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%f"",&zm);
	if(zm<0 || zm>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%f"",&km);
	if(km<0 || km>40)
	{printf(""Neispravan broj bodova""); return 0;}
	m=Ipm+IIpm+pm+zm+km;
	 
    if (fabs(t+EPS)<55)                 oc1=5;
    else if(fabs(t+EPS)>=55 && fabs(t+EPS)<65)  oc1=6;
    else if(fabs(t+EPS)>=65 && fabs(t+EPS)<75)  oc1=7;
    else if(fabs(t+EPS)>=75 && fabs(t+EPS)<85)  oc1=8;
    else if(fabs(t+EPS)>=85 && fabs(t+EPS)<92)  oc1=9;
    else if(fabs(t+EPS)>=92 && fabs(t+EPS)<=100) oc1=10;
    
    if(fabs(b+EPS)<55)                         oc2=5;
    else if(fabs(b+EPS)>=55 && fabs(b+EPS)<65)  oc2=6;
    else if(fabs(b+EPS)>=65 && fabs(b+EPS)<75)  oc2=7;
    else if(fabs(b+EPS)>=75 && fabs(b+EPS)<85)  oc2=8;
    else if(fabs(b+EPS)>=85 && fabs(b+EPS)<92)  oc2=9;
    else if(fabs(b+EPS)>=92 && fabs(b+EPS)<=100) oc2=10;
    
    if(fabs(m+EPS)<55)                         oc3=5;
    else if(fabs(m+EPS)>=55 && fabs(m+EPS)<65)  oc3=6;
    else if(fabs(m+EPS)>=65 && fabs(m+EPS)<75)  oc3=7;
    else if(fabs(m+EPS)>=75 && fabs(m+EPS)<85)  oc3=8;
    else if(fabs(m+EPS)>=85 && fabs(m+EPS)<92)  oc3=9;
    else if(fabs(m+EPS)>=92 && fabs(m+EPS)<=100) oc3=10;
    
    
    if(oc1==5 && oc2==5 && oc3==5)     printf(""Nijedan student nije polozio."");
    else if(oc1>5 && oc2>5 && oc3>5)  
     {
     	printf(""Sva tri studenta su polozila.\n"");
     	if(oc1==oc2 && oc1==oc3) printf(""Sva tri studenta imaju istu ocjenu."");
     	else if(oc1!=oc2 && oc2!=oc3 && oc1!=oc3) printf(""Svaki student ima razlicitu ocjenu."");
     	else if(oc1==oc2 && oc1!=oc3) printf(""Dva od tri studenta imaju istu ocjenu."");
     	else if(oc1==oc3 && oc1!=oc2) printf(""Dva od tri studenta imaju istu ocjenu."");
     	else if(oc2==oc3 && oc2!=oc1) printf(""Dva od tri studenta imaju istu ocjenu."");
     }
    else if (oc1>5 && oc2==5 && oc3==5)printf(""Jedan student je polozio."");
    else if(oc1>5 && oc2>5 &&  oc3==5) printf(""Dva studenta su polozila."");
    else if(oc1>5 && oc2==5 && oc3>=5) printf(""Dva studenta su polozila."");
    else if(oc1==5 && oc2>5 && oc3>=5) printf(""Dva studenta su polozila."");
    else if(oc1==5 && oc2==5 && oc3>5) printf(""Jedan student je polozio."");
    else if(oc1==5 && oc2>5 && oc3==5) printf(""Jedan student je polozio."");
    
    	return 0;
}
","#include <stdio.h>
#include <math.h>
#define EPS 0.001
int main() {
	float Ipt,IIpt,pt,zt,kt,Ipb,IIpb,pb,zb,kb,Ipm,IIpm,pm,zm,km,t,b,m;
	int oc1=0,oc2=0,oc3=0;
	
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"",&Ipt);
	if(Ipt<0 || Ipt>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &IIpt);
	if(IIpt<0 || IIpt>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%f"",&pt);
	if(pt<0 || pt>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%f"",&zt);
	if(zt<0 || zt>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%f"",&kt);
	if(kt<0 || kt>40)
	{printf(""Neispravan broj bodova""); return 0;}
    t=Ipt+IIpt+pt+zt+kt; 
    printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"",&Ipb);
	if(Ipb<0 || Ipb>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%f"",&IIpb);
	if(IIpb<0 || IIpb>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%f"",&pb);
	if(pb<0 || pb>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%f"",&zb);
	if(zb<0 || zb>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%f"",&kb);
	if(kb<0 || kb>40)
	{printf(""Neispravan broj bodova""); return 0;}
	b=Ipb+IIpb+pb+zb+kb;
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"",&Ipm);
	if(Ipm<0 || Ipm>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%f"",&IIpm);
	if(IIpm<0 || IIpm>20)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%f"",&pm);
	if(pm<0 || pm>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%f"",&zm);
	if(zm<0 || zm>10)
	{printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%f"",&km);
	if(km<0 || km>40)
	{printf(""Neispravan broj bodova""); return 0;}
	m=Ipm+IIpm+pm+zm+km;
	 
    if (fabs(t+EPS)<55)                 oc1=5;
    else if(fabs(t+EPS)>=55 && fabs(t+EPS)<65)  oc1=6;
    else if(fabs(t+EPS)>=65 && fabs(t+EPS)<75)  oc1=7;
    else if(fabs(t+EPS)>=75 && fabs(t+EPS)<85)  oc1=8;
    else if(fabs(t+EPS)>=85 && fabs(t+EPS)<92)  oc1=9;
    else if(fabs(t+EPS)>=92 && fabs(t+EPS)<=100) oc1=10;
    
    if(fabs(b+EPS)<55)                         oc2=5;
    else if(fabs(b+EPS)>=55 && fabs(b+EPS)<65)  oc2=6;
    else if(fabs(b+EPS)>=65 && fabs(b+EPS)<75)  oc2=7;
    else if(fabs(b+EPS)>=75 && fabs(b+EPS)<85)  oc2=8;
    else if(fabs(b+EPS)>=85 && fabs(b+EPS)<92)  oc2=9;
    else if(fabs(b+EPS)>=92 && fabs(b+EPS)<=100) oc2=10;
    
    if(fabs(m+EPS)<55)                         oc3=5;
    else if(fabs(m+EPS)>=55 && fabs(m+EPS)<65)  oc3=6;
    else if(fabs(m+EPS)>=65 && fabs(m+EPS)<75)  oc3=7;
    else if(fabs(m+EPS)>=75 && fabs(m+EPS)<85)  oc3=8;
    else if(fabs(m+EPS)>=85 && fabs(m+EPS)<92)  oc3=9;
    else if(fabs(m+EPS)>=92 && fabs(m+EPS)<=100) oc3=10;
    
    
    if(oc1==5 && oc2==5 && oc3==5)     printf(""Nijedan student nije polozio."");
    else if(oc1>5 && oc2>5 && oc3>5)  
     {
     	printf(""Sva tri studenta su polozila.\n"");
     	if(oc1==oc2 && oc1==oc3) printf(""Sva tri studenta imaju istu ocjenu."");
     	else if(oc1!=oc2 && oc2!=oc3 && oc1!=oc3) printf(""Svaki student ima razlicitu ocjenu."");
     	else if(oc1==oc2 && oc1!=oc3) printf(""Dva od tri studenta imaju istu ocjenu."");
     	else if(oc1==oc3 && oc1!=oc2) printf(""Dva od tri studenta imaju istu ocjenu."");
     	else if(oc2==oc3 && oc2!=oc1) printf(""Dva od tri studenta imaju istu ocjenu."");
     }
    else if (oc1>5 && oc2==5 && oc3==5)printf(""Jedan student je polozio."");
    else if(oc1>5 && oc2>5 &&  oc3==5) printf(""Dva studenta su polozila."");
    else if(oc1>5 && oc2==5 && oc3>=5) printf(""Dva studenta su polozila."");
    else if(oc1==5 && oc2>5 && oc3>=5) printf(""Dva studenta su polozila."");
    else if(oc1==5 && oc2==5 && oc3>5) printf(""Jedan student je polozio."");
    else if(oc1==5 && oc2>5 && oc3==5) printf(""Jedan student je polozio."");
    
    	return 0;
}
"
1201,86,86,0,130,A2016/Z1/Z1/student8580,A2016/Z1/Z1/student8110,"#include <stdio.h>
int main() {
	double BT,BB,BM,IP,IIP,P,Z,ZI,IPB,IIPB,PB,ZB,ZIB,IPM,IIPM,PM,ZM,ZIM;
	int OT,OB,OM;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&IP);
		if(IP>20||IP<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIP);
		if(IIP>20||IIP<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&P);
		if(P>10||P<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&Z);
		if(Z>10||Z<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZI);
		if(ZI>40||ZI<0){
			printf(""Neispravan broj bodova"");return 0;}
	BT=IP+IIP+P+Z+ZI;
	
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&IPB);
		if(IPB>20||IPB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIPB);
		if(IIPB>20||IIPB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&PB);
		if(PB>10||PB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&ZB);
		if(ZB>10||ZB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZIB);
		if(ZIB>40||ZIB<0){
			printf(""Neispravan broj bodova"");return 0;}

	BB=IPB+IIPB+PB+ZB+ZIB;



	printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&IPM);
		if(IPM>20||IPM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIPM);
		if(IIPM>20||IIPM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&PM);
		if(PM>10||PM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&ZM);
		if(ZM>10||ZM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZIM);
		if(ZI>40||ZI<0){
			printf(""Neispravan broj bodova"");return 0;}
	BM=IPM+IIPM+PM+ZM+ZIM;
	if(BT>=55&&BT<65)
	OT=6;
	else	if(BT>=64&&BT<75)
	OT=7;
	else	if(BT>=75&&BT<85)
	OT=8;
	else	if(BT>=85&&BT<92)
	OT=9;
	else	if(BT>=92&&BT<=100)
	OT=10;
	else OT=0;
	if(BB>=55&&BB<65)
	OB=6;
	else	if(BB>=65&&BB<75)
	OB=7;
	else	if(BB>=75&&BB<85)
	OB=8;
	else	if(BB>=85&&BB<92)
	OB=9;
	 else   if(BB>=92&&BB<=100)
	OB=10;
	else OB=1;
	if(BM>=55&&BM<65)
	OM=6;
	else	if(BM>=65&&BM<75)
	OM=7;
		else if(BM>=75&&BM<85)
	OM=8;
		else if(BM>=85&&BM<92)
	OM=9;
	else	if(BM>=92&&BM<=100)
	OM=10;
	else OM=2;
if(BT<55&&BB<55&&BM<55)
	printf(""Nijedan student nije polozio."");
	if(OT>=6&&OB>=6&&OM>=6){
	printf(""Sva tri studenta su polozila."");
	if(OT==OB&&OB==OM)
	printf(""\nSva tri studenta imaju istu ocjenu."");
	else if((OT==OB||OB==OM||OM==OT))
		printf(""\nDva od tri studenta imaju istu ocjenu."");
		else
		printf(""\nSvaki student ima razlicitu ocjenu."");}
		if((OT>=6&&OB<6&&OM<6)||(OT<6&&OB>=6&&OM<6)||(OT<6&&OB<6&&OM>=6))
		printf(""Jedan student je polozio."");

			if((OT>=6&&OB>=6&&OM<6)||(OT<6&&OB>=6&&OM>=6)||(OT>=6&&OB<6&&OM>=6))
		printf(""Dva studenta su polozila."");
	return 0;
}

","#include <stdio.h>
int main() {
	double PI1t,PI2t,Pt,Zt,ZIt,PI1b,PI2b,Pb,Zb,ZIb,PI1m,PI2m,Pm,Zm,ZIm,UKt,UKb,UKm,Ot,Ob,Om;
	printf(""Unesite bodove za Tarika:"");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &PI1t);
	if (PI1t<0 || PI1t>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &PI2t);
	if (PI2t<0 || PI2t>20) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf(""%lf"", &Pt);
	if (Pt<0 || Pt>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &Zt);
	if (Zt<0 || Zt>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &ZIt);
	if (ZIt<0 || ZIt>40) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	UKt= PI1t+PI2t+Pt+Zt+ZIt; /*Tarikovi ukupni bodovi predstavljaju sumu bodova sa I parcijalnog ispita, II parcijalnog ispita, prisustva, zadace i zavrsnog ispita.*/
	if (UKt>=55 && UKt<65) {
		Ot=6; 
	} else if (UKt>=65 && UKt<75) {
		Ot=7;
	} else if (UKt>=75 && UKt<85) {
		Ot=8;
	} else if (UKt>=85 && UKt<92) {
		Ot=9;
	} else if (UKt>=92 && UKt<=100) {
		Ot=10;
	}
	printf(""Unesite bodove za Bojana:"");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &PI1b);
	if (PI1b<0 || PI1b>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &PI2b);
	if (PI2b<0 || PI2b>20) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf(""%lf"", &Pb);
	if (Pb<0 || Pb>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &Zb);
	if (Zb<0 || Zb>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &ZIb);
	if (ZIb<0 || ZIb>40) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	UKb=PI1b+PI2b+Pb+Zb+ZIb; /*Bojanovi ukupni bodovi predstavljaju sumu bodova sa I parcijalnog ispita, II parcijalnog ispita, prisustva, zadace i zavrsnog ispita.*/
	if (UKb>=55 && UKb<65) {
		Ob=6;
	} else if (UKb>=65 && UKb<75) {
		Ob=7;
	} else if (UKb>=75 && UKb<85) {
		Ob=8;
	} else if (UKb>=85 && UKb<92) {
		Ob=9;
	} else if (UKb>=92 && UKb<=100) {
		Ob=10;
	}
	printf(""Unesite bodove za Mirzu:"");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &PI1m);
	if (PI1m<0 || PI1m>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &PI2m);
	if (PI2m<0 || PI2m>20) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf(""%lf"", &Pm);
	if (Pm<0 || Pm>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &Zm);
	if (Zm<0 || Zm>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &ZIm);
	if (ZIm<0 || ZIm>40) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
    UKm=PI1m+PI2m+Pm+Zm+ZIm; /*Mirzini ukupni bodovi predstavljaju sumu bodova sa I parcijalnog ispita, II parcijalnog ispita, prisustva, zadace i zavrsnog ispita.*/
    if (UKm>=55 && UKm<65) {
		Om=6;
	} else if (UKm>=65 && UKm<75) {
		Om=7;
	} else if (UKm>=75 && UKm<85) {
		Om=8;
	} else if (UKm>=85 && UKm<92) {
		Om=9;
	} else if (UKm>=92 && UKm<=100) {
		Om=10;
	}
	if (UKt<55 && UKb<55 && UKm<55) {
		printf(""Nijedan student nije polozio."");
	}
	if ((UKt>=55 && UKb<55 && UKm<55) || (UKt<55 && UKb>=55 && UKm<55) || (UKt<55 && UKb<55 && UKm>=55)) {
		printf(""Jedan student je polozio."");
	}
	if ((UKt>=55 && UKb>=55 && UKm<55) || (UKt>=55 && UKb<55 && UKm>=55) || (UKt<55 && UKb>=55 && UKm>=55)) {
		printf(""Dva studenta su polozila."");
	}
	if (UKt>=55 && UKb>=55 && UKm>=55) {
		printf(""Sva tri studenta su polozila."");
		if (Ot==Ob && Ob==Om) {
			printf(""\nSva tri studenta imaju istu ocjenu."");
		} else if ((Ot==Ob && Ob!=Om) || (Ot==Om && Om!=Ob) || (Ob==Om && Om!=Ot)) {
			printf(""\nDva od tri studenta imaju istu ocjenu."");
		} else if (Ot!=Ob && Ob!=Om) {
			printf(""\nSvaki student ima razlicitu ocjenu."");
		}
		}
		return 0;
	}"
1209,81,81,0,48,A2016/Z2/Z4/student5660,A2016/Z2/Z4/student4420,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define eps 0.000000000000000000000001

int main()
{
	double matrica[100][100];
	int m, n, i = 0, j, JeLiSeDesioBreak = 0;
	do
	{
		if (i > 0) printf (""Pogresan unos!\n"");
		printf(""Unesite M i N: "");
		scanf (""%d %d"", &m, &n);
		i++;
	}while (m <= 0 || m > 100 || n <= 0 || n > 100);

	printf (""Unesite elemente matrice: "");
	for (i = 0; i < m; i++)
	{
		for(j = 0; j < n; j++)
		{
			scanf (""%lf"", &matrica[i][j]);
		}
	}

	for (i = 0; i < m - 1; i++)
	{
		for (j = 0; j < n - 1; j++)
		{
			if (fabs (matrica[i][j] - matrica[i+1][j+1]) > eps)
			{
				JeLiSeDesioBreak++;
				break;
			}
		}

		if (JeLiSeDesioBreak == 1)
		{
			printf (""Matrica nije ni cirkularna ni Teplicova"");
			break;
		}
	}

	if (JeLiSeDesioBreak == 0)
	{
		for (i = 0; i < m-1; i++)
		{
			if (m == 1)
				break;
			for (j = 0; j < n; j++)
			{
				if (fabs (matrica[i][n-1] - matrica[i+1][0]) > eps)
				{
					JeLiSeDesioBreak++;
					printf(""Matrica je Teplicova"");
					break;
				}
				
			}
			if (JeLiSeDesioBreak == 1)
			break;
		}
		if (JeLiSeDesioBreak == 0)
		printf (""Matrica je cirkularna"");

	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define g 0.000000000000000000000001
int main()
{
    double niz[100][100];
    int m,n,i=0,j,a=0;
    do{
        if(i>0)
        printf(""Pogresan unos!\n"");
        printf(""Unesite M i N: "");
        scanf(""%d %d"",&m,&n);
        i++;
    }while(m<=0 || m>100 || n<=0 || n>100);
    printf(""Unesite elemente matrice: "");
    i=0;
    while(i<m)
    {
        j=0;
        while(j<n)
        {
            scanf(""%lf"",&niz[i][j]);
            j++;
        }
        i++;
    }
    for(i=0;i<m-1;i++)
    {
        for(j=0;j<n-1;j++)
        {
            if(fabs(niz[i][j]-niz[i+1][j+1])>g)
            {
                a++;
                break;
            }
        }
        if(a==1)
        {
            printf(""Matrica nije ni cirkularna ni Teplicova"");
        }
    }
    if(a==0)
    {
        for(i=0;i<m-1;i++)
        {
            if(m==1)
            {
                break;
            }
            for(j=0;j<n;j++)
            {
                if(fabs(niz[i][n-1]-niz[i+1][0])>g)
                {
                    a++;
                    printf(""Matrica je Teplicova "");
                    break;
                }
            }
            if(a==1)
            {
                break;
            }
        }
        if(a==0)
        {
            printf(""Matrica je cirkularna "");
        }
    }
    return 0;
}
"
1217,83,83,0,67,A2016/Z3/Z2/student6877,A2016/Z3/Z2/student4420,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

#define velniz1 10
#define velniz2 20

void ubaci(int *niz,int vel1)
{
	int i,suma=0,zadcifra,broj;
	for(i=vel1-1;i>=0;i--)
	*(niz+2*i)=*(niz+i);
	for(i=0;i<vel1*2;i++)
	{
		if (i%2==1)
		{
			broj=*(niz+i-1);
			while(broj!=0)
			{
			zadcifra=broj%10;
			suma=suma+zadcifra;
			broj=broj/10;
			}
		suma=abs(suma);	
		*(niz+i)=suma;
		suma=0;
		}
	}
}

int izbaci(int *niz,int vel2)
{
	int i,j,k,prvi,drugi,temp;
	for(i=0;i<vel2;i++)
	{
		prvi=0;
		drugi=1;
		for(j=0;j<1000;j++)
		{
			temp=prvi+drugi;
			prvi=drugi;
			drugi=temp;
			if( *(niz+i)==temp)
			{
				for(k=i;k<vel2-1;k++)
				{
					*(niz+k)=*(niz+k+1);
				}
			vel2--;
			i--;
			break;
			}
		}
	}
    return vel2;	
}

int main() {
	int niz[20],i,brclanova;
	printf(""\nUnesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	scanf(""%d"",&niz[i]);
	ubaci(niz,velniz1);
	brclanova=izbaci(niz,velniz2);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<brclanova;i++)
	{
		if(i<(brclanova-1)) printf(""%d, "",niz[i]);
		else printf(""%d. "",niz[i]);
	}
	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define brel 10
#define brel2 20
/* Funkcija ubaci */ 
void ubaci(int *niz,int velicina){
	int i,cifra,broj,broj2=0;
	for (i=velicina-1;i>=0;i--){    /* Pomjeranje clanova niza */ 
		*(niz+2*i)=*(niz+i);
	}
	for (i=0;i<velicina*2;i++){
		if (i%2==1){
			broj=*(niz+i-1);
			while (broj!=0){        /* Dodavanje clanova sabiranjem cifara prethodnog clana */ 
				cifra=broj%10;
				broj2+=cifra;
				broj/=10;
		    }
		    broj2=abs(broj2);
			*(niz+i)=broj2;
			broj2=0;
		}
	}
}
 
/* Funkcija izbaci */ 
/* Formiranje pretlji za prolazak po nizu i uporedivanje njegovih clanova sa Fibonaccijevim nizom, izbacivanje jednakih */
int izbaci(int *niz,int velicina){
	int i,j,m,prvi=0,drugi=1,slijedeci;
	for (i=0;i<velicina;i++){
		prvi=0;
		drugi=1;
		for (j=1;j<10000;j++){   
			if (j==1) slijedeci=j;                
			else {
				slijedeci=prvi+drugi;
				prvi=drugi;
				drugi=slijedeci;
			}
			if (*(niz+i)==slijedeci){
				for (m=i;m<velicina-1;m++){
						*(niz+m)=*(niz+m+1);
				}
				velicina--;
				i--;
				break;
			}
		}
	}
	return velicina;
}
 
int main() {
	int niz[20],i,n;
 
	/* Unos elemenata */ 
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0;i<10;i++){
		scanf(""%d"",&niz[i]);
	}
 
	/* Pozivanje funkcije ubaci */ 
 
	ubaci(niz,brel);
 
	/* Pozivanje funkcije izbaci */ 
 
	n=izbaci(niz,brel2);
 
	/* Ispis niza */
	printf (""Modificirani niz glasi: "");
	for (i=0;i<n;i++){
		if (i<(n-1)){
			printf (""%d, "",niz[i]);
	    }
	    else {
	    	printf (""%d. "",niz[i]);
	    }
	}
 
	return 0;
}"
1227,94,94,0,71,A2016/Z3/Z3/student7085,A2016/Z3/Z3/student5624,"#include <stdio.h>

int main() {
	int M,N,mat[200][200],i,j,k,l,pret;
	/*Provjeravamo da li su M i N prirodni brojevi i da li su manji od 200.
	Ako nisu, ispisuje se poruka da brojevi nisu u trazenom opsegu i korisnik ponovo unosi dimenzije matrice*/
	do{
	printf(""Unesite brojeve M i N: "");
	scanf(""%d %d"",&M,&N);
	if(M>200 ||M<=0 || N>200 || N<=0) printf(""Brojevi nisu u trazenom opsegu.\n"");
	}
	while(M>200 || M<=0 || N>200 || N<=0);
	/* Unos matrice */
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			scanf(""%d"", &mat[i][j]);
		}
	}
	
    /*Poredimo i-ti i k-ti red matrice.*/
   	for(i=0;i<M;i++){
		for(k=i+1;k<M;k++){
           pret=1; 
			for(j=0;j<N;j++){ 
				if(mat[i][j]!=mat[k][j])
				pret=0; 
			}
	/*Ukoliko su redovi isti, znaci da se red ponavlja i treba ga izbaciti */		
	       if(pret==1){
	         for(l=k;l<M-1;l++){
		       for(j=0;j<N;j++){
			     mat[l][j]=mat[l+1][j];
		       }
	          }
	          M--;
	          k--;
	       }
	    }
	}
			
	/*Analogno kao sa redovima, postupak se ponavlja sa kolonama */
	for(j=0;j<N;j++){
		for(k=j+1;k<N;k++){
			pret=1;
			for(i=0;i<M;i++){
				if(mat[i][j]!=mat[i][k])
				pret=0;
			}
				if(pret==1){
					for(l=k;l<N-1;l++){
						for(i=0;i<M;i++){
							mat[i][l]=mat[i][l+1];
						}
						
					}
					N--;
				    k--;
				}
				
		}
	}
	
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			printf(""%5d"",mat[i][j]);
		}
		printf(""\n"");
	}
	
	
	
	return 0;
}
","#include <stdio.h>

int main() {
    int matrica[200][200], i, j, k, l, m, n,pret,pret1,p;
    do{
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"", &m, &n);
        if(m<=0||n<=0||m>200||n>200) 
            printf(""Brojevi nisu u trazenom opsegu.\n"");
    } 
    while(m<=0||n<=0||m>200||n>200); // petlja osigurava da su brojevi u trazenom opsegu
    printf(""Unesite elemente matrice: "");
    for(i=0;i<m;i++)
        for(j=0;j<n;j++)
            scanf(""%d"",&matrica[i][j]);
    for(i=0;i<m;i++){
        for(k=i+1;k<m;k++){ 
            pret=1;
            for(j=0;j<n;j++){
                if(matrica[i][j]!=matrica[k][j]) pret=0; //ispitujemo da li su redovi matrice jednaki
            } 
            if(pret==1){ //izbacivanje jednakog reda matrice
                for(l=k;l<m-1;l++){
                    for(p=0;p<n;p++)
                        matrica[l][p]=matrica[l+1][p];
                }
                m--;
                k--;
            }
        }
    }
    for(i=0;i<n;i++){
        for(k=i+1;k<n;k++){
            pret1=1;
            for(j=0;j<m;j++){
                if(matrica[j][i]!=matrica[j][k]) pret1=0; //ispitujemo da li su kolone matrice jednake
            }
            if(pret1==1){//izbacivanje jednake kolone matrice
                for(l=k;l<n-1;l++){
                    for(p=0;p<m;p++)
                        matrica[p][l]=matrica[p][l+1];
                }
                    n--;
                    k--;
            }
        }
    }
    printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
    for(i=0;i<m;i++){
        for(j=0;j<n;j++)
            printf(""%5d"",matrica[i][j]);
        printf(""\n"");
    }
    return 0;
}
"
1243,86,86,0,85,A2016/Z1/Z3/student4824,A2016/Z1/Z3/student4934,"#include <stdio.h>
int main() {
	int UBV,C,S,B,V,P,M;
	float UDIO;
	char unos;
	C=0;
	B=0;
	S=0;
	V=0;
	P=0;
	M=0;
	printf (""Unesite vozila: "");
	do {
		scanf(""%c"", &unos);
		if (unos =='C' || unos =='c')
		{
			C++;
			if (C>M) 
			{ M=C;
		}
			
		} else if (unos =='B' || unos =='b')
		{
			B++;
			if(B>M)
			{M=B;
			}
			
		} else if (unos == 'S' || unos == 's')
		{
			S++;
			if(S>M)
			{M=S;
				
			}
		} else if(unos == 'V' || unos== 'v')
		{
			V++;
			if(V>M)
			{M=V;
			}
			
		} else if (unos == 'P' || unos == 'p')
		{
			P++;
			if(P>M)
			{M=P;
			}
			
		} else if (!(unos =='K'|| unos =='k'))
		{
			printf(""Neispravan unos\n"");
			
		}   
		
	} while (!(unos == 'K' || unos == 'k'));
	    UBV=(C+B+S+V+P);
	    UDIO=(M*100.)/UBV;
	    if (UBV==0)
	    {
	    	printf(""\nUkupno evidentirano %d vozila."",UBV);
	    	printf(""\nNajpopularnija boja je crna (0.00%%)."",UDIO);
	    	return 0;
	    } else 
	    { 
		printf (""Ukupno evidentirano %d vozila."",UBV);
	    	
	    }
		if (M==C) 
		{
			printf(""\nNajpopularnija boja je crna (%.2f%%). "",UDIO);
			return 0;
			
		} else if (M==S)
		{
			printf(""\nNajpopularnija boja je siva (%.2f%%). "",UDIO);
			return 0;
			
		} else if (M==B)
		{ 
			printf(""\nNajpopularnija boja je bijela (%.2f%%). "",UDIO);
			return 0;
			
		} else if (M==V)
		{
			printf(""\nNajpopularnija boja je crvena (%.2f%%). "",UDIO);
			return 0;
			
		} else if (M==P)
		{ 
			printf(""\nNajpopularnija boja je plava (%.2f%%). "",UDIO);
			return 0;
			
		}
}
","#include <stdio.h>
int main () {
    int C,B,S,V,P,U,M;
    double X;
    char slovo;
    C=0;
    B=0;
    S=0;
    V=0;
    P=0;
    M=0;
    X=0;
   printf (""Unesite vozila: "");
   do {
    scanf (""%c"", &slovo);
        if (slovo=='c'||slovo=='C') {
            C++;
            if (C>M) {
                M=C;
            }
        } else if (slovo=='b'||slovo=='B') {
            B++;
            if (B>M) {
                M=B;
            }
        } else if (slovo=='s'||slovo=='S') {
            S++;
            if (S>M) {
                M=S;
            }
        } else if (slovo=='v'||slovo=='V') {
            V++;
            if (V>M) {
                M=V;
            }
        } else if (slovo=='p'||slovo =='P') {
            P++;
            if (P>M) {
                M=P;
            }
        } else if (!(slovo=='k'||slovo=='K')) {
            printf (""Neispravan unos\n"");
        }
    } while (!(slovo== 'k' || slovo=='K'));
    U=C+B+V+P+S;
    X=(M*100.)/U;
   if (U==0) {
   printf (""Ukupno evidentirano 0 vozila.\n"");
   printf (""Najpopularnija boja je crna (0.00%).\n"");
   return 0;
    }
    else {printf (""Ukupno evidentirano %d vozila.\n"",U);
    }
    if (M==C) {
    printf (""Najpopularnija boja je crna (%.2f%%)."", X);
        return 0;
    } else if (M==B) {
        printf (""Najpopularnija boja je bijela (%.2f%%)."", X);
        return 0;
    } else if (M==S) {
        printf (""Najpopularnija boja je siva (%.2f%%)."", X);
        return 0;
    } else if (M==V) {
        printf (""Najpopularnija boja je crvena (%.2f%%)."", X);
        return 0;
    } else if (M==P) {
        printf (""Najpopularnija boja je plava (%.2f%%)."", X);
        return 0;
    }
    return 0;
}
"
1258,99,99,0,372,A2016/Z5/Z3/student7802,A2016/Z5/Z3/student3386,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200


struct Vrijeme
{
	int sati,minute,sekunde;
};
struct Cas
{
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};
/*vraca pokazivac na sljedeci znak*/
char unesi(char niz[],int velicina)
{
	char znak=getchar();
	if(velicina<0)
		return znak;
	if(znak=='\n')
		znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\n')
	{
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
	return znak;
}
/*cistim buffer*/
void ocisti(char znak)
{
	while(znak!='\n')
		znak=getchar();
}
int ucitaj_datoteku(struct Cas raspored[])
{
	FILE *ulaz=fopen(""raspored.dat"",""rb+"");
	int greska=0;
	FILE *ulaz1=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL || ulaz1==NULL)
	{
		greska=1;
		return 0;
	}
	int ucitano1=fread(raspored,sizeof(struct Cas),KAPACITET,ulaz1);
	fclose(ulaz);
	fclose(ulaz1);
	if(greska==0)
		return ucitano1;
}
int mmm(int d)
{
	if(d==0)
		return -1;
	
	return 0;
}
/*funkcija vraca zadnji sat zadnjeg casa*/
int MAX(struct Cas raspored[], int broj_casova)
{
	int brojac=1;
	int i,max=0,indexmaxa=0;
	for(i=0;i<broj_casova;i++)
	{
		brojac++;
		if(raspored[i].kraj.sati>max)
		{
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	/*ako su minute 0 smanjimo sate za 1*/
	max=max-mmm(raspored[indexmaxa].kraj.minute);
	return max;
}
/*funkcija vraca kada pocinje prvi cas*/
int MIN(struct Cas raspored[], int broj_casova)
{
	int i,min=25;
	for(i=0;i<broj_casova;i++)
		if(raspored[i].pocetak.sati<min)
			min=raspored[i].pocetak.sati;
	return min;
}
/*poredi dva vremena*/
int PorediVrj(struct Vrijeme t1, struct Vrijeme t2)
{
	int sat=t1.sati*3600, sat1=t2.sati*3600,min=t1.minute*60,min1=t2.minute*60;
	if(sat+min+t1.sekunde>sat1+min1+t2.sekunde)
		return 1;
	if(sat+min+t1.sekunde<sat1+min1+t2.sekunde)
		return -1;
	if(sat+min+t1.sekunde == sat1+min1+t2.sekunde)
		return 0;
}
int prvi(struct Cas raspored [], int casova)
{
	int i,j=25;
	for(i=0;i<casova;i++)
	{
		if(raspored[i].pocetak.sati<j)
			j=raspored[i].pocetak.sati;
	}
	return j;
}
int zadnji(struct Cas raspored [], int casova)
{
	int i,j=0,index=0;
	for(i=0;i<casova;i++)
	{
		if(raspored[i].pocetak.sati>j)
			j=raspored[i].kraj.sati;
		index=i;
	}
	if(raspored[index].kraj.minute==0)
		j--;
	return j;
}
void ispis_rasporeda(struct Cas raspored [], int broj_casova)
{
	int i,j,k,flag2=1,index_min=-1;
	/*nalazim odakle dokle treba ispisati*/
	int last=zadnji(raspored,broj_casova);
	int first=prvi(raspored,broj_casova);
	char sedmica[][7]={""PON"",""UTO"",""SRI"",""CET"",""PET"",""SUB""};
	char sati[][25]={""0:00"",""1:00"",""2:00"",""3:00"",""4:00"",""5:00"",""6:00"",""7:00"",""8:00"",""9:00"",""10:00"",""11:00"",""12:00"",""13:00"",""14:00"",""15:00"",""16:00"",""17:00"",""18:00"",""19:00"",""20:00"",""21:00"",""22:00"",""23:00""};
	printf(""\n"");
	printf(""%-7s"","" "");
	for(i=0;i<6;i++)
	{
		printf(""%-10s"",sedmica[i]);
	}
	printf(""\n"");
	for(i=first;i-1<last;i++)
	{
		printf(""%-7s"",sati[i]);
		for(k=1;k<7;k++)
		{
			index_min=-1;
			flag2=1;
			for(j=0;j<broj_casova;j++)
			{
				/*ako je u intervalu ispisujemo ga*/
				if(raspored[j].dan_u_sedmici==k)
				{
					if((raspored[j].pocetak.sati<=i)&&(raspored[j].kraj.sati>=i)&& !(raspored[j].kraj.sati==i && raspored[j].kraj.minute==0))
					{
						if(flag2)
						{
							index_min=j;
							flag2=0;
						}
						else
							if(PorediVrj(raspored[j].pocetak,raspored[index_min].pocetak)== -1)
							{
								index_min=j;
							}
					}
				}	
			}
			if(index_min==-1)
			{
				printf(""%-10s"","" "");
			}
			else
				if(index_min!=-1)
				{
					printf(""%-10s"",raspored[index_min].predmet);
				}
				
		}
		printf(""\n"");
	}
}
void ispisi_dan(struct Cas raspored[],int broj_casova,int dan)
{
	int i;
	printf(""Uneseni su casovi: "");
	int k=1;
	for(i=0;i<broj_casova;i++)
	{
		/*printamo sve predmete u tom danu*/
		if(raspored[i].dan_u_sedmici==dan)	
		{
			printf(""\n"");
			printf(""%d) %s ("",k++,raspored[i].predmet);
			printf(""%02d:"",raspored[i].pocetak.sati);
			printf(""%02d-"",raspored[i].pocetak.minute);
			printf(""%02d:"",raspored[i].kraj.sati);
			printf(""%02d)"",raspored[i].kraj.minute);
			
		}
	}
}
void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj)
{
	int i,k=0,n=1;
	for(i=0;i<broj_casova;i++)
	{
		/*ako im je isti dan redni broj se povecava*/
		if(raspored[i].dan_u_sedmici==dan)
		{
			k++;
			n++;
		}
		/*ako je nadjen pravi redni broj izbacujemo*/
		if(k==redni_broj)
		{
			int j;
			for(j=i;j<broj_casova-1;j++)
			{
				raspored[j]=raspored[j+1];
			}
			if(n>0)
				break;
			return;
		}
	}
}
int minute(int min, int sati)
{
	return min+sati*60;
}
int prekl(int minpoc1, int minkraj1, int minpoc2, int minkraj2)
{
	return(minpoc1<minpoc2 && minkraj1>minpoc2 || minpoc2<minpoc1 && minkraj2>minkraj1 || minpoc1<minkraj2 && minkraj1>minkraj2);
}
int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas)
{
	int i;
	for(i=0;i<broj_casova;i++)
	{
		int vr=prekl(minute(raspored[i].pocetak.minute,raspored[i].pocetak.sati),minute(raspored[i].kraj.minute,raspored[i].kraj.sati),minute(cas.pocetak.minute,cas.pocetak.sati),minute(cas.kraj.minute,cas.kraj.sati));
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (minute(cas.pocetak.minute,cas.pocetak.sati)==minute(raspored[i].pocetak.minute,raspored[i].pocetak.sati) || minute(raspored[i].kraj.minute,raspored[i].kraj.sati)==minute(cas.kraj.minute,cas.kraj.sati)))
			return 1;
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && vr==1)
			return 1;
		
	}
	return 0;
}
int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje)
{
	if(broj_casova==200)
		return 0;
	int i,j,preklop;
	for(i=0;i<6;i++)
		for(j=9;j<=19-trajanje;j++)
		{
		/*trazimo gdje ima mjesta za nas cas*/	
		struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
		cas.pocetak.minute=0;
		cas.kraj.minute=0;
		cas.pocetak.sekunde=0;
		cas.pocetak.minute=0;
		strcpy(cas.predmet,predmet);
		preklop=preklapanje(raspored,broj_casova,cas);
			if(preklop==0)
			{
				/*dodjela u slucaju da ima mjesta*/
				raspored[broj_casova]=cas;
				return 1;
			}
		}
		return 0;
}
void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena)
{
	int i,redni=0;
	for(i=0;i<broj_casova;i++)
	{
		if(raspored[i].dan_u_sedmici==dan)
			redni++;
		if(redni_broj==redni)
			raspored[i]=promjena;
	}
}
int zapisi_datoteku(struct Cas raspored[], int broj_casova)
{
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	FILE *ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL || ulaz1==NULL)
	{
		return 0;
	}
	int vel=sizeof(struct Cas);
	int nova=fwrite(raspored,vel,broj_casova,ulaz);
	fclose(ulaz);
	fclose(ulaz1);
	if(nova>0)
		return 1;
	else
		return 0;
}
int main() {
	int opcija,broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do
	{
		printf(""1) Ispis rasporeda\n"");
		printf(""2) Dodavanje casa\n"");
		printf(""3) Promjena casa\n"");
		printf(""4) Brisanje casa\n"");
		printf(""0) Kraj rada\n"");
		printf(""Izaberite opciju: "");
			
			scanf(""%d"",&opcija);
			if(opcija==2)
			{
				int br_casova,dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				ocisti(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				switch(dodan)
				{
					case 1: broj_casova++; break;
					default: printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
					
				}
				
			}
			if(opcija==0)
				zapisi_datoteku(raspored,broj_casova);
			if(opcija==1)
				ispis_rasporeda(raspored,broj_casova);
			if(opcija==3)
			{
				struct Cas promjena;
				int dan,redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				promjena.dan_u_sedmici=dan;
				printf(""\nIzaberite koji cas zelite promijeniti: "");
				scanf(""%d"",&redni);
				printf(""Naziv predmeta: "");
				char predmet[10];
				if(opcija!=0)
					ocisti(unesi(predmet,10));
				char *q=promjena.predmet,*p=predmet;
				char znak;
				strcpy(q,p);
				printf(""Vrijeme pocetka: "");
				scanf(""%d"",&promjena.pocetak.sati);
				scanf(""%c"",&znak);
				scanf(""%d"",&promjena.pocetak.minute);
				printf(""Vrijeme zavrsetka: "");
				scanf(""%d%c"",&promjena.kraj.sati,&znak);
				scanf(""%d"",&promjena.kraj.minute);
				if(opcija!=0)
				promijeni_cas(raspored,broj_casova,dan,redni,promjena);
				
			}
			if(opcija==4)
			{
				int dan,redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"",&dan);
				if(opcija!=0)
				{
					ispisi_dan(raspored,broj_casova,dan);
					printf(""\nIzaberite koji cas zelite obrisati: "");
					scanf(""%d"",&redni);
					obrisi_cas(raspored,broj_casova,dan,redni);
					broj_casova=broj_casova-1;
					printf(""Cas obrisan\n"");
				}
			}
	}while(opcija!=0);
	return 0;
}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200


struct Vrijeme
{
	int sati,minute,sekunde;
};
struct Cas
{
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};
/*vraca pokazivac na sljedeci znak*/
char unesi(char niz[],int velicina)
{
	char znak=getchar();
	if(velicina<0)
		return znak;
	if(znak=='\n')
		znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\n')
	{
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
	return znak;
}
/*cistim buffer*/
void ocisti(char znak)
{
	while(znak!='\n')
		znak=getchar();
}
int ucitaj_datoteku(struct Cas raspored[])
{
	FILE *ulaz=fopen(""raspored.dat"",""rb+"");
	int greska=0;
	FILE *ulaz1=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL || ulaz1==NULL)
	{
		greska=1;
		return 0;
	}
	int ucitano1=fread(raspored,sizeof(struct Cas),KAPACITET,ulaz1);
	fclose(ulaz);
	fclose(ulaz1);
	if(greska==0)
		return ucitano1;
}
int mmm(int d)
{
	if(d==0)
		return -1;
	
	return 0;
}
/*funkcija vraca zadnji sat zadnjeg casa*/
int MAX(struct Cas raspored[], int broj_casova)
{
	int brojac=1;
	int i,max=0,indexmaxa=0;
	for(i=0;i<broj_casova;i++)
	{
		brojac++;
		if(raspored[i].kraj.sati>max)
		{
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	/*ako su minute 0 smanjimo sate za 1*/
	max=max-mmm(raspored[indexmaxa].kraj.minute);
	return max;
}
/*funkcija vraca kada pocinje prvi cas*/
int MIN(struct Cas raspored[], int broj_casova)
{
	int i,min=25;
	for(i=0;i<broj_casova;i++)
		if(raspored[i].pocetak.sati<min)
			min=raspored[i].pocetak.sati;
	return min;
}
/*poredi dva vremena*/
int PorediVrj(struct Vrijeme t1, struct Vrijeme t2)
{
	int sat=t1.sati*3600, sat1=t2.sati*3600,min=t1.minute*60,min1=t2.minute*60;
	if(sat+min+t1.sekunde>sat1+min1+t2.sekunde)
		return 1;
	if(sat+min+t1.sekunde<sat1+min1+t2.sekunde)
		return -1;
	if(sat+min+t1.sekunde == sat1+min1+t2.sekunde)
		return 0;
}
int prvi(struct Cas raspored [], int casova)
{
	int i,j=25;
	for(i=0;i<casova;i++)
	{
		if(raspored[i].pocetak.sati<j)
			j=raspored[i].pocetak.sati;
	}
	return j;
}
int zadnji(struct Cas raspored [], int casova)
{
	int i,j=0,index=0;
	for(i=0;i<casova;i++)
	{
		if(raspored[i].pocetak.sati>j)
			j=raspored[i].kraj.sati;
		index=i;
	}
	if(raspored[index].kraj.minute==0)
		j--;
	return j;
}
void ispis_rasporeda(struct Cas raspored [], int broj_casova)
{
	int i,j,k,flag2=1,index_min=-1;
	/*nalazim odakle dokle treba ispisati*/
	int last=zadnji(raspored,broj_casova);
	int first=prvi(raspored,broj_casova);
	char sedmica[][7]={""PON"",""UTO"",""SRI"",""CET"",""PET"",""SUB""};
	char sati[][25]={""0:00"",""1:00"",""2:00"",""3:00"",""4:00"",""5:00"",""6:00"",""7:00"",""8:00"",""9:00"",""10:00"",""11:00"",""12:00"",""13:00"",""14:00"",""15:00"",""16:00"",""17:00"",""18:00"",""19:00"",""20:00"",""21:00"",""22:00"",""23:00""};
	printf(""\n"");
	printf(""%-7s"","" "");
	for(i=0;i<6;i++)
	{
		printf(""%-10s"",sedmica[i]);
	}
	printf(""\n"");
	for(i=first;i-1<last;i++)
	{
		printf(""%-7s"",sati[i]);
		for(k=1;k<7;k++)
		{
			index_min=-1;
			flag2=1;
			for(j=0;j<broj_casova;j++)
			{
				/*ako je u intervalu ispisujemo ga*/
				if(raspored[j].dan_u_sedmici==k)
				{
					if((raspored[j].pocetak.sati<=i)&&(raspored[j].kraj.sati>=i)&& !(raspored[j].kraj.sati==i && raspored[j].kraj.minute==0))
					{
						if(flag2)
						{
							index_min=j;
							flag2=0;
						}
						else
							if(PorediVrj(raspored[j].pocetak,raspored[index_min].pocetak)== -1)
							{
								index_min=j;
							}
					}
				}	
			}
			if(index_min==-1)
			{
				printf(""%-10s"","" "");
			}
			else
				if(index_min!=-1)
				{
					printf(""%-10s"",raspored[index_min].predmet);
				}
				
		}
		printf(""\n"");
	}
}
void ispisi_dan(struct Cas raspored[],int broj_casova,int dan)
{
	int i;
	printf(""Uneseni su casovi: "");
	int k=1;
	for(i=0;i<broj_casova;i++)
	{
		/*printamo sve predmete u tom danu*/
		if(raspored[i].dan_u_sedmici==dan)	
		{
			printf(""\n"");
			printf(""%d) %s ("",k++,raspored[i].predmet);
			printf(""%02d:"",raspored[i].pocetak.sati);
			printf(""%02d-"",raspored[i].pocetak.minute);
			printf(""%02d:"",raspored[i].kraj.sati);
			printf(""%02d)"",raspored[i].kraj.minute);
			
		}
	}
}
void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj)
{
	int i,k=0,n=1;
	for(i=0;i<broj_casova;i++)
	{
		/*ako im je isti dan redni broj se povecava*/
		if(raspored[i].dan_u_sedmici==dan)
		{
			k++;
			n++;
		}
		/*ako je nadjen pravi redni broj izbacujemo*/
		if(k==redni_broj)
		{
			int j;
			for(j=i;j<broj_casova-1;j++)
			{
				raspored[j]=raspored[j+1];
			}
			if(n>0)
				break;
			return;
		}
	}
}
int minute(int min, int sati)
{
	return min+sati*60;
}
int prekl(int minpoc1, int minkraj1, int minpoc2, int minkraj2)
{
	return(minpoc1<minpoc2 && minkraj1>minpoc2 || minpoc2<minpoc1 && minkraj2>minkraj1 || minpoc1<minkraj2 && minkraj1>minkraj2);
}
int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas)
{
	int i;
	for(i=0;i<broj_casova;i++)
	{
		int vr=prekl(minute(raspored[i].pocetak.minute,raspored[i].pocetak.sati),minute(raspored[i].kraj.minute,raspored[i].kraj.sati),minute(cas.pocetak.minute,cas.pocetak.sati),minute(cas.kraj.minute,cas.kraj.sati));
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (minute(cas.pocetak.minute,cas.pocetak.sati)==minute(raspored[i].pocetak.minute,raspored[i].pocetak.sati) || minute(raspored[i].kraj.minute,raspored[i].kraj.sati)==minute(cas.kraj.minute,cas.kraj.sati)))
			return 1;
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && vr==1)
			return 1;
		
	}
	return 0;
}
int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje)
{
	if(broj_casova==200)
		return 0;
	int i,j,preklop;
	for(i=0;i<6;i++)
		for(j=9;j<=19-trajanje;j++)
		{
		/*trazimo gdje ima mjesta za nas cas*/	
		struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
		cas.pocetak.minute=0;
		cas.kraj.minute=0;
		cas.pocetak.sekunde=0;
		cas.pocetak.minute=0;
		strcpy(cas.predmet,predmet);
		preklop=preklapanje(raspored,broj_casova,cas);
			if(preklop==0)
			{
				/*dodjela u slucaju da ima mjesta*/
				raspored[broj_casova]=cas;
				return 1;
			}
		}
		return 0;
}
void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena)
{
	int i,redni=0;
	for(i=0;i<broj_casova;i++)
	{
		if(raspored[i].dan_u_sedmici==dan)
			redni++;
		if(redni_broj==redni)
			raspored[i]=promjena;
	}
}
int zapisi_datoteku(struct Cas raspored[], int broj_casova)
{
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	FILE *ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL || ulaz1==NULL)
	{
		return 0;
	}
	int vel=sizeof(struct Cas);
	int nova=fwrite(raspored,vel,broj_casova,ulaz);
	fclose(ulaz);
	fclose(ulaz1);
	if(nova>0)
		return 1;
	else
		return 0;
}
int main() {
	int opcija,broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do
	{
		printf(""1) Ispis rasporeda\n"");
		printf(""2) Dodavanje casa\n"");
		printf(""3) Promjena casa\n"");
		printf(""4) Brisanje casa\n"");
		printf(""0) Kraj rada\n"");
		printf(""Izaberite opciju: "");
			
			scanf(""%d"",&opcija);
			if(opcija==2)
			{
				int br_casova,dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				ocisti(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				switch(dodan)
				{
					case 1: broj_casova++; break;
					default: printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
					
				}
				
			}
			if(opcija==0)
				zapisi_datoteku(raspored,broj_casova);
			if(opcija==1)
				ispis_rasporeda(raspored,broj_casova);
			if(opcija==3)
			{
				struct Cas promjena;
				int dan,redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				promjena.dan_u_sedmici=dan;
				printf(""\nIzaberite koji cas zelite promijeniti: "");
				scanf(""%d"",&redni);
				printf(""Naziv predmeta: "");
				char predmet[10];
				if(opcija!=0)
					ocisti(unesi(predmet,10));
				char *q=promjena.predmet,*p=predmet;
				char znak;
				strcpy(q,p);
				printf(""Vrijeme pocetka: "");
				scanf(""%d"",&promjena.pocetak.sati);
				scanf(""%c"",&znak);
				scanf(""%d"",&promjena.pocetak.minute);
				printf(""Vrijeme zavrsetka: "");
				scanf(""%d%c"",&promjena.kraj.sati,&znak);
				scanf(""%d"",&promjena.kraj.minute);
				if(opcija!=0)
				promijeni_cas(raspored,broj_casova,dan,redni,promjena);
				
			}
			if(opcija==4)
			{
				int dan,redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"",&dan);
				if(opcija!=0)
				{
					ispisi_dan(raspored,broj_casova,dan);
					printf(""\nIzaberite koji cas zelite obrisati: "");
					scanf(""%d"",&redni);
					obrisi_cas(raspored,broj_casova,dan,redni);
					broj_casova=broj_casova-1;
					printf(""Cas obrisan\n"");
				}
			}
	}while(opcija!=0);
	return 0;
}
"
1259,98,98,0,69,A2016/Z5/Z1/student3133,A2016/Z5/Z1/student4824,"#include <stdio.h>

struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};



double daj_prosjek(int* ocjene, int br){
	double prosjek;
	int suma=0, i;
	if(br==0){
		prosjek=5;
		return prosjek;
	}
	for(i=0;i<br;i++){
		suma+=ocjene[i];
		if(ocjene[i]==5){
			prosjek=5;
			return prosjek;
		}
	}
	prosjek=(float)suma/i;
	return prosjek;
}

void najbolji (struct Student studenti[], int velicina, double prosjek){
	double max=prosjek;
	int i, j, maxi1, maxi2, maxi3;
	for(j=0;j<velicina;j++){
	for(i=0;i<velicina;i++){
		if(daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena)>max){
		max=daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena);
		maxi1=i;}
	}
	printf(""%s %s\n"", studenti[maxi1].ime, studenti[maxi1].prezime);
	max=prosjek;
	for(i=0;i<velicina;i++){
		if(i!=maxi1&&daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena)>max){
		max=daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena);
		maxi2=i;	
		}
	}
	printf(""%s %s\n"", studenti[maxi2].ime, studenti[maxi2].prezime);
	max=prosjek;
	for(i=0;i<velicina;i++){
		if(i!=maxi1&&i!=maxi2&&daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena)>max){
		max=daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena);
		maxi3=i;	
		}
	}
	printf(""%s %s"", studenti[maxi3].ime, studenti[maxi3].prezime);
	}
}

int genijalci(struct Student studenti[], int velicina, double prosjek){
	int i, j, izbacivanja=0;
	for(i=0;i<velicina;i++){
		if(daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena)<prosjek){
			izbacivanja++;
			for(j=i;j<velicina-1;j++){
				studenti[j]=studenti[j+1];
			}
			velicina--;
			i--;
		}
	}
  //	najbolji(studenti, velicina, prosjek);
	return velicina;
}

int main() {

	return 0;
}
","#include <stdio.h>

struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};



double daj_prosjek(int* ocjene, int br){
	double prosjek;
	int suma=0, i;
	if(br==0){
		prosjek=5;
		return prosjek;
	}
	for(i=0;i<br;i++){
		suma+=ocjene[i];
		if(ocjene[i]==5){
			prosjek=5;
			return prosjek;
		}
	}
	prosjek=(float)suma/i;
	return prosjek;
}

void najbolji (struct Student studenti[], int velicina, double prosjek){
	double max=prosjek;
	int i, j, maxi1, maxi2, maxi3;
	for(j=0;j<velicina;j++){
	for(i=0;i<velicina;i++){
		if(daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena)>max){
		max=daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena);
		maxi1=i;}
	}
	printf(""%s %s\n"", studenti[maxi1].ime, studenti[maxi1].prezime);
	max=prosjek;
	for(i=0;i<velicina;i++){
		if(i!=maxi1&&daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena)>max){
		max=daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena);
		maxi2=i;	
		}
	}
	printf(""%s %s\n"", studenti[maxi2].ime, studenti[maxi2].prezime);
	max=prosjek;
	for(i=0;i<velicina;i++){
		if(i!=maxi1&&i!=maxi2&&daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena)>max){
		max=daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena);
		maxi3=i;	
		}
	}
	printf(""%s %s"", studenti[maxi3].ime, studenti[maxi3].prezime);
	}
}

int genijalci(struct Student studenti[], int velicina, double prosjek){
	int i, j, izbacivanja=0;
	for(i=0;i<velicina;i++){
		if(daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena)<prosjek){
			izbacivanja++;
			for(j=i;j<velicina-1;j++){
				studenti[j]=studenti[j+1];
			}
			velicina--;
			i--;
		}
	}
  //	najbolji(studenti, velicina, prosjek);
	return velicina;
}

int main() {

	return 0;
}
"
1266,85,85,0,49,A2016/Z2/Z3/student6617,A2016/Z2/Z3/student4824,"#include <stdio.h>
#include <stdlib.h>
int main() {
	int n,m,e,b,p,i,niz1[20][20],u,l;
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&n);
	while (n>10 || n<=0)
	{
		printf(""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&n);
	}
	int niz[20][20];
	for(u=0;u<=19;u++)
	{
		for(l=0;l<=19;l++)
		{
			niz[u][l]=0;
			niz1[u][l]=1;
		}
	}
	for(m=1;m<=n;m++) {
		printf(""Unesite %d. tacku: "",m);
		scanf(""%d %d"",&e,&b);
		while((e<0 && b<0)||(e>19 && b>19)||(e<=0 && b>19)||(e>19 && b<=0)||(e<20 && b<0 )||(e<0 && b<20)) {
			printf(""Pogresan unos \n"");
			printf(""Unesite %d. tacku: "",m);
			scanf(""%d %d"",&e,&b);
		}
		niz[b][e]=1;
	}
	for (p=0;p<=19;p++) {
		for (i=0;i<=19;i++) {
			if(niz[p][i]==niz1[p][i]) {
				printf (""*"");
			}
			else {
				printf("" "");
			}
		}
		printf(""\n"");
	}
	return 0 ; 
}
	
","#include <stdio.h>
#include <stdlib.h>

int main() {
	int z,niz[20][20],niza[20][20],i,j,k,p,q,r,s;
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&z);
	while((z<=0) || (z>10))
	{
		printf(""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&z);
		
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			niz[i][j]=0;
			niza[i][j]=1;
			
		}
		
	}
	for(k=1;k<=z;k++)
	{
		printf(""Unesite %d. tacku: "",k);
		scanf(""%d %d"",&p,&r);
		while(((p>19) && (r>19)) || ((p<0) && (r<0)) || ((p>19) && (r<1)) || ((p<1) && (r>19)) || ((p<0) && (r<20)) || ((p<20) && (r<0)))
		{
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "",k);
			scanf(""%d %d"",&p,&r);
		}
		niz[r][p]=1;
		
	}
		for(q=0;q<=19;q++)
		{
			for(s=0;s<=19;s++)
			{
				if(niz[q][s]==niza[q][s])
					{
						printf(""*"");
						
					} else 
					{
						printf("" "");
					}
				
			}
			printf(""\n"");
				
			}
		return 0;
			
		}
	
"
1267,98,98,0,38,A2016/Z1/Z3/student9949,A2016/Z1/Z3/student8540,"#include <stdio.h>
#include <math.h>
int main () {
    char A;
    int C=0,B=0,S=0,V=0,P=0,UV=0;
    float PC,PB,PS,PV,PP;
    
    printf(""Unesite vozila: "");
    do {
    scanf(""%c"", &A);
    if(A!='C' &&  A!='c' &&  A!='B' &&  A!='b' &&  A!='S' &&  A!='s' &&  A!='V' &&  A!='v' &&  A!='P' &&  A!='p' &&  A!='k' &&  A!='K'){
        printf(""Neispravan unos\n"");}
    else if(A=='C' || A=='c' || A=='B' || A=='b' || A=='S' || A=='s' || A=='V' || A=='v' || A=='P' || A=='p')
    {UV++;}
        if(A=='C' || A=='c'){C++;}
        if(A=='B' || A=='b'){B++;}
        if(A=='S' || A=='s'){S++;}
        if(A=='V' || A=='v'){V++;}
        if(A=='P' || A=='p'){P++;}
        } while (A!='K' && A!='k');
        printf(""Ukupno evidentirano %d vozila.\n"", UV);
    
    if(UV!=0){
        if(C>=B && C>=S && C>=V && C>=P){
            PC=(C*100.0/UV); 
            printf(""Najpopularnija boja je crna (%.2f%%)."", PC);}
        else if(B>=C && B>=S && B>=V && B>=P){
            PB=(B*100.0/UV); 
            printf(""Najpopularnija boja je bijela (%.2f%%)."", PB);}
        else if(S>=C && S>=B && S>=V && S>=P){
            PS=(S*100.0/UV);
            printf(""Najpopularnija boja je siva (%.2f%%)."", PS);}
        else if(V>=C && V>=B && V>=S && V>=P){
            PV=(V*100.0/UV);
            printf(""Najpopularnija boja je crvena (%.2f%%)."", PV);}
        else if(P>=C && P>=B && P>=S && P>=V){
            PP=(P*100.0/UV); 
            printf(""Najpopularnija boja je plava (%.2f%%)."", PP);}}
    else {
        printf(""Najpopularnija boja je crna (0.00%%)."");
        }
    return 0;
}","#include <stdio.h>
#include <math.h>
int main() {
    char M;
    int CA=0, BA=0, SA=0, PA=0, VA=0, Ubv=0;
    float CB, BB, SB, PB, VB;
    printf(""Unesite vozila: "");
    do {
        scanf(""%c"",&M);
        if (M!='C' && M!='c' && M!='B'&& M!='b'&& M!='S'&& M!='s'&& M!='P'&& M!='p'&& M!='K' && M!='k' && M!='V' && M!='v' && M!='\n')
            {printf(""Neispravan unos\n""); 
        }
        else if (M=='C'|| M=='c'|| M=='B'|| M=='b'|| M=='S'|| M=='s'|| M=='P'|| M=='p' || M=='V' || M=='v') {Ubv++;} 
        if (M=='c' || M=='C') {CA++;} 
        if (M=='b' || M=='B') {BA++;}
        if (M=='s' || M=='S') {SA++;}
        if (M=='p' || M=='P') {PA++;}
        if (M=='v' || M=='V') {VA++;} 
    } while (M!='k' && M!='K');
    printf(""Ukupno evidentirano %d vozila. \n"", Ubv);
    
    if(Ubv!=0) {
        if (CA>=BA && CA>=SA && CA>=PA && CA>=VA) { 
            CB=(CA*100.0)/Ubv; printf(""Najpopularnija boja je crna (%.2f%)."", CB);}
        else if (BA>=CA && BA>=SA && BA>=PA && BA>=VA) { 
            BB=(BA*100.0)/Ubv; printf(""Najpopularnija boja je bijela (%.2f%)."", BB);}
        else if (SA>=BA && SA>=CA && SA>=PA && SA>=VA) { 
            SB=(SA*100.0)/Ubv; printf(""Najpopularnija boja je siva (%.2f%)."", SB);}
        else if (PA>=BA && PA>=SA && PA>=CA && PA>=VA) { 
            PB=(PA*100.0)/Ubv; printf(""Najpopularnija boja je plava (%.2f%)."", PB);}
        else if (VA>=BA && VA>=SA && VA>=PA && VA>=CA) { 
            VB=(VA*100.0)/Ubv; printf(""Najpopularnija boja je crvena (%.2f%)."", VB); }
    } 
    
    else {
        printf(""Najpopularnija boja je crna (0.00%)."");
    }
    return 0;
}
"
1268,81,81,0,19,A2016/Z1/Z4/student7802,A2016/Z1/Z4/student8561,"#include <stdio.h>
int main() {
    int n,i,j;
    do{
    printf(""Unesite broj n: "");
    scanf(""%d"", &n);
    if(n<=0 || n>50){
        printf(""Pogresan unos"");
        printf(""\n"");
         }   
    }while(n<=0 || n>50);
     if(n==1){
             printf(""***"");
         }else{
             for(i=0; i < n; i++){
                for(j=0; j <= 4*n-4; j++){
                    if (j==i || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i){
                        printf(""*"");
                    }else{
                        printf("" "");
                }
            }printf(""\n"");
        }
    }
    
return 0;
}","#include <stdio.h>

int main() {
	int n,i,j;
	
	do {
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	if (n<1 || n>50)
	printf(""Pogresan unos \n"");
	} while (n<1 || n>50);
	if (n==1){
	printf(""***"");
	return 0;}
	
	for (i=0; i<n; i++){
		for (j=0; j<4*n-3; j++){
			if (i==j || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i){
			printf(""*"");}
		
		else printf("" "");
	}
	printf(""\n"");
	}
	return 0;
}"
1273,86,86,0,18,A2016/Z2/Z1/student5533,A2016/Z2/Z1/student7085,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

int main() {
	int c1,c2,n,suma=0, k=1;
	printf (""Unesite broj: "");
	scanf (""%d"", &n);
	c1=n%10;
	n/=10;
	while (n)
	{
		c2=n%10;
		suma+=(abs(c1-c2))*k;
		k*=10;
		c1=c2;
		n/=10;
	}
	printf(""%d"", suma);
	return 0;
}
","#include <stdio.h>
#include <math.h>
int main() {
	int a,c1,c2,suma=0,k=1;
	printf(""Unesite broj: "");
	scanf(""%d"",&a);
	
	c1=a%10;
    a/=10;
 
	while(a!=0)
    {	
    	c2=a%10;
    	suma+=fabs((c1-c2))*k;
	    k*=10;
	    c1=c2;
     	a/=10;
    }
    
    
	
	printf(""%d"",suma );
	return 0;
}
"
1275,66,66,0,18,A2016/Z1/Z4/student2900,A2016/Z1/Z4/student6960,"#include <stdio.h>

int main() {
    int i,j,n;
    do {
	printf(""Unesite broj n: "");
	scanf (""%d"",&n);
	if (n<=0 || n>50)
		printf(""Pogresan unos\n"");
	else break;
	} while (1);
	if (n==1)
	printf(""**"");
	
	for (i=0; i<n;i++){
    for (j=0;j<4*n-3;j++){
    	if (i==j)
    	printf(""*"");
    	else if (j==2*(n-1)-i)
    	printf(""*"");
    	else if (j==2*(n-1)+i)
    	printf(""*"");
    	else if (j==4*(n-1)-i)
    	printf(""*"");
    	else printf("" "");
    }	
    printf(""\n"");
	}
    
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	do{
	printf(""Unesite broj n: "");
		scanf(""%d"",&n);
		if (n<=0 || n>50) printf(""Pogresan unos\n"");
	} while (n<=0 || n>50);
	
	for(i=0;i<n;i++)
	{ for (j=0;j<4*n-3;j++){
		if (n==1) printf(""***"");
		else if(i==j) printf(""*"");
		
		else if(j==2*n-2-i) printf(""*"");
		else if(j==2*n-2+i) printf(""*"");
		else if(j==4*n-4-i) printf(""*"");
		else printf("" "");
		
		
	}
	printf(""\n"");	
	}
	
	
	return 0;
}
"
1278,78,78,0,44,A2016/Z2/Z3/student1845,A2016/Z2/Z3/student1364,"#include <stdio.h>

int main() {
	int i, j, n, x [10], y [10], k;
	char niz [20][20];
	
	for(i=0; i<20; i++) {
	for(j=0; j<20; j++) {
			
		 niz[i][j]=' ';
			
		}
		
	}
	
	do{
		
	printf(""\nUnesite broj tacaka: "");
	scanf(""%d"", &n);
    if(n>10 || n<=0) printf(""Pogresan unos"");
    
	}while(n>10 || n<=0);
    
    
    for(k=0; k<n; k++){
    	
        printf(""Unesite %d. tacku: "", k+1);
        scanf(""%d %d"",&x[k], &y[k] );
        
        if(x[k] < 0 || x[k] > 19 || y[k] < 0 || y[k] > 19){
        	printf(""Pogresan unos\n"");
        	k--;
        }
    }
	
	for(k=0; k<n; k++) {
	for(i=0; i<20; i++) {
		for(j=0; j<20; j++) {
			if(i==y[k] && j==x[k]){
			niz[i][j]='*';	
	     		} 
     		}
		}

	}
	
		for(i=0; i<20; i++) {
		for(j=0; j<20; j++) {
		printf(""%c"", niz[i][j]);
		  	}
		printf(""\n"");
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	int broj_tacaka, i, j, x[10]={0}, y[10]={0}, br=0;
	char rezultat[20][20];
	for (i=0; i<20; i++)
	{
		for (j=0; j<20; j++)
		rezultat[i][j]=' ';
	}
	do {
		printf(""Unesite broj tacaka: "");
	    scanf (""%d"", &broj_tacaka);
		if (broj_tacaka<1 || broj_tacaka>10)
		printf (""Pogresan unos\n"");
	}
	while (broj_tacaka<1 || broj_tacaka>10);
	
	for (i=0; i<broj_tacaka; i++)
	{
		do
		{
			printf (""Unesite %d. tacku: "", i+1);
		    scanf (""%d %d"", &x[i], &y[i]);
		    if ((x[i]<0 || x[i]>19 || y[i]<0 || y[i]>19) && i!=0)
		    {i--; printf (""Pogresan unos\n"");}
		    else if ((x[i]<0 || x[i]>19 || y[i]<0 || y[i]>19) && i==0)
		    {i=0; printf(""Pogresan unos\n"");}
		}
	    while (x[i]<0 || x[i]>19 || y[i]<0 || y[i]>19
	    );
	}
	
	for (br=0; br<broj_tacaka; br++)
	{
  	for (i=0; i<20; i++)
  	{
  		for (j=0; j<20; j++)
  		{
  			if (x[br]==j && y[br]==i)
  				rezultat[i][j]='*'; 
  			
  		 }
  		}
	}
	
	for (i=0; i<20; i++)
	{
		for (j=0; j<20; j++)
		printf (""%c"", rezultat[i][j]);
		printf (""\n"");
		
	}
	
	return 0;
}
"
1280,97,97,0,32,A2016/Z2/Z1/student6824,A2016/Z2/Z1/student5899,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>


int main() 
{
	int broj,nbroj=0,cifra1,cifra2,raz,i=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &broj);
	broj=abs(broj);
	
	if(broj<10)
	{
		nbroj=0;
		printf(""%d"",nbroj);
	}
	else
	{
	
	do 
	{
		cifra1=broj%10;
		broj=broj/10;
		if(broj!=0)
		{
		cifra2=broj%10;
		raz=abs(cifra2-cifra1);
		nbroj+=raz*pow(10,i);
		i++;
		}
	}
	while(broj!=0);
	
	printf(""%d"",nbroj);
	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


int main() 
{
	int broj,nbroj=0,cifra1,cifra2,raz,i=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &broj);
	broj=abs(broj);
	
	if(broj<10)
	{
		nbroj=0;
		printf(""%d"",nbroj);
	}
	else
	{
	
	do 
	{
		cifra1=broj%10;
		broj=broj/10;
		if(broj!=0)
		{
		cifra2=broj%10;
		raz=abs(cifra2-cifra1);
		nbroj+=raz*pow(10,i);
		i++;
		}
	}
	while(broj!=0);
	
	printf(""%d"",nbroj);
	}
	return 0;
}
"
1282,71,71,0,41,A2016/Z1/Z3/student6613,A2016/Z1/Z3/student1981,"#include <stdio.h>

int main() {
	char x;
	int j,ubv=0,c=0,b=0,s=0,v=0,p=0,max;
	float pc,ps,pv,pp,pb;
	printf(""Unesite vozila: "");


	for(j=0; j<=100000; j++) {
		
		scanf(""%c"",&x);
	
		
		if(x=='c' || x=='C') c++;
		else if(x=='b' || x=='B') b++;
		else if(x=='s' || x=='S') s++;
		else if(x=='v' || x=='V') v++;
		else if(x=='p' || x=='P') p++;
		else if(x=='k' || x=='K') {break;} 
	
		if(x!='C' && x!='c' && x!='b' && x!='B' && x!='s' && x!='S' && x!='v' && x!='V' && x!='P' && x!='p')
		printf(""Neispravan unos\n"");
		else ubv++;
			
	}
	
	
	
	printf(""Ukupno evidentirano %d vozila."",ubv);

	max=c;
	if(b>max) max=b;
	if(s>max) max=s;
   	if(v>max) max=v;
	if(p>max) max=p;
	
	pc=(float)c/ubv*100;
	pb=(float)b/ubv*100;
	ps=(float)s/ubv*100;
	pv=(float)v/ubv*100;
	pp=(float)p/ubv*100;
	if(ubv==0) {
		pc=0;
		pb=0;
		ps=0;
		pv=0;
		pp=0;
	}
	
	if(max==c) printf(""\nNajpopularnija boja je crna (%.2f%%)."",pc);
	else if(max==b) printf(""\nNajpopularnija boja je bijela (%.2f%%)."",pb);
	else if(max==s) printf(""\nNajpopularnija boja je siva (%.2f%%)."",ps);
	else if(max==v) printf(""\nNajpopularnija boja je crvena (%.2f%%)."",pv);
	else if(max==p) printf(""\nNajpopularnija boja je plava (%.2f%%)."",pp);
	return 0;
}
","#include <stdio.h>

int main() {
	
	char l;
	int i,c=0,b=0,s=0,v=0,p=0, u=0;
	float uc,ub,us,uv,up;
	
	printf(""Unesite vozila: "");

	for(i=0; i<=10000; i++){
	scanf(""%c"", &l);
	
	if(l=='C' || l=='c') c++;
	if(l=='B' || l=='b') b++;
	if(l=='S' || l=='s') s++;
	 if(l=='V' || l=='v') v++;
	 if(l=='P' || l=='p') p++; 
	if(l=='K' || l=='k') break;
	
	if(l!='c' && l!='C' && l!='b' && l!='B' && l!='S' && l!='s' && l!='V' && l!='v' &&
	l!='p' && l!='P') printf(""Neispravan unos\n"");
	else u++;
	}
	
	
	printf(""Ukupno evidentirano %d vozila.\n"", u);
	
	int max=c;
	
	
	
	if(u==0) printf(""Najpopularnija boja je crna (0.00%%)."");
	else{

	if(b>max) max=b;
	if(s>max) max=s;
	if(v>max) max=v;
	if(p>max) max=p;
	if(u==0) {
	uc=0; ub=0; us=0; uv=0; up=0;
	}
	uc=(float)c/u*100;
	ub=(float)b/u*100;
	us=(float)s/u*100;
	uv=(float)v/u*100;
	up=(float)p/u*100;
	
	
	if(max==b) printf(""Najpopularnija boja je bijela (%.2f%%)."", ub);
	else if(max==c) printf(""Najpopularnija boja je crna (%.2f%%)."", uc);
	else if(max==s) printf(""Najpopularnija boja je siva (%.2f%%)."", us);
	else if(max==v) printf(""Najpopularnija boja je crvena (%.2f%%)."", uv);
	else if(max==p) printf(""Najpopularnija boja je plava (%.2f%%)."", up);
		
}
	return 0;
}
"
1283,99,99,0,75,A2016/Z5/Z1/student2717,A2016/Z5/Z1/student8043,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#define e 0.01

struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

float prosjek_studenta(int studenti[],int velicina)
{
	int i, suma=0;
	float prosjek;
	
	for(i=0; i<velicina; i++) {
		if(studenti[i]==5 || velicina==0) {
			return 5.00;
		}
		suma=suma+studenti[i];
	}
	prosjek=(float)suma/velicina;
	return prosjek;
}

int genijalci(struct Student studenti[],int velicina,double zadani_prosjek)
{

	int i,j, brojac=0;
	struct Student tmp;

	for(i=0; i<velicina; i++) {
		if(zadani_prosjek>prosjek_studenta(studenti[i].ocjene,studenti[i].br_ocjena)) {
			for (j=i; j<velicina-1; j++) {
				studenti[j] = studenti[j+1];
			}
			velicina--;
			i--;
		
		}
	}

	for(i=0;i<velicina;++i) {
		for(j=i+1;j<velicina;++j) {
			if(fabs(prosjek_studenta(studenti[i].ocjene,studenti[i].br_ocjena)-prosjek_studenta(studenti[j].ocjene,studenti[j].br_ocjena))<e){
				if(strcmp(studenti[i].prezime, studenti[j].prezime)>0) {
				tmp=studenti[i];
				studenti[i]=studenti[j];
				studenti[j]=tmp;
			}
				if(strcmp(studenti[i].ime, studenti[j].ime)>0) {
				tmp=studenti[i];
				studenti[i]=studenti[j];
				studenti[j]=tmp;
			}
			}
			if (prosjek_studenta(studenti[i].ocjene,studenti[i].br_ocjena)<prosjek_studenta(studenti[j].ocjene,studenti[j].br_ocjena)) {
				tmp=studenti[i];
				studenti[i]=studenti[j];
				studenti[j]=tmp;
			}
		}
	}
	
	
	i=0;
	printf(""%s %s\n"", studenti[i].prezime, studenti[i].ime);
	printf(""%s %s\n"", studenti[i+1].prezime, studenti[i+1].ime);
	printf(""%s %s\n"", studenti[i+2].prezime, studenti[i+2].ime);

	return velicina;
}

int main()
{



	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#define e 0.01

struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

float prosjek_studenta(int studenti[],int velicina)
{
	int i, suma=0;
	float prosjek;
	
	for(i=0; i<velicina; i++) {
		if(studenti[i]==5 || velicina==0) {
			return 5.00;
		}
		suma=suma+studenti[i];
	}
	prosjek=(float)suma/velicina;
	return prosjek;
}

int genijalci(struct Student studenti[],int velicina,double zadani_prosjek)
{

	int i,j, brojac=0;
	struct Student tmp;

	for(i=0; i<velicina; i++) {
		if(zadani_prosjek>prosjek_studenta(studenti[i].ocjene,studenti[i].br_ocjena)) {
			for (j=i; j<velicina-1; j++) {
				studenti[j] = studenti[j+1];
			}
			velicina--;
			i--;
		
		}
	}

	for(i=0;i<velicina;++i) {
		for(j=i+1;j<velicina;++j) {
			if(fabs(prosjek_studenta(studenti[i].ocjene,studenti[i].br_ocjena)-prosjek_studenta(studenti[j].ocjene,studenti[j].br_ocjena))<e){
				if(strcmp(studenti[i].prezime, studenti[j].prezime)>0) {
				tmp=studenti[i];
				studenti[i]=studenti[j];
				studenti[j]=tmp;
			}
				if(strcmp(studenti[i].ime, studenti[j].ime)>0) {
				tmp=studenti[i];
				studenti[i]=studenti[j];
				studenti[j]=tmp;
			}
			}
			if (prosjek_studenta(studenti[i].ocjene,studenti[i].br_ocjena)<prosjek_studenta(studenti[j].ocjene,studenti[j].br_ocjena)) {
				tmp=studenti[i];
				studenti[i]=studenti[j];
				studenti[j]=tmp;
			}
		}
	}
	
	
	i=0;
	printf(""%s %s\n"", studenti[i].prezime, studenti[i].ime);
	printf(""%s %s\n"", studenti[i+1].prezime, studenti[i+1].ime);
	printf(""%s %s\n"", studenti[i+2].prezime, studenti[i+2].ime);

	return velicina;
}

int main()
{



	return 0;
}
"
1284,49,49,0,21,A2016/Z3/Z1/student2831,A2016/Z3/Z1/student4526,"#include <stdio.h>

 int daj_prost()
{
	 int i;
	static   int a=1;
	a++;
	for(i=2; i<a; i++) {
		if(a%i==0) {     /*Nalazenje prosstog broja u funkciji*/
			a++;
			i=2;
		}
	}
	return a;
}





int main()
{
	  int A,B;
	do {
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"",&A,&B);
		if(A<=0) printf(""A nije prirodan broj.\n"");
		else {
			if(A>=B) printf(""A nije manje od B.\n"");
			else if(B<=0) printf(""B nije prirodan broj.\n"");
		}

	} while(!(A<B && (A>0 && B>0))); /*Unos prirodnih brojeva A i B */
	 int suma=0,i,prost;
	for(i=0; i<B; i++) {
		prost=daj_prost();
		if(prost>A && prost<B) suma=suma+prost; /*Izračunavanje sume*/
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
	return 0;
}
","#include <stdio.h>
int daj_prost(){/*funkcija za nalazenje prostih brojeva*/
long int k;
static long int a=1;a++;/*staticka promjenjiva zadrzava svoju vrijednost*/
	for(k=2;k<a;k++){
		if(a%k==0){
			a++;
		k=2;	}}return a;}/*vracamo vrijednost a */
int main() {
long int A,B,suma=0,broj,i;
do{printf(""\nUnesite brojeve A i B: "");scanf(""%ld %ld"", &A, &B);
if(A>=B){printf(""A nije manje od B."");}
else if(A<=0){printf(""A nije prirodan broj."");}}
while(A<=0 || A>=B);


for(i=0;i<B;i++){broj=daj_prost();if(broj>A && broj<B){suma=suma+broj;}}/*racunanje svih prostih brojeva
između brojeva unesenih između A i B*/
printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B, suma);
	return 0;
}
"
1293,99,99,0,222,A2016/Z5/Z1/student6824,A2016/Z5/Z1/student5899,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
void unesi(char niz[], int velicina) {
    char znak = getchar();
    if (znak == '\n') znak=getchar();
    int i = 0;
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i]='\0';
}
struct Student 
{
	char ime[20];
	char prezime[20];
	int ocjene[50];
	int br_ocjena;
};
int uporedi(struct Student student1,struct Student student2)
{
    char *p1=student1.prezime, *p2=student2.prezime;
    char *i1=student1.ime, *i2=student2.ime;
    while(*p1!='\0' && *p2!='\0')
    {
        if(*p1 < *p2)return 0;
        else if(*p1 > *p2)return 1;
        p1++;
        p2++;
    }
    if(*p1==0 && *p2==0)
    {
        while((*i1!=0 && *i2!=0))
        {
            if(*i1 < *i2) return 0;
            else if(*i1 > *i2) return 1;
            i1++;
            i2++;
        }
        if(*i1!=0)return 1;
        else if(*i2!=0)return 0;
    }
    
    else if(*p1!='\0')return 1;
    else if(*p2!='\0')return 0;
    return 0;
}

int genijalci(struct Student niz[], int vel, float prosjek_2)
{
    int i,j;
    float Prosjek1;
    
   for(i=0;i<vel;i++)
   {
       Prosjek1=0;
       int suma=0,rendom=0;
       for(j=0;j<niz[i].br_ocjena;j++)
       {
           Prosjek1=0;
           if(niz[i].ocjene[j]==5)
           {
               rendom=1;
           }
           suma+=niz[i].ocjene[j];
       }
       if(rendom==1 || niz[i].br_ocjena==0)
       {
           Prosjek1=5.00;
       }
       else
        {
            Prosjek1=(float)suma/niz[i].br_ocjena;
        }
        if(Prosjek1<prosjek_2)
        {
            for(j=i;j<vel-1;j++)
            {
                niz[j]=niz[j+1];
            }
            vel--;
            i--;
        }
   }
        
        
   float nizp[100];
   float max=0;
   for(i=0;i<vel;i++)
   {
       Prosjek1=0;
       int suma=0,rendom=0;
       for(j=0;j<niz[i].br_ocjena;j++)
       {
           if(niz[i].ocjene[j]==5)
           {
               rendom=1;
           }
           suma+=niz[i].ocjene[j];
       }
       if(rendom==1 || niz[i].br_ocjena==0)
       {
           Prosjek1=5.00;
       }
       else
        {
            Prosjek1=(float)suma/niz[i].br_ocjena;
        }
        nizp[i]=Prosjek1;
       
   }
    
    int zapamti=0,brojac=0,maxindeks1=0,maxindeks2=0,maxindeks3=0;
    while(brojac<3 && brojac<vel)
    {
    for(i=0;i<vel;i++)
    {
        if(nizp[i]>max)
        {
            max=nizp[i];
            zapamti=i;
          
    }
        
    }
    brojac++;
    if(brojac==1)
    maxindeks1=zapamti;
    else if(brojac==2)
    maxindeks2=zapamti;
    else if(brojac==3)
    maxindeks3=zapamti;
    
    nizp[zapamti]=-1.;

        int dupli=0,zapamti2=0;
        for(i=0;i<vel;i++)
        {
            
            
           if(fabs(nizp[i] - max)<0.00001)
            {
                dupli=1;
                zapamti2=i;
            }
        }
        if(dupli==1)
        {
            if(uporedi(niz[zapamti],niz[zapamti2])==0)
            {
                if(brojac==1)
                    maxindeks1=zapamti;
                else if(brojac==2)
                    maxindeks2=zapamti;
                 else if(brojac==3)
                    maxindeks3=zapamti;
                    
                    brojac++;
                    
                    if(brojac==1)
                    maxindeks1=zapamti2;
                else if(brojac==2)
                    maxindeks2=zapamti2;
                 else if(brojac==3)
                    maxindeks3=zapamti2;
            }
            else if(uporedi(niz[zapamti],niz[zapamti2])==1)
            {
                if(brojac==1)
                    maxindeks1=zapamti2;
                else if(brojac==2)
                    maxindeks2=zapamti2;
                 else if(brojac==3)
                    maxindeks3=zapamti2;
                    brojac++;
                    if(brojac==1)
                    maxindeks1=zapamti;
                else if(brojac==2)
                    maxindeks2=zapamti;
                 else if(brojac==3)
                    maxindeks3=zapamti;

        }
        nizp[zapamti2]=-1.;
        dupli=0;
        }
        max=0;
    }
        
                
            
                
                printf(""%s %s\n"",niz[maxindeks1].prezime,niz[maxindeks1].ime);
                
                
                 printf(""%s %s\n"",niz[maxindeks2].prezime,niz[maxindeks2].ime);
                 
                 
                 printf(""%s %s\n"",niz[maxindeks3].prezime,niz[maxindeks3].ime);
            
     
            
           
           
     
    
    
        
     
     return vel;   
        
}
int main() 
{
struct Student studenti[6] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 6, 6.5);
    
    	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
void unesi(char niz[], int velicina) {
    char znak = getchar();
    if (znak == '\n') znak=getchar();
    int i = 0;
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i]='\0';
}
struct Student 
{
	char ime[20];
	char prezime[20];
	int ocjene[50];
	int br_ocjena;
};
int uporedi(struct Student student1,struct Student student2)
{
    char *p1=student1.prezime, *p2=student2.prezime;
    char *i1=student1.ime, *i2=student2.ime;
    while(*p1!='\0' && *p2!='\0')
    {
        if(*p1 < *p2)return 0;
        else if(*p1 > *p2)return 1;
        p1++;
        p2++;
    }
    if(*p1==0 && *p2==0)
    {
        while((*i1!=0 && *i2!=0))
        {
            if(*i1 < *i2) return 0;
            else if(*i1 > *i2) return 1;
            i1++;
            i2++;
        }
        if(*i1!=0)return 1;
        else if(*i2!=0)return 0;
    }
    
    else if(*p1!='\0')return 1;
    else if(*p2!='\0')return 0;
    return 0;
}

int genijalci(struct Student niz[], int vel, float prosjek_2)
{
    int i,j;
    float Prosjek1;
    
   for(i=0;i<vel;i++)
   {
       Prosjek1=0;
       int suma=0,rendom=0;
       for(j=0;j<niz[i].br_ocjena;j++)
       {
           Prosjek1=0;
           if(niz[i].ocjene[j]==5)
           {
               rendom=1;
           }
           suma+=niz[i].ocjene[j];
       }
       if(rendom==1 || niz[i].br_ocjena==0)
       {
           Prosjek1=5.00;
       }
       else
        {
            Prosjek1=(float)suma/niz[i].br_ocjena;
        }
        if(Prosjek1<prosjek_2)
        {
            for(j=i;j<vel-1;j++)
            {
                niz[j]=niz[j+1];
            }
            vel--;
            i--;
        }
   }
        
        
   float nizp[100];
   float max=0;
   for(i=0;i<vel;i++)
   {
       Prosjek1=0;
       int suma=0,rendom=0;
       for(j=0;j<niz[i].br_ocjena;j++)
       {
           if(niz[i].ocjene[j]==5)
           {
               rendom=1;
           }
           suma+=niz[i].ocjene[j];
       }
       if(rendom==1 || niz[i].br_ocjena==0)
       {
           Prosjek1=5.00;
       }
       else
        {
            Prosjek1=(float)suma/niz[i].br_ocjena;
        }
        nizp[i]=Prosjek1;
       
   }
    
    int zapamti=0,brojac=0,maxindeks1=0,maxindeks2=0,maxindeks3=0;
    while(brojac<3 && brojac<vel)
    {
    for(i=0;i<vel;i++)
    {
        if(nizp[i]>max)
        {
            max=nizp[i];
            zapamti=i;
          
    }
        
    }
    brojac++;
    if(brojac==1)
    maxindeks1=zapamti;
    else if(brojac==2)
    maxindeks2=zapamti;
    else if(brojac==3)
    maxindeks3=zapamti;
    
    nizp[zapamti]=-1.;

        int dupli=0,zapamti2=0;
        for(i=0;i<vel;i++)
        {
            
            
           if(fabs(nizp[i] - max)<0.00001)
            {
                dupli=1;
                zapamti2=i;
            }
        }
        if(dupli==1)
        {
            if(uporedi(niz[zapamti],niz[zapamti2])==0)
            {
                if(brojac==1)
                    maxindeks1=zapamti;
                else if(brojac==2)
                    maxindeks2=zapamti;
                 else if(brojac==3)
                    maxindeks3=zapamti;
                    
                    brojac++;
                    
                    if(brojac==1)
                    maxindeks1=zapamti2;
                else if(brojac==2)
                    maxindeks2=zapamti2;
                 else if(brojac==3)
                    maxindeks3=zapamti2;
            }
            else if(uporedi(niz[zapamti],niz[zapamti2])==1)
            {
                if(brojac==1)
                    maxindeks1=zapamti2;
                else if(brojac==2)
                    maxindeks2=zapamti2;
                 else if(brojac==3)
                    maxindeks3=zapamti2;
                    brojac++;
                    if(brojac==1)
                    maxindeks1=zapamti;
                else if(brojac==2)
                    maxindeks2=zapamti;
                 else if(brojac==3)
                    maxindeks3=zapamti;

        }
        nizp[zapamti2]=-1.;
        dupli=0;
        }
        max=0;
    }
        
                
            
                
                printf(""%s %s\n"",niz[maxindeks1].prezime,niz[maxindeks1].ime);
                
                
                 printf(""%s %s\n"",niz[maxindeks2].prezime,niz[maxindeks2].ime);
                 
                 
                 printf(""%s %s\n"",niz[maxindeks3].prezime,niz[maxindeks3].ime);
            
     
            
           
           
     
    
    
        
     
     return vel;   
        
}
int main() 
{
struct Student studenti[6] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 6, 6.5);
    
    	return 0;
}
"
1297,98,98,0,57,A2016/Z1/Z3/student5744,A2016/Z1/Z3/student2675,"#include <stdio.h>

int main ()
{
	int c=0,i,b=0,s=0,v=0,p=0;
	float x;
	char a;
	printf(""Unesite vozila: "");
	for (i=0;;i++)
	{
		scanf(""%c"",&a);
		if(a=='C' || a=='c')
		{
			c++;
		} else if(a=='B' || a=='b')
		{
			b++;
		} else if(a=='S' || a=='s')
		{
			s++;
		} else if(a=='V' || a=='v')
		{
			v++;
		} else if(a=='P' || a=='p')
		{
			p++;
		} else if(a=='K' || a=='k')
		{
			break;
		} else
		{
			printf(""Neispravan unos\n"");
			i--;
		}
	}
	printf(""Ukupno evidentirano %d vozila.\n"",i);
	if (i==0)
	{
		printf(""Najpopularnija boja je crna (0.00%%)."",x);
	} else if (c>=b && c>=s && c>=v && c>=p)
	{
		x=(c*100.)/i;
		printf(""Najpopularnija boja je crna (%.2f%%)."",x);
	} else if (b>=s && b>=v && b>=p)
	{
		x=(b*100.)/i;
		printf(""Najpopularnija boja je bijela (%.2f%%)."",x);
	} else if (s>=v && s>=p)
	{
		x=(s*100.)/i;
		printf(""Najpopularnija boja je siva (%.2f%%)."",x);
	} else if (v>=p)
	{
		x=(v*100.)/i;
		printf(""Najpopularnija boja je crvena (%.2f%%)."",x);
	} else 
	{
		x=(p*100.)/i;
		printf(""Najpopularnija boja je plava (%.2f%%)."",x);
	}
	return 0;
}	","#include <stdio.h>

int main ()
{
	int c=0,i,b=0,s=0,v=0,p=0;
	float x;
	char a;
	printf(""Unesite vozila: "");
	for (i=0;;i++)
	{
		scanf(""%c"",&a);
		if(a=='C' || a=='c')
		{
			c++;
		} else if(a=='B' || a=='b')
		{
			b++;
		} else if(a=='S' || a=='s')
		{
			s++;
		} else if(a=='V' || a=='v')
		{
			v++;
		} else if(a=='P' || a=='p')
		{
			p++;
		} else if(a=='K' || a=='k')
		{
			break;
		} else
		{
			printf(""Neispravan unos\n"");
			i--;
		}
	}
	printf(""Ukupno evidentirano %d vozila.\n"",i);
	if (i==0)
	{
		printf(""Najpopularnija boja je crna (0.00%%)."",x);
	} else if (c>=b && c>=s && c>=v && c>=p)
	{
		x=(c*100.)/i;
		printf(""Najpopularnija boja je crna (%.2f%%)."",x);
	} else if (b>=s && b>=v && b>=p)
	{
		x=(b*100.)/i;
		printf(""Najpopularnija boja je bijela (%.2f%%)."",x);
	} else if (s>=v && s>=p)
	{
		x=(s*100.)/i;
		printf(""Najpopularnija boja je siva (%.2f%%)."",x);
	} else if (v>=p)
	{
		x=(v*100.)/i;
		printf(""Najpopularnija boja je crvena (%.2f%%)."",x);
	} else 
	{
		x=(p*100.)/i;
		printf(""Najpopularnija boja je plava (%.2f%%)."",x);
	}
	return 0;
}	"
1299,98,98,0,32,A2016/Z2/Z3/student8794,A2016/Z2/Z3/student4415,"#include <stdio.h>

int main() {
	 int a,b=22,c=22,i,j,nizi[20],nizj[20],k=0;
    
    do{
        printf(""Unesite broj tacaka: "");
        scanf(""%d"",&a);
        if(a<=0||a>10)
        printf(""Pogresan unos\n"");
    }while(a<=0||a>10);
    
        for(i=0;i<a;i++){
    printf(""Unesite %d. tacku: "",i+1);
    scanf(""%d %d"",&nizj[i],&nizi[i]);
    if(nizj[i]<0 || nizj[i]>19||nizi[i]<0 || nizi[i]>19){
        printf(""Pogresan unos\n"");
        i--;    }    }
        
    for(i=0;i<20;i++){
        for(j=0;j<20;j++){
            for(k=0;k<a;k++){
                if(i==nizi[k] && j==nizj[k]){
                    printf(""*"");
                    b=nizi[k];
                    c=nizj[k];
                    break;  }
                
            }
           if(i==b && j==c){
            continue;}
            printf("" "");
    }
    printf(""\n"");
    }
    	return 0;
}

","#include <stdio.h>

int main() {
	 int a,b=22,c=22,i,j,nizi[20],nizj[20],k=0;
    
    do{
        printf(""Unesite broj tacaka: "");
        scanf(""%d"",&a);
        if(a<=0||a>10)
        printf(""Pogresan unos\n"");
    }while(a<=0||a>10);
    
        for(i=0;i<a;i++){
    printf(""Unesite %d. tacku: "",i+1);
    scanf(""%d %d"",&nizj[i],&nizi[i]);
    if(nizj[i]<0 || nizj[i]>19||nizi[i]<0 || nizi[i]>19){
        printf(""Pogresan unos\n"");
        i--;    }    }
        
    for(i=0;i<20;i++){
        for(j=0;j<20;j++){
            for(k=0;k<a;k++){
                if(i==nizi[k] && j==nizj[k]){
                    printf(""*"");
                    b=nizi[k];
                    c=nizj[k];
                    break;  }
                
            }
           if(i==b && j==c){
            continue;}
            printf("" "");
    }
    printf(""\n"");
    }
    	return 0;
}

"
1300,81,81,0,22,A2016/Z2/Z3/student4237,A2016/Z2/Z3/student3217,"#include <stdio.h>
#define B 25 

int main() {
	int i, j, k, n, a[B], b[B];
	int l=0;
	do{
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &n);
		if(n<=0 || n>10) printf(""Pogresan unos\n"");
	

	}while(n<=0 || n>10);
	 
	
	for(i=0; i<n; i++){

		printf(""Unesite %d. tacku: "", i+1);
		scanf(""%d %d"", &a[i], & b[i]);
		if(a[i]<0 || a[i]>19  || b[i]<0 || b[i]>19){ printf(""Pogresan unos\n""); i--;}
	
    
	}
	
    for(j=0; j<20; j++){
	    for(k=0;k<20; k++){
             for(i=0; i<n; i++){
   			 if(a[i]==k && b[i]==j) {printf(""*""); l++; break;}
   			 
			}
			if(l==0)printf("" "");
			else l=0;
	    }
       printf(""\n"");	
    }
	
	
	return 0;
}
","#include <stdio.h>
#define t 10

int main() {
	int i,j,k,bt,X[t],Y[t],a;

	do{
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &bt);
		if(bt<=0 || bt>10)
		printf(""Pogresan unos\n"");
	}
	while(bt<=0 || bt>10);
	for(a=0;a<bt;a++) {
		    printf(""Unesite %d. tacku: "", a+1);
		    scanf(""%d %d"", &X[a], &Y[a]);
		    
		if(X[a]<0 || Y[a]<0 || X[a]>19 || Y[a]>19) {
			a--;
			printf(""Pogresan unos\n"");
		} }
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			for(k=0;k<bt;k++){
			if(X[k]==j && Y[k]==i) {
							printf(""*"");
					j++;
					
				}}
			  printf("" "");
			}
			
			printf(""\n"");
}
	return 0;
}
"
1306,99,99,0,176,A2016/Z4/Z1/student7125,A2016/Z4/Z1/student2254,"#include <stdio.h>
int trazi_rijec(char *s1, char *s2);
char *izbaci_najcescu(char *s);
int duz_string (char *s);
void unesi(char niz[], int velicina); 

int main() {
	char k[] =  ""AYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY L"";
	printf(""'%s'"", izbaci_najcescu(k));
	return 0;
}

int trazi_rijec(char* s1, char* s2) {
	int u = 0;
	while (*s1 != '\0') {
		while (*s1 == ' ') s1++;
		char* p = s1;
		char* q = s2;
	while (((*p == *q) && (*p != 0)) || (*p + 32 == *q && *p != 0) || (*p -32 == *q && *p != 0)){
		p++;
		q++;
		if (*q == '\0' && (*p == ' ' || *p == '\0')){
		 u++;
		 q = s2;
		}
	}
		
	while (*s1 != ' ' && *s1 != '\0')
	s1++;
	}
	return u;
}

int duz_string (char *s){
	char *p = s;
	int duz = 0;
	
	while(*p != 0){
		p++;
		duz++;
	}
	
	return duz;
}

void unesi(char niz[], int velicina){
    char znak = getchar();
    if (znak == '\n') znak=getchar();
    int i = 0;
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i]='\0';
}

char *izbaci_najcescu(char *s){
	char rijec[100000], nova_recenica[100000] ,  naj_pon_rijec[100000], rijec2[100000];
	char  *d = naj_pon_rijec, *q = rijec, *f = nova_recenica, *p = s, *k = s, *q2 = rijec2;
	int br_pon[100000], i = 0, j = 0, nemaslovo = 1, samoslovo = 1;
	
	while (*p != 0){
		if (!(*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z'))	samoslovo = 0;
		p++;
	}
	
	p = s;
	
	if(samoslovo)
		*p = '\0';
	
	while (*p != 0){
		if ((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z'))	nemaslovo = 0;
		p++;
	}
	
	if (i==50000)
		i=1;
	
	if(nemaslovo) return s;
	
	p = s;
	
	while(*p != 0){
		
		//Pronalazenje rijeci koja se najvise ponavlja (obracajuci paznju na redoslijed)
		
		while ((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z')){
			*q++ = *p++; 
		}
		
		*q = '\0';
		
		while(!((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z')) && *p != 0) p++;
			
		q = rijec;
		
		br_pon[i] = trazi_rijec(s, rijec);
		
		//prvu rijec odmah staviti kao rijec koju treba izbaciti
		if(i == 0){
			while(*q != 0)
				*d++ = *q++;
				
			*d = '\0';
		}
		d = naj_pon_rijec;

		// trazenje rijeci koja se najvise ponavlja
		
		if(i != 0){
			if(br_pon[j] < br_pon[i]){
				while(*q != 0)
					*d++ = *q++;
				*d = '\0';
				j = i;
			}
		}
		d = naj_pon_rijec;
		
		i++;
	
	}
	
	p = s; //vracanje na pocetak recenice
	
	//Izbacivanje rijeci koja se najvise ponavlja
	
	while(*p != 0){
		q = rijec;
		
		while(!((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z')) && *p != 0 ){
			*q2++ = *p++;
		}
		
		*q2 = '\0';
		q2 = rijec2;
		
		while ((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z')){
			*q++ = *p++; 
		}
		
		*q = '\0';
		q = rijec;
		
		
		// dodavanje brojeva, simbola, razmaka (u slucaju da ih ima)
		while (*q2 != 0)
			*f++ = *q2++;
		
		q2 = rijec2;
		
		// kreiranje recenice bez rijeci koja se najvise ponavlja
		if (trazi_rijec(rijec, naj_pon_rijec) == 0 ){
			while (*q != 0){
				*f++ = *q++;
			}
			q = rijec2;
		}
		
	}
	

		
	k = s;
	*f = '\0';
	f  = nova_recenica; 
	
	// mjenjanje pocetne recenice
	while (*f != 0){
		*k++ = *f++;
	}
	
	
	
	*k = '\0';
	return s;
}


","#include <stdio.h>
int trazi_rijec(char *s1, char *s2);
char *izbaci_najcescu(char *s);
int duz_string (char *s);
void unesi(char niz[], int velicina); 

int main() {
	char k[] =  ""AYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY L"";
	printf(""'%s'"", izbaci_najcescu(k));
	return 0;
}

int trazi_rijec(char* s1, char* s2) {
	int u = 0;
	while (*s1 != '\0') {
		while (*s1 == ' ') s1++;
		char* p = s1;
		char* q = s2;
	while (((*p == *q) && (*p != 0)) || (*p + 32 == *q && *p != 0) || (*p -32 == *q && *p != 0)){
		p++;
		q++;
		if (*q == '\0' && (*p == ' ' || *p == '\0')){
		 u++;
		 q = s2;
		}
	}
		
	while (*s1 != ' ' && *s1 != '\0')
	s1++;
	}
	return u;
}

int duz_string (char *s){
	char *p = s;
	int duz = 0;
	
	while(*p != 0){
		p++;
		duz++;
	}
	
	return duz;
}

void unesi(char niz[], int velicina){
    char znak = getchar();
    if (znak == '\n') znak=getchar();
    int i = 0;
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i]='\0';
}

char *izbaci_najcescu(char *s){
	char rijec[100000], nova_recenica[100000] ,  naj_pon_rijec[100000], rijec2[100000];
	char  *d = naj_pon_rijec, *q = rijec, *f = nova_recenica, *p = s, *k = s, *q2 = rijec2;
	int br_pon[100000], i = 0, j = 0, nemaslovo = 1, samoslovo = 1;
	
	while (*p != 0){
		if (!(*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z'))	samoslovo = 0;
		p++;
	}
	
	p = s;
	
	if(samoslovo)
		*p = '\0';
	
	while (*p != 0){
		if ((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z'))	nemaslovo = 0;
		p++;
	}
	
	if (i==50000)
		i=1;
	
	if(nemaslovo) return s;
	
	p = s;
	
	while(*p != 0){
		
		//Pronalazenje rijeci koja se najvise ponavlja (obracajuci paznju na redoslijed)
		
		while ((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z')){
			*q++ = *p++; 
		}
		
		*q = '\0';
		
		while(!((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z')) && *p != 0) p++;
			
		q = rijec;
		
		br_pon[i] = trazi_rijec(s, rijec);
		
		//prvu rijec odmah staviti kao rijec koju treba izbaciti
		if(i == 0){
			while(*q != 0)
				*d++ = *q++;
				
			*d = '\0';
		}
		d = naj_pon_rijec;

		// trazenje rijeci koja se najvise ponavlja
		
		if(i != 0){
			if(br_pon[j] < br_pon[i]){
				while(*q != 0)
					*d++ = *q++;
				*d = '\0';
				j = i;
			}
		}
		d = naj_pon_rijec;
		
		i++;
	
	}
	
	p = s; //vracanje na pocetak recenice
	
	//Izbacivanje rijeci koja se najvise ponavlja
	
	while(*p != 0){
		q = rijec;
		
		while(!((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z')) && *p != 0 ){
			*q2++ = *p++;
		}
		
		*q2 = '\0';
		q2 = rijec2;
		
		while ((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z')){
			*q++ = *p++; 
		}
		
		*q = '\0';
		q = rijec;
		
		
		// dodavanje brojeva, simbola, razmaka (u slucaju da ih ima)
		while (*q2 != 0)
			*f++ = *q2++;
		
		q2 = rijec2;
		
		// kreiranje recenice bez rijeci koja se najvise ponavlja
		if (trazi_rijec(rijec, naj_pon_rijec) == 0 ){
			while (*q != 0){
				*f++ = *q++;
			}
			q = rijec2;
		}
		
	}
	

		
	k = s;
	*f = '\0';
	f  = nova_recenica; 
	
	// mjenjanje pocetne recenice
	while (*f != 0){
		*k++ = *f++;
	}
	
	
	
	*k = '\0';
	return s;
}


"
1316,24,24,0,17,A2016/Z5/Z1/student2574,A2016/Z5/Z1/student9823,"#include <stdio.h>
struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

float prosjek(int* niz,int velicina) {
        float *q = niz;
        double prosjekx = 0;
        double suma = 0;
        while(niz<q+velicina) {
                if (velicina==0) {
                        prosjekx=5.0;
                        return prosjekx;
                }
                if (*niz==5) {
                        prosjekx=5.0;
                        return prosjekx;
                }
                suma += *niz;
                niz++;
        }
        prosjekx = (double) suma/velicina;
        return prosjekx;
}

int uporedi(char* p1, char* p2, char* i1, char* i2) {
        while (*p1 != '\0' && *p2 != '\0') {
                if (*p1 < *p2) return -1;
                if (*p1 > *p2) return 1;
                p1++;
                p2++;
        }
        if (*p1 != '\0') return 1;
        if (*p2 != '\0') return -1;
        while (*i1 != '\0' && *i2 != '\0') {
                if (*i1 < *i2) return -1;
                if (*i1 > *i2) return 1;
                i1++;
                i2++;
        }
        if (*i1 != '\0') return 1;
        if (*i2 != '\0') return -1;
        return 0;
}

int genijalci (struct Student* niz, int velicina, float a) {
	int poredak=0,index1=0,index2=0,index3=0, i=0, j=0,k=0,x=velicina,max1=0,max2=0,max3=0;
	double prosjekstudenata=0;
	for (k=0;k<x;k++) {
	        prosjekstudenata = prosjek(niz[k].ocjene,niz[k].br_ocjena);
	        if (prosjekstudenata<a || prosjekstudenata<=5.0) {
		        for (j=k;j<x-1;j++) {
		                niz [j] = niz [j+1];
                        }
                        x--; 
                        k--;
                        }
                }
        for (k=0; k<x;k++) {
                prosjekstudenata = prosjek(niz[k].ocjene,niz[k].br_ocjena);
                        if (prosjekstudenata>max1) {
                                max3=max2;
                                index3=index2;
                                max2=max1;
                                index2=index1;
                                max1=prosjekstudenata;
                                index1=k;
                        }
                        else if(prosjekstudenata==max1) {
                                poredak=uporedi(niz[k].prezime, niz[max1].prezime,niz[k].ime, niz[max1].ime); 
                                if (poredak==-1) {
                                        if (prosjekstudenata>max2) {
                                                max3=max2;
                                                index3=index2;
                                        }
                                        else if(prosjekstudenata==max2) {
                                                poredak=uporedi(niz[k].prezime,niz[max2].prezime,niz[k].ime ,niz[max2].ime);
                                                if (poredak==-1) {
                                                        if (prosjekstudenata>max3) {
                                                                max3=k;
                                                        }
                                                        poredak=uporedi(niz[k].prezime,niz[max3].prezime,niz[k].ime ,niz[max3].ime);
                                                        if (poredak==1) { 
                                                                max3=prosjekstudenata;
                                                                index3=k;
                                                        }
                                                }        
                                                else if (poredak==1) {
                                                        max3=max2;
                                                        index3=index2;
                                                        max2=prosjekstudenata;
                                                        index2=k;
                                                        max1=max3;
                                                        index1=index3;
                                                }
                                        }
                                }
                                if (poredak==1) {
                                        poredak=uporedi(niz[max1].prezime,niz[max2].prezime,niz[max1].ime,niz[max2].ime); 
                                        if (poredak==-1) {
                                                poredak=uporedi(niz[max1].prezime,niz[max3].prezime,niz[max1].ime, niz[max3].ime);
                                                if (poredak==-1) {
                                                        poredak=uporedi(niz[max2].prezime,niz[max3].prezime,niz[max2].ime, niz[max3].ime);
                                                        if (poredak==-1) {
                                                                poredak=uporedi(niz[k].prezime,niz[max3].prezime,niz[k].ime, niz[max3].ime);
                                                                if (poredak==-1) {
                                                                        max3=max2;
                                                                        index3=index2;
                                                                        max2=prosjekstudenata;
                                                                        index2=k;
                                                                        max1=max3;
                                                                        index1=index3;
                                                                }
                                                                else if (poredak==1) {
                                                                        max1=prosjekstudenata;
                                                                        index1=k;
                                                                        max3=max2;
                                                                        index3=index2;
                                                                        max2=max3;
                                                                        index2=index3;
                                                                }
                                                        }
                                                        
                                                }
                                        }
                                }
                                   
                        }
        }
        for (i=0; i<x; ++i) {
                printf (""%s %s\n"",niz[i].prezime,niz[i].ime);
        }
	return x;
}
	
int main() {
        int i=0,x=0;
        int velicina=20;
        int broj_genijalaca=0;
        struct Student studenti[20]={
            {""Meho"", ""Behic"", {10, 9}, 2},
            {""Meho"", ""Aehic"", {10, 8}, 2},
            {""Meho"", ""Cehic"", {10, 9, 8, 7, 6}, 5},
            {""Meho"", ""Dehic"", {6, 9}, 2},
            {""Meho"", ""Zehic"", {10}, 1},
            {""Meho"", ""Oehic"", {10, 9, 9, 9}, 4},
            {""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5},
            {""Neko"", ""Nekic"", {10, 10, 5, 10, 10, 10, 10}, 7},
            {""Fata"", ""Fatic"", { 7,7,7,7,8}, 5},
	    {""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
            {""Pero"", ""Peric"", { 8,8,8,8,7}, 5}, 
	    {""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	    { ""Beba"", ""Bebic"", {}, 0},
	    { ""Mujo"", ""Mujic"", { 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7}, 29}, 
	    { ""Fata"", ""Fatic"", { 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6}, 29}, 
        };
        double prosjek=0;
        printf(""Prosjek: "");
        scanf (""%lf"",&prosjek);
        x=genijalci(studenti,velicina,prosjek);
	printf (""%d\n"",x);
	for(i=0; i<x;++i) {
	        printf (""%s %s \n"",studenti[i].prezime,studenti[i].ime);
	}
	return 0;
}
","#include <stdio.h>
#include <string.h>

struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

double daj_prosjek(int niz[], int vel)
{
	// obicna funkcija koja vraca prosjek kao što je zadano u tekstu zadatka
	int i;
	double suma=0;
	if(vel==0) return 5.;
	for(i=0; i<vel; i++) {
		if(niz[i]==5) return 5.;
		suma+=niz[i];
	}

	return suma/vel;
}

int uporedi(char *ime1, char *ime2, char *prezime1, char *prezime2){
	// prvo gledamo prezime pa ime
	// kao što je zadano u zadatku
	
	while(*prezime1!='\0' && *prezime2!='\0' && *prezime1 == *prezime2) { prezime1++; prezime2++; }
	if((*prezime1!='\0' && *prezime2 == '\0') || ( *prezime1 > *prezime2)) return 1;
	else if ((*prezime1=='\0' && *prezime2 != '\0') || ( *prezime1 < *prezime2)) return 2;

	while(*ime1!='\0' && *ime2!='\0' && *ime1 == *ime2) { ime1++; ime2++; }
	if((*ime1!='\0' && *ime2 == '\0') || ( *ime1 > *ime2)) return 1;
	else if ((*ime1=='\0' && *ime2 != '\0') || ( *ime1 < *ime2)) return 2;
	
	return 0;
}



int genijalci(struct Student studenti[], int vel, double prosjek)
{
	// prvo izbacujemo se studente ciji je prosjek manji od zadanog prosjeka
	int i, j;
	for(i=0; i<vel; i++) {

		if(daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena) < prosjek) {
			for (j=i; j<vel-1; j++) {
				studenti[j] = studenti[j+1];
			}
			vel--;
			i--;
		}
	}
	// nakon toga prelazimo da nadjemo max 3 prosjeka u generaciji
	// ako ima 3, ako nema trazimo 2, ili 1, ili 0 
	int pomocna=0;
	i=0;
	double max1 = prosjek;
	double max2 = prosjek;
	double max3 = prosjek;
	int prvi=-1, drugi=-1, treci=-1; // ove varijable nam sluze kao pomoc prilikom određivanja postojanja max prosjeka

	for(i=0; i<vel; i++) {

		if(daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena) == max1 && i!=0 && prvi!=-1) { // i!=0 jer prvi student ne moze biti upoređen ni sa kim

			pomocna =uporedi(studenti[i].ime, studenti[prvi].ime, studenti[i].prezime, studenti[prvi].prezime);
			// ova nam funkcija sluzi kao pomoc prilikom gledanja da li postoje 2 studenta
			// sa istim prosjekom, ukoliko postoje prvo se gleda prezime, pa ako je to prezime isto onda se
			// gleda ime, ako je ime isto ispisujemo po redu kako god..

		}

		if(daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena)>=max1) {
			if(pomocna==1) { // ukoliko je 1 preskačemo petlju tj. povecavamo za 1
				continue;
			}
			max1 = daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena);
			prvi = i;
		}
	}

	pomocna=0;
	for(i=0; i<vel; i++) {

		if(daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena) == max2 && i!=0 && drugi!=-1) {

			pomocna =uporedi(studenti[i].ime, studenti[drugi].ime, studenti[i].prezime, studenti[drugi].prezime);
			// ova nam funkcija sluzi kao pomoc prilikom gledanja da li postoje 2 studenta
			// sa istim prosjekom, ukoliko postoje prvo se gleda prezime, pa ako je to prezime isto onda se
			// gleda ime, ako je ime isto ispisujemo po redu kako god..
		}

		if(daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena)>=max2 && i!=prvi) {
			if(pomocna==1) { // ukoliko je 1 preskačemo petlju tj. povecavamo za 1
				continue;
			}
			max2 = daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena);
			drugi = i;
		}
	}


	pomocna=0;
	for(i=0; i<vel; i++) {
		if(daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena) == max3 && i!=0 && treci!=-1) {

			pomocna =uporedi(studenti[i].ime, studenti[treci].ime, studenti[i].prezime, studenti[treci].prezime);
			// ova nam funkcija sluzi kao pomoc prilikom gledanja da li postoje 2 studenta
			// sa istim prosjekom, ukoliko postoje prvo se gleda prezime, pa ako je to prezime isto onda se
			// gleda ime, ako je ime isto ispisujemo po redu kako god..
		}

		if(daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena)>=max3 && i!=drugi && i!=prvi) {
			if(pomocna==1) { // ukoliko je 1 preskačemo petlju tj. povecavamo za 1
				continue;
			}
			max3 = daj_prosjek(studenti[i].ocjene, studenti[i].br_ocjena);
			treci = i;

		}

	}

	if(prvi!=-1) printf(""%s %s"", studenti[prvi].prezime, studenti[prvi].ime);
	if(drugi!=-1) printf(""\n%s %s"", studenti[drugi].prezime, studenti[drugi].ime);
	if(treci!=-1) printf(""\n%s %s"", studenti[treci].prezime, studenti[treci].ime);

	return vel; // vracamo velicinu
}

int main()
{
	struct Student studenti[] = {

		{""Meho"", ""Behic"", {10, 9}, 2},
		{""Meho"", ""Beeic"", {10, 9}, 2},
		{""Meho"", ""Cehic"", {10, 9, 8, 7, 6}, 5},
		{""Meho"", ""Dehic"", {6, 9}, 2},
		{""Meho"", ""Zehic"", {10}, 1},
		{""Meho"", ""Oehic"", {10, 9, 9, 9}, 4}
	};
	int vel = sizeof studenti / sizeof studenti[0], i;
	vel = genijalci(studenti, vel, 9.);
	printf(""\nVel: %dStudenti:"", vel);
	for (i = 0; i < vel; ++i) printf (""\n%s %s"", studenti[i].prezime, studenti[i].ime);

	return 0;
}
"
1323,72,72,0,68,A2016/Z4/Z2/student5624,A2016/Z4/Z2/student1616,"#include <stdio.h>

void unesi(char niz[], int velicina){
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}

void izmjeni(char *string, char *sifrarnik){ //funkcija koja sifrira string
	char *pomocni_string=string, *pomocni_sifrarnik=sifrarnik;
	int brojac;
	while(*pomocni_string!='\0'){
		brojac=0;
		pomocni_sifrarnik=sifrarnik;
		while(*pomocni_sifrarnik!='\0'){
			if(*pomocni_string==*pomocni_sifrarnik++){
				*pomocni_string=126-brojac;
				break;
			}
			brojac++;
			}
		pomocni_string++;
			
		}
	
}
void sortiraj(int *niz, int *niz_sort, int* indeks, char *pokazivac, char *string){ //funkcija sortira po ucestalosti
	int i, j;
	int temp;
	char*sifrarnik=pokazivac;
	for(i=0; i<127; i++){
		for(j=i; j<127; j++){
			if(niz[i]<niz[j]){
				temp=niz[i];
				niz[i]=niz[j];
				niz[j]=temp;
				temp=indeks[i];
				indeks[i]=indeks[j];
				indeks[j]=temp;
			}
			else if(niz[i]==niz[j] && indeks[i]>indeks[j]){
				temp=indeks[i];
				indeks[i]=indeks[j];
				indeks[j]=temp;
			}
		}
	}
	for(i=0; i<127; i++){
		if(indeks[i]!=-1){
			*pokazivac=indeks[i];
			pokazivac++;
		}
	}
	izmjeni(string, sifrarnik);
}
char *kodiraj(char*string, char *sifrarnik){ // funkcija kodira
	char *pomocni_string=string, *pokazivac=sifrarnik;
	int i;
	int niz[127];
	int niz_sort[127];
	int indeks[127];
	for(i=0;i<127;i++){
		if(i<32){
			niz[i]=-1;
			indeks[i]=-1;
		}
		else{
			niz[i]=0;
			indeks[i]=i;
		}
		
	}
	while(*pomocni_string!='\0'){
		niz[*pomocni_string+0]++;
		pomocni_string++;
	}
	for(i=0;i<127;i++){
		niz_sort[i]=niz[i];
	}
	sortiraj(niz, niz_sort, indeks, pokazivac, string);

	return string;
}
char *dekodiraj(char *string, char *sifrarnik){ // funkcija dekodira
	char *pomocni_string=string;
	while(*pomocni_string!='\0'){
		*pomocni_string=sifrarnik[126-*pomocni_string];
		pomocni_string++;
	}
	return string;
}

int main() {
	printf(""zadaca 4, zadatak 2"");
	return 0;
}











","#include <stdio.h>
void sortiraj(int *niz,int *sort,int *index)
{
	int i,j;
	int temp;

		for(i=0;i<127;i++)
		{
			for(j=i;j<127;j
			{
				if(niz[i]<niz[j])
				{
					temp=niz[i];
					niz[i]=niz[j];
					niz[j]=temp;

					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
				else if(niz[i]==niz[j] && index[i]>index[j])
				{
					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
			}
		}


}
void Pretvori(char *s,char *sifrarnik)
{
	char *p=s,*kljuc=sifrarnik;
	int br;
		while(*p!='\0')
		{	br=0;
			kljuc=sifrarnik;

			while(*kljuc!='\0')
			{
				if(*p==*kljuc++){*p=126-br;break;}
				br++;
			}
			p++;
		}

}
char *kodiraj(char *s,char *sifrarnik)
{

	char *p=s,*pok=sifrarnik;
	int i;
	int niz[127];
	int sort[127];
	int index[127];

		for(i=0;i<127;i++)
		{
			if(i<32){ niz[i]=-1; index[i]=-1;}
			else{niz[i]=0;index[i]=i;}
		}
		while(*p!='\0')
		{
			niz[*p+0]++;
			p++;
        }

		for(i=0;i<127;i++)
			sort[i]=niz[i];

		sortiraj(niz,sort,index);

		for(i=0;i<127;i++)
		{
			if(index[i]!=-1)
			{
				*pok=index[i];
				pok++;
			}
		}
		Pretvori(s,sifrarnik);

	return s;
}
char* dekodiraj(char *s,char *sifrarnik)
{

	char *p=s;

		while(*p!='\0')
		{
			*p=sifrarnik[126-*p];
			p++;
		}
	return s;

}
int main() {

	char tekst[] = ""U ovom testu cemo testirati samo kodiranje"";
    char sifrarnik[100] = """";
    kodiraj(tekst, sifrarnik);
    printf(""%s\n"", tekst);
    dekodiraj(tekst, sifrarnik);
    printf (""%s\n"", tekst);
    printf(""%s\n"", sifrarnik);

	return 0;
}
"
1331,18,18,0,23,A2016/Z5/Z1/student4416,A2016/Z5/Z1/student8776,"#include <stdio.h>
struct Student {
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};
float prosj(int *ocj,int brocj){
	int suma=0,i;
	for(i=0;i<brocj;i++){
		if(ocj[i]==5) return 5;
		suma=suma+ocj[i];
	}
	if (suma==0) return 5;
	return (float)suma/brocj;
}
int leks(char*i1,char*p1,char*i2,char*p2){
	while(*p1!=0 && *p2!=0){
		if(*p1<*p2) return 1;
		if(*p1>*p2) return 2;
		p1++;
		p2++;
	}
	if(*p1!=0) return 2;
	if(*p2!=0) return 1;
	while(*i1!=0 && *i2!=0){
		if(*i1<*i2) return 1;
		if(*i1>*i2) return 2;
		i1++;
		i2++;
	}
	if(*i1!=0) return 2;
	if(*i2!=0) return 1;
	return 0;
}
int genijalci(struct Student *niz, int velicina, float prosjek){
	int veci,i,j,max1=0,max2=0,max3=0;
	float t,p1=0,p2=0,p3=0;
	for(i=0;i<velicina;i++){
		if(prosjek>prosj(niz[i].ocjene,niz[i].br_ocjena)){
			for (j=i;j<velicina-1;j++){
				niz[j]=niz[j+1];
			}
			i--;
			velicina--;
		}
	}
	for(i=0;i<velicina;i++){
		t=(prosj(niz[i].ocjene,niz[i].br_ocjena));
		if(t>p1){
			p3=p2;
			max3=max2;
			p2=p1;
			max2=max1;
			p1=t;
			max1=i;
		}
		else if(t==p1){
			veci=leks(niz[i].ime,niz[i].prezime,niz[max1].ime,niz[max1].prezime);
			if(veci==1){
				p3=p2;
				max3=max2;
				p2=p1;
				max2=max1;
				p1=t;
				max1=i;
			}
			else if(veci==2){
				veci=leks(niz[i].ime,niz[i].prezime,niz[max2].ime,niz[max2].prezime);
				if(veci==1){
					p3=p2;
					max3=max2;
					p2=t;
					max2=i;
				}
				else if(veci==2){
					veci=leks(niz[i].ime,niz[i].prezime,niz[max3].ime,niz[max3].prezime);
					if(veci==1 || veci==0){	
						p3=t;
						max3=i;
					}
				}	
			}
			else if(veci==0){
				p3=p2;
				max3=max2;
				p2=t;
				max2=i;
			}
		}
		else if(t>p2){
			p3=p2;
			max3=max2;
			p2=t;
			max2=i;
		}
		else if(t==p2){
			veci=leks(niz[i].ime,niz[i].prezime,niz[max2].ime,niz[max2].prezime);
			if(veci==1){
				p3=p2;
				max3=max2;
				p2=t;
				max2=i;
			}
			else if(veci==2){
				veci=leks(niz[i].ime,niz[i].prezime,niz[max3].ime,niz[max3].prezime);
				if(veci==1){
					p3=t;
					max3=i;
				}
			}
			else if(veci==0){
				p3=t;
				max3=i;
			}
		}
		else if(t>p3){
			p3=t;
			max3=i;
		}
		else if(t==p3){
			veci=leks(niz[i].ime,niz[i].prezime,niz[max3].ime,niz[max3].prezime);
			if(veci==1){
				p3=t;
				max3=i;
			}
		}
	}
	if(p1>0) printf(""\n%s %s"",niz[max1].prezime,niz[max1].ime);
	if(p2>0) printf(""\n%s %s"",niz[max2].prezime,niz[max2].ime);
	if(p3>0) printf(""\n%s %s"",niz[max3].prezime,niz[max3].ime);	
	return velicina;
}
int main() {
	struct Student studenti[4] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,8,8}, 5},
};
genijalci(studenti, 4, 6.5);
	return 0;
}
","#include <stdio.h>

#define epsilon 0.0001

struct Student{
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};

int uporedi(char* s1, char*s2){
	while(*s1!='\0' && *s2!='\0'){
		if (*s1 < *s2) return 1;
		if (*s1 > *s2) return 2;
		s1++; s2++;
	}
	if(*s1!='\0') return 2;
	if(*s2!='\0') return 1;
	
	return 0;
}
float prosjek(int niz[], int vel){
	int i=0, suma=0;
	if(vel==0) return 5;
	for(i=0; i<vel; i++){
		if(niz[i]==5) return 5;
		suma+=niz[i];
	}
	return (float)suma/vel;
}
int dalijeveci ( struct Student pr, struct Student dr){
	float prosjekprvog=prosjek(pr.ocjene, pr.br_ocjena);
	float prosjekdrugog=prosjek(dr.ocjene, dr.br_ocjena);
	int sta_je_vratila_f=uporedi(pr.prezime, dr.prezime);

	if(prosjekprvog > prosjekdrugog) return 1;
	if(prosjekprvog < prosjekdrugog) return 0;
	
	if(sta_je_vratila_f==1) return 1;
	if(sta_je_vratila_f==2) return 0;
	
	sta_je_vratila_f=uporedi(pr.ime, dr.ime);
	if(sta_je_vratila_f==1) return 1;
	if(sta_je_vratila_f==2) return 0;
	
	else return 1;
}
int genijalci(struct Student niz[], int vel, double prosjekk){
	int i,j,indexprvi,indexdrugi,indextreci,indexmin=0;
	double min=10;
	for(i=0; i<vel; i++){
		if(prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon) {
			for(j=i; j<vel-1; j++){
				niz[j]=niz[j+1];
			}
			vel--;
			i--;
		}
	}
	
for(i=0; i<vel;i++)	{
	if(min-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon){
		min=prosjek(niz[i].ocjene,niz[i].br_ocjena);
		indexmin=i;
	}
	
}

if(vel>0){
	indexprvi=indexmin;
	for(i=0; i<vel;i++){
		if(dalijeveci(niz[i],niz[indexprvi]))
		indexprvi=i;
	}
	printf(""\n%s %s\n"", niz[indexprvi].prezime, niz[indexprvi].ime);
}
if(vel>1){
	indexdrugi=indexmin;
	for(i=0; i<vel;i++){
		if(i==indexprvi) continue;
		
		if(dalijeveci(niz[i], niz[indexdrugi])){
			indexdrugi=i;
		}
	}
	printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
}
if(vel>2){
	
	indextreci=indexmin;
	for(i=0; i<vel;i++){
		if(i==indexprvi || i==indexdrugi) continue;
		if(dalijeveci(niz[i],niz[indextreci]))
		indextreci=i;
	}
	printf(""%s %s\n"",niz[indextreci].prezime, niz[indextreci].ime);
}
return vel;

}



int main() {
struct Student studenti[5]={
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Meho"", ""Mujic"", {7,7,7,7,8},5},
	{""Beba"", ""Bebic"", {10,10,10,10,5},5},
	{""Mujo"", ""Mujic"", {7,7,7,7,8},5},
	{""Fata"", ""Fatic"", {7,7,7,7,8},5},
};
genijalci (studenti, 5, 6.5);
	return 0;
}



"
1334,11,11,0,31,A2016/Z5/Z3/student9897,A2016/Z5/Z3/student8776,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati, minute, sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

void unesi(char niz[]) {
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<9 && znak!='\n') {
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	while(znak!='\n')
	znak=getchar();
}


int ucitaj_datoteku(struct Cas raspored[]) {
	FILE *ulaz=fopen(""raspored.dat"", ""rb+"");
	int greska=0;
	FILE *ulaz1=fopen(""raspored.dat"", ""rb+"");
	if(ulaz==NULL || ulaz1==NULL) {
		greska=1;
		return 0;
	}
  
   int ucitano=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz);
   int ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);
   fclose(ulaz);
   fclose(ulaz1);

return ucitano1                      ;
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova) {
	FILE* dat=fopen(""raspored.dat"", ""wb"");
	int vel=sizeof(struct Cas);
    int ucitano=fwrite(raspored,vel,broj_casova,dat);
	fclose(dat);
	if(ucitano>0) return 1;
	return ucitano;
	}

void ispis_rasporeda(struct Cas raspored[], int broj_casova) {
	int i, j, k, x, s, min=100, max=0;
	int indexmaxa=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].pocetak.sati<min) min=raspored[i].pocetak.sati;
		if(raspored[i].kraj.sati>max) {
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	if(raspored[indexmaxa].kraj.minute==0) max=max-1;
	printf(""\n       PON       UTO       SRI"");
	printf(""       CET       PET       SUB\n"");
	for(i=min;i<=max;i++) {
		if(i<10) printf(""%d:00   "",i);
		else printf(""%d:00  "", i);
		
		for(j=1;j<7;j++) {
			for(k=0;k<broj_casova;k++) {
				s=raspored[k].pocetak.sati; 
				if(s<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i) {
					printf(""%-10s"", raspored[k].predmet);
					break;
					x=i;
				}
			}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");
		}
		printf(""\n"");
	}
	//printf(""\n"");
}

int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas) {
	int i;
	for(i=0;i<broj_casova;i++) {
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&
		(cas.pocetak.minute+cas.pocetak.sati*60==raspored[i].pocetak.minute+raspored[i].pocetak.sati*60
		|| raspored[i].kraj.minute+raspored[i].kraj.sati*60==cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && 
		(raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.pocetak.minute+cas.pocetak.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.pocetak.minute+cas.pocetak.sati*60 || 
		cas.pocetak.minute+cas.pocetak.sati*60<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 &&
		cas.kraj.minute+cas.kraj.sati*60>raspored[i].kraj.minute+raspored[i].kraj.sati*60 ||
		raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
	}
	return 0;
}

void ispisi_dan(struct Cas raspored[], int broj_casova, int dan) {
	int brojac=1;
	int i;
	printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) {
			printf(""\n%d) %s (%02d:%02d-%02d:%02d)"", brojac,
			raspored[i].predmet, raspored[i].pocetak.sati,
			raspored[i].pocetak.minute,raspored[i].kraj.sati,
			raspored[i].kraj.minute);
			brojac++;
		}
	}
}

void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj) {
	int i, j;
	int k=0;
	int n=1;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) { k++; n++; }
		if(k==redni_broj) {
			for(j=i;j<broj_casova-1;j++) {
				raspored[j]=raspored[j+1];
			}
			if(n>0) break;
			return;
		}
	}
}

int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje) {
	if(broj_casova==200 || trajanje>10) return 0;
	int i, k, pocetak, dan, poc, moze=0;
	struct Cas cas;
	
	for(i=1;i<7;i++) 
	  for(k=9;k<=19-trajanje;k++) {
	  	dan=i;
	  	poc=k;
	  	strcpy(cas.predmet,predmet);
	  	cas.dan_u_sedmici=dan;
	  	cas.pocetak.sati=poc;
	  	cas.kraj.sati=k+trajanje;
	  	cas.pocetak.minute=cas.kraj.minute=0;
	  	if(preklapanje(raspored,broj_casova,cas)==0) {
	  	raspored[broj_casova]=cas;
	  	return 1;
	  }
}
  return 0;
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan,int redni_broj, struct Cas promjena) {
	int i;
	int k=0;
	int index=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) k++;
		if(k==redni_broj) {
			index=i;
			break;
		}
}
  raspored[index]=promjena;
}

int poziv(struct Cas raspored[], int ucit, char* ime, int br) {
	int vr=dodaj_cas(raspored,ucit,ime,br);
	return vr;
}

struct Cas zamj(struct Cas casko, int dan, int sat, int min, int sat1, int min1) {
	casko.dan_u_sedmici=dan;
	casko.pocetak.sati=sat;
	casko.pocetak.minute=min;
	casko.kraj.sati=sat1;
	casko.kraj.minute=min1;
	return casko;
	
}
int main() {
	struct Cas raspored[KAPACITET];
	int ucit=ucitaj_datoteku(raspored);
	int broj, br, rez, dan, cs, zap, m;
	char ime[100];
	for (m=0;m<KAPACITET;m++)
	{
		raspored[m].pocetak.sati=0;
		raspored[m].kraj.sati=0;
		raspored[m].dan_u_sedmici=1;
		raspored[m].pocetak.minute=0;
		raspored[m].kraj.minute=0;
		raspored[m].pocetak.sekunde=0;
		raspored[m].kraj.sekunde=0;
	}
	poc:
	printf(""1) Ispis rasporeda\n"");
	printf(""2) Dodavanje casa\n"");
	printf(""3) Promjena casa\n"");
	printf(""4) Brisanje casa\n"");
	printf(""0) Kraj rada\n"");
	printf(""Izaberite opciju: "");
	scanf(""%d"", &broj);
	switch(broj) {
		case 1:
		ispis_rasporeda(raspored,ucit);
		if(broj==0) return 0;
		break;
		
		case 2:
		printf(""Unesite naziv predmeta: "");
		unesi(ime);
		printf(""Unesite broj casova: "");
		scanf(""%d"", &br);
		if(broj==0) return 0;
		rez=poziv(raspored,ucit,ime,br);
		if(rez==0) printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"", br);
		if(rez==1) ucit++;
		break;
	
       case 4:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     ispisi_dan(raspored,ucit,dan);
     printf(""\nIzaberite koji cas zelite obrisati: "");
     scanf(""%d"", &cs);
     obrisi_cas(raspored,ucit,dan,cs);
     if(broj==0) return 0;
     printf(""Cas obrisan\n"");
     ucit--;
     break;
     
     case 3:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     int sat, min;
     char z;
     int sat1, min1;
     char z1;
     ispisi_dan(raspored,ucit,dan);
     if(broj==0) return 0;
     printf(""\nIzaberite koji cas zelite promijeniti: "");
     scanf(""%d"", &cs);
     printf(""Naziv predmeta: "");
     unesi(ime);
     printf(""Vrijeme pocetka: "");
     scanf(""%d"", &sat);
     scanf(""%c"", &z);
     scanf(""%d"", &min);
     printf(""Vrijeme zavrsetka: "");
     scanf(""%d"", &sat1);
     scanf(""%c"", &z1);
     scanf(""%d"", &min1);
     struct Cas casko={ime,dan,{sat,min,0},{sat1,min1,0}};
     strcpy(casko.predmet,ime);
     casko=zamj(casko,dan,sat,min,sat1,min1);
     promijeni_cas(raspored,ucit,dan,cs,casko);
     break;
     
     case 0:
     zap=zapisi_datoteku(raspored,ucit);
     return 0;
	}
	if(broj!=0) goto poc;
	return 0;
}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme{
	int sati, minute, sekunde;
};

struct Cas{
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};
char unesi(char niz[], int velicina){
	char znak=getchar();
	int i=0;
	if(znak=='\n') znak=getchar();
	
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
	
	return znak;
}
void ocisti(char znak){
	while(znak!='\n')
	znak=getchar();
		
}
int ucitaj_datoteku(struct Cas raspored[]){
	FILE*ulaz=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL){
		return 0;
	}
	int ucitano=fread(raspored,sizeof(struct Cas),KAPACITET,ulaz);
	fclose(ulaz);
	return ucitano;
}
void ispis_rasporeda(struct Cas raspored[],int broj_casova){
	int i,j,pocetak=9,kraj=0,k,ispisan=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>=kraj){
		kraj=raspored[i].kraj.sati;
			if(raspored[i].kraj.minute==0) kraj--;
		}
		if(raspored[i].pocetak.sati<pocetak)
		pocetak=raspored[i].pocetak.sati;
	}
	char dani[][4]={""PON"", ""UTO"", ""SRI"", ""CET"", ""PET"", ""SUB""};
	printf(""\n"");
	for(i=0; i<6;i++)
		printf(""%10s"", dani[i]);
	printf(""\n"");
	for(i=pocetak;i<=kraj; i++){
		if(i<10)
		printf(""%d:00   "", i);
		else 
		printf(""%d:00  "", i);
		
		for(j=0; j<6; j++){
			ispisan=0;
			for(k=0;k<broj_casova;k++){
				if(raspored[k].dan_u_sedmici==j+1 && raspored[k].pocetak.sati<=i && raspored[k].kraj.sati>=i){
					printf(""%-10s"", raspored[k].predmet);
					ispisan=1;
					break;
				}
			}
			if(ispisan==0)
			printf(""          "");
		}
		printf(""\n"");
	}
}
void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
	int i=0;
	printf(""Uneseni su casovi: "");
	int k=1;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan){
			int sat=raspored[i].pocetak.sati;
			int min=raspored[i].pocetak.minute;
		
			printf(""\n%d) %s ("", k++, raspored[i].predmet);
			if(sat<10) printf(""0"");
			printf(""%d:"",sat);
			if(min<10) printf(""0"");
			printf(""%d-"", min);
			if(raspored[i].kraj.sati<10) printf(""0"");
			printf(""%d:"", raspored[i].kraj.sati);
			if(raspored[i].kraj.minute<10) printf(""0"");
			printf(""%d)"", raspored[i].kraj.minute);
			
		}
	}
}
void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,j=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) j++;
		if(redni_broj==j){
			for(;i<broj_casova-1; i++)
			raspored[i]=raspored[i+1];
			break;
		}
		
	}
}
int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){
	int i=0;
	for(i=0; i<broj_casova; i++){
		if(cas.dan_u_sedmici==raspored[i].dan_u_sedmici){
			if(raspored[i].pocetak.sati==cas.pocetak.sati || raspored[i].kraj.sati==cas.kraj.sati)
			return 1;
			if(raspored[i].pocetak.sati==cas.kraj.sati && raspored[i].pocetak.minute<cas.kraj.minute)
			return 1;
			if(raspored[i].kraj.sati==cas.pocetak.sati && raspored[i].kraj.minute>cas.pocetak.minute)
			return 1;
			if(raspored[i].pocetak.sati<cas.pocetak.sati && raspored[i].kraj.sati>cas.kraj.sati)
			return 1;
			if(raspored[i].pocetak.sati>cas.pocetak.sati && raspored[i].kraj.minute<cas.kraj.minute)
			return 1;
			if(raspored[i].pocetak.sati> cas.pocetak.sati && raspored[i].pocetak.sati<cas.kraj.sati)
			return 1;
			if(raspored[i].kraj.sati> cas.pocetak.sati && raspored[i].pocetak.sati < cas.kraj.sati)
			return 1;
			
		}
	}
	return 0;
}
int dodaj_cas (struct Cas raspored[], int broj_casova, const char*predmet, int trajanje){
	if(broj_casova==200) return 0;
	int i, j, preklop;
	for(i=0; i<6; i++)
	for(j=9; j<=19-trajanje; j++){
		struct Cas cas={"""", i+1,{j,0,0},{j+trajanje,0,0}};
		char *q=cas.predmet, *p=(char*)predmet;
		while(*q++=*p++);
		preklop=preklapanje(raspored,broj_casova, cas);
		if(preklop==0){
		raspored[broj_casova]=cas;
		return 1;
	}
		
	}
	return 0;
	
}
void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
	int i, redni=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni) 
		raspored[i]=promjena;
	}
}
int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	FILE*ulaz=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL){
		printf(""Otvaranje datoteke raspored nije uspjelo."");
		return 0;
	}
	int zapisano=fwrite(raspored, sizeof(struct Cas), broj_casova,ulaz);
	fclose(ulaz);
	if(zapisano>=1) return 1;
	else
	return 0;
}


int main() {
	int opcija,broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do{
		printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
		scanf(""%d"", &opcija);
		if(opcija==0)
		zapisi_datoteku(raspored, broj_casova);
		if(opcija==1)
		ispis_rasporeda(raspored, broj_casova);
		if(opcija==2){
			int br_casova, dodan=0;
			char predmet[10];
			printf(""Unesite naziv predmeta: "");
			ocisti(unesi(predmet, 10));
			printf(""Unesite broj casova: "");
			scanf(""%d"",  &br_casova);
			dodan=dodaj_cas(raspored,broj_casova,predmet, br_casova);
			if(dodan==1)
			broj_casova++;
			else
			printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"", br_casova);
		}
		if(opcija==3){
			struct Cas promjena;
			int dan, redni;
		
			printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
			scanf(""%d"", &dan);
		
			ispisi_dan(raspored, broj_casova, dan);
			promjena.dan_u_sedmici=dan;
		
			printf(""\nIzaberite koji cas zelite promijeniti:  "");
			scanf(""%d"", &redni);
		
			printf(""Naziv predmeta: "");
		
			char predmet[10];
			ocisti(unesi(predmet, 10));
			char*q=promjena.predmet, *p=predmet;
			while(*q++=*p++);
			char znak;
			printf(""Vrijeme pocetka: "");
			scanf(""%d%c%d"",&promjena.pocetak.sati, &znak, &promjena.pocetak.minute);
			
			printf(""Vrijeme zavrsetka: "");
			scanf(""%d%c%d"",&promjena.kraj.sati, &znak, &promjena.kraj.minute);
			
			promijeni_cas(raspored,broj_casova,dan,redni,promjena);
			
			
		}
		if(opcija==4){
			int dan, redni;
			printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
			scanf(""%d"", &dan);
			ispisi_dan(raspored,broj_casova, dan);
			printf(""\nIzaberite koji cas zelite obrisati: "");
			scanf(""%d"", &redni);
			obrisi_cas(raspored, broj_casova, dan, redni);
			printf("" Cas obrisan\n"");
			broj_casova--;
			
		}
	}
	while(opcija!=0);
	
	return 0;
}
"
1336,58,58,0,36,A2016/Z1/Z3/student5573,A2016/Z1/Z3/student1483,"#include <stdio.h>

int main() {
	int c=0,p=0,b=0,s=0,v=0,uk=0;
	float postotak;
	char boja=' ';
	printf(""Unesite vozila: "");
//	scanf(""%c"",&boja);
	while(boja!='k' || boja!='K')
	{
		scanf(""%c"",&boja);
		if(boja=='k' || boja=='K')
		{
			goto l1;
		}
		if(boja=='v' || boja=='V')
		{
			v++;
			uk++;
		}
		if(boja=='p' || boja=='P')
		{
			p++;
			uk++;
		}
		if(boja=='c' || boja=='C')
		{
			c++;
			uk++;
		}
		if(boja=='b' || boja=='B')
		{
			b++;
			uk++;
		}
		if(boja=='s' || boja=='S')
		{
			s++;
			uk++;
		}
		if(boja!='c' && boja!='s' && boja!='v' && boja!='p' && boja!='b' && boja!='C' && boja!='S' && boja!='V' && boja!='P' && boja!='B' && boja!='k' && boja!='K')
		{
			printf(""Neispravan unos\n"");
		}
	}
	l1:
	printf(""Ukupno evidentirano %d vozila.\n"",uk);
	if(uk==0)
	{
		printf(""Najpopularnija boja je crna (0.00%%)."");
		return 0;
	}
	if(c>s && c>v && c>p && c>b)
	{
		postotak=((float)c/uk)*100;
		printf(""Najpopularnija boja je crna (%.2f%%)."",postotak);
		return 0;
	}
	if(s>c && s>v && s>p && s>b)
	{ 
		postotak=((float)s/uk)*100;
		printf(""Najpopularnija boja je siva (%.2f%%)."",postotak);
		return 0;
	}
	if(v>s && v>c && v>p && v>b)
	{
		postotak=((float)v/uk)*100;
		printf(""Najpopularnija boja je crvena (%.2f%%)."",postotak);
		return 0;
	}
	if(p>s && p>v && p>c && p>b)
	{
		postotak=((float)p/uk)*100;
		printf(""Najpopularnija boja je plava (%.2f%%)."",postotak);
		return 0;
	}
	if(b>s && b>v && b>p && b>c)
	{
		postotak=((float) b/uk)*100;
		printf(""Najpopularnija boja je bijela (%.2f%%)."",postotak);
		return 0;
	}
	if(c==s)
	{
	postotak=((float)c/uk)*100;
		printf(""Najpopularnija boja je crna (%.2f%%)."",postotak);	
	}

	if(s==v && v==p)
	{
	postotak=((float)s/uk)*100;
	printf(""Najpopularnija boja je siva (%.2f%%)."",postotak);	
	}
	
	return 0;
}
","#include <stdio.h>

int main () {
int c,p,b,s,v,uk;

c=0;
p=0;
b=0;
s=0;
v=0;
uk=0;
float pr;
char boja=' ';
printf (""Unesite vozila: "");
while (boja!='k' || boja!='k'){
scanf (""%c"", &boja);
    
    if (boja=='c' || boja=='C'){
        
        c=c+1;
        uk=uk+1;
        }
    
    if (boja=='b' || boja=='B'){
        b=b+1;
        uk=uk+1;
        }
        
    if(boja=='s' || boja=='S'){
		s=s+1;
		uk=uk+1;
		}
		
	if(boja=='v' || boja=='V'){
		v=v+1;
	    uk=uk+1;
		}
	if(boja=='p' || boja=='P'){
		p=p+1;
		uk=uk+1;
	    }

if (boja!='c' && boja!='C'
&& boja!='b' && boja!='B' 
&& boja!='s' && boja!='S'
&& boja!='v' && boja!='V'
&& boja!='p' && boja!='P'
&& boja!='k'&& boja!='K'){
printf (""Neispravan unos \n"");
}
    if(boja=='k' || boja=='K'){
    goto l1;
}
}
l1:
    printf(""Ukupno evidentirano %d vozila.\n"",uk);

    if(uk==0){  
    printf(""Najpopularnija boja je crna (0.00%%)."");
return 0;
}
    if(c<v  && b<v  && s<v  && v>=p){
    pr=((float)v/uk)*100;
    printf(""Najpopularnija boja je crvena (%.2f%%)."",pr);	
}
    if(c<p  && b<p  && s<p  && v<p){
    pr=((float)p/uk)*100;
    printf(""Najpopularnija boja je plava (%.2f%%)."",pr);	
}

    if(c>=b  && c>=s  && c>=v  && c>=p){
    pr=((float)c/uk)*100;
    printf(""Najpopularnija boja je crna (%.2f%%)."",pr);
}
    if (c<b &&  b>=s && b>=v && b>=p){
    pr=((float)b/uk)*100;
    printf(""Najpopularnija boja je bijela (%.2f%%)."",pr);
}
    if(c<s  && b<s  && s>=v  && s>=p){
    pr=((float)s/uk)*100;
    printf(""Najpopularnija boja je siva (%.2f%%)."",pr);	
}
return 0;
}






    
    
    
    
    





"
1348,99,99,0,97,A2016/Z3/Z2/student5789,A2016/Z3/Z2/student1029,"#include <stdio.h>

int cifre(int n)
{
	int suma=0;
	if(n<0) n=-n; /*za negativne brojeve*/
	
	while(n>0)
	{
		suma+=n%10; /*rastavljane broja na cifre i sabiranje njegovih cifara*/
		n/=10; /*sljedeca cifra*/
	}
	
	return suma;
}

void ubaci(int *niz, int n)
{
	int niz2[100];
	int i=0;
	
	for(i=0;i<n;i++)
	{
		niz2[i*2]=niz[i]; /*na parnim indeksima stari niz*/
		niz2[i*2+1]=cifre(niz[i]); /*ubacujemo izmedju elemenata starog niza sumu njegovuh cifara, na neparnim indeksima*/
	}

	for(i=0;i<2*n;i++) niz[i]=niz2[i]; /*niz nakon ubacivanja*/
}

int fibonacijev(int n)
{
	int a[100]={1,1,2}; /*prva tri broja Fibonacijevog niza*/
	int i=2; /* krecemo od elementa u nizu sa indeksom 2*/
	
	do{
		i++; /*povecavamo indeks*/
		a[i]=a[i-1]+a[i-2]; /*novi element je suma prethodna dva*/
	}while(a[i]>0);
	
	for(;i>=0;i--)
	{
		if(n==a[i]) return 1; /*broj je Fibonacijev*/
	}
	
	return 0;
}

int izbaci(int *niz, int n)
{
	int niz2[100];
	int i=0,j=0;
	
	for(i=0;i<n;i++)
	{
		if(fibonacijev(niz[i])==0) niz2[j++]=niz[i]; /*Ako broj nije Fibonacijev dodajemo ga u novi niz, j++ nam povecava indeks*/
	}

	
	for(i=0;i<j;i++)
	{
		niz[i]=niz2[i]; /*Niz nakon izbacivanja*/
	}
	
	return j;
}

int main()
{
	int niz[100];
	
	int i;
	int n=20;
	
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	{
		scanf(""%d"",&niz[i]);
	}

	ubaci(niz, 10);
	n=izbaci(niz, 20);

	if(n==0) printf(""Prazan niz.\n""); /*Ukoliko nam ne ostane nijedan element u nizu nakon izbacivanja*/
	else
	{
		printf(""Modificirani niz glasi: "");
		printf(""%d"", niz[0]);
		
		for(i=1;i<n;i++)
		{
			printf("", %d"", niz[i]);
		}
		
		printf(""."");
	}
	

	return 0;
}","#include <stdio.h>

int cifre(int n)
{
	int suma=0;
	if(n<0) n=-n; /*za negativne brojeve*/
	
	while(n>0)
	{
		suma+=n%10; /*rastavljane broja na cifre i sabiranje njegovih cifara*/
		n/=10; /*sljedeca cifra*/
	}
	
	return suma;
}

void ubaci(int *niz, int n)
{
	int niz2[100];
	int i=0;
	
	for(i=0;i<n;i++)
	{
		niz2[i*2]=niz[i]; /*na parnim indeksima stari niz*/
		niz2[i*2+1]=cifre(niz[i]); /*ubacujemo izmedju elemenata starog niza sumu njegovuh cifara, na neparnim indeksima*/
	}

	for(i=0;i<2*n;i++) niz[i]=niz2[i]; /*niz nakon ubacivanja*/
}

int fibonacijev(int n)
{
	int a[100]={1,1,2}; /*prva tri broja Fibonacijevog niza*/
	int i=2; /* krecemo od elementa u nizu sa indeksom 2*/
	
	do{
		i++; /*povecavamo indeks*/
		a[i]=a[i-1]+a[i-2]; /*novi element je suma prethodna dva*/
	}while(a[i]>0);
	
	for(;i>=0;i--)
	{
		if(n==a[i]) return 1; /*broj je Fibonacijev*/
	}
	
	return 0;
}

int izbaci(int *niz, int n)
{
	int niz2[100];
	int i=0,j=0;
	
	for(i=0;i<n;i++)
	{
		if(fibonacijev(niz[i])==0) niz2[j++]=niz[i]; /*Ako broj nije Fibonacijev dodajemo ga u novi niz, j++ nam povecava indeks*/
	}

	
	for(i=0;i<j;i++)
	{
		niz[i]=niz2[i]; /*Niz nakon izbacivanja*/
	}
	
	return j;
}

int main()
{
	int niz[100];
	
	int i;
	int n=20;
	
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	{
		scanf(""%d"",&niz[i]);
	}

	ubaci(niz, 10);
	n=izbaci(niz, 20);

	if(n==0) printf(""Prazan niz.\n""); /*Ukoliko nam ne ostane nijedan element u nizu nakon izbacivanja*/
	else
	{
		printf(""Modificirani niz glasi: "");
		printf(""%d"", niz[0]);
		
		for(i=1;i<n;i++)
		{
			printf("", %d"", niz[i]);
		}
		
		printf(""."");
	}
	

	return 0;
}"
1350,98,98,0,34,A2016/Z3/Z1/student8363,A2016/Z3/Z1/student1938,"#include <stdio.h>

int daj_prost(){
    static int i=2;
    int j,c;
    while(1)
    {
        c=1;
        for(j=2;j<i/2+1;j++)
        {
            if(i%j==0){c=0;i++;break;}
        }
        if(c)return i++;
    }
    
}
int main(){
    int i,a,b,temp,suma=0;
    do{
        printf(""Unesite brojeve A i B: "");
        scanf(""%d %d"",&a,&b);
        if(a<1)printf(""A nije prirodan broj.\n"");
        if(a>=b)printf(""A nije manje od B.\n"");
    }
    while(a>=b || a<1);
    temp=2;
    while(temp<b)
    {
        temp=daj_prost();
        for(i=a+1;i<b;i++){
        if(i==temp){suma+=i;break;}
    }
        
    }
    printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b,suma);
    return 0;
}","#include <stdio.h>

int daj_prost(){
    static int i=2;
    int j,c;
    while(1)
    {
        c=1;
        for(j=2;j<i/2+1;j++)
        {
            if(i%j==0){c=0;i++;break;}
        }
        if(c)return i++;
    }
    
}
int main(){
    int i,a,b,temp,suma=0;
    do{
        printf(""Unesite brojeve A i B: "");
        scanf(""%d %d"",&a,&b);
        if(a<1)printf(""A nije prirodan broj.\n"");
        if(a>=b)printf(""A nije manje od B.\n"");
    }
    while(a>=b || a<1);
    temp=2;
    while(temp<b)
    {
        temp=daj_prost();
        for(i=a+1;i<b;i++){
        if(i==temp){suma+=i;break;}
    }
        
    }
    printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b,suma);
    return 0;
}"
1356,85,85,0,143,A2016/Z1/Z1/student8774,A2016/Z1/Z1/student4644,"#include <stdio.h>

int main() {
	double z1, z2, z3, p1, p2, p3, pp1, pp2, pp3, dp1, dp2, dp3, u1, u2, u3, ub1, ub2, ub3, o1, o2, o3;
	printf (""Unesite bodove za Tarika: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &pp1);
	if (pp1<0 || pp1>20) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &dp1);
	if (dp1<0 || dp1>20){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%lf"", &p1);
	if (p1<0 || p1>10){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%lf"", &z1);
	if (z1<0 || z1>10) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &u1);
	if (u1<0 || u1>40) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	
	printf (""Unesite bodove za Bojana: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &pp2);
	if (pp2<0 || pp2>20) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &dp2);
	if (dp2<0 || dp2>20){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%lf"", &p2);
	if (p2<0 || p2>10){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%lf"", &z2);
	if (z2<0 || z2>10) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &u2);
	if (u2<0 || u2>40) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	
	printf (""Unesite bodove za Mirzu: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &pp3);
	if (pp3<0 || pp3>20) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &dp3);
	if (dp3<0 || dp3>20){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%lf"", &p3);
	if (p3<0 || p3>10){
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%lf"", &z3);
	if (z3<0 || z3>10) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &u3);
	if (u3<0 || u3>40) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	
	ub1=p1+pp1+dp1+z1+u1;
	if (ub1>=55 && ub1<65){
		o1=6;
	}
	else if (ub1>=65 && ub1<75){
		o1=7;
	}
	else if (ub1>=75 && ub1<85){
		o1=8;
	}
	else if (ub1>=85 && ub1<92){
		o1=9;
	}
	else if (ub1>=92 && ub1<=100){
		o1=10;
	}
	ub2=p2+pp2+dp2+z2+u2;
		if (ub2>=55 && ub2<65){
		o2=6;
	}
	else if (ub2>=65 && ub2<75){
		o2=7;
	}
	else if (ub2>=75 && ub2<85){
		o2=8;
	}
	else if (ub2>=85 && ub2<92){
		o2=9;
	}
	else if (ub2>=92 && ub2<=100){
		o2=10;
	}
	ub3=p3+pp3+dp3+z3+u3;
		if (ub3>=55 && ub3<65){
		o3=6;
	}
	else if (ub3>=65 && ub3<75){
		o3=7;
	}
	else if (ub3>=75 && ub3<85){
		o3=8;
	}
	else if (ub3>=85 && ub3<92){
		o3=9;
	}
	else if (ub3>=92 && ub3<=100){
		o3=10;
	}
	
	
	if (ub1>=55 && ub2>=55 && ub3>=55) {
		printf (""Sva tri studenta su polozila."");
		if (o1==o2 && o1==o3 && o2==o3) {
			printf (""\nSva tri studenta imaju istu ocjenu."");
		}
		else if (o1!=o2 && o1!=o3 && o2!=o3) {
			printf (""\nSvaki student ima razlicitu ocjenu."");
		}
		else if ((o1==o2 && o1!=o3 && o2!=o3) || (o1==o3 && o1!=o2 && o3!=o2) || (o2==o3 && o2!=o1 && o3!=o1)){
			printf (""\nDva od tri studenta imaju istu ocjenu."");
		}
	}
	else if ((ub1<55 && ub2>=55 && ub3>=55) || (ub1>=55 && ub2<55 && ub3>=55) || (ub1>=55 && ub2>=55 && ub3<55)) {
		printf (""Dva studenta su polozila."");
	}
	else if ((ub1>=55 && ub2<55 && ub3<55) || (ub1<55 && ub2>=55 && ub3<55) || (ub1<55 && ub2<55 && ub3>=55)) {
		printf (""Jedan student je polozio."");
	}
	else if (ub1<55 && ub2<55 && ub3<55) {
		printf (""Nijedan student nije polozio."");
	}
	
		return 0;
}
","#include <stdio.h>
#include <math.h>

int main() {
	double IP, IIP, P, Z, ZI, IP1, IIP1, P1, Z1, ZI1, IIP2, Z2, ZI2, A, B, C, IP2, P2 ;


	printf(""Unesite bodove za Tarika: \n"");

	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &IP);
	if (IP<0 || IP>20) {
		printf (""Neispravan broj bodova"");
		return 0;
}

	printf(""II parcijalni ispit: \n"");
	scanf(""%lf"" , &IIP);
	if (IIP<0 || IIP>20) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}

	printf(""Prisustvo: \n"");
	scanf(""%lf"", &P);
	if (P<0 || P>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}

	printf(""Zadaca: \n"");
	scanf(""%lf"", &Z);
	if (Z<0 || Z>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Zavrsni ispit: \n"");
	scanf(""%lf"", &ZI);
	if (ZI<0 || ZI>40) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}

	printf(""Unesite bodove za Bojana: \n"");

	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &IP1);
	if (IP1<0 || IP1>20) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"" , &IIP1);
	if (IIP1<0 || IIP1>20) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Prisustvo: "");
	scanf(""%lf"", &P1);
	if (P1<0 || P1>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Zadaca: "");
	scanf(""lf"", &Z1);
	if (Z1<0 || Z1>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Zavrsni ispit: \n"");
	scanf(""lf"", &ZI1);
	if (ZI1<0 || ZI1>40) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Unesite bodove za Mirzu: \n"");

	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &IP2);
	if (IP2<0 || IP2>20) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"" , &IIP2);
	if (IIP2<0 || IIP2>20) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Prisustvo: "");
	scanf(""%lf"", &P2);
	if (P2<0 || P2>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Zadaca: "");
	scanf(""%lf"", &Z2);
	if (Z2<0 || Z2>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &ZI2);
	if (ZI2<0 || ZI2>40) {
		printf (""Neispravan broj bodova"");
		return 0 ;}
		

	A==IP+IIP+P+Z;
	B==IP1+IIP1+P1+Z1;
	C==IP2+IIP2+P2+Z2;



	if (A<55 && B<55 && C<55) {
		printf(""Nijedan student nije polozio.\n"");
	} else if (A<55 && B<55 && C>=55 || A<55 && B>=55 && C<55 || A>=55 && B<55 && C<55 ) {
		printf(""Jedan student je polozio .\n"");
	} else if (A>=55 && B>=55 && C<55 || A<55 && B>=55 && C>=55 || A>=55 && B<55 && C>=55) {
		printf(""Dva studenta su polozila.\n"");
	} else if (A>=55 && B>=55 && C>=55) {
		printf(""Sva tri studenta su polozila.\n"");
	}
	


		if(A>=55&&A<65)
    	    A=6;
	else if(A>=65&&A<75)
    	     A=7;
	else if(A>=75&&A<85)
    	    A=8;
	else if(A>=85&&A<92)
    	     A=9;
	else if(A>=92&&A<=100)
    	    A=10;

    	if(B>=55&&B<65)
    	    B=6;
	else if(B>=65&&B<75)
    	     B=7;
	else if(B>=75&&B<85)
    	    B=8;
	else if(B>=85&&B<92)
    	     B=9;
	else if(B>=92&&A<=100)
    	    B=10;

    	if(C>=55&&C<65)
    	    C=6;
	else if(C>=65&&C<75)
    	    C=7;
	else if(C>=75&&C<85)
    	    C=8;
	else if(C>=85&&C<92)
    	    C=9;
	else if(C>=92&&C<=100)
    	    C=10;

			if(A==B&&B==C) {
          		printf(""Sva tri studenta imaju istu ocjenu."");
			}
			else if(A==B||A==C||B==C) {
          		printf(""Dva od tri studenta imaju istu ocjenu."");
			}
			else {
          		printf(""Svaki student ima razlicitu ocjenu."");
			}
	return 0;
}"
1372,51,51,0,41,A2016/Z3/Z2/student3301,A2016/Z3/Z2/student7255,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define brel 10
#define brel2 20
/* Funkcija ubaci */ 
void ubaci(int *niz,int velicina){
	int i,cifra,broj,broj2=0;
	for (i=velicina-1;i>=0;i--){    /* Pomjeranje clanova niza */ 
		*(niz+2*i)=*(niz+i);
	}
	for (i=0;i<velicina*2;i++){
		if (i%2==1){
			broj=*(niz+i-1);
			while (broj!=0){        /* Dodavanje clanova sabiranjem cifara prethodnog clana */ 
				cifra=broj%10;
				broj2+=cifra;
				broj/=10;
		    }
		    broj2=abs(broj2);
			*(niz+i)=broj2;
			broj2=0;
		}
	}
}

/* Funkcija izbaci */ 
/* Formiranje pretlji za prolazak po nizu i uporedivanje njegovih clanova sa Fibonaccijevim nizom, izbacivanje jednakih */
int izbaci(int *niz,int velicina){
	int i,j,m,prvi=0,drugi=1,slijedeci;
	for (i=0;i<velicina;i++){
		prvi=0;
		drugi=1;
		for (j=1;j<10000;j++){   
			if (j==1) slijedeci=j;                
			else {
				slijedeci=prvi+drugi;
				prvi=drugi;
				drugi=slijedeci;
			}
			if (*(niz+i)==slijedeci){
				for (m=i;m<velicina-1;m++){
						*(niz+m)=*(niz+m+1);
				}
				velicina--;
				i--;
				break;
			}
		}
	}
	return velicina;
}

int main() {
	int niz[20],i,n;
	
	/* Unos elemenata */ 
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0;i<10;i++){
		scanf(""%d"",&niz[i]);
	}
	
	/* Pozivanje funkcije ubaci */ 
	
	ubaci(niz,brel);
	
	/* Pozivanje funkcije izbaci */ 
		
	n=izbaci(niz,brel2);
	
	/* Ispis niza */
	printf (""Modificirani niz glasi: "");
	for (i=0;i<n;i++){
		if (i<(n-1)){
			printf (""%d, "",niz[i]);
	    }
	    else {
	    	printf (""%d. "",niz[i]);
	    }
	}
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define duz 10

void ubaci (int *niz, int vel){
	int S,H=0,c,i,j;
	for(j=vel-1; j>=0; j--){
		niz[2*j]=niz[j];
	}
	for(i=0; i<2*vel; i+=2){
		S=abs(niz[i]);
		if(S<10){
			H=S;
		}
		else {
			do{
				c=S%10;
				H=H+c;
				S/=10;
			}while(S!=0);
		}
		niz[i+1]=H;
		H=0;
	}
}

int izbaci (int *niz, int vel){
	int i,j,k,I=0,II=1,III;
	for(i=0; i<vel; i++){
		I=0;
		II=1;
		for(j=1; j<10000; j++){
			if(j==1){
				III=j;
			}
			else{
				III=I+II;
				I=II;
				II=III;
			}
			if(*(niz+i)==III){
				for(k=i; k<vel-1; k++){
					*(niz+k)=*(niz+k+1);
				}
				vel--;
				i--;
				break;
			}
		}
			
		}
	return vel;
}

int main() {
	int niz[2*duz], i, poziv;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<duz; i++){
		scanf(""%d"", &niz[i]);
		ubaci(niz,duz);
		poziv=izbaci(niz,2*duz);
		printf(""Modificirani niz glasi: "");
		for(i=0; i<poziv; i++){
			if(i<poziv-1){
				printf(""%d."", niz[i]);
			}
			else{
				printf(""%d,"", niz[i]);
			}
		}
	}
	return 0;
}
"
1379,81,81,0,21,A2016/Z1/Z4/student1639,A2016/Z1/Z4/student5496,"#include <stdio.h>

int main() {
	int n,i=0;
	int j=0;
	do{printf(""Unesite broj n: "");
	scanf(""%d"", &n);
	if (n<=0 || n>50){printf(""Pogresan unos\n"");}
	}
	while (n<=0 || n>50);
	if(n==1){printf(""***"");} 
	else{
	 	for (i=0; i<n; i++){
	 		for (j=0; j<4*n-1; j++){
	 			if (i==j || i+j==2*n-2 || i==j-2*(n-1) || i+j-3*(n-1)==n-1){printf(""*"");}
	    			else{printf("" "");}}
	    	 	printf(""\n"");}
	}
	   
		 
	return 0; 
}
","#include <stdio.h>

int main() {
	int i,j,n;
	do
	{
		printf(""Unesite broj n: "");	scanf(""%d"", &n);
	if(n<=0 || n>50) printf(""Pogresan unos\n"");
	} while (n<=0 || n>50); {
		if(n==1) {printf(""***"");
		}else
	for (i=0; i<n; i++)
	 {
	for (j=0; j<4*n-3; j++)
    	{
		if(i==j || i+j-(n-1)==n-1 || i==j-2*(n-1) || i+j-3*(n-1)==n-1) 
		printf(""*"");
		else printf ("" "");
     }
      printf(""\n"");
     }
   
	}
return 0;
}"
1380,56,56,0,26,A2016/Z1/Z3/student9358,A2016/Z1/Z3/student9676,"#include <stdio.h>

int main() {
	char boja_auto='a';
	int brojc=0,brojp=0,brojv=0,brojb=0,brojs=0,brojuk=0;
	float pc,pb,ps,pv,pp;
	printf(""Unesite vozila: "");
	while(boja_auto!='k' && boja_auto!='K')
	{
		scanf(""%c"",&boja_auto);
		if(boja_auto!='c' && boja_auto!='C' && boja_auto!='b' && boja_auto!='B' && boja_auto!='s' && boja_auto!='S' && boja_auto!='V' && boja_auto!='v' && boja_auto!='p' && boja_auto!='P' && boja_auto!='k' && boja_auto!='K') {printf(""Neispravan unos\n""); continue;}
		if(boja_auto=='c' || boja_auto=='C') brojc++;
		if(boja_auto=='b' || boja_auto=='B') brojb++;
		if(boja_auto=='s' || boja_auto=='S') brojs++;
		if(boja_auto=='v' || boja_auto=='V') brojv++;
		if(boja_auto=='p' || boja_auto=='P') brojp++;
		brojuk=brojc+brojp+brojv+brojb+brojs;
		if(brojuk==0)
		{
			printf(""Ukupno evidentirano 0 vozila. \nNajpopularnija boja je crna (0.00%)."");
			return 0;
			
		}
		pc=((float)brojc/(float)brojuk)*100;
		pb=((float)brojb/(float)brojuk)*100;
		ps=((float)brojs/(float)brojuk)*100;
		pv=((float)brojv/(float)brojuk)*100;
		pp=((float)brojp/(float)brojuk)*100;
		
	}
	printf(""Ukupno evidentirano %d vozila.\n"",brojuk);
	if(pc>=pb && pc>=ps && pc>=pv && pc>=pp) printf(""Najpopularnija boja je crna (%.2f%%)."",pc);
	else if(pb>pc && pb>=ps && pb>=pv && pb>=pp) printf(""Najpopularnija boja je bijela (%.2f%%)."",pb);
	else if(ps>pb && ps>pc && ps>=pv && ps>=pp) printf(""Najpopularnija boja je siva (%.2f%%)."",ps);
	else if(pv>pc && pv>pb && pv>ps && pv>=pp) printf(""Najpopularnija boja je crvena (%.2f%%)."",pv);
	else if(pp>pc && pp>pb && pp>ps && pp>pv) printf(""Najpopularnija boja je plava (%.2f%%)."",pp);
	return 0;
}
","#include <stdio.h>

int main() {
	
	char boja;
	int crna=0, bijela=0, siva=0, crvena=0, plava=0, ukupno=0;
	float c, b, s, v, p;
	
	printf(""Unesite vozila: "");
	
	do {
		
		scanf(""%c"", &boja);
		
		if (boja!='c' && boja!='C' && boja!='b' && boja!='B' && boja!='s' && boja!='S' && boja!='v' && boja!='V' && boja!='p' && boja!='P' && boja!='k' && boja!='K'){
			printf(""Neispravan unos\n"");
			
		} else if (boja=='k' || boja=='K'){
			break;
		} else {
			if (boja=='c' || boja=='C'){
			crna++;
			ukupno++;
		} else if (boja=='b' || boja=='B'){
			bijela++;
			ukupno++;
		} else if (boja=='s' || boja=='S'){
			siva++;
			ukupno++;	
		} else if (boja=='v' || boja=='V'){
			crvena++;
			ukupno++;	
		} else if (boja=='p' || boja=='P'){
			plava++;
			ukupno++;	
		}
		}
	
		
	} while (boja != 'k' && boja != 'K');

		
	printf(""Ukupno evidentirano %d vozila."", ukupno);
	
	if (ukupno==0){
		printf(""\nNajpopularnija boja je crna (0.00%%)."");
		return 0;
	}
	
	c = ((float) crna/ukupno)*100;
	b = ((float) bijela/ukupno)*100;
	s = ((float) siva/ukupno)*100;
	v = ((float) crvena/ukupno)*100;
	p = ((float) plava/ukupno)*100;
	
	if (crna>=bijela && crna>=siva && crna>=crvena && crna>=plava){
		
		printf(""\nNajpopularnija boja je crna (%.2f%%)."", c);
		
	} else if (bijela>crna && bijela>=siva && bijela>=crvena && bijela>=plava){
		
		printf(""\nNajpopularnija boja je bijela (%.2f%%)."", b);
		
	} else if (siva>crna && siva>bijela && siva>=crvena && siva>=plava){
	
		printf(""\nNajpopularnija boja je siva (%.2f%%)."", s);
		
	} else if (crvena>crna && crvena>bijela && crvena>siva && crvena>=plava){
		
		printf(""\nNajpopularnija boja je crvena (%.2f%%)."", v);
		
	} else if (plava>crna && plava>bijela && plava>siva && plava>crvena){
		
		printf(""\nNajpopularnija boja je plava (%.2f%%)."", p);
	}
	
	
	return 0;
}
"
1383,99,99,0,208,A2016/Z5/Z1/student1738,A2016/Z5/Z1/student8598,"#include <stdio.h>
#include <string.h>

struct Student
{
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};
int uporedi(char* s1, char* s2)
{
	while (*s1 != '\0' && *s2 != '\0')
	{
		if (*s1 < *s2) return -1;
		if (*s1 > *s2) return 1;
		s1++;
		s2++;
	}
	if (*s1 != '\0') return 1; 
	if (*s2 != '\0') return -1;
	return 0;                 
}
double pros (struct Student n)
{
	int zboc=0,i;
	double pr;

	if (n.br_ocjena==0)
	{
		return 5;
	}

	for (i=0;i<n.br_ocjena;i++)
	{
		if (n.ocjene[i]==5)
		{
			return 5;
		}

	}

	for (i=0;i<n.br_ocjena;i++)
	{
		zboc+=n.ocjene[i];
	}
	pr=(double)zboc/(double)n.br_ocjena;
	return pr;
}
void ispis (struct Student niz[],int v)
{
	int i;
	for (i=0;i<v;i++)
	{
		printf (""\nProsjek za %s %s je %f."" , niz[i].ime,niz[i].prezime,pros(niz[i]));
	}
}

int genijalci (struct Student niz[],int v,double prosjek)
{
	struct Student nbt;
	struct Student nit[250];
	char t[35],ime[35];
	int pom=0,i,j,ret=0;
	double prosjeci[100],nb,temm;

	for (i=0;i<v;i++)
	{
		nit[i]=niz[i];
	}

	for (i=0;i<v;i++)
	{
		prosjeci[i]=pros(nit[i]);
	}
	for (i=0;i<v;i++)
	{
		if (prosjeci[i]<prosjek)
		{
			pom++;
			continue;
		}
	}
	if (pom==v)
	{
		return 0;
	}
	for (i=0;i<v;i++)
	{
		if (prosjeci[i]<prosjek)
		{
			for (j=i;j<v-1;j++)
			{
				prosjeci[j]=prosjeci[j+1];
				nit[j]=nit[j+1];
				niz[j]=niz[j+1];
			}
			v--;
			i--;
		}
	}

	for (i=0;i<v-1;++i)
	{
		for (j=0;j<v-1-i;++j)
		{
			if (prosjeci[j+1]>prosjeci[j])
			{
				nbt=nit[j+1];
				nb=prosjeci[j+1];

				prosjeci[j+1]=prosjeci[j];
				nit[j+1]=nit[j];

				prosjeci[j]=nb;
				nit[j]=nbt;
			}
		}
	}


	for (i=0;i<v;i++)
	{
		for (i = 1; i < v; i++)
			{
		      for (j = 1; j < v; j++)
		      {
		         if (strcmp(nit[j - 1].prezime, nit[j].prezime) > 0)
		         {
		            strcpy(t, nit[j - 1].prezime);
		            strcpy(ime, nit[j - 1].ime);
		            temm=prosjeci[j-1];

		            strcpy(nit[j - 1].prezime, nit[j].prezime);
		            strcpy(nit[j - 1].ime, nit[j].ime);
		            prosjeci[j-1]=prosjeci[j];

		            strcpy(nit[j].prezime, t);
		            strcpy(nit[j].ime, ime);
		         	prosjeci[j]=temm;
		      }
		   }}

		   	for (i = 1; i < v; i++)
			{
		      for (j = 1; j < v; j++)
		      {
		         if (strcmp(nit[j - 1].ime, nit[j].ime) > 0)
		         {
		            strcpy(t, nit[j - 1].ime);
		            strcpy(ime, nit[j - 1].prezime);
		            temm=prosjeci[j-1];

		            strcpy(nit[j - 1].ime, nit[j].ime);
		            strcpy(nit[j - 1].prezime, nit[j].prezime);
		            prosjeci[j-1]=prosjeci[j];

		            strcpy(nit[j].ime, t);
		            strcpy(nit[j].prezime, ime);
		         	prosjeci[j]=temm;
		      }
		   }

		}
	}
	for (i=0;i<v-1;++i)
	{
		for (j=0;j<v-1-i;++j)
		{
			if (prosjeci[j+1]>prosjeci[j])
			{
				nbt=nit[j+1];
				nb=prosjeci[j+1];

				prosjeci[j+1]=prosjeci[j];
				nit[j+1]=nit[j];

				prosjeci[j]=nb;
				nit[j]=nbt;
			}
		}
	}
	
	
	if (v>=3)
	{
		for (i=0;i<3;i++)
		{
		printf (""\n%s %s"" , nit[i].prezime,nit[i].ime);

		}
	}
	else
	{
		for (i=0;i<v;i++)
		{
		printf (""\n%s %s"" , nit[i].prezime,nit[i].ime);

		}
	}
	ret=0;
	for (i=0;i<v;i++)
	{
		ret++;
	}

	return ret;
}



int main ()
{
	 
    
	return 0;
}
","#include <stdio.h>
#include <string.h>

struct Student
{
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};
int uporedi(char* s1, char* s2)
{
	while (*s1 != '\0' && *s2 != '\0')
	{
		if (*s1 < *s2) return -1;
		if (*s1 > *s2) return 1;
		s1++;
		s2++;
	}
	if (*s1 != '\0') return 1; 
	if (*s2 != '\0') return -1;
	return 0;                 
}
double pros (struct Student n)
{
	int zboc=0,i;
	double pr;

	if (n.br_ocjena==0)
	{
		return 5;
	}

	for (i=0;i<n.br_ocjena;i++)
	{
		if (n.ocjene[i]==5)
		{
			return 5;
		}

	}

	for (i=0;i<n.br_ocjena;i++)
	{
		zboc+=n.ocjene[i];
	}
	pr=(double)zboc/(double)n.br_ocjena;
	return pr;
}
void ispis (struct Student niz[],int v)
{
	int i;
	for (i=0;i<v;i++)
	{
		printf (""\nProsjek za %s %s je %f."" , niz[i].ime,niz[i].prezime,pros(niz[i]));
	}
}

int genijalci (struct Student niz[],int v,double prosjek)
{
	struct Student nbt;
	struct Student nit[250];
	char t[35],ime[35];
	int pom=0,i,j,ret=0;
	double prosjeci[100],nb,temm;

	for (i=0;i<v;i++)
	{
		nit[i]=niz[i];
	}

	for (i=0;i<v;i++)
	{
		prosjeci[i]=pros(nit[i]);
	}
	for (i=0;i<v;i++)
	{
		if (prosjeci[i]<prosjek)
		{
			pom++;
			continue;
		}
	}
	if (pom==v)
	{
		return 0;
	}
	for (i=0;i<v;i++)
	{
		if (prosjeci[i]<prosjek)
		{
			for (j=i;j<v-1;j++)
			{
				prosjeci[j]=prosjeci[j+1];
				nit[j]=nit[j+1];
				niz[j]=niz[j+1];
			}
			v--;
			i--;
		}
	}

	for (i=0;i<v-1;++i)
	{
		for (j=0;j<v-1-i;++j)
		{
			if (prosjeci[j+1]>prosjeci[j])
			{
				nbt=nit[j+1];
				nb=prosjeci[j+1];

				prosjeci[j+1]=prosjeci[j];
				nit[j+1]=nit[j];

				prosjeci[j]=nb;
				nit[j]=nbt;
			}
		}
	}


	for (i=0;i<v;i++)
	{
		for (i = 1; i < v; i++)
			{
		      for (j = 1; j < v; j++)
		      {
		         if (strcmp(nit[j - 1].prezime, nit[j].prezime) > 0)
		         {
		            strcpy(t, nit[j - 1].prezime);
		            strcpy(ime, nit[j - 1].ime);
		            temm=prosjeci[j-1];

		            strcpy(nit[j - 1].prezime, nit[j].prezime);
		            strcpy(nit[j - 1].ime, nit[j].ime);
		            prosjeci[j-1]=prosjeci[j];

		            strcpy(nit[j].prezime, t);
		            strcpy(nit[j].ime, ime);
		         	prosjeci[j]=temm;
		      }
		   }}

		   	for (i = 1; i < v; i++)
			{
		      for (j = 1; j < v; j++)
		      {
		         if (strcmp(nit[j - 1].ime, nit[j].ime) > 0)
		         {
		            strcpy(t, nit[j - 1].ime);
		            strcpy(ime, nit[j - 1].prezime);
		            temm=prosjeci[j-1];

		            strcpy(nit[j - 1].ime, nit[j].ime);
		            strcpy(nit[j - 1].prezime, nit[j].prezime);
		            prosjeci[j-1]=prosjeci[j];

		            strcpy(nit[j].ime, t);
		            strcpy(nit[j].prezime, ime);
		         	prosjeci[j]=temm;
		      }
		   }

		}
	}
	for (i=0;i<v-1;++i)
	{
		for (j=0;j<v-1-i;++j)
		{
			if (prosjeci[j+1]>prosjeci[j])
			{
				nbt=nit[j+1];
				nb=prosjeci[j+1];

				prosjeci[j+1]=prosjeci[j];
				nit[j+1]=nit[j];

				prosjeci[j]=nb;
				nit[j]=nbt;
			}
		}
	}
	
	
	if (v>=3)
	{
		for (i=0;i<3;i++)
		{
		printf (""\n%s %s"" , nit[i].prezime,nit[i].ime);

		}
	}
	else
	{
		for (i=0;i<v;i++)
		{
		printf (""\n%s %s"" , nit[i].prezime,nit[i].ime);

		}
	}
	ret=0;
	for (i=0;i<v;i++)
	{
		ret++;
	}

	return ret;
}



int main ()
{
	 
    
	return 0;
}
"
1386,99,99,0,68,A2016/Z3/Z3/student8029,A2016/Z3/Z3/student3715,"#include <stdio.h>

int main() {
	int mat [235][235];
	int i, j, k, p, r, M, N, pret=1, h=0, s=0;
	do {
		printf (""Unesite brojeve M i N: "");
		scanf (""%d %d"",&M, &N);
		if(M > 200 || M <= 0) printf (""Brojevi nisu u trazenom opsegu. \n"");
		else if(N > 200 || N <= 0) printf (""Brojevi nisu u trazenom opsegu. \n"");
	} while ((M > 200 || M <= 0) || (N > 200 || N <= 0) );
	h=M; 
	s=N;
	printf (""Unesite elemente matrice: "");
	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) {
			scanf (""%d"",&mat[i][j]);
		}
	}
	
	
	
	for (i=0; i<M; i++)
	{ 
		
		for (k=i+1; k<M; k++)
		{
			pret=1;
			for(j=0; j<N; j++)
				if(mat[i][j]!=mat[k][j]) pret=0;
			if (pret==1) 
			{
				for (p=k; p<M-1; p++) 
					for (r=0; r<N; r++)
						mat[p][r]=mat[p+1][r];
				p--;
				M--;
				k--;
			} 
		}
	}
	for (j=0; j<N; j++)
	{ 
		
		for (k=j+1; k<N; k++)
		{
			pret=1;
			for(i=0; i<M; i++)
				if(mat[i][j]!=mat[i][k]) pret=0;
			if (pret==1) 
			{
				for (p=k; p<N-1; p++) 
					for (r=0; r<M; r++)
						mat[r][p]=mat[r][p+1];
				p--;
				N--;
				k--;
			} 
		}
	}

	
	printf (""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) {
			 if (mat[i][j]>9 || mat[i][j]<0) printf (""   "");
			 else printf (""    "");
			 printf (""%d"",mat[i][j]);
		}
		printf (""\n"");
	}	
		
		
		
		
		
		
		
	return 0;
}
","#include <stdio.h>

int main() {
	int mat [235][235];
	int i, j, k, p, r, M, N, pret=1, h=0, s=0;
	do {
		printf (""Unesite brojeve M i N: "");
		scanf (""%d %d"",&M, &N);
		if(M > 200 || M <= 0) printf (""Brojevi nisu u trazenom opsegu. \n"");
		else if(N > 200 || N <= 0) printf (""Brojevi nisu u trazenom opsegu. \n"");
	} while ((M > 200 || M <= 0) || (N > 200 || N <= 0) );
	h=M; 
	s=N;
	printf (""Unesite elemente matrice: "");
	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) {
			scanf (""%d"",&mat[i][j]);
		}
	}
	
	
	
	for (i=0; i<M; i++)
	{ 
		
		for (k=i+1; k<M; k++)
		{
			pret=1;
			for(j=0; j<N; j++)
				if(mat[i][j]!=mat[k][j]) pret=0;
			if (pret==1) 
			{
				for (p=k; p<M-1; p++) 
					for (r=0; r<N; r++)
						mat[p][r]=mat[p+1][r];
				p--;
				M--;
				k--;
			} 
		}
	}
	for (j=0; j<N; j++)
	{ 
		
		for (k=j+1; k<N; k++)
		{
			pret=1;
			for(i=0; i<M; i++)
				if(mat[i][j]!=mat[i][k]) pret=0;
			if (pret==1) 
			{
				for (p=k; p<N-1; p++) 
					for (r=0; r<M; r++)
						mat[r][p]=mat[r][p+1];
				p--;
				N--;
				k--;
			} 
		}
	}

	
	printf (""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) {
			 if (mat[i][j]>9 || mat[i][j]<0) printf (""   "");
			 else printf (""    "");
			 printf (""%d"",mat[i][j]);
		}
		printf (""\n"");
	}	
		
		
		
		
		
		
		
	return 0;
}
"
1396,13,13,0,15,A2016/Z4/Z3/student4575,A2016/Z4/Z3/student2675,"#include <stdio.h>

/* FUNKCIJA koja provjerava da li je slovo */

int da_li_je_slovo(char c){
	if((c>64 && c<91)||(c>96 && c<123)){
		return 1;
	}
	return 0;
}

/* FUNKCIJA koja provjerava da li treba mijenjati */

int da_li_treba_mijenjati(char *tekst, char *rijec){
	char *pocetak=tekst;
	char *pocetak_rijeci=rijec;
	int br=0;
	while(*tekst!='\0' && *rijec!='\0'){
		if(*tekst!=*rijec){
			br=0;
		}
		tekst++;
		rijec++;
	}
	if((*tekst!='\0' && *tekst!=' ')|| *rijec!='\0'){
		br=0;
	}
	tekst=pocetak;
	rijec=pocetak_rijeci;
	return br;
}

/* FUNKCIJA koja minenja */

void zamijeni(char* tekst, char* rijec, char* nova_rijec){
	char *temp=tekst, *rijec_temp=rijec, *nova_temp=nova_rijec, *x=tekst;
	int i, v=0, n=1;
	while(*tekst!='\0'){
		n=0;
		while(*tekst!=*rijec && *tekst!='\0'){
			tekst++;
		}
		if(*tekst!='\0' && (tekst==temp || *(tekst-1)==' ') && da_li_treba_mijenjati(tekst, rijec)){
			while(*nova_rijec!='\0'){
				if(*tekst==' ' || *tekst=='\0'){
					x=tekst;
					while(*tekst!='\0'){
						tekst++;
					}
					tekst++;
					while(tekst>x){
						*tekst=*(tekst-1);
						tekst--;
					}
				}
				*tekst=*nova_rijec;
				tekst++;
				nova_rijec++;
			}
			n=1;
		}
		if(*tekst!=' ' && *tekst!='\0' && n==1){
			x=tekst;
			while(*tekst!='\0' && *tekst!=' '){
				v++;
				tekst++;
			}
			tekst=x;
			for(i=0;i<v;i++){
				tekst=x;
				while(*tekst!='\0'){
					*tekst=*(tekst+1);
					tekst++;
				}
			}
			tekst=x;
		}
		if(*tekst!='\0' && *tekst!=' '){
			tekst++;
		}
		rijec=rijec_temp;
		nova_rijec=nova_temp;
	}
	tekst=temp;
	rijec=rijec_temp;
	nova_rijec=nova_temp;
}

/* FUNKCIJA koja mijenja rijeci */

char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	char *temp_tekst=tekst;
	int i;
	for(i=0;i<broj_rijeci;i++){
		tekst=temp_tekst;
		while(*tekst!='\0'){
			while(*tekst==' ' && *tekst!='\0'){
				tekst++;
			}
			if(da_li_treba_mijenjati(tekst, rijeci[i])){
				zamijeni(tekst, rijeci[i], zamjene[i]);
			}
			while(*tekst!='\0' && *tekst!=' '){
				tekst++;
			}
		}
	}
	return temp_tekst;
}

/* FUNKCIJA main */

int main() {
	char* rijeci[2]={ """", """" };
	char* zamjene[2]={ """", """" };
	char tekst[100]="""";
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
	return 0;
}
","#include <stdio.h>

char* zamjena_rijeci(char* s, char** rijeci, char** zamjene, int broj_rijeci)
{
    char* pom=s;
    char* poc;
    char* kraj;
    int i,j,t,d,duzina;
    for(d=0;d<broj_rijeci;d++)
    {
    	s=pom;
	while(*s!='\0')
	{
	    //dolazi do rijeci
	    while(*s==' ')
	    {
	        s++;
	    }
	    for(i=0;i<broj_rijeci;i++)
	    {
	        kraj=s;
	        poc=s;
	        t=1;
	        if(rijeci[i][0]=='\0') t=0;
	        //provjerava da li rijec treba izbaciti
	        for(j=0;rijeci[i][j]!='\0'&&*kraj!='\0'&&*kraj!=' ';j++,kraj++)
	        {
	            if(rijeci[i][j]!=*kraj) t=0;
	        }
	        if(s!=pom)
	        {
	            if(*(s-1)!=' ') t=0;
	        }
	        if(rijeci[i][j]!='\0'||(*kraj!='\0'&&*kraj!=' ')) t=0;
	        //ako treba
	        if(t)
	        {
	            //prvo obrise tu rijec
	            while(*kraj!='\0')
	            {
	                *(poc++)=*(kraj++);
	            }
	            *poc='\0';
	            duzina=0;
	            //onda prosiri string za unos zamjene
	            for(j=0;zamjene[i][j]!='\0'&&zamjene[i][j]!=' ';j++)
	            {
	                duzina++;
	            }
                while(poc!=s)
                {
                    *(poc+duzina)=*poc;
                    poc--;
                }
                *(poc+duzina)=*poc;
                //unese zamjenu
                for(j=0;zamjene[i][j]!='\0'&&zamjene[i][j]!=' ';j++,s++)
                {
                    *s=zamjene[i][j];
                }
	        }
	    }
	    if(*s!='\0') s++;
	}
    }
	return pom;
}

int main()
{
    char* rijeci[2] = { ""ss"", ""ss"" };
char* zamjene[2] = { ""bijeli"", ""snijeg"" };
char tekst[100] = "" s ss s ss s s  s s s"";
printf(""%s\n"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
/* Da li je promijenjen i polazni string? */
printf(""%s"", tekst);
	return 0;
}
"
1397,20,20,0,35,A2016/Z4/Z1/student4804,A2016/Z4/Z1/student8317,"#include <stdio.h>

/*Funkcija za unos stringa*/
void unesi(char s[], int n)
{
	char znak;
	int i=0;
	znak=getchar();
	if(znak=='\n')
		znak=getchar();
	while(i<n-1 && znak!='\n') {
		s[i]=znak;
		i++;
		znak=getchar();
	}
	s[i]='\0';
}

char *rijec(char *d)
{
	char *p;
	p=d;

	while((*d>='A' && *d<='Z') || (*d>='a' && *d<='z')) {
		d++;
	}
	*d='\0';


	return p;
}

int duzina(char *s)
{
	int br=0;
	while(*s!='\0') {
		br++;
		s++;
	}
	return br;
}

int broj_ponavljanja(char *s,char *q)
{
	int razmak=1,br=0,jednaki,i;
	char *p,*r,*k,rj[500],*l;
	k=&rj[0];
	while(*s!='\0') {
		if(!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')))
			razmak=1;
		else if (razmak==1) {
			razmak=0;
			p=s;
			l=k;	/* Pokazivac na pocetak niza*/
			for(i=0; i<500; i++)
				rj[i]='\0';
			while(*p!='\0') {
				*k=*p;
				if(*k>='A' && *k<='Z')
					*k=*k+('a'-'A');
				k++;
				p++;
			}
			r=q;
			k=l;
			k=rijec(k);
			jednaki=1;
			while(*k!='\0') {
				if(*r!=*k && *r!=*k-'a'-'A') {
					jednaki=0;
					break;
				}
				if(*r=='\0') {
					jednaki=0;
					break;
				}
				r++;
				k++;
			}
			if(jednaki==1)
				br++;
			k=l;
		}
		s++;
	}
	return br;
}

char *izbaci_najcescu(char *s)
{
	int razmak=1,maximum=0,br,i,izbaci=1,duz;
	char *p,*q,rj[500],*l,*k,max[500],*m,*g,*r,*h,*v,*z;
	q=s;
	m=&max[0];
	r=s;
	k=&rj[0];
	while(*s!='\0') {
		if(!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')))
			razmak=1;
		else if (razmak==1) {
			razmak=0;
			p=s;
			l=k;
			for(i=0; i<500; i++)
				rj[i]='\0';

			while(*p!='\0') {
				*k=*p;
				if(*k>='A' && *k<='Z')
					*k=*k+('a'-'A');
				k++;
				p++;
			}
			k=l;
			k=rijec(k);
			br=broj_ponavljanja(q,k);	/*Trazenje rijeci koja se najvise ponavlja*/
			if(br>maximum) {
				maximum=br;
				g=m;
				for(i=0; i<500; i++)
					max[i]='\0';
				while(*k!='\0') {
					*m=*k;
					m++;
					k++;
				}
				k=l;
				m=g;
			}
		}
		s++;
	}
	razmak=1;
	while(*r!='\0') {
		if(!((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')))
			razmak=1;
		else if (razmak==1) {
			razmak=0;
			izbaci=1;
			h=r;
			z=h;
			v=m;
			duz=duzina(m);
			m=v;
			/*Izbacivanje rijeci*/
			while((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')) {

				if(*r!=*m && *r!=(*m-('a'-'A'))) {
					izbaci=0;
					break;
				}


				m++;
				r++;

				if(*m=='\0' && maximum!=1 && duz>1 &&(!((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')))) {
					izbaci=0;
					break;
				}

			}
			r=h;
			m=v;
			while((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')) {

				r++;

			}

			if(izbaci==1) {
				while(*r!='\0') {
					*h=*r;
					r++;
					h++;
				}
				*h='\0';
			}
			r=z;
			r--;
		}
		r++;
	}
	return q;
}


int main()
{
	char rec[500];
	unesi(rec,500);

	printf(""%s"",izbaci_najcescu(rec));

	return 0;
}
","#include<stdio.h>
#include<ctype.h>

/*funkcija za unos stringa*/
void unesi (char niz[], int velicina){
	
	char znak=getchar();
	
	if (znak == '\n'){
		znak=getchar();
	}
	
	int i=0;
	
	while (i<velicina-1 && znak != '\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	
	niz[i]='\0';
}

/*funkcija koja vraća pokazivač na n-tu riječ u stringu*/
char* vrati_rijec (char* s, int n){
	
	int neslovo=1, broj_rijeci1=0;
	
	while (*s != '\0'){
		
		if (!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))){
			neslovo=1;
		}
		else if (neslovo == 1){
			
			neslovo=0;
			broj_rijeci1++;
		}
		
		if (broj_rijeci1 == n){
			return s;
		}
	
	s++;
	}
}

/*funkcija koja vraća broj riječi*/
int broj_rijeci (char* s){
	
	int neslovo=1, broj_rijeci1=0;
	
	while(*s != '\0'){
		
		if (!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))){
			neslovo=1;
		}
		else if (neslovo == 1){
			
			neslovo=0;
			broj_rijeci1++;
		}
		s++;
	}
	
	return broj_rijeci1;
}

/*funkcija koja izbacuje n-tu riječ*/
void izbaci_rijec (char* s, int n){
	
	int neslovo=1, broj_rijeci1=0;
	char* pocetak;
	while (*s != '\0'){
		
		if (!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))){
			neslovo=1;
		}
		else if (neslovo == 1) {
			
			neslovo=0;
			broj_rijeci1++;
			
			if (broj_rijeci1 == n){
				pocetak=s;
				
				while ((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')){
					s++;
				}
				
				if (*s == '\0'){
					*pocetak='\0';
					return;
				}
				else {
					while (*pocetak++ = *s++);
					return;
				}
			}
		}
		
	s++;	
	}
}

/*funkcija izbaci_najcescu*/
char* izbaci_najcescu (char* s){
	
	int broj_rijeci1=broj_rijeci(s);
	int i,j;
	int broj_izbacenih=0;
	int pozicija=0, jednak, broj_jednakih=0, max=0;
	
	char* a;
	char* b;
	
	if (broj_rijeci1 == 0){
		return s;
	}
	
	/*123-153 Traži najučestaliju riječ i u varijablu pozicija sprema 
	mjesto u stringu na kojem se ta riječ prvi put pojavila.*/
	for (i=1; i<=broj_rijeci1; i++){
		for (j=i; j<=broj_rijeci1; j++){
			a=vrati_rijec(s, i);
			b=vrati_rijec(s, j);
			jednak=1;
			
			while (((*a>='a' && *a<='z') || (*a>='A' && *a<='Z')) && ((*b>='a' && *b<='z') || (*b>='A' && *b<='Z'))){
				if (tolower(*a) != tolower(*b)) {
					jednak=0;
					break;
				}
				a++;
				b++;
			}
			
			if (!((*a>='a' && *a<='z') || (*a>='A' && *a<='Z')) && !((*b>='a' && *b<='z') || (*b>='A' && *b<='Z')) && jednak==1){
				broj_jednakih++;
			}
		}
		
		if (broj_jednakih > max){
			max=broj_jednakih;
			pozicija=i;
		
		}
		if(max>broj_rijeci(s)-i){
			break;
		}
		broj_jednakih=0;
		
	}
	
	/*  157-180 Prolazi kroz sve riječi, provjerava da li se podudaraju sa najučestalijom.
	Ako da, izbacuje tu riječ*/
	for (i=broj_rijeci(s); i>= pozicija; i--){
		
		a=vrati_rijec(s, pozicija);
		b=vrati_rijec(s, i);
		jednak=1;
		
		while (((*a>='a' && *a<='z') || (*a>='A' && *a<='Z')) && ((*b>='a' && *b<='z') || (*b>='A' && *b<='Z'))){
				if (tolower(*a) != tolower(*b)) {
					jednak=0;
					break;
				}
				a++;
				b++;
			}
			
			if (!((*a>='a' && *a<='z') || (*a>='A' && *a<='Z')) && !((*b>='a' && *b<='z') || (*b>='A' && *b<='Z')) && jednak==1){
				izbaci_rijec(s, i);
				broj_izbacenih++;
			}
			
			if(broj_izbacenih==max){
				break;
			}
	}
	
	return s;
}

int main () {
	
	char niz[100000];
	unesi(niz, 100000);
	
printf(""%s"", izbaci_najcescu(niz));
	
	
	
	return 0;
}"
1398,89,89,0,60,A2016/Z2/Z2/student5380,A2016/Z2/Z2/student2406,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926

int main () {
    
double niz [500];
double step,min,sec,x;
int i,j,n;

printf (""Unesite broj uglova: "");
scanf (""%d"", &n);

for (i=0; i<n; i++) {
    scanf (""%lf"", &niz[i]); 
    }

for (i=0; i<n; i++) {

x = fabs ((niz[i])*(180/PI));
min = ((x-(int)x)*60);
sec = (round ((min-(int)min)*60)); 
if(sec==60) { sec=0; min++;}

if (sec>30) {
    
for (j=i; j<n-1; j++) {
        niz [j]=niz [j+1]; 
    
    }
        n--;
        i--;
    } }


printf (""Uglovi su:\n"");
for (i=0; i<n; i++) {
    
    x= (niz[i]*(180/PI));
    min = fabs((x-(int)x)*60);
    sec = ((min-(int)min)*60);

    step=(int)x;
    min=(int) min;
    sec=round (sec);
    
if (step>=0) {
    if (sec==60){sec=0; min++;} 
    if (min==60){min=0; step++;}}
    
if (step<0) {
    if (sec==60){sec=0; min++;}
    if (min==60){min=0; step--;}}
    
printf(""%.f stepeni %.f minuta %.f sekundi\n"", step, min, sec);    
    
}

return 0;

}


    


","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define PI 3.1415926
int main() {
	
	double niz[500], stepeni, minute, sekunde;
	double u;
	int  j, i, x;
	
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &x); 
		for(i=0;i<x;i++)
		{
			scanf(""%lf"", &niz[i]);
		}
		for(i=0;i<x;i++)
{
		u=fabs((niz[i]*180)/PI);
		minute=(u-(int)u)*60;
		sekunde=round((minute-(int)minute)*60);
		if(sekunde==60)
		{sekunde=0; minute++;}
		if (sekunde>30){
			for(j=i;j<x-1;j++)
			{
				niz[j]=niz[j+1];
			}
		x--;
		i--;
		}
}
	
	printf(""Uglovi su:\n"");
	for(i=0;i<x;i++){
		u=(niz[i]*180)/PI;
		minute=fabs((u-(int)u)*60);
		sekunde=round((minute-(int)minute)*60);
		
		stepeni=(int)u;
		minute=(int)minute;
		sekunde=round(sekunde);
		
			if(stepeni>0){
				if(sekunde==60){
					sekunde=0; minute++;}
					if(minute==60){
						minute=0; stepeni++;
					}
					
				}
				
				if(stepeni<0){
					if(sekunde==60)
					{sekunde=0;minute++;}
					if(minute==60)
					{minute=0;stepeni--;}}
					printf(""%.f stepeni %.f minuta %.f sekundi\n"", stepeni, minute, sekunde);
					
				}
				
				
			
	
	
	
	return 0;
}
"
1400,77,77,0,56,A2016/Z3/Z2/student2086,A2016/Z3/Z2/student9946,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define bre1 10
#define bre12 20
void ubaci (int *niz, int size) {
	int n, dig, num1, num2=0;
	for (n=size-1; n>=0; n--) {
		*(niz+2*n)=*(niz+n);
	}
	for (n=0; n<size*2; n++) {
		if (n%2==1) {
			num1=*(niz+n-1);
			while (num1!=0) {
				dig=num1%10;
				num2+=dig;
				num1/=10;
			}
			num2=abs(num2);
			*(niz+n)=num2;
			num2=0;
		}
	}
}

int izbaci (int*niz, int size) {
	int n, m, p, first=0, second=1, next;
	for (n=0; n<size; n++) {
		first=0;
		second=1;
		for (m=1; m<10000; m++) {
			if (m==1) {
				next=m;
			} else {
				next=first+second;
				first=second;
				second=next;
			}
			if (*(niz+n)==next) {
				for (p=n; p<size-1; p++) {
					*(niz+p)=*(niz+p+1);
				}
				size--;
				n--;
				break;
			}
		}
	}
	return size;
}

int main () {
	int niz[20], n, x;
	
	/*UNOS */
	printf (""Unesite niz od 10 brojeva: "");
	for (n=0; n<10; n++) {
		scanf (""%d"", &niz[n]);
	}
	
	/*POZIVANJE FUNKCIJE ""UBACI""*/
	ubaci (niz, bre1);
	
	/*POZIVANJE FUNKCIJE ""IZBACI""*/
	x=izbaci (niz, bre12);
	
	printf (""Modificirani niz glasi: "");
	for (n=0; n<x; n++) {
		if (n<(x-1)) {
			printf (""%d, "", niz[n]);
		} else {
			printf (""%d. "", niz[n]);
		}
	}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define brel 10
#define brel2 20
void ubaci(int *niz, int velicina)
{
	int i;
	int cifra;
	int broj;
	int broj2=0;
	for (i=velicina-1; i>=0; i--) {
		*(niz+2*i)=*(niz+i);
	}
	for (i=0; i<velicina*2; i++) {
		if(i%2==1) {
			broj=*(niz+i-1);
			while (broj!=0) {
				cifra=broj%10;
				broj2+=cifra;
				broj/=10;
			}
			*(niz+i)=abs(broj2);
			broj2=0;
		}
	}
}
int izbaci(int *niz,int velicina)
{
	int i;
	int j;
	int m;
	int prvi=0;
	int drugi=1;
	int slijedeci;
	for(i=0; i<velicina; i++) {
		prvi=0;
		drugi=1;
		for(j=1; j<10000; j++) {
			if(j==1) slijedeci=j;
			else {
				slijedeci=prvi+drugi;
				prvi=drugi;
				drugi=slijedeci;
			}
			if(*(niz+i)==slijedeci) {
				for(m=i; m<velicina-1; m++) {
					*(niz+m)=*(niz+m+1);
				}
				velicina--;
				i--;
				break;
			}
		}
	}
	return velicina;
}

int main()
{
	int niz [20];
	int i;
	int n;
	printf(""Unesite niz od 10 brojeva: "");
	for (i=0; i<10; i++) {
		scanf(""%d"",&niz[i]);
	}

	ubaci (niz,brel);

	n=izbaci(niz,brel2);

	printf(""Modificirani niz glasi: "");
	for (i=0; i<n; i++) {
		if(i<(n-1)) {
			printf(""%d, "",niz[i]);
		} else {
			printf(""%d. "",niz[i]);
		}
	}
	return 0;
}"
1457,99,99,0,68,A2016/Z2/Z4/student7823,A2016/Z2/Z4/student7457,"#include <stdio.h>
#include <math.h>
#define epsilon 0.0005
int provjeriDijagonalu(double matrica[100][100], int M, int N, int X, int Y){
	int i,j;
	for(i=X, j=Y; i<M && j<N; i++, j++) {
		if(fabs(matrica[i][j]-matrica[X][Y])> epsilon)
			return 0;
	}
	return 1;
}
int provjeriCirkularnu(double matrica[100][100], int M, int N){
	int i, j, k;
	double a;
	for(i=0; i<M; i++) {
		for(j=0; j<i; j++) {
			for(k=0; k<N-1; k++) {
				a= matrica[i][k];
				matrica[i][k]=matrica[i][k+1];
				matrica[i][k+1]=a;
			}
		}
	}
	for(j=0; j<N; j++) {
		for(i=0; i<M; i++) {
			if(fabs(matrica[i][j]-matrica[0][j])>epsilon)
				return 1;
		}
	}
	return 2;
}
int provjeriTeplicovu(double matrica[100][100], int M, int N){
	int i, j=0;
	for(i=0; i<M; i++) {
		if(provjeriDijagonalu(matrica, M, N, i, j)==0)
			return 0;
	}
	for(i=0; i<N; i++) {
		if(provjeriDijagonalu(matrica, M, N, j, i)==0)
			return 0;
	}
	return provjeriCirkularnu(matrica, M, N);
}
int main(){
//	printf(""Zadaća 2, Zadatak 4"");
	int i,j,M,N;
	double matrica[100][100];
	do {
		printf(""Unesite M i N: "");
		scanf(""%d%d"", &M, &N);
		if(M<=0 || M>100 || N<=0 || N>100)
			printf(""Pogresan unos!\n"");
	} while(M<=0 || M>100 || N<=0 || N>100);
	printf(""Unesite elemente matrice: "");
	for(i=0; i<M; i++) {
		for(j=0; j<N; j++) {
			scanf(""%lf"", &matrica[i][j]);
		}
	}
	switch(provjeriTeplicovu(matrica, M, N)) {
	case 0:
		printf(""Matrica nije ni cirkularna ni Teplicova"");
		break;
	case 1:
		printf(""Matrica je Teplicova"");
		break;
	case 2:
		printf(""Matrica je cirkularna"");
		break;
	}
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define epsilon 0.0005
int provjeriDijagonalu(double matrica[100][100], int M, int N, int X, int Y){
	int i,j;
	for(i=X, j=Y; i<M && j<N; i++, j++) {
		if(fabs(matrica[i][j]-matrica[X][Y])> epsilon)
			return 0;
	}
	return 1;
}
int provjeriCirkularnu(double matrica[100][100], int M, int N){
	int i, j, k;
	double a;
	for(i=0; i<M; i++) {
		for(j=0; j<i; j++) {
			for(k=0; k<N-1; k++) {
				a= matrica[i][k];
				matrica[i][k]=matrica[i][k+1];
				matrica[i][k+1]=a;
			}
		}
	}
	for(j=0; j<N; j++) {
		for(i=0; i<M; i++) {
			if(fabs(matrica[i][j]-matrica[0][j])>epsilon)
				return 1;
		}
	}
	return 2;
}
int provjeriTeplicovu(double matrica[100][100], int M, int N){
	int i, j=0;
	for(i=0; i<M; i++) {
		if(provjeriDijagonalu(matrica, M, N, i, j)==0)
			return 0;
	}
	for(i=0; i<N; i++) {
		if(provjeriDijagonalu(matrica, M, N, j, i)==0)
			return 0;
	}
	return provjeriCirkularnu(matrica, M, N);
}
int main(){
//	printf(""Zadaća 2, Zadatak 4"");
	int i,j,M,N;
	double matrica[100][100];
	do {
		printf(""Unesite M i N: "");
		scanf(""%d%d"", &M, &N);
		if(M<=0 || M>100 || N<=0 || N>100)
			printf(""Pogresan unos!\n"");
	} while(M<=0 || M>100 || N<=0 || N>100);
	printf(""Unesite elemente matrice: "");
	for(i=0; i<M; i++) {
		for(j=0; j<N; j++) {
			scanf(""%lf"", &matrica[i][j]);
		}
	}
	switch(provjeriTeplicovu(matrica, M, N)) {
	case 0:
		printf(""Matrica nije ni cirkularna ni Teplicova"");
		break;
	case 1:
		printf(""Matrica je Teplicova"");
		break;
	case 2:
		printf(""Matrica je cirkularna"");
		break;
	}
	return 0;
}
"
1463,99,99,0,255,A2016/Z5/Z2/student7802,A2016/Z5/Z2/student9538,"#include <stdio.h>
#include <string.h>
void unesi(char niz[], int velicina)
{
    char znak=getchar();
    if(znak=='\n') znak=getchar();
    int i = 0;
    while (i<velicina-1 && znak!='\n')
    {
        niz[i]=znak;
        i++;
        znak=getchar();
    }
    niz[i]='\0';
}
/*vraca 1 ako je znak slovo*/
int slovo(int c)
{
    if(c>='A' && c<='Z' || c>='a' && c<='z')
        return 1;
    return 0;
}
/*funkcija prima 2 stringa i zamijeni ih*/
void swap(char *p, char *q)
{
    char temp[100];
    strcpy(temp,p);
    strcpy(p,q);
    strcpy(q,temp);
}
void kompresuj(char* naziv,char* naziv1)
{
    FILE *ulaz=fopen(naziv,""r"");
    FILE *ulaz1=fopen(naziv,""r"");
    FILE *izlaz=fopen(naziv1,""w"");
    char rijeci[1000][1000]={0};
    /*brojac za svaku rijec*/
    int brojac[1000]={0};
    int i, broj_rijeci=0;
    char rijec[1000];
    int duzina;
    char znak=fgetc(ulaz);
    /*dok ne dodjemo do kraja 
    datoteke uzimamo znak po znak*/
    while(znak!=EOF)
    {
        duzina=0;
        /*dok je znak slovo znaci da smo na rijeci
        pa uzmemo sva slova i ubacimo u trenutnu rijeci*/
        while(slovo(znak))
        {
            rijec[duzina++]=znak;
            znak=fgetc(ulaz);
        }
        rijec[duzina]='\0';
        if(duzina < 10 && duzina !=0)
        {
            int ima=0,j;
            /*prolazimo kroz rijeci koje smo do sada upisali*/
            for(j=0;j<broj_rijeci;j++)
            {
                /*ako se rijec vec nalazi tu 
                povecavamo broj ponavljanja*/
                if(strcmp(rijeci[j],rijec)==0)
                {
                    ima=1;
                    brojac[j]++;
                    break;
                }
            }
            /*ako je nema dodajemo je i 
            brojac postavljamo na 1*/
            if(ima!=1)
            {
                strcpy(rijeci[broj_rijeci],rijec);
                brojac[broj_rijeci++]=1;
            }
        }
        znak=fgetc(ulaz);
    }
    /*unijeli smo sve rijeci sada ih 
    sortiramo po broju ponavljanja i leksikografski*/
    int j;
    for(i=0;i<broj_rijeci;i++)
    {
        for(j=i+1;j<broj_rijeci;j++)
        {
            if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1))
            {
                int temp=brojac[j];
                brojac[j]=brojac[i];
                brojac[i]=temp;
                swap(rijeci[i],rijeci[j]);
            }
        }
    }
    int kraj=10;
    char novired='\n';
    /*treba nam 10 rijeci ako ih 
    ima manje onda to koristim*/
    if(broj_rijeci<10)
        kraj=broj_rijeci;
    /*prvo unosimo u izlaz 
    rijeci koje su u nizu*/
    for(i=0;i<kraj;i++)
    {
        fputs(rijeci[i],izlaz);
        fputc(novired,izlaz);
    }
    char c=fgetc(ulaz1);
    while(c!=EOF)
    {
        duzina=0;
        /*uzimamo rijec po rijec*/
        while(slovo(c))
        {
            rijec[duzina++]=c;
            c=fgetc(ulaz1);
        }
        rijec[duzina]='\0';
        int kontrola=0;
        if(duzina<10 && duzina!=0)
        {
            for(j=0;j<kraj;j++)
            {   
                /*ako nalazi u nizu mijenjamo 
                odgovarajucim znakom*/
                if(strcmp(rijeci[j],rijec)==0)
                {
                    char znk=j+20;
                    kontrola=1;
                    fputc(znk,izlaz);
                    fputc(c,izlaz);
                    break;
                }
            }
        }
        if(kontrola==0)
        {
            char *r=rijec;
            while(*r!='\0')
            {
                fputc(*r,izlaz);
                r++;
            }
            fputc(c,izlaz);
        }
        c=fgetc(ulaz1);
    }
    printf(""Datoteka kompresovana.\n"");
    fclose(ulaz);
    fclose(ulaz1);
    fclose(izlaz);
}
void dekompresuj(char *naziv, char *naziv1)
{
    FILE *ulaz=fopen(naziv,""r"");
    FILE *ulaz1=fopen(naziv,""r"");
    FILE *izlaz=fopen(naziv1,""w"");
    char rijeci[1000][1000]={0},rijec[1000];
    int broj_rijeci=0,duzina=0,brojackrajeva=0;
    char znak=fgetc(ulaz);
    int kontrola=0;
    while(znak!=EOF)
    {
        duzina=0;
        kontrola=0;
        while(slovo(znak))
        {
            rijec[duzina++]=znak;
            znak=fgetc(ulaz);
        }
        rijec[duzina]='\0';
        if(duzina<10 && duzina!=0)
        {
            strcpy(rijeci[broj_rijeci],rijec);
            int j;
            for(j=0;j<broj_rijeci;j++)
            {
                if(strcmp(rijeci[j],rijec)==0)
                {
                    kontrola=1;
                    break;
                }
            }
            if(kontrola)
                break;
            broj_rijeci++;
        }
        znak=fgetc(ulaz);
    }
    /*prebrojimo koliko ima rijeci*/
    brojackrajeva=0;
    char c=fgetc(ulaz1);
    while(c!=EOF)
    {
        /*brojimo nova mjesta*/
        if(c=='\n')
            brojackrajeva++;
        /*kad dodjemo do zadnje rijeci prekidamo*/
        if(brojackrajeva==broj_rijeci)
            break;
        c=fgetc(ulaz1);
    }
    c=fgetc(ulaz1);
        while(c!=EOF)
        {
            int n=0;
            /*sve znakove od 20 do 30 mijenjamo rijecima*/
            if(c>=20 && c<=30)
            {
                char *p=rijeci[c-20];
                n=1;
                /*ubacujemo rijec*/
                while(*p!='\0')
                {
                    fputc(*p,izlaz);
                    p++;
                }
            }
            /*ako nije znak prepisujem rijeci*/
            if(n==0)
                fputc(c,izlaz);
            c=fgetc(ulaz1);
        }
    printf(""Datoteka dekompresovana.\n"");
    fclose(ulaz);
    fclose(izlaz);
    fclose(ulaz1);
    
}
int main() {
    int opcija;
    char s[100], p[100];
    do
    {
        printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
        scanf(""%d"",&opcija);
        switch(opcija)
        {
            /*unosim datoteke i vrsim kompresiju/dekompresiju*/
            case 1:
                printf(""Unesite ime ulazne datoteke: "");
                unesi(s,40);
                printf(""Unesite ime izlazne datoteke: "");
                unesi(p,40);
                kompresuj(s,p);
                break;
            case 2:
                printf(""Unesite ime ulazne datoteke: "");
                unesi(s,40);
                printf(""Unesite ime izlazne datoteke: "");
                unesi(p,40);
                dekompresuj(s,p);
        }
    }while(opcija!=0);
	return 0;
}
","#include <stdio.h>
#include <ctype.h>
#include <string.h>

void unesi(char niz[], int velicina) {
	char znak=getchar();
	if (znak=='\n') znak=getchar();
	int i = 0;
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
niz[i]='\0';
}
int slovo(int c){
	if(c>='A' && c<='Z' || c>='a' && c<='z')
	return 1;
	return 0;
}
void swap(char*p,char*q){
	char temp[100];
strcpy(temp,p);
strcpy(p,q);
strcpy(q,temp); }
void kompresuj(char* naziv, char*naziv1){
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv1,""w"");
	char rijeci[1000][1000]={0};
	int brojac[1000]={0};
	int i,broj_rijeci = 0;
	char rijec[1000];
	int duzina;
	char znak=fgetc(ulaz);
	while(znak!=EOF) {
		duzina = 0;
	while(slovo(znak)) {
		rijec[duzina++]= znak;
		znak=fgetc(ulaz);
	}
	rijec[duzina]='\0';
	if (duzina <10 && duzina!=0){
		int ima = 0;
		int j;
		for(j = 0;j < broj_rijeci; j++) {
			if (strcmp(rijeci[j],rijec) ==0) {
				ima = 1;
				brojac[j]++;
				break;
			}
		}
	if (ima!=1) {
		strcpy(rijeci[broj_rijeci], rijec);
		brojac[broj_rijeci++] = 1;
	} }
	znak=fgetc(ulaz); }
	int j;
	for(i=0;i<broj_rijeci;i++){
		for(j=i+1;j<broj_rijeci;j++){
			if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1)){
				int temp=brojac[j];
				brojac[j]=brojac[i];
				brojac[i]=temp;
				swap(rijeci[i],rijeci[j]);
			}
		}
	}
	int kraj=10;
	char novired='\n';
	if(broj_rijeci<10) kraj=broj_rijeci;
	for(i=0;i<kraj;i++){
		fputs(rijeci[i],izlaz);
		fputc(novired,izlaz);
	}
char c=fgetc(ulaz1);
while(c!=EOF){
	duzina = 0;
	while(slovo(c)) {
		rijec[duzina++]=c;
		c=fgetc(ulaz1);
	}
	rijec[duzina]='\0';
	int kontrola=0;
	if(duzina<10 && duzina!=0){
		for(j=0; j<kraj; j++){
if(strcmp(rijeci[j], rijec) == 0){
	char znk=j+20;
	kontrola=1;
	fputc(znk,izlaz);
	fputc(c,izlaz);
	break;
}}
}
if (kontrola==0){
	char*r=rijec;
	while(*r!='\0'){
fputc(*r,izlaz);
r++; }
fputc(c,izlaz);
}
c=fgetc(ulaz1);
}
printf(""Datoteka kompresovana.\n"");
fclose(ulaz);
fclose(ulaz1);
fclose(izlaz);
}
void dekompresuj(char*naziv, char*naziv1){
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv1,""w"");
char rijeci[1000][1000]={0}, rijec[1000];
int broj_rijeci=0, duzina=0, brojackrajeva=0;
char znak=fgetc(ulaz);
int kontrola=0;
while(znak!=EOF){
	duzina=0;
	kontrola=0;
	while(slovo(znak)){
		rijec[duzina++]= znak;
		znak=fgetc(ulaz); }
		rijec[duzina]='\0';
		if (duzina <10 && duzina!=0) {
			strcpy(rijeci[broj_rijeci], rijec);
		int j;
		for( j=0; j < broj_rijeci; j++) {
			if(strcmp(rijeci[j], rijec) == 0){
				kontrola=1;
				break;
			} }
if(kontrola)
break;
broj_rijeci++; 
}
znak=fgetc(ulaz);
}
brojackrajeva=0;
char c=fgetc(ulaz1);
while(c!=EOF){
	if(c=='\n')brojackrajeva++;
	if(brojackrajeva==broj_rijeci) break;
	c=fgetc(ulaz1); 
}
c=fgetc(ulaz1);
while(c!=EOF){
	int n=0;
if(c>=20 && c<=30) {
	char*p=rijeci[c-20];
	n=1;
while(*p!='\0'){
fputc(*p,izlaz);
p++; }}
if(n==0)
fputc(c,izlaz);
c=fgetc(ulaz1); }
printf(""Datoteka dekompresovana.\n"");
fclose(ulaz);
fclose(izlaz);
fclose(ulaz1);
}
int main(){
	int opcija;
char s[100],p[100];
do {
	printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
scanf(""%d"",&opcija);
switch(opcija){
	case 1:
	printf(""Unesite ime ulazne datoteke: "");
	unesi(s,40);
	printf(""Unesite ime izlazne datoteke: "");
	unesi(p,40);
	kompresuj(s,p);
	break;
	case 2:
	printf(""Unesite ime ulazne datoteke: "");
	unesi(s,40);
	printf(""Unesite ime izlazne datoteke: "");
	unesi(p,40);
	dekompresuj(s,p);} }
	while(opcija!=0);
	return 0; }"
1464,69,69,0,15,A2016/Z1/Z4/student1476,A2016/Z1/Z4/student1120,"#include <stdio.h>

int main() {
	int i,j,n;
	do
	{
		printf(""Unesite broj n: "");	scanf(""%d"", &n);
	if(n<=0 || n>50) printf(""Pogresan unos\n"");
	} while (n<=0 || n>50); {
		if(n==1) {printf(""***"");
		}else
	for (i=0; i<n; i++)
	 {
	for (j=0; j<4*n-3; j++)
    	{
		if(i==j || i+j-(n-1)==n-1 || i==j-2*(n-1) || i+j-3*(n-1)==n-1) 
		printf(""*"");
		else printf ("" "");
     }
      printf(""\n"");
     }
   
	}
return 0;
}","#include <stdio.h>

int main() {
	int i,j,n;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<=0 || n>50)
	{
		printf(""Pogresan unos\n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1)
	printf(""***"");
	else
	{
	for(i=0;i<n;i++)
	{
		for(j=0;j<4*n-3;j++)
		{
			if(i==j || i+j-(n-1)==n-1 || i==j-2*(n-1) || i+j-3*(n-1)==n-1)
				printf(""*"");
			else printf("" "");
			}
			printf(""\n"");
		}
		return 0;
	}
}
"
1470,72,72,0,34,A2016/Z2/Z4/student1192,A2016/Z2/Z4/student4824,"#include <stdio.h>
#include <math.h>
#define epsilon 0.0001
#include <stdlib.h>
int main() {
	int i,t,c,  j,   m, n;
	double a[100][100];
	do
	{
	printf(""Unesite M i N: "");
	scanf(""%d %d"", &m, &n);
	if((m>100)||(m<=0)||(n>100)||(n<=0))
	printf(""Pogresan unos!\n"");
	}
	while((m>100)||(m<=0)||(n>100)||(n<=0));
	printf(""Unesite elemente matrice: "");
	t=1;
	c=1;
	for(i=0; i<m; i++)
		{
			for(j=0; j<n; j++)
				{
					scanf(""%lf"", &a[i][j]);
				}
		}
		for(i=0; i<m-1; i++)
		{
			
			for(j=0; j<n-1; j++)
			{
				if(fabs(a[i][j]-a[i+1][j+1])>epsilon)
				{
					t=0;
				}
			
			}
			
		}
		if(t==1)
		{
		for(i=0; i<m-1; i++)
		{
			if(fabs(a[i][n-1]-a[i+1][0])>epsilon)
				c=0;
			
			
		}	
		}
	if(t==1)
	{
		if(c==1)
		printf(""Matrica je cirkularna"");
		else 
		printf(""Matrica je Teplicova"");
	}
	else 
	printf(""Matrica nije ni cirkularna ni Teplicova"");
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define EPSILON 0.0000000001

int main() {
	double niz[100][100];
	int a,b,M,N,t,c;
	do
	{
		printf(""Unesite M i N: "");
		scanf(""%d %d"",&M,&N);
		if (((M<=0) || (M>100)) || ((N<=0) || (N>100)))
		{
			printf(""Pogresan unos!\n"");
			
		}
		
	} while (((M<=0) || (M>100)) || ((N<=0) || (N>100)));
	printf(""Unesite elemente matrice: "");
	t=1;
	c=1;
	for(a=0;a<M;a++)
	{
		for(b=0;b<N;b++)
		{
			scanf(""%lf"",&niz[a][b]);
				
		}
			
	}
	for (a=0;a<(M-1);a++)
	{
		for(b=0;b<(N-1);b++)
		{
			if((fabs(niz[a][b] - niz[a+1][b+1])>EPSILON))
			t=0;
				
		}
			
	}
	for (a=0;a<(M-1);a++)
	{
		for(b=0;b<(N-1);b++)
		{ 
			if((fabs (niz[a][b]-niz[a+1][b+1])>EPSILON) || (fabs(niz[a][N-1]-niz[a+1][0])>EPSILON))
			c=0;
			
		}
			
	}
	if(((t==1) && (c==0)) || ((M==100) && (N==1)))
	{
		printf(""Matrica je Teplicova"");
		
	}
	else if (c==1) 
	{
			printf(""Matrica je cirkularna"");
		
	}
	else
	{
		printf(""Matrica nije ni cirkularna ni Teplicova"");
		
	}
	return 0;
		
	}
		

"
1471,98,98,0,70,A2016/Z3/Z3/student2126,A2016/Z3/Z3/student2371,"#include <stdio.h>

int main(){
		int M, N, Q;
		int matrica[201][201];
		do{
			printf(""Unesite brojeve M i N: "");
			scanf(""%d %d"", &M, &N);
			if(N<=0 || N>200 || M<=0 || M>200){
				printf(""Brojevi nisu u trazenom opsegu.\n"");
			}
		}while(N<=0 || N>200 || M<=0 || M>200);
	
	int i, j;
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			scanf(""%d"", &matrica[i][j]);
		}
	}
	while(1){
		int pr;
		for(i=0;i<N;i++){
			for(j=i+1;j<N;j++){
				Q=1;
				for(pr=0;pr<M;pr++){
					if(matrica[pr][i]!=matrica[pr][j]){
						Q=0;
					}
				}
				if(Q){
					int A,B;
					for(B=j;B<N-1;B++){
						for(A=0;A<M;A++){
							matrica[A][B]=matrica[A][B+1];
						}
					}
					N--;
					j--;
				}
			}
		}
		for(i=0;i<M;i++){
			for(j=i+1;j<M;j++){
				Q=1;
				for(pr=0;pr<N;pr++){
					if(matrica[i][pr]!=matrica[j][pr]){
						Q=0;
					}
				}
				if(Q){
					int A,B;
					for(B=j;B<M-1;B++){
						for(A=0;A<N;A++){
							matrica[B][A]=matrica[B+1][A];
						}
					}
					M--;
					j--;
				}
			}
		}
		break;
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
		for(i=0;i<M;i++){
			for(j=0;j<N;j++){
				printf(""%5d"", matrica[i][j]);
			}
			printf(""\n"");
	
		}
	
	return 0;
}
","#include <stdio.h>

int main() {
	int a, b, c;
	int mat[201][201];
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"", &a, &b);
		if(a<=0 || a>200 || b<=0 || b>200){
			printf(""Brojevi nisu u trazenom opsegu.\n"");
		}
		}while(a<=0 || a>200 || b<=0 || b>200);
		int i, j;
		printf(""Unesite elemente matrice: "");
		for(i=0;i<a;i++){
			for(j=0;j<b;j++){
				scanf(""%d"",&mat[i][j]);
			}
		}
		
		
		while(1==1){
			int p;
			for(i=0;i<b;i++){
				for(j=i+1;j<b;j++){
					c=1;
					for(p=0;p<a;p++){
						if(mat[p][i]!=mat[p][j]){
							c=0;
						}
					}
					if(c){
						int x, y;
						for(y=j; y<b-1; y++){
							for(x=0; x<a; x++){
								mat[x][y]=mat[x][y+1];
							}
						}
						b--;
					    j--;
					}
				}
			}
			
						for(i=0;i<a;i++){
				for(j=i+1;j<a;j++){
					c=1;
					for(p=0;p<b;p++){
						if(mat[i][p]!=mat[j][p]){
							c=0;
						}
					}
					if(c){
						int x, y;
						for(y=j; y<a-1; y++){
							for(x=0; x<b; x++){
								mat[y][x]=mat[y+1][x];
							}
						}
						a--;
					    j--;
					}
				}
			}
			break;
		}
		printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
		for(i=0;i<a;i++){
			for(j=0;j<b;j++){
				printf(""%5d"",mat[i][j]);
			}
			printf(""\n"");
		}
		return 0;
}
"
1476,99,99,0,116,A2016/Z5/Z1/student6547,A2016/Z5/Z1/student6723,"
#include <stdio.h>
#include <string.h>

struct Student {
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};

double prosjecna_ocjena(int niz[],int vel) {
	if(vel==0) return 0;
	int i;
	double prosjek=5,suma=0;
	for(i=0;i<vel;i++) 
	if(niz[i]==5) return 5;
	else suma+=niz[i];
	return suma/vel;
}

int uporedi(char* s1, char* s2) {
	if(strcmp(s1,s2)==0) return 0;
	if(strcmp(s1,s2)<0) return -1;
	if(strcmp(s1,s2)>0) return 1;
}

int vratiduz(struct Student studenti[], int velicina, double prosjek) {
	int i,j;
	
	for(i=0;i<velicina;i++) {
		
		if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)<prosjek) {
			for(j=i;j<velicina-1;j++)
			studenti[j]=studenti[j+1];
			velicina--;
			i--;
		}
	}
	return velicina;
}

int genijalci (struct Student studenti[],int velicina, double prosjek) {
	int i,j;
	velicina=vratiduz(studenti,velicina,prosjek);
	int prvi=-1, drugi=-1, treci=-1;
	double najveci=0, prosj;
	int ispred;
	
	for(i=0;i<velicina;i++) {
		double prosjek=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
		if (prosjek>=najveci) {
			if (prosjek>najveci) {
				prvi=i;
				najveci=prosjek;
			}
			najveci=prosjek;
			ispred=uporedi(studenti[prvi].prezime, studenti[i].prezime);
			if(ispred==1) 
			prvi=i;
			
			if(ispred==0)
			ispred=uporedi(studenti[prvi].ime, studenti[i].ime);
		}
	}
	najveci=0;
	for(i=0;i<velicina;i++) {
		double prosjek=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
		if (prosjek>=najveci && i!=prvi) {
			if(prosjek>najveci) {
				drugi=i;
				najveci=prosjek;
			}
			najveci=prosjek;
			ispred=uporedi(studenti[drugi].prezime,studenti[i].prezime);
			if(ispred==0)
			ispred=uporedi(studenti[drugi].ime,studenti[i].ime);
			
			if(ispred==1) {
				drugi=i;
			}
		}
	}
	najveci=0;
	for(i=0;i<velicina;i++) {
		double prosjek=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
		if(prosjek>=najveci && i!=prvi && i!=drugi) {
			if(prosjek>najveci) {
				treci=i;
				najveci=prosjek;
			}
			najveci=prosjek;
			ispred=uporedi(studenti[treci].prezime, studenti[i].prezime);
			if(ispred==0)
			ispred=uporedi(studenti[treci].ime, studenti[i].ime);
			if(ispred==1) treci=i;
		}
	}
	if(velicina==1)
	printf(""\n%s %s\n"",studenti[prvi].prezime,studenti[prvi].ime);
	
	if(velicina==2) {
		printf(""\n%s %s\n"",studenti[prvi].prezime,studenti[prvi].ime);
		printf(""%s %s\n"",studenti[drugi].prezime,studenti[drugi].ime);
		return 2;
	}
	if(velicina>2) {
		printf(""\n%s %s\n"",studenti[prvi].prezime, studenti[prvi].ime);
		printf(""%s %s\n"",studenti[drugi].prezime,studenti[drugi].ime);
		printf(""%s %s\n"",studenti[treci].prezime, studenti[treci].ime);
	}
	return velicina;
	
}

int main() {
	struct Student studenti[10]={ 
		{""Meho"",""Mujic"",{7,7,7,7,8},5}, {""Pero"",""Peric"",{8,8,8,8,7},5}, {""Beba"",""Bebic"",{7,8,9},3}, {""Mujo"",""Mujic"",{10,10,10,10,9},5},
	
	};
	int vel=genijalci(studenti, 4, 7);

	return 0;
}

","
#include <stdio.h>
#include <string.h>

struct Student {
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};

double prosjecna_ocjena(int niz[],int vel) {
	if(vel==0) return 0;
	int i;
	double prosjek=5,suma=0;
	for(i=0;i<vel;i++) 
	if(niz[i]==5) return 5;
	else suma+=niz[i];
	return suma/vel;
}

int uporedi(char* s1, char* s2) {
	if(strcmp(s1,s2)==0) return 0;
	if(strcmp(s1,s2)<0) return -1;
	if(strcmp(s1,s2)>0) return 1;
}

int vratiduz(struct Student studenti[], int velicina, double prosjek) {
	int i,j;
	
	for(i=0;i<velicina;i++) {
		
		if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)<prosjek) {
			for(j=i;j<velicina-1;j++)
			studenti[j]=studenti[j+1];
			velicina--;
			i--;
		}
	}
	return velicina;
}

int genijalci (struct Student studenti[],int velicina, double prosjek) {
	int i,j;
	velicina=vratiduz(studenti,velicina,prosjek);
	int prvi=-1, drugi=-1, treci=-1;
	double najveci=0, prosj;
	int ispred;
	
	for(i=0;i<velicina;i++) {
		double prosjek=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
		if (prosjek>=najveci) {
			if (prosjek>najveci) {
				prvi=i;
				najveci=prosjek;
			}
			najveci=prosjek;
			ispred=uporedi(studenti[prvi].prezime, studenti[i].prezime);
			if(ispred==1) 
			prvi=i;
			
			if(ispred==0)
			ispred=uporedi(studenti[prvi].ime, studenti[i].ime);
		}
	}
	najveci=0;
	for(i=0;i<velicina;i++) {
		double prosjek=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
		if (prosjek>=najveci && i!=prvi) {
			if(prosjek>najveci) {
				drugi=i;
				najveci=prosjek;
			}
			najveci=prosjek;
			ispred=uporedi(studenti[drugi].prezime,studenti[i].prezime);
			if(ispred==0)
			ispred=uporedi(studenti[drugi].ime,studenti[i].ime);
			
			if(ispred==1) {
				drugi=i;
			}
		}
	}
	najveci=0;
	for(i=0;i<velicina;i++) {
		double prosjek=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
		if(prosjek>=najveci && i!=prvi && i!=drugi) {
			if(prosjek>najveci) {
				treci=i;
				najveci=prosjek;
			}
			najveci=prosjek;
			ispred=uporedi(studenti[treci].prezime, studenti[i].prezime);
			if(ispred==0)
			ispred=uporedi(studenti[treci].ime, studenti[i].ime);
			if(ispred==1) treci=i;
		}
	}
	if(velicina==1)
	printf(""\n%s %s\n"",studenti[prvi].prezime,studenti[prvi].ime);
	
	if(velicina==2) {
		printf(""\n%s %s\n"",studenti[prvi].prezime,studenti[prvi].ime);
		printf(""%s %s\n"",studenti[drugi].prezime,studenti[drugi].ime);
		return 2;
	}
	if(velicina>2) {
		printf(""\n%s %s\n"",studenti[prvi].prezime, studenti[prvi].ime);
		printf(""%s %s\n"",studenti[drugi].prezime,studenti[drugi].ime);
		printf(""%s %s\n"",studenti[treci].prezime, studenti[treci].ime);
	}
	return velicina;
	
}

int main() {
	struct Student studenti[10]={ 
		{""Meho"",""Mujic"",{7,7,7,7,8},5}, {""Pero"",""Peric"",{8,8,8,8,7},5}, {""Beba"",""Bebic"",{7,8,9},3}, {""Mujo"",""Mujic"",{10,10,10,10,9},5},
	
	};
	int vel=genijalci(studenti, 4, 7);

	return 0;
}

"
1478,21,21,0,14,A2016/Z4/Z2/student1616,A2016/Z4/Z2/student7180,"#include <stdio.h>
void sortiraj(int *niz,int *sort,int *index)
{
	int i,j;
	int temp;

		for(i=0;i<127;i++)
		{
			for(j=i;j<127;j
			{
				if(niz[i]<niz[j])
				{
					temp=niz[i];
					niz[i]=niz[j];
					niz[j]=temp;

					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
				else if(niz[i]==niz[j] && index[i]>index[j])
				{
					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
			}
		}


}
void Pretvori(char *s,char *sifrarnik)
{
	char *p=s,*kljuc=sifrarnik;
	int br;
		while(*p!='\0')
		{	br=0;
			kljuc=sifrarnik;

			while(*kljuc!='\0')
			{
				if(*p==*kljuc++){*p=126-br;break;}
				br++;
			}
			p++;
		}

}
char *kodiraj(char *s,char *sifrarnik)
{

	char *p=s,*pok=sifrarnik;
	int i;
	int niz[127];
	int sort[127];
	int index[127];

		for(i=0;i<127;i++)
		{
			if(i<32){ niz[i]=-1; index[i]=-1;}
			else{niz[i]=0;index[i]=i;}
		}
		while(*p!='\0')
		{
			niz[*p+0]++;
			p++;
        }

		for(i=0;i<127;i++)
			sort[i]=niz[i];

		sortiraj(niz,sort,index);

		for(i=0;i<127;i++)
		{
			if(index[i]!=-1)
			{
				*pok=index[i];
				pok++;
			}
		}
		Pretvori(s,sifrarnik);

	return s;
}
char* dekodiraj(char *s,char *sifrarnik)
{

	char *p=s;

		while(*p!='\0')
		{
			*p=sifrarnik[126-*p];
			p++;
		}
	return s;

}
int main() {

	char tekst[] = ""U ovom testu cemo testirati samo kodiranje"";
    char sifrarnik[100] = """";
    kodiraj(tekst, sifrarnik);
    printf(""%s\n"", tekst);
    dekodiraj(tekst, sifrarnik);
    printf (""%s\n"", tekst);
    printf(""%s\n"", sifrarnik);

	return 0;
}
","#include <stdio.h>

void sortiranje(int *sortiraj, int *index)
{
	int i=0, j, temp1, temp2;
	i=0;
	while(i<95)
	{
		j=0;
		while(j<95)
		{
			if(sortiraj[j]<sortiraj[i])
			{
				temp1=sortiraj[i];
				sortiraj[i]=sortiraj[j];
				sortiraj[j]=temp1;
				
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			
			if(sortiraj[i]==sortiraj[j] && index[i]<index[j])
			{
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			j++;
		}
		i++;
	}
}

void stvori(char *kljuc, int *sortiraj, int *index)
{
	int i;
	i=0;
	do
	{
		if(sortiraj[i]!=0) 
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	
	i=0;
	do{
		if(sortiraj[i]==0)
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	*kljuc='\0';
}

char *kodiraj (char *tekst, char *kljuc)
{
	char *p=tekst;
	char *q;
	int niz[95], sort[95], in[95];
	int i, br;
	
	i=0;
	while(i<95) 
	{
		niz[i]=0;
		i++;
	}
	do{
		q=p;
		br=0;
		while(*q!='\0')
		{
		if(*p==*q) br++;
		q++;
		}
		if(niz[*p-32]==0) {niz[*p-32]=br;}
		p++;
	}
	while(*p!='\0');
	
	i=0;
	while(i<95)
	{
		sort[i]=niz[i];
		in[i]=i;
		i++;
	}
	sortiranje(sort, in);
	stvori(kljuc, sort, in);
	p=tekst;
	q=kljuc;
	
	do{
		q=kljuc;
		br=0;
		while(*q!='\0')
		{
			if(*p==*q)
			{
				*p=126-br;
				break;
			}
			br++;
			q++;
		}
		p++;
	} while(*p!='\0');
	return tekst;
}

char *dekodiraj(char *tekst, char *kljuc)
{
	char *p=tekst;
	do
	{
	*p=kljuc[126-*p];
	p++;
	} while(*p!='\0');
	return tekst;
}

int main() {
	char primjer[]=""LLMLNLNMONM"";
	char sifra[100]="""";
	printf(""%s"", kodiraj(primjer, sifra));
	return 0;
}
"
1486,98,98,0,25,A2016/Z2/Z1/student4824,A2016/Z2/Z1/student3610,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int main() {
	int broj,j,l,k=0,m=0,z=0;
	printf(""Unesite broj: "");
	scanf(""%d"",&broj);
	if ((broj>0) && (broj<10))
	{
		z=0;
		printf(""%d"",z);
		return 0;
	
	}
	if (broj<0)
	{ broj=abs(broj);
	}
	for(;broj>=10;k++)
	{
		j=broj%10;
		broj=broj/10;
		l=broj%10;
		m=abs((j-l))*pow(10,k);
		z=z+m;
		
	}
	printf(""%d"",z);
	return 0;
	
}

","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int main() {
	int broj,j,l,k=0,m=0,z=0;
	printf(""Unesite broj: "");
	scanf(""%d"",&broj);
	if ((broj>0) && (broj<10))
	{
		z=0;
		printf(""%d"",z);
		return 0;
	
	}
	if (broj<0)
	{ broj=abs(broj);
	}
	for(;broj>=10;k++)
	{
		j=broj%10;
		broj=broj/10;
		l=broj%10;
		m=abs((j-l))*pow(10,k);
		z=z+m;
		
	}
	printf(""%d"",z);
	return 0;
	
}

"
1498,99,99,0,89,A2016/Z4/Z3/student2111,A2016/Z4/Z3/student8540,"#include <stdio.h>
int ifchange(char* t, char* r ){
	char* b=t;
	char* br=r;
	int m=1;
	
	while(*t!='\0' && *r!='\0'){
		if(*t!=*r)m=0;
		t++;
		r++;
	}
	if((*t!=' ' && *t!='\0') || *r!='\0')m=0;
	t=b;
	r=br;
	return m;
}
void change(char* txt, char* w, char*nw){
	char* tmp=txt;
	char* wtmp=w, *ntmp=nw, *c=txt;
	int m=0, i, cnt=1;
	while(*txt!='\0'){
		cnt=0;
		while(*txt!='\0' && *txt!=*w){
			txt++;
		}
		if(*txt!='\0' && (txt==tmp || *(txt-1)==' ') && ifchange(txt, w)){
			
			while(*nw!='\0'){
				if(*txt==' ' ||*txt=='\0' ){
					c=txt;
					while(*txt!='\0'){txt++;}
					txt++;
					while(txt>c){
						*txt=*(txt-1);
						txt--;
					}
			}
			*txt=*nw;
			txt++;
			nw++;
		}
		cnt=1;
	}
	if(*txt!=' ' && *txt!='\0' && cnt==1){
		c=txt;
		while(*txt!=' ' && *txt!='\0'){
			m++;
			txt++;
		}
		txt=c;
		for(i=0;i<m;i++){
			txt=c;
			while(*txt!='\0'){
				*txt=*(txt+1);
				txt++;
			}
		}
		txt=c;
	}
	if(*txt!=' ' && *txt!='\0')txt++;
	w=wtmp;
	nw=ntmp;
}
txt=tmp;
w=wtmp;
nw=ntmp;
}

char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	char* tmptxt=tekst;
	int i;
	for(i=0;i<broj_rijeci;i++){
		tekst=tmptxt;
		while(*tekst!='\0'){
			while(*tekst!='\0' && *tekst==' '){tekst++;	}
			if(ifchange(tekst, rijeci[i])){
				
				change(tekst, rijeci[i], zamjene[i]);
			}
			while(*tekst!=' ' && *tekst!='\0')tekst++;
		}
	}return tmptxt;
}
int main() {
	char* rijeci[2]={"""", """"};
	char* zamjene[2]={"""", """"};
	char tekst[100]="""";
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
	
	return 0;
	
}

","#include <stdio.h>
int ifchange(char* t, char* r ){
	char* b=t;
	char* br=r;
	int m=1;
	
	while(*t!='\0' && *r!='\0'){
		if(*t!=*r)m=0;
		t++;
		r++;
	}
	if((*t!=' ' && *t!='\0') || *r!='\0')m=0;
	t=b;
	r=br;
	return m;
}
void change(char* txt, char* w, char*nw){
	char* tmp=txt;
	char* wtmp=w, *ntmp=nw, *c=txt;
	int m=0, i, cnt=1;
	while(*txt!='\0'){
		cnt=0;
		while(*txt!='\0' && *txt!=*w){
			txt++;
		}
		if(*txt!='\0' && (txt==tmp || *(txt-1)==' ') && ifchange(txt, w)){
			
			while(*nw!='\0'){
				if(*txt==' ' ||*txt=='\0' ){
					c=txt;
					while(*txt!='\0'){txt++;}
					txt++;
					while(txt>c){
						*txt=*(txt-1);
						txt--;
					}
			}
			*txt=*nw;
			txt++;
			nw++;
		}
		cnt=1;
	}
	if(*txt!=' ' && *txt!='\0' && cnt==1){
		c=txt;
		while(*txt!=' ' && *txt!='\0'){
			m++;
			txt++;
		}
		txt=c;
		for(i=0;i<m;i++){
			txt=c;
			while(*txt!='\0'){
				*txt=*(txt+1);
				txt++;
			}
		}
		txt=c;
	}
	if(*txt!=' ' && *txt!='\0')txt++;
	w=wtmp;
	nw=ntmp;
}
txt=tmp;
w=wtmp;
nw=ntmp;
}

char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	char* tmptxt=tekst;
	int i;
	for(i=0;i<broj_rijeci;i++){
		tekst=tmptxt;
		while(*tekst!='\0'){
			while(*tekst!='\0' && *tekst==' '){tekst++;	}
			if(ifchange(tekst, rijeci[i])){
				
				change(tekst, rijeci[i], zamjene[i]);
			}
			while(*tekst!=' ' && *tekst!='\0')tekst++;
		}
	}return tmptxt;
}
int main() {
	char* rijeci[2]={"""", """"};
	char* zamjene[2]={"""", """"};
	char tekst[100]="""";
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
	
	return 0;
	
}

"
1505,20,20,0,21,A2016/Z5/Z1/student1542,A2016/Z5/Z1/student6548,"#include <stdio.h>
#include <string.h>

struct Student {
	char ime [20],prezime[20];
	int ocjene [50];
	int br_ocjena;
};

void unesi(char niz[], int velicina) {
	char znak = getchar();
	if (znak == '\n') znak=getchar();
	int i = 0;
	while (i < velicina-1 && znak != '\n') {
		niz[i] = znak;
		i++;
		znak = getchar();
	}
	niz[i]='\0';
}

float prosjek(int niz[], int velicina){
	int i,suma=0;
	float pr;
	for(i=0;i<velicina;i++){
		if(niz[i]==5 || velicina==0) return 5;
		suma+=niz[i];
	}
		pr=(float)suma/velicina;
	return pr;
}

int genijalci (struct Student *niz,int velicina,float pros){
	int i,j,indeks=0,indeks2=0,indeks3=0;
	float max=0;
	for(i=0;i<velicina;i++){
		if(niz[i].br_ocjena==0 || prosjek(niz[i].ocjene,niz[i].br_ocjena)<pros){
			for(j=i;j<velicina-1;j++){
				niz[j]=niz[j+1];
			}
			velicina--;
			i--;
		}
	}
	if(velicina==0)return 0;
		for(i=0;i<velicina;i++){
			if(prosjek(niz[i].ocjene,niz[i].br_ocjena)>max){
			max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			indeks=i;
			}
			else if(prosjek(niz[i].ocjene,niz[i].br_ocjena)==max){
				if(strcmp(niz[indeks].prezime,niz[i].prezime)>0){
					indeks=i;
					max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
				}
				else if(strcmp(niz[indeks].prezime,niz[i].prezime)==0 && strcmp(niz[indeks].ime,niz[i].ime)>0){
					indeks=i;
					max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
				}
			}
		}
		printf(""%s %s\n"",niz[indeks].prezime,niz[indeks].ime);
		max=0;
		indeks2=-1;
	
		for(i=0; i<velicina; i++){
			if(i==indeks)continue;
			else {
				indeks2=i;
				break;
			}
		}
		if(indeks2==-1)return velicina;
		max=prosjek(niz[indeks2].ocjene,niz[indeks2].br_ocjena);
		for(i=0; i<velicina; i++){
			if(i==indeks)continue;
			if(prosjek(niz[i].ocjene,niz[i].br_ocjena)>max){
				max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
				indeks2=i;
			}
		else if(prosjek(niz[i].ocjene,niz[i].br_ocjena)==max){
			if(strcmp(niz[indeks2].prezime,niz[i].prezime)>0){
				indeks2=i;
				max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			}
			else if(strcmp(niz[indeks2].prezime,niz[i].prezime)==0 && strcmp(niz[indeks2].ime,niz[i].ime)>0){
				indeks2=i;
				max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			}
		}
		}
		printf(""%s %s\n"",niz[indeks2].prezime,niz[indeks2].ime);
		max=0;
		indeks3=-1;
		for(i=0; i<velicina; i++){
			if(i==indeks || i==indeks2)continue;
			else {
				indeks3=i;
				break;
			}
		}
		if(indeks3==-1)return velicina;
		max=prosjek(niz[indeks3].ocjene,niz[indeks3].br_ocjena);
		for(i=0; i<velicina; i++){
			if(i==indeks || i==indeks2)continue;
			if(prosjek(niz[i].ocjene,niz[i].br_ocjena)>max){
			max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			indeks3=i;
			}
		else if(prosjek(niz[i].ocjene,niz[i].br_ocjena)==max){
			if(strcmp(niz[indeks3].prezime,niz[i].prezime)>0){
				indeks3=i;
				max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			}
			else if(strcmp(niz[indeks3].prezime,niz[i].prezime)==0 && strcmp(niz[indeks3].ime,niz[i].ime)>0){
				indeks3=i;
				max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			}
		}
		}
		printf(""%s %s\n"",niz[indeks3].prezime,niz[indeks3].ime);
		return velicina;
}
int main() {
	struct Student studenti[6] ={
		{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
		{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
		{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5}, 
		{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
		{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
		{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
	};
	genijalci(studenti, 6, 6.5);
	return 0;
}
","#include <stdio.h>
#include <string.h>

struct Student{
    char ime[20],prezime[20];
    int ocjene[50];
    int br_ocjena;
};

double prosjecna_ocjena(int niz[],int vel){
    if(vel==0) return 0;
    int i;
    double prosjek=5, suma=0;
    for(i=0;i<vel;i++){
        if(niz[i]==5) return 5;
        suma+=niz[i];
    }
    prosjek=suma/vel;
    return prosjek;
}

int uporedi(char* s1, char* s2){
    while (*s1!='\0' && *s2!='\0'){
        if(*s1<*s2) return -1;
        if(*s1>*s2) return 1;
        s1++;
        s2++;
    }
    if(*s1!='\0') return 1;
    if(*s2!='\0') return -1;
    return 0;
}
int genijalci(struct Student studenti[], int velicina, double prosjek){
    int i,j;
    for(i=0;i<velicina;i++){
        if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)<prosjek){
            for(j=i; j<velicina-1; j++)
                studenti[j]=studenti[j+1];
            velicina--;
            i--;
        }
    }
int prvi=-1, drugi=-1, treci=-1;
double najveci=0, prosj;
int ispred;

for(i=0; i<velicina; i++){
    if(prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena) >= najveci){
        if(prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena) > najveci){
            prvi=i;
            najveci=prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena);
                continue;
        }
        najveci=prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena);
        ispred=uporedi(studenti[prvi].prezime, studenti[i].prezime);
        if(ispred==0)
            ispred=uporedi(studenti[prvi].ime,studenti[i].ime);
        if(ispred==1){
            prvi=i;
            }
        }
    }
    najveci=0;
    for(i=0;i<velicina;i++){
        if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)>=najveci && i!=prvi){
            if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)>najveci){
                drugi=i;
        najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
            continue;
            }
            najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
            ispred=uporedi(studenti[drugi].prezime,studenti[i].prezime);
            if(ispred==0)
                ispred=uporedi(studenti[drugi].ime,studenti[i].ime);
                if(ispred==1){
                    drugi=i;
                }
        }
    }
    najveci=0;
    for(i=0;i<velicina;i++){
        if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)>=najveci && i!=prvi && i!=drugi){
            if(prosjecna_ocjena (studenti[i].ocjene,studenti[i].br_ocjena)>najveci){
                
                treci=i;
                najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
                continue;
            }
            najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
            ispred=uporedi(studenti[treci].prezime,studenti[i].prezime);
            if(ispred==0)
                ispred=uporedi(studenti[treci].ime,studenti[i].ime);
            if(ispred==1){
                treci=i;
            }
        }
    }
    for (i=0;i<velicina;i++)
        if(i==prvi)
            printf(""\n%s %s\n"", studenti[prvi].prezime, studenti[prvi].ime);
    for (i=0;i<velicina;i++)
        if(i==drugi)
            printf(""%s %s\n"", studenti[drugi].prezime, studenti[drugi].ime);
    for(i=0;i<velicina;i++)
        if(i==treci)
            printf(""%s %s\n"",studenti[treci].prezime, studenti[treci].ime);
    return velicina;
}
    
int main(){
    struct Student studenti[10]={
        {""Meho"", ""Mujic"",{7,7,7,7,8},5},
        {""Pero"", ""Peric"",{8,8,8,8,7},5},
        {""Beba"", ""Bebic"",{7,8,9},3},
        {""Mujo"", ""Mujic"",{10,10,10,10,9},5},
        {""Mujo"", ""Mujic"",{7,7,7,7,7,7,7},7},
        {""Fata"", ""Fatic"",{7,7,7,7,7,7,6,6,6,5},10},
        {""Osman"", ""Osmic"",{8,6,9,10,9},5},
        {""Pero"", ""Mujic"",{10,6,10,10,9},5},
        {""Beba"", ""Mujic"",{10,8,7,6,9},5},
        
    };
    
    int vel=genijalci(studenti, 9, 7);
    return 0;
}"
1507,17,17,0,58,A2016/Z5/Z3/student6548,A2016/Z5/Z3/student8357,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme{
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

char unesi(char niz[], int velicina){
	char znak=getchar();
	int vel=velicina;
		int i = 0, k=0;
	if (znak== '\n')
		znak = getchar();
	while (i<vel && znak !='\n'){
		niz[i] = znak;
		i++;k++;
		znak=getchar();
	}
	niz[i]='\0';
	return znak;
}

void cln(char znak){
	while(znak!='\n')
		znak=getchar();
		
}

int ucitaj_datoteku(struct Cas raspored[]){
	FILE* dat = fopen(""raspored.dat"", ""rb"");
	if(dat==NULL) return 0;
	int ucitanih=fread(raspored,sizeof(struct Cas), KAPACITET,dat);
	fclose(dat);
	return ucitanih;
}
void isp(int vel){
	int x;
	int veli=vel/2;
	for(x=0;x<veli;x++)
		printf(""  "");
		
}
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	
	for (i=0;i<broj_casova;i++){
		if(raspored [i].pocetak.sati<min)
			min=raspored[i].pocetak.sati;
	} 
	printf(""\n       PON       UTO       SRI""); //RAZMAK=7mjesta
	printf(""       CET       "");
	printf(""PET       SUB\n"");
	
int mintt=0;
int indexpamtimo;
for (i=0; i<broj_casova;i++){
	if (raspored[i].kraj.sati>max){
		max=raspored[i].kraj.sati;
		mintt=raspored[i].kraj.minute;
		indexpamtimo=1;
	}
}

int x;
int s,dan,n;
if(mintt==0) max=max-1;
int poc=min;
int kraj=max;
int ukupno=broj_casova;
	for(i=poc;i<=kraj;i++){
		if(i<10) printf(""%d:00   "",i); //4mjesta
	else printf(""%02d:00  "",i);
		for(j=1;j<7;j++){
			
			for(k=0;k<ukupno;k++){
				if(max>0){
					dan=raspored[k].dan_u_sedmici;
					n=raspored[k].kraj.sati;
				if (raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j && n>=i){
						printf(""%-10s"",raspored[k].predmet);
						break;
					}}}
					if(k==ukupno && ukupno>-1)
					isp(10);
		}
	printf(""\n"");
}
}

void pomispis(int k, char*s,int sat, int min, int sat1, int min1){
	printf(""\n%d) %s ("",k++,s);
	printf(""%02d:%02d-"",sat,min);
	printf(""%02d:%02d)"",sat1,min1);
}
void ispisi_dan(struct Cas raspored[], int broj_casova,int dan){
	int i,k=1;
		printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			int pocs=raspored[i].pocetak.sati;
			int pocm=raspored[i].pocetak.minute;
			int krajs=raspored[i].kraj.sati;
			int krajm=raspored[i].kraj.minute;
		pomispis(k++,raspored[i].predmet,pocs,pocm,krajs,krajm);
		
		}
	}
}


	
int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	FILE *ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL || ulaz1==NULL)
		return 0;
	int nova=fwrite(raspored, sizeof (struct Cas), broj_casova,ulaz);
	int zapisano=fwrite(raspored,sizeof(struct Cas), broj_casova,ulaz1);
	if(nova!=zapisano) return 0;
	fclose(ulaz);
	fclose(ulaz1);
	if (nova>0) return 1;
	else
		return 0;
}


void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,k=0,j;
	int bezzadnjeg=broj_casova-1;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			k++;
			if(k==redni_broj){
				for(j=i;j<bezzadnjeg;j++)
				raspored[j]=raspored[j+1];
				return;
			break;
			}
		}}}
int poredba(int p, int d){
	if (p > d) return 1;
	if (p < d) return -1;
	if (p == d) return 0;
}
int Poredi(struct Vrijeme t1, struct Vrijeme t2, int vel)
{
		int vr = t1.sati*vel*vel + t1.minute*vel + t1.sekunde, vr2 = t2.sati*vel*vel + t2.minute*vel + t2.sekunde;
		return poredba(vr,vr2);
		
}
int preklapanje (struct Cas raspored[],int broj_casova, struct Cas cas)
{
	
	int ima = 0;
	int i,prvi;
	for (i = 0; i < broj_casova; i++) {
		prvi=Poredi(raspored[i].kraj,cas.pocetak,60);
		if(prvi == 1 && Poredi(cas.kraj, raspored[i].pocetak,60)==1 && (cas.dan_u_sedmici==raspored[i].dan_u_sedmici))
		ima=1;
		break;
	}


return ima;
}


int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje){
	if(broj_casova==200) return 0;
	int i,j,preklop;
	int ukupno=19-trajanje;
	for (i=0; i<6; i++){
		for(j=9; j<=ukupno; j++){
			struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
			char *q=cas.predmet,*p=(char*) predmet;
			struct Cas cc;
			while (*q++=*p++);
			preklop=preklapanje(raspored,broj_casova,cas);
			if(preklop==1) continue;
			else{
				raspored[broj_casova]=cas;
				goto jedan;
			}
		}
	}
	
	return 0;
	jedan:
	return 1;
}


void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj,struct Cas promjena){
	int i, redni=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
			raspored[i]=promjena;
	}
}
void mjesto(int br){
	printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br);
}


int main() {
	int opcija, broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do{
		printf(""1) Ispis rasporeda\n"");
		printf(""2) Dodavanje casa\n3) Promjena casa\n"");
		printf(""4) Brisanje casa\n0) Kraj rada\n"");
		printf(""Izaberite opciju: "");
		scanf(""%d"",&opcija);
		
			if (opcija!=4 && opcija!=3 && opcija!=0 && opcija!=1){
				int br_casova,dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				cln(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				int vr=dodan;
				if(vr==0)
				mjesto(br_casova);
				if(vr==1)
				broj_casova++;
			}
			if (opcija!=0 && opcija!=3 && opcija!=2 && opcija!=1){
				int dan, redni;
				printf(""Unesite dan "");
				printf(""1=ponedjeljak, 2=utorak...,6=subota: "");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				printf(""\nIzaberite koji cas zelite obrisati: "");
				scanf(""%d"",&redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
					broj_casova--;
				printf(""Cas obrisan\n"");
			}
			if(opcija==0)
				zapisi_datoteku(raspored,broj_casova);
			if(opcija!=4 && opcija!=3 && opcija!=2 && opcija!=0);
				ispis_rasporeda(raspored,broj_casova);
			if(opcija!=4 && opcija!=0 && opcija!=2 && opcija!=1){
				struct Cas promjena;
				int dan,redni;
				char znak,predmet[10];
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota):"");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				promjena.dan_u_sedmici=dan;
				printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
				scanf(""%d"",&redni);
				cln(unesi(predmet,10));
				char *q=promjena.predmet;
				char *p=predmet;
				while(*q++=*p++);
				int prvi=broj_casova;
				int drugi=dan;
				int treci=redni;
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c"",&promjena.pocetak.sati,&znak);
				scanf(""%d"",&promjena.pocetak.minute);
				scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				promijeni_cas(raspored,prvi,drugi,redni,promjena);
			}
		
	} while(opcija!=0);
	return 0;
}","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};

char unesi(char niz[], int velicina) {
    
	char znak = getchar();
	if(velicina<0) return znak;
	if (znak == '\n') znak = getchar();
	int i = 0,k=0;
	while (i < velicina-1 && znak != '\n') {
		niz[i] = znak;
		i++;
		znak = getchar();
		k++;
	}

	niz[k] = '\0';
	return znak;
}

void ocisti(char znak){
	while(znak!='\n')
		znak=getchar();
}

int ucitaj_datoteku(struct Cas raspored[]){
	FILE *ulaz=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL)
		return 0;
	int kap=KAPACITET;
	int vel=sizeof (struct Cas);
	int ucitano;
	ucitano=fread(raspored,vel,KAPACITET,ulaz);
	fclose(ulaz);
	return ucitano;
}
int mmm(int d){
    if(d==0) return -1;
    else return 0;
}
int MAX(struct Cas raspored[], int broj_casova){
    int brojac=1;
      int i,j,max=0,indexmaxa=0;
    for (i=0; i<broj_casova;i++){
        brojac++;
            if (raspored[i].kraj.sati>max ){
                max=raspored[i].kraj.sati;
                indexmaxa=i;
}}
max=max-mmm(raspored[indexmaxa].kraj.minute);
return max;

}

int MIN(struct Cas raspored[], int broj_casova){
     int i,j,min=25;
    for (i=0; i<broj_casova;i++)
            if (raspored[i].pocetak.sati<min)
            	min=raspored[i].pocetak.sati;
    return min;
}
void ispisss(){
    printf(""\n       PON       UTO       SRI       CET       PET       SUB\n"");
}
void ispispr(char *pr){
    printf(""%-10s"",pr);
}
void ispispraz(int d){
     printf(""          "");
}
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
    int i,j, k;
   int max=MAX(raspored,broj_casova);
   int min=MIN(raspored,broj_casova);
       ispisss();
    for(i=min;i<=max;i++){
         if(i<10) printf(""9:00   "");
             else printf(""%d:00  "",i);
        for(j=1;j<7;j++){
			
                for(k=0;k<broj_casova;k++)
                    if ( raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j  && raspored[k].kraj.sati>=i){
                            ispispr(raspored[k].predmet);
                            break;
                            ispispraz(10);
                    }
                    if (k==broj_casova)
                       ispispraz(10);
            }
        printf(""\n"");
    }
}


    void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
        int i;
    printf(""Uneseni su casovi: "");
        int k=1;
        for(i=0;i<broj_casova;i++){
            if(raspored[i].dan_u_sedmici==dan){
            	int sat=raspored[i].pocetak.sati;
            	int min=raspored[i].pocetak.minute;
                printf(""\n%d) %s ("",k++,raspored[i].predmet);
                 if(sat<10) printf(""0"");
                 printf(""%d:"",sat);
                  if(min<10) printf(""0"");
                 printf(""%d-"",min);
                 if(raspored[i].kraj.sati<10) printf(""0"");
                 printf(""%d:"",raspored[i].kraj.sati);
                  if(raspored[i].kraj.minute<10) printf(""0"");
                 printf(""%d)\n"",raspored[i].kraj.minute);
            }
        }
    }


void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,j=0;
	for(i=0; i<broj_casova; i++){
		if (raspored[i].dan_u_sedmici==dan) j++;
		if (redni_broj==j){
		    for(;i<broj_casova-1;i++)
			    raspored[i]=raspored[i+1];
		    break;
		}
	}
}

int PorediVrj(struct Vrijeme t1, struct Vrijeme t2,int i)
{
    int sat=t1.sati*3600;
    int sat1=t2.sati*3600;
    int min=t1.minute*60;
    int min1=t2.minute*60;
    int d1 = sat+min+ t1.sekunde;
    int d2 = sat1+min1+ t2.sekunde;
    if (d1 > d2)  return 1; 
    if (d1 < d2)  return -1; 
    if (d1 == d2)  return 0; 
    
}
int preklapanje (struct Cas raspored[], int broj_casova, struct Cas cas)
{

    int prekl = 0;
    int i;
    for (i = 0; i < broj_casova; i++) {
		int drugi=PorediVrj(cas.kraj, raspored[i].pocetak,i);
		if(i<0) return prekl;
        if (PorediVrj(raspored[i].kraj,cas.pocetak,i)== 1 && drugi==1 && (cas.dan_u_sedmici == raspored[i].dan_u_sedmici)) {
            prekl= 1; 
            break;
        }
    }
   if(i>-1) return prekl;
}
int prazan(struct Cas cas){
    if(cas.predmet=="""") return 0;
    else return 1;
}


int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje){
	if(broj_casova==200) return 0;
	if(trajanje<0 ||trajanje>200) return 0;
	int i,j,preklop;
	for (i=0; i<6; i++)
		for(j=9; j<=19-trajanje; j++){
			struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
		cas.pocetak.minute=0;
		cas.kraj.minute=0;
		cas.pocetak.sekunde=0;
		cas.pocetak.minute=0;
		strcpy(cas.predmet,predmet);
		int praz=prazan(cas);
		struct Cas pom={"""",0,{0,0,0},{0,0,0}};
		strcpy(cas.predmet,predmet);
			preklop=preklapanje(raspored,broj_casova,cas);
			if (preklop==0){
				raspored[broj_casova]=cas;
				return 1;
			}
		}
	return 0;			
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
	int i,redni=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
			raspored[i]=promjena;
	}
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL)
		return 0;
	int kap=broj_casova;
	int vel=sizeof (struct Cas);
	int zapisano=fwrite(raspored,vel, broj_casova,ulaz);
	fclose(ulaz);
 return 1;

}

int main() {
	int opcija,broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do {
		printf(""1) Ispis rasporeda\n"");
	printf(""2) Dodavanje casa\n"");
	printf(""3) Promjena casa\n"");
	printf(""4) Brisanje casa\n"");
	printf(""0) Kraj rada\n"");
	printf(""Izaberite opciju: "");

		scanf(""%d"",&opcija);
		if (opcija==2){
				int br_casova,dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				ocisti(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				switch(dodan){
				    case 1: broj_casova++; break;
				    default: 	printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
				}
				
				
			}
		if (opcija==0) 
				zapisi_datoteku(raspored,broj_casova);
		if (opcija==1) 
				ispis_rasporeda(raspored,broj_casova);
		
		if (opcija==3 ){
				struct Cas promjena;
				int dan,redni;
				char predmet[10];
				printf(""Unesite dan (1=ponedjeljak, "");
				printf(""2=utorak..., "");
				printf(""6=subota): "");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				promjena.dan_u_sedmici=dan;
				printf(""Izaberite koji cas zelite promijeniti:  "");
				scanf(""%d"",&redni);
				if(redni>100 ||redni<0) goto preskok;
				printf(""Naziv predmeta: "");
				ocisti(unesi(predmet,10));
				char *q;
				
				if(opcija!=0) q=promjena.predmet;
				char*p;
			  if(opcija!=0)	p=predmet;
				preskok:
				strcpy(q,p);
				char znak;
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c%d%d%c%d"",&promjena.pocetak.sati,&znak,&promjena.pocetak.minute,&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				promijeni_cas(raspored,broj_casova,dan,redni,promjena);
			}
			if (opcija==4){
				int dan,redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				
				scanf(""%d"",&dan);
				if(opcija!=0){
				ispisi_dan(raspored,broj_casova,dan);
				printf(""Izaberite koji cas zelite obrisati: "");
				scanf(""%d"",&redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
				broj_casova=broj_casova-1;
				printf("" Cas obrisan\n"");
				}
			}
	} while (opcija!=0);
    
	return 0;
}
"
1522,96,96,0,25,A2016/Z1/Z4/student6790,A2016/Z1/Z4/student2421,"#include <stdio.h>

int main() {
	int n,i,j;
	
	do {
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	if (n<=0 || n>50) printf(""Pogresan unos\n"");
	} 
	while(n<=0 || n>50);
	
	
	if (n==1) {
		printf(""***""); 
	}
	else {
		for (i=1;i<=n;i++) {
			for (j=1;j<=(4*n-3);j++) {
				if (j==i || i+j==2*n || j-i==2*n-2|| i+j==4*n-2) {
					printf(""*"");
				}
				else {
					printf ("" "");
				}
			}
		printf(""\n"");
		}
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	int i,j,n;
	
	do{
	 printf(""Unesite broj n: "");	
	 scanf(""%d"",&n);
	 if (n<=0 || n>50){
		 printf(""Pogresan unos\n"");
	 }
	
	}while (n<=0 || n>50);
	
	if (n==1){
		printf(""***"");
	}else {
		for (i=1; i<=n; i++){
			for (j=1; j<=4*n-3; j++){
				if (j==i || j+i==2*n || j-i==2*n-2 || j+i==4*n-2){
					printf(""*"");
				}else {
					printf("" "");
				}
			}
			printf(""\n"");
		}
		
	}
	
	return 0;
}
"
1527,93,93,0,20,A2016/Z1/Z2/student7386,A2016/Z1/Z2/student5867," printf ("" Unesite a, dimenzijun \n"" );#include <stdio.h>#include <stdio.h>
#include <math.h>
int main() {
	float a1,a2,b1,b2,x,y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	if(a1==a2 && b1!=b2) {printf(""Paralelne su""); return 0;}
	else if(a1==a2 && b1==b2) {printf(""Poklapaju se""); return 0;}
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	return 0;
}","#include <stdio.h>
#include <math.h>

int main() 
{
	float a1, b1, a2, b2, x, y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
	
	if(a1==a2 && b1!=b2)
	{
	printf(""Paralelne su"");
	return 0;
	}
	
	else if(a1==a2 && b1==b2)
	{
		printf(""Poklapaju se"");
		return 0;
	}
	
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x, y);
	return 0;
}
"
1528,74,74,0,17,A2016/Z1/Z4/student2463,A2016/Z1/Z4/student1639,"#include <stdio.h>

int main() {
	int n, i=0, j=0;
	do{printf(""Unesite broj n: ""); 
	scanf(""%d"", &n);
	if(n<=0 || n>50) {
		printf(""Pogresan unos\n""); }
	}
	while(n<=0 || n>50);
	if(n==1) {printf(""***""); 
	return 0; }
	 for(i=0; i<n; i++) {
		for(j=0; j<4*n-1; j++) {
			if(i==j || i+j-(n-1)==n-1 || i==j-2*(n-1) || i+j-3*(n-1)==n-1 )
		{	printf(""*""); }
			else{printf("" "");}}
		printf(""\n"");}
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i=0;
	int j=0;
	do{printf(""Unesite broj n: "");
	scanf(""%d"", &n);
	if (n<=0 || n>50){printf(""Pogresan unos\n"");}
	}
	while (n<=0 || n>50);
	if(n==1){printf(""***"");} 
	else{
	 	for (i=0; i<n; i++){
	 		for (j=0; j<4*n-1; j++){
	 			if (i==j || i+j==2*n-2 || i==j-2*(n-1) || i+j-3*(n-1)==n-1){printf(""*"");}
	    			else{printf("" "");}}
	    	 	printf(""\n"");}
	}
	   
		 
	return 0; 
}
"
1531,92,92,0,74,A2016/Z2/Z2/student6594,A2016/Z2/Z2/student7173,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define pi 3.1415926
int main() {
	int i,n,j;
	double min[500],sek[500],stepen[500],niz[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	for(i=0;i<n;i++){
	scanf (""%lf"", &niz[i]);
	}
	for(i=0;i<n;i++){
	if(niz[i]>0){
	niz[i]=niz[i]*180/pi;
	stepen[i]=(int)niz[i];
	niz[i]=(niz[i]-stepen[i]);
	niz[i]*=60;
	min[i]=(int)niz[i];
	niz[i]=(niz[i]-min[i]);
	niz[i]*=60;
	sek[i]=(int)(niz[i]+0.5);
		if(sek[i]==60){
		min[i]++;
		sek[i]=0;
		}
		if(min[i]==60){
		stepen[i]++;
		min[i]=0; }
		}
		else{
	niz[i]=niz[i]*180/pi;
	stepen[i]=(int)niz[i];
	niz[i]=stepen[i]-niz[i];
	niz[i]*=60;
	min[i]=(int)niz[i];
	niz[i]=niz[i]-min[i];
	niz[i]*=60;
	sek[i]=(int)(niz[i]+0.5);
	if(sek[i]==60){
		min[i]++;
		sek[i]=0;
	}
	if(min[i]==60){
		stepen[i]--;
		min[i]=0;
	}
	}
	}
		for(i=0;i<n;i++){
		if(sek[i]>30){
		for(j=i;j<n-1;j++){
		stepen[j]=stepen[j+1];
		min[j]=min[j+1];
		sek[j]=sek[j+1];
		}
	n--;
	i--;
	}
}
printf(""Uglovi su:\n""); 
for(i=0;i<n;i++)
printf(""%g stepeni %g minuta %g sekundi\n"",stepen[i], min[i], sek[i]);

return 0;
}
","#include <stdio.h>
#define pi 3.1415926

int main() {
	int i,j,n;
	double step[500],min[500],sek[500],niz[500];

	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
    
	
	for(i=0; i<n; i++) {
	scanf(""%lf"", &niz[i]);
	}
	
	for(i=0; i<n; i++) {
	if (niz[i]>0){
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=niz[i]-step[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=(niz[i]-min[i]);
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	
		if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]++;
		min[i]=0; }
	
		}
		
	
	else {
	niz[i]=niz[i]*180/pi;
    step[i]=(int)niz[i];
	niz[i]=step[i]-niz[i];
	niz[i]=niz[i]*60;
	min[i]=(int)niz[i];
	niz[i]=niz[i]-min[i];
	niz[i]=niz[i]*60;
	sek[i]=(int)(niz[i]+0.5);
	
	if (sek[i]==60) {
		min[i]++;
		sek[i]=0; }
		if (min[i]==60) {
		step[i]--;
		min[i]=0; }
	
	
	}
	}
	

	for(i=0; i<n; i++) {
		if(sek[i]>30) {
			for (j=i; j<n-1; j++) {
			step[j]=step[j+1];	
			min[j]=min[j+1];
			sek[j]=sek[j+1];
			}
			
		n--;
		i--;
		}
	}
	
	printf(""Uglovi su:"");
	for(i=0; i<n; i++) 
    printf(""\n%g stepeni %g minuta %g sekundi"",step[i], min[i], sek[i]);
	
	return 0;
}
"
1535,98,98,0,72,A2016/Z3/Z2/student3301,A2016/Z3/Z2/student3567,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define brel 10
#define brel2 20
/* Funkcija ubaci */ 
void ubaci(int *niz,int velicina){
	int i,cifra,broj,broj2=0;
	for (i=velicina-1;i>=0;i--){    /* Pomjeranje clanova niza */ 
		*(niz+2*i)=*(niz+i);
	}
	for (i=0;i<velicina*2;i++){
		if (i%2==1){
			broj=*(niz+i-1);
			while (broj!=0){        /* Dodavanje clanova sabiranjem cifara prethodnog clana */ 
				cifra=broj%10;
				broj2+=cifra;
				broj/=10;
		    }
		    broj2=abs(broj2);
			*(niz+i)=broj2;
			broj2=0;
		}
	}
}

/* Funkcija izbaci */ 
/* Formiranje pretlji za prolazak po nizu i uporedivanje njegovih clanova sa Fibonaccijevim nizom, izbacivanje jednakih */
int izbaci(int *niz,int velicina){
	int i,j,m,prvi=0,drugi=1,slijedeci;
	for (i=0;i<velicina;i++){
		prvi=0;
		drugi=1;
		for (j=1;j<10000;j++){   
			if (j==1) slijedeci=j;                
			else {
				slijedeci=prvi+drugi;
				prvi=drugi;
				drugi=slijedeci;
			}
			if (*(niz+i)==slijedeci){
				for (m=i;m<velicina-1;m++){
						*(niz+m)=*(niz+m+1);
				}
				velicina--;
				i--;
				break;
			}
		}
	}
	return velicina;
}

int main() {
	int niz[20],i,n;
	
	/* Unos elemenata */ 
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0;i<10;i++){
		scanf(""%d"",&niz[i]);
	}
	
	/* Pozivanje funkcije ubaci */ 
	
	ubaci(niz,brel);
	
	/* Pozivanje funkcije izbaci */ 
		
	n=izbaci(niz,brel2);
	
	/* Ispis niza */
	printf (""Modificirani niz glasi: "");
	for (i=0;i<n;i++){
		if (i<(n-1)){
			printf (""%d, "",niz[i]);
	    }
	    else {
	    	printf (""%d. "",niz[i]);
	    }
	}
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define brel 10
#define brel2 20
void ubaci(int *p,int vel){
	int i,cifra,cifra1,cifra2=0;
	for (i=vel-1;i>=0;i--){
		*(p+2*i)=*(p+i);
	}
	for (i=0;i<vel*2;i++){
		if (i%2==1){
			cifra=*(p+i-1);
			while (cifra!=0){
				cifra1=cifra%10;
				cifra2+=cifra1;
				cifra/=10;
		    }
		    cifra2=abs(cifra2);
			*(p+i)=cifra2;
			cifra2=0;
		}
	}
}
int izbaci(int *p,int vel){
	int i,j,k,a=0,b=1,c;
	for (i=0;i<vel;i++){
		a=0;
		b=1;
		for (j=1;j<10000;j++){
			if (j==1) c=j;
			else {
				c=a+b;
				a=b;
				b=c;
			}
			if (*(p+i)==c){
				for (k=i;k<vel-1;k++){
						*(p+k)=*(p+k+1);
				}
				vel--;
				i--;
				break;
			}
		}
	}
	return vel;
}
 
int main() {
	int niz[20],i,g;
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0;i<10;i++){
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,brel);
	g=izbaci(niz,brel2);
	printf (""Modificirani niz glasi: "");
	for (i=0;i<g;i++){
		if (i<(g-1)){
			printf (""%d, "",niz[i]);
	    }
	    else {
	    	printf (""%d. "",niz[i]);
	    }
	}
 
	return 0;
}"
1537,97,97,0,48,A2016/Z1/Z4/student7735,A2016/Z1/Z4/student8598,"#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50){
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1){
		printf(""***"");
		return 0;
	}
	for(i=1;i<n;i++){
		for(j=1;j<i;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*"");
		if(i<2){
				for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
		if(i>=2){
		for(j=1;j<=2*i-3;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	}
		if(i==n){
			for(j=1;j<n;j++){
				printf("" "");
			}
			printf(""*"");
		for(j=1;j<=2*n-3;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50){
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1){
		printf(""***"");
		return 0;
	}
	for(i=1;i<n;i++){
		for(j=1;j<i;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*"");
		if(i<2){
				for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
		if(i>=2){
		for(j=1;j<=2*i-3;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	}
		if(i==n){
			for(j=1;j<n;j++){
				printf("" "");
			}
			printf(""*"");
		for(j=1;j<=2*n-3;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	return 0;
}
"
1543,30,30,0,24,A2016/Z4/Z2/student2351,A2016/Z4/Z2/student9188,"#include <stdio.h>

void sortiranje(int *sortiraj, int *index)
{
	int i=0, j, temp1, temp2;
	i=0;
	while(i<95)
	{
		j=0;
		while(j<95)
		{
			if(sortiraj[j]<sortiraj[i])
			{
				temp1=sortiraj[i];
				sortiraj[i]=sortiraj[j];
				sortiraj[j]=temp1;
				
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			
			if(sortiraj[i]==sortiraj[j] && index[i]<index[j])
			{
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			j++;
		}
		i++;
	}
}

void stvori(char *kljuc, int *sortiraj, int *index)
{
	int i;
	i=0;
	do
	{
		if(sortiraj[i]!=0) 
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	
	i=0;
	do{
		if(sortiraj[i]==0)
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	*kljuc='\0';
}

char *kodiraj (char *tekst, char *kljuc)
{
	char *p=tekst;
	char *q;
	int niz[95], sort[95], in[95];
	int i, br;
	
	i=0;
	while(i<95) 
	{
		niz[i]=0;
		i++;
	}
	do{
		q=p;
		br=0;
		while(*q!='\0')
		{
		if(*p==*q) br++;
		q++;
		}
		if(niz[*p-32]==0) {niz[*p-32]=br;}
		p++;
	}
	while(*p!='\0');
	
	i=0;
	while(i<95)
	{
		sort[i]=niz[i];
		in[i]=i;
		i++;
	}
	sortiranje(sort, in);
	stvori(kljuc, sort, in);
	p=tekst;
	q=kljuc;
	
	do{
		q=kljuc;
		br=0;
		while(*q!='\0')
		{
			if(*p==*q)
			{
				*p=126-br;
				break;
			}
			br++;
			q++;
		}
		p++;
	} while(*p!='\0');
	return tekst;
}

char *dekodiraj(char *tekst, char *kljuc)
{
	char *p=tekst;
	do
	{
	*p=kljuc[126-*p];
	p++;
	} while(*p!='\0');
	return tekst;
}

int main() {
	char primjer[]=""LLMLNLNMONM"";
	char sifra[100]="""";
	printf(""%s"", kodiraj(primjer, sifra));
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

char* kodiraj(char *tekst,char *tabela)
{
	char *pom=tekst;
	int i,j;
	char *temp=tekst;
	int br=0;
	int priv;
	int sort[95];
	int indexi[95];
	int niz[95];
     
     char *help=tabela;
		temp++;
	
	
	for(i=0;i<95;i++)
		niz[i]=0;
	
	
		while(*pom!='\0')
		{	
			temp=pom;
			br=0;
			
			while(*temp!='\0')
			{
				if(*pom==*temp)br++;
				temp++;
			}
			if(niz[*pom-32]==0)niz[*pom-32]=br;
			pom++;
		}
	   
	  	br=0;
		for(i=0;i<95;i++)
		{
			if(niz[i]!=0)
			{
				sort[br]=niz[i];
				indexi[br]=i;
				br++;
				
			}
		}
	
		for(i=0;i<br;i++)
			for(j=i;j<br;j++)
			{
				if(sort[i]<sort[j])
				{
					priv=sort[i];
					sort[i]=sort[j];
					sort[j]=priv;
					
					priv=indexi[i];
					indexi[i]=indexi[j];
					indexi[j]=priv;
				}
				 if(sort[i]==sort[j] && indexi[i]>indexi[j])
				{
					priv=indexi[i];
					indexi[i]=indexi[j];
					indexi[j]=priv;
				}
			}
			
			
		for(i=0;i<br;i++) 
		{
			
			*help=indexi[i]+32;
			help++;
		
		}
		   
	   for(i=0;i<95;i++)
	   {
	   		if(niz[i]==0) {*help=i+32;help++;}
	   }
	   *help='\0';
	   
	   help=tabela;
	   pom=tekst;
	  	
	  	
	  		while(*pom!='\0')
	  		{ 
	  			br=0;help=tabela;
	  				while(*help!='\0')
	  				{	
	  					if(*pom==*help){ *pom=126-br; break;}
	  					br++;
	  					help++;
	  				}
	  			pom++;
	  		}
	  	
	
   return tekst;
	
}

char *dekodiraj(char *tekst,char *tabela)
{
	char *pom=tekst;
	
	               
			while(*pom!='\0')
			{	
			
				*pom=tabela[126-*pom];
				pom++;
				
			}
			
		
		return tekst;
}

int main() {
	
    char tekst[] = ""Jeste li dobro kreirali sifrarnik?"";
    char sifrarnik[100] = """";
   
    kodiraj(tekst, sifrarnik);
    printf(""%s"", tekst);
    printf(""%s"", sifrarnik);

	return 0;
}
"
1546,48,48,0,9,A2016/Z2/Z1/student1476,A2016/Z2/Z1/student5236,"#include <stdio.h>
#include <math.h>
int main() {
	int n,C1,C2;
	int k=1;
	int S=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	n=fabs (n);
		while(n>=10){
		C1=n%10;
		C2=(n/10)%10;
		S+=fabs((C1-C2)*k);
		k*=10;
		n/=10;
    
	}
	printf(""%d"", S);
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
int main() {
	int x,c1,c2,n=1,rez=0;
	printf(""Unesite broj:"");
	scanf(""%d"",&x);
	
	if( x>0 && x<10 ){
		rez=0;
	}
	if(x<0){
		x=-x;
	}
	while(x>=10){
		
		c1=x%10;
		c2=(x/10)%10;
		rez+=abs(c1-c2)*n;
		n*=10;
		x/=10;
	}
    printf("" %d"",rez);
	return 0;
}
"
1553,81,81,0,54,A2016/Z4/Z2/student2908,A2016/Z4/Z2/student3557,"#include <stdio.h>

char *kodiraj(char *s,char *tablica){
	int maxi=0,i,j,brojaci[95]={0};
	char *x,*tab,*y;
	x=s;y=s;
	tab=tablica;
	while(*y!='\0'){
		for(i=0;i<95;i++)
			if(*y==i+32)brojaci[i]++;
		y++;
	}
	for(i=0;i<96;i++){
		for(j=0;j<95;j++)
			if(brojaci[j]>brojaci[maxi]) maxi=j;
		*tablica++=maxi+32;
		
		brojaci[maxi]=-1;
		maxi=0;
	}
	*tablica='\0';
	tablica=tab;
	while(*x!='\0'){
		while(*x!=*tab) tab++;
		*x=126-(tab-tablica);
		tab=tablica;
		x++;
	}
	return s;
}

char *dekodiraj(char *s,char *tablica){
	int i, j=-1;
	char *x=s, *tab=tablica;
	while(*x!='\0'){
		i=126-*x;
		for(j=0;j<i;j++) tab++;
		*x=*tab;
		tab=tablica;
		x++;
	}
	return s;
}

int main() {
	char tekst[] = ""Ovo cemo sifrirati 2 puta"";
    char sifrarnik[100] = """";
    char sifrarnik2[100] = """";
    int i;
    kodiraj(tekst, sifrarnik);
    printf(""%s\n"",tekst);
    for (i=0; i<10; i++) printf(""%c"",sifrarnik[i]);
    printf(""\n"");
    kodiraj(tekst, sifrarnik2);
    printf(""%s\n"",tekst);
    for (i=0; i<10; i++) printf(""%c"", sifrarnik2[i]);
    printf(""\n"");
    dekodiraj(tekst, sifrarnik2);
    printf(""%s\n"",tekst);
    dekodiraj(tekst, sifrarnik);
    printf(""%s"", tekst);
	return 0;
}
","#include <stdio.h>

char *kodiraj (char *s, char *sifre) {
	int i=0, j=0, max=0;
	int brojac[95]= {0};
	char *p, *q, *t;
	p = s;
	q = s;
	t = sifre;
	
	while(*q != '\0') {
		
		for(i=0; i<95; i++) {
			
			if(*q==i+32) brojac[i]++;
		}
		q++;
	}
	
	for (i=0; i<96; i++) {
		for(j=0; j<95; j++) {
			
			if (brojac[j] > brojac[max])
			max = j;
		}
		
		*sifre++ = 32+max;
		brojac[max] = -1;
		max = 0;
	}
	*sifre = '\0';
	sifre = t;
	
	while (*p!='\0') {
		
		while (*p != *t)
		t++;
		*p=126 - (t-sifre);
	t = sifre; 
		p++;

	}
	
	return s;
} 

char *dekodiraj (char* s, char* sifre) {
	int i, d;
	char *p = s;
	char *t = sifre;
	
	while ( *p != '\0') {
		d= 126 - *p;
		
		for (i=0; i<d; i++) t++;
		
			*p = *t;
			t = sifre;
			p++; 
	}
	return s;
}

int main() {

	printf(""Zadaca 4, Zadatak 2"");
	return 0;
}


"
1557,53,53,0,24,A2016/Z2/Z2/student6594,A2016/Z2/Z2/student5659,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define pi 3.1415926
int main() {
	int i,n,j;
	double min[500],sek[500],stepen[500],niz[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	for(i=0;i<n;i++){
	scanf (""%lf"", &niz[i]);
	}
	for(i=0;i<n;i++){
	if(niz[i]>0){
	niz[i]=niz[i]*180/pi;
	stepen[i]=(int)niz[i];
	niz[i]=(niz[i]-stepen[i]);
	niz[i]*=60;
	min[i]=(int)niz[i];
	niz[i]=(niz[i]-min[i]);
	niz[i]*=60;
	sek[i]=(int)(niz[i]+0.5);
		if(sek[i]==60){
		min[i]++;
		sek[i]=0;
		}
		if(min[i]==60){
		stepen[i]++;
		min[i]=0; }
		}
		else{
	niz[i]=niz[i]*180/pi;
	stepen[i]=(int)niz[i];
	niz[i]=stepen[i]-niz[i];
	niz[i]*=60;
	min[i]=(int)niz[i];
	niz[i]=niz[i]-min[i];
	niz[i]*=60;
	sek[i]=(int)(niz[i]+0.5);
	if(sek[i]==60){
		min[i]++;
		sek[i]=0;
	}
	if(min[i]==60){
		stepen[i]--;
		min[i]=0;
	}
	}
	}
		for(i=0;i<n;i++){
		if(sek[i]>30){
		for(j=i;j<n-1;j++){
		stepen[j]=stepen[j+1];
		min[j]=min[j+1];
		sek[j]=sek[j+1];
		}
	n--;
	i--;
	}
}
printf(""Uglovi su:\n""); 
for(i=0;i<n;i++)
printf(""%g stepeni %g minuta %g sekundi\n"",stepen[i], min[i], sek[i]);

return 0;
}
","#include <stdio.h>
#include<math.h>
#define pi 3.1415926
#define m 0.1

int main() {
	int i,j,n;
	double niz[500],sec[500],step[500],min[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	for(i=0;i<n;i++) {
		scanf(""%lf"",&niz[i]);
	}
	for(i=0;i<n;i++){
	
		niz[i]=niz[i]*(180/pi);
		step[i]=(int)niz[i];
		min[i]=(niz[i]-(int)niz[i])*60;
		sec[i]=(min[i]-(int)min[i])*60;
		min[i]=(int)min[i];
		if(niz[i]<0) {
			sec[i]=-(int)(sec[i]-0.5);
			min[i]=-min[i];
		}
		if(min[i]==-0) min[i]=0;
		sec[i]=(int)(sec[i]+0.5);
		
	}
	for(i=0;i<n;i++){
		if(sec[i]>30 || sec[i]<-30) {
			for(j=i;j<n;j++){
			sec[j]=sec[j+1];
			min[j]=min[j+1];
			step[j]=step[j+1];
		}
		n--;
		i--;
		}
	}
	printf(""Uglovi su: \n"");
	for(i=0;i<n;i++) {
		printf(""%g stepeni %g minuta %g sekundi \n"",step[i],min[i],sec[i]);
		}
	return 0;
}
"
1563,77,77,0,67,A2016/Z3/Z2/student8598,A2016/Z3/Z2/student4934,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
void ubaci(int *niz, int vel)
{       
        int *p,*q,i,suma,a,b;
        p=q=niz;
        for(i=vel-1; i>=0; i--)
        {
        *(q+(2*i))=*(p+i);
        }
        p=niz;
        for(i=0; i<2*vel; i++)
        {
            suma=0;
            a=*(p+i);
            a=abs(a);
            while(a!=0)
            {
                b=a%10;
                a/=10;
                suma+=b;
            }
            *(p+i+1)=suma;
            i++;
        }
    }
    int fibniz(int n)
    {   
                int x,y,z;
        if(n<0)return 0;
        if(n==1)return 1;
        x=1;
        y=1;
        while(1)
        {
            z=x+y;
            if(n==z)return 1;
            else if(z>n)return 0;
            x=y;
            y=z;
        }
    }
    int izbaci(int *niz, int vel)
    {
        int i,a,j,*p;
        p=niz;
        for(i=0; i<vel; i++)   
        {
            a=fibniz(*(p+i));
            if(a==1)    
            {
                for(j=i; j<vel-1; j++)  
                {
                    *(p+j)=*(p+j+1);
                }
                vel--;
                i--;
            }
        }
        return vel;
    }
    int main()  {
        int niz[20],i,vel=10,a;
        printf(""Unesite niz od 10 brojeva:"");
        for(i=0; i<vel; i++)
        {
            scanf(""%d"", &niz[i]);
        }
        ubaci(niz,vel);
        a=izbaci(niz,2*vel);
         printf("" Modificirani niz glasi: "");
        for(i=0; i<a-1; i++)
        {
            printf(""%d, "", niz[i]);
        }
            printf(""%d."", niz[i]);
        return 0;
    }

        
        
        
        
        
        
        
        ","#include <stdio.h>
#include <math.h>
#include <stdlib.h>

    void ubaci(int *niz, int velicina)   {
        
        int *o;
        int *s;
        int i;
        int zbir;
        int x;
        int y;
        o=s=niz;
        /*postavljamo pokazivac na zadnje mjesto trenutnog niza*/ 
        for(i=velicina-1; i>=0; i--){
        *(s+(2*i))=*(o+i);
        
        }
        o=niz;
        /*racunamo sumu pomocu apsolutne vrijednosti*/
        for(i=0; i<2*velicina; i++){
            zbir=0;
            x=*(o+i);
            x=abs(x);
            do {
                y=x%10;
                x=x/10;
                zbir=zbir+y;
                /*u sljedeci clan upisujemo sumu*/
            } while (x!=0);
            *(o+1+i)=zbir;
            i++;
        }
    }
    /*trazimo Fibonacijev niz*/
    int Fibonacijev_niz(int m){
        int a;
        int b;
        int c;
        if(m<0)return 0;
        if(m==1)return 1;
        a=1;
        b=1;
        while(1){
            c=a+b;
            if(m==c)return 1;
            else if(c>m)return 0;
            a=b;
            b=c;
        }
    }
    /*izbacujemo brojeve Fibonacijevog niza iz ovog niza*/
    int izbaci(int *niz, int velicina)   {
        
        int i;
        int x;
        int j;
        int *o;
        o=niz;
        for(i=0; i<velicina; i++)    {
            x=Fibonacijev_niz(*(o+i));
          
            if(x==1){
                for(j=i; j<velicina-1; j++)  {
                    *(o+j)=*(o+j+1);
                }
                
                velicina--;
                i--;
            }
        }
        
        return velicina;
    }
    
    int main()  {
        
        int niz[20],i,velicina=10,x;
        printf(""Unesite niz od 10 brojeva:"");
        for(i=0; i<velicina; i++)    {
            scanf(""%d"", &niz[i]);
        }
        /*niz koji izbacujmo sadrzi i cifru koju
        unesemo i zbir cifara koje unesemo zato je 
        duzina niza je duplo veca od pocetnog niza*/
        ubaci(niz,velicina);
        x=izbaci(niz,2*velicina);    
        
        printf("" Modificirani niz glasi: "");
        for(i=0; i<x-1; i++)  {
            printf(""%d, "", niz[i]);
            
        }
            printf(""%d."", niz[i]);
        
        return 0;
        
    }
"
1569,64,64,0,13,A2016/Z2/Z1/student5904,A2016/Z2/Z1/student2806,"#include <stdio.h>
#include <stdlib.h>

int main() {
	
	int broj, cifra, prethodna_cifra, znamenka, rezultat=0, a=1;
	
	printf(""Unesite broj: "");
	scanf(""%d"", &broj);
	
	broj = abs(broj);
	
	while (broj>10) {
		cifra = broj%10;
		broj /= 10;
		prethodna_cifra = broj%10;
		
		znamenka = abs(cifra-prethodna_cifra);
		
		rezultat = rezultat + a*znamenka;
		
		a*=10;
	}
	
	printf(""%d"", rezultat);
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

int main() {
    int broj, cifra1, cifra2, k=1, noviBroj=0;
   	printf (""Unesite broj: "");
	scanf (""%d"", &broj);
	broj=abs(broj);
	while (broj>9) {
	    cifra1=broj%10;
	    broj/=10;
	    cifra2=broj%10;
	    noviBroj = noviBroj+abs(cifra2-cifra1)*k;
	    k*=10;
	}
	printf(""%d"", noviBroj);
	return 0;
}
"
1574,82,82,0,97,A2016/Z4/Z2/student2553,A2016/Z4/Z2/student8540,"#include <stdio.h>
char* kodiraj(char *string,char tablica[96]){
	int znakovi[97]={0},i,max,*p,kraj=0,pozicija=97;
	char *temp=string,*temptab=tablica;
	p=znakovi;
	while(*string!='\0'){
		znakovi[*string-32]++;
		string++;
	}
	while(kraj==0){
		
		max=0;
		kraj=1;
		for(i=0;i<96;i++){
			if(znakovi[i]>max){max=znakovi[i];  pozicija=i;}
			
			if(max!=0){ kraj=0;}
		}
		znakovi[pozicija]=-1;
		if(max!=0){
			*tablica=(char)(pozicija+32);
			tablica++;
		}
	}
	p=znakovi;
	for(i=0;i<95;i++){
		if(*p==0){
			*tablica=(char)(i+32);
			tablica++;
		}
		p++;
	}
	*tablica='\0';
	tablica=temptab;
	string=temp;
	pozicija=0;
	
	while(*string!='\0'){
		tablica=temptab;
		pozicija=0;
		while(*string!=*tablica && *tablica!='\0'){tablica++; pozicija++;}
		*string=(char)(126-pozicija);
		string++;
	}
	string=temp;
	return string;
}
char* dekodiraj(char *string,char *tablica){
	char *temp=string;
	char zamijeni=*string;
	int max=0,i;
	int tabela[96]={-1};
	int checked[96]={0};
	int x=1;
	
	
	
	while(*string!='\0'){
		checked[*string-32]++;
		string++;
	}
	max=0;
	do{
		max=0;
		for(i=0;i<96;i++){
			if(checked[i]>=max)
				max=checked[i];
		}
		for(i=95;i>=0;i--){
			if(checked[i]==max){
				zamijeni=i+32;
				break;
			}
		}
		tabela[zamijeni-32]=*tablica;
		checked[zamijeni-32]=0;
		tablica++;
		x=1;
		for(i=0;i<96;i++){
			if(checked[i]!=0)x=0;
		}
	}while(x==0);

	string=temp;
	while(*string!='\0'){
		*string=tabela[*string-32];
		string++;
	}
	

	
	return temp;
}
int main() {
	char string[]="""";
	char kodovoi[100]="""";
	
	kodiraj(string,kodovoi);
	printf(""%s"",string);
	printf(""\n"");
	printf(""%s\n"",kodovoi);
	
	dekodiraj(string,kodovoi);
	printf(""%s"",string);
	return 0;
}
","#include <stdio.h>
char* kodiraj(char* s,char tablica[96]){
int znakovi[97]={0},*d,end=0,poz=97, max,i=0;
char* temp=s;
char* tmptab=tablica;
d=znakovi;
while(*s!='\0'){
	znakovi[*s-32]++;
	s++;
}
while(end==0){
	max=0;
	end=1;
	for(i=0;i<96;i++){
		if(znakovi[i]>max){max=znakovi[i]; 
		poz=i;}
		if(max!=0){
		end=0;}
		} 
		znakovi[poz]=-1;
		if(max!=0){
			*tablica=(char)(poz+32);
			tablica++;
		}
	}
d=znakovi;
for(i=0;i<95;i++){
	if(*d==0){
		*tablica=(char)(i+32);
			tablica++;
		
	}
	d++;
}
*tablica='\0';
tablica=tmptab;
s=temp;
poz=0;

while(*s!='\0'){
	tablica=tmptab;
	poz=0;
	while(*s != *tablica  && *tablica!='\0'){
	tablica++;
	poz++;}
	*s=(char)(126-poz);
	s++;
}
s=temp;
return s;
	
}

char* dekodiraj(char*s, char* tablica){
	char* temp=s;
	char c=*s;
	int i, max=0, a=1; 
	int cd[96]={0}, tbl[96]={-1};
	
	while(*s!='\0'){
		cd[*s-32]++;
		s++;
	}
	max=0;
	do{
		max=0;
		for(i=0;i<96;i++){
			if(cd[i]>=max){
				max=cd[i];
			}
		}for(i=95;i>=0;i--){
			if(cd[i]==max){
				c=i+32;
				break;
			}
		}
		tbl[c-32]=*tablica;
		cd[c-32]=0;
		tablica++;
		a=1;
		for(i=0;i<96;i++){
			if(cd[i]!=0)a=0;
		}
		
	}while (a==0);
	s=temp;
	while(*s!='\0'){
		*s=tbl[*s-32];
		s++;
	}
	return temp;
}
int main() {
	char t[]=""LLMLNLNMONM"";
	char b[100]="""";
	
	kodiraj(t, b);
	printf(""%s"", t);
	printf(""\n"");
	printf(""%s\n"", b);
	
	dekodiraj(t, b);
	printf(""%s"", t);
	
	return 0;
}"
1578,97,97,0,27,A2016/Z2/Z2/student8580,A2016/Z2/Z2/student4852,"#include <stdio.h>
#include <stdlib.h>
#include<math.h>
#define Pi 3.1415926
int main() {
	double Uglovi[500],Sd,md;
	int u,i,j,S,m,s;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &i);
	u=0;
	do{
	 scanf(""%lf"", &Uglovi[u]);
	 u++;
	}while(u<i);
	printf(""Uglovi su:\n"");
	for(j=0;j<i;j++){
		S=(180./Pi)*Uglovi[j];
		Sd=(180./Pi)*Uglovi[j];
		md=fabs((Sd-S)*60);
		m=abs((Sd-S)*60);
		s=(md-m)*60+0.5;
		if(s==60&&m>=59){s=0;m=0;
		if(S<0)S--;if(S>0)S++;}
			if(s==60){
			m++;s=0;
		}
		if(s>30&&s<60){
			for(u=j;u<i;u++)
			Uglovi[u]=Uglovi[u+1];
			i--;j--;continue;}
			printf(""%d stepeni %d minuta %d sekundi\n"",S,m,s);
			}
return 0;}","#include <stdio.h>
#include <stdlib.h>
#include<math.h>
#define Pi 3.1415926
int main() {
	double Uglovi[500],Sd,md;
	int u,i,j,S,m,s;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &i);
	u=0;
	do{
	 scanf(""%lf"", &Uglovi[u]);
	 u++;
	}while(u<i);
	printf(""Uglovi su:\n"");
	for(j=0;j<i;j++){
		S=(180./Pi)*Uglovi[j];
		Sd=(180./Pi)*Uglovi[j];
		md=fabs((Sd-S)*60);
		m=abs((Sd-S)*60);
		s=(md-m)*60+0.5;
		if(s==60&&m>=59){s=0;m=0;
		if(S<0)S--;if(S>0)S++;}
			if(s==60){
			m++;s=0;
		}
		if(s>30&&s<60){
			for(u=j;u<i;u++)
			Uglovi[u]=Uglovi[u+1];
			i--;j--;continue;}
			printf(""%d stepeni %d minuta %d sekundi\n"",S,m,s);
			}
return 0;}"
1590,87,87,0,41,A2016/Z2/Z3/student8329,A2016/Z2/Z3/student5621,"#include <stdio.h>

int main() {
	char mat[20][20];
	int i,j,brtac;
	int br;
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&brtac);
	while((brtac<1)||(brtac>10))
	{
		printf(""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&brtac);
		
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			mat[i][j]=' ';
			
		}
	}
	for(br=0;br<brtac;br++)
	{
		printf(""Unesite %d. tacku: "",br+1);
		scanf(""%d %d"",&i,&j);
		while((i<0)||(i>19)||(j<0)||(j>19))
		{
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "",br+1);
			scanf(""%d %d"",&i,&j);
		}
		mat[i][j]='*';
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			printf(""%c"",mat[j][i]);	
			
		}
		printf(""\n"");
	}
	

	return 0;
	}

","#include <stdio.h>

int main() {
	int bt,n,i,j;
	int p,d;
	char niz[20][20];
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &bt);
	while (bt<1 || bt>10){
		printf(""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &bt);
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			niz[i][j]=' ';
		}
	}
	
	for(i=0;i<bt;i++){
		printf(""Unesite %d. tacku: "",i+1);
		scanf(""%d %d"",&p,&d);
		while(p<0 || p>19 || d<0 || d>19){
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "",i+1);
			scanf(""%d %d"",&p,&d);
		}
		niz[d][p]='*';
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			printf(""%c"",niz[i][j]);
		}
		printf(""\n"");
	}
	
	return 0;
}
"
1592,34,34,0,6,A2016/Z2/Z1/student4770,A2016/Z2/Z1/student5621,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main() {
	int k=0,b=0,st=0,nd=0,z=0,suma=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &b);
	b=abs(b);
	if(b<10){
		printf("""");
		
	}do{
		st=b%10;
		b/=10;
		if(b!=0){
			nd=b%10;
			suma=abs(nd-st);
			z=z+suma*pow(10,k);
			k++;
		}
		
	}while(b!=0);
	printf(""%d"", z);
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main() {
	int a,b,p,p1=0,suma,n=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &p);
	p=abs(p);
	if (p<10){
		p1=0;
		printf(""%d"", p1);
	} else {
	n=1;
	while(p>=10){
		a=p%10;
		p/=10;
		if(p!=0){
		b=p%10;
		suma=abs(b-a);
		p1=p1+suma*pow(10,n-1);
		n++;}
	}
	printf(""%d"", p1);
	}
	
	return 0;
}"
1594,86,86,0,109,A2016/Z4/Z1/student2464,A2016/Z4/Z1/student7457,"#include <stdio.h>

void izbaci(char* s, int duz)
{
    while(*(s+duz))
    {
        *s=*(s+duz);
        s++;
    }
    *s=*(s+duz);
}

char* izbaci_najcescu(char* s)
{
	char *maxkraj=s, *poc, *kraj, *p=s, *t, *spoc, *skraj, *tpoc, *q1, *q2;
	char ch1, ch2;
	int brmax=0, maxduz=0, br=0, ista, bslova, duz1, duz2, bilanerijec;
	if(*p=='\0') return s;
	while(*p!='\0')
	{
	    while((*p<'A' || (*p>'Z' && *p<'a') || *p>'z') && *(p+1)!='\0') p++;
		if(*p!='\0')
		{
			// Odredjujemo pocetak i kraj rijeci do koje smo dosli
			poc=p;
			kraj=p;
			duz1=1;
			while(((*(kraj+1)>='A' && *(kraj+1)<='Z') || (*(kraj+1)>='a' && *(kraj+1)<='z')) && *(kraj+1)!='\0')
			{
				duz1++;
				kraj++;
			}
			br=1;
			t=kraj+1;
			while(*t!='\0')
			{
				// Odredjujemo pocetak i kraj slijedece rijeci
				spoc=t;
				while((*spoc<'A' || (*spoc>'Z' && *spoc<'a') || *spoc>'z') && *(spoc+1)!='\0') spoc++;
				skraj=spoc;
				duz2=1;
				while(((*(skraj+1)>='A' && *(skraj+1)<='Z') || (*(skraj+1)>='a' && *(skraj+1)<='z')) && *(skraj+1)!='\0') 
				{
					duz2++;
					skraj++;
				}
				
				// Provjera dali je to ista rijec kao pocetna
				
				ista=1;
				bslova=0;
				
				// Posto ne mozemo koristiti pointer poc jer bi tada izgubili pointer na prvo slovo rijeci,
				// pravimo novi pointer
				tpoc=poc;
				
				if(duz1!=duz2) ista=0;
				else
				while(bslova<duz2)
				{
					// Posto se ne pravi razlika izmedju velikih i malih slova moramo svaki put ovo uraditi
					
					if(*tpoc>='A' && *tpoc<='Z') ch1=(*tpoc)+('a'-'A'); else ch1=*tpoc;
					if(*spoc>='A' && *spoc<='Z') ch2=(*spoc)+('a'-'A'); else ch2=*spoc;
					if(ch1!=ch2) ista=0;
					tpoc++;
					spoc++;
					bslova++;
				}
				
				if(ista) br++;
				t=skraj+1;
			}
			if (br>brmax)
			{
				brmax=br;
				maxkraj=kraj;
				maxduz=duz1;
			}
		}
		p=kraj+1;;
	}
	
	// Izbacivanje najcesce rijeci
	
	p=t-1;
	
	while(p>=s)
	{
		bilanerijec=0;
		if((*(p+1)<'A' || (*(p+1)>'Z' && *(p+1)<'a') || *(p+1)>'z') || *(p+1)=='\0') bilanerijec=1;
		if(*p>='A' && *p<='Z') ch1=(*p)+('a'-'A'); else ch1=*p;
		if(*maxkraj>='A' && *maxkraj<='Z') ch2=(*maxkraj)+('a'-'A'); else ch2=*maxkraj;
		if(ch1==ch2 && bilanerijec)
		{
			q2=p;
			q1=maxkraj;
			duz2=0;
			ista=1;
			while(q2>=s && ((*q2>='A' && *q2<='Z') || (*q2>='a' && *q2<='z')))
			{
				if(q1>=s)
				{
					if(*q1>='A' && *q1<='Z') ch1=(*q1)+('a'-'A'); else ch1=*q1;
					if(*q1>='A' && *q1<='Z') ch2=(*q1)+('a'-'A'); else ch2=*q1;
					if(ch1!=ch2) ista=0;
				}
				duz2++;
				q2--;
				q1--;
			}
			q2++;
			if(maxduz!=duz2) ista=0;
			if(ista)
			{
				izbaci(q2, duz2);
			}
		}
		p--;
	}
	return s;
}

int main() {
	char s[300]="" Koristio sam auto-stop da dodjem do znaka stop ali prije stopa sam otvorio dekstop kompjutera stop"";
	printf(""%s"", izbaci_najcescu(s));
	return 0;
}
","#include <stdio.h>

//funkcija koja izbacuje rijec iz stringa 

void izbacivanje(char* str1ng, int vel) {
	while(*(str1ng+vel)) {
		*str1ng=*(str1ng+vel);
		str1ng++;
	}
	*str1ng=*(str1ng+vel);
}

char* izbaci_najcescu(char* string) {
	
	char *max = string, *p = string, *pocetak, *kraj, *temp, *sljedeciPocetak, *sljedeciKraj, *temp1, *p2, *p3;
	int vel1, BrojRijeci=0, vel2, jednaka, vel3, maxBrojRijeci=0, maxVelicina=0, znak;
	char znak1,znak2;
	
	
	if (*p == '\0') return string;
	while(*p != '\0') {
		while((*p < 'A' || (*p > 'Z' && *p < 'a') || *p > 'z') && *(p+1) != '\0') p++;
			if(*p != '\0') {
				//Odredivanje prvog i posljednjeg slova trenutne rijeci
				pocetak = p;
				kraj = p;
				vel1 = 1;
				while(((*(kraj+1) >= 'A' && *(kraj+1) <= 'Z') || (*(kraj+1) >= 'a' && *(kraj+1) <= 'z')) && *(kraj+1) != '\0') {
					vel1++;
					kraj++;
				}
				BrojRijeci=1;
				temp=kraj+1;
				
				while (*temp != '\0') {
					//Odredivanje prvog i posljednjeg slova sljedece rijeci
					sljedeciPocetak=temp;
					
					while ((*sljedeciPocetak < 'A' || (*sljedeciPocetak > 'Z' && *sljedeciPocetak < 'a') || *sljedeciPocetak > 'z') && *(sljedeciPocetak+1) != '\0') sljedeciPocetak++;
					sljedeciKraj = sljedeciPocetak;
					vel2=1;
					
					while(((*(sljedeciKraj+1) >= 'A' && *(sljedeciKraj+1) <= 'Z') || (*(sljedeciKraj+1) >= 'a' && *(sljedeciKraj+1) <= 'z')) && *(sljedeciKraj+1) != '\0') {
						vel2++;
						sljedeciKraj++;					
					}					
					jednaka=1; vel3=0;
					
					temp1=pocetak;
					
					if (vel1 != vel2 ) jednaka=0;
					else 
					while (vel3 < vel2) {
						
						if(*temp1 >= 'A' && *temp1 <= 'Z') znak1=(*temp1) + ('a' - 'A');
						else znak1=*temp1;
						
						if(*sljedeciPocetak >= 'A' && *sljedeciPocetak <= 'Z') znak2=(*sljedeciPocetak) + ('a' - 'A');
						else znak2=*sljedeciPocetak;
						
						if(znak1 != znak2) jednaka=0;
						
						temp1++; sljedeciPocetak++; vel3++;
						
					}
					
					if(jednaka) BrojRijeci++;
					temp=sljedeciKraj+1;
					
				}
				
				if(BrojRijeci>maxBrojRijeci ) {
				maxBrojRijeci=BrojRijeci;
				max=kraj;
				maxVelicina=vel1;
				}
			}
			p=kraj+1;
	}
	//izbacivanje najcesce rijeci
	p=temp-1;
	while (p>=string) {
		znak=0;
		if((*(p+1) < 'A' || (*(p+1)>'Z' && *(p+1)<'a') || *(p+1)>'z') || *(p+1)=='\0') znak=1;
		
		if(*p>='A' && *p<='Z') znak1=(*p)+('a'-'A'); 
		else znak1=*p;
		
		if(*max >= 'A' && *max <='Z') znak2=(*max)+('a'-'A'); else znak2=*max;
		
		
		
		if(znak1==znak2 && znak){
			p3=p;
			p2=max;
			vel2=0;
			jednaka=1;
			
			while(p3>=string && (( *p3>='A' && *p3  <= 'Z') || (*p3>= 'a' && *p3 <= 'z'))) {
				if(p2>=string) {
					if(*p2>='A' && *p2<= 'Z') znak1=(*p2)+('a'-'A'); 
					else znak1=*p2;
					if(*p2>='A' && *p2<= 'Z') znak2=(*p2)+('a'-'A'); 
					else znak2=*p2;
					if(znak1!=znak2) jednaka=0;
					
				}
				vel2++;
				p3--;
				p2--;
			}
			p3++;
			if(maxVelicina!=vel2) jednaka=0;
			if(jednaka==1) {
				izbacivanje(p3,vel2);
			}
		}
		p--;
	}
	return string;
}

int main() {
	char str1ng[400]="" Koristio sam auto-stop da dodjem do znaka stop ali prije stopa sam otvorio dekstop kompjutera stop"";
	printf(""%s"", izbaci_najcescu(str1ng));
	return 0;
	
}"
1612,55,55,0,24,A2016/Z1/Z3/student6776,A2016/Z1/Z3/student5621,"#include <stdio.h>

int main() {
	float B=0,S=0,C=0,P=0,V=0,pB=0.0,pS=0.0,pC=0.0,pP=0.0,pV=0.0,ukupno;
	char boja;
	printf(""Unesite vozila: "");
	do {
			scanf(""%c"", &boja);
			while(boja=='\n'){
					scanf(""%c"", &boja);
			}
			if((boja=='b')||(boja=='B')) {B++; continue;}
			if((boja=='s')||(boja=='S')) {S++; continue;}
			if((boja=='c')||(boja=='C')) {C++; continue;}
			if((boja=='p')||(boja=='P')) {P++; continue;}
			if((boja=='v')||(boja=='V')) {V++; continue;}
			if((boja!='b') && (boja!='B') && (boja!='s') && (boja!='S') && (boja!='c') && (boja!='C') && (boja!='p') && (boja!='P') && (boja!='v') && (boja!='V') && (boja!='k') && (boja!='K')){
					printf(""Neispravan unos\n"");
					continue;
			}
	} while ((boja!='k') && (boja!='K'));
	ukupno=B+S+C+P+V;
	pB=B*100/ukupno;
	pS=S*100/ukupno;
	pC=C*100/ukupno;
	pP=P*100/ukupno;
	pV=V*100/ukupno;
		printf(""Ukupno evidentirano %g vozila. \n"", ukupno);
	if(ukupno==0){printf(""Najpopularnija boja je crna (0.00%%)."");
		return 0;
	}
	if(C>=B && C>=S && C>=P && C>=V){
		printf(""Najpopularnija boja je crna (%.2f%%)."",pC);
		return 0;}
	if(B>=S && B>=C && B>=P && B>=V){
		printf(""Najpopularnija boja je bijela (%.2f%%)."",pB);
		return 0;}
	if(S>=B && S>=C && S>=P && S>=V){
		printf(""Najpopularnija boja je siva (%.2f%%)."",pS);
		return 0;}
	if(P>=B && P>=S && P>=C && P>=V){
		printf(""Najpopularnija boja je plava (%.2f%%)."",pP);
		return 0;}
	if(V>=B && V>=S && V>=C && V>=P){
		printf(""Najpopularnija boja je crvena (%.2f%%)."",pV);
		return 0;}
	
	
	return 0;
}
","#include <stdio.h>

int main() {
	float C=0,B=0,S=0,V=0,P=0,cp=0.0,bp=0.0,sp=0.0,vp=0.0,pp=0.0,Uv=0;
	char unos;
	printf(""Unesite vozila: "");
	do{
		scanf(""%c"",&unos);
		if((unos=='c')||(unos=='C')){C++; }
		else if ((unos=='b')||(unos=='B')){B++; }
		else if ((unos=='s')||(unos=='S')){S++; }
		else if ((unos=='v')||(unos=='V')){V++; }
		else if ((unos=='p')||(unos=='P')){P++; }
		else if ((unos!='k')&&(unos!='K')){printf(""Neispravan unos\n"");}
		} while ((unos!='k')&&(unos!='K'));
		Uv=C+B+S+V+P;
		cp=(C/Uv)*100;
		bp=(B/Uv)*100;
		sp=(S/Uv)*100;
		vp=(V/Uv)*100;
		pp=(P/Uv)*100;
		printf(""Ukupno evidentirano %g vozila.\n"",Uv);
		if(Uv==0){
			printf(""Najpopularnija boja je crna (0.00%%)."");
			return 0;}
		if((C>=B)&&(C>=S)&&(C>=V)&&(C>=P)){
			printf(""Najpopularnija boja je crna (%.2f%%)."",cp);
			return 0;}
		if((B>=C)&&(B>=S)&&(B>=V)&&(B>=P)){
			printf(""Najpopularnija boja je bijela (%.2f%%)."",bp);
			return 0;}
		if((S>=C)&&(S>=B)&&(S>=V)&&(S>=P)){
			printf(""Najpopularnija boja je siva (%.2f%%)."",sp);
			return 0;}
		if((V>=C)&&(V>=B)&&(V>=S)&&(V>=P)){
			printf(""Najpopularnija boja je crvena (%.2f%%)."",vp);
			return 0;}
		if((P>=C)&&(P>=B)&&(P>=S)&&(P>=V)){
			printf(""Najpopularnija boja je plava (%.2f%%)."",pp);
			return 0;}
		return 0;

}
"
1614,88,88,0,84,A2016/Z3/Z3/student4554,A2016/Z3/Z3/student8419,"#include <stdio.h>
int main() 
{
	int N, M;
	int m[100][100];
	int l, j, i, f, r, kol;
	int ind1=0, ind2=0;
	
	do 
	{
		printf (""Unesite brojeve M i N: "");
		scanf (""%d %d"", &M, &N);
		if ( M < 1 || N < 1 || M > 200 || N > 200 ) 
		{
		   printf(""Brojevi nisu u trazenom opsegu.\n"");
		}
		
	} while ( M < 1 || N < 1 || M > 200 || N >200 );
	      printf(""Unesite elemente matrice: "");
	for ( i=0; i<M; i++ ) {
		for ( j=0; j<N; j++ ) {
			scanf (""%d"", &m[i][j]);
		}
	}
	for ( i=0; i<M-1; i++ ) {
		if (ind1 == 1)
		   i--;
		for ( f=i+1; f<M; f++ ) {
			kol = 0;
			while (kol < N) 
			{
				if (m[i][kol]==m[f][kol])
				{
				   ind1 = 1;
				}
				else {
					ind1 = 0;
					break;
				}
			    kol++;
		    }
	    if (ind1 == 1) {
		    for ( j=f; j<M-1; j++ ) {
			    for ( l=0; l<N; l++ ) {
				    m[j][l]=m[j+1][l];
			    }
		    }
		    M--;
		    f--;
	    }
	    }
	 }
     for ( i=0; i<N-1; i++ ) {
    	if (ind2 == 1)
    	{
    	   i--;
    	}
    	for ( f=i+1; f<N; f++ ) {
    		r = 0;
    		while (r < M) {
    			if (m[r][i]==m[r][f])
    			{
    			   ind2 = 1;
    			}
    			else {
    				ind2 = 0;
    				break;
    			}
    			r++;
    		}
    	if(ind2 == 1) {
    		for ( j=f; j<N; j++ ) {
    			for (l=0; l<M; l++) {
    			m[l][j]=m[l][j+1];
    		}
    	}
    	N--;
    	f--;
    	}
    	}
    }
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for ( i=0; i<M; i++ ) {
		for ( j=0; j<N; j++ )
		    printf(""%5d"", m[i][j]);
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int matrica[100][100],m,n,i,j,k,l,p,c,r,s;
	p=0;
	s=0;
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"",&m,&n);
		if(m<1 || m>200 || n<1 || n>200) 
		printf(""Brojevi nisu u trazenom opsegu.\n"");
	} while(m<1 || m>200 || n<1 || n>200);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++)
		scanf(""%d"",&matrica[i][j]);
	}
	
	for(i=0;i<m;i++){
		if(p==1)
		i--;
		for(k=i+1;k<m;k++){
			c=0;                                                  /*c=kolona, r=red*/
			while(c<n){
				if(matrica[i][c]==matrica[k][c]) p=1;
				else {
					p=0;
					break;
				}
				c++;
			}
			if(p==1){
				for(j=k;j<m-1;j++){
					for(l=0;l<n;l++) matrica[j][l]=matrica[j+1][l];
				}
			m--;
			k--;
			}
		}
	}
	
	for(i=0;i<n;i++){
		if(s==1)
		i--;
		for(k=i+1;k<n;k++){
			r=0;
			while(r<m){
				if(matrica[r][i]==matrica[r][k]) s=1;
				else{
					s=0;
					break;
				}
				r++;
			}
			if(s==1){
				for(j=k;j<n;j++){
					for(l=0;l<m;l++) 
					matrica[l][j]==matrica[l][j+1];
				}
				n--;
				k--;
			}
		}
	}
	
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++)
		printf(""%5d"",matrica[i][j]);
		printf(""\n"");
	}
	
	return 0;
}
"
1616,25,25,0,37,A2016/Z5/Z1/student1390,A2016/Z5/Z1/student3386,"#include <stdio.h>
#include <string.h>

struct Student{
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

float prosjek1(int niz[], int vel){
	float suma=0;
	int i;
	for(i=0;i<vel;i++){
		if(niz[i]==5)return 5;
		suma+=niz[i];
	}
	suma/=vel;
	return suma;
}

int provjera(char ime1[], char prezime1[], char ime2[], char prezime2[]){
	if(strcmp(prezime1,prezime2)<0)return 1;
	else if(strcmp(prezime1,prezime2)>0)return -1;
	else {
		if(strcmp(ime1,ime2)<0)return 1;
		else if(strcmp(ime1,ime2)>0)return -1;
		else return 0;
	}
	
}
int genijalci(struct Student niz[], int vel, float prosjek){
	int i,j,max1=0,max2=0,max3=0;
	
	for(i=0;i<vel;i++){
		if(niz[i].br_ocjena==0){
			for(j=i+1;j<vel;j++){
				niz[j-1]=niz[j];
			}vel--;
			i--;
		}
		else if(prosjek1(niz[i].ocjene,niz[i].br_ocjena)<prosjek){
			for(j=i+1;j<vel;j++){
				niz[j-1]=niz[j];
			}vel--;
			i--;
		}
	}
	for(i=0;i<vel;i++){
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)>prosjek1(niz[max1].ocjene,niz[max1].br_ocjena)){
			max1=i;
		}
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)==prosjek1(niz[max1].ocjene,niz[max1].br_ocjena)){
			if(provjera(niz[i].ime, niz[i].prezime, niz[max1].ime, niz[max1].prezime)==1){
				max1=i;
			}
		}
	}
	for(i=0;i<vel;i++){
		if(i==max1)continue;
		if(max2==max1)max2++;
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)>prosjek1(niz[max2].ocjene,niz[max2].br_ocjena)){
			max2=i;
		}
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)==prosjek1(niz[max2].ocjene,niz[max2].br_ocjena)){
			if(provjera(niz[i].ime, niz[i].prezime, niz[max2].ime, niz[max2].prezime)==1){
				max2=i;
			}
		}
	}
	for(i=0;i<vel;i++){
		if(i==max1 || i==max2)continue;
		if(max3==max1)max3++;
		if(max3==max2)max3++;
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)>prosjek1(niz[max3].ocjene,niz[max3].br_ocjena)){
			max3=i;
		}
		if(prosjek1(niz[i].ocjene, niz[i].br_ocjena)==prosjek1(niz[max3].ocjene,niz[max3].br_ocjena)){
			if(provjera(niz[i].ime, niz[i].prezime, niz[max3].ime, niz[max3].prezime)==1){
				max3=i;
			}
		}
	}
	
	if(vel>0)printf(""%s %s"",niz[max1].prezime,niz[max1].ime);
	if(vel>1)printf(""\n%s %s"",niz[max2].prezime,niz[max2].ime);
	if(vel>2)printf(""\n%s %s"",niz[max3].prezime,niz[max3].ime);
	
	
	return vel;
}

int main() {
	struct Student studenti[6] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 6, 6.5);

	return 0;
}
","#include <stdio.h>
#include <string.h>
#define EPSILON 0.0001
struct Student
{
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};
/*prosjek svakog studenta pojedinacno
u zavisnosti od broja ocjena*/
float prosjek(int niz[],int vel)
{
	int i=0,suma=0;
	float prosjek;
	if(vel==0)
		return 5;
	for(i=0;i<vel;i++)
	{
		/*ako ima ijednu 5 pao je*/
		if(niz[i]==5)
			return 5;
		suma+=niz[i];
	}
	prosjek=(float)suma/vel;
	return prosjek;
	
}
/*vraca 1 ako prvi treba bit
ispred drugog odnosno 0 ako ne*/
int dalijeveci(struct Student pr,struct Student dr)
{
	if(prosjek(pr.ocjene,pr.br_ocjena)>prosjek(dr.ocjene,dr.br_ocjena))
		return 1;
	else if(prosjek(pr.ocjene,pr.br_ocjena)<prosjek(dr.ocjene,dr.br_ocjena))
		return 0;
	/*prosjek im je jednak ako se 
	funkcija nije prekinula do sada
	pa gledamo prezimena*/
	if(strcmp(pr.prezime,dr.prezime)>0)
		return 0;
	else if(strcmp(pr.prezime,dr.prezime)<0)
		return 1;
	if(strcmp(pr.ime,dr.ime)>0)
		return 0;
	else if(strcmp(pr.ime,dr.ime)<0)
		return 1;
	/*ako su jednaki prosjeci 
	svejedno sta se vraca*/
	else return 1;
}
int ind(struct Student niz[],int vel,double prosjekk)
{
	int i;
	int indexmin=0;
	double min=10;
	float temp;
	for(i=0;i<vel;i++)
	{
		temp=prosjek(niz[i].ocjene,niz[i].br_ocjena);
		if(min-temp>EPSILON)
		{
			min=temp;
			indexmin=i;
		}
	}
	return indexmin;
}
int izb(struct Student niz[],int vel,double prosjekk)
{
	int i,j;
	for(i=0;i<vel;i++)
	{
		/*ako je nas prosjek manji od 
		zadanog moramo ga izbaciti*/
		if(prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena) > EPSILON)
		{
			for(j=i;j<vel-1;j++)
			{
				niz[j]=niz[j+1];
			}
			vel--;
			i--;
		}
	}
	return vel;
}

void ispis(struct Student niz[],int vel,double prosjekk,int indexmin)
{
	int i,indexprvi,indexdrugi=0,indextreci,vr;
	if(vel>0)
	{
		/*indexmin prije smo nasli vec ranije*/
		indexprvi=indexmin;
		for(i=0;i<vel;i++)
		{
			vr=dalijeveci(niz[i],niz[indexprvi]);
			if(vr==1)
			/*patmimo najveceg studenta 
			da bi ga mogli preskocit slj. put*/
			indexprvi=i;
		}
		if(i>0)
		/*printamo naj studenta*/
		printf(""\n%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);
	}
	if(vel>1)
	{
		indexdrugi=indexmin;
		for(i=0;i<vel;i++)
		{
			if(i==indexprvi)
				continue;
			vr=dalijeveci(niz[i],niz[indexdrugi]);
			if(vr==1)
				indexdrugi=i;
		}
	printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
	}
	if(vel>2)
	{
		indextreci=indexmin;
		for(i=0;i<vel;i++)
		{
			if(i==indexprvi || i==indexdrugi)
				continue;
			vr=dalijeveci(niz[i],niz[indextreci]);
			if(vr==1)
			indextreci=i;
		}
		if(i>0)
		printf(""%s %s\n"",niz[indextreci].prezime,niz[indextreci].ime);
	}
}
int genijalci(struct Student niz[],int vel,double prosjekk)
{
	int indexmin=0;
	vel=izb(niz,vel,prosjekk);
	indexmin=ind(niz,vel,prosjekk);
	ispis(niz,vel,prosjekk,indexmin);
	return vel;
}
int main() {
	struct Student studenti[5] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Beba"", ""Bebic"", { 10, 10, 10, 10, 5}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 5, 6.5);

	return 0;
}
"
1618,21,21,0,29,A2016/Z5/Z1/student1624,A2016/Z5/Z1/student6723,"#include <stdio.h>
#include <string.h>
#define eps 0.0001

struct Student {
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};
int summa(int niz[],int vel){//funkcija primi niz i velicinu i izracuna sumu, a vrati negativan broj ako ima neka ocjena koaj je 5
	int i,suma=0;
	for(i=0;i<vel;i++)
		if(niz[i]==5) return -100;
			else suma+=niz[i];
	return suma;
}
int uporedi(char*s1,char*s2){		//funkcija leksikografski poredi 2 stringa
	if(strcmp(s1,s2)<0) return 1;
	if(strcmp(s1,s2)>0) return 2;
}

float prosjek(int niz[],int vel){	//funkcija primi niz i velicinu i vrati prosjek ocjena
	int i=0,suma;
	suma=summa(niz,vel);
	if(vel==0 ||suma<0) return 5;		//ako je suma negativna il ako je velicina niza0 treb vratit 5 tj da je pao
	return (float)suma/vel;
}
int poredidouble(double d1,double d2){		//funkcija poredi 2 doubla, ako su jednaki vrati 5
	if(d1>d2) return 1;
	if(d1<d2)return 0;
	else return 5;
}
int izbaci(struct Student niz[], int vel,double prosjekk){	//funkcija vrati preostali broj clanova u nizu, nakon izbacivanja onih ispod prosjeka
	int i, j;
	for(i=0;i<vel;i++){
		if(prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena)>eps){
			for(j=i;j<vel-1;j++)
				niz[j]=niz[j+1];
			vel--;
			i--;
		}
	}
	return vel;
}
int dalijeveci(struct Student pr, struct Student dr){			//funkcija vrati 1 il 0 s obzirom dali 1 student treba ici prije drugog
	//prvo se porede prosjeci, pa prezimena pa imena
	int vr=poredidouble(prosjek(pr.ocjene,pr.br_ocjena),prosjek(dr.ocjene,dr.br_ocjena));
	if(vr==1 ||vr==5 && uporedi(pr.prezime, dr.prezime)==1) return 1;
	if(vr==0 ||vr==5 && uporedi(pr.prezime,dr.prezime)==2) return 0;
	if(vr==5){
		if(uporedi(pr.ime,dr.ime)==1) return 1;
		if(uporedi(pr.ime,dr.ime)==2) return 0;}
		return 1;	//receno moze vratit funkcija bilo sta ako gore nije nista vratila
	}
int vratimin(struct Student niz[],int vel,double prosjekk){	//funnkcija primi niz, i velicinu i vrati onaj index elementa koji ima namanji prosjek
	int i,j;
	double min=10;
	int indexmin=0;
	for(i=0;i<vel;i++){
		if(min-prosjek(niz[i].ocjene, niz[i].br_ocjena)>eps){
			min=prosjek(niz[i].ocjene, niz[i].br_ocjena);
			indexmin=i;
		}
	}
	return indexmin;
	
}
int genijalci(struct Student niz[],int vel,double prosjekk){
	int i,j,indexprvi,indexdrugi,indextreci;
	double min=10;
	vel=izbaci(niz,vel,prosjekk);	//izbacimo one ispod prosjeka
	int indexmin=vratimin(niz,vel,prosjekk);	//nadjemo index namjanjeg
	int bilo=0;
	switch(vel){
		case 1: 		//ako je ostao 1 element samo ga ispisemo jer je on najveci
			indexprvi=indexmin;
			printf(""\n%s %s"",niz[indexprvi].prezime,niz[indexprvi].ime);
			return vel;
		case 0: 	//ako je velicina 0 vrati 0
			return 0;
		case 2: //ako je velicina 2 printamo 2 najbolja
	
			indexprvi=indexmin;
		for(i=0;i<vel;i++){
			if(dalijeveci(niz[i],niz[indexprvi])==1)	//nadjemo najboljeg studenta
			indexprvi=i;
		}
		indexdrugi=indexmin;
		for(i=0;i<vel;i++){
			if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){	//nadjemo drugog najboljeg kojem je index razlicit od onog najboljeg
				indexdrugi=i;
			}
		}
		
	printf(""%s %s\n%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime,niz[indexdrugi].prezime,niz[indexdrugi].ime);
	
	return 2;
		
	default: 
	indexprvi=indexmin; indexdrugi=indexmin; indextreci=indexmin;
	for(i=0;i<vel;i++){
		if(dalijeveci(niz[i],niz[indexprvi])==1)
		indexprvi=i;
	}
	for(i=0;i<vel;i++){
		if(i==indexprvi) continue;
		if(dalijeveci(niz[i],niz[indexdrugi])==1) {
			indexdrugi=i;
		}
	}
	for(i=0;i<vel;i++){
		if(i==indexdrugi || i== indexdrugi) continue;	//preskacemo ona 2 najbolj sto smo ih ispisali
		if(dalijeveci(niz[i],niz[indextreci])==1 && i!=indexprvi)
		indextreci=i;
	}
		printf(""%s %s\n"",niz[indexprvi].prezime, niz[indexprvi].ime);
		printf(""%s %s\n"",niz[indexdrugi].prezime, niz[indexdrugi].ime );
		printf(""%s %s\n"",niz[indextreci].prezime,niz[indextreci].ime);
	return vel;
	
}
}
int main() {
	
	struct Student studenti[5]={
		{""Amra"",""Djelmo"",{7,10,10,10,10},5},
		{""Aske"",""Askelov"",{10,10,10,10,10},5},
	};
	genijalci(studenti,2,6.5);

	return 0;
}
","
#include <stdio.h>
#include <string.h>

struct Student {
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};

double prosjecna_ocjena(int niz[],int vel) {
	if(vel==0) return 0;
	int i;
	double prosjek=5,suma=0;
	for(i=0;i<vel;i++) 
	if(niz[i]==5) return 5;
	else suma+=niz[i];
	return suma/vel;
}

int uporedi(char* s1, char* s2) {
	if(strcmp(s1,s2)==0) return 0;
	if(strcmp(s1,s2)<0) return -1;
	if(strcmp(s1,s2)>0) return 1;
}

int vratiduz(struct Student studenti[], int velicina, double prosjek) {
	int i,j;
	
	for(i=0;i<velicina;i++) {
		
		if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)<prosjek) {
			for(j=i;j<velicina-1;j++)
			studenti[j]=studenti[j+1];
			velicina--;
			i--;
		}
	}
	return velicina;
}

int genijalci (struct Student studenti[],int velicina, double prosjek) {
	int i,j;
	velicina=vratiduz(studenti,velicina,prosjek);
	int prvi=-1, drugi=-1, treci=-1;
	double najveci=0, prosj;
	int ispred;
	
	for(i=0;i<velicina;i++) {
		double prosjek=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
		if (prosjek>=najveci) {
			if (prosjek>najveci) {
				prvi=i;
				najveci=prosjek;
			}
			najveci=prosjek;
			ispred=uporedi(studenti[prvi].prezime, studenti[i].prezime);
			if(ispred==1) 
			prvi=i;
			
			if(ispred==0)
			ispred=uporedi(studenti[prvi].ime, studenti[i].ime);
		}
	}
	najveci=0;
	for(i=0;i<velicina;i++) {
		double prosjek=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
		if (prosjek>=najveci && i!=prvi) {
			if(prosjek>najveci) {
				drugi=i;
				najveci=prosjek;
			}
			najveci=prosjek;
			ispred=uporedi(studenti[drugi].prezime,studenti[i].prezime);
			if(ispred==0)
			ispred=uporedi(studenti[drugi].ime,studenti[i].ime);
			
			if(ispred==1) {
				drugi=i;
			}
		}
	}
	najveci=0;
	for(i=0;i<velicina;i++) {
		double prosjek=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
		if(prosjek>=najveci && i!=prvi && i!=drugi) {
			if(prosjek>najveci) {
				treci=i;
				najveci=prosjek;
			}
			najveci=prosjek;
			ispred=uporedi(studenti[treci].prezime, studenti[i].prezime);
			if(ispred==0)
			ispred=uporedi(studenti[treci].ime, studenti[i].ime);
			if(ispred==1) treci=i;
		}
	}
	if(velicina==1)
	printf(""\n%s %s\n"",studenti[prvi].prezime,studenti[prvi].ime);
	
	if(velicina==2) {
		printf(""\n%s %s\n"",studenti[prvi].prezime,studenti[prvi].ime);
		printf(""%s %s\n"",studenti[drugi].prezime,studenti[drugi].ime);
		return 2;
	}
	if(velicina>2) {
		printf(""\n%s %s\n"",studenti[prvi].prezime, studenti[prvi].ime);
		printf(""%s %s\n"",studenti[drugi].prezime,studenti[drugi].ime);
		printf(""%s %s\n"",studenti[treci].prezime, studenti[treci].ime);
	}
	return velicina;
	
}

int main() {
	struct Student studenti[10]={ 
		{""Meho"",""Mujic"",{7,7,7,7,8},5}, {""Pero"",""Peric"",{8,8,8,8,7},5}, {""Beba"",""Bebic"",{7,8,9},3}, {""Mujo"",""Mujic"",{10,10,10,10,9},5},
	
	};
	int vel=genijalci(studenti, 4, 7);

	return 0;
}

"
1622,26,26,0,77,A2016/Z5/Z2/student7802,A2016/Z5/Z2/student3776,"#include <stdio.h>
#include <string.h>
void unesi(char niz[], int velicina)
{
    char znak=getchar();
    if(znak=='\n') znak=getchar();
    int i = 0;
    while (i<velicina-1 && znak!='\n')
    {
        niz[i]=znak;
        i++;
        znak=getchar();
    }
    niz[i]='\0';
}
/*vraca 1 ako je znak slovo*/
int slovo(int c)
{
    if(c>='A' && c<='Z' || c>='a' && c<='z')
        return 1;
    return 0;
}
/*funkcija prima 2 stringa i zamijeni ih*/
void swap(char *p, char *q)
{
    char temp[100];
    strcpy(temp,p);
    strcpy(p,q);
    strcpy(q,temp);
}
void kompresuj(char* naziv,char* naziv1)
{
    FILE *ulaz=fopen(naziv,""r"");
    FILE *ulaz1=fopen(naziv,""r"");
    FILE *izlaz=fopen(naziv1,""w"");
    char rijeci[1000][1000]={0};
    /*brojac za svaku rijec*/
    int brojac[1000]={0};
    int i, broj_rijeci=0;
    char rijec[1000];
    int duzina;
    char znak=fgetc(ulaz);
    /*dok ne dodjemo do kraja 
    datoteke uzimamo znak po znak*/
    while(znak!=EOF)
    {
        duzina=0;
        /*dok je znak slovo znaci da smo na rijeci
        pa uzmemo sva slova i ubacimo u trenutnu rijeci*/
        while(slovo(znak))
        {
            rijec[duzina++]=znak;
            znak=fgetc(ulaz);
        }
        rijec[duzina]='\0';
        if(duzina < 10 && duzina !=0)
        {
            int ima=0,j;
            /*prolazimo kroz rijeci koje smo do sada upisali*/
            for(j=0;j<broj_rijeci;j++)
            {
                /*ako se rijec vec nalazi tu 
                povecavamo broj ponavljanja*/
                if(strcmp(rijeci[j],rijec)==0)
                {
                    ima=1;
                    brojac[j]++;
                    break;
                }
            }
            /*ako je nema dodajemo je i 
            brojac postavljamo na 1*/
            if(ima!=1)
            {
                strcpy(rijeci[broj_rijeci],rijec);
                brojac[broj_rijeci++]=1;
            }
        }
        znak=fgetc(ulaz);
    }
    /*unijeli smo sve rijeci sada ih 
    sortiramo po broju ponavljanja i leksikografski*/
    int j;
    for(i=0;i<broj_rijeci;i++)
    {
        for(j=i+1;j<broj_rijeci;j++)
        {
            if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1))
            {
                int temp=brojac[j];
                brojac[j]=brojac[i];
                brojac[i]=temp;
                swap(rijeci[i],rijeci[j]);
            }
        }
    }
    int kraj=10;
    char novired='\n';
    /*treba nam 10 rijeci ako ih 
    ima manje onda to koristim*/
    if(broj_rijeci<10)
        kraj=broj_rijeci;
    /*prvo unosimo u izlaz 
    rijeci koje su u nizu*/
    for(i=0;i<kraj;i++)
    {
        fputs(rijeci[i],izlaz);
        fputc(novired,izlaz);
    }
    char c=fgetc(ulaz1);
    while(c!=EOF)
    {
        duzina=0;
        /*uzimamo rijec po rijec*/
        while(slovo(c))
        {
            rijec[duzina++]=c;
            c=fgetc(ulaz1);
        }
        rijec[duzina]='\0';
        int kontrola=0;
        if(duzina<10 && duzina!=0)
        {
            for(j=0;j<kraj;j++)
            {   
                /*ako nalazi u nizu mijenjamo 
                odgovarajucim znakom*/
                if(strcmp(rijeci[j],rijec)==0)
                {
                    char znk=j+20;
                    kontrola=1;
                    fputc(znk,izlaz);
                    fputc(c,izlaz);
                    break;
                }
            }
        }
        if(kontrola==0)
        {
            char *r=rijec;
            while(*r!='\0')
            {
                fputc(*r,izlaz);
                r++;
            }
            fputc(c,izlaz);
        }
        c=fgetc(ulaz1);
    }
    printf(""Datoteka kompresovana.\n"");
    fclose(ulaz);
    fclose(ulaz1);
    fclose(izlaz);
}
void dekompresuj(char *naziv, char *naziv1)
{
    FILE *ulaz=fopen(naziv,""r"");
    FILE *ulaz1=fopen(naziv,""r"");
    FILE *izlaz=fopen(naziv1,""w"");
    char rijeci[1000][1000]={0},rijec[1000];
    int broj_rijeci=0,duzina=0,brojackrajeva=0;
    char znak=fgetc(ulaz);
    int kontrola=0;
    while(znak!=EOF)
    {
        duzina=0;
        kontrola=0;
        while(slovo(znak))
        {
            rijec[duzina++]=znak;
            znak=fgetc(ulaz);
        }
        rijec[duzina]='\0';
        if(duzina<10 && duzina!=0)
        {
            strcpy(rijeci[broj_rijeci],rijec);
            int j;
            for(j=0;j<broj_rijeci;j++)
            {
                if(strcmp(rijeci[j],rijec)==0)
                {
                    kontrola=1;
                    break;
                }
            }
            if(kontrola)
                break;
            broj_rijeci++;
        }
        znak=fgetc(ulaz);
    }
    /*prebrojimo koliko ima rijeci*/
    brojackrajeva=0;
    char c=fgetc(ulaz1);
    while(c!=EOF)
    {
        /*brojimo nova mjesta*/
        if(c=='\n')
            brojackrajeva++;
        /*kad dodjemo do zadnje rijeci prekidamo*/
        if(brojackrajeva==broj_rijeci)
            break;
        c=fgetc(ulaz1);
    }
    c=fgetc(ulaz1);
        while(c!=EOF)
        {
            int n=0;
            /*sve znakove od 20 do 30 mijenjamo rijecima*/
            if(c>=20 && c<=30)
            {
                char *p=rijeci[c-20];
                n=1;
                /*ubacujemo rijec*/
                while(*p!='\0')
                {
                    fputc(*p,izlaz);
                    p++;
                }
            }
            /*ako nije znak prepisujem rijeci*/
            if(n==0)
                fputc(c,izlaz);
            c=fgetc(ulaz1);
        }
    printf(""Datoteka dekompresovana.\n"");
    fclose(ulaz);
    fclose(izlaz);
    fclose(ulaz1);
    
}
int main() {
    int opcija;
    char s[100], p[100];
    do
    {
        printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
        scanf(""%d"",&opcija);
        switch(opcija)
        {
            /*unosim datoteke i vrsim kompresiju/dekompresiju*/
            case 1:
                printf(""Unesite ime ulazne datoteke: "");
                unesi(s,40);
                printf(""Unesite ime izlazne datoteke: "");
                unesi(p,40);
                kompresuj(s,p);
                break;
            case 2:
                printf(""Unesite ime ulazne datoteke: "");
                unesi(s,40);
                printf(""Unesite ime izlazne datoteke: "");
                unesi(p,40);
                dekompresuj(s,p);
        }
    }while(opcija!=0);
	return 0;
}
","#include <stdio.h>

void unesi(char niz[],int velicina){
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}

int uporedi(char* s1,char* s2){
	while(*s1 != '\0' && *s2 != '\0' ){
		if(*s1<*s2) return -1;
		if(*s1>*s2) return 1;
		s1++;
		s2++;
	}
	if(*s1 != '\0') return 1;
	if(*s2 != '\0') return -1;
	return 0;
}
void kompresuj(char* dat1, char *dat2){
	FILE *ulaz=fopen(dat1,""r"");
	FILE *pomocna=fopen(dat1,""r"");
	FILE *izlaz=fopen(dat2,""w"");
	if(!ulaz){
		printf(""Greska pri otvaranju ulazne datoteke"");
		return;
	}
	if(!izlaz){
		printf(""Greska pri otvaranju izlazne datoteke"");
		return;
	}
	char kompresne[1000][1000]={0},rijec[1000],karakter=fgetc(ulaz);
	int brojac[1000]={0},i,broj_rijeci=0,k=0,ima,j,kraj=10;
	while(karakter!=EOF){
		k=0;
		while(karakter>='A' && karakter<='Z' || karakter>='a' && karakter<='z'){
			rijec[k]=karakter;
			karakter=fgetc(ulaz);
			k++;
		}
		rijec[k]='\0';
		if(k<10 && k>0){
			ima=0;
			for(j=0;j<broj_rijeci;j++){
				if(uporedi(kompresne[j],rijec)==0){
					ima=1;
					brojac[j]++;
					break;
				}
			}
			if(ima!=1){
				char *q=kompresne[broj_rijeci],*p=rijec;
				while(*q++=*p++);
				brojac[broj_rijeci]=1;
				broj_rijeci++;
			}
		}
		karakter=fgetc(ulaz);
	}
	for(i=0;i<broj_rijeci;i++){
		for(j=i+1;j<broj_rijeci;j++){
			if(uporedi(kompresne[i],kompresne[j])==1 && brojac[j]==brojac[i] || brojac[j]>brojac[i]){
				int zamjena=brojac[j];
				brojac[j]=brojac[i];
				brojac[i]=zamjena;
				char temp[100],*q,*p,*pom;
				q=kompresne[i];
				p=kompresne[j];
				pom=temp;
				while(*pom++=*q++);
				q=kompresne[i];
				while(*q++=*p++);
				p=kompresne[j];
				pom=temp;
				while(*p++=*pom++);
			}
		}
	};
	if(broj_rijeci<10) kraj=broj_rijeci;
	for(i=0;i<kraj;i++){
		fputs(kompresne[i],izlaz);
		fputc('\n',izlaz);
	}
	fputc('\n',izlaz);
	char c=fgetc(pomocna);
	while(c!=EOF){
		k=0;
		while(c>='A' && c<='Z' || c>='a' && c<='z'){
			rijec[k]=c;
			c=fgetc(pomocna);
			k++;
		}
		rijec[k]='\0';
		int jest=0;
		if(k>0 && k<10)
		for(j=0;j<kraj;j++)
		if(uporedi(kompresne[j],rijec)==0){
			fputc(j+20,izlaz);
			fputc(c,izlaz);
			jest=1;
			break;
		}
		if(!jest){
			fputs(rijec,izlaz);
			fputc(c,izlaz);
		}
		c=fgetc(pomocna);
	}
	printf(""Datoteka kompresovana. \n"");
	fclose(ulaz); fclose(pomocna); fclose(izlaz);
}
void dekompresuj(char*dat1, char*dat2 ){
	FILE *ulaz=fopen(dat1, ""r"");
	FILE *pomocna=fopen(dat1,""r"");
	FILE *izlaz=fopen(dat2, ""w"");
	if(!ulaz){
		printf(""Greska pri otvaranju ulazne datoteke"");
		return;
	}
	if(!izlaz){
		printf(""Greska pri otvaranju izlazne datoteke"");
		return;
	}
	char kompresne[1000][1000]={0},rijec[1000],karakter=fgetc(ulaz),kar;
	int broj_rijeci=0,k,pom_brojac=0,iste=0,j;
	while(karakter!=EOF){
		k=0;
		iste=0;
		while(karakter>'A' && karakter<='Z' || karakter>='a' && karakter<='z'){
			rijec[k]=karakter;
			karakter=fgetc(ulaz);
			k++;
		}
		rijec[k]='\0';
		if(k>0 && k<10){
			char *q=kompresne[broj_rijeci],*p=rijec;
			while(*q++=*p++);
			for(j=0;j<broj_rijeci;j++)
			if(!uporedi(kompresne[j],rijec)){
				iste=1;
				break;
			}
			if(iste)
			break;
			broj_rijeci++;
		}
		karakter=fgetc(ulaz);
}
kar=fgetc(pomocna);
while(kar!=EOF){
	if(kar=='\n') pom_brojac++;
	if(pom_brojac==broj_rijeci) break;
	kar=fgetc(pomocna);
}
kar=fgetc(pomocna);
while(kar!=EOF){
	if(kar>=20 && kar<=30){
		fputs(kompresne[kar-20],izlaz);
		kar=fgetc(pomocna);
		continue;
	}
	fputc(kar,izlaz);
	kar=fgetc(pomocna);
}
printf(""Datoteka dekompresovana. \n"");
fclose(ulaz); fclose(izlaz); fclose(pomocna);
}
int main() {
	int n;
	char ulazna[1000], izlazna[1000];
	do{
		printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
		scanf(""%d"", &n);
		if(n==1) {
			printf(""Unesite ime ulazne datoteke: "");
			unesi(ulazna,40);
			printf(""Unesite ime izlazne datoteke: "");
			unesi(izlazna,40);
			kompresuj(ulazna,izlazna);
		}
		if(n==2){
			printf(""Unesite ime ulazne datoteke: "");
			unesi(ulazna,40);
			printf(""Unesite ime izlazne datoteke: "");
			unesi(izlazna,40);
			dekompresuj(ulazna,izlazna);
		}
	}while(n!=0);
	
	return 0;
}
"
1628,86,86,0,53,A2016/Z3/Z3/student5624,A2016/Z3/Z3/student2210,"#include <stdio.h>

int main() {
    int matrica[200][200], i, j, k, l, m, n,pret,pret1,p;
    do{
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"", &m, &n);
        if(m<=0||n<=0||m>200||n>200) 
            printf(""Brojevi nisu u trazenom opsegu.\n"");
    } 
    while(m<=0||n<=0||m>200||n>200); // petlja osigurava da su brojevi u trazenom opsegu
    printf(""Unesite elemente matrice: "");
    for(i=0;i<m;i++)
        for(j=0;j<n;j++)
            scanf(""%d"",&matrica[i][j]);
    for(i=0;i<m;i++){
        for(k=i+1;k<m;k++){ 
            pret=1;
            for(j=0;j<n;j++){
                if(matrica[i][j]!=matrica[k][j]) pret=0; //ispitujemo da li su redovi matrice jednaki
            } 
            if(pret==1){ //izbacivanje jednakog reda matrice
                for(l=k;l<m-1;l++){
                    for(p=0;p<n;p++)
                        matrica[l][p]=matrica[l+1][p];
                }
                m--;
                k--;
            }
        }
    }
    for(i=0;i<n;i++){
        for(k=i+1;k<n;k++){
            pret1=1;
            for(j=0;j<m;j++){
                if(matrica[j][i]!=matrica[j][k]) pret1=0; //ispitujemo da li su kolone matrice jednake
            }
            if(pret1==1){//izbacivanje jednake kolone matrice
                for(l=k;l<n-1;l++){
                    for(p=0;p<m;p++)
                        matrica[p][l]=matrica[p][l+1];
                }
                    n--;
                    k--;
            }
        }
    }
    printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
    for(i=0;i<m;i++){
        for(j=0;j<n;j++)
            printf(""%5d"",matrica[i][j]);
        printf(""\n"");
    }
    return 0;
}
","#include <stdio.h>

int main() {
	int mat[200][200],i,j,k,T=1,p,q,N,M;
	
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"",&M,&N);
		if(M<=0 || N<=0 || M>200 || N>200)
		printf(""Brojevi nisu u trazenom opsegu.\n"");
	} while(M<=0 || N<=0 || M>200 || N>200);
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			scanf(""%d"",&mat[i][j]);
		}
	}
	for(i=0;i<M;i++){
		for(j=i+1;j<M;j++){
			T=1;
			for(k=0;k<N;k++){
				if(mat[i][k]!=mat[j][k])
				T=0;
			}
			if(T==1){
				for(p=j;p<M-1;p++)
					for(q=0;q<N;q++)
						mat[p][q]=mat[p+1][q];
						M--;
						j--;
				}
		}
	}
	for(i=0; i<N; i++){
		for(j=i+1; j<N; j++){
			T=1;
			for(k=0; k<M; k++){
				if(mat[k][i]!=mat[k][j]) T=0;
			}
			if(T==1){
				for(p=0; p<M; p++) 
					for(q=j; q<N-1; q++)
						mat[p][q]=mat[p][q+1];
				N--;
				j--;
			}
		}
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			printf(""%5d"",mat[i][j]);
		}
		printf(""\n"");
	}
	
	return 0;
}
"
1634,99,99,0,190,A2016/Z4/Z1/student4804,A2016/Z4/Z1/student2508,"#include <stdio.h>

/*Funkcija za unos stringa*/
void unesi(char s[], int n)
{
	char znak;
	int i=0;
	znak=getchar();
	if(znak=='\n')
		znak=getchar();
	while(i<n-1 && znak!='\n') {
		s[i]=znak;
		i++;
		znak=getchar();
	}
	s[i]='\0';
}

char *rijec(char *d)
{
	char *p;
	p=d;

	while((*d>='A' && *d<='Z') || (*d>='a' && *d<='z')) {
		d++;
	}
	*d='\0';


	return p;
}

int duzina(char *s)
{
	int br=0;
	while(*s!='\0') {
		br++;
		s++;
	}
	return br;
}

int broj_ponavljanja(char *s,char *q)
{
	int razmak=1,br=0,jednaki,i;
	char *p,*r,*k,rj[500],*l;
	k=&rj[0];
	while(*s!='\0') {
		if(!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')))
			razmak=1;
		else if (razmak==1) {
			razmak=0;
			p=s;
			l=k;	/* Pokazivac na pocetak niza*/
			for(i=0; i<500; i++)
				rj[i]='\0';
			while(*p!='\0') {
				*k=*p;
				if(*k>='A' && *k<='Z')
					*k=*k+('a'-'A');
				k++;
				p++;
			}
			r=q;
			k=l;
			k=rijec(k);
			jednaki=1;
			while(*k!='\0') {
				if(*r!=*k && *r!=*k-'a'-'A') {
					jednaki=0;
					break;
				}
				if(*r=='\0') {
					jednaki=0;
					break;
				}
				r++;
				k++;
			}
			if(jednaki==1)
				br++;
			k=l;
		}
		s++;
	}
	return br;
}

char *izbaci_najcescu(char *s)
{
	int razmak=1,maximum=0,br,i,izbaci=1,duz;
	char *p,*q,rj[500],*l,*k,max[500],*m,*g,*r,*h,*v,*z;
	q=s;
	m=&max[0];
	r=s;
	k=&rj[0];
	while(*s!='\0') {
		if(!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')))
			razmak=1;
		else if (razmak==1) {
			razmak=0;
			p=s;
			l=k;
			for(i=0; i<500; i++)
				rj[i]='\0';

			while(*p!='\0') {
				*k=*p;
				if(*k>='A' && *k<='Z')
					*k=*k+('a'-'A');
				k++;
				p++;
			}
			k=l;
			k=rijec(k);
			br=broj_ponavljanja(q,k);	/*Trazenje rijeci koja se najvise ponavlja*/
			if(br>maximum) {
				maximum=br;
				g=m;
				for(i=0; i<500; i++)
					max[i]='\0';
				while(*k!='\0') {
					*m=*k;
					m++;
					k++;
				}
				k=l;
				m=g;
			}
		}
		s++;
	}
	razmak=1;
	while(*r!='\0') {
		if(!((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')))
			razmak=1;
		else if (razmak==1) {
			razmak=0;
			izbaci=1;
			h=r;
			z=h;
			v=m;
			duz=duzina(m);
			m=v;
			/*Izbacivanje rijeci*/
			while((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')) {

				if(*r!=*m && *r!=(*m-('a'-'A'))) {
					izbaci=0;
					break;
				}


				m++;
				r++;

				if(*m=='\0' && maximum!=1 && duz>1 &&(!((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')))) {
					izbaci=0;
					break;
				}

			}
			r=h;
			m=v;
			while((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')) {

				r++;

			}

			if(izbaci==1) {
				while(*r!='\0') {
					*h=*r;
					r++;
					h++;
				}
				*h='\0';
			}
			r=z;
			r--;
		}
		r++;
	}
	return q;
}


int main()
{
	char rec[500];
	unesi(rec,500);

	printf(""%s"",izbaci_najcescu(rec));

	return 0;
}
","#include <stdio.h>

/*Funkcija za unos stringa*/
void unesi(char s[], int n)
{
	char znak;
	int i=0;
	znak=getchar();
	if(znak=='\n')
		znak=getchar();
	while(i<n-1 && znak!='\n') {
		s[i]=znak;
		i++;
		znak=getchar();
	}
	s[i]='\0';
}

char *rijec(char *d)
{
	char *p;
	p=d;

	while((*d>='A' && *d<='Z') || (*d>='a' && *d<='z')) {
		d++;
	}
	*d='\0';


	return p;
}

int duzina(char *s)
{
	int br=0;
	while(*s!='\0') {
		br++;
		s++;
	}
	return br;
}

int broj_ponavljanja(char *s,char *q)
{
	int razmak=1,br=0,jednaki,i;
	char *p,*r,*k,rj[500],*l;
	k=&rj[0];
	while(*s!='\0') {
		if(!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')))
			razmak=1;
		else if (razmak==1) {
			razmak=0;
			p=s;
			l=k;	/* Pokazivac na pocetak niza*/
			for(i=0; i<500; i++)
				rj[i]='\0';
			while(*p!='\0') {
				*k=*p;
				if(*k>='A' && *k<='Z')
					*k=*k+('a'-'A');
				k++;
				p++;
			}
			r=q;
			k=l;
			k=rijec(k);
			jednaki=1;
			while(*k!='\0') {
				if(*r!=*k && *r!=*k-'a'-'A') {
					jednaki=0;
					break;
				}
				if(*r=='\0') {
					jednaki=0;
					break;
				}
				r++;
				k++;
			}
			if(jednaki==1)
				br++;
			k=l;
		}
		s++;
	}
	return br;
}

char *izbaci_najcescu(char *s)
{
	int razmak=1,maximum=0,br,i,izbaci=1,duz;
	char *p,*q,rj[500],*l,*k,max[500],*m,*g,*r,*h,*v,*z;
	q=s;
	m=&max[0];
	r=s;
	k=&rj[0];
	while(*s!='\0') {
		if(!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')))
			razmak=1;
		else if (razmak==1) {
			razmak=0;
			p=s;
			l=k;
			for(i=0; i<500; i++)
				rj[i]='\0';

			while(*p!='\0') {
				*k=*p;
				if(*k>='A' && *k<='Z')
					*k=*k+('a'-'A');
				k++;
				p++;
			}
			k=l;
			k=rijec(k);
			br=broj_ponavljanja(q,k);	/*Trazenje rijeci koja se najvise ponavlja*/
			if(br>maximum) {
				maximum=br;
				g=m;
				for(i=0; i<500; i++)
					max[i]='\0';
				while(*k!='\0') {
					*m=*k;
					m++;
					k++;
				}
				k=l;
				m=g;
			}
		}
		s++;
	}
	razmak=1;
	while(*r!='\0') {
		if(!((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')))
			razmak=1;
		else if (razmak==1) {
			razmak=0;
			izbaci=1;
			h=r;
			z=h;
			v=m;
			duz=duzina(m);
			m=v;
			/*Izbacivanje rijeci*/
			while((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')) {

				if(*r!=*m && *r!=(*m-('a'-'A'))) {
					izbaci=0;
					break;
				}


				m++;
				r++;

				if(*m=='\0' && maximum!=1 && duz>1 &&(!((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')))) {
					izbaci=0;
					break;
				}

			}
			r=h;
			m=v;
			while((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')) {

				r++;

			}

			if(izbaci==1) {
				while(*r!='\0') {
					*h=*r;
					r++;
					h++;
				}
				*h='\0';
			}
			r=z;
			r--;
		}
		r++;
	}
	return q;
}


int main()
{
	char rec[500];
	unesi(rec,500);

	printf(""%s"",izbaci_najcescu(rec));

	return 0;
}
"
1641,99,99,0,123,A2016/Z4/Z1/student9175,A2016/Z4/Z1/student4495,"#include <stdio.h>

//funkcija koja izbacuje rijec iz stringa 

void izbacivanje(char* str1ng, int vel) {
	while(*(str1ng+vel)) {
		*str1ng=*(str1ng+vel);
		str1ng++;
	}
	*str1ng=*(str1ng+vel);
}

char* izbaci_najcescu(char* str) {
	
	char *max = str, *p = str, *pocetak, *kraj, *temp, *sljpocetak, *sljkraj, *tempoc, *p2, *p3;
	int vel1, broj_rijeci=0, vel2, jednaka, vel3, max_broj_rijeci=0, maxvel=0, znak;
	char c1,c2;
	
	
	if (*p == '\0') return str;
	while(*p != '\0') {
		while((*p < 'A' || (*p > 'Z' && *p < 'a') || *p > 'z') && *(p+1) != '\0') p++;
			if(*p != '\0') {
				//Odredivanje prvog i posljednjeg slova trenutne rijeci
				pocetak = p;
				kraj = p;
				vel1 = 1;
				while(((*(kraj+1) >= 'A' && *(kraj+1) <= 'Z') || (*(kraj+1) >= 'a' && *(kraj+1) <= 'z')) && *(kraj+1) != '\0') {
					vel1++;
					kraj++;
				}
				broj_rijeci=1;
				temp=kraj+1;
				
				while (*temp != '\0') {
					//Odredivanje prvog i posljednjeg slova sljedece rijeci
					sljpocetak=temp;
					
					while ((*sljpocetak < 'A' || (*sljpocetak > 'Z' && *sljpocetak < 'a') || *sljpocetak > 'z') && *(sljpocetak+1) != '\0') sljpocetak++;
					sljkraj = sljpocetak;
					vel2=1;
					
					while(((*(sljkraj+1) >= 'A' && *(sljkraj+1) <= 'Z') || (*(sljkraj+1) >= 'a' && *(sljkraj+1) <= 'z')) && *(sljkraj+1) != '\0') {
						vel2++;
						sljkraj++;
					
					}
					
					jednaka=1; vel3=0;
					
					tempoc=pocetak;
					
					if (vel1 != vel2 ) jednaka=0;
					else 
					while (vel3 < vel2) {
						
						if(*tempoc >= 'A' && *tempoc <= 'Z') c1=(*tempoc) + ('a' - 'A');
						else c1=*tempoc;
						
						if(*sljpocetak >= 'A' && *sljpocetak <= 'Z') c2=(*sljpocetak) + ('a' - 'A');
						else c2=*sljpocetak;
						
						if(c1 != c2) jednaka=0;
						
						tempoc++; sljpocetak++; vel3++;
						
					}
					
					if(jednaka) broj_rijeci++;
					temp=sljkraj+1;
					
				}
				
				if(broj_rijeci>max_broj_rijeci ) {
				max_broj_rijeci=broj_rijeci;
				max=kraj;
				maxvel=vel1;
				}
			}
			p=kraj+1;
	}
	//izbacivanje najcesce rijeci
	p=temp-1;
	while (p>=str) {
		znak=0;
		if((*(p+1) < 'A' || (*(p+1)>'Z' && *(p+1)<'a') || *(p+1)>'z') || *(p+1)=='\0') znak=1;
		
		if(*p>='A' && *p<='Z') c1=(*p)+('a'-'A'); 
		else c1=*p;
		
		if(*max >= 'A' && *max <='Z') c2=(*max)+('a'-'A'); else c2=*max;
		
		
		
		if(c1==c2 && znak){
			p3=p;
			p2=max;
			vel2=0;
			jednaka=1;
			
			while(p3>=str && (( *p3>='A' && *p3  <= 'Z') || (*p3>= 'a' && *p3 <= 'z'))) {
				if(p2>=str) {
					if(*p2>='A' && *p2<= 'Z') c1=(*p2)+('a'-'A'); 
					else c1=*p2;
					if(*p2>='A' && *p2<= 'Z') c2=(*p2)+('a'-'A'); 
					else c2=*p2;
					if(c1!=c2) jednaka=0;
					
				}
				vel2++;
				p3--;
				p2--;
			}
			p3++;
			if(maxvel!=vel2) jednaka=0;
			if(jednaka==1) {
				izbacivanje(p3,vel2);
			}
		}
		p--;
	}
	return str;
}

int main() {
	char str1ng[400]="" zghklkvedza zvezda zdvdwa"";
	printf(""%s"", izbaci_najcescu(str1ng));
	return 0;
	
}
","#include <stdio.h>

//funkcija koja izbacuje rijec iz stringa 

void izbacivanje(char* str1ng, int vel) {
	while(*(str1ng+vel)) {
		*str1ng=*(str1ng+vel);
		str1ng++;
	}
	*str1ng=*(str1ng+vel);
}

char* izbaci_najcescu(char* str) {
	
	char *max = str, *p = str, *pocetak, *kraj, *temp, *sljpocetak, *sljkraj, *tempoc, *p2, *p3;
	int vel1, broj_rijeci=0, vel2, jednaka, vel3, max_broj_rijeci=0, maxvel=0, znak;
	char c1,c2;
	
	
	if (*p == '\0') return str;
	while(*p != '\0') {
		while((*p < 'A' || (*p > 'Z' && *p < 'a') || *p > 'z') && *(p+1) != '\0') p++;
			if(*p != '\0') {
				//Odredivanje prvog i posljednjeg slova trenutne rijeci
				pocetak = p;
				kraj = p;
				vel1 = 1;
				while(((*(kraj+1) >= 'A' && *(kraj+1) <= 'Z') || (*(kraj+1) >= 'a' && *(kraj+1) <= 'z')) && *(kraj+1) != '\0') {
					vel1++;
					kraj++;
				}
				broj_rijeci=1;
				temp=kraj+1;
				
				while (*temp != '\0') {
					//Odredivanje prvog i posljednjeg slova sljedece rijeci
					sljpocetak=temp;
					
					while ((*sljpocetak < 'A' || (*sljpocetak > 'Z' && *sljpocetak < 'a') || *sljpocetak > 'z') && *(sljpocetak+1) != '\0') sljpocetak++;
					sljkraj = sljpocetak;
					vel2=1;
					
					while(((*(sljkraj+1) >= 'A' && *(sljkraj+1) <= 'Z') || (*(sljkraj+1) >= 'a' && *(sljkraj+1) <= 'z')) && *(sljkraj+1) != '\0') {
						vel2++;
						sljkraj++;
					
					}
					
					jednaka=1; vel3=0;
					
					tempoc=pocetak;
					
					if (vel1 != vel2 ) jednaka=0;
					else 
					while (vel3 < vel2) {
						
						if(*tempoc >= 'A' && *tempoc <= 'Z') c1=(*tempoc) + ('a' - 'A');
						else c1=*tempoc;
						
						if(*sljpocetak >= 'A' && *sljpocetak <= 'Z') c2=(*sljpocetak) + ('a' - 'A');
						else c2=*sljpocetak;
						
						if(c1 != c2) jednaka=0;
						
						tempoc++; sljpocetak++; vel3++;
						
					}
					
					if(jednaka) broj_rijeci++;
					temp=sljkraj+1;
					
				}
				
				if(broj_rijeci>max_broj_rijeci ) {
				max_broj_rijeci=broj_rijeci;
				max=kraj;
				maxvel=vel1;
				}
			}
			p=kraj+1;
	}
	//izbacivanje najcesce rijeci
	p=temp-1;
	while (p>=str) {
		znak=0;
		if((*(p+1) < 'A' || (*(p+1)>'Z' && *(p+1)<'a') || *(p+1)>'z') || *(p+1)=='\0') znak=1;
		
		if(*p>='A' && *p<='Z') c1=(*p)+('a'-'A'); 
		else c1=*p;
		
		if(*max >= 'A' && *max <='Z') c2=(*max)+('a'-'A'); else c2=*max;
		
		
		
		if(c1==c2 && znak){
			p3=p;
			p2=max;
			vel2=0;
			jednaka=1;
			
			while(p3>=str && (( *p3>='A' && *p3  <= 'Z') || (*p3>= 'a' && *p3 <= 'z'))) {
				if(p2>=str) {
					if(*p2>='A' && *p2<= 'Z') c1=(*p2)+('a'-'A'); 
					else c1=*p2;
					if(*p2>='A' && *p2<= 'Z') c2=(*p2)+('a'-'A'); 
					else c2=*p2;
					if(c1!=c2) jednaka=0;
					
				}
				vel2++;
				p3--;
				p2--;
			}
			p3++;
			if(maxvel!=vel2) jednaka=0;
			if(jednaka==1) {
				izbacivanje(p3,vel2);
			}
		}
		p--;
	}
	return str;
}

int main() {
	char str1ng[400]="" zghklkvedza zvezda zdvdwa"";
	printf(""%s"", izbaci_najcescu(str1ng));
	return 0;
	
}
"
1646,99,99,0,255,A2016/Z5/Z2/student9972,A2016/Z5/Z2/student7802,"#include <stdio.h>
#include <ctype.h>
#include <string.h>

void unesi(char niz[], int velicina) {
	char znak=getchar();
	if (znak=='\n') znak=getchar();
	int i = 0;
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
niz[i]='\0';
}
int slovo(int c){
	if(c>='A' && c<='Z' || c>='a' && c<='z')
	return 1;
	return 0;
}
void swap(char*p,char*q){
	char temp[100];
strcpy(temp,p);
strcpy(p,q);
strcpy(q,temp); }
void kompresuj(char* naziv, char*naziv1){
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv1,""w"");
	char rijeci[1000][1000]={0};
	int brojac[1000]={0};
	int i,broj_rijeci = 0;
	char rijec[1000];
	int duzina;
	char znak=fgetc(ulaz);
	while(znak!=EOF) {
		duzina = 0;
	while(slovo(znak)) {
		rijec[duzina++]= znak;
		znak=fgetc(ulaz);
	}
	rijec[duzina]='\0';
	if (duzina <10 && duzina!=0){
		int ima = 0;
		int j;
		for(j = 0;j < broj_rijeci; j++) {
			if (strcmp(rijeci[j],rijec) ==0) {
				ima = 1;
				brojac[j]++;
				break;
			}
		}
	if (ima!=1) {
		strcpy(rijeci[broj_rijeci], rijec);
		brojac[broj_rijeci++] = 1;
	} }
	znak=fgetc(ulaz); }
	int j;
	for(i=0;i<broj_rijeci;i++){
		for(j=i+1;j<broj_rijeci;j++){
			if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1)){
				int temp=brojac[j];
				brojac[j]=brojac[i];
				brojac[i]=temp;
				swap(rijeci[i],rijeci[j]);
			}
		}
	}
	int kraj=10;
	char novired='\n';
	if(broj_rijeci<10) kraj=broj_rijeci;
	for(i=0;i<kraj;i++){
		fputs(rijeci[i],izlaz);
		fputc(novired,izlaz);
	}
char c=fgetc(ulaz1);
while(c!=EOF){
	duzina = 0;
	while(slovo(c)) {
		rijec[duzina++]=c;
		c=fgetc(ulaz1);
	}
	rijec[duzina]='\0';
	int kontrola=0;
	if(duzina<10 && duzina!=0){
		for(j=0; j<kraj; j++){
if(strcmp(rijeci[j], rijec) == 0){
	char znk=j+20;
	kontrola=1;
	fputc(znk,izlaz);
	fputc(c,izlaz);
	break;
}}
}
if (kontrola==0){
	char*r=rijec;
	while(*r!='\0'){
fputc(*r,izlaz);
r++; }
fputc(c,izlaz);
}
c=fgetc(ulaz1);
}
printf(""Datoteka kompresovana.\n"");
fclose(ulaz);
fclose(ulaz1);
fclose(izlaz);
}
void dekompresuj(char*naziv, char*naziv1){
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv1,""w"");
char rijeci[1000][1000]={0}, rijec[1000];
int broj_rijeci=0, duzina=0, brojackrajeva=0;
char znak=fgetc(ulaz);
int kontrola=0;
while(znak!=EOF){
	duzina=0;
	kontrola=0;
	while(slovo(znak)){
		rijec[duzina++]= znak;
		znak=fgetc(ulaz); }
		rijec[duzina]='\0';
		if (duzina <10 && duzina!=0) {
			strcpy(rijeci[broj_rijeci], rijec);
		int j;
		for( j=0; j < broj_rijeci; j++) {
			if(strcmp(rijeci[j], rijec) == 0){
				kontrola=1;
				break;
			} }
if(kontrola)
break;
broj_rijeci++; 
}
znak=fgetc(ulaz);
}
brojackrajeva=0;
char c=fgetc(ulaz1);
while(c!=EOF){
	if(c=='\n')brojackrajeva++;
	if(brojackrajeva==broj_rijeci) break;
	c=fgetc(ulaz1); 
}
c=fgetc(ulaz1);
while(c!=EOF){
	int n=0;
if(c>=20 && c<=30) {
	char*p=rijeci[c-20];
	n=1;
while(*p!='\0'){
fputc(*p,izlaz);
p++; }}
if(n==0)
fputc(c,izlaz);
c=fgetc(ulaz1); }
printf(""Datoteka dekompresovana.\n"");
fclose(ulaz);
fclose(izlaz);
fclose(ulaz1);
}
int main(){
	int opcija;
char s[100],p[100];
do {
	printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
scanf(""%d"",&opcija);
switch(opcija){
	case 1:
	printf(""Unesite ime ulazne datoteke: "");
	unesi(s,40);
	printf(""Unesite ime izlazne datoteke: "");
	unesi(p,40);
	kompresuj(s,p);
	break;
	case 2:
	printf(""Unesite ime ulazne datoteke: "");
	unesi(s,40);
	printf(""Unesite ime izlazne datoteke: "");
	unesi(p,40);
	dekompresuj(s,p);} }
	while(opcija!=0);
	return 0; }","#include <stdio.h>
#include <string.h>
void unesi(char niz[], int velicina)
{
    char znak=getchar();
    if(znak=='\n') znak=getchar();
    int i = 0;
    while (i<velicina-1 && znak!='\n')
    {
        niz[i]=znak;
        i++;
        znak=getchar();
    }
    niz[i]='\0';
}
/*vraca 1 ako je znak slovo*/
int slovo(int c)
{
    if(c>='A' && c<='Z' || c>='a' && c<='z')
        return 1;
    return 0;
}
/*funkcija prima 2 stringa i zamijeni ih*/
void swap(char *p, char *q)
{
    char temp[100];
    strcpy(temp,p);
    strcpy(p,q);
    strcpy(q,temp);
}
void kompresuj(char* naziv,char* naziv1)
{
    FILE *ulaz=fopen(naziv,""r"");
    FILE *ulaz1=fopen(naziv,""r"");
    FILE *izlaz=fopen(naziv1,""w"");
    char rijeci[1000][1000]={0};
    /*brojac za svaku rijec*/
    int brojac[1000]={0};
    int i, broj_rijeci=0;
    char rijec[1000];
    int duzina;
    char znak=fgetc(ulaz);
    /*dok ne dodjemo do kraja 
    datoteke uzimamo znak po znak*/
    while(znak!=EOF)
    {
        duzina=0;
        /*dok je znak slovo znaci da smo na rijeci
        pa uzmemo sva slova i ubacimo u trenutnu rijeci*/
        while(slovo(znak))
        {
            rijec[duzina++]=znak;
            znak=fgetc(ulaz);
        }
        rijec[duzina]='\0';
        if(duzina < 10 && duzina !=0)
        {
            int ima=0,j;
            /*prolazimo kroz rijeci koje smo do sada upisali*/
            for(j=0;j<broj_rijeci;j++)
            {
                /*ako se rijec vec nalazi tu 
                povecavamo broj ponavljanja*/
                if(strcmp(rijeci[j],rijec)==0)
                {
                    ima=1;
                    brojac[j]++;
                    break;
                }
            }
            /*ako je nema dodajemo je i 
            brojac postavljamo na 1*/
            if(ima!=1)
            {
                strcpy(rijeci[broj_rijeci],rijec);
                brojac[broj_rijeci++]=1;
            }
        }
        znak=fgetc(ulaz);
    }
    /*unijeli smo sve rijeci sada ih 
    sortiramo po broju ponavljanja i leksikografski*/
    int j;
    for(i=0;i<broj_rijeci;i++)
    {
        for(j=i+1;j<broj_rijeci;j++)
        {
            if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1))
            {
                int temp=brojac[j];
                brojac[j]=brojac[i];
                brojac[i]=temp;
                swap(rijeci[i],rijeci[j]);
            }
        }
    }
    int kraj=10;
    char novired='\n';
    /*treba nam 10 rijeci ako ih 
    ima manje onda to koristim*/
    if(broj_rijeci<10)
        kraj=broj_rijeci;
    /*prvo unosimo u izlaz 
    rijeci koje su u nizu*/
    for(i=0;i<kraj;i++)
    {
        fputs(rijeci[i],izlaz);
        fputc(novired,izlaz);
    }
    char c=fgetc(ulaz1);
    while(c!=EOF)
    {
        duzina=0;
        /*uzimamo rijec po rijec*/
        while(slovo(c))
        {
            rijec[duzina++]=c;
            c=fgetc(ulaz1);
        }
        rijec[duzina]='\0';
        int kontrola=0;
        if(duzina<10 && duzina!=0)
        {
            for(j=0;j<kraj;j++)
            {   
                /*ako nalazi u nizu mijenjamo 
                odgovarajucim znakom*/
                if(strcmp(rijeci[j],rijec)==0)
                {
                    char znk=j+20;
                    kontrola=1;
                    fputc(znk,izlaz);
                    fputc(c,izlaz);
                    break;
                }
            }
        }
        if(kontrola==0)
        {
            char *r=rijec;
            while(*r!='\0')
            {
                fputc(*r,izlaz);
                r++;
            }
            fputc(c,izlaz);
        }
        c=fgetc(ulaz1);
    }
    printf(""Datoteka kompresovana.\n"");
    fclose(ulaz);
    fclose(ulaz1);
    fclose(izlaz);
}
void dekompresuj(char *naziv, char *naziv1)
{
    FILE *ulaz=fopen(naziv,""r"");
    FILE *ulaz1=fopen(naziv,""r"");
    FILE *izlaz=fopen(naziv1,""w"");
    char rijeci[1000][1000]={0},rijec[1000];
    int broj_rijeci=0,duzina=0,brojackrajeva=0;
    char znak=fgetc(ulaz);
    int kontrola=0;
    while(znak!=EOF)
    {
        duzina=0;
        kontrola=0;
        while(slovo(znak))
        {
            rijec[duzina++]=znak;
            znak=fgetc(ulaz);
        }
        rijec[duzina]='\0';
        if(duzina<10 && duzina!=0)
        {
            strcpy(rijeci[broj_rijeci],rijec);
            int j;
            for(j=0;j<broj_rijeci;j++)
            {
                if(strcmp(rijeci[j],rijec)==0)
                {
                    kontrola=1;
                    break;
                }
            }
            if(kontrola)
                break;
            broj_rijeci++;
        }
        znak=fgetc(ulaz);
    }
    /*prebrojimo koliko ima rijeci*/
    brojackrajeva=0;
    char c=fgetc(ulaz1);
    while(c!=EOF)
    {
        /*brojimo nova mjesta*/
        if(c=='\n')
            brojackrajeva++;
        /*kad dodjemo do zadnje rijeci prekidamo*/
        if(brojackrajeva==broj_rijeci)
            break;
        c=fgetc(ulaz1);
    }
    c=fgetc(ulaz1);
        while(c!=EOF)
        {
            int n=0;
            /*sve znakove od 20 do 30 mijenjamo rijecima*/
            if(c>=20 && c<=30)
            {
                char *p=rijeci[c-20];
                n=1;
                /*ubacujemo rijec*/
                while(*p!='\0')
                {
                    fputc(*p,izlaz);
                    p++;
                }
            }
            /*ako nije znak prepisujem rijeci*/
            if(n==0)
                fputc(c,izlaz);
            c=fgetc(ulaz1);
        }
    printf(""Datoteka dekompresovana.\n"");
    fclose(ulaz);
    fclose(izlaz);
    fclose(ulaz1);
    
}
int main() {
    int opcija;
    char s[100], p[100];
    do
    {
        printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
        scanf(""%d"",&opcija);
        switch(opcija)
        {
            /*unosim datoteke i vrsim kompresiju/dekompresiju*/
            case 1:
                printf(""Unesite ime ulazne datoteke: "");
                unesi(s,40);
                printf(""Unesite ime izlazne datoteke: "");
                unesi(p,40);
                kompresuj(s,p);
                break;
            case 2:
                printf(""Unesite ime ulazne datoteke: "");
                unesi(s,40);
                printf(""Unesite ime izlazne datoteke: "");
                unesi(p,40);
                dekompresuj(s,p);
        }
    }while(opcija!=0);
	return 0;
}
"
1651,98,98,0,34,A2016/Z2/Z3/student8264,A2016/Z2/Z3/student6029,"#include <stdio.h>

int main() {
	int i,j,n=0,x=0,y=0;
	char koo[20][20]={{'0'},{'0'}};
	
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			koo[i][j]=' ';
		}
	}
	do {
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&n);
	if(n>0 && n<=10) 
		break;
	printf(""Pogresan unos\n"");
	} while(1);
	
	for(i=0;i<n;i++) {
		do{
			printf(""Unesite %d. tacku: "",i+1);
			scanf(""%d %d"",&x,&y);
			if(x>=0 && x<20 && y>=0 && y<20)
				break;
			printf(""Pogresan unos\n"");
		} while(1);
		koo[y][x]='*';
	}
	for(i=0;i<20;i++) {
		for(j=0;j<20;j++){
		 	printf(""%c"",koo[i][j]);
		}
	printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int i,j,n=0,x=0,y=0;
	char koo[20][20]={{'0'},{'0'}};
	
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			koo[i][j]=' ';
		}
	}
	do {
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&n);
	if(n>0 && n<=10) 
		break;
	printf(""Pogresan unos\n"");
	} while(1);
	
	for(i=0;i<n;i++) {
		do{
			printf(""Unesite %d. tacku: "",i+1);
			scanf(""%d %d"",&x,&y);
			if(x>=0 && x<20 && y>=0 && y<20)
				break;
			printf(""Pogresan unos\n"");
		} while(1);
		koo[y][x]='*';
	}
	for(i=0;i<20;i++) {
		for(j=0;j<20;j++){
		 	printf(""%c"",koo[i][j]);
		}
	printf(""\n"");
	}
	return 0;
}
"
1656,98,98,0,38,A2016/Z2/Z4/student7673,A2016/Z2/Z4/student9438,"#include <stdio.h>

int main() {
	double mat[100][100];
	 int M,N,cirk=1,i,j;int tep=1;
 
     do { 
   	printf(""Unesite M i N: "");
    scanf(""%d %d"",&M,&N);
    if( M<=0 || M>100 || N<=0 || N>100 ) printf(""Pogresan unos!\n"");
   } while( M<=0 || M>100 || N<=0 || N>100 ) ;
   
   
    printf(""Unesite elemente matrice: "");
    for(i=0;i<M;i++){
    	for(j=0;j<N;j++){
    		scanf(""%lf"",&mat[i][j]);
    	}
    }
    
    for(i=0;i<M-1;i++){
    	for(j=0;j<N-1;j++){
    		if(mat[i][j]!=mat[i+1][j+1]) tep=0;
    	}
    }
    if(tep==1)
    {
     for(i=0;i<M-1;i++){
    	
    		if(mat[i][N-1]!=mat[i+1][0])
    		{cirk=0;}
    	
    }
    }
    	if(tep==1)
    	{
    	 if (cirk==1) printf(""Matrica je cirkularna"");
    	 else printf(""Matrica je Teplicova"");
    	}
   else printf(""Matrica nije ni cirkularna ni Teplicova"");
   
	return 0;
}
","#include <stdio.h>

int main() {
	double mat[100][100];
	 int M,N,cirk=1,i,j;int tep=1;
 
     do { 
   	printf(""Unesite M i N: "");
    scanf(""%d %d"",&M,&N);
    if( M<=0 || M>100 || N<=0 || N>100 ) printf(""Pogresan unos!\n"");
   } while( M<=0 || M>100 || N<=0 || N>100 ) ;
   
   
    printf(""Unesite elemente matrice: "");
    for(i=0;i<M;i++){
    	for(j=0;j<N;j++){
    		scanf(""%lf"",&mat[i][j]);
    	}
    }
    
    for(i=0;i<M-1;i++){
    	for(j=0;j<N-1;j++){
    		if(mat[i][j]!=mat[i+1][j+1]) tep=0;
    	}
    }
    if(tep==1)
    {
     for(i=0;i<M-1;i++){
    	
    		if(mat[i][N-1]!=mat[i+1][0])
    		{cirk=0;}
    	
    }
    }
    	if(tep==1)
    	{
    	 if (cirk==1) printf(""Matrica je cirkularna"");
    	 else printf(""Matrica je Teplicova"");
    	}
   else printf(""Matrica nije ni cirkularna ni Teplicova"");
   
	return 0;
}
"
1657,99,99,0,81,A2016/Z3/Z2/student5263,A2016/Z3/Z2/student2652,"
#include <stdio.h>
#include <math.h>
#include <stdlib.h>

int square(long int x)
{
	long int k;
	k=sqrt(x);
	if(pow(k,2)==x)	{return 1;}
	else {return 0;}
}
int zbir(int x)
{
	int y,S=0;
	do {
		y=abs(x)%10; /*abs je u slucaju da je broj neg*/
		x=abs(x)/10;
		S=abs(y)+S;
	} while(x>0);
	return S;
}
/* Cilj funkcije ubaci: ""uduplamo"" niz, pa onda te vrijednosti koje smo dodali pretvorimo u zbir cifara*/
void ubaci(int *niz,int n)
{
	int i,j,r;
	i = n-1;
	while(i>=0) {
		j = n-1;
		while(j>=i) {
			*(niz+j+1)=*(niz+j);
			j--;
		}
		n=n+1; /* Povecava se velicina niza za 1*/
		i--;
	}
	i = 0;
	while(i<n) {
		if(i%2==1)
			*(niz+i)=zbir(*(niz+i));
			i++;
	}
}
int fibonachi(long int x)
{
	long int a = 5*x*x+4;
	long int b = 5*x*x-4;
	if(square(b)==1 || square(a)==1) {return 1;}
	else {return 0;}
}
int izbaci(int *niz,int n)
{
	int i,j;
	i = 0;
	while(i<n) {
		if(fibonachi(*(niz+i))==1 && *(niz+i)>0) {
			j = i;
			while(j<n-1) {
				*(niz+j)=*(niz+j+1);
				j++;
			}
			i= i -1;
			n= n -1;
			if(n==0)
			break;
		}
		i++;
	}
	return n;
}
int main()
{
int niz[20],i;
printf (""Unesite niz od 10 brojeva: "");
i = 0;
while (i<=9)
{scanf (""%d"",&niz[i]); i++;}
/* Prvo pozivamo funkciju ubaci pa tek onda izbaci jer ona na kraju ""filtrira"" i Fibonachija i zbir cifara*/
ubaci (niz,10); /* ubacujemo */
int x=izbaci(niz,20); /*izbacujemo */
printf(""Modificirani niz glasi: "");
i = 0;
while (i<x){
   printf(""%d"",niz[i]); 
   if (i == (x-1)){printf(""."");} else printf("", ""); i++;} /* samo na zadnji clan koji je odredjen sa x-1 stavljamo tacku */
	return 0;
}  ","
#include <stdio.h>
#include <math.h>
#include <stdlib.h>

int square(long int x)
{
	long int k;
	k=sqrt(x);
	if(pow(k,2)==x)	{return 1;}
	else {return 0;}
}
int zbir(int x)
{
	int y,S=0;
	do {
		y=abs(x)%10; /*abs je u slucaju da je broj neg*/
		x=abs(x)/10;
		S=abs(y)+S;
	} while(x>0);
	return S;
}
/* Cilj funkcije ubaci: ""uduplamo"" niz, pa onda te vrijednosti koje smo dodali pretvorimo u zbir cifara*/
void ubaci(int *niz,int n)
{
	int i,j,r;
	i = n-1;
	while(i>=0) {
		j = n-1;
		while(j>=i) {
			*(niz+j+1)=*(niz+j);
			j--;
		}
		n=n+1; /* Povecava se velicina niza za 1*/
		i--;
	}
	i = 0;
	while(i<n) {
		if(i%2==1)
			*(niz+i)=zbir(*(niz+i));
			i++;
	}
}
int fibonachi(long int x)
{
	long int a = 5*x*x+4;
	long int b = 5*x*x-4;
	if(square(b)==1 || square(a)==1) {return 1;}
	else {return 0;}
}
int izbaci(int *niz,int n)
{
	int i,j;
	i = 0;
	while(i<n) {
		if(fibonachi(*(niz+i))==1 && *(niz+i)>0) {
			j = i;
			while(j<n-1) {
				*(niz+j)=*(niz+j+1);
				j++;
			}
			i= i -1;
			n= n -1;
			if(n==0)
			break;
		}
		i++;
	}
	return n;
}
int main()
{
int niz[20],i;
printf (""Unesite niz od 10 brojeva: "");
i = 0;
while (i<=9)
{scanf (""%d"",&niz[i]); i++;}
/* Prvo pozivamo funkciju ubaci pa tek onda izbaci jer ona na kraju ""filtrira"" i Fibonachija i zbir cifara*/
ubaci (niz,10); /* ubacujemo */
int x=izbaci(niz,20); /*izbacujemo */
printf(""Modificirani niz glasi: "");
i = 0;
while (i<x){
   printf(""%d"",niz[i]); 
   if (i == (x-1)){printf(""."");} else printf("", ""); i++;} /* samo na zadnji clan koji je odredjen sa x-1 stavljamo tacku */
	return 0;
}  "
1660,35,35,0,30,A2016/Z3/Z2/student8724,A2016/Z3/Z2/student1390,"#include <stdio.h>
#include <math.h>
	
	int br(int i){
		int suma=0;
		while(i!=0){
			i=fabs(i);
			suma+=i%10;
			i/=10;
		}
		return suma;
	}
	
	int f(int b){
		
		int a=1, c=1, d;
		if(b==1){
			return 1;
		}
		while(2){
			d=a+c;
			if(d==b)return 1;
			if(d>b) return 0;
			a=c;
			c=d;
		}
	}
	
	
	
	int izbaci(int* n, int v){
		int i, y, j;
		for(i=0;i<v;i++){
			y=f(n[i]);
			if(y){
				for(j=i;j<v-1;j++){
					n[j]=n[j+1];
					
				}
				v--;
				i--;
			}
		}
		return v;
		
	}
	
	
	void ubaci(int* niz, int  velicina){
		int niz2[20];
		int niz3[20];
		int i;
		for(i=0; i<velicina;i++){
			niz2[i]=br(niz[i]);
		}
		int b=0;
		for(i=0;i<2*velicina;i+=2){
			niz3[i]=niz[b];
			niz3[i+1]=niz2[b];
			b++;
			if(b==velicina)break;
		}
		for(i=0;i<2*velicina;i++){
			niz[i]=niz3[i];
		}
	}
	
int main() {
			int niz[20];
			int i,broj;
			printf(""Unesite niz od 10 brojeva: "");
			for(i=0;i<10;i++){
				scanf(""%d"",&niz[i]);
				
			}
			
			ubaci(niz, 10);
			broj=izbaci(niz,20);
				printf(""Modificirani niz glasi: "");
				printf(""%d"", niz[0]);
				for(i=1;i<broj;i++){
					printf("", %d"", niz[i]);
					
				}
				printf(""."");
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

int Suma(int a){
	int b;
	a=abs(a);
	int suma=0;
	while(a!=0){
		b=a%10;
		a/=10;
		suma+=b;
	}
	return suma;
}

int Fibonacci(int broj){
	int a=1,b=1,c;
	if(broj==1)return 1;
	while(5==5){
		c=a+b;
		if(broj==c){
			return 1;
		}
		else if(c>broj){
			return 0;
		}
		a=b;
		b=c;
	}
	
}
int izbaci(int* niz, int velicina){
	int i,j;
	for(i=0;i<velicina;i++){
		if(Fibonacci(niz[i])==1){
			for(j=i;j<velicina-1;j++){
				niz[j]=niz[j+1];
			}
			velicina--;
			i--;
			
		}
		
		
	}
	return velicina;
}


void ubaci(int* niz,int velicina){
	int i,a=0,mjesto=0;
	int niz1[10],niz2[10];
	for(i=0;i<velicina;i++){
		niz1[i]=niz[i];
	}
	for(i=0;i<velicina;i++){
		a=Suma(niz1[i]);
		niz2[i]=a;
	}
	for(i=0;i<2*velicina;i+=2){
		niz[i]=niz1[mjesto];
		niz[i+1]=niz2[mjesto];
		mjesto++;
		if(velicina==mjesto)break;
	}
}

int main() {
	int niz[20];
	int i,a;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++){
		scanf(""%d"", &niz[i]);
	}
	ubaci(niz,10);
	
	a=izbaci(niz,20);
	
	printf(""Modificirani niz glasi: "");
	if(a==0)printf(""Prazan niz. \n"");
	for(i=0;i<a;i++){
		if(i!=(a-1)){
		printf(""%d, "", niz[i]);
		}
		else{
			printf(""%d."", niz[i]);
		}
	}

	return 0;
}
"
1665,95,95,0,17,A2016/Z1/Z2/student2477,A2016/Z1/Z2/student9097,"#include <stdio.h>
#include <math.h>
#define e 0.00001

int main() {

	float a1, a2, b1, b2, x, y;

	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
	
	if(fabs(a1-a2)<e && fabs(b1-b2)>e) {
		printf(""Paralelne su "");
	} else if(fabs(a1-a2)<e && fabs(b1-b2)<e) {
		printf(""Poklapaju se "");
	} else {
	x=(b2-b1)/(a1-a2);
	y=a1*x +b1;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x, y);
	}




	return 0;
}
","#include <stdio.h>
#include <math.h>
#define e 0.001

int main() {
	float a1, b1, a2, b2, y, x;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf (""%f, %f, %f, %f"", &a1, &b1, &a2, &b2);
	if (fabs(a1-a2)<e&&fabs(b1-b2)>e)
	{
		printf (""Paralelne su"");
	}
	else if (fabs(a1-a2)<e&&fabs(b1-b2)<e)
	{
		printf (""Poklapaju se"");
	}
	else
	{
		x=(b2-b1)/(a1-a2);
		y=a1*x+b1;
		printf (""Prave se sijeku u tacci (%.1f,%.1f)"", x, y);
	}
	return 0;
}
"
1668,98,98,0,54,A2016/Z3/Z2/student8004,A2016/Z3/Z2/student5468,"#include <stdio.h>
#include <stdlib.h>
	void ubaci (int niz[],int vel){
		int i,temp[100],zbir[100]={0},cifra,j=0;
			for(i=0; i<vel; i++){
			temp[i]=niz[i];
			while(niz[i]!=0){
				cifra=abs(niz[i]%10);
				niz[i]=abs(niz[i]/10);
				zbir[i]+=cifra;
			}
			niz[i]=temp[i];
		}
		for(i=1; i<vel*2; i+=2){
			for( ; j<vel; ){
			niz[i]=zbir[j];
			niz[i-1]=temp[j];
			j++;
			break;
			}
		}
	}
	int izbaci (int niz[],int vel){
		int i,fibo[40],j,k;
		fibo[0]=1;
		fibo[1]=1;
		for(i=2; i<40; i++)
			fibo[i]=fibo[i-2]+fibo[i-1];
		for(i=0; i<vel; i++){
			for(j=0; j<40; j++){
				if(niz[i]==fibo[j]){
					for(k=i; k<vel-1; k++)
						niz[k]=niz[k+1];
					vel--;
					i--;
					break;
				}
			}
		}
		return vel;
	}
int main() {
	int i,niz[20],vel;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<10; i++)
		scanf(""%d"",&niz[i]);
	vel=i;
	ubaci(niz,vel);
	vel=vel*2;
	vel=izbaci(niz,vel);
	printf(""Modificirani niz glasi: "");
	for(i=0; i<vel; i++){
		if (i==vel-1)
		printf(""%d."",niz[i]);
		else
		printf(""%d, "",niz[i]);
	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
	void ubaci (int niz[],int vel){
		int i,temp[100],zbir[100]={0},cifra,j=0;
			for(i=0; i<vel; i++){
			temp[i]=niz[i];
			while(niz[i]!=0){
				cifra=abs(niz[i]%10);
				niz[i]=abs(niz[i]/10);
				zbir[i]+=cifra;
			}
			niz[i]=temp[i];
		}
		for(i=1; i<vel*2; i+=2){
			for( ; j<vel; ){
			niz[i]=zbir[j];
			niz[i-1]=temp[j];
			j++;
			break;
			}
		}
	}
	int izbaci (int niz[],int vel){
		int i,fibo[40],j,k;
		fibo[0]=1;
		fibo[1]=1;
		for(i=2; i<40; i++)
			fibo[i]=fibo[i-2]+fibo[i-1];
		for(i=0; i<vel; i++){
			for(j=0; j<40; j++){
				if(niz[i]==fibo[j]){
					for(k=i; k<vel-1; k++)
						niz[k]=niz[k+1];
					vel--;
					i--;
					break;
				}
			}
		}
		return vel;
	}
int main() {
	int i,niz[20],vel;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<10; i++)
		scanf(""%d"",&niz[i]);
	vel=i;
	ubaci(niz,vel);
	vel=vel*2;
	vel=izbaci(niz,vel);
	printf(""Modificirani niz glasi: "");
	for(i=0; i<vel; i++){
		if (i==vel-1)
		printf(""%d."",niz[i]);
		else
		printf(""%d, "",niz[i]);
	}
	return 0;
}
"
1670,98,98,0,30,A2016/Z2/Z3/student7823,A2016/Z2/Z3/student7457,"#include <stdio.h>

int main()
{
//	printf(""Zadaća 2, Zadatak 3"");
	int i,j,k,broj, vrijednostA[10],  vrijednostB[10];
	do {
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &broj);
		if(broj<=0 || broj>10)
			printf(""Pogresan unos\n"");
	} while(broj<=0 || broj>10);
	for(i=0; i<broj; i++) {
		printf(""Unesite %d. tacku: "", i+1);
		scanf(""%d %d"", &vrijednostA[i], &vrijednostB[i]);
		if(vrijednostA[i]>19 || vrijednostA[i]<0 || vrijednostB[i]>19 || vrijednostB[i]<0) {
			i--;
			printf(""Pogresan unos\n"");
			continue;
		}
	}
	for(i=0; i<20; i++) {
		for(j=0; j<20; j++) {
			for(k=0; k<broj; k++) {
				if(vrijednostA[k]==j && vrijednostB[k]==i) {
					printf(""*"");
					j++;
				}
			}
			printf("" "");
		}
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main()
{
//	printf(""Zadaća 2, Zadatak 3"");
	int i,j,k,broj, vrijednostA[10],  vrijednostB[10];
	do {
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &broj);
		if(broj<=0 || broj>10)
			printf(""Pogresan unos\n"");
	} while(broj<=0 || broj>10);
	for(i=0; i<broj; i++) {
		printf(""Unesite %d. tacku: "", i+1);
		scanf(""%d %d"", &vrijednostA[i], &vrijednostB[i]);
		if(vrijednostA[i]>19 || vrijednostA[i]<0 || vrijednostB[i]>19 || vrijednostB[i]<0) {
			i--;
			printf(""Pogresan unos\n"");
			continue;
		}
	}
	for(i=0; i<20; i++) {
		for(j=0; j<20; j++) {
			for(k=0; k<broj; k++) {
				if(vrijednostA[k]==j && vrijednostB[k]==i) {
					printf(""*"");
					j++;
				}
			}
			printf("" "");
		}
		printf(""\n"");
	}
	return 0;
}
"
1673,96,96,0,37,A2016/Z3/Z1/student7755,A2016/Z3/Z1/student8157,"#include <stdio.h>
int daj_prost(){
		int i,brojac=0;
		static int x=1;
		do{
			x++;
			brojac=0;
			for (i=1;i<=x;i++){
		if(x%i==0){
			brojac++;
		}
		}
		}while(brojac!=2);
return x;
}
int main() {
	int a,b,sum=0,z;
	do{
		printf(""Unesite brojeve A i B: "");
		scanf(""%d%d"",&a,&b);
		if(a<=0){
			printf(""A nije prirodan broj.\n"");
		}
		else if(a>=b){
			printf(""A nije manje od B.\n"");
		}
	
		
	}while(a<=0 || a>=b); 

do{
	z=daj_prost();
	if(z>a && z<b){
		sum=sum+z;
	}
	
}while(z<b);
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b,sum);
	return 0;
}
","#include <stdio.h>
int daj_prost(){
		int i,brojac=0;
		static int x=1;
		do{
			x++;
			brojac=0;
			for (i=1;i<=x;i++){
		if(x%i==0){
			brojac++;
		}
		}
		}while(brojac!=2);
return x;
}
int main() {
	int a,b,sum=0,z;
	do{
		printf(""Unesite brojeve A i B: "");
		scanf(""%d%d"",&a,&b);
		if(a<=0){
			printf(""A nije prirodan broj.\n"");
		}
		else if(a>=b){
			printf(""A nije manje od B.\n"");
		}
	
		
	}while(a<=0 || a>=b); 

do{
	z=daj_prost();
	if(z>a && z<b){
		sum=sum+z;
	}
	
}while(z<b);
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b,sum);
	return 0;
}
"
1676,11,11,0,31,A2016/Z5/Z3/student1833,A2016/Z5/Z3/student8776,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati, minute, sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

void unesi(char niz[]) {
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<9 && znak!='\n') {
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	while(znak!='\n')
	znak=getchar();
}


int ucitaj_datoteku(struct Cas raspored[]) {
	FILE *ulaz=fopen(""raspored.dat"", ""rb+"");
	int greska=0;
	FILE *ulaz1=fopen(""raspored.dat"", ""rb+"");
	if(ulaz==NULL || ulaz1==NULL) {
		greska=1;
		return 0;
	}
  
   int ucitano=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz);
   int ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);
   fclose(ulaz);
   fclose(ulaz1);

return ucitano1                      ;
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova) {
	FILE* dat=fopen(""raspored.dat"", ""wb"");
	int vel=sizeof(struct Cas);
    int ucitano=fwrite(raspored,vel,broj_casova,dat);
	fclose(dat);
	if(ucitano>0) return 1;
	return ucitano;
	}

void ispis_rasporeda(struct Cas raspored[], int broj_casova) {
	int i, j, k, x, s, min=100, max=0;
	int indexmaxa=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].pocetak.sati<min) min=raspored[i].pocetak.sati;
		if(raspored[i].kraj.sati>max) {
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	if(raspored[indexmaxa].kraj.minute==0) max=max-1;
	printf(""\n       PON       UTO       SRI"");
	printf(""       CET       PET       SUB\n"");
	for(i=min;i<=max;i++) {
		if(i<10) printf(""%d:00   "",i);
		else printf(""%d:00  "", i);
		
		for(j=1;j<7;j++) {
			for(k=0;k<broj_casova;k++) {
				s=raspored[k].pocetak.sati; 
				if(s<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i) {
					printf(""%-10s"", raspored[k].predmet);
					break;
					x=i;
				}
			}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");
		}
		printf(""\n"");
	}
	//printf(""\n"");
}

int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas) {
	int i;
	for(i=0;i<broj_casova;i++) {
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&
		(cas.pocetak.minute+cas.pocetak.sati*60==raspored[i].pocetak.minute+raspored[i].pocetak.sati*60
		|| raspored[i].kraj.minute+raspored[i].kraj.sati*60==cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && 
		(raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.pocetak.minute+cas.pocetak.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.pocetak.minute+cas.pocetak.sati*60 || 
		cas.pocetak.minute+cas.pocetak.sati*60<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 &&
		cas.kraj.minute+cas.kraj.sati*60>raspored[i].kraj.minute+raspored[i].kraj.sati*60 ||
		raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
	}
	return 0;
}

void ispisi_dan(struct Cas raspored[], int broj_casova, int dan) {
	int brojac=1;
	int i;
	printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) {
			printf(""\n%d) %s (%02d:%02d-%02d:%02d)"", brojac,
			raspored[i].predmet, raspored[i].pocetak.sati,
			raspored[i].pocetak.minute,raspored[i].kraj.sati,
			raspored[i].kraj.minute);
			brojac++;
		}
	}
}

void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj) {
	int i, j;
	int k=0;
	int n=1;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) { k++; n++; }
		if(k==redni_broj) {
			for(j=i;j<broj_casova-1;j++) {
				raspored[j]=raspored[j+1];
			}
			if(n>0) break;
			return;
		}
	}
}

int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje) {
	if(broj_casova==200 || trajanje>10) return 0;
	int i, k, pocetak, dan, poc, moze=0;
	struct Cas cas;
	
	for(i=1;i<7;i++) 
	  for(k=9;k<=19-trajanje;k++) {
	  	dan=i;
	  	poc=k;
	  	strcpy(cas.predmet,predmet);
	  	cas.dan_u_sedmici=dan;
	  	cas.pocetak.sati=poc;
	  	cas.kraj.sati=k+trajanje;
	  	cas.pocetak.minute=cas.kraj.minute=0;
	  	if(preklapanje(raspored,broj_casova,cas)==0) {
	  	raspored[broj_casova]=cas;
	  	return 1;
	  }
}
  return 0;
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan,int redni_broj, struct Cas promjena) {
	int i;
	int k=0;
	int index=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) k++;
		if(k==redni_broj) {
			index=i;
			break;
		}
}
  raspored[index]=promjena;
}

int poziv(struct Cas raspored[], int ucit, char* ime, int br) {
	int vr=dodaj_cas(raspored,ucit,ime,br);
	return vr;
}

struct Cas zamj(struct Cas casko, int dan, int sat, int min, int sat1, int min1) {
	casko.dan_u_sedmici=dan;
	casko.pocetak.sati=sat;
	casko.pocetak.minute=min;
	casko.kraj.sati=sat1;
	casko.kraj.minute=min1;
	return casko;
	
}
int main() {
	struct Cas raspored[KAPACITET];
	int ucit=ucitaj_datoteku(raspored);
	int broj, br, rez, dan, cs, zap, m;
	char ime[100];
	for (m=0;m<KAPACITET;m++)
	{
		raspored[m].pocetak.sati=0;
		raspored[m].kraj.sati=0;
		raspored[m].dan_u_sedmici=1;
		raspored[m].pocetak.minute=0;
		raspored[m].kraj.minute=0;
		raspored[m].pocetak.sekunde=0;
		raspored[m].kraj.sekunde=0;
	}
	poc:
	printf(""1) Ispis rasporeda\n"");
	printf(""2) Dodavanje casa\n"");
	printf(""3) Promjena casa\n"");
	printf(""4) Brisanje casa\n"");
	printf(""0) Kraj rada\n"");
	printf(""Izaberite opciju: "");
	scanf(""%d"", &broj);
	switch(broj) {
		case 1:
		ispis_rasporeda(raspored,ucit);
		if(broj==0) return 0;
		break;
		
		case 2:
		printf(""Unesite naziv predmeta: "");
		unesi(ime);
		printf(""Unesite broj casova: "");
		scanf(""%d"", &br);
		if(broj==0) return 0;
		rez=poziv(raspored,ucit,ime,br);
		if(rez==0) printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"", br);
		if(rez==1) ucit++;
		break;
	
       case 4:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     ispisi_dan(raspored,ucit,dan);
     printf(""\nIzaberite koji cas zelite obrisati: "");
     scanf(""%d"", &cs);
     obrisi_cas(raspored,ucit,dan,cs);
     if(broj==0) return 0;
     printf(""Cas obrisan\n"");
     ucit--;
     break;
     
     case 3:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     int sat, min;
     char z;
     int sat1, min1;
     char z1;
     ispisi_dan(raspored,ucit,dan);
     if(broj==0) return 0;
     printf(""\nIzaberite koji cas zelite promijeniti: "");
     scanf(""%d"", &cs);
     printf(""Naziv predmeta: "");
     unesi(ime);
     printf(""Vrijeme pocetka: "");
     scanf(""%d"", &sat);
     scanf(""%c"", &z);
     scanf(""%d"", &min);
     printf(""Vrijeme zavrsetka: "");
     scanf(""%d"", &sat1);
     scanf(""%c"", &z1);
     scanf(""%d"", &min1);
     struct Cas casko={ime,dan,{sat,min,0},{sat1,min1,0}};
     strcpy(casko.predmet,ime);
     casko=zamj(casko,dan,sat,min,sat1,min1);
     promijeni_cas(raspored,ucit,dan,cs,casko);
     break;
     
     case 0:
     zap=zapisi_datoteku(raspored,ucit);
     return 0;
	}
	if(broj!=0) goto poc;
	return 0;
}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme{
	int sati, minute, sekunde;
};

struct Cas{
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};
char unesi(char niz[], int velicina){
	char znak=getchar();
	int i=0;
	if(znak=='\n') znak=getchar();
	
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
	
	return znak;
}
void ocisti(char znak){
	while(znak!='\n')
	znak=getchar();
		
}
int ucitaj_datoteku(struct Cas raspored[]){
	FILE*ulaz=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL){
		return 0;
	}
	int ucitano=fread(raspored,sizeof(struct Cas),KAPACITET,ulaz);
	fclose(ulaz);
	return ucitano;
}
void ispis_rasporeda(struct Cas raspored[],int broj_casova){
	int i,j,pocetak=9,kraj=0,k,ispisan=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>=kraj){
		kraj=raspored[i].kraj.sati;
			if(raspored[i].kraj.minute==0) kraj--;
		}
		if(raspored[i].pocetak.sati<pocetak)
		pocetak=raspored[i].pocetak.sati;
	}
	char dani[][4]={""PON"", ""UTO"", ""SRI"", ""CET"", ""PET"", ""SUB""};
	printf(""\n"");
	for(i=0; i<6;i++)
		printf(""%10s"", dani[i]);
	printf(""\n"");
	for(i=pocetak;i<=kraj; i++){
		if(i<10)
		printf(""%d:00   "", i);
		else 
		printf(""%d:00  "", i);
		
		for(j=0; j<6; j++){
			ispisan=0;
			for(k=0;k<broj_casova;k++){
				if(raspored[k].dan_u_sedmici==j+1 && raspored[k].pocetak.sati<=i && raspored[k].kraj.sati>=i){
					printf(""%-10s"", raspored[k].predmet);
					ispisan=1;
					break;
				}
			}
			if(ispisan==0)
			printf(""          "");
		}
		printf(""\n"");
	}
}
void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
	int i=0;
	printf(""Uneseni su casovi: "");
	int k=1;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan){
			int sat=raspored[i].pocetak.sati;
			int min=raspored[i].pocetak.minute;
		
			printf(""\n%d) %s ("", k++, raspored[i].predmet);
			if(sat<10) printf(""0"");
			printf(""%d:"",sat);
			if(min<10) printf(""0"");
			printf(""%d-"", min);
			if(raspored[i].kraj.sati<10) printf(""0"");
			printf(""%d:"", raspored[i].kraj.sati);
			if(raspored[i].kraj.minute<10) printf(""0"");
			printf(""%d)"", raspored[i].kraj.minute);
			
		}
	}
}
void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,j=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) j++;
		if(redni_broj==j){
			for(;i<broj_casova-1; i++)
			raspored[i]=raspored[i+1];
			break;
		}
		
	}
}
int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){
	int i=0;
	for(i=0; i<broj_casova; i++){
		if(cas.dan_u_sedmici==raspored[i].dan_u_sedmici){
			if(raspored[i].pocetak.sati==cas.pocetak.sati || raspored[i].kraj.sati==cas.kraj.sati)
			return 1;
			if(raspored[i].pocetak.sati==cas.kraj.sati && raspored[i].pocetak.minute<cas.kraj.minute)
			return 1;
			if(raspored[i].kraj.sati==cas.pocetak.sati && raspored[i].kraj.minute>cas.pocetak.minute)
			return 1;
			if(raspored[i].pocetak.sati<cas.pocetak.sati && raspored[i].kraj.sati>cas.kraj.sati)
			return 1;
			if(raspored[i].pocetak.sati>cas.pocetak.sati && raspored[i].kraj.minute<cas.kraj.minute)
			return 1;
			if(raspored[i].pocetak.sati> cas.pocetak.sati && raspored[i].pocetak.sati<cas.kraj.sati)
			return 1;
			if(raspored[i].kraj.sati> cas.pocetak.sati && raspored[i].pocetak.sati < cas.kraj.sati)
			return 1;
			
		}
	}
	return 0;
}
int dodaj_cas (struct Cas raspored[], int broj_casova, const char*predmet, int trajanje){
	if(broj_casova==200) return 0;
	int i, j, preklop;
	for(i=0; i<6; i++)
	for(j=9; j<=19-trajanje; j++){
		struct Cas cas={"""", i+1,{j,0,0},{j+trajanje,0,0}};
		char *q=cas.predmet, *p=(char*)predmet;
		while(*q++=*p++);
		preklop=preklapanje(raspored,broj_casova, cas);
		if(preklop==0){
		raspored[broj_casova]=cas;
		return 1;
	}
		
	}
	return 0;
	
}
void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
	int i, redni=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni) 
		raspored[i]=promjena;
	}
}
int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	FILE*ulaz=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL){
		printf(""Otvaranje datoteke raspored nije uspjelo."");
		return 0;
	}
	int zapisano=fwrite(raspored, sizeof(struct Cas), broj_casova,ulaz);
	fclose(ulaz);
	if(zapisano>=1) return 1;
	else
	return 0;
}


int main() {
	int opcija,broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do{
		printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
		scanf(""%d"", &opcija);
		if(opcija==0)
		zapisi_datoteku(raspored, broj_casova);
		if(opcija==1)
		ispis_rasporeda(raspored, broj_casova);
		if(opcija==2){
			int br_casova, dodan=0;
			char predmet[10];
			printf(""Unesite naziv predmeta: "");
			ocisti(unesi(predmet, 10));
			printf(""Unesite broj casova: "");
			scanf(""%d"",  &br_casova);
			dodan=dodaj_cas(raspored,broj_casova,predmet, br_casova);
			if(dodan==1)
			broj_casova++;
			else
			printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"", br_casova);
		}
		if(opcija==3){
			struct Cas promjena;
			int dan, redni;
		
			printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
			scanf(""%d"", &dan);
		
			ispisi_dan(raspored, broj_casova, dan);
			promjena.dan_u_sedmici=dan;
		
			printf(""\nIzaberite koji cas zelite promijeniti:  "");
			scanf(""%d"", &redni);
		
			printf(""Naziv predmeta: "");
		
			char predmet[10];
			ocisti(unesi(predmet, 10));
			char*q=promjena.predmet, *p=predmet;
			while(*q++=*p++);
			char znak;
			printf(""Vrijeme pocetka: "");
			scanf(""%d%c%d"",&promjena.pocetak.sati, &znak, &promjena.pocetak.minute);
			
			printf(""Vrijeme zavrsetka: "");
			scanf(""%d%c%d"",&promjena.kraj.sati, &znak, &promjena.kraj.minute);
			
			promijeni_cas(raspored,broj_casova,dan,redni,promjena);
			
			
		}
		if(opcija==4){
			int dan, redni;
			printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
			scanf(""%d"", &dan);
			ispisi_dan(raspored,broj_casova, dan);
			printf(""\nIzaberite koji cas zelite obrisati: "");
			scanf(""%d"", &redni);
			obrisi_cas(raspored, broj_casova, dan, redni);
			printf("" Cas obrisan\n"");
			broj_casova--;
			
		}
	}
	while(opcija!=0);
	
	return 0;
}
"
1677,59,59,0,81,A2016/Z1/Z1/student9624,A2016/Z1/Z1/student5304,"#include <stdio.h>
int main() {
   double  tp1,tp2,tpr,tzd,tzi,bp1,bp2,bpr,bzd,bzi,mp1,mp2,mpr,mzd,mzi;
   printf(""Unesite bodove za Tarika:"");
    printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &tp1);
	if(tp1<0 || tp1>20)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&tp2);
	if(tp2<0 || tp2>20)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""Prisustvo: "");
	scanf(""%lf"",&tpr);
	if(tpr<0 || tpr>10)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""Zadace: "");
	scanf(""%lf"",&tzd);
	if( tzd<0 || tzd>10)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&tzi);
	if( tzi<0 || tzi>40)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""Unesite bodove za Bojana:"");
    printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &bp1);
	if(bp1<0 || bp1>20)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&bp2);
	if(bp2<0 || bp2>20)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""Prisustvo: "");
	scanf(""%lf"",&bpr);
	if(bpr<0 || bpr>10)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""Zadace: "");
	scanf(""%lf"",&bzd);
	if(bzd<0 || bzd>10)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&bzi);
	if( bzi<0 || bzi>40)
{	printf(""Neispravan broj bodova"");
	return 0;
}
    printf(""Unesite bodove za Mirzu:"");
    printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &mp1);
	if( mp1<0 || mp1>20)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&mp2);
	if( mp2<0 || mp2>20)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""Prisustvo: "");
	scanf(""%lf"",&mpr);
	if(mpr<0 || mpr>10)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""Zadace: "");
	scanf(""%lf"",&mzd);
	if( mzd<0 || mzd>10)
{	printf(""Neispravan broj bodova"");
	return 0;
}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&mzi);
	 if(  mzi<0 || mzi>40) 
{	printf(""Neispravan broj bodova"");
return 0;
	
}
	
else
{
	
 float uk1=0.0,uk2=0.0,uk3=0.0;
    uk1=tp1+tp2+tpr+tzd+tzi;
	uk2=bp1+bp2+bpr+bzd+bzi;
	uk3=mp1+mp2+mpr+mzd+mzi;

	if(uk1<55 && uk2<55 && uk3<55)
     	printf(""Nijedan student nije polozio."");
	else    if((uk1<55 && uk2>55 && uk3>55) || (uk1>55 && uk2<55 && uk3>55) || (uk1>55 && uk2>55 && uk3<55))
    	printf(""Dva studenta su polozila."");
	else    if((uk1>=55 && uk2<55 && uk3<55) || (uk1<55 && uk2>=55 && uk3<55) || (uk1<55 && uk2<55 && uk3>=55))
    	printf(""Jedan student je polozio."");
	else
	{    if(uk1>55 && uk2>55 && uk3>55)
    	printf(""Sva tri studenta su polozila."");
          
   	if(uk1>=55 && uk1<65 && uk2>=55 && uk2<65 && uk3>=55 && uk3<65)
    	printf(""\nSva tri studenta imaju istu ocjenu."");
    else	if(uk1>=65 && uk1<75 && uk2>=65 && uk2<75 && uk3>=65 && uk3<75)
    	printf(""\nSva tri studenta imaju istu ocjenu."");
    else	if(uk1>=75 && uk1<85 && uk2>=75 && uk2<85 && uk3>=75 && uk3<85)
    	printf(""\nSva tri studenta imaju istu ocjenu."");
    else	if(uk1>=85 && uk1<92 && uk2>=85 && uk2<92 && uk3>=85 && uk3<92)
    	printf(""\nSva tri studenta imaju istu ocjenu."");
    else	if(uk1>=92 && uk1<100 && uk2>=92 && uk2<100 && uk3>=92 && uk3<100)
    	printf(""\nSva tri studenta imaju istu ocjenu."");
    else	if(uk1>=55 && uk1<65 && uk2>=55 && uk2<65 && uk3>=65)  
    	printf(""\nDva od tri studenta imaju istu ocjenu."");
	else    if(uk1>=55 && uk1<65 && uk3>=55 && uk3<65 && uk2>=65)
     	printf(""\nDva od tri studenta imaju istu ocjenu."");
    else	if((uk1>=65 && uk1<75 && uk2>=65 && uk2<75) && (uk3>=75 || uk3<65)) 
    	printf(""\nDva od tri studenta imaju istu ocjenu."");
    else    if((uk1>=65 && uk1<75 && uk3>=65 && uk3<75) &&( uk2>=75 || uk2<65))
        printf(""\nDva od tri studenta imaju istu ocjenu."");
	else	if((uk1>=75 && uk1<85 && uk2>=75 && uk2<85) && (uk3>=85 || uk3<75))  
    	printf(""\nDva od tri studenta imaju istu ocjenu."");
	else    if((uk1>=75 && uk1<85 && uk3>=75 && uk3<85) && (uk2>=85 || uk2<75))
    	printf(""\nDva od tri studenta imaju istu ocjenu."");
    else	if((uk1>=85 && uk1<92 && uk2>=85 && uk2<92) && (uk3>=92|| uk3<85) )  
    	printf(""\nDva od tri studenta imaju istu ocjenu."");	
    else    if((uk1>=85 && uk1<92 && uk3>=85 && uk3<92) && (uk2>=92 || uk2<85))
        printf(""\nDva od tri studenta imaju istu ocjenu."");	
    else	if(uk1>=92 && uk1<=100 && uk2>=92 && uk2<=100 && uk3<92) 
    	printf(""\nDva od tri studenta imaju istu ocjenu."");	
	else    if (uk1>=92 && uk1<=100 && uk3>=92 && uk3<=100 &&  uk2<92)
     	printf(""\nDva od tri studenta imaju istu ocjenu."");
    else	if(uk2>=55 && uk2<65 && uk3>=55 && uk3<65 && uk1>=65)  
    	printf(""\nDva od tri studenta imaju istu ocjenu."");
    else	if((uk2>=65 && uk2<75 && uk3>=65 && uk3<75) && (uk1>=75 || uk1<65)) 
    	printf(""\nDva od tri studenta imaju istu ocjenu."");
	else	if((uk2>=75 && uk2<85 && uk3>=75 && uk3<85) && (uk1>=85 || uk1<75))  
    	printf(""\nDva od tri studenta imaju istu ocjenu."");
    else	if((uk2>=85 && uk2<92 && uk3>=85 && uk3<92) && (uk1>=92|| uk1<85) )  
    	printf(""\nDva od tri studenta imaju istu ocjenu."");	
    else	if(uk3>=92 && uk3<=100 && uk2>=92 && uk2<=100 && uk1<92) 
    	printf(""\nDva od tri studenta imaju istu ocjenu."");	
    else    
        printf(""\nSvaki student ima razlicitu ocjenu."");  

		
	}
		
	
}



	return 0;
}
","#include <stdio.h>

int main() {
	double pp1, pp2, pp3;
	double dp1, dp2, dp3;
	double p1, p2, p3;
	double z1, z2, z3;
	double zi1, zi2, zi3;
	double t, b, m;

	printf(""Unesite bodove za Tarika: "");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &pp1);
	if(pp1<0 || pp1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &dp1);
	if(dp1<0 || dp1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	printf(""Prisustvo: "");
	scanf(""%lf"", &p1);
	if(p1<0 || p1>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else 
	printf(""Zadace: "");
	scanf(""%lf"", &z1);
	if(z1<0 || z1>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else 
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &zi1);
	if(zi1<0 || zi1>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	
	printf(""Unesite bodove za Bojana: "");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &pp2);
	if(pp2<0 || pp2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &dp2);
	if(dp2<0 || dp2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	printf(""Prisustvo: "");
	scanf(""%lf"", &p2);
	if(p2<0 || p2>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	printf(""Zadace: "");
	scanf(""%lf"", &z2);
	if(z2<0 || z2>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &zi2);
	if(zi2<0 || zi2>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	
	printf(""Unesite bodove za Mirzu: "");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &pp3);
	if(pp3<0 || pp3>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &dp3);
	if(dp3<0 || dp3>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	printf(""Prisustvo: "");
	scanf(""%lf"", &p3);
	if(p3<0 || p3>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	printf(""Zadace: "");
	scanf(""%lf"", &z3);
	if(z3<0 || z3>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &zi3);
	if(zi3<0 || zi3>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	} else
	
	t=pp1+dp1+p1+z1+zi1;
	b=pp2+dp2+p2+z2+zi2;
	m=pp3+dp3+p3+z3+zi3;
	
	
	if(t<55 && b<55 && m<55) {
		printf(""Nijedan student nije polozio."");
	}
	if((t>=55 && b<55 && m<55) || (t<55 && b>=55 && m<55) || (t<55 && b<55 && m>=55)) {
		printf(""Jedan student je polozio."");
	}
	if((t>=55 && b>=55 && m<55) || (t>=55 && b<55 && m>=55) || (t<55 && b>=55 && m>=55)) {
		printf(""Dva studenta su polozila."");
	}
	if(t>=55 && b>=55 && m>=55) {
		printf(""Sva tri studenta su polozila."");
	}
	
	
	if((t>=55 && t<65) && (b>=55 && b<65) && (m>=55 && m<65)) {
		printf(""\nSva tri studenta imaju istu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=65 && b<75) && (m>=65 && m<75)) {
		printf(""\nSva tri studenta imaju istu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=75 && b<85) && (m>=75 && m<85)) {
		printf(""\nSva tri studenta imaju istu ocjenu."");
	} else 
	if((t>=85 && t<92) && (b>=85 && b<92) && (m>=85 && m<92)) {
		printf(""\nSva tri studenta imaju istu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=92 && b<=100) && (m>=92 && m<=100)) {
		printf(""\nSva tri studenta imaju istu ocjenu."");
	} else
	
	
	if((t>=55 && t<65) && (b>=55 && b<65) && m>=65) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else
	if((t>=55 && t<65) && (m>=55 && m<65) && b>=65) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else 
	if((b>=55 && b<65) && (m>=55 && m<65) && t>=65) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=65 && b<75) && (m>=75 || (m>=55 && m<65))) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else 
	if((t>=65 && t<75) && (m>=65 && m<75) && (b>=75 || (b>=55 && b<65))) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else
	if((m>=65 && m<75) && (b>=65 && b<75) && (t>=75 || (t>=55 && t<65))) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else 
	if((t>=75 && t<85) && (b>=75 && b<85) && (m>=85 || (m>=55 && m<75))) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else
	if((t>=75 && t<85) && (m>=75 && m<85) && (b>=85 || (b>=55 && b<75))) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else 
	if((m>=75 && m<85) && (b>=75 && b<85) && (t>=85 || (t>=55 && t<75))) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else 
	if((t>=85 && t<92) && (b>=85 && b<92) && (m>=92 || (m>=55 && m<85))) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else
	if((t>=85 && t<92) && (m>=85 && m<92) && (b>=92 || (b>=55 && b<85))) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else 
	if((m>=85 && m<92) && (b>=85 && b<92) && (t>=92 || (t>=55 && t<85))) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else 
	if((t>=92 && t<=100) && (b>=92 && b<=100) && (m>=55 && m<92)) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else 
	if((t>=92 && t<=100) && (m>=92 && m<=100) && (b>=55 && b<92)) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	} else 
	if((m>=92 && m<=100) && (b>=92 && b<=100) && (t>=55 && t<92)) {
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	}
	
	if((t>=55 && t<65) && (b>=65 && b<75) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=55 && t<65) && (b>=65 && b<75) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=55 && t<65) && (b>=65 && b<75) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=55 && t<65) && (b>=75 && b<85) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=55 && t<65) && (b>=75 && b<85) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=55 && t<65) && (b>=75 && b<85) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else 
	if((t>=55 && t<65) && (b>=85 && b<92) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else 
	if((t>=55 && t<65) && (b>=85 && b<92) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else 
	if((t>=55 && t<65) && (b>=85 && b<92) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else 
	if((t>=55 && t<65) && (b>=92 && b<=100) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else 
	if((t>=55 && t<65) && (b>=92 && b<=100) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else 
	if((t>=55 && t<65) && (b>=92 && b<=100) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else 
	if((t>=65 && t<75) && (b>=55 && b<65) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=55 && b<65) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=55 && b<65) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=75 && b<85) && (m>=55 && m<55)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=75 && b<85) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=75 && b<85) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=85 && b<92) && (m>=55 && m<65)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=85 && b<92) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=85 && b<92) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=92 && b<=100) && (m>=55 && m<65)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=92 && b<=100) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=65 && t<75) && (b>=92 && b<=100) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=55 && b<65) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=55 && b<65) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=55 && b<65) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=75 && b<85) && (m>=55 && m<65)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=75 && b<85) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=75 && b<85) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=85 && b<92) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=85 && b<92) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=85 && b<92) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=92 && b<=100) && (m>=55 && m<65)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=92 && b<=100) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=75 && t<85) && (b>=92 && b<=100) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=55 && b<65) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=55 && b<65) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=55 && b<65) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=65 && b<75) && (m>=55 && m<65)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=65 && b<75) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=65 && b<75) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=75 && b<85) && (m>=55 && m<65)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=75 && b<85) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=75 && b<85) && (m>=92 && m<=100)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=92 && b<=100) && (m>=55 && m<65)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=92 && b<=100) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=85 && t<92) && (b>=92 && b<=100) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=55 && b<65) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=55 && b<65) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=55 && b<65) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=65 && b<75) && (m>=55 && m<65)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=65 && b<75) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=65 && b<75) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=75 && b<85) && (m>=55 && m<65)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=75 && b<85) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=75 && b<85) && (m>=85 && m<92)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=85 && b<92) && (m>=55 && m<65)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=85 && b<92) && (m>=65 && m<75)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} else
	if((t>=92 && t<=100) && (b>=85 && b<92) && (m>=75 && m<85)) {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	} 

	return 0;
}
"
1709,91,91,0,68,A2016/Z3/Z3/student3483,A2016/Z3/Z3/student7697,"#include <stdio.h>

int main() {
	int a[200][200], m, n, i, j, k, t, jednak;
	
	/* Unos dimenzija matrice */
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"", &m, &n);
		if(m<1 || m>200 || n<1 || n>200)
			printf(""Brojevi nisu u trazenom opsegu.\n"");
	}
	while(m<1 || m>200 || n<1 || n>200);
	
	/* Unos elemenata matrice*/
	printf(""Unesite elemente matrice: "");
	for(i=0; i<m; i++)
		for(j=0; j<n; j++)
			scanf(""%d"", &a[i][j]);
			
	/* Izbacivanje redova koji se ponavljaju */
	for(i=0; i<m; i++)
		for(k=i+1; k<m; k++){
			jednak=1;
				for(j=0; j<n; j++)
					if(a[i][j]!=a[k][j]){
						jednak=0;
						break;
				}
			if(jednak==1){
				for(t=k; t<m-1; t++)
					for(j=0; j<n; j++)
						a[t][j]=a[t+1][j];
				m--;
				k--;
			}
		}
		
	/* Izbacivanje kolona koje se ponavljaju */
	for(j=0; j<n; j++)
		for(k=j+1; k<n; k++){
			jednak=1;
				for(i=0; i<m; i++)
					if(a[i][j]!=a[i][k]){
						jednak=0;
						break;
					}
				if(jednak==1){
					for(t=k; t<n-1; t++)
						for(i=0; i<n; i++)
							a[i][t]=a[i][t+1];
					n--;
					k--;
			}
		}
		
	/* Ispis matrice */
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0; i<m; i++){
		for(j=0; j<n; j++)
			printf(""%5d"", a[i][j]);
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main() {
	
	int matrica[200][200], M, N;
	int i,j,k,z, jednaki;
	
	do{
	printf(""Unesite brojeve M i N: "");
	scanf(""%d %d"", &M, &N);
	if(M<1 || M>200 || N<1 || N>200)
		printf(""Brojevi nisu u trazenom opsegu.\n"");
	} while(M<1 || M>200 || N<1 || N>200);
	
	printf(""Unesite elemente matrice: "");
	
	for(i=0; i<M; i++) {
		for(j=0; j<N; j++)
			scanf(""%d"", &matrica[i][j]);
		
	}
	
	for(i=0; i<M; i++) {
		for(j=i+1; j<M; j++) {
			jednaki=1;
			for(k=0; k<N; k++) {
				if(matrica[i][k]!=matrica[j][k]) {
					jednaki=0;
					break;
				}
				
			}
			if(jednaki) {
				for(z=j; z<M-1; z++) {
					for(k=0; k<N; k++)
						matrica[z][k]=matrica[z+1][k];
				}
				M--;
				j--;
			}
			
		}
	}
	
	for(i=0; i<N; i++) {
		for(j=i+1; j<N; j++) {
			jednaki=1;
			for(k=0; k<M; k++) {
				if(matrica[k][i]!=matrica[k][j]) {
					jednaki=0;
					break;
				}
				
			}
			if(jednaki) {
				for(z=j; z<N-1; z++) {
					for(k=0; k<M; k++)
						matrica[k][z]=matrica[k][z+1];
				}
				N--;
				j--;
			}
			
		}
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0; i<M; i++) {
		for(j=0; j<N; j++) 
			printf(""%5d"", matrica[i][j]);
		printf(""\n"");
	}
	
return 0;
}
"
1714,97,97,0,20,A2016/Z2/Z1/student1422,A2016/Z2/Z1/student2335,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

int main() {
	int n,a,c,x=0,i=0,y;
	printf(""Unesite broj: "");
	scanf(""%d"",&n);
	if (n<0)
	n=abs(n);
	else if(n>-10 && n<10){
		printf(""0"");
		return 0;
	}
	do{
	a=n%10;
	n/=10;
	c=abs(a-(n%10));
	y=pow(10,i);
	x+=c*y;
	i++;
	}while (n>9);
	printf(""%d"",x);
	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>

int main() {
	int n,a,c,x=0,i=0,y;
	printf(""Unesite broj: "");
	scanf(""%d"",&n);
	if (n<0)
	n=abs(n);
	else if(n>-10 && n<10){
		printf(""0"");
		return 0;
	}
	do{
	a=n%10;
	n/=10;
	c=abs(a-(n%10));
	y=pow(10,i);
	x+=c*y;
	i++;
	}while (n>9);
	printf(""%d"",x);
	return 0;
}
"
1727,86,86,0,105,A2016/Z4/Z3/student8774,A2016/Z4/Z3/student8631,"#include <stdio.h>

int provjera(char* p,char* q){
    int jesu=1;
    while(*q!='\0'){
        if(*q++!=*p++){
            jesu=0;
            break;
        }
        if(*q=='\0' && (*p!=' ' && *p!='\0')){
            jesu=0;
            break;
        }
    }
    return jesu;
}

void zamjena(char* rec,char* rijec){
    while(*rijec!='\0'){
        *rec++=*rijec++;
    }
    rec++;
}

int dict(char** rijeci,char** zamjene,int broj_rijeci){
    int i=0,jesu=1;
    char* s,* s1;
    for(i=0;i<broj_rijeci;i++){
        s=rijeci[i];
        s1=zamjene[i];
        while(*s!='\0' || *s1!='\0'){
            if(*s++!=*s1)
            jesu=0;
        }
        if(jesu==0) break;
    }
    return jesu;
}
char* zamjena_rijeci(char* tekst,char** rijeci,char** zamjene,int broj_rijeci){
    char*p=tekst;
    char*s,*t,*k,*h;
    int i,brojac;
    if (dict(rijeci,zamjene,broj_rijeci))
    return tekst;
    while(*p!='\0'){
        if(p==tekst || *(p-1)==' '){
            while(*p==' ') p++;
            t=p;
            for(i=0;i<broj_rijeci;i++){
                brojac=0;
                p=t;
                s=rijeci[i];
                
                if (provjera(p,s)){
                    k=t;
                    while(*p!='\0' && *p!=' ')
                    p++;
                    
                    while(*p!='\0'){
                        *k++=*p++;
                    }
                    *k='\0';
                    p=t;
                    s=zamjene[i];
                    while(*s!='\0'){
                        brojac++;
                        s++;
                    }
                    h=k+brojac;
                    p--;
                    while(k!=p){
                        *h--=*k--;
                    }
                    s=zamjene[i];
                    zamjena(t,s);
                }
            }
        }
        p++;
    }
    return tekst;
}

int main() {
    char tekst[100]=""beli sneg je pokrio beli breg"";
    char* rijeci[2]={""beli"",""sneg""};
    char* zamjene[2]={""bijeli"",""snijeg""};
    printf(""%s"",zamjena_rijeci(tekst,rijeci,zamjene,2));
    return 0;
}
","#include <stdio.h>
#include <ctype.h>


int JesuIsti(char *p,char *temp)
{
	int	isti=1;

		while(*temp!='\0')
		{
			if(*temp++!=*p++){isti=0;break;}
			if(*temp=='\0' && (*p!=' ' && *p!='\0')){isti=0;break;}
		}
	return isti;
		
}

void ZamijeniRijeci(char *recenica,char *rijec)
{
	while(*rijec!='\0')
	{
		*recenica++=*rijec++;
	}
	recenica++;
}

int Rjecnik(char **rijeci,char **zamjene,int broj_rijeci)
{
	int i,isti=1;
	char *pom,*pom1;
	
		for(i=0;i<broj_rijeci;i++)
		{
			pom=rijeci[i];
			pom1=zamjene[i];
			while(*pom!='\0' || *pom1!='\0')
			{
				if(*pom++!=*pom1++)isti=0;
			}
			if (isti==0) break;
		}
		return isti;
}


char* zamjena_rijeci(char* tekst, char** rijeci,char** zamjene, int broj_rijeci)
{
	char *p=tekst;
	char *temp,*pt,*kt,*ht;
	int i,br;
	     
	     
	    if(Rjecnik(rijeci,zamjene,broj_rijeci)) return tekst;
	     
		while(*p!='\0')
		{
			if(p==tekst || *(p-1)==' ')
			{
				while(*p==' ') p++;
				pt=p;
				
				for(i=0;i<broj_rijeci;i++)
				{	
					br=0;
					p=pt;
					temp=rijeci[i];
					
					if(JesuIsti(p,temp))
					{	
						kt=pt;
						
						while(*p!='\0' && *p!=' ') p++;
						
						
						while(*p!='\0')
						{
							*kt++=*p++;
						}						
						*kt='\0';
						
						p=pt;
						temp=zamjene[i];
						while(*temp!='\0')
						{
							br++;
							temp++;
						}
					
						ht=kt+br;
						p--;
						
						while(kt!=p)
						{
							*ht--=*kt--;
						}
						
						temp=zamjene[i];
						ZamijeniRijeci(pt,temp);			
					}
				}
			}
			p++;
				
		}
	return tekst;
}


int main() {
	
	char* rijeci[3] = { ""proba"", ""Ovo"", ""je"" };
	char* zamjene[3] = { """", """", """" };
	char tekst[100] = ""Ovo je proba"";
	printf(""'%s'"", zamjena_rijeci(tekst, rijeci, zamjene, 3));
	
	return 0;
}
"
1734,94,94,0,21,A2016/Z1/Z2/student9569,A2016/Z1/Z2/student3515,"#include <stdio.h>

int main() {
	float a1, b1, a2, b2, x, y, D, R;
		printf(""Unesite a1,b1,a2,b2: "");
		scanf(""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
		 
		 
		 	if((a1==a2)&&(b1!=b2)) {
			printf(""Paralelne su"");	}
		
			else if(b1==b2) {
				printf(""Poklapaju se"");
				}
			
		  
				if((a1!=a2) && (b1!=b2)) {
				D=b2-b1;
				R=a1-a2;
				x= D/R;
	  	        y= a1*x + b1; 
	  	        
	  	        printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x,y);
			}
			return 0;
			
			
				
			
			
			
			

 }","#include <stdio.h>

int main() {
	float a1, b1, a2, b2, x, y, D, R;
		printf(""Unesite a1,b1,a2,b2: "");
		scanf(""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
		 
		 
		 	if((a1==a2)&&(b1!=b2)) {
			printf(""Paralelne su"");	}
		
			else if(b1==b2) {
				printf(""Poklapaju se"");
				}
			
		  
				if((a1!=a2) && (b1!=b2)) {
				D=b2-b1;
				R=a1-a2;
				x= D/R;
	  	        y= a1*x + b1; 
	  	        
	  	        printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x,y);
			}
			return 0;
			
			
				
			
			
			
			

 }"
1745,61,61,0,26,A2016/Z3/Z1/student1313,A2016/Z3/Z1/student4036,"#include <stdio.h>

int daj_prost () {
	static int br=2;
	int i;
	 while(1) {
	 	int prost=1;
	 	for (i=2;i<br;i++) {
	 		if(br%i==0){
	 			prost=0;
	 		}
	 	}
	 if (prost==0){
	 	br++;
	 }
	 else break;
	 }
	  br++;
	  return br-1;
}

int main() {
	int A,B,suma=0;
	do {
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"",&A,&B);
		if (A<=0) printf (""A nije prirodan broj.\n"");
		else if (A>=B) printf (""A nije manje od B.\n"");
		else break;
	} while (1);
	
	while(1){
		int C;
		  C=daj_prost();
		if (C>A && C<B) 
		  suma=suma+C;
	    if (C>=B) break;
	}
printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
	return 0;
}
","#include <stdio.h>
int daj_prost (){
	int i;
	static int broj = 2;
	while (1) {
		int pr = 1;
		for (i = 2; i < broj; i++){
			if (broj % i == 0){
				pr = 0;
			}
		}
		if (pr == 0){
				broj++;
		}
		else break;
	}
	broj++;
	return broj-1;
}

int main() {
	int A, B;
	int suma = 0;
	do {
		printf (""Unesite brojeve A i B: "");
		scanf (""%d %d"",&A,&B);
		if (A <= 0) printf (""A nije prirodan broj.\n"");
		else if (A >= B) printf(""A nije manje od B.\n"");
		else break;
	} while (1);
	while(1){
		int temp = daj_prost();
		if(temp > A && temp < B)
			suma += temp;
		if(temp >= B)
			break;
		
	}
   	printf (""Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
	return 0;
}
"
1755,52,52,0,43,A2016/Z3/Z2/student4661,A2016/Z3/Z2/student3557,"#include <stdio.h>

int suma(int a)
{
	int suma=0;
	while(a!=0) {
		suma+=a%10;
		a/=10;
	}
	if(suma<0)
		suma*=-1;
	return suma;
}

void ubaci(int *niz, int vel)
{
	int i, j=0, broj, niz2[60];
	for(i=0; i<vel; i++) {
		niz2[j]=niz[i];
		j++;
		broj=niz[i];
		niz2[j]=suma(broj);
		j++;
	}
	for(i=0; i<2*vel; i++)
		niz[i]=niz2[i];
}

int izbaci(int *niz, int vel){
	int fib[300], i, j, k;
	fib[0]=1;
	fib[1]=1;
	for(i=2; i<300; i++)
		fib[i]=fib[i-1]+fib[i-2];
	for(i=0; i<vel; i++)
		for(j=1; j<300; j++)
			if(niz[i]==fib[j]) {
				for(k=i; k<vel-1; k++)
					niz[k]=niz[k+1];
				vel--;
				j--;
				i--;
				break;
			}
	}

int main() {
		int vel=10, niz[60], i=0;
		printf(""Unesite niz od 10 brojeva: "");
		for(i=0; i<vel; i++)
			scanf(""%d"", &niz[i]);
		ubaci(niz, vel);
		vel*=2;
		vel=izbaci(niz, vel);
		printf(""Modificirani niz glasi: "");
		for(i=0; i<vel; i++) {
			if(i<=vel-2) printf(""%d, "", niz[i]);
			else printf(""%d."", niz[i]);
		}

		return 0;
	}","#include <stdio.h>


 void ubaci (int *niz, int n) {
	int i=0,a, cifra, suma=0, niz2[100];
	
	niz2[0]=niz[0];
	int j=2;
	for(i=1; i<n; i++) {
		niz2[j]=niz[i];
		j+=2;
	}
	
	
	j=1;
	
	for(i=0; i<n; i++) {
		
				a=niz[i];
				suma=0;
				if(a<0) a*=-1;
				while(a!=0) {
					cifra=a%10;
					suma+=cifra;
					a/=10;
					
				}
				niz2[j]=suma;
				j+=2;
				
			}

 	for(i=0; i<2*n; i++ ) niz[i]=niz2[i];
 		
 	
 }

// IZBACIVANJE

int izbaci (int *niz,int n) {
	int fib[1000], i=0, j=0, k=0;
	fib[0]=1;
	fib[1]=1;
	
	for(i=2; i<1000; i++) {
		fib[i]=fib[i-1]+fib[i-2];
	}
	
	for(i=0; i<n; i++) {
		for(j=0; j<100; j++){
			if(niz[i]==fib[j]) {
				for(k=i; k<n-1; k++) {
					niz[k]=niz[k+1];
				}
				n--;
				i--;
				break;
			}
		}
	}
	
	return n;
}

int main() {
	
	int i=0, niz[1000], n=10;
	
	printf(""Unesite niz od 10 brojeva: "");
	
	for(i=0; i<n; i++) {
		scanf(""%d"", &niz[i]);
	}

	ubaci(niz, n);
	n+=n;
	n=izbaci(niz, n);
	printf(""Modificirani niz glasi:"");
	
	for(i=0; i<n; i++) {
		printf("" %d"", niz[i]);
		if(i<n-1) printf("","");
		if(i==n-1) printf(""."");
	}
	
	
	return 0;
	
} 

"
1763,67,67,0,40,A2016/Z2/Z2/student9949,A2016/Z2/Z2/student8540,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926
int main () {
    int i, j, n, stepen, min, s;
    double niz[500];
    
       printf(""Unesite broj uglova: "");
       scanf(""%d"", &n);
       for(i=0; i<n; i++)
       { scanf(""%lf"", &niz[i]);}
        printf(""Uglovi su: \n"");
      
       for(i=0; i<n; i++){
        niz[i]*=180/PI;
        stepen=(int)niz[i];
        niz[i]=fabs(niz[i])-abs(stepen);
        niz[i]*=60;
        min=(int)niz[i];
        min=abs(min);
        niz[i]-=min;
        niz[i]*=60;
        s=(int)(niz[i]+0.5);
        s=abs(s);
        
    if(stepen>0 && min==59 && s>=59.5) 
       {
           stepen=stepen+1;
           min=0;
           s=0;
       }
    else
    if(stepen<0 && min==59 && s>=59.5)
       {
          stepen=stepen-1;
          min=0;
          s=0;
       }
    else 
    if(min<59 && s==60)
      {
          min=min+1;
          s=0;
      }
    if(s>30)
       { 
        for(j=i; j<n-1; j++)
           {niz[j]=niz[j+1];}
            n--;
            i--;
       }
       
    if(s<=30)
       printf(""%d stepeni %d minuta %d sekundi\n"", stepen, min, s);
    else continue;
        
        
       }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926
#define broj 500

int main() {
	int   i, n, stp, mn, sc, j;
	double niz[broj], D;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	for (i=0; i<n; i++) {
		scanf(""%lf"", &niz[i]); }
		printf(""Uglovi su: \n"");
	for(i=0; i<n; i++){
		D= (niz[i]/PI)*180; 
		stp=(int)D;
		
		D=fabs(D) - abs(stp);
		D= D*60;
		mn=(int)D;
		mn=abs(mn);
		
		if (mn) D=D-mn;
		D=D*60;
		sc=(int)(D+0.5);
		sc=abs(sc);
		
		if(stp>0 &&(mn==59 && sc>=59.5)){
			stp=stp+1; 
			mn=0;
			sc=0;
		}
		else if (stp<0 &&(mn==59 && sc>=59.5)) {
			stp= stp-1;
			mn=0;
			sc=0;
		}
		else if(sc==60 && mn<59) {mn=mn+1; sc=0;}
		if (sc>30) {
				for(j=i; j<n-1; j++) {
					niz[j]=niz[j+1]; }
				n--;
				i--; }
				
		if(sc<=30) { printf(""%d stepeni %d minuta %d sekundi\n"", stp, mn, sc); }
		}
	return 0;
}
"
1771,87,87,0,41,A2016/Z2/Z3/student8329,A2016/Z2/Z3/student7255,"#include <stdio.h>

int main() {
	char mat[20][20];
	int i,j,brtac;
	int br;
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&brtac);
	while((brtac<1)||(brtac>10))
	{
		printf(""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&brtac);
		
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			mat[i][j]=' ';
			
		}
	}
	for(br=0;br<brtac;br++)
	{
		printf(""Unesite %d. tacku: "",br+1);
		scanf(""%d %d"",&i,&j);
		while((i<0)||(i>19)||(j<0)||(j>19))
		{
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "",br+1);
			scanf(""%d %d"",&i,&j);
		}
		mat[i][j]='*';
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			printf(""%c"",mat[j][i]);	
			
		}
		printf(""\n"");
	}
	

	return 0;
	}

","#include <stdio.h>

int main() {
	int bt,n,i,j;
	int p,d;
	char niz[20][20];
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &bt);
	while (bt<1 || bt>10){
		printf(""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &bt);
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			niz[i][j]=' ';
		}
	}
	
	for(i=0;i<bt;i++){
		printf(""Unesite %d. tacku: "",i+1);
		scanf(""%d %d"",&p,&d);
		while(p<0 || p>19 || d<0 || d>19){
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "",i+1);
			scanf(""%d %d"",&p,&d);
		}
		niz[d][p]='*';
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			printf(""%c"",niz[i][j]);
		}
		printf(""\n"");
	}
	
	return 0;
}
"
1773,51,51,0,49,A2016/Z3/Z2/student9923,A2016/Z3/Z2/student9476,"#include <stdio.h>



int suma(int n)
{
	int s=0;
	if(n<0) n*=-1;
	while(n!=0)
	{
		s+=n%10;
		n/=10;
	}
	return s;
}


void ubaci(int niz[],int vel)
{
	int i,j;
	
	for(i=1;i<vel;i++)
	{
		if(i%2!=0)
		{
			for(j=vel;j!=i;j--)
				niz[j]=niz[j-1];
			vel++;
			niz[i]=suma(niz[i-1]);
		}
	}
	
	niz[vel]=suma(niz[vel-1]);
}

int Fibonaci(int n)
{
	int a=1,b=1,c;
	
	if(n==1 || n==2) return 1;
	
	while(a+b<=n)
    {   
    	if(a+b==n) return 1;
    	c=a;
    	a=b;
    	b=c+b;
    }
	
	return 0;
}

int izbaci(int niz[],int vel)
{
	int i,j;
	for(i=0;i<vel;i++)
	{
		if(Fibonaci(niz[i]))
		{
			for(j=i;j<vel-1;j++)
				niz[j]=niz[j+1];
			vel--;
			i--;
		}
	}
	
	
	return vel;
	
	
}


int main() {
   
    int niz[200];
    int i;int vel;
    
    
    printf(""Unesite niz od 10 brojeva: "");
    for(i=0;i<10;i++)
    	scanf(""%d"",&niz[i]);
    	
    ubaci(niz,10);
    vel=izbaci(niz,20);
   printf(""Modificirani niz glasi: "");
    for(i=0;i<vel;i++){
    	if(i==vel-1)printf(""%d."",niz[i]);
    	else printf(""%d, "",niz[i]);
    }
    
	return 0;
}","#include <stdio.h>
#include <math.h>
/*int kvadrat(int n)
{
	int s=sqrt(n);
	if(s*s==n) return 1;
	return 0;
} */
int dalijefibonaci(int n)
{
	/*if(kvadrat(5*n*n+4)==1 || kvadrat(5*n*n-4)==1) return 1;
	return 0;*/
	int a=1,b=1,c;
	if(n==a || n==b) return 1;
	c=a+b;
	while(c<=n)
	{
		if(c==n) return 1;
		a=b;
		b=c;
		c=a+b;
	}
	return 0;
}

int sumacifara(int n)
{
	int suma=0;
	while(n!=0)
	{
		suma+=n%10;
		n/=10;
	}
	return suma;
}

void ubaci(int niz[], int vel)
{
	int i, j=vel;
	for(i=0; i<vel; i+=2)
	{
		j--; if(j==0) break;
		vel++;
		for(j=vel-2; j>i; j--) niz[j+1]=niz[j];
		if(sumacifara(niz[i])<0) niz[i+1]=-sumacifara(niz[i]);
		else
		niz[i+1]=sumacifara(niz[i]);
		/*i++; */
	}
}

int izbaci(int niz[], int vel)
{
   int i, j;
   for(i=0; i<vel; i++)
   {
   	if(dalijefibonaci(niz[i])==1)
   	{
   		for(j=i; j<vel-1; j++)
   		{
   			niz[j]=niz[j+1];
   		}
   		vel--; i--;
   	}
   }
   return vel;
}


int main() {
	
    int niz[20];
    int i,n;
    printf(""Unesite niz od 10 brojeva: "");
    for(i=0; i<10; i++) 
    {
    	/*while(1) */
    	/*{ */
    		scanf(""%d"", &niz[i]);
    		/*if(niz[i]<0)
    	} */
    	
    }
    ubaci(niz, 10);
    n=izbaci(niz, 20); 
    printf(""Modificirani niz glasi: "");
    for(i=0; i<n; i++)
    {
    	if(i==n-1) printf(""%d."", niz[i]);
    	else printf(""%d, "", niz[i]);
    }
	return 0;
}
"
1783,99,99,0,65,A2016/Z3/Z3/student8580,A2016/Z3/Z3/student4852,"#include <stdio.h>
int main() {
	int matrica[200][200],M,N,i,j,k,t,p,s;

do{
		    printf(""Unesite brojeve M i N: "");
		    scanf(""%d %d"",&M,&N);
		    if(M>200||N>200||M<=0||N<=0)
		    printf(""Brojevi nisu u trazenom opsegu.\n"");
		}
		while(M>100||N>100||M<=0||N<=0);
		printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++)
	     for(j=0;j<N;j++)
		 scanf(""%d"",&matrica[i][j]);
		
		 for(i=0;i<M;i++){
		         for(j=i+1;j<M;j++){
			     t=1;
		               for(k=0;k<N;k++){
	        	           if(matrica[i][k]!=matrica[j][k]){
		                   t=0;
		                   break;
		                         }
		                           	}
			if(t){
		              for(p=j;p<M;p++){
			          for(s=0;s<N;s++)
			          matrica[p][s]=matrica[p+1][s];
		              }
		              M--;
		              j--;
		                  }
		                  }
		                  }
		                  
		   for(i=0;i<N;i++){
		         for(j=i+1;j<N;j++){
			     t=1;
		               for(k=0;k<M;k++){
	        	           if(matrica[k][i]!=matrica[k][j]){
		                   t=0;
		                   break;
		                         }
		                           	}
			if(t){
		              for(p=j;p<N;p++){
			          for(s=0;s<M;s++)
			          matrica[s][p]=matrica[s][p+1];
		              }
		              N--;
		              j--;
		                  }
		                  }
		                  }
		                  
		
		

		printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
		for(i=0;i<M;i++){
		for(j=0;j<N;j++)
		printf(""%5d"",matrica[i][j]);
		printf(""\n"");
		}
	return 0;
}","#include <stdio.h>
int main() {
	int matrica[200][200],M,N,i,j,k,t,p,s;

do{
		    printf(""Unesite brojeve M i N: "");
		    scanf(""%d %d"",&M,&N);
		    if(M>200||N>200||M<=0||N<=0)
		    printf(""Brojevi nisu u trazenom opsegu.\n"");
		}
		while(M>100||N>100||M<=0||N<=0);
		printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++)
	     for(j=0;j<N;j++)
		 scanf(""%d"",&matrica[i][j]);
		
		 for(i=0;i<M;i++){
		         for(j=i+1;j<M;j++){
			     t=1;
		               for(k=0;k<N;k++){
	        	           if(matrica[i][k]!=matrica[j][k]){
		                   t=0;
		                   break;
		                         }
		                           	}
			if(t){
		              for(p=j;p<M;p++){
			          for(s=0;s<N;s++)
			          matrica[p][s]=matrica[p+1][s];
		              }
		              M--;
		              j--;
		                  }
		                  }
		                  }
		                  
		   for(i=0;i<N;i++){
		         for(j=i+1;j<N;j++){
			     t=1;
		               for(k=0;k<M;k++){
	        	           if(matrica[k][i]!=matrica[k][j]){
		                   t=0;
		                   break;
		                         }
		                           	}
			if(t){
		              for(p=j;p<N;p++){
			          for(s=0;s<M;s++)
			          matrica[s][p]=matrica[s][p+1];
		              }
		              N--;
		              j--;
		                  }
		                  }
		                  }
		                  
		
		

		printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
		for(i=0;i<M;i++){
		for(j=0;j<N;j++)
		printf(""%5d"",matrica[i][j]);
		printf(""\n"");
		}
	return 0;
}"
1784,60,60,0,23,A2016/Z1/Z3/student8780,A2016/Z1/Z3/student5771,"#include <stdio.h>
#include <math.h>
#define E 0.00000000000000001

int main() {
	
char t='t';
int s;
float a=0;
float b=0;
float c=0;
float  d=0;
float  e=0;
float j;

s=0;

printf (""Unesite vozila: "");


    
  while (t!='k' && t!='K') {
    scanf (""%c"",&t);
    if(t!='\n')
    {
    if (t!='c' && t!='C' && t!='v' && t!='V' && t!='p' && t!='P' && t!='b' && t!='B'&&t!='s' && t!='S' && t!='K' && t!='k')
    {printf (""Neispravan unos\n"");}
     if(t=='c' || t=='C') {a=a+1;s=s+1;}
     if(t=='b' || t=='B') {b=b+1;s=s+1;}
     if(t=='s' || t=='S') {c=c+1;s=s+1;}
     if(t=='v' || t=='V') {d=d+1;s=s+1;}
     if(t=='p' || t=='P') {e=e+1;s=s+1;}
    }
 


}  





printf (""Ukupno evidentirano %d vozila.\n"",s);
if (fabs(s-0)<E){printf (""Najpopularnija boja je crna (0.00%)."");} else {
if (a>=b && a>=c && a>=d && a>=e){ j=(a/s)*100 ;printf (""Najpopularnija boja je crna (%.2f%)."",j);}

else {
       if (b>=c && b>=d && b>=e && b>=a){ j=(b/s)*100; printf (""Najpopularnija boja je bijela (%.2f%)."",j);}
    
           else {
               if (c>=d && c>=e && c>=a && c>=b) { j=(c/s)*100; printf (""Najpopularnija boja je siva (%.2f%)."",j);}
                   else {
                       if(d>=e && d>=a && d>=b && d>=c){ j=(d/s)*100; printf (""Najpopularnija boja je crvena (%.2f%)."",j);}
                            else {
                                 if (e>=a && e>=b && e>=c && e>=d){ j=(e/s)*100; printf (""Najpopularnija boja je plava (%.2f%)."",j);}
                                    }}}}
}






    return 0;
}


    ","#include <stdio.h>
#define epsilon 0.00000001
#include <math.h>
int main() {
	printf(""Unesite vozila: "");
	char n='n';
	float suma,broj;
	int brs=0,brc=0,brv=0,brb=0,brp=0;
	do{ 
		scanf(""%c"",&n);
	   if(n!='s' && n!='S' && n!='c' && n!='C' && n!='v' && n!='V' && n!='b' && n!='B' &&
	                  n!='p' && n!='P' && n!='k' && n!='K'){printf(""Neispravan unos\n"");}
		if(n=='s' || n=='S'){ brs=brs+1;}
		if(n=='c' || n=='C'){ brc=brc+1;}
		if(n=='v' || n=='V'){ brv=brv+1;}
		if(n=='b' || n=='B'){ brb=brb+1;}
		if(n=='p' || n=='P'){ brp=brp+1;}
	}while(n!='k' && n!='K');
	suma=brs+brb+brc+brv+brp;
	printf(""Ukupno evidentirano %.f vozila."", suma); 
	if(fabs(suma)<epsilon){ printf(""\nNajpopularnija boja je crna (0.00%).""); return 0;}
if(brc>=brb && brc>=brs && brc>=brp && brc>=brv){ 
	broj=(brc/suma)*100;
	printf(""\nNajpopularnija boja je crna (%.2f%%)."", broj); }
else if(brb>=brs && brb>=brc && brb>=brp && brb>=brv){ 
	broj=(brb/suma)*100; 
	printf(""\nNajpopularnija boja je bijela (%.2f%%)."", broj); }
else if(brs>=brb && brs>=brc && brs>=brp && brs>=brv){ 
	broj=(brs/suma)*100; 
	printf(""\nNajpopularnija boja je siva (%.2f%%)."", broj); }
else if(brv>=brb && brv>=brc && brv>=brp && brv>=brb){ 
	broj=(brv/suma)*100;
	printf(""\nNajpopularnija boja je crvena (%.2f%%)."", broj); }
else if(brp>=brb && brp>=brc && brp>=brs && brp>=brv){ 
	broj=(brp/suma)*100; 
	printf(""\nNajpopularnija boja je plava (%.2f%%)."", broj); }

	return 0;
}
"
1800,44,44,0,34,A2016/Z3/Z2/student5612,A2016/Z3/Z2/student7255,"#include <stdio.h>
#include<stdlib.h>
#define VELICINA 10
#define velicina_2 20
void ubaci (int *niz, int velicina)
{
	int i, k;
	int b1;
	int b2;
	int b3 = 0;
	for(k = velicina - 1; k >= 0; k--){
		niz[2*k] = niz[k];
	}
	for(i = 0; i < 2 * velicina; i = i + 2){
		b1 = abs (niz[i]);
		if (b1 < 10) 
		b3 = b1;
		else {
			do{
			b2 = b1  % 10;
			b3 = b3 + b2;
			b1 = b1 / 10;
			}
			while(b1 != 0);
		}
		niz[i + 1] = b3;
		b3 = 0;
	}
}
int izbaci(int *niz, int velicina)
{
	int i;
	int k;
	int x = 1;
	int y = 1;
	int z;
	int u;
	for(i = 0; i < velicina; i++){
		x = 1;
		y = 1;
		for(k = 1; k < 10000; k++){
			if (k == 1)
			z = 1;
			else {
				z = x + y;
				x = y;
				y = z;
			}
			if(niz[i] == z){
				for(u = i; u < velicina - 1; u++){
					niz[u] = niz[u+1];
				
				}
				velicina -- ; 
				i --; 
				break;
			}
		}
	}
	return velicina;
}
int main(){
	int niz[2 * VELICINA];
	int i;
	int u;
	printf(""Unesite niz od 10 brojeva: "");
	for(i = 0; i < VELICINA; i++){
		scanf(""%d"", &niz[i]);
	}
	ubaci(niz, VELICINA);
	u = izbaci(niz, velicina_2);
	printf(""Modificirani niz glasi: "");
	for(i = 0; i < u; i++){
		if (i == u - 1){
			printf(""%d."", niz[i]);
		}else {
			printf(""%d, "", niz[i]);
		}
	}
	return 0;
}","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define duz 10

void ubaci (int *niz, int vel){
	int S,H=0,c,i,j;
	for(j=vel-1; j>=0; j--){
		niz[2*j]=niz[j];
	}
	for(i=0; i<2*vel; i+=2){
		S=abs(niz[i]);
		if(S<10){
			H=S;
		}
		else {
			do{
				c=S%10;
				H=H+c;
				S/=10;
			}while(S!=0);
		}
		niz[i+1]=H;
		H=0;
	}
}

int izbaci (int *niz, int vel){
	int i,j,k,I=0,II=1,III;
	for(i=0; i<vel; i++){
		I=0;
		II=1;
		for(j=1; j<10000; j++){
			if(j==1){
				III=j;
			}
			else{
				III=I+II;
				I=II;
				II=III;
			}
			if(*(niz+i)==III){
				for(k=i; k<vel-1; k++){
					*(niz+k)=*(niz+k+1);
				}
				vel--;
				i--;
				break;
			}
		}
			
		}
	return vel;
}

int main() {
	int niz[2*duz], i, poziv;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<duz; i++){
		scanf(""%d"", &niz[i]);
		ubaci(niz,duz);
		poziv=izbaci(niz,2*duz);
		printf(""Modificirani niz glasi: "");
		for(i=0; i<poziv; i++){
			if(i<poziv-1){
				printf(""%d."", niz[i]);
			}
			else{
				printf(""%d,"", niz[i]);
			}
		}
	}
	return 0;
}
"
1806,42,42,0,11,A2016/Z2/Z1/student1313,A2016/Z2/Z1/student4804,"#include <stdio.h>
#include <stdlib.h>

int main() {
	int n,br1,br2,a,broj=0,j=1;
	printf(""Unesite broj: "");
	scanf(""%d"",&n);
	 if(n<0) n=abs(n);
	
	do {
		br1=n%10;
		n=n/10;
		if (n==0) break;
		br2=n%10;
		a=abs(br1-br2);
		
		broj=broj + a*j;
		j=j*10;
		
		
	} while (n>0);
	printf(""%d"",broj);
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
int main() {
	int n,b,c,br=0,i=1,e,d;
	printf(""Unesite broj: "");
	scanf(""%d"",&n);
	if (n<0)
	n=abs(n);
	do
	{
		b=n%10;
		n=n/10;
		if(n==0)
		break;
		c=n%10;
		d=b-c;
		if(d<0)
		d=abs(d);
		e=i*d;
		br=br+e;
		i=i*10;
	}
	while(n>0);
	printf(""%d"",br);
	return 0;
}
"
1811,79,79,0,54,A2016/Z3/Z2/student6877,A2016/Z3/Z2/student8357,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

#define velniz1 10
#define velniz2 20

void ubaci(int *niz,int vel1)
{
	int i,suma=0,zadcifra,broj;
	for(i=vel1-1;i>=0;i--)
	*(niz+2*i)=*(niz+i);
	for(i=0;i<vel1*2;i++)
	{
		if (i%2==1)
		{
			broj=*(niz+i-1);
			while(broj!=0)
			{
			zadcifra=broj%10;
			suma=suma+zadcifra;
			broj=broj/10;
			}
		suma=abs(suma);	
		*(niz+i)=suma;
		suma=0;
		}
	}
}

int izbaci(int *niz,int vel2)
{
	int i,j,k,prvi,drugi,temp;
	for(i=0;i<vel2;i++)
	{
		prvi=0;
		drugi=1;
		for(j=0;j<1000;j++)
		{
			temp=prvi+drugi;
			prvi=drugi;
			drugi=temp;
			if( *(niz+i)==temp)
			{
				for(k=i;k<vel2-1;k++)
				{
					*(niz+k)=*(niz+k+1);
				}
			vel2--;
			i--;
			break;
			}
		}
	}
    return vel2;	
}

int main() {
	int niz[20],i,brclanova;
	printf(""\nUnesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	scanf(""%d"",&niz[i]);
	ubaci(niz,velniz1);
	brclanova=izbaci(niz,velniz2);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<brclanova;i++)
	{
		if(i<(brclanova-1)) printf(""%d, "",niz[i]);
		else printf(""%d. "",niz[i]);
	}
	return 0;
}
","#include <stdio.h>
#include <math.h>

void ubaci(int *niz,int velicina){
	int i,cifra,clan,suma=0;
	for (i=velicina-1;i>=0;i--){
		*(niz+2*i)=*(niz+i);
	}
	for (i=0;i<velicina*2;i++){
		if (i%2==1){
			clan=*(niz+i-1);
			while (clan!=0){
				cifra=clan%10;
				suma+=cifra;
				clan=clan/10;
		    }
		    suma=fabs(suma);
			*(niz+i)=suma;
			suma=0;
		}
	}
}

int izbaci(int *niz,int velicina){
	int i,j,k,prvi=0,drugi=1,slijedeci;
	for (i=0;i<velicina;i++){
		prvi=0;
		drugi=1;
		for (j=1;j<10000;j++){
			if (j==1) slijedeci=j;
			else {
				slijedeci=prvi+drugi;
				prvi=drugi;
				drugi=slijedeci;
			}
			if (*(niz+i)==slijedeci){
				for (k=i;k<velicina-1;k++){
						*(niz+k)=*(niz+k+1);
				}
				velicina--;
				i--;
				break;
			}
	    }
    }
}
int main() {
	int niz[20],i,y,velicina1=10,velicina2=20;
 
	/* Unos elemenata niza */ 
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0;i<10;i++){
		scanf(""%d"",&niz[i]);
	}
	
	/* Poziv funkcije ubaci */ 
	ubaci(niz,velicina1);
 
	/* Poziv funkcije izbaci */ 
	y=izbaci(niz,velicina2);
 
    /* Ispis modificiranog niza */
	printf (""Modificirani niz glasi: "");
	for (i=0;i<y;i++){
		if (i<(y-1)){
			printf (""%d, "",niz[i]);
	    }
	    else {
	    	printf (""%d. "",niz[i]);
	    }
	}
	return 0;
}

"
1813,57,57,0,52,A2016/Z3/Z2/student4343,A2016/Z3/Z2/student3631,"#include <stdio.h>
#include <stdlib.h>
int suma(int n)/* Funkcija koja racuna sumu cifara broja*/
{
	int s=0;
	while(n>0)
	{
		s=s+n%10;
		n=n/10;
	}
	return s;
}
void ubaci(int niz[],int velicina)
{
	int *q,*p; /*pokazivaci koji uzimaju clan niza i sumu cifara clana*/
	int i,z;
	for(i=velicina -1;i>=0;i=i-1)
	{
		p=niz+i*2;
		q=niz+i;
		*p=*q;
	}
	for(i=0;i<2*velicina;i=i+2)
	{
		p=niz+i;
		q=p+1;
		z=abs(*p);
		*q=suma(z);
	}
}
int izbaci(int niz[], int velicina)
{
	int fib[1000]={0};/*deklaracija Fibornacijevog niza*/
	int maks,t=2,i,j,z,v2;
	maks=niz[0];
	for(i=0;i<velicina;i++)
	if (maks<niz[i]) maks=niz[i];/*najveci clan niza*/
	fib[0]=1; fib[1]=1;/*po definiciji prvi i drugi clan Fib. niza*/
	for(i=2;i<1000;i++)
	{
		fib[i]=fib[i-1]+fib[i-2];
		if(fib[i]>maks) break;
		else (t++);/*racunanje broja elemenata Fib. niza*/
	}
	v2=velicina;
	for(i=0;i<v2;i++)
	{
		for(j=0;j<t;j++)
		{
			if(niz[i]==fib[j])
			{
				for(z=i;z<v2-1;z++)/*Izbacanje elemenata iz niza koji se nalaze u Fib. nizu*/
				niz[z]=niz[z+1];
				v2--;
				i--;
				break;
			}
		}
	}
return v2;
}
int main() {
	int niz[20],i,velicina=10,izb;
	printf(""Unesite niz od 10 brojeva: "");/*unos niza*/
	for(i=0;i<10;i++)
	scanf(""%d"",&niz[i]);
	ubaci(niz,velicina);/*pozivanje ubacivanja sume svakog clana zasebno na mjesto poslije clana*/
	velicina=velicina*2;
	izb=izbaci(niz,velicina);/*pozivanje izbacivanja elemenata niza*/
	printf(""Modificirani niz glasi: "");
	for(i=0;i<izb-1;i++){
	printf(""%d, "",niz[i]);
	}
	printf(""%d."",niz[i]);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

int suma(int n)
{
    int s=0;
    while (n>0)
    {
        s=s+n%10;
        n=n/10;
    }return s;
}


void ubaci(int niz[], int velicina) {
    int z;
    int *s,*t;
   int  i=2*velicina;
    /*ubacujem prazno mjesto izmedju clanova*/
    for (i=velicina-1;i>=0;i--)
    {
        t=niz + i*2;
        s=niz + i;
        *t=*s;
    }
    /*ubacujem sumu cifara na novonastala prazna mjesta*/
    for (i=0;i<velicina*2;i=i+2)
    {
        t=niz + i;
        s=t + 1;
        z=abs(*t);
        *s=suma(z);
    }
}



int izbaci (int *niz, int velicina) {
    int i,j,fibonacijev,fib1,fib0;
    for (i=0;i<velicina;i++){
        /*provjeravanje da li je broj fibonacijev*/
        fibonacijev=1;
        fib1=1;
        fib0=1;
        while(fibonacijev<niz[i])
        {
            fibonacijev=fib1+fib0;
            fib0=fib1;
            fib1=fibonacijev;
        }
        /*izbacivanje fibonacijevih brojeva*/
        if (fibonacijev==niz[i]){
            for (j=i;j<velicina-1;j++){
                niz[j]=niz[j+1];
            }
            velicina--;
            i--;
        }
        
    }

   return velicina;
}

int main() {
int niz[20],i,velicina=10,izbacivanje;

/*unos niza*/
printf (""Unesite niz od 10 brojeva: "");
for (i=0; i<10; i++)
{
	scanf (""%d"", &niz[i]);
}	

/* pozivanje funkcija za modifikaciju niza*/
ubaci (niz,velicina);
velicina=velicina*2;
izbacivanje=izbaci(niz,velicina);

/*ispisivanje modificiranog niza*/
printf (""Modificirani niz glasi: "");
for (i=0;i<izbacivanje- 1;i++)
printf (""%d, "", niz[i]);
printf (""%d."", niz[i]);
return 0;
}
"
1815,97,97,0,53,A2016/Z2/Z4/student8561,A2016/Z2/Z4/student8419,"#include <stdio.h>
#include <math.h>

#define e 0.00001
#define g 100

int main() {
	
	int a,b,m,n,i,j;
	double f[g][g];
	a=1;
	b=1;
	do{
		printf(""Unesite M i N: "");
		scanf(""%d %d"",&m,&n);
		if(n<1 || m<1 || n>100 || m>100)
		printf(""Pogresan unos!\n"");
	} while (n<1 || m<1 || n>100 || m>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			scanf(""%lf"",&f[i][j]);
		}
	}
	
	for(i=0;i<m-1;i++){
		for(j=0;j<n-1;j++){
			if(fabs(f[i][j]-f[i+1][j+1])<e)
			b=0; 
			else {
			b=1;
			goto mm;
		}
	}
	}
	for(i=0;i<m-1;i++){
	if(fabs(f[i][n-1]-f[i+1][0])<e)
		a=0;
	else {
		a=1;
		goto mm;
	}
	}
	
	mm:
	if(m==1){
		a=0;
		b=0;
	}
	if(m==100){
		a=1;
		b=0;
	}
	if(a==0 && b==0)
		printf(""Matrica je cirkularna"");
	else if(a==1 && b==0)
		printf(""Matrica je Teplicova"");
	else 
	printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
","#include <stdio.h>
#include <math.h>

#define e 0.00001
#define g 100

int main() {
	
	int a,b,m,n,i,j;
	double f[g][g];
	a=1;
	b=1;
	do{
		printf(""Unesite M i N: "");
		scanf(""%d %d"",&m,&n);
		if(n<1 || m<1 || n>100 || m>100)
		printf(""Pogresan unos!\n"");
	} while (n<1 || m<1 || n>100 || m>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			scanf(""%lf"",&f[i][j]);
		}
	}
	
	for(i=0;i<m-1;i++){
		for(j=0;j<n-1;j++){
			if(fabs(f[i][j]-f[i+1][j+1])<e)
			b=0; 
			else {
			b=1;
			goto mm;
		}
	}
	}
	for(i=0;i<m-1;i++){
	if(fabs(f[i][n-1]-f[i+1][0])<e)
		a=0;
	else {
		a=1;
		goto mm;
	}
	}
	
	mm:
	if(m==1){
		a=0;
		b=0;
	}
	if(m==100){
		a=1;
		b=0;
	}
	if(a==0 && b==0)
		printf(""Matrica je cirkularna"");
	else if(a==1 && b==0)
		printf(""Matrica je Teplicova"");
	else 
	printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
"
1816,83,83,0,30,A2016/Z2/Z4/student9805,A2016/Z2/Z4/student5603,"#include <stdio.h>
#include <math.h>
int main(){
	int i, j;
	int m,n;
	double t[100][100];
	do{
		printf(""Unesite M i N: "");
		scanf(""%d %d"", &m, &n);
		if(m<=0 || m>100 || n<=0 || n>100){
			printf (""Pogresan unos!\n"");
		}
		} while(m<=0 || m>100 || n<=0 || n>100);
		printf (""Unesite elemente matrice: "");
		for(i=0;i<m;i++){
			for (j=0;j<n;j++){
				scanf(""%lf"", &t[i][j]);
			}
		}
	for(i=0;i<m-1;i++){
		for(j=0;j<n-1;j++){
			if(t[i][j]!=t[i+1][j+1]){
				printf(""Matrica nije ni cirkularna ni Teplicova"");
				return 0;
			}
		}
	}

		for (i=0;i<m-1;i++){
			if(t[i][n-1]!=t[i+1][0]){
                printf(""Matrica je Teplicova"");
                return 0;
			}
		}
		printf (""Matrica je cirkularna"");

	return 0;
}","#include <stdio.h>

int main(){
int i,j,m,n;
int cirk=0,tep=0;
double mat[100][100];


do{
printf(""Unesite M i N: "");
scanf(""%d %d"",&m,&n);

if(m<=0 || m>100 || n<=0 || n>100){
	printf(""Pogresan unos!\n"");
      }
   
   

}while(m<=0 || m>100 || n<=0 || n>100);

printf(""Unesite elemente matrice: "");
for(i=0;i<m;i++){
	for(j=0;j<n;j++){
		scanf(""%lf"",&mat[i][j]);
}
}
	
   
 
   
   for(i=0;i<m-1;i++){
   	for(j=0;j<n-1;j++){
   			if(mat[i][j]!=mat[i+1][j+1]){
   			tep=1;
   			}
   		}
   }
  

   for(i=0;i<m-1;i++){
      for(j=0;j<n-1;j++){
            if(mat[i][n-1]!=mat[i+1][0] || mat[i][j]!=mat[i+1][j+1]){
               cirk=1;
            }
      }
   }
            
    if(m==1)printf(""Matrica je cirkularna"");
    else if(n==1)printf(""Matrica je Teplicova"");
   else if(cirk==0 && tep==0) printf(""Matrica je cirkularna"");
   else if(cirk==0 && tep==1) printf(""Matrica je cirkularna"");
   else if(cirk==1 && tep==1) printf(""Matrica nije ni cirkularna ni Teplicova"");
   else if (tep==0 && cirk==1) printf(""Matrica je Teplicova"");
   	
  
   
   
return 0;	
}"
1825,94,94,0,37,A2016/Z2/Z4/student8580,A2016/Z2/Z4/student8797,"#include <stdio.h>
#include <math.h>
int main() {
    int M,N,i,j,tm=1,cm=1;
    double mat[100][100];
    do{
        printf(""Unesite M i N: "");
        scanf(""%d %d"",&M,&N);
        if(M>100||M<=0||N>100||N<=0)
        printf(""Pogresan unos!\n"");}
        while(M>100||M<=0||N>100||N<=0);
        printf(""Unesite elemente matrice: "");
        for(i=0;i<M;i++){
            for(j=0;j<N;j++){
                scanf(""%lf"", &mat[i][j]);
            }
        }
        
        for(i=0;i<M-1;i++){
            for(j=0;j<N-1;j++){
               if(mat[i][j]!=mat[i+1][j+1])
               tm=0;
            }}
             for(i=0;i<M-1;i++){
               if(mat[i][N-1]!=mat[i+1][0])
               cm=0;}
               
            
            if(tm==1&&cm==1)
            printf(""Matrica je cirkularna"");
            else if(tm==1)
            printf(""Matrica je Teplicova"");
            else 
            printf(""Matrica nije ni cirkularna ni Teplicova"");
        
        
        
        

	return 0;
}
","#include <stdio.h>

int main() {
	int m, n, i, j, p=1, q=1;
	double niz[200][200];
	
	do {
	printf(""Unesite M i N: "");
	scanf (""%d  %d"", &m, &n);
	if(n>100 || n<=0 || m>100 || m<=0)
	printf(""Pogresan unos!\n"");
	}while(n>100 || n<=0 || m>100 || m<=0);
	
	
	
	printf(""Unesite elemente matrice: "");
	
	for(i=0; i<m; i++){
		for(j=0; j<n; j++){
			scanf(""%lf"", &niz[i][j]);
		}
	}

	for(i=0; i<(m-1); i++){
		for(j=0; j<(n-1); j++){
         		if(niz[i][j]!=niz[i+1][j+1]) p=0;
	
		}
	}

    for(i=0; i<(m-1); i++){
		
         		if(niz[i][n-1]!=niz[i+1][0]) q=0;
	
		
   }
   
   if(p==1 && q==0) printf(""Matrica je Teplicova"");
   else if(p==1 && q==1) printf(""Matrica je cirkularna"");
   else printf(""Matrica nije ni cirkularna ni Teplicova"");
	
	return 0;
}"
1826,99,99,0,70,A2016/Z1/Z3/student9175,A2016/Z1/Z3/student4495,"#include <stdio.h>

int main() {
	char ba;
	float ub=0,bc=0,bb=0,bs=0,bv=0,bp=0,bpop=0;
	double pst;
	
	printf(""Unesite vozila: "");
	
	do{
		scanf(""%c"",&ba);
		
		if(ba!='C' &ba!='c' & ba!='B'  &ba!='b'  & ba!='S'  & ba!='s' & ba!='V' & ba!='v'  & ba!='P'  & ba!='p'  & ba!='K'  & ba!='k')
			printf(""Neispravan unos\n"");
		else if (ba=='K' || ba=='k')
			break;
		else {
			if(ba=='C' || ba=='c')
			bc++;
		else if(ba=='B' || ba=='b')
			bb++;
		else if(ba=='S' || ba=='s')
			bs++;
		else if(ba=='V' || ba=='v')
			bv++;
		else if(ba=='P' || ba=='p' )
			bp++;
			
			
			ub++;
			
		}
		
		
		
	}while(ba!='K'&& ba!='k');

	
		
		bpop=bp;
		if(bpop<=bv)
			bpop=bv;
		if(bpop<=bs)
			bpop=bs;
		if(bpop<=bb)
			bpop=bb;
		if(bpop<=bc)
			bpop=bc;
		
		if(ub==0.0)
			pst=0.0;
		else 
		pst=(bpop/ub)*100;
		
		printf(""Ukupno evidentirano %g vozila.\n"",ub);
		
		if(bpop==bc)
			printf(""Najpopularnija boja je crna (%.2f%%)."",pst);
		else if(bpop==bb)
			printf(""Najpopularnija boja je bijela (%.2f%%)."",pst);
		else if (bpop==bs)
			printf(""Najpopularnija boja je siva (%.2f%%)."",pst);
		else if (bpop==bv)
			printf(""Najpopularnija boja je crvena (%.2f%%)."",pst);
		else printf (""Najpopularnija boja je plava (%.2f%%)."",pst);
		
		
		
		
		

	return 0;
}
","#include <stdio.h>

int main() {
	char ba;
	float ub=0,bc=0,bb=0,bs=0,bv=0,bp=0,bpop=0;
	double pst;
	
	printf(""Unesite vozila: "");
	
	do{
		scanf(""%c"",&ba);
		
		if(ba!='C' &ba!='c' & ba!='B'  &ba!='b'  & ba!='S'  & ba!='s' & ba!='V' & ba!='v'  & ba!='P'  & ba!='p'  & ba!='K'  & ba!='k')
			printf(""Neispravan unos\n"");
		else if (ba=='K' || ba=='k')
			break;
		else {
			if(ba=='C' || ba=='c')
			bc++;
		else if(ba=='B' || ba=='b')
			bb++;
		else if(ba=='S' || ba=='s')
			bs++;
		else if(ba=='V' || ba=='v')
			bv++;
		else if(ba=='P' || ba=='p' )
			bp++;
			
			
			ub++;
			
		}
		
		
		
	}while(ba!='K'&& ba!='k');

	
		
		bpop=bp;
		if(bpop<=bv)
			bpop=bv;
		if(bpop<=bs)
			bpop=bs;
		if(bpop<=bb)
			bpop=bb;
		if(bpop<=bc)
			bpop=bc;
		
		if(ub==0.0)
			pst=0.0;
		else 
		pst=(bpop/ub)*100;
		
		printf(""Ukupno evidentirano %g vozila.\n"",ub);
		
		if(bpop==bc)
			printf(""Najpopularnija boja je crna (%.2f%%)."",pst);
		else if(bpop==bb)
			printf(""Najpopularnija boja je bijela (%.2f%%)."",pst);
		else if (bpop==bs)
			printf(""Najpopularnija boja je siva (%.2f%%)."",pst);
		else if (bpop==bv)
			printf(""Najpopularnija boja je crvena (%.2f%%)."",pst);
		else printf (""Najpopularnija boja je plava (%.2f%%)."",pst);
		
		
		
		
		

	return 0;
}
"
1837,20,20,0,36,A2016/Z5/Z3/student9972,A2016/Z5/Z3/student1833,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};
char unesi(char niz[],int velicina) {
	char znak=getchar();
	int i=0;
	while(znak=='\n')
	znak=getchar();
	while(i< velicina-1 && znak !='\n' ) {
		niz[i++] = znak;
		znak = getchar();
	}
niz[i]='\0';
return znak; }
void ocisti(char znak){
	int ima=0;
	while(znak!='\n')
	znak=getchar(); }
int ucitaj_datoteku(struct Cas raspored[]){
FILE* dat=fopen(""raspored.dat"",""rb"");
if(dat == NULL) return 0;
int ucitanih=fread(raspored,sizeof(struct Cas),KAPACITET,dat);
fclose(dat);
return ucitanih; }
void ispisreda(){
printf(""\n       PON       UTO       SRI"");
printf(""       CET       PET       SUB"");
printf(""\n""); }
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	ispisreda();
	for(i=0;i<broj_casova;i++){
		if(raspored[i].pocetak.sati<min)
		min=raspored[i].pocetak.sati;}
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max ){
			max=raspored[i].kraj.sati;
			indexmaxa=i;
}} if(raspored[indexmaxa].kraj.minute==0) max=max-1;

int x;
int s,dan,n;

for(i=min;i<=max;i++){
	if(i<10) printf(""9:00   "");
	else printf(""%d:00  "",i);
	for(j=1;j<7;j++){
		for(k=0;k<broj_casova;k++){
			s=raspored[k].pocetak.sati;
			dan=raspored[k].dan_u_sedmici;
			n=raspored[k].kraj.sati;
			if(s<=i && dan==j && n>=i) {
				printf(""%-10s"",raspored[k].predmet);
				break;
			}}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");}
			printf(""\n""); }}
			
			void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
				int i;
				printf(""Uneseni su casovi: "");
				int k=1;
				
			for(i=0;i<broj_casova;i++){
				if(raspored[i].dan_u_sedmici==dan){
					printf(""\n%d) %s ("",k++,raspored[i].predmet);
					if(raspored[i].pocetak.sati<10) printf(""0"");
					printf(""%d:"",raspored[i].pocetak.sati);
					if (raspored[i].pocetak.minute<10) printf(""0"");
					printf(""%d-"",raspored[i].pocetak.minute);
					printf(""%02d:%02d)"",raspored[i].kraj.sati,raspored[i].kraj.minute);
				}
			}}
			int zapisi_datoteku(struct Cas raspored[], int broj_casova){
				FILE* dat = fopen(""raspored.dat"", ""wb"");
				int ucitano=fwrite(raspored, sizeof(struct Cas), broj_casova, dat);
				fclose(dat);
				if(ucitano>0) return 1;
				return ucitano; }
				void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
					int i; int k=0; int j, brojac=1;
					for(i=0;i<broj_casova;i++){
					if(raspored[i].dan_u_sedmici==dan){ k++; brojac++;
					if(k==redni_broj){
						
						for(j=i;j<broj_casova-1;j++)
						raspored[j]=raspored[j+1];
						
						if(brojac>0)break; } }}}
						int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){
							int i;
						int minpoc1,minpoc2,minkraj1,minkraj2;
						for(i=0;i<broj_casova;i++) {
							minpoc1=raspored[i].pocetak.minute+raspored[i].pocetak.sati*60;
							minkraj1=raspored[i].kraj.minute+raspored[i].kraj.sati*60;
							minpoc2=cas.pocetak.minute+cas.pocetak.sati*60;
							minkraj2=cas.kraj.minute+cas.kraj.sati*60;
						if (raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<minpoc2 && minkraj1>minpoc2 || minpoc2<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 && cas.kraj.minute+cas.kraj.sati*60>minkraj1 || raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 && minkraj1>cas.kraj.minute+cas.kraj.sati*60))
						return 1;
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (minpoc2==minpoc1 || minkraj1==minkraj2))
						return 1; 
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&(minpoc1<minpoc2 && minkraj1>minpoc2 || minpoc2<minpoc1 && minkraj2>minkraj1 || minpoc1<minkraj2 && minkraj1>minkraj2))
						return 1; }
						return 0;}
						int dodaj_cas(struct Cas raspored[], int broj_casova, const char*predmet, int trajanje){
							if (broj_casova==200) return 0;
							int i,j,preklop;
							for(i=0; i<6; i++)
								for(j=9; j<=19-trajanje; j++){
									struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
									char *q=cas.predmet,*p=(char*)predmet;
									struct Cas cc;
									while(*q++=*p++);
									preklop=preklapanje(raspored,broj_casova,cas);
									if(preklop==0){
										raspored[broj_casova]=cas;
										return 1;
									} if(preklop==1) continue; }
									return 0; }
									void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
								int i,redni=0;
								for(i=0;i<broj_casova; i++){
									if(raspored[i].dan_u_sedmici==dan) redni++;
									if(redni_broj==redni)
									raspored[i]=promjena; }}
								int main () {
									int opcija,broj_casova=0;
									struct Cas raspored[KAPACITET];
									ucitaj_datoteku(raspored);
									do{
										printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
										scanf(""%d"",&opcija);
										int broj=opcija;
										switch(opcija){
											case 0: {
												zapisi_datoteku(raspored,broj_casova);
												break;
											} case 1:{
												if(broj!=0)   ispis_rasporeda(raspored,broj_casova);
												break;}
												case 2:  if(broj!=0)
											{
								
												int br_casova,dodan=0;
												char  predmet[10];
												printf(""Unesite naziv predmeta: Unesite broj casova: "");
												if(broj!=0)   ocisti(unesi(predmet,10));
												scanf(""%d"",&br_casova);
												dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
												int vr=dodan;
											if(vr==0)
											printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
											if(vr==1)  broj_casova++;
											
											break;}
											case 4: if(broj!=0)
											{
												int dan,redni;
												int br=broj_casova;
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,br,dan);
												printf(""\nIzaberite koji cas zelite obrisati: "");
											    scanf(""%d"",&redni);
											    obrisi_cas(raspored,br,dan,redni);
											    printf("" Cas obrisan\n"");
											    broj_casova--;
											}
											case 3:  if(broj!=0){
												struct Cas promjena;
												int dan,redni;
												char *q,*p;
												char znak,predmet[10];
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,broj_casova,dan);
												promjena.dan_u_sedmici=dan;
												printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
												scanf(""%d"",&redni);
												ocisti(unesi(predmet,10));
												q=promjena.predmet;
												p=predmet;
												strcpy(q,p);
												printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
												scanf(""%d%c"",&promjena.pocetak.sati,&znak);
												scanf(""%d"",&promjena.pocetak.minute);
												scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
												promijeni_cas(raspored,broj_casova,dan,redni,promjena);
												break;}
										} 
										
									} while(opcija!=0);
									    
									    
									    	return 0; 
									
								}
									
											
							
						
					
					
			
	


","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati, minute, sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

void unesi(char niz[]) {
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<9 && znak!='\n') {
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	while(znak!='\n')
	znak=getchar();
}


int ucitaj_datoteku(struct Cas raspored[]) {
	FILE *ulaz=fopen(""raspored.dat"", ""rb+"");
	int greska=0;
	FILE *ulaz1=fopen(""raspored.dat"", ""rb+"");
	if(ulaz==NULL || ulaz1==NULL) {
		greska=1;
		return 0;
	}
  
   int ucitano=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz);
   int ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);
   fclose(ulaz);
   fclose(ulaz1);

return ucitano1                      ;
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova) {
	FILE* dat=fopen(""raspored.dat"", ""wb"");
	int vel=sizeof(struct Cas);
    int ucitano=fwrite(raspored,vel,broj_casova,dat);
	fclose(dat);
	if(ucitano>0) return 1;
	return ucitano;
	}

void ispis_rasporeda(struct Cas raspored[], int broj_casova) {
	int i, j, k, x, s, min=100, max=0;
	int indexmaxa=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].pocetak.sati<min) min=raspored[i].pocetak.sati;
		if(raspored[i].kraj.sati>max) {
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	if(raspored[indexmaxa].kraj.minute==0) max=max-1;
	printf(""\n       PON       UTO       SRI"");
	printf(""       CET       PET       SUB\n"");
	for(i=min;i<=max;i++) {
		if(i<10) printf(""%d:00   "",i);
		else printf(""%d:00  "", i);
		
		for(j=1;j<7;j++) {
			for(k=0;k<broj_casova;k++) {
				s=raspored[k].pocetak.sati; 
				if(s<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i) {
					printf(""%-10s"", raspored[k].predmet);
					break;
					x=i;
				}
			}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");
		}
		printf(""\n"");
	}
	//printf(""\n"");
}

int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas) {
	int i;
	for(i=0;i<broj_casova;i++) {
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&
		(cas.pocetak.minute+cas.pocetak.sati*60==raspored[i].pocetak.minute+raspored[i].pocetak.sati*60
		|| raspored[i].kraj.minute+raspored[i].kraj.sati*60==cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && 
		(raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.pocetak.minute+cas.pocetak.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.pocetak.minute+cas.pocetak.sati*60 || 
		cas.pocetak.minute+cas.pocetak.sati*60<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 &&
		cas.kraj.minute+cas.kraj.sati*60>raspored[i].kraj.minute+raspored[i].kraj.sati*60 ||
		raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
	}
	return 0;
}

void ispisi_dan(struct Cas raspored[], int broj_casova, int dan) {
	int brojac=1;
	int i;
	printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) {
			printf(""\n%d) %s (%02d:%02d-%02d:%02d)"", brojac,
			raspored[i].predmet, raspored[i].pocetak.sati,
			raspored[i].pocetak.minute,raspored[i].kraj.sati,
			raspored[i].kraj.minute);
			brojac++;
		}
	}
}

void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj) {
	int i, j;
	int k=0;
	int n=1;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) { k++; n++; }
		if(k==redni_broj) {
			for(j=i;j<broj_casova-1;j++) {
				raspored[j]=raspored[j+1];
			}
			if(n>0) break;
			return;
		}
	}
}

int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje) {
	if(broj_casova==200 || trajanje>10) return 0;
	int i, k, pocetak, dan, poc, moze=0;
	struct Cas cas;
	
	for(i=1;i<7;i++) 
	  for(k=9;k<=19-trajanje;k++) {
	  	dan=i;
	  	poc=k;
	  	strcpy(cas.predmet,predmet);
	  	cas.dan_u_sedmici=dan;
	  	cas.pocetak.sati=poc;
	  	cas.kraj.sati=k+trajanje;
	  	cas.pocetak.minute=cas.kraj.minute=0;
	  	if(preklapanje(raspored,broj_casova,cas)==0) {
	  	raspored[broj_casova]=cas;
	  	return 1;
	  }
}
  return 0;
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan,int redni_broj, struct Cas promjena) {
	int i;
	int k=0;
	int index=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) k++;
		if(k==redni_broj) {
			index=i;
			break;
		}
}
  raspored[index]=promjena;
}

int poziv(struct Cas raspored[], int ucit, char* ime, int br) {
	int vr=dodaj_cas(raspored,ucit,ime,br);
	return vr;
}

struct Cas zamj(struct Cas casko, int dan, int sat, int min, int sat1, int min1) {
	casko.dan_u_sedmici=dan;
	casko.pocetak.sati=sat;
	casko.pocetak.minute=min;
	casko.kraj.sati=sat1;
	casko.kraj.minute=min1;
	return casko;
	
}
int main() {
	struct Cas raspored[KAPACITET];
	int ucit=ucitaj_datoteku(raspored);
	int broj, br, rez, dan, cs, zap, m;
	char ime[100];
	for (m=0;m<KAPACITET;m++)
	{
		raspored[m].pocetak.sati=0;
		raspored[m].kraj.sati=0;
		raspored[m].dan_u_sedmici=1;
		raspored[m].pocetak.minute=0;
		raspored[m].kraj.minute=0;
		raspored[m].pocetak.sekunde=0;
		raspored[m].kraj.sekunde=0;
	}
	poc:
	printf(""1) Ispis rasporeda\n"");
	printf(""2) Dodavanje casa\n"");
	printf(""3) Promjena casa\n"");
	printf(""4) Brisanje casa\n"");
	printf(""0) Kraj rada\n"");
	printf(""Izaberite opciju: "");
	scanf(""%d"", &broj);
	switch(broj) {
		case 1:
		ispis_rasporeda(raspored,ucit);
		if(broj==0) return 0;
		break;
		
		case 2:
		printf(""Unesite naziv predmeta: "");
		unesi(ime);
		printf(""Unesite broj casova: "");
		scanf(""%d"", &br);
		if(broj==0) return 0;
		rez=poziv(raspored,ucit,ime,br);
		if(rez==0) printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"", br);
		if(rez==1) ucit++;
		break;
	
       case 4:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     ispisi_dan(raspored,ucit,dan);
     printf(""\nIzaberite koji cas zelite obrisati: "");
     scanf(""%d"", &cs);
     obrisi_cas(raspored,ucit,dan,cs);
     if(broj==0) return 0;
     printf(""Cas obrisan\n"");
     ucit--;
     break;
     
     case 3:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     int sat, min;
     char z;
     int sat1, min1;
     char z1;
     ispisi_dan(raspored,ucit,dan);
     if(broj==0) return 0;
     printf(""\nIzaberite koji cas zelite promijeniti: "");
     scanf(""%d"", &cs);
     printf(""Naziv predmeta: "");
     unesi(ime);
     printf(""Vrijeme pocetka: "");
     scanf(""%d"", &sat);
     scanf(""%c"", &z);
     scanf(""%d"", &min);
     printf(""Vrijeme zavrsetka: "");
     scanf(""%d"", &sat1);
     scanf(""%c"", &z1);
     scanf(""%d"", &min1);
     struct Cas casko={ime,dan,{sat,min,0},{sat1,min1,0}};
     strcpy(casko.predmet,ime);
     casko=zamj(casko,dan,sat,min,sat1,min1);
     promijeni_cas(raspored,ucit,dan,cs,casko);
     break;
     
     case 0:
     zap=zapisi_datoteku(raspored,ucit);
     return 0;
	}
	if(broj!=0) goto poc;
	return 0;
}
"
1845,83,83,0,42,A2016/Z2/Z3/student8329,A2016/Z2/Z3/student3421,"#include <stdio.h>

int main() {
	char mat[20][20];
	int i,j,brtac;
	int br;
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&brtac);
	while((brtac<1)||(brtac>10))
	{
		printf(""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&brtac);
		
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			mat[i][j]=' ';
			
		}
	}
	for(br=0;br<brtac;br++)
	{
		printf(""Unesite %d. tacku: "",br+1);
		scanf(""%d %d"",&i,&j);
		while((i<0)||(i>19)||(j<0)||(j>19))
		{
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "",br+1);
			scanf(""%d %d"",&i,&j);
		}
		mat[i][j]='*';
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			printf(""%c"",mat[j][i]);	
			
		}
		printf(""\n"");
	}
	

	return 0;
	}

","#include <stdio.h>

int main() {
	int broj_tacaka,brojac,n,m;
	char niz[20][20];
	
	
	
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &broj_tacaka);
	while(broj_tacaka<1 || broj_tacaka>10)
{	printf(""Pogresan unos\n"");
	    
	    printf(""Unesite broj tacaka: "");
	    scanf(""%d"", &broj_tacaka);
    
}
      for(n=0; n<20; n++)
      {
          for(m=0; m<20; m++)
      
      {
          niz[n][m]=' '; 
      }}
  
   for(brojac=0; brojac<broj_tacaka; brojac++)
   {
      	printf(""Unesite %d. tacku: "", brojac+1);
       	scanf(""%d"",&n);
    	scanf(""%d"", &m);
        while(n<0 || m<0 || n>19 || m>19)
        {
        	
        printf(""Pogresan unos\n""); 
        printf(""Unesite %d. tacku: "", brojac+1);
        scanf(""%d"",&n);
        scanf(""%d"", &m);}
        niz[n][m]='*';
       }
        

        
        for(n=0; n<20; n++)
        {
           for(m=0; m<20; m++){
              printf(""%c"", niz[m][n]);
              
           }
            printf(""\n"");
          }
		return 0;
}
"
1862,89,89,0,47,A2016/Z2/Z4/student5261,A2016/Z2/Z4/student6723,"#include <stdio.h>
#define VISINA 100
#define SIRINA 100

int main()
{
	int M, N, i, j, CIRKULARNA = 1, TEPLICA = 1;
	double mat[VISINA][SIRINA];
	do
	{
		printf(""Unesite M i N: "");
		scanf(""%d %d"", &M, &N);
		if(M<=0 || N<=0 || M>100 || N>100)
		{
			printf(""Pogresan unos!\n"");
		}
		
	}
	while(M<=0 || N<=0 || M>100 || N>100);
	printf(""Unesite elemente matrice: "");
	for(i=0; i<M; i++)
	{
		for(j=0; j<N; j++)
		{
			scanf(""%lf"", &mat[i][j]);
		}
	}
	for(i=0; i<M-1; i++)
	{
		for(j=0; j<N-1; j++)
		{
			if(mat[i][j] != mat[i+1][j+1] || mat[i][N-1] != mat[i+1][0])
			{
			CIRKULARNA = 0;
			}
			break;
		}
	}
	if(N == 1 && M != 1)
	CIRKULARNA = 0;
	if(CIRKULARNA)
	{
		printf(""Matrica je cirkularna"");
		return 0;
	}
	for(i=0; i<M-1; i++)
	{
		for(j=0; j<N-1; j++)
		{
			if(mat[i][j] != mat[i+1][j+1])
			{
				TEPLICA = 0;
			}
			break;
		}
	}
	if(TEPLICA)
	{
		printf(""Matrica je Teplicova"");
		return 0;
	}
	
	printf(""Matrica nije ni cirkularna ni Teplicova"");
	
	
	
	return 0;
	
}


","#include <stdio.h>
#define SIRINA 100

int main() {
	int i,j,m,n,teplicova=1,cirkularna=1;
	double mat[SIRINA][SIRINA];
	do {
	printf(""Unesite M i N: "");
	scanf(""%d %d"",&m,&n);
	if(m<=0 || m>100 || n<=0 || n>100) printf(""Pogresan unos!\n""); } while(m<=0 || m>100 || n<=0 || n>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++) {
		for(j=0;j<n;j++) {
			scanf(""%lf"",&mat[i][j]);
		}
	}
	
		for(i=0;i<m-1;i++) {
			for(j=0;j<n-1;j++) {
				if(mat[i][j]!=mat[i+1][j+1] || mat[i][n-1]!=mat[i+1][0]) {
					cirkularna=0;
					break;
				}
			}
			if(cirkularna==0) break;
		}
		if(cirkularna==1) printf(""Matrica je cirkularna"");
		
		else {
	
	for(i=0;i<m-1;i++) {
		for(j=0;j<n-1;j++) {
			if(mat[i][j]!=mat[i+1][j+1]) {
				teplicova=0;
				break; }
		}
		if(teplicova==0) break;
		
	}
	if(teplicova==1) printf(""Matrica je Teplicova"");
	
}
	if(teplicova==0 && cirkularna==0) printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
"
1866,99,99,0,149,A2016/Z4/Z3/student3900,A2016/Z4/Z3/student7802,"#include <stdio.h>
#include <stdlib.h>
int broj_slova (char* rijec){
	int brojac=0;
		
		while((*rijec>='A' && *rijec<='Z')||(*rijec>='a'&&*rijec<='z')){brojac++;rijec++;}
	
	return brojac;
}

int provjera_rijeci (char* rijec,char* rijec_izbacujemo){
	
	while(*rijec==*rijec_izbacujemo){
		
		rijec++;
		rijec_izbacujemo++;
		if((!((*rijec>='A' && *rijec<='Z') || (*rijec>='a' && *rijec<='z'))))
			break;
	}
	
	if(!((*rijec_izbacujemo>='A' && *rijec_izbacujemo<='Z') || (*rijec_izbacujemo>='a' && *rijec_izbacujemo<='z')) && (!((*rijec>='A' && *rijec<='Z') || (*rijec>='a' && *rijec<='z'))))
		return 1;
	
	
	
	return 0;
}

char* ubacujemo_rijec (char* pocetak_rijeci, int brojslova,char* ubacujemo){
		char* pocetak=pocetak_rijeci;
		char* kraj;
		kraj=pocetak_rijeci;
			
			
			if(brojslova<0){
				
				while((*ubacujemo>='A' && *ubacujemo<='Z')||(*ubacujemo>='a' && *ubacujemo<='z')){
					*pocetak_rijeci=*ubacujemo;
					pocetak_rijeci++;
					ubacujemo++;
				}
				
				*(pocetak+1)='\0';
					
				
				
			}
			else{
				while(*kraj!='\0'){
					kraj++;
				
			}
				while(kraj>pocetak_rijeci){
					*(kraj + brojslova ) = *kraj;
					kraj--;
				
				}	
			
				while((*ubacujemo>='A' && *ubacujemo<='Z')||(*ubacujemo>='a' && *ubacujemo<='z')){
					*pocetak_rijeci=*ubacujemo;
					pocetak_rijeci++;
					ubacujemo++;
				}
			}
	return pocetak;
			
}	
				
	
	
	



char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	char* p=tekst;
	char* q=tekst;
	char* izbacujemo;
	char* ubacujemo;
	char* kizbacujemo;
	char* kraj;
	int i=0,k=0,s=0,kizbac=0;
	int brojslova;
	

		for(i=0;i<broj_rijeci;i++){
			izbacujemo = rijeci[i];
			ubacujemo = zamjene[i];
			q=p;
			kizbac=0;
			kizbacujemo=izbacujemo;
			
			while((*kizbacujemo>='A' && *kizbacujemo<='Z') || (*kizbacujemo>='a' && *kizbacujemo<='z')) {
				
				kizbac++;
				kizbacujemo++;
			}
			
			while(*q!='\0'){
				
				while(*q!=*izbacujemo) {
					q++;
					if(*q=='\0')
						break;
				}
				if(*q=='\0') break;
				
				k=0;
				if(s==0){k = provjera_rijeci(q,izbacujemo);}
				else{
				if((*(q-1)>='A' && *(q-1)<='Z')||(*(q-1)>='a' && *(q-1)<='z'));
			
				else
				k = provjera_rijeci(q,izbacujemo);
				}
				s++;
					if(k==1){
						brojslova =  (broj_slova(ubacujemo)-kizbac);
						kraj=q;			
						q=ubacujemo_rijec(kraj,brojslova,ubacujemo);
						
						
					}
			
			q++;		
			}
		}	

	return p;
}
void unesi(char niz[], int velicina) {
    char znak = getchar();
    int i=0;
    if (znak == '\n') znak=getchar();
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i]='\0';
}

int main() {
char* rijeci[2] = { ""Prijestolonasljednikovica"" };
	char* zamjene[2] = { ""c"" };
	char tekst[100];
	
	printf(""Unesite neki tekst: "");
	unesi(tekst,100);
	zamjena_rijeci(tekst, rijeci, zamjene, 1);
	printf(""%s"",zamjena_rijeci(tekst, rijeci, zamjene, 1));
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
int broj_slova (char* rijec){
	int brojac=0;
		
		while((*rijec>='A' && *rijec<='Z')||(*rijec>='a'&&*rijec<='z')){brojac++;rijec++;}
	
	return brojac;
}

int provjera_rijeci (char* rijec,char* rijec_izbacujemo){
	
	while(*rijec==*rijec_izbacujemo){
		
		rijec++;
		rijec_izbacujemo++;
		if((!((*rijec>='A' && *rijec<='Z') || (*rijec>='a' && *rijec<='z'))))
			break;
	}
	
	if(!((*rijec_izbacujemo>='A' && *rijec_izbacujemo<='Z') || (*rijec_izbacujemo>='a' && *rijec_izbacujemo<='z')) && (!((*rijec>='A' && *rijec<='Z') || (*rijec>='a' && *rijec<='z'))))
		return 1;
	
	
	
	return 0;
}

char* ubacujemo_rijec (char* pocetak_rijeci, int brojslova,char* ubacujemo){
		char* pocetak=pocetak_rijeci;
		char* kraj;
		kraj=pocetak_rijeci;
			
			
			if(brojslova<0){
				
				while((*ubacujemo>='A' && *ubacujemo<='Z')||(*ubacujemo>='a' && *ubacujemo<='z')){
					*pocetak_rijeci=*ubacujemo;
					pocetak_rijeci++;
					ubacujemo++;
				}
				
				*(pocetak+1)='\0';
					
				
				
			}
			else{
				while(*kraj!='\0'){
					kraj++;
				
			}
				while(kraj>pocetak_rijeci){
					*(kraj + brojslova ) = *kraj;
					kraj--;
				
				}	
			
				while((*ubacujemo>='A' && *ubacujemo<='Z')||(*ubacujemo>='a' && *ubacujemo<='z')){
					*pocetak_rijeci=*ubacujemo;
					pocetak_rijeci++;
					ubacujemo++;
				}
			}
	return pocetak;
			
}	
				
	
	
	



char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	char* p=tekst;
	char* q=tekst;
	char* izbacujemo;
	char* ubacujemo;
	char* kizbacujemo;
	char* kraj;
	int i=0,k=0,s=0,kizbac=0;
	int brojslova;
	

		for(i=0;i<broj_rijeci;i++){
			izbacujemo = rijeci[i];
			ubacujemo = zamjene[i];
			q=p;
			kizbac=0;
			kizbacujemo=izbacujemo;
			
			while((*kizbacujemo>='A' && *kizbacujemo<='Z') || (*kizbacujemo>='a' && *kizbacujemo<='z')) {
				
				kizbac++;
				kizbacujemo++;
			}
			
			while(*q!='\0'){
				
				while(*q!=*izbacujemo) {
					q++;
					if(*q=='\0')
						break;
				}
				if(*q=='\0') break;
				
				k=0;
				if(s==0){k = provjera_rijeci(q,izbacujemo);}
				else{
				if((*(q-1)>='A' && *(q-1)<='Z')||(*(q-1)>='a' && *(q-1)<='z'));
			
				else
				k = provjera_rijeci(q,izbacujemo);
				}
				s++;
					if(k==1){
						brojslova =  (broj_slova(ubacujemo)-kizbac);
						kraj=q;			
						q=ubacujemo_rijec(kraj,brojslova,ubacujemo);
						
						
					}
			
			q++;		
			}
		}	

	return p;
}
void unesi(char niz[], int velicina) {
    char znak = getchar();
    int i=0;
    if (znak == '\n') znak=getchar();
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i]='\0';
}

int main() {
char* rijeci[2] = { ""Prijestolonasljednikovica"" };
	char* zamjene[2] = { ""c"" };
	char tekst[100];
	
	printf(""Unesite neki tekst: "");
	unesi(tekst,100);
	zamjena_rijeci(tekst, rijeci, zamjene, 1);
	printf(""%s"",zamjena_rijeci(tekst, rijeci, zamjene, 1));
	return 0;
}"
1882,99,99,0,99,A2016/Z5/Z1/student9972,A2016/Z5/Z1/student9538,"#include <string.h>
#include <stdio.h>
#define epsilon 0.0001

struct Student {
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena; 
};
int uporedi(char*s1,char*s2) {
	if(strcmp(s1,s2)==0) return 0;
	if(strcmp(s1,s2)<0)return 1;
	else return 2;
}
float prosjek(int niz[],int vel) {
	if(vel==0) return 5;
	int i=0,suma=0;
	for(i=0;i<vel;i++)
	if (niz[i]==5) return 5;
	for(i=0;i<vel;i++)
	suma=suma+niz[i];
	return(float)suma/vel; }
	int dalijeveci(struct Student pr,struct Student dr){
		float prosjekprvog=prosjek(pr.ocjene,pr.br_ocjena);
		float prosjekdrugog=prosjek(dr.ocjene,dr.br_ocjena);
		int sta_je_vratila_f=uporedi(pr.prezime,dr.prezime);
		if(prosjekprvog>prosjekdrugog) return 1;
		if(prosjekprvog<prosjekdrugog) return 0;
		if(sta_je_vratila_f==1) return 1;
		if(sta_je_vratila_f==2) return 0;
		int nesto=uporedi(pr.ime,dr.ime);
		if(nesto==1) return 1;
		if(nesto==2) return 0;
		else return 1; }
		int izbacivanj(struct Student niz[],int vel,double prosjekk){
			int i;int j; int izmjena=0;
			for(i=0;i<vel;i++){
				izmjena=0;
				if (prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon) izmjena=1;
			if(izmjena==1){
				for(j=i;j<vel-1;j++){
					niz[j]=niz[j+1];
				}
				vel--; i--;
			} }return vel;}
			int genijalci(struct Student niz[],int vel, double prosjekk) {
				int i,indexprvi,indexdrugi,indextreci,indexmin=0;
				double min=10;
				
				vel=izbacivanj(niz,vel,prosjekk);
				if(vel==0) return 0;
				for(i=0;i<vel;i++) {
					if(min-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon){
						min=prosjek(niz[i].ocjene,niz[i].br_ocjena);
						indexmin=i;
					}
				}
				indexprvi=indexmin;
				indexdrugi=indexmin;
				indextreci=indexmin;
				if(vel==1){
					printf(""\n%s %s"",niz[indexprvi].prezime,niz[indexprvi].ime);
					return 1;
				}
			if(vel==2){
				for(i=0;i<vel;i++) {
					if(dalijeveci(niz[i],niz[indexprvi])==1)
					indexprvi=i;}
					printf(""%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);
					for(i=0;i<vel;i++){
						if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){
							indexdrugi=i;
						}
					} printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
					return 2;}
					else { 
						for(i=0;i<vel;i++){
							if(dalijeveci(niz[i],niz[indexprvi])==1)
							indexprvi=i;}
							printf(""%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);
							for(i=0;i<vel;i++){
								if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){
									indexdrugi=i;
								}
							}
							printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
								for(i=0;i<vel;i++){
									if(dalijeveci(niz[i],niz[indextreci])==1 && i!=indexprvi && i!=indexdrugi)
									indextreci=i;
								}
				
							printf(""%s %s\n"",niz[indextreci].prezime,niz[indextreci].ime);
					}
						 return vel;
						}
						int main() {
							struct Student studenti[5]={
								{""Mujo"",""Mujic"",{7,7,7,7,8},5},
								{""Meho"",""Mujic"",{7,7,7,7,8},5},
								{""Beba"",""Bebic"",{10, 10, 10, 10, 5}, 5} 
							};
						genijalci(studenti, 3, 6.5);
						return 0; }
			
	
	

","#include <string.h>
#include <stdio.h>
#define epsilon 0.0001

struct Student {
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena; 
};
int uporedi(char*s1,char*s2) {
	if(strcmp(s1,s2)==0) return 0;
	if(strcmp(s1,s2)<0)return 1;
	else return 2;
}
float prosjek(int niz[],int vel) {
	if(vel==0) return 5;
	int i=0,suma=0;
	for(i=0;i<vel;i++)
	if (niz[i]==5) return 5;
	for(i=0;i<vel;i++)
	suma=suma+niz[i];
	return(float)suma/vel; }
	int dalijeveci(struct Student pr,struct Student dr){
		float prosjekprvog=prosjek(pr.ocjene,pr.br_ocjena);
		float prosjekdrugog=prosjek(dr.ocjene,dr.br_ocjena);
		int sta_je_vratila_f=uporedi(pr.prezime,dr.prezime);
		if(prosjekprvog>prosjekdrugog) return 1;
		if(prosjekprvog<prosjekdrugog) return 0;
		if(sta_je_vratila_f==1) return 1;
		if(sta_je_vratila_f==2) return 0;
		int nesto=uporedi(pr.ime,dr.ime);
		if(nesto==1) return 1;
		if(nesto==2) return 0;
		else return 1; }
		int izbacivanj(struct Student niz[],int vel,double prosjekk){
			int i;int j; int izmjena=0;
			for(i=0;i<vel;i++){
				izmjena=0;
				if (prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon) izmjena=1;
			if(izmjena==1){
				for(j=i;j<vel-1;j++){
					niz[j]=niz[j+1];
				}
				vel--; i--;
			} }return vel;}
			int genijalci(struct Student niz[],int vel, double prosjekk) {
				int i,indexprvi,indexdrugi,indextreci,indexmin=0;
				double min=10;
				
				vel=izbacivanj(niz,vel,prosjekk);
				if(vel==0) return 0;
				for(i=0;i<vel;i++) {
					if(min-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon){
						min=prosjek(niz[i].ocjene,niz[i].br_ocjena);
						indexmin=i;
					}
				}
				indexprvi=indexmin;
				indexdrugi=indexmin;
				indextreci=indexmin;
				if(vel==1){
					printf(""\n%s %s"",niz[indexprvi].prezime,niz[indexprvi].ime);
					return 1;
				}
			if(vel==2){
				for(i=0;i<vel;i++) {
					if(dalijeveci(niz[i],niz[indexprvi])==1)
					indexprvi=i;}
					printf(""%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);
					for(i=0;i<vel;i++){
						if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){
							indexdrugi=i;
						}
					} printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
					return 2;}
					else { 
						for(i=0;i<vel;i++){
							if(dalijeveci(niz[i],niz[indexprvi])==1)
							indexprvi=i;}
							printf(""%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);
							for(i=0;i<vel;i++){
								if(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){
									indexdrugi=i;
								}
							}
							printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
								for(i=0;i<vel;i++){
									if(dalijeveci(niz[i],niz[indextreci])==1 && i!=indexprvi && i!=indexdrugi)
									indextreci=i;
								}
				
							printf(""%s %s\n"",niz[indextreci].prezime,niz[indextreci].ime);
					}
						 return vel;
						}
						int main() {
							struct Student studenti[5]={
								{""Mujo"",""Mujic"",{7,7,7,7,8},5},
								{""Meho"",""Mujic"",{7,7,7,7,8},5},
								{""Beba"",""Bebic"",{10, 10, 10, 10, 5}, 5} 
							};
						genijalci(studenti, 3, 6.5);
						return 0; }
			
	
	

"
1885,99,99,0,108,A2016/Z3/Z3/student4824,A2016/Z3/Z3/student3610,"#include <stdio.h>

int main() {
	int m,n,i,j,z;
	int r=0,q=0,s=0,mat[200][200]={{0}};
	do {
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"",&m,&n);
		if((m<=0) || (m>200) || (n<=0) || (n>200))
		{
			printf(""Brojevi nisu u trazenom opsegu.\n"");
			
		}
		
	}while((m<=0)|| (m>200) || (n<=0) || (n>200));
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++)
		{
			scanf(""%d "",&mat[i][j]);
			
		}
		
	}
	/* Ponovljene redove/vrste izbacujemo*/ 
	for(z=0;z<(m-1);z++)
	{
		for(i=0;i<m;i++)
		{
			for(j=0;j<n;j++)
			{
				if(z==(i+1));
				else if(mat[z][j]==mat[i+1][j])
				r=1;
				else
				{
					r=0;
					break;
					
				}
				
			} 
			/*Pomijeramo preostale redove/vrste*/
			if(r==1)
			{
				for(q=i;q<(m-2);q++)
				{
					for(s=0;s<n;s++)
					{
						mat[q+1][s]=mat[q+2][s];
					}
					
				}
				m--;
				
			}
			
		}
		
	}
	/*Ponovljene kolone izbacujemo */ 
	for (z=0;z<(n-1);z++)
	{
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				if(z==(i+1));
				else if(mat[j][z]==mat[j][i+1])
				r=1;
				else 
				{
					r=0;
					break;
					
				}
				
			} 
			/* Pomijeramo preostale kolone */ 
			if(r==1)
			{
				for(q=0;q<m;q++)
				{
					for(s=i;s<(n-2);s++)
					{
						mat[q][s+1]=mat[q][s+2];
						
					}
					
				}
				n--;
				
			}
			
		}
		
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++)
		{
			printf(""%5d"",mat[i][j]);
			
		}
		printf(""\n"");
		
	}
	return 0;
	
}
","#include <stdio.h>

int main() {
	int m,n,i,j,z;
	int r=0,q=0,s=0,mat[200][200]={{0}};
	do {
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"",&m,&n);
		if((m<=0) || (m>200) || (n<=0) || (n>200))
		{
			printf(""Brojevi nisu u trazenom opsegu.\n"");
			
		}
		
	}while((m<=0)|| (m>200) || (n<=0) || (n>200));
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++)
		{
			scanf(""%d "",&mat[i][j]);
			
		}
		
	}
	/* Ponovljene redove/vrste izbacujemo*/ 
	for(z=0;z<(m-1);z++)
	{
		for(i=0;i<m;i++)
		{
			for(j=0;j<n;j++)
			{
				if(z==(i+1));
				else if(mat[z][j]==mat[i+1][j])
				r=1;
				else
				{
					r=0;
					break;
					
				}
				
			} 
			/*Pomijeramo preostale redove/vrste*/
			if(r==1)
			{
				for(q=i;q<(m-2);q++)
				{
					for(s=0;s<n;s++)
					{
						mat[q+1][s]=mat[q+2][s];
					}
					
				}
				m--;
				
			}
			
		}
		
	}
	/*Ponovljene kolone izbacujemo */ 
	for (z=0;z<(n-1);z++)
	{
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				if(z==(i+1));
				else if(mat[j][z]==mat[j][i+1])
				r=1;
				else 
				{
					r=0;
					break;
					
				}
				
			} 
			/* Pomijeramo preostale kolone */ 
			if(r==1)
			{
				for(q=0;q<m;q++)
				{
					for(s=i;s<(n-2);s++)
					{
						mat[q][s+1]=mat[q][s+2];
						
					}
					
				}
				n--;
				
			}
			
		}
		
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++)
		{
			printf(""%5d"",mat[i][j]);
			
		}
		printf(""\n"");
		
	}
	return 0;
	
}
"
1897,98,98,0,70,A2016/Z2/Z2/student6824,A2016/Z2/Z2/student5899,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define  GR 500
#define PI 3.1415926
int main()
{
	int i,br_ugl,ukstep,ukmin,sekunde,j;
	double selma[GR]={0};
	long double uksek=0;
	/*unos uglova*/
	
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&br_ugl);
	
	
	for(i=0;i<br_ugl;i++)
	{
		scanf(""%lf"",&selma[i]);
	}
	
	
	/*izbacivanje ugl>30*/
	
	for(i=0;i<br_ugl;i++)
	{
		uksek=(float)(fabs(selma[i]*180/PI)*3600);
		uksek=(int)(uksek+0.5);
		ukstep=(uksek/3600); 
		
		ukmin=abs((uksek-ukstep*3600)/60);
		sekunde=abs((uksek-ukstep*3600-ukmin*60));
	
		 if(sekunde>30)
		 {
			for(j=i;j<br_ugl-1;j++)
			{
				selma[j]=selma[j+1];
		}
		br_ugl--;
		i--;
		}
	
	}
		
	printf(""Uglovi su:\n"");
	for(i=0;i<br_ugl;i++)
	{
		uksek=(float)(fabs(selma[i]*180/PI)*3600);
		uksek=((int)(uksek+0.5));
		ukstep=(uksek/3600); 
		
		ukmin=abs((uksek-ukstep*3600)/60);
		sekunde=abs((uksek-ukstep*3600-ukmin*60));
	
		
	
	
	if(sekunde>=60)
	{
		ukmin=ukmin+1;
		sekunde=sekunde-60;
	}
	if(ukmin>=60)
	{
		ukstep=ukstep+1;
		ukmin=ukmin-60;
	}
	if(selma[i]<0)
	{
		printf(""-%d stepeni %d minuta %d sekundi\n"",ukstep,ukmin,sekunde);
	}
	else
	 {
		printf(""%d stepeni %d minuta %d sekundi\n"",ukstep,ukmin,sekunde);
	 }
	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define  GR 500
#define PI 3.1415926
int main()
{
	int i,br_ugl,ukstep,ukmin,sekunde,j;
	double selma[GR]={0};
	long double uksek=0;
	/*unos uglova*/
	
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&br_ugl);
	
	
	for(i=0;i<br_ugl;i++)
	{
		scanf(""%lf"",&selma[i]);
	}
	
	
	/*izbacivanje ugl>30*/
	
	for(i=0;i<br_ugl;i++)
	{
		uksek=(float)(fabs(selma[i]*180/PI)*3600);
		uksek=(int)(uksek+0.5);
		ukstep=(uksek/3600); 
		
		ukmin=abs((uksek-ukstep*3600)/60);
		sekunde=abs((uksek-ukstep*3600-ukmin*60));
	
		 if(sekunde>30)
		 {
			for(j=i;j<br_ugl-1;j++)
			{
				selma[j]=selma[j+1];
		}
		br_ugl--;
		i--;
		}
	
	}
		
	printf(""Uglovi su:\n"");
	for(i=0;i<br_ugl;i++)
	{
		uksek=(float)(fabs(selma[i]*180/PI)*3600);
		uksek=((int)(uksek+0.5));
		ukstep=(uksek/3600); 
		
		ukmin=abs((uksek-ukstep*3600)/60);
		sekunde=abs((uksek-ukstep*3600-ukmin*60));
	
		
	
	
	if(sekunde>=60)
	{
		ukmin=ukmin+1;
		sekunde=sekunde-60;
	}
	if(ukmin>=60)
	{
		ukstep=ukstep+1;
		ukmin=ukmin-60;
	}
	if(selma[i]<0)
	{
		printf(""-%d stepeni %d minuta %d sekundi\n"",ukstep,ukmin,sekunde);
	}
	else
	 {
		printf(""%d stepeni %d minuta %d sekundi\n"",ukstep,ukmin,sekunde);
	 }
	}
	return 0;
}
"
1898,88,88,0,116,A2016/Z3/Z3/student5298,A2016/Z3/Z3/student9175,"#include <stdio.h>
#include <stdlib.h>

void uzmiRed(int mat[200][200], int niz[],int vel, int red)
{
    int i;
    for(i=0;i<vel;i++)
        niz[i]=mat[red][i];
}

int porediRedKolonu(int niz1[], int niz2[], int vel)
{
    int isti=1,i;
    for(i=0;i<vel;i++)
    {
        if(niz1[i]!=niz2[i])
        {
            isti=0;
            break;
        }
    }
    return isti;
}

void izbaciRed(int mat[200][200], int brRedova, int brKolona, int red)
{
    int i,j;
    for(i=red;i<brRedova-1;i++)
    {
        for(j=0;j<brKolona;j++)
        {
            mat[i][j]=mat[i+1][j];
        }
    }
}

void uzmiKolonu(int mat[200][200], int niz[],int vel, int kolona)
{
    int i;
    for(i=0;i<vel;i++)
        niz[i]=mat[i][kolona];
}

void izbaciKolonu(int mat[200][200], int brRedova, int brKolona, int kolona)
{
    int i,j;
    for(i=0;i<brRedova;i++)
    {
        for(j=kolona;j<brKolona-1;j++)
        {
            mat[i][j]=mat[i][j+1];
        }
    }
}


int main()
{
    int i,j, brRedova, brKolona;
    int red1[200]={0}, red2[200]={0};
    int mat[200][200];

    do{
    printf(""Unesite brojeve M i N: "");
    scanf(""%d%d"", &brRedova, &brKolona);
    if(brRedova<=0 || brRedova>200 || brKolona<=0 || brKolona>200)
    printf(""Brojevi nisu u trazenom opsegu.\n"");
    }while(brRedova<=0 || brRedova>200 || brKolona<=0 || brKolona>200);

    printf(""Unesite elemente matrice: "");
    for(i=0;i<brRedova;i++)
    {
        for(j=0;j<brKolona;j++)
        {
            scanf(""%d"", &mat[i][j]);
        }
    }


    for(i=0;i<brRedova;i++)
    {
        for(j=0;j<brRedova;j++)
        {
            if(i==j) continue;
            else
            {
            uzmiRed(mat,red1,brKolona,i);
            uzmiRed(mat,red2,brKolona,j);
            if(porediRedKolonu(red1,red2,brKolona)==1)
            {
                izbaciRed(mat,brRedova,brKolona,j);
                j--;
                brRedova--;
            }
            }
        }
    }
for(i=0;i<brKolona;i++)
    {
        for(j=0;j<brKolona;j++)
        {
            if(i==j) continue;
            else
            {
            uzmiKolonu(mat,red1,brRedova,i);
            uzmiKolonu(mat,red2,brRedova,j);
            if(porediRedKolonu(red1,red2,brRedova)==1)
            {
                izbaciKolonu(mat,brRedova,brKolona,j);
                j--;
                brKolona--;
            }
            }
        }
    }

    printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
     for(i=0;i<brRedova;i++)
    {
        for(j=0;j<brKolona;j++)
        {
            printf(""%5d"",mat[i][j]);
        }
        printf(""\n"");
    }

    return 0;

}","#include <stdio.h>

void f1(int mat[200][200],int *niz,int velicina,int m){
	int i;
	for(i=0;i<velicina;i++){
		niz[i]=mat[m][i];
	}
}

int f2(int*n1,int*n2,int velicina){
	int i;
	int jednak=1;
	for(i=0;i<velicina;i++){
		if(n1[i]!=n2[i]){
			jednak=0;break;
		}
	}
	return jednak;
}

void f3(int mat[200][200],int brr,int brk,int m){
	int i,j;
	for(i=m;i<brr-1;i++){
		for(j=0;j<brk;j++){
			mat[i][j]=mat[i+1][j];
		}
	}
}

void f4(int mat[200][200],int*niz,int velicina,int n){
	int i;
	for(i=0;i<velicina;i++){
		niz[i]=mat[i][n];
	}
}

void f5(int mat[200][200],int brr,int brk,int n){
	
	int i,j;
	for(i=0;i<brr;i++){
		for(j=n;j<brk-1;j++){
			mat[i][j]=mat[i][j+1];
		}
	}
}


int main() {
	int M,N,i,j;
	int r[200]={0};
	int k[200]={0};
	int mat[200][200];
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d%d"",&M,&N);
		if(M<=0 || M>200 || N<=0 || N>200){printf(""Brojevi nisu u trazenom opsegu.\n"");}
	}while(M<=0 || M>200 || N<=0 || N>200);
	
	printf(""Unesite elemente matrice: "");
    for(i=0;i<M;i++){
    	for(j=0;j<N;j++){
    		scanf(""%d"",&mat[i][j]);
    	}
    }
    
    for(i=0;i<M;i++){
    	for(j=0;j<M;j++){
    		if(i==j)continue;
    		else{ 
    			f1(mat,r,N,i);
    			f1(mat,k,N,j);
    			if(f2(r,k,N)==1){
    				f3(mat,M,N,j);
    				j--;M--;
    			}
    			
    			
    		}
    	}
    }
    
    for(i=0;i<N;i++){
    	for(j=0;j<N;j++){
    		if(i==j)continue;
    		else{
    			f4(mat,r,M,i);
    			f4(mat,k,M,j);
    			if(f2(r,k,M)==1){
    				f5(mat,M,N,j);
    				j--;N--;
    			}
    			
    		}
    	}
    }
    printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
    
    for(i=0;i<M;i++){
    	for(j=0;j<N;j++){
    		if(mat[i][j]>=0 && mat[i][j]<=9){
    		printf(""    %d"",mat[i][j]);}
    		else{
    			printf(""   %d"",mat[i][j]);
    		}
    	}
    	printf(""\n"");
    }
	return 0;
}
"
1910,81,81,0,38,A2016/Z3/Z1/student8957,A2016/Z3/Z1/student4860,"#include <stdio.h>

int DaLiJeProst (int a){
	int b=1,i;
	for (i=2;i<a;i++){
		if (a%i==0) { 
			a=0;
			break;
		}
	}
	return a;
}

int daj_prost (){
	static int x=1;
	while (1){
		if (DaLiJeProst(++x)) return x;
	}
}

int main() {
	int a,b,i,suma=0,broj,c,d;
	do{
		printf(""Unesite brojeve A i B: "");
		scanf (""%d%d"",&a,&b);
		if (a<=0)
			printf (""A nije prirodan broj.\n"");
		else if (a>=b)
			printf (""A nije manje od B.\n"");
	}while (a<=0 || a>=b);
	
	c=a;
	d=b;
	
	for (;;){
		broj=daj_prost();
		if (broj>=d) break;
		else if (broj>c)
			suma+=broj;
	}
	
	printf (""Suma prostih brojeva izmedju %d i %d je %d."",a,b,suma);
	return 0;
}
","#include <stdio.h>



	int DaLiJeProst(int n){
	int i;
	for(i=2;i<n;i++){
		if (n%i==0){
			n=0; 
			break;
		}
	}
	return n;

}

int daj_prost(){
	static int a=1;
	while(1){
		if(DaLiJeProst(++a))
		return a;
	}
}

int main(){
	int m,n,s=0,br,c,d,i;
	do{
		printf(""Unesite brojeve A i B:"");
		scanf(""%d%d"",&n,&m);
		if(n<=0)
		printf("" A nije prirodan broj.\n"");
		else if (n>=m)
		printf("" A nije manje od B.\n"");
	
	}
	while (n<=0 || n>=m);
	
	c=n;
	d=m;
	
	for(;;){
		br=daj_prost();
		if (br>=d) break;
		else if (br>c)
		s=s+br;
	}
	
	printf("" Suma prostih brojeva izmedju %d i %d je %d."",n,m,s);
	return 0;
}
"
1913,99,99,0,144,A2016/Z5/Z1/student2755,A2016/Z5/Z1/student9340,"#include <stdio.h>
#define KAPACITET 100

void unesi(char *s, int velicina) {
	char znak=getchar();
	int i=0;
	if(znak=='\n') znak=getchar();
	while(i<velicina-1 && znak!='\n') {
		*s=znak;
		s++;
		znak=getchar();
	}
	*s='\0';
}

struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

struct Student unos_studenta() {
	struct Student student;
	int i;
	printf(""Unesite ime studenta: "");
	unesi(student.ime, 20);
	printf(""Unesite prezime studenta: "");
	unesi(student.prezime, 20);
	printf(""Unesite broj ocjena: "");
	scanf(""%d"", &student.br_ocjena);
	printf(""Unesite ocjene: "");
	for(i=0; i<student.br_ocjena; i++) {
		scanf(""%d"", &student.ocjene[i]);
	}
	return student;
}

float prosjek_ocjena(int *niz, int velicina) {
	float suma=0, prosjek;
	int i;
	for(i=0; i<velicina; i++) {
		if(niz[i]==5) {
			prosjek=5;
			break;
		}
		else {
			suma+=niz[i];
		}
	}
	prosjek=suma/velicina;
	return prosjek;
}



int genijalci(struct Student *niz_st, int velicina, float prosjek) {
	int i, j, max1, preostali=velicina;
	struct Student temp;
	
	for(i=0; i<velicina; i++) {
		if(prosjek_ocjena(niz_st[i].ocjene, niz_st[i].br_ocjena) < prosjek || niz_st[i].br_ocjena==0) {
			for(j=i; j<velicina-1; j++) {
				niz_st[j]=niz_st[j+1];
			}
			velicina--;
			i--;
			preostali--;
		}
	}
	
	switch(preostali) {
		case 1:
			for(i=0; i<velicina; i++) {
				if(prosjek_ocjena(niz_st[i].ocjene, niz_st[i].br_ocjena) >= prosjek) {
					max1=i;
					for(j=i+1; j<velicina; j++) {
						if(prosjek_ocjena(niz_st[j].ocjene, niz_st[j].br_ocjena) > prosjek_ocjena(niz_st[max1].ocjene, niz_st[max1].br_ocjena)) {
							max1=j;
						}
					}
					temp=niz_st[i];
					niz_st[i]=niz_st[max1];
					niz_st[max1]=temp;
				}
				else return 0;
			}
			for(i=0; i<preostali; i++) printf(""%s %s\n"", niz_st[i].prezime, niz_st[i].ime);
			break;
		case 2:
			for(i=0; i<velicina; i++) {
				if(prosjek_ocjena(niz_st[i].ocjene, niz_st[i].br_ocjena) >= prosjek) {
					max1=i;
					for(j=i+1; j<velicina; j++) {
						if(prosjek_ocjena(niz_st[j].ocjene, niz_st[j].br_ocjena) > prosjek_ocjena(niz_st[max1].ocjene, niz_st[max1].br_ocjena)) {
							max1=j;
						}
					}
					temp=niz_st[i];
					niz_st[i]=niz_st[max1];
					niz_st[max1]=temp;
				}
				else return 0;
			}
			for(i=0; i<preostali; i++) printf(""%s %s\n"", niz_st[i].prezime, niz_st[i].ime);
			break;
		case 3:
			for(i=0; i<velicina; i++) {
				if(prosjek_ocjena(niz_st[i].ocjene, niz_st[i].br_ocjena) >= prosjek) {
					max1=i;
					for(j=i+1; j<velicina; j++) {
						if(prosjek_ocjena(niz_st[j].ocjene, niz_st[j].br_ocjena) > prosjek_ocjena(niz_st[max1].ocjene, niz_st[max1].br_ocjena)) {
							max1=j;
						}
					}
					temp=niz_st[i];
					niz_st[i]=niz_st[max1];
					niz_st[max1]=temp;
				}
				else return 0;
			}
			for(i=0; i<preostali; i++) printf(""%s %s\n"", niz_st[i].prezime, niz_st[i].ime);
			break;
		case 0:
			break;
		default: break;
	}
	
	return preostali;
}


int main() {
	struct Student niz_studenata[KAPACITET];
	int i, ukupno_studenata;
	float zeljeni_prosjek;
	
	printf(""Unesite broj studenata: "");
	scanf(""%d"", &ukupno_studenata);
	
	for(i=0; i<ukupno_studenata; i++) {
		niz_studenata[i]=unos_studenta();
	}
	
	printf(""Unesite zeljeni prosjek: "");
	scanf(""%f"", &zeljeni_prosjek);
	
	return 0;
}
","#include <stdio.h>
#define KAPACITET 100

void unesi(char *s, int velicina) {
	char znak=getchar();
	int i=0;
	if(znak=='\n') znak=getchar();
	while(i<velicina-1 && znak!='\n') {
		*s=znak;
		s++;
		znak=getchar();
	}
	*s='\0';
}

struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

struct Student unos_studenta() {
	struct Student student;
	int i;
	printf(""Unesite ime studenta: "");
	unesi(student.ime, 20);
	printf(""Unesite prezime studenta: "");
	unesi(student.prezime, 20);
	printf(""Unesite broj ocjena: "");
	scanf(""%d"", &student.br_ocjena);
	printf(""Unesite ocjene: "");
	for(i=0; i<student.br_ocjena; i++) {
		scanf(""%d"", &student.ocjene[i]);
	}
	return student;
}

float prosjek_ocjena(int *niz, int velicina) {
	float suma=0, prosjek;
	int i;
	for(i=0; i<velicina; i++) {
		if(niz[i]==5) {
			prosjek=5;
			break;
		}
		else {
			suma+=niz[i];
		}
	}
	prosjek=suma/velicina;
	return prosjek;
}



int genijalci(struct Student *niz_st, int velicina, float prosjek) {
	int i, j, max1, preostali=velicina;
	struct Student temp;
	
	for(i=0; i<velicina; i++) {
		if(prosjek_ocjena(niz_st[i].ocjene, niz_st[i].br_ocjena) < prosjek || niz_st[i].br_ocjena==0) {
			for(j=i; j<velicina-1; j++) {
				niz_st[j]=niz_st[j+1];
			}
			velicina--;
			i--;
			preostali--;
		}
	}
	
	switch(preostali) {
		case 1:
			for(i=0; i<velicina; i++) {
				if(prosjek_ocjena(niz_st[i].ocjene, niz_st[i].br_ocjena) >= prosjek) {
					max1=i;
					for(j=i+1; j<velicina; j++) {
						if(prosjek_ocjena(niz_st[j].ocjene, niz_st[j].br_ocjena) > prosjek_ocjena(niz_st[max1].ocjene, niz_st[max1].br_ocjena)) {
							max1=j;
						}
					}
					temp=niz_st[i];
					niz_st[i]=niz_st[max1];
					niz_st[max1]=temp;
				}
				else return 0;
			}
			for(i=0; i<preostali; i++) printf(""%s %s\n"", niz_st[i].prezime, niz_st[i].ime);
			break;
		case 2:
			for(i=0; i<velicina; i++) {
				if(prosjek_ocjena(niz_st[i].ocjene, niz_st[i].br_ocjena) >= prosjek) {
					max1=i;
					for(j=i+1; j<velicina; j++) {
						if(prosjek_ocjena(niz_st[j].ocjene, niz_st[j].br_ocjena) > prosjek_ocjena(niz_st[max1].ocjene, niz_st[max1].br_ocjena)) {
							max1=j;
						}
					}
					temp=niz_st[i];
					niz_st[i]=niz_st[max1];
					niz_st[max1]=temp;
				}
				else return 0;
			}
			for(i=0; i<preostali; i++) printf(""%s %s\n"", niz_st[i].prezime, niz_st[i].ime);
			break;
		case 3:
			for(i=0; i<velicina; i++) {
				if(prosjek_ocjena(niz_st[i].ocjene, niz_st[i].br_ocjena) >= prosjek) {
					max1=i;
					for(j=i+1; j<velicina; j++) {
						if(prosjek_ocjena(niz_st[j].ocjene, niz_st[j].br_ocjena) > prosjek_ocjena(niz_st[max1].ocjene, niz_st[max1].br_ocjena)) {
							max1=j;
						}
					}
					temp=niz_st[i];
					niz_st[i]=niz_st[max1];
					niz_st[max1]=temp;
				}
				else return 0;
			}
			for(i=0; i<preostali; i++) printf(""%s %s\n"", niz_st[i].prezime, niz_st[i].ime);
			break;
		case 0:
			break;
		default: break;
	}
	
	return preostali;
}


int main() {
	struct Student niz_studenata[KAPACITET];
	int i, ukupno_studenata;
	float zeljeni_prosjek;
	
	printf(""Unesite broj studenata: "");
	scanf(""%d"", &ukupno_studenata);
	
	for(i=0; i<ukupno_studenata; i++) {
		niz_studenata[i]=unos_studenta();
	}
	
	printf(""Unesite zeljeni prosjek: "");
	scanf(""%f"", &zeljeni_prosjek);
	
	return 0;
}
"
1916,69,69,0,15,A2016/Z2/Z1/student2437,A2016/Z2/Z1/student8846,"#include <stdio.h>
#include <stdlib.h>

int main() {
 int brojac=0,n,i,x=1,broj1,rezultat=0;
 printf(""Unesite broj: "");
 scanf(""%d"", &n);
 broj1=n;
 while(broj1!=0)
{
	broj1=broj1/10;
	brojac++;
	
}
for(i=0; i<brojac-1; i++){
	rezultat=rezultat+x*(abs((n%10)-((n/10)%10)));
	x=10*x;
	n=n/10;
}
printf(""%d"", rezultat);

	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

int main() {
	int n, br1, brojac=0, rezultat=0, x=1, i;
    printf(""Unesite broj: "");
    scanf(""%d"", &n);
    br1=n;
    while(br1!=0) {
    	br1=br1/10;
    	brojac++;
    }
   for(i=0; i<brojac-1; i++) {
   	rezultat=rezultat+x*(abs((n%10)-((n/10)%10)));
   	x=10*x;
   	n=n/10;
   }
	printf(""%d"", rezultat);

	return 0;
}"
1919,98,98,0,62,A2016/Z1/Z3/student7956,A2016/Z1/Z3/student7090,"#include <stdio.h>

int main()
{
	char z;
	int i, crna=0, bijela=0, siva=0, crvena=0, plava=0, NAJPOP_BOJA=0;
	float PROCENAT_BOJA;
	printf(""Unesite vozila: "");
	for(i=0;;i++){
		scanf(""%c"", &z);
		if(z=='K' || z=='k') break;
		else if (z==' ') {printf(""Neispravan unos\n"");i--;}
		else if(z!='c'&& z!='C' && z!='b' && z!='B' && z!='s' && z!='S' && z!='v' && z!='V' && z!='p' && z!='P')
		{
			printf(""Neispravan unos\n"");
			i--;
			continue;
	}
	    else if(z=='c' || z=='C')
	    {
	    	crna++;
	    	if(crna>NAJPOP_BOJA)
	    	NAJPOP_BOJA=crna;
	    }
	    else if(z=='b' || z=='B')
	    {
	    	bijela++;
	    	if(bijela>NAJPOP_BOJA)
	    	NAJPOP_BOJA=bijela;
	    }
	    else if(z=='s' || z=='S')
	    {
	    	siva++;
	    	if(siva>NAJPOP_BOJA)
	    	NAJPOP_BOJA=siva;
	    }
	    else if(z=='v' || z=='V')
	    {
	    	crvena++;
	    	if(crvena>NAJPOP_BOJA)
	    	NAJPOP_BOJA=crvena;
	    }
	    else if(z=='p' || z=='P')
	    {
	    	plava++;
	    	if(plava>NAJPOP_BOJA)
	    	NAJPOP_BOJA=plava;
	    }
}
      
      if(i==0) PROCENAT_BOJA=0;
      else
         PROCENAT_BOJA=(float)(NAJPOP_BOJA*100)/i;
         
      if(crna==NAJPOP_BOJA)
           printf(""Ukupno evidentirano %d vozila.\nNajpopularnija boja je crna (%.2f%%)."", i, PROCENAT_BOJA);
      else if(bijela==NAJPOP_BOJA)
           printf(""Ukupno evidentirano %d vozila.\nNajpopularnija boja je bijela (%.2f%%)."", i, PROCENAT_BOJA);
      else if(siva==NAJPOP_BOJA)
           printf(""Ukupno evidentirano %d vozila.\nNajpopularnija boja je siva (%.2f%%)."", i, PROCENAT_BOJA);
      else if(crvena==NAJPOP_BOJA)
           printf(""Ukupno evidentirano %d vozila.\nNajpopularnija boja je crvena (%.2f%%)."", i, PROCENAT_BOJA);
      else if(plava==NAJPOP_BOJA)
           printf(""Ukupno evidentirano %d vozila.\nNajpopularnija boja je plava (%.2f%%)."", i, PROCENAT_BOJA);
           
return 0;
}
           ","#include <stdio.h>

int main()
{
	char z;
	int i, crna=0, bijela=0, siva=0, crvena=0, plava=0, NAJPOP_BOJA=0;
	float PROCENAT_BOJA;
	printf(""Unesite vozila: "");
	for(i=0;;i++){
		scanf(""%c"", &z);
		if(z=='K' || z=='k') break;
		else if (z==' ') {printf(""Neispravan unos\n"");i--;}
		else if(z!='c'&& z!='C' && z!='b' && z!='B' && z!='s' && z!='S' && z!='v' && z!='V' && z!='p' && z!='P')
		{
			printf(""Neispravan unos\n"");
			i--;
			continue;
	}
	    else if(z=='c' || z=='C')
	    {
	    	crna++;
	    	if(crna>NAJPOP_BOJA)
	    	NAJPOP_BOJA=crna;
	    }
	    else if(z=='b' || z=='B')
	    {
	    	bijela++;
	    	if(bijela>NAJPOP_BOJA)
	    	NAJPOP_BOJA=bijela;
	    }
	    else if(z=='s' || z=='S')
	    {
	    	siva++;
	    	if(siva>NAJPOP_BOJA)
	    	NAJPOP_BOJA=siva;
	    }
	    else if(z=='v' || z=='V')
	    {
	    	crvena++;
	    	if(crvena>NAJPOP_BOJA)
	    	NAJPOP_BOJA=crvena;
	    }
	    else if(z=='p' || z=='P')
	    {
	    	plava++;
	    	if(plava>NAJPOP_BOJA)
	    	NAJPOP_BOJA=plava;
	    }
}
      
      if(i==0) PROCENAT_BOJA=0;
      else
         PROCENAT_BOJA=(float)(NAJPOP_BOJA*100)/i;
         
      if(crna==NAJPOP_BOJA)
           printf(""Ukupno evidentirano %d vozila.\nNajpopularnija boja je crna (%.2f%%)."", i, PROCENAT_BOJA);
      else if(bijela==NAJPOP_BOJA)
           printf(""Ukupno evidentirano %d vozila.\nNajpopularnija boja je bijela (%.2f%%)."", i, PROCENAT_BOJA);
      else if(siva==NAJPOP_BOJA)
           printf(""Ukupno evidentirano %d vozila.\nNajpopularnija boja je siva (%.2f%%)."", i, PROCENAT_BOJA);
      else if(crvena==NAJPOP_BOJA)
           printf(""Ukupno evidentirano %d vozila.\nNajpopularnija boja je crvena (%.2f%%)."", i, PROCENAT_BOJA);
      else if(plava==NAJPOP_BOJA)
           printf(""Ukupno evidentirano %d vozila.\nNajpopularnija boja je plava (%.2f%%)."", i, PROCENAT_BOJA);
           
return 0;
}
           "
1924,99,99,0,34,A2016/Z1/Z4/student6547,A2016/Z1/Z4/student8317,"#include <stdio.h>

int main() {
	int n=0,i,j,d;
	printf(""Unesite broj n: "");
	scanf(""%d"", &n);
	while(n>50 || n<=0)
	{
		printf(""Pogresan unos\n"");
	    printf(""Unesite broj n: "");
	    scanf(""%d"", &n);
	}
	
	if(n==1)
	{
		printf(""***"");
	}
	else
	{
d=4*n-3;
	for(i=0;i<n;i++)
	{
		for(j=0;j<d;j++)
		{
			if (j==i ||(j==2*n-2-i) || (j==2*n-2+i) || (j==4*n-4-i))
			printf(""*"");
		
else
	printf("" "");
}  
		printf(""\n"");
	} } 
	
	
	
	return 0;
}
","#include <stdio.h>

int main() {
	int n=0,i,j,d;
	printf(""Unesite broj n: "");
	scanf(""%d"", &n);
	while(n>50 || n<=0)
	{
		printf(""Pogresan unos\n"");
	    printf(""Unesite broj n: "");
	    scanf(""%d"", &n);
	}
	
	if(n==1)
	{
		printf(""***"");
	}
	else
	{
d=4*n-3;
	for(i=0;i<n;i++)
	{
		for(j=0;j<d;j++)
		{
			if (j==i ||(j==2*n-2-i) || (j==2*n-2+i) || (j==4*n-4-i))
			printf(""*"");
		
else
	printf("" "");
}  
		printf(""\n"");
	} } 
	
	
	
	return 0;
}
"
1939,98,98,0,40,A2016/Z2/Z3/student2645,A2016/Z2/Z3/student8576,"#include <stdio.h>

int main() {
    
    int n; int i, j,x,y;
    char zvjezdice[20][20];
    
    printf(""Unesite broj tacaka: "");
    scanf(""%d"", &n);
    
    while(n<=0 || n>10) {
        printf(""Pogresan unos"");
        printf(""\nUnesite broj tacaka: "");
        scanf(""%d"", &n);
    }
    for(i=0; i<20; i++){
        for(j=0; j<20; j++){
            zvjezdice[i][j]=' ';
        }
    }
    
    for(i=0; i<n; i++){
        printf(""Unesite %d. tacku: "", i+1);
        scanf(""%d %d"", &x, &y);
        while((x<0 || x>19) || (y<0 || y>19)){
            printf(""Pogresan unos\n"");
            printf(""Unesite %d. tacku: "", i+1);
            scanf(""%d %d"", &x, &y);
        }
        zvjezdice[y][x] = '*';
    }
    for(i=0; i<20; i++){
        for(j=0; j<20; j++){
            if(zvjezdice[i][j]!='*') zvjezdice[i][j]=' ';
            printf(""%c"", zvjezdice[i][j]);
        }
        printf(""\n"");
    }
   
    
    
	return 0;
}
","#include <stdio.h>

int main() {
    
    int n; int i, j,x,y;
    char zvjezdice[20][20];
    
    printf(""Unesite broj tacaka: "");
    scanf(""%d"", &n);
    
    while(n<=0 || n>10) {
        printf(""Pogresan unos"");
        printf(""\nUnesite broj tacaka: "");
        scanf(""%d"", &n);
    }
    for(i=0; i<20; i++){
        for(j=0; j<20; j++){
            zvjezdice[i][j]=' ';
        }
    }
    
    for(i=0; i<n; i++){
        printf(""Unesite %d. tacku: "", i+1);
        scanf(""%d %d"", &x, &y);
        while((x<0 || x>19) || (y<0 || y>19)){
            printf(""Pogresan unos\n"");
            printf(""Unesite %d. tacku: "", i+1);
            scanf(""%d %d"", &x, &y);
        }
        zvjezdice[y][x] = '*';
    }
    for(i=0; i<20; i++){
        for(j=0; j<20; j++){
            if(zvjezdice[i][j]!='*') zvjezdice[i][j]=' ';
            printf(""%c"", zvjezdice[i][j]);
        }
        printf(""\n"");
    }
   
    
    
	return 0;
}
"
1940,77,77,0,98,A2016/Z4/Z1/student3315,A2016/Z4/Z1/student6877,"#include <stdio.h>
void unesi(char niz[], int velicina){
	char znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\0'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
int poredjenje(char *prva_rijec, char *druga_rijec,int vel1,int vel2){
	int k;
	char*p1=prva_rijec, *p2=druga_rijec;
	if(vel1!=vel2)
		return 0;
		
	
		for(k=0;k<vel1-1;k++){
			if(*(p2+k)>='A'&&*(p2+k)<='Z'){
				if(*(p1+k)!=*(p2+k)+32)
					return 0;
				continue;
			}
		
		
		
		
		
			if(*(p2+k)>='A'&&*(p2+k)<='Z'&&*(p1+k)>='A'&&*(p1+k)<='Z'){
				if(*(p1+k)+32!=*(p2+k)+32)
					return 0;
				continue;
			}
			if(*(p1+k)>='A'&&*(p1+k)<='Z'){
				if(*(p1+k)+32!=*(p2+k))
					return 0;
				continue;
			}
			
			
			
			
			
			
			if(*(p1+k)!=*(p2+k))
					return 0;
			
			
			
			
		
	}
	
	return 1;
}
char* izbaci_najcescu(char *s){
	char *p, *pok[500];
	int i=0, j=0,brojac[500]={0}, brojac_rijeci=1, najcesca[500]={0};
	p=s;
	pok[j]=p;
	if(*p=='\0')
		return NULL;
	while(*p!='\0'){
		if((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127)){
			brojac_rijeci++;
			do{
				p++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			j++;
			i++;
			pok[j]=p;
			continue;
		}
		brojac[i]++;
		p++;
	}
	
	
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(poredjenje(pok[i], pok[j],brojac[i], brojac[j]))
				najcesca[i]++;
		}
	}
	//u nizu imamo koliko se ponavlja rijec u nasem strigu//
	
	int max;
	max=0;
   for(i=0;i<brojac_rijeci;i++){
		if(najcesca[i]>najcesca[max]) 	
			max=i;
	}
	//clan najcesce rijeci//
	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(poredjenje(pok[max], pok[i], brojac[max], brojac[i])){
			p=pok[i];
			if(i==brojac_rijeci-1){
				*p='\0';
				break;
			}
			while(*p!='\0'){
				*p=*(p+brojac[i]);	
				if(*p=='\0') break;
				p++;
			}
			do{
				pok[i]++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pok[j]-=brojac[i];
				
			}
			
		}
		
	}
	//izbacene su ponovljene rijeci osim prve//
	p=pok[max];
	while(*p!='\0'){
		*p=*(p+brojac[max]);	
		if(*p=='\0') break;
		p++;
	}
	
	return s;
}	


int main() {
    char tekst[10000];
    printf(""Unesite tekst: "");
    unesi(tekst,10000);
    printf(""%s"", izbaci_najcescu);
    return 0;
}

	
","#include <stdio.h>
void unesi (char niz[] , int velicina){
	char znak;
	int i=0;
	znak = getchar();
	if (znak=='\n') znak= getchar();
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
int uporedi (char *string1, char *string2, int velicina1, int velicina2){
	char *p1=string1;
	char *p2=string2;
	int i;
	if (velicina1!=velicina2) return 0;
	else {
		for(i=0;i<velicina1-1;i++)
		{
			if(*(p1+i)>='A' && *(p1+i)<='Z'){
			if(*(p1+i)+32!=*(p2+i)) return 0;
		    continue;
			}
		    if(*(p2+i)>='A' && *(p2+i)<='Z'){
		    if(*(p2+i)!=*(p2+i)+32) return 0;
		    continue;
		    }
		if(*(p1+i)!=*(p2+i)) return 0;
		}
		
	}
	return 1;
}
char* izbaci_najcescu(char *s){
	char*p , *pokazivac[100];
	int i=0,j=0,brojac_slova[100]={0},brojac_rijeci=1,brojac_najcesce[100]={0};
	p=s;
	pokazivac[j]=p;
	if (*p!='\0') return NULL;
	while(*p!='\0'){
		if ((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127)){
			brojac_rijeci++;
			do{
				p++;
			}while((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127));
			i++;
			j++;
			pokazivac[j]=p;
			continue;
		}
		brojac_slova[i]++;
		p++;
	}
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(uporedi(pokazivac[i],pokazivac[j],brojac_slova[i],brojac_slova[j]))
			brojac_najcesce[i]++;
		}
	}
	int max;
	max=0;
	for(i=0;i<brojac_rijeci;i++){
		if(brojac_najcesce[i]>brojac_najcesce[max]) max=i; 
	}
	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(uporedi(pokazivac[max],pokazivac[i],brojac_slova[max],brojac_slova[i])){
			p=pokazivac[i];
			if(i==brojac_rijeci-1){
				*p='\0';
				break;
			}
			while(*p!='\0'){
				*p=*p(brojac_slova[i]);
				if(*p=='\0') break;
				p++;
			}
			do{
				pokazivac[i]++;
			}while((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pokazivac[j]-=brojac_slova[i];
			}
			
		}
	}
	p=pokazivac[max];
	while (*p!='\0') {
		*p=*p(brojac_slova[max]);
		if(*p=='\0') break;
		p++;
	}
		
	return s;	
	
	
}
	
	



int main() {
	char tekst[]=""asd ddd asd  ddd asd trzhrth"";
	printf(""%s"",izbaci_najcescu(tekst));
	
	return 0;
}
"
1941,83,83,0,47,A2016/Z2/Z2/student5660,A2016/Z2/Z2/student8796,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926
#define eps 0.0000000000000000000000000000000000000000000001

int main()
{
	int i, j, brUglova, sekF, ste, min;
	double niz[500] = {0}, sek;

	printf (""Unesite broj uglova: "");
	scanf (""%d"", &brUglova);

	for (i = 0; i < brUglova; i++)
	{
		scanf (""%lf"", &niz[i]);
		niz[i]*=180./PI;
	}
	
	for (i = 0; i < brUglova; i++)
	{
		
		sek = fabs(60 * ((60*(niz[i] - (int)(niz[i]))) - (int)(60*(niz[i] - (int)(niz[i])))));
		
		sek += 0.5;
		
		sekF = sek;
		if (sekF == 60) sekF = 0;
		if (sekF > 30)
			{
				for(j = i; j < brUglova; j++)
					niz[j] = niz[j+1];
				brUglova--;
				i--;
			}
	}
	
	
	printf (""Uglovi su: \n"");
	
	for (i = 0; i < brUglova; i++)
	{
		ste = niz[i];
		min = abs((60*(niz[i]-(int)niz[i])));
		if (niz[i] >= 0)
		sek = fabs((int)((60 * ((60*(niz[i] - (int)(niz[i]))) - (int)(60*(niz[i] - (int)(niz[i])))))+0.5));
		else 
		sek = fabs((int)((60 * ((60*(niz[i] - (int)(niz[i]))) - (int)(60*(niz[i] - (int)(niz[i])))))-0.5));
		
		if (fabs(sek - 60) < eps) { min++; sek = 0;}
		if (niz[i] >= 0)
		{
			if (min >= 60) { ste++; min = 0;}
		}
		else 
			if (min >= 60) { ste--; min = 0;}
		sekF = sek;
		printf (""%d stepeni %d minuta %d sekundi\n"", ste, min, sekF);
	}
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#define PI 3.1415925
#include <math.h>
#define g 0.0000000000000000000000000000000000000000000001
int main() {
	int i,j,n,sec,st,min;
	double niz[500]={0},sekunda,m,b=0.5;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	for(i=0;i<n;i++){
		scanf(""%lf"",&niz[i]);
		niz[i]*=180./PI;
	}
	for(i=0;i<n;i++){
		m=((60*(niz[i]-(int)(niz[i])))-(int)(60*(niz[i]-(int)(niz[i]))));
		sekunda=fabs(60*m);
		sekunda+=b;
		sec=sekunda;
		if(sec==60){
			sec=0;
		}
		if(sec>30){
			for(j=i;j<n;j++){
				niz[j]=niz[j+1];
			}
			n--;
			i--;
		}
	}
	printf(""Uglovi su: \n"");
	for(i=0;i<n;i++){
		st=niz[i];
		min=abs((60*(niz[i]-(int)niz[i])));
		if(niz[i]>=0){
			sekunda=fabs((int)((60*((60*(niz[i]-(int)(niz[i])))-(int)(60*(niz[i]-(int)(niz[i])))))+b));
		}
		else{
			sekunda=fabs((int)((60*((60*(niz[i]-(int)(niz[i])))-(int)(60*(niz[i]-(int)(niz[i])))))-b));
		}
		if(fabs(sekunda-60)<g){
			min++;
			sekunda=0;
		}
		if(niz[i]>=0)
		{
			if(min>=60){
				st++;
				min=0;
			}
		}
		else{
			if(min>=60){
				st--;
				min=0;
			}
		}
		sec=sekunda;
		printf(""%d stepeni %d minuta %d sekundi\n"",st,min,sec);
	}
	return 0;
}"
1946,96,96,0,17,A2016/Z1/Z2/student6547,A2016/Z1/Z2/student8317,"#include <stdio.h>

int main() {
	double a1,b1,a2,b2;
	float x,y1;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%lf, %lf, %lf, %lf"", &a1,&b1,&a2,&b2);
	if(a1==a2 && b1!=b2)
	{
		printf(""Paralelne su "");
	}
	else if(a1==a2 && b1==b2)
	{
		printf(""Poklapaju se "");
	}
	else {
		x=(b2-b1)/(a1-a2);
		y1=a1*x+b1;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y1);
		
	}
	
		
	
	
	return 0;
}
","#include <stdio.h>

int main() {
	double a1,b1,a2,b2;
	float x,y1;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%lf, %lf, %lf, %lf"", &a1,&b1,&a2,&b2);
	if(a1==a2 && b1!=b2)
	{
		printf(""Paralelne su "");
	}
	else if(a1==a2 && b1==b2)
	{
		printf(""Poklapaju se "");
	}
	else {
		x=(b2-b1)/(a1-a2);
		y1=a1*x+b1;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y1);
		
	}
	
		
	
	
	return 0;
}
"
1948,90,90,0,49,A2016/Z3/Z3/student5624,A2016/Z3/Z3/student8631,"#include <stdio.h>

int main() {
    int matrica[200][200], i, j, k, l, m, n,pret,pret1,p;
    do{
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"", &m, &n);
        if(m<=0||n<=0||m>200||n>200) 
            printf(""Brojevi nisu u trazenom opsegu.\n"");
    } 
    while(m<=0||n<=0||m>200||n>200); // petlja osigurava da su brojevi u trazenom opsegu
    printf(""Unesite elemente matrice: "");
    for(i=0;i<m;i++)
        for(j=0;j<n;j++)
            scanf(""%d"",&matrica[i][j]);
    for(i=0;i<m;i++){
        for(k=i+1;k<m;k++){ 
            pret=1;
            for(j=0;j<n;j++){
                if(matrica[i][j]!=matrica[k][j]) pret=0; //ispitujemo da li su redovi matrice jednaki
            } 
            if(pret==1){ //izbacivanje jednakog reda matrice
                for(l=k;l<m-1;l++){
                    for(p=0;p<n;p++)
                        matrica[l][p]=matrica[l+1][p];
                }
                m--;
                k--;
            }
        }
    }
    for(i=0;i<n;i++){
        for(k=i+1;k<n;k++){
            pret1=1;
            for(j=0;j<m;j++){
                if(matrica[j][i]!=matrica[j][k]) pret1=0; //ispitujemo da li su kolone matrice jednake
            }
            if(pret1==1){//izbacivanje jednake kolone matrice
                for(l=k;l<n-1;l++){
                    for(p=0;p<m;p++)
                        matrica[p][l]=matrica[p][l+1];
                }
                    n--;
                    k--;
            }
        }
    }
    printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
    for(i=0;i<m;i++){
        for(j=0;j<n;j++)
            printf(""%5d"",matrica[i][j]);
        printf(""\n"");
    }
    return 0;
}
","#include <stdio.h>
#define vel 200
int main() {
 int  i, j, n,m,k,kk, drugapret, pretp,e, mat[vel][vel]; 
 do{
	printf(""Unesite brojeve M i N: "");
	scanf(""%d %d"", &m, &n); 
	if(n<=0 || n>200|| m<=0 || m>200 )
		printf(""Brojevi nisu u trazenom opsegu.\n"");
	}
	while(m>200 || m<=0 || n<=0 || n>200);
    printf(""Unesite elemente matrice: "");
	for(i=0; i<m; i++)
	 for(j=0; j<n; j++)
	  scanf(""%d"", &mat[i][j]);
    for(i=0; i<n; i++) {
     for(k=i+1; k<n; k++) {	
      pretp=1; 
	  for(j=0; j<m; j++) 
		if(mat[j][i]!=mat[j][k])
		pretp=0; 
	  if(pretp==1) {
	  	for(kk=k; kk<n-1; kk++) 
	     for(e=0; e<m; e++) 
			mat[e][kk]=mat[e][kk+1];
		k--;
		n--;
	}
    }
}
for(i=0; i<m; i++) {
 for(k=i+1; k<m; k++) {	
  drugapret=1; 
  for(j=0; j<n; j++) 
	if(mat[i][j]!=mat[k][j])
      drugapret=0; 
    if(drugapret==1) {
     for(kk=k; kk<m-1; kk++) 
		for(e=0; e<n; e++) 
		mat[kk][e]=mat[kk+1][e];
	m--; 
	k--;
    }
	}
}
printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
for(i=0; i<m; i++) {
 for(j=0; j<n; j++)
 printf(""%5d"", mat[i][j]);
 printf(""\n"");
}
return 0;
}"
1949,99,99,0,22,A2016/Z1/Z4/student9949,A2016/Z1/Z4/student4814,"#include <stdio.h>
int main() {
	int i,j,n;
    printf(""Unesite broj n: "");
    scanf(""%d"", &n);
    while(n<=0 || n>50){
    	printf(""Pogresan unos\n"");
    	printf(""Unesite broj n: "");
    	scanf(""%d"", &n);}
    if(n==1){
    	printf(""***"");}
    else { 
    for(i=0; i<n; i++){
    	for(j=0; j<=4*n-4; j++){
    	   if(i==j || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i) {
    	   	printf(""*"");}
           else {printf("" "");} }
        printf(""\n"");}}
        return 0;
}","#include <stdio.h>

int main() {
	int i,j,n;
printf(""Unesite broj n: ""); 
	scanf(""%d"",&n);
while (n<=0 || n>50) 
{printf(""Pogresan unos\n"");
printf(""Unesite broj n: ""); 
scanf(""%d"", &n);}
   if(n==1) printf(""***"");
    else{ 
    	for(i=0; i<n; i++){
    		for(j=0; j<=4*n-2; j++)
    		   { 
    		     if(i==j || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i ) printf(""*"");
    		     
    		     else printf("" "");
    		        
    		   }
    		printf(""\n"");
    	} 
    }
	return 0;
}
"
1952,69,69,0,28,A2016/Z1/Z4/student6776,A2016/Z1/Z4/student2464,"#include <stdio.h>

int main() {
    int n,i,j,k,l,s;
    unos:
    	printf(""Unesite broj n: "");
    	scanf(""%d"",&n);
    	if(n<1 || n>50){
        printf(""Pogresan unos \n"");
    goto unos;
    }
    for(i=0; i<n; i++){
        for(j=0; j<n; j++){
            if(n==1)
            	printf(""**"");
            if(i==j)
            	printf(""*"");
            else 
            	printf("" "");
        }
        for(k=0; k<n-1; k++){
            if(i+k==n-2)
            	printf(""*"");
            else 
            	printf("" "");
        }
        for(l=0; l<n-1; l++){
            if(i==l+1)
            	printf(""*"");
            else
            	printf("" "");
        }
        for(s=0; s<=n; s++){
            if(i+s==n-2)
            	printf(""*"");
            else
            	printf("" "");
        }
        printf(""\n"");
    }
	return 0;
}","#include <stdio.h>

int main() {
	int n;
	int l, u, c, a, s;
	Alvaro_Morata:
	printf (""Unesite broj n: "");
	scanf (""%d"", &n);
	while (n<1 || n>50) {
		printf (""Pogresan unos\n"");
		goto Alvaro_Morata;
	}
	
	for (l=0;l<n;l++) {
		for (u=0;u<n-1;u++) {
			if (l==u) printf (""*"");
			else printf ("" "");
		}
		for (c=0;c<n-1;c++) {
			if (l+c==n-1) printf (""*"");
			else printf ("" "");
		}
		for (a=0;a<n-1;a++) {
			if (l==a) printf (""*"");
			else printf ("" "");
		}
		for (s=0;s<n;s++) {
			if (l+s==n-1) printf (""*"");
			else printf ("" "");
		}
		printf (""\n"");
	}
	return 0;
}"
1963,11,11,0,6,A2016/Z4/Z3/student4473,A2016/Z4/Z3/student1616,"#include <stdio.h>
//ispisati slucaj kada je brojac==1
int uporedi(char *prva, char *druga, int duzina){
	char *p=prva, *d=druga;
	int brojac=0;
	while(*d!='\0'){
		if(*p!=*d)
			return 0;
		p++;
		d++;
		brojac++;
	}
	if(*d=='\0'&&brojac!=duzina)		//potencijalna greska
			return 0;
	return 1;
}
	
char  *prepisi(char *tekst,char *prva, char *druga, int duzina, int brojac){
	int i;
	char *d=druga, *kraj=tekst, *p=prva;
	if(brojac==0){
		while(*kraj!='\0') kraj++;
		char *pok=prva;
		while(pok!=kraj-duzina){
			*pok=*(pok+duzina);
			pok++;
			
		}
		*pok='\0';
		return tekst;
	}
	
	if(brojac!=duzina){
		if(brojac==1){
			while(*kraj!='\0') kraj++;
			char *pok=prva+1;
			while(pok!=kraj-duzina+1){
				*pok=*(pok+duzina-1);
				pok++;
			}
			*pok='\0';
			*prva=*druga;
			return tekst;
		}
		while(*kraj!='\0') kraj++;
		if(brojac>duzina){
			while(kraj!=p){
				*(kraj+brojac-duzina)=*kraj;
				kraj--;
			}
		}
		if(brojac<duzina){
			char *oduzima=p+duzina-brojac-1;
			while(oduzima!=kraj-(duzina-brojac)){
				*oduzima=*(oduzima+duzina-brojac);
				oduzima++;
			}
			*oduzima='\0';
			
		}
		
	}
	
	
	for(i=0;i<brojac;i++)
		*(p+i)=*(d+i);
	return tekst;
	
}

char *zamjena_rijeci(char *tekst, char **rijeci, char **zamjene, int broj_rijeci){
	int i=0,j=0,brojac_slova[100]={0}, brojac_rijeci=1, zamjena_velicina[50]={0};
	char *p, *pok[100], *p_rijec[100], *p_zamjena[100];

	for(i=0;i<broj_rijeci;i++){
		p_zamjena[i]=zamjene[i];
	}
	for(i=0;i<broj_rijeci;i++){
		char *z=p_zamjena[i];
		while(*z!='\0'){
			zamjena_velicina[i]++;
			z++;
		}
	}
	//printf(""%d"", zamjena_velicina[0]);
	//printf(""%c\n"", *(rijeci[0]+1));
	for(i=0;i<broj_rijeci;i++){
		p_rijec[i]=rijeci[i];
	}
	//printf(""%c\n"", *(p_rijec[1]+1));
	p=tekst;
	pok[j]=p;
	i=0;
	while(*p!='\0'){
		if(*p==' '){
			brojac_rijeci++;
			do{
				p++;
			}while(*p==' ');
			i++;
			j++;
			pok[j]=p;
			continue;
			
		}
		brojac_slova[i]++;
		p++;
	}
	//brojac_slova[0] broj slova na prvoj rijeci
	//pok[0] je pokazivac na prvu rijec u stringu
	int k,z;
	for(i=0;i<brojac_rijeci;i++){
		for(j=0;j<broj_rijeci;j++){
			if(uporedi(pok[i],p_rijec[j],brojac_slova[i])){ //funkcija uporedi radi :D, vraca 1 ako su rijeci iste 0 ako nisu
				tekst=prepisi(tekst,pok[i],p_zamjena[j],brojac_slova[i], zamjena_velicina[j]);
				int z;
				if(zamjena_velicina[j]>brojac_slova[i]){
					for(k=0;k<zamjena_velicina[j]-brojac_slova[i];k++){
						for(z=i;z<brojac_rijeci;z++)
							pok[z+1]++;
					}
				}
				if(zamjena_velicina[j]<brojac_slova[i]){
					for(k=0;k<-zamjena_velicina[j]+brojac_slova[i];k++){
						for(z=i;z<brojac_rijeci;z++)
							pok[z+1]--;
					}
				}
			}
				//jos manjiti kad je brojac slova veci od zamjene velicine
		}
	}
	
	
	
	
	
	return tekst;
}



int main() {
	char *rijeci[3]={""proba"", ""Ovo"", ""je""};
	char *zamjene[3]={""a"", ""a"", ""a""};
	char tekst[100]=""Ovo je proba"";
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 3));
	return 0;
}
","#include <stdio.h>
#include <ctype.h>

//Provjeravamo da li su rijeci iz ""rijeci"" i ""teksta"" iste//
int JesuIsti(char *p,char *temp)
{
	int	isti=1;

		while(*temp!='\0')
		{
			if(*temp++!=*p++){isti=0;break;}
			if(*temp=='\0' && (*p!=' ' && *p!='\0')){isti=0;break;}
		}
	return isti;
		
}
//Upisujemo rijezi iz ""zamjene"" u mjesto koje smo ostavili za zamjenu//
void ZamijeniRijeci(char *recenica,char *rijec)
{
	while(*rijec!='\0')
	{
		*recenica++=*rijec++;
	}
	recenica++;
}
//Vrsimo poredbu rijeci iz ""rijeci"" i ""zamjena""//
int Rjecnik(char **rijeci,char **zamjene,int broj_rijeci)
{
	int i,isti=1;
	char *pom,*pom1;
	
		for(i=0;i<broj_rijeci;i++)
		{
			pom=rijeci[i];
			pom1=zamjene[i];
			while(*pom!='\0' || *pom1!='\0')
			{
				if(*pom++!=*pom1++)isti=0;
			}
			if (isti==0) break;
		}
		return isti;
}

//Algoritam za izbacivanje te ubacivanje u niz rijeci koje treba zamjeniti//
char* zamjena_rijeci(char* tekst, char** rijeci,char** zamjene, int broj_rijeci)
{
	char *p=tekst;
	char *temp,*pt,*kt,*ht;
	int i,br;
	     
	     
	    if(Rjecnik(rijeci,zamjene,broj_rijeci)) return tekst;
	     
		while(*p!='\0')
		{
			if(p==tekst || *(p-1)==' ')
			{
				while(*p==' ') p++;
				pt=p;
				
				for(i=0;i<broj_rijeci;i++)
				{	
					br=0;
					p=pt;
					temp=rijeci[i];
					
					if(JesuIsti(p,temp))
					{	
						kt=pt;
						
						while(*p!='\0' && *p!=' ') p++;
						
						
						while(*p!='\0')
						{
							*kt++=*p++;
						}						
						*kt='\0';
						
						p=pt;
						temp=zamjene[i];
						while(*temp!='\0')
						{
							br++;
							temp++;
						}
					
						ht=kt+br;
						p--;
						
						while(kt!=p)
						{
							*ht--=*kt--;
						}
						
						temp=zamjene[i];
						ZamijeniRijeci(pt,temp);			
					}
				}
			}
			p++;
				
		}
	return tekst;
}

//Testni main//
int main() {
	
	char* rijeci[3] = { ""beli"", ""sneg"",""breg""};
	char* zamjene[3] = { ""bijeli"", ""snijeg"",""brijeg""};
	char tekst[100] = ""beli sneg je pokrio beli breg"";
	printf(""'%s'"", zamjena_rijeci(tekst, rijeci, zamjene, 3));
	
	return 0;
}"
1975,98,98,0,55,A2016/Z1/Z3/student9945,A2016/Z1/Z3/student3678,"#include <stdio.h>
#define ch character
int main() 
{
    int ch, brojAutomobila=0, c=0, b=0, s=0, v=0, p=0, max=-1;
    //boje imaju brojeve koji su njihovi redni brojevi u tekstu zadatka char ch;// ch skraceno od character
    printf(""Unesite vozila: "");
    do{
        scanf(""%c"", &ch);
        if((ch==""c"")||(ch==""C"")){c++; brojAutomobila++;
        if((c>=b)&&(c>=s)&&(c>=v)&&(c>=p))max=1;}
        
        else if((ch==""b"")|| (ch==""B"")){b++; brojAutomobila++;
        if((b>c)&& (b>=s)&& (b>=v)&&(b>=p))max=2;}
        
        else if ((ch==""s"")||(ch==""S"")){s++; brojAutomobila++;
        if((s>c)&&(s>b)&&(s>=v)&&(s>=p))max=3;}
        
        else if ((ch==""v"")||(ch==""V"")){v++; brojAutomobila++;
        if((v>c)&&(v>b)&&(v>s)&&(v>=p))max=4;}
        
        else if ((ch==""p"")||ch==""P""){p++; brojAutomobila++;
        if((p>c)&&(p>b)&&(p>s)&&(p>v))max=5;}
        
        else if((ch!=""K"")&&(ch!=""k""))
        printf(""Neispravan unos\n"");
       }
       
       
       while ( (ch!=""K"") && (ch!=""k""));
        printf(""Ukupno evidentirano %d vozila.\n"", brojAutomobila);
        printf(""Najpopularnija boja je "");
       
        switch (max){
            case 1:
            printf(""crna(%2lf%%)"",((double)c/brojAutomobila)*100);
            break;
            
            case 2:
            printf(""bijela(%2lf%%)"",((double)b/brojAutomobila)*100);
            break;
            
            case 3:
            printf(""siva(%2lf%%)"", ((double)s/brojAutomobila)*100);
            break;
            
            case 4:
            printf(""crvena(%2lf%%)"",((double)c/brojAutomobila)*100);
            break;
            
            case 5:
            printf(""plava(%2lf%%)"", ((double)p/brojAutomobila)*100);
            break;
            
            default:
            printf(""Niste unijeli nijedan automobil"");
            break;}
        
    
	return 0;
}","#include <stdio.h>
#define ch character
int main() 
{
    int ch, brojAutomobila=0, c=0, b=0, s=0, v=0, p=0, max=-1;
    //boje imaju brojeve koji su njihovi redni brojevi u tekstu zadatka char ch;// ch skraceno od character
    printf(""Unesite vozila: "");
    do{
        scanf(""%c"", &ch);
        if((ch==""c"")||(ch==""C"")){c++; brojAutomobila++;
        if((c>=b)&&(c>=s)&&(c>=v)&&(c>=p))max=1;}
        
        else if((ch==""b"")|| (ch==""B"")){b++; brojAutomobila++;
        if((b>c)&& (b>=s)&& (b>=v)&&(b>=p))max=2;}
        
        else if ((ch==""s"")||(ch==""S"")){s++; brojAutomobila++;
        if((s>c)&&(s>b)&&(s>=v)&&(s>=p))max=3;}
        
        else if ((ch==""v"")||(ch==""V"")){v++; brojAutomobila++;
        if((v>c)&&(v>b)&&(v>s)&&(v>=p))max=4;}
        
        else if ((ch==""p"")||ch==""P""){p++; brojAutomobila++;
        if((p>c)&&(p>b)&&(p>s)&&(p>v))max=5;}
        
        else if((ch!=""K"")&&(ch!=""k""))
        printf(""Neispravan unos\n"");
       }
       
       
       while ( (ch!=""K"") && (ch!=""k""));
        printf(""Ukupno evidentirano %d vozila.\n"", brojAutomobila);
        printf(""Najpopularnija boja je "");
       
        switch (max){
            case 1:
            printf(""crna(%2lf%%)"",((double)c/brojAutomobila)*100);
            break;
            
            case 2:
            printf(""bijela(%2lf%%)"",((double)b/brojAutomobila)*100);
            break;
            
            case 3:
            printf(""siva(%2lf%%)"", ((double)s/brojAutomobila)*100);
            break;
            
            case 4:
            printf(""crvena(%2lf%%)"",((double)c/brojAutomobila)*100);
            break;
            
            case 5:
            printf(""plava(%2lf%%)"", ((double)p/brojAutomobila)*100);
            break;
            
            default:
            printf(""Niste unijeli nijedan automobil"");
            break;}
        
    
	return 0;
}"
1978,96,96,0,34,A2016/Z3/Z1/student4639,A2016/Z3/Z1/student4416,"/*Zadatak: Izracunati zbir prostih brojeva od a do b */
#include <stdio.h>
/* Funkcija koja vraća uzastopne proste brojeve */
int daj_prost(){
	static int i=1;
	int j,prost;
	do {
		prost=1;	
		i++;	
		for (j=2;j<i;j++)
			if (i%j==0) {
				prost=0;
				break;
			}		
	} while (prost==0);
	return i;
}
int main() {
	int suma=0,x,k,j,a,b;
/* Unos brojeva a i b */	
	do {
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"",&a,&b);
		if (a<1)
			printf (""A nije prirodan broj.\n"");
		else if (a>=b)	
			printf (""A nije manje od B.\n"");
	} while (a<1 || a>=b);
/* Sabiranje prostih brojeva koji pripadaju intervalu */	
	do{
		x=daj_prost();	
		for (j=a+1;j<b;j++) {
			if (j==x)
				suma=suma+j;
		}
	} while (x<b);
	printf (""Suma prostih brojeva izmedju %d i %d je %d."",a,b,suma);			
	return 0;
}
","/*Zadatak: Izracunati zbir prostih brojeva od a do b */
#include <stdio.h>
/* Funkcija koja vraća uzastopne proste brojeve */
int daj_prost(){
	static int i=1;
	int j,prost;
	do {
		prost=1;	
		i++;	
		for (j=2;j<i;j++)
			if (i%j==0) {
				prost=0;
				break;
			}		
	} while (prost==0);
	return i;
}
int main() {
	int suma=0,x,k,j,a,b;
/* Unos brojeva a i b */	
	do {
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"",&a,&b);
		if (a<1)
			printf (""A nije prirodan broj.\n"");
		else if (a>=b)	
			printf (""A nije manje od B.\n"");
	} while (a<1 || a>=b);
/* Sabiranje prostih brojeva koji pripadaju intervalu */	
	do{
		x=daj_prost();	
		for (j=a+1;j<b;j++) {
			if (j==x)
				suma=suma+j;
		}
	} while (x<b);
	printf (""Suma prostih brojeva izmedju %d i %d je %d."",a,b,suma);			
	return 0;
}
"
1988,68,68,0,80,A2016/Z4/Z2/student6877,A2016/Z4/Z2/student5170,"#include <stdio.h>
char* kodiraj(char *string,char tablica[96]){
	int znakovi[97]={0},i,max,*p,kraj=0,pozicija=97;
	char *temp=string,*temptab=tablica;
	p=znakovi;
	while(*string!='\0'){
		znakovi[*string-32]++;
		string++;
	}
	while(kraj==0){
		max=0;
		kraj=1;
		for(i=0;i<96;i++){
			if(znakovi[i]>max) {max=znakovi[i]; pozicija=i;}
			if(max!=0) kraj=0;
		}
		znakovi[pozicija]=-1;
		if(max!=0){
		*tablica=(char)(pozicija+32);
		tablica++;
		}
	}
		p=znakovi;
		for(i=0;i<95;i++){
			if(*p==0){
				*tablica=(char)(i+32);
				tablica++;
			}
		p++;
			
		}
		*tablica='\0';
		tablica=temptab;
		string=temp;
		pozicija=0;
		
		while(*string!='\0'){
			tablica=temptab;
			pozicija=0;
			while(*string!=*tablica && *tablica!='\0') {tablica++; pozicija++;}
			*string=(char)(126+pozicija);
			string++;
		}
		string=temp;
		return string;
	
}
char* dekodiraj(char *string, char *tablica){
	char *temp=string;
	char zamjeni=*string;
	int max=0,i;
	int tabela[96]={-1};
	int checked[96]={0};
	int x=1;
	
	while(*string!='\0'){
		checked[*string-32]++;
		string++;
	}
	max=0;
	do{
		max=0;
		for(i=0;i<96;i++){
			if(checked[i]>=max) max=checked[i];
		}
		for(i=95;i<=0;i--){
			if(checked[i]==max){
				zamjeni=i+32;
				break;
			}
		}
		tabela[zamjeni-32]=*tablica;
		checked[zamjeni-32]=0;
		tablica++;
		x=1;
		for(i=0;i<96;i++){
			if(checked[i]!=0) x=0;
		}
	}while(x==0);
	string=temp;
	while(*string!='\0'){
		*string=tabela[*string-32];
		string++;
	}
	return temp;
}
int main() {
	char string[]="""";
	char kodovi[100]="""";
	kodiraj(string,kodovi);
	printf(""%s"",string);
	printf(""\n"");
	printf(""%s"",kodovi);
	dekodiraj(string,kodovi);
	printf(""%s"",string);
	return 0;
}
","#include <stdio.h>

char* kodiraj(char *tekst, char string[96])
{
	char* rst=tekst, *reset=string;
	int kr=0, znak[97]= {0}, mjesto=97, *a, maxi,i=0;
	a=znak;
	while(*tekst!='\0') {
		znak[*tekst-32]++;
		tekst++;
	}
	while(kr==0) {
		maxi=0;
		kr=1;
		for(i=0; i<96; i++) {
			if(znak[i]>maxi) {
				maxi=znak[i];
				mjesto=i;
			}
			if(maxi!=0) kr=0;

		}
		znak[mjesto]=-1;
		if(maxi!=0) {
			*string=(char)(mjesto+32);
			string++;
		}
	}
	a=znak;
	for(i=0; i<95; i++) {
		if(*a==0) {
			*string=(char)(i+32);
			string++;
		}
		a++;

	}
	*string='\0';
	string=reset;
	tekst=rst;
	mjesto=0;
	while(*tekst!='\0') {
		string=reset;
		mjesto=0;
		while(*string!='\0' && *tekst!=*string) {
			string++;
			mjesto++;
		}
		*tekst=(char)(126-mjesto);
		tekst++;
	}
	tekst=rst;
	return tekst;
}

char* dekodiraj(char* tekst, char* string)
{
	int p=1, provjereno[96]= {0}, tablica[96]= {-1}, maxi=0, i=0;
	char promjeni=*tekst;
	char* rst=tekst;
	while(*tekst!='\0') {
		provjereno[*tekst-32]++;
		tekst++;
	}
	maxi=0;
	do {
		maxi=0;
		for(i=0; i<96; i++) {
			if(provjereno[i]>=maxi)
				maxi=provjereno[i];
		}
		for(i=95; i>=0; i--) {
			if(provjereno[i]==maxi) {
				promjeni=i+32;
				break;
			}
		}
		tablica[promjeni-32]=*string;
		provjereno[promjeni-32]=0;
		string++;
		p=1;
		for(i=0; i<96; i++) {
			if(provjereno[i]!=0)
				p=0;
		}
	} while(p==0);
	tekst=rst;
	while(*tekst!='\0') {
		*tekst=tablica[*tekst-32];
		tekst++;
	}
	return rst;
}

int main()
{
	char tekst[] = """";
	char sifrarnik[100] = """";
	kodiraj(tekst, sifrarnik);
	printf(""%s"", tekst);
	dekodiraj(tekst, sifrarnik);
	printf(""%s"", tekst);
	return 0;
}"
1996,70,70,0,56,A2016/Z3/Z2/student5612,A2016/Z3/Z2/student9160,"#include <stdio.h>
#include<stdlib.h>
#define VELICINA 10
#define velicina_2 20
void ubaci (int *niz, int velicina)
{
	int i, k;
	int b1;
	int b2;
	int b3 = 0;
	for(k = velicina - 1; k >= 0; k--){
		niz[2*k] = niz[k];
	}
	for(i = 0; i < 2 * velicina; i = i + 2){
		b1 = abs (niz[i]);
		if (b1 < 10) 
		b3 = b1;
		else {
			do{
			b2 = b1  % 10;
			b3 = b3 + b2;
			b1 = b1 / 10;
			}
			while(b1 != 0);
		}
		niz[i + 1] = b3;
		b3 = 0;
	}
}
int izbaci(int *niz, int velicina)
{
	int i;
	int k;
	int x = 1;
	int y = 1;
	int z;
	int u;
	for(i = 0; i < velicina; i++){
		x = 1;
		y = 1;
		for(k = 1; k < 10000; k++){
			if (k == 1)
			z = 1;
			else {
				z = x + y;
				x = y;
				y = z;
			}
			if(niz[i] == z){
				for(u = i; u < velicina - 1; u++){
					niz[u] = niz[u+1];
				
				}
				velicina -- ; 
				i --; 
				break;
			}
		}
	}
	return velicina;
}
int main(){
	int niz[2 * VELICINA];
	int i;
	int u;
	printf(""Unesite niz od 10 brojeva: "");
	for(i = 0; i < VELICINA; i++){
		scanf(""%d"", &niz[i]);
	}
	ubaci(niz, VELICINA);
	u = izbaci(niz, velicina_2);
	printf(""Modificirani niz glasi: "");
	for(i = 0; i < u; i++){
		if (i == u - 1){
			printf(""%d."", niz[i]);
		}else {
			printf(""%d, "", niz[i]);
		}
	}
	return 0;
}","#include <stdio.h>
#include<math.h>
#include<stdlib.h>
#define duzina 10
void ubaci(int *niz,int velicina)
{
	int broj,broj2=0,cifra,i,j;
	for(j=velicina-1; j>=0; j--)niz[2*j]=niz[j];
	for(i=0; i<2*velicina; i+=2) 
	{
		broj=abs(niz[i]);
		if(broj<10)broj2=broj;
		else {
			do {
				cifra=broj%10;
				broj2+=cifra;
				broj/=10;
			} while(broj!=0);
		}
		niz[i+1]=broj2;
		broj2=0;
	}
}
int izbaci(int *niz, int velicina)
{
	int j,prvi=0,drugi=1,treci,i;
	for(i=0; i<velicina; i++) {
		prvi=0;
		drugi=1;
		for(j=1; j<10000; j++) {
			if(j==1)treci=1;
			else {
				treci=prvi+drugi;
				prvi=drugi;
				drugi=treci;
			}
			if(niz[i]==treci) {
				int k;
				for(k=i; k<velicina-1; k++)niz[k]=niz[k+1];
				velicina--;
				i--;
				break;
			}
		}
	}
	return velicina;
}

int main()
{
	int niz[2*duzina],i,pozivanje;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<duzina; i++)scanf(""%d"",&niz[i]);
	ubaci(niz,duzina);
	pozivanje=izbaci(niz,2*duzina);
	printf(""Modificirani niz glasi: "");
	for(i=0; i<pozivanje; i++)
		if(i==pozivanje-1)printf(""%d."",niz[i]);
		else printf(""%d, "",niz[i]);
	return 0;
}
"
1998,99,99,0,25,A2016/Z2/Z3/student3900,A2016/Z2/Z3/student7802,"#include <stdio.h>

int main() {
	int mat[20][20]={0},i,x,y,n,k=1,t,u;
	do{
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &n);
		if (n>10 || n<1) printf(""Pogresan unos\n"");
	}while(n>10 || n<1);
			for(i=0;i<n;i++){
				printf(""Unesite %d. tacku: "", k);
				scanf(""%d %d"", &x, &y);
					if(x<0|| y<0 || x>=20 || y>=20){
					printf(""Pogresan unos\n"");
					i--;
					}else{
					k++;
					mat[x][y]=1;
					}
				}
		for(u=0;u<20;u++){
			for(t=0;t<20;t++){
				if(mat[t][u]==1) printf(""*""); else printf("" "");	
			}
			printf(""\n"");
		}
	return 0;
}
","#include <stdio.h>

int main() {
	int mat[20][20]={0},i,x,y,n,k=1,t,u;
	do{
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &n);
		if (n>10 || n<1) printf(""Pogresan unos\n"");
	}while(n>10 || n<1);
			for(i=0;i<n;i++){
				printf(""Unesite %d. tacku: "", k);
				scanf(""%d %d"", &x, &y);
					if(x<0|| y<0 || x>=20 || y>=20){
					printf(""Pogresan unos\n"");
					i--;
					}else{
					k++;
					mat[x][y]=1;
					}
				}
		for(u=0;u<20;u++){
			for(t=0;t<20;t++){
				if(mat[t][u]==1) printf(""*""); else printf("" "");	
			}
			printf(""\n"");
		}
	return 0;
}
"
2000,71,71,0,166,A2016/Z1/Z1/student2645,A2016/Z1/Z1/student3841,"#include <stdio.h>
#include <stdlib.h>
int main() {
	
	double a, b, c, d, e, s, m, n;
	
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &a);
	if(a<0 || a>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &b);
	if(b<0 || b>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%lf"", &c);
	if(c<0 || c>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &d);
	if(d<0 || d>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &e);
	if(e<0 || e>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	s=a+b+c+d+e;

	printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &a);
	if(a<0 || a>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &b);
	if(b<0 || b>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%lf"", &c);
	if(c<0 || c>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &d);
	if(d<0 || d>10) {
		printf(""Neispravan broj bodova"");
		return 0; 
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &e);
	if(e<0 || e>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	m=a+b+c+d+e;
	
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &a);
	if(a<0 || a>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &b);
	if(b<0 || b>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%lf"", &c);
	if(c<0 || c>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &d);
	if(d<0 || d>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &e);
	if(e<0 || e>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	n=a+b+c+d+e;

	if(s<55 && m<55 && n<55) {
		printf(""Nijedan student nije polozio.\n"");
	}
	else if((s>=55 && m<55 && n<55) || (s<55 && m>=55 && n<55) || (s<55 && m<55 && n>=55)) {
		printf(""Jedan student je polozio.\n"");
	}
	else if((s>=55 && m>=55 && n<55) || (s>=55 && m<55 && n>=55) || (s<55 && m>=55 && n>=55)) {
		printf(""Dva studenta su polozila.\n"");
	}
	else if((s>=55 && m>=55 && n>=55)) {
		printf(""Sva tri studenta su polozila.\n"");
		
		
		if(((s>=55 && s<65) && (m>=55 && m<65) && (n>=55 && n<65)) || ((s>=65 && s<75) && (m>=65 && m<75) && (n>=65 && n<75)) || ((s>=75 && s<85) && (m>=75 && m<85) && (n>=75 && n<85))
		|| ((s>=85 && s<92) && (m>=85 && m<92) && (n>=85 && n<92)) || ((s>=92 && s<=100) && (m>=92 && m<=100) && (n>=92 && n<=100))) {
			printf(""Sva tri studenta imaju istu ocjenu."");
		}
		else if(((s>=55 && s<65) && (m>55 && m<65) || (n>=55 && n<65)) || ((s>=65 && s<75) && (m>=65 && m<75) || (n>=65 && n<75)) || ((s>=75 && s<85) && (m>=75 && m<85) || (n>=75 && n<85))
		&& ((s>=85 && s<92) && (m>=85 && m<92) || (n>=85 && n<92)) || ((s>=92 && s<=100) && (m>=92 && m<=100) || (n>=92 && n<=100))) {
			printf(""Dva od tri studenta imaju istu ocjenu."");
		}
		else if(((s>=55 && s<65) || (m>=55 && m<65) || (n>=65 && n<65)) || ((s>=65 && s<75) || (m>=65 && m<75) || (n>=65 && n<75)) || ((s>=75 && s<85) || (m>=75 && m<85) || (n<=75 && n<85)) 
		|| ((s>=85 && s<92) || (m>=85 && m<92) || (n>=85 && n<92)) || ((s>=92 && s<=100) || (m>=92 && m<=100) || (n>=92 && n<=100))) 
	{
			printf(""Svaki student ima razlicitu ocjenu."");
		
		}
	}
	return 0;
}","#include <stdio.h>

int main()
{
	double T1, T2, T3, T4, T5, B1, B2, B3, B4, B5, M1, M2, M3, M4, M5, O1, O2, O3;
	
	//*T A R I K*//
	printf(""Unesite bodove za Tarika: \nI parcijalni ispit: "");
	scanf(""%lf"", &T1);
	
	if(T1 < 0 || T1 > 20)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &T2);
	
	if (T2 < 0 || T2 > 20)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	printf(""Prisustvo: "");
	scanf(""%lf"", &T3);
	
	if(T3 < 0 || T3 > 10)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	
	printf(""Zadace: "");
	scanf(""%lf"", &T4);
	
	if(T4 < 0 || T4 > 10)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &T5);
	
	if(T5 < 0 || T5 > 40)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	O1 = T1 + T2 + T3 + T4 + T5;
	
	//* B O J A N*//
	printf(""Unesite bodove za Bojana: \nI parcijalni ispit: "");
	scanf(""%lf"", &B1);
	
	if(B1 < 0 || B1 > 20)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &B2);
	
	if(B2 < 0 || B2 > 20)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	printf(""Prisustvo: "");
	scanf(""%lf"", &B3);
	
	if(B3 < 0 || B3 > 10)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	printf(""Zadace: "");
	scanf(""%lf"", &B4);
	
	if(B4 < 0 || B4 > 10)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &B5);
	
	if(B5 < 0 || B5 > 40)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	O2 = B1 + B2 + B3 + B4 + B5;
	

	
	//* M I R Z A*//
	printf(""Unesite bodove za Mirzu: \nI parcijalni ispit: "");
	scanf(""%lf"", &M1);
	
	if (M1 < 0 || M1 > 20)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &M2);
	
	if(M2 < 0 || M2 > 20)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	printf(""Prisustvo: "");
	scanf(""%lf"", &M3);
	
	if(M3 < 0 || M3 > 10)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	printf(""Zadace: "");
	scanf(""%lf"", &M4);
	
	if(M4 < 0 || M4 > 10)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &M5);
	
	if (M5 < 0 || M5 > 40)
	{
		printf(""Neispravan broj bodova"");
		return 1;
	}
	
	O3 = M1 + M2 + M3 + M4 + M5;
	
	
	if (O1 < 55 && O2 < 55 && O3 < 55)
		printf(""Nijedan student nije polozio.\n"");
		
	else if (O1 >= 55 && O2 >= 55 && O3 >= 55)
	{
		
		printf(""Sva tri studenta su polozila. \n"");
		
		if((O1 >= 55 && O1 < 65 && O2 >= 55 && O2 < 65 && O3 >= 55 && O3 < 65) 
		|| (O1 >= 65 && O2 >= 65 && O3 >=65 && O1 < 75 && O2 < 75 && O3 < 75) 
		|| (O1 >= 75 && O2 >= 75 && O3 >= 75 && O1 < 85 && O2 < 85 && O3 < 85)
		|| (O1 >= 85 && O2 >= 85 && O3 >= 85 && O1 < 92 && O2 < 92 && O3 < 92)
		|| (O1 >= 92 && O2 >= 92 && O3 >=92 && O1 <=100 && O2 <=100 && O3 <=100))
			printf(""Sva tri studenta imaju istu ocjenu. \n"");
			
			
		if(O1 >= 55 && O1 < 65)
		{
			if((O2 >= 65 && O2 < 75 && O3 >= 65 && O3 < 75) 
			|| (O2 >= 75 && O2 < 85 && O3 >= 75 && O3 < 85)
			|| (O2 >= 85 && O2 < 92 && O3 >= 85 && O3 < 92)
			|| (O2 >= 92 && O2 <= 100 && O3 >= 92 && O3 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O2 >= 65 && O2 < 75 && O3 >= 75 && O3 < 85) 
			|| (O2 >= 75 && O2 < 85 && O3 >= 65 && O3 < 75)
			|| (O2 >= 85 && O2 < 92 && O3 >= 92 && O3 <= 100)
			|| (O2 >= 92 && O2 <= 100 && O3 >= 85 && O3 < 92))
			{
				printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
			}
		}
		
		else if(O1 >= 65 && O1 < 75)
		{
			if((O2 >= 55 && O2 < 65 && O3 >= 55 && O3 < 65) 
			|| (O2 >= 75 && O2 < 85 && O3 >= 75 && O3 < 85)
			|| (O2 >= 85 && O2 < 92 && O3 >= 85 && O3 < 92)
			|| (O2 >= 92 && O2 <= 100 && O3 >= 92 && O3 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O2 >= 55 && O2 < 65 && O3 >= 75 && O3 < 85) 
			|| (O2 >= 75 && O2 < 85 && O3 >= 55 && O3 < 65)
			|| (O2 >= 85 && O2 < 92 && O3 > 92 && O3 <= 100)
			|| (O2 >= 92 && O2 <= 100 && O3 >=55 && O3 < 65))
			{
				printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
			}
			
		}
		
		else if(O1 >= 75 && O1 < 85)
		{
			if((O2 >= 55 && O2 < 65 && O3 >= 55 && O3 < 65) 
			|| (O2 >= 65 && O2 < 75 && O3 >= 65 && O3 < 75)
			|| (O2 >= 85 && O2 < 92 && O3 >= 85 && O3 < 92)
			|| (O2 >= 92 && O2 <= 100 && O3 >= 92 && O3 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O2 >= 65 && O2 < 75 && O3 >= 75 && O3 < 65) 
			|| (O2 >= 55 && O2 < 65 && O3 >= 65 && O3 < 75)
			|| (O2 >= 85 && O2 < 92 && O3 > 92 && O3 <= 100)
			|| (O2 >= 92 && O2 <= 100 && O3 >=92 && O3 <= 100))
			{
				printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
			}
			
		}
		
		else if(O1 >= 85 && O1 < 92)
		{
			if((O2 >= 55 && O2 < 65 && O3 >= 55 && O3 < 65) 
			|| (O2 >= 65 && O2 < 75 && O3 >= 65 && O3 < 75)
			|| (O2 >= 75 && O2 < 85 && O3 >= 75 && O3 < 85)
			|| (O2 >= 92 && O2 <= 100 && O3 >= 92 && O3 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
				
			else if((O2 >= 65 && O2 < 75 && O3 >= 65 && O3 < 75) 
			|| (O2 >= 75 && O2 < 85 && O3 >= 65 && O3 < 75)
			|| (O2 >= 55 && O2 < 65 && O3 > 92 && O3 <= 100)
			|| (O2 >= 92 && O2 <= 100 && O3 >= 55 && O3 <65))
				{
					printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
				}
		}
		
		else if(O1 >= 92 && O1 <=100)
		{
			if((O2 >= 65 && O2 < 75 && O3 >= 65 && O3 < 75) 
			|| (O2 >= 75 && O2 < 85 && O3 >= 75 && O3 < 85)
			|| (O2 >= 85 && O2 < 92 && O3 >= 85 && O3 < 92)
			|| (O2 >= 55 && O2 < 65 && O3 >= 55 && O3 < 65))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O2 >= 55 && O2 < 65 && O3 >= 75 && O3 < 85) 
			|| (O2 >= 75 && O2 < 85 && O3 >= 65 && O3 < 75)
			|| (O2 >= 85 && O2 < 92 && O3 > 92 && O3 <= 100)
			|| (O2 >= 65 && O2 <= 75 && O3 >= 55 && O3 < 65))
			{
				printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
			}
			
		}
		
		if(O2 >= 55 && O2 < 65)
		{
			if((O1 >= 65 && O1 < 75 && O3 >= 65 && O3 < 75) 
			|| (O1 >= 75 && O1 < 85 && O3 >= 75 && O3 < 85)
			|| (O1 >= 85 && O1 < 92 && O3 >= 85 && O3 < 92)
			|| (O1 >= 92 && O1 <= 100 && O3 >= 92 && O3 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O1 >= 65 && O1 < 75 && O3 >= 75 && O3 < 85) 
			|| (O1 >= 75 && O1 < 85 && O3 >= 65 && O3 < 75)
			|| (O1 >= 85 && O1 < 92 && O3 >= 92 && O3 <= 100)
			|| (O1 >= 92 && O1 <= 100 && O3 >= 85 && O3 < 92))
			{
				printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
			}
			
		}
		
		else if(O2 >= 65 && O2 < 75)
		{
			if((O1 >= 55 && O1 < 65 && O3 >= 55 && O3 < 65) 
			|| (O1 >= 75 && O1 < 85 && O3 >= 75 && O3 < 85)
			|| (O1 >= 85 && O1 < 92 && O3 >= 85 && O3 < 92)
			|| (O1 >= 92 && O1 <= 100 && O3 >= 92 && O3 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O1 >= 55 && O1 < 65 && O3 >= 75 && O3 < 85) 
			|| (O1 >= 75 && O1 < 85 && O3 >= 55 && O3 < 65)
			|| (O1 >= 85 && O1 < 92 && O3 > 92 && O3 <= 100)
			|| (O1 >= 92 && O1 <= 100 && O3 >=55 && O3 < 65))
				{
					printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
				}
		}
		
		else if(O2 >= 75 && O2 < 85)
		{
			if((O1 >= 55 && O1 < 65 && O3 >= 55 && O3 < 65) 
			|| (O1 >= 65 && O1 < 75 && O3 >= 65 && O3 < 75)
			|| (O1 >= 85 && O1 < 92 && O3 >= 85 && O3 < 92)
			|| (O1 >= 92 && O1 <= 100 && O3 >= 92 && O3 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O1 >= 65 && O1 < 75 && O3 >= 75 && O3 < 65) 
			|| (O1 >= 55 && O1 < 65 && O3 >= 65 && O3 < 75)
			|| (O1 >= 85 && O1 < 92 && O3 > 92 && O3 <= 100)
			|| (O1 >= 92 && O1 <= 100 && O3 >=92 && O3 <= 100))
				{
					printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
				}
				
		}
		
		else if(O2 >= 85 && O2 < 92)
		{
			if((O1 >= 55 && O1 < 65 && O3 >= 55 && O3 < 65) 
			|| (O1 >= 65 && O1 < 75 && O3 >= 65 && O3 < 75)
			|| (O1 >= 75 && O1 < 85 && O3 >= 75 && O3 < 85)
			|| (O1 >= 92 && O1 <= 100 && O3 >= 92 && O3 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
				
			else if((O1 >= 65 && O1 < 75 && O3 >= 65 && O3 < 75) 
			|| (O1 >= 75 && O1 < 85 && O3 >= 65 && O3 < 75)
			|| (O1 >= 55 && O1 < 65 && O3 > 92 && O3 <= 100)
			|| (O1 >= 92 && O1 <= 100 && O3 >= 55 && O3 <65))
			{
				printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
			}
		}
		
		else if(O2 >= 92 && O2 <=100)
		{
			if((O1 >= 65 && O1 < 75 && O3 >= 65 && O3 < 75) 
			|| (O1 >= 75 && O1 < 85 && O3 >= 75 && O3 < 85)
			|| (O1 >= 85 && O1 < 92 && O3 >= 85 && O3 < 92)
			|| (O1 >= 55 && O1 < 65 && O3 >= 55 && O3 < 65))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O1 >= 55 && O1 < 65 && O3 >= 75 && O3 < 85) 
			|| (O1 >= 75 && O1 < 85 && O3 >= 65 && O3 < 75)
			|| (O1 >= 85 && O1 < 92 && O3 > 92 && O3 <= 100)
			|| (O1 >= 65 && O1 <= 75 && O3 >= 55 && O3 < 65))
			{
				printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
			}
			
		}
		
		
		if(O3 >= 55 && O3 < 65)
		{
			if((O1 >= 65 && O1 < 75 && O2 >= 65 && O2 < 75) 
			|| (O1 >= 75 && O1 < 85 && O2 >= 75 && O2 < 85)
			|| (O1 >= 85 && O1 < 92 && O2 >= 85 && O2 < 92)
			|| (O1 >= 92 && O1 <= 100 && O2 >= 92 && O2 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O1 >= 65 && O1 < 75 && O2 >= 75 && O2 < 85) 
			|| (O1 >= 75 && O1 < 85 && O2 >= 65 && O2 < 75)
			|| (O1 >= 85 && O1 < 92 && O2 >= 92 && O2 <= 100)
			|| (O1 >= 92 && O1 <= 100 && O2 >= 85 && O2 < 92))
			{
				printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
			}
			
		}
		
		else if(O3 >= 65 && O3 < 75)
		{
			if((O1 >= 55 && O1 < 65 && O2 >= 55 && O2 < 65) 
			|| (O1 >= 75 && O1 < 85 && O2 >= 75 && O2 < 85)
			|| (O1 >= 85 && O1 < 92 && O2 >= 85 && O2 < 92)
			|| (O1 >= 92 && O1 <= 100 && O2 >= 92 && O2 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O1 >= 55 && O1 < 65 && O2 >= 75 && O2 < 85) 
			|| (O1 >= 75 && O1 < 85 && O2 >= 55 && O2 < 65)
			|| (O1 >= 85 && O1 < 92 && O2 > 92 && O2 <= 100)
			|| (O1 >= 92 && O1 <= 100 && O2 >=55 && O2 < 65))
				{
					printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
				}
		}
		
		else if(O3 >= 75 && O3 < 85)
		{
			if((O1 >= 55 && O1 < 65 && O2 >= 55 && O2 < 65) 
			|| (O1 >= 65 && O1 < 75 && O2 >= 65 && O2 < 75)
			|| (O1 >= 85 && O1 < 92 && O2 >= 85 && O2 < 92)
			|| (O1 >= 92 && O1 <= 100 && O2 >= 92 && O2 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O1 >= 65 && O1 < 75 && O2 >= 75 && O2 < 65) 
			|| (O1 >= 55 && O1 < 65 && O2 >= 65 && O2 < 75)
			|| (O1 >= 85 && O1 < 92 && O2 > 92 && O2 <= 100)
			|| (O1 >= 92 && O1 <= 100 && O2 >=92 && O2 <= 100))
			{
				printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
			}
			
		}
		
		else if(O3 >= 85 && O3 < 92)
		{
			if((O1 >= 55 && O1 < 65 && O2 >= 55 && O2 < 65) 
			|| (O1 >= 65 && O1 < 75 && O2 >= 65 && O2 < 75)
			|| (O1 >= 75 && O1 < 85 && O2 >= 75 && O2 < 85)
			|| (O1 >= 92 && O1 <= 100 && O2 >= 92 && O2 <= 100))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
				
			else if((O1 >= 65 && O1 < 75 && O2 >= 65 && O2 < 75) 
			|| (O1 >= 75 && O1 < 85 && O2 >= 65 && O2 < 75)
			|| (O1 >= 55 && O1 < 65 && O2 > 92 && O2 <= 100)
			|| (O1 >= 92 && O1 <= 100 && O2 >= 55 && O2 <65))
				{
					printf(""Svaki student ima razlicitu ocjenu."");
					return 1;
				}
		}
		
		else if(O3 >= 92 && O3 <=100)
		{
			if((O2 >= 65 && O2 < 75 && O1 >= 65 && O1 < 75) 
			|| (O2 >= 75 && O2 < 85 && O1 >= 75 && O1 < 85)
			|| (O2 >= 85 && O2 < 92 && O1 >= 85 && O1 < 92)
			|| (O2 >= 55 && O2 < 65 && O1 >= 55 && O1 < 65))
				printf(""Dva od tri studenta imaju istu ocjenu."");
				
			else if((O2 >= 55 && O2 < 65 && O3 >= 75 && O1 < 85) 
			|| (O2 >= 75 && O2 < 85 && O1 >= 65 && O1 < 75)
			|| (O2 >= 85 && O2 < 92 && O1 > 92 && O1 <= 100)
			|| (O2 >= 65 && O2 <= 75 && O1 >= 55 && O1 < 65))
			{
				printf(""Svaki student ima razlicitu ocjenu."");
				return 1;
			}
		}
		
	}
	else if((O1 >= 55 && O2 < 55 && O3 < 55) || (O1 < 55 && O2 >= 55 && O3 < 55) || (O1 < 55 && O2 < 55 && O3 >= 55))
		printf(""Jedan student je polozio.\n"");
		
	else if((O1 >= 55 && O2 >= 55 && O3 < 55) || (O1 >= 55 && O2 < 55 && O3 >= 55) || (O1 < 55 && O2 >= 55 && O3 >=55))
		printf(""Dva studenta su polozila. \n"");
		
		
	return 0;
}"
2002,94,94,0,205,A2016/Z1/Z1/student5573,A2016/Z1/Z1/student7496,"#include <stdio.h>
#include <stdlib.h>
int main() {
	float tp1,tp2,tp,tz,tza,bp1,bp2,bp,bz,bza,mp1,mp2,mp,mz,mza,ocjena1,ocjena2,ocjena3;
	scanf(""%f"", &tp1);
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
	if (tp1<0 || tp1>20) 
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &tp2);
	if (tp2<0 || tp2>20)
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &tp);
	if (tp<0 || tp>10)
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &tz);
	if (tz<0 || tz>10) 
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &tza);
	if (tza<0 || tza>40)
	{
		printf(""Neispravan broj bodova"");
		return 0;
	} 
	printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &bp1);
	if (bp1<0 || bp1>20)
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &bp2);
	if (bp2<0 || bp2>20)
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &bp);
	if (bp<0 || bp>10)
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &bz);
	if (bz<0 || bz>10)
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &bza);
	if (bza<0 || bza>40) 
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &mp1);
	if (mp1<0 || mp1>20)
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &mp2);
	if (mp2<0 || mp2>20) 
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &mp);
	if (mp<0 || mp>10) 
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &mz);
	if (mz<0 || mz>10) 
	{
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &mza);
	if (mza<0 || mza>40) 
	{
		printf(""Neispravan broj bodova"");
		return 0;
	} 
	system(""clear"");
	ocjena1=tp1+tp2+tza+tz+tp;
	ocjena2=bp1+bp2+bza+bz+bp;
	ocjena3=mp1+mp2+mza+mz+mp;
	if(ocjena1<55)
	{
		ocjena1=5;
	}
	if(ocjena1>=55 && ocjena1<65)
	{
		ocjena1=6;
	}
	if(ocjena1>=65 && ocjena1<75)
	{
		ocjena1=7;
	}
	if(ocjena1>=75 && ocjena1<85)
	{
		ocjena1=8;
	}
	if(ocjena1>=85 && ocjena1<92)
	{
		ocjena1=9;
	}
	if(ocjena1>=92 && ocjena1<=100)
	{
		ocjena1=10;
	}
	if(ocjena2<55)
	{
		ocjena2=5;
	}
	if(ocjena2>=55 && ocjena2<65)
	{
		ocjena2=6;
	}
	if(ocjena2>=65 && ocjena2<75)
	{
		ocjena2=7;
	}
	if(ocjena2>=75 && ocjena2<85)
	{
		ocjena2=8;
	}
	if(ocjena2>=85 && ocjena2<92)
	{
		ocjena2=9;
	}
	if(ocjena2>=92 && ocjena2<=100)
	{
		ocjena2=10;
	}
	if(ocjena3<55)
	{
		ocjena3=5;
	}
	if(ocjena3>=55 && ocjena3<65)
	{
		ocjena3=6;
	}
	if(ocjena3>=65 && ocjena3<75)
	{
		ocjena3=7;
	}
	if(ocjena3>=75 && ocjena3<85)
	{
		ocjena3=8;
	}
	if(ocjena3>=85 && ocjena3<92)
	{
		ocjena3=9;
	}
	if(ocjena3>=92 && ocjena3<=100)
	{
		ocjena3=10;
	}
	if(ocjena1 >5 && ocjena2 >5 && ocjena3 >5)
	{
		printf(""Sva tri studenta su polozila. \n"");
	}
	if(ocjena1 <=5 && ocjena2 <=5 && ocjena3 <= 5)
	{
		printf(""Nijedan student nije polozio.\n"");
		return 0;
	}
	if((ocjena1 >=5 && ocjena2 <=5 && ocjena3 <= 5) || (ocjena1 <=5 && ocjena2 >=5 && ocjena3 <= 5) || (ocjena1 <=5 && ocjena2 <=5 && ocjena3 >= 5))
	{
		printf(""Jedan student je polozio.\n"");
		return 0;
	}
	if((ocjena1 >=5 && ocjena2 >=5 && ocjena3 <= 5) || (ocjena1 <=5 && ocjena2 >=5 && ocjena3 >= 5)|| (ocjena1 >=5 && ocjena2 <=5 && ocjena3 >= 5))
	{
	printf(""Dva studenta su polozila.\n"");
	return 0;
	}
	if(ocjena1 == ocjena2 && ocjena2 == ocjena3 )
	{
		printf(""Sva tri studenta imaju istu ocjenu.\n"");
	}
	if(ocjena1 != ocjena2 && ocjena2 != ocjena3 )
	{
		printf(""Svaki student ima razlicitu ocjenu.\n"");
	}
	if((ocjena1 == ocjena2 && ocjena2 != ocjena3 ) || (ocjena1 != ocjena2 && ocjena2 == ocjena3 ) || (ocjena1 == ocjena3 && ocjena2 != ocjena3 ))
	{
		printf(""Dva od tri studenta imaju istu ocjenu.\n"");
	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
int main () {
    float a,b,c,x1,x2,x3,x4,x5,y1,y2,y3,y4,y5,z1,z2,z3,z4,z5;
    int x,y,z;
    printf(""Unesite bodove za Tarika:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &x1);
    if (x1<0 || x1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    } 
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &x2);
    if (x2<0 || x2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"", &x3);
    if(x3<0 || x3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%f"", &x4);
    if(x4<0 || x4>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &x5);
    if(x5<0 || x5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/*za prvog studenta*/
    
    printf(""Unesite bodove za Bojana:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &y1);
    if(y1<0 || y1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &y2);
    if(y2<0 || y2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"", &y3);
    if(y3<0 || y3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%f"", &y4);
    if(y4<0 || y4>10) {
        printf (""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &y5);
    if(y5<0 || y5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/* za drugog studenta*/
    
    printf(""Unesite bodove za Mirzu:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &z1);
    if(z1<0 || z1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &z2);
    if(z2<0 || z2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"",&z3);
    if(z3<0 || z3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }  
    printf(""Zadace: "");
    scanf(""%f"", &z4);
    if(z4<0 || z4>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &z5);
    if(z5<0 || z5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/* za treceg studenta*/
    
    system(""clear"");
    a=x1+x2+x3+x4+x5; 
    b=y1+y2+y3+y4+y5;
    c=z1+z2+z3+z4+z5;
    
    x=a;
    y=b;
    z=c;
    
    if(x<55) {
        x=5;
    }
    if(x>=55 && x<65) {
        x=6;
    }
    if(x>=65 && x<75) {
        x=7;
    }
    if (x>=75 && x<85) {
        x=8;
    }
    if (x>=85 && x<92) {
        x=9;
    }
    if (x>=92 && x<100) {
        x=10;
    }
    
    if(y<55) {
        y=5;
    }
    if(y>=55 && y<65) {
        y=6;
    }
    if(y>=65 && y<75) {
        y=7;
    }
    if (y>=75 && y<85) {
        y=8;
    }
    if (y>=85 && y<92) {
        y=9;
    }
    if (y>=92 && y<100) {
        y=10;
    }
    
    if(z<55) {
        z=5;
    }
    if(z>=55 && z<65) {
        z=6;
    }
    if(z>=65 && z<75) {
        z=7;
    }
    if (z>=75 && z<85) {
        z=8;
    }
    if (z>=85 && z<92) {
        z=9;
    }
    if (z>=92 && z<100) {
        z=10;
    }
    
    if(x>5 && y>5 && z>5) {
        printf(""Sva tri studenta su polozila.\n"");
        printf(""Svaki student ima razlicitu ocjenu.\n"");
        return 0;
    }
    
    if(x<=5 && y<=5 && z<=5) {
        printf(""Nijedan student nije polozio.\n"");
        return 0;
    }
    
    if((x>5 && y<=5 && z<=5) || (x<=5 && y>5 && z<=5) || (x<=5 && y<=5 && z>5)) {
        printf(""Jedan student je polozio.\n"");
        return 0;
    } 
    
    if((x>5 && y>5 && z<=5) || (x<=5 && y>5 && z>5) || (x>5 && y<=5 && z>5)) {
        printf(""Dva studenta su polozila.\n"");
        return 0;
    }
        
    if(x==y && y==z) {
        printf(""Sva tri studenta imaju istu ocjenu.\n"");
        return 0;
    }   
    
    if(x!=y && y!=z) {
        printf(""Sva tri studenta imaju razlicitu ocjenu.\n"");
        return 0;
    }
    
    if((x==y && y!=z) || (x!=y && y==z) || (x==y && y!=z)) {
        printf(""Dva od tri studenta imaju istu ocjenu.\n"");
        return 0;
    }
    
    return 0;
}     
       

"
2003,99,99,0,61,A2016/Z3/Z2/student1422,A2016/Z3/Z2/student2335,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
/*Funkcija ubaci prima promijenjivu tipa int koja pokazuje na niz i velicinu tog niza. Prvo treba napraviti
 mjesta za nove clanove niza, kojih ima isto onoliko koliko i elemenata niza. ocekuje se da se nakon 
 svakog elementa niza doda novi element koji predstavlja sumu cifara prethodnika, tako da ce se svaki elemant
 pomjeriti tako da nakon njega ima mjesto za novi clan. prva for petlja je sluzi da se napravi mjesta za nove
 clanove niza, dok druga petlja racuna te clanove i ubacuje ih na njihova mjesta*/

void ubaci(int *niz,int vel){
    int i,a=(2*vel)-2,suma=0,x;
    for(i=vel-1;i>=0;i--){
        niz[a]=niz[i];
        a-=2;
    }
    for(i=0;i<vel*2;i+=2){
        suma=0;
        x=abs(niz[i]);
        do{
            suma+=x%10;
            x/=10;
        }while(x>0);
        niz[i+1]=suma;
    }
}
/*Funkcija izbaci treba iz niza izbaciti sve brojeve koji su Fibonacijevi brojevi. Najprije je potrebno
provjeriti da li uopce ima takvih brojeva. To se postize prvom, vanjskom, petljom. Dakle, prolazi se kroz
sve clanove niza, ali na pocetku petlje dodjeljujemo vrijednost 1 prvom i drugom elementu niza, te
takodjer istu vrijednost i varijabli fib(da joj se ne dodijeli nikakva vrijednost na pocetku, automatski
bi joj se dodijelila neka proizvoljna vrijednost iz memorije, te se while pezlja vjerovatno nikada ne bi
ni izvrsila). Dalje, kako je u Fibonacijevom nizu svaki element suma prethodna dva(osim prvog i drugog clana,
oni su jednaki broju 1), while petlja prolazi kroz Fibonacijev niz sve dok je clan tog niza manji od clana
naseg zadanog niza. Ako je nakon zavrsetka petlje ispostavi da clan naseg niza pripada Fibonacijevom nizu,
odnosno da mu je jednak, taj clan se izbacuje iz niza pomocu druge for petlje. Funkcija na kraju vraca 
velicinu niza, jer mi ne znamo koliko elemenata ce biti izbaceno iz niza nakon pokretanja funkcije, tj. 
ne znamo da li ce se izbaciti ijedan clan.*/
int izbaci(int *niz,int vel){
    int i,j,fib,a,b;
    for(i=0;i<vel;i++){
        fib=1;
        a=1;
        b=1;
        while(fib<niz[i]){
            fib=a+b;
            a=b;
            b=fib;
        }
        if(fib==niz[i]){
            for(j=i;j<vel-1;j++)
            niz[j]=niz[j+1];
            vel--;
            i--;
        }
    }
    return vel;
}

int main() {
    int niz[20],i,nvel;
    printf(""Unesite niz od 10 brojeva: "");
    for(i=0;i<10;i++)
    scanf(""%d"",&niz[i]);
    ubaci(niz,10);
    nvel=izbaci(niz,20);
    printf(""Modificirani niz glasi: "");
    printf(""%d"",niz[0]);
    for(i=1;i<nvel;i++)
        printf("", %d"",niz[i]);
        printf(""."");
   	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
/*Funkcija ubaci prima promijenjivu tipa int koja pokazuje na niz i velicinu tog niza. Prvo treba napraviti
 mjesta za nove clanove niza, kojih ima isto onoliko koliko i elemenata niza. ocekuje se da se nakon 
 svakog elementa niza doda novi element koji predstavlja sumu cifara prethodnika, tako da ce se svaki elemant
 pomjeriti tako da nakon njega ima mjesto za novi clan. prva for petlja je sluzi da se napravi mjesta za nove
 clanove niza, dok druga petlja racuna te clanove i ubacuje ih na njihova mjesta*/

void ubaci(int *niz,int vel){
    int i,a=(2*vel)-2,suma=0,x;
    for(i=vel-1;i>=0;i--){
        niz[a]=niz[i];
        a-=2;
    }
    for(i=0;i<vel*2;i+=2){
        suma=0;
        x=abs(niz[i]);
        do{
            suma+=x%10;
            x/=10;
        }while(x>0);
        niz[i+1]=suma;
    }
}
/*Funkcija izbaci treba iz niza izbaciti sve brojeve koji su Fibonacijevi brojevi. Najprije je potrebno
provjeriti da li uopce ima takvih brojeva. To se postize prvom, vanjskom, petljom. Dakle, prolazi se kroz
sve clanove niza, ali na pocetku petlje dodjeljujemo vrijednost 1 prvom i drugom elementu niza, te
takodjer istu vrijednost i varijabli fib(da joj se ne dodijeli nikakva vrijednost na pocetku, automatski
bi joj se dodijelila neka proizvoljna vrijednost iz memorije, te se while pezlja vjerovatno nikada ne bi
ni izvrsila). Dalje, kako je u Fibonacijevom nizu svaki element suma prethodna dva(osim prvog i drugog clana,
oni su jednaki broju 1), while petlja prolazi kroz Fibonacijev niz sve dok je clan tog niza manji od clana
naseg zadanog niza. Ako je nakon zavrsetka petlje ispostavi da clan naseg niza pripada Fibonacijevom nizu,
odnosno da mu je jednak, taj clan se izbacuje iz niza pomocu druge for petlje. Funkcija na kraju vraca 
velicinu niza, jer mi ne znamo koliko elemenata ce biti izbaceno iz niza nakon pokretanja funkcije, tj. 
ne znamo da li ce se izbaciti ijedan clan.*/
int izbaci(int *niz,int vel){
    int i,j,fib,a,b;
    for(i=0;i<vel;i++){
        fib=1;
        a=1;
        b=1;
        while(fib<niz[i]){
            fib=a+b;
            a=b;
            b=fib;
        }
        if(fib==niz[i]){
            for(j=i;j<vel-1;j++)
            niz[j]=niz[j+1];
            vel--;
            i--;
        }
    }
    return vel;
}

int main() {
    int niz[20],i,nvel;
    printf(""Unesite niz od 10 brojeva: "");
    for(i=0;i<10;i++)
    scanf(""%d"",&niz[i]);
    ubaci(niz,10);
    nvel=izbaci(niz,20);
    printf(""Modificirani niz glasi: "");
    printf(""%d"",niz[0]);
    for(i=1;i<nvel;i++)
        printf("", %d"",niz[i]);
        printf(""."");
   	return 0;
}
"
2005,54,54,0,25,A2016/Z3/Z1/student9463,A2016/Z3/Z1/student7085,"#include <stdio.h>

/*Funkcija ""daj_prost"" pomocu staticke varijable izbacuje sljedeci prost broj, pocevsi od broja 2*/

int daj_prost () {
	int i, prost;
	static int num=1;
	do{
		prost=1;
		num++;
		if(num==2) continue;
		for(i=2; i<num; i++){
			if(num%i == 0){
				prost=0;
				break;
			}
		}
	}while(prost==0);
	return num;
}

/*Funkcija ""main"" trazi od korisnika unos dva broja, nakon cega ispisuje na ekran zbir svih prostih brojeva izmedju ta dva broja*/

int main() {
	int a, b, i, suma=0, temp;
	do{
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"", &a, &b);
		if(a<1) printf(""A nije prirodan broj.\n"");
		else if(a>=b) printf(""A nije manje od B.\n"");
	}while(a>=b || a<1 || b<1);
	
	do{
		temp=daj_prost();
		if(temp>a && temp<b) suma = temp;
	}while(temp<=a);
	
	for(i=1;i>0;i++){
		temp = daj_prost();
		if(temp<b) suma+=temp;
		else break;
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."", a, b, suma);
	return 0;
}
","#include <stdio.h>

/*Funkcija vraca proste brojeve redom*/
int daj_prost(){
	int i,prost;
	static int n=1; 
	do{
		prost=1;
		n++;
		/*znamo je da je prvi prost broj 2*/
		if(n==2)continue;
		/*provjeravamo da li je broj prost*/
		for(i=2;i<n;i++){
			if(n%i==0){ 
			prost=0 ;
		
		} 
		
	}
	}while(prost==0);
	return n;
}

int main() {
	int A,B,suma=0,temp;
	/*Unosimo brojeve A i B za koje provjeravamo da li su prirodni i da li je A<B.
	U zavisnosti koji se uslov ne ispuni,ispisuje se poruka da broj nije prirodan ili da A nije manje od B i korisnik ponovo unosi brojeve, dok ne unese tacne.*/
	
	do{
	printf(""Unesite brojeve A i B: "");
	scanf(""%d %d"", &A,&B );
	
	if(A<=0) printf(""A nije prirodan broj.\n"");
	else if(A>=B) printf(""A nije manje od B.\n"");
	
	}
	while(A<=0 || B<=0 || A>=B);
	/*Pozivamo proste brojeve do A*/
	do{
		temp=daj_prost();
		if(temp>A)
		break;
		
	}
	while(temp<=A);
	/*Sumiramo proste brojeve izmedju A i B pozivanjem funkcije daj_prost*/
	while(temp<B){
		suma+=temp;
		temp=daj_prost();
		if(temp>=B)
		break;
	}

	
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
	
	
	
	return 0;
}


"
2007,93,93,0,56,A2016/Z3/Z1/student2526,A2016/Z3/Z1/student2086,"#include <stdio.h>
/* Funkcija koja izbacuje svaki slijedeci prost broj */
int daj_prost() {
	int prost=1,i;
	static int broj=1;
    while(1){
    	broj++;
    	if (broj==2){
    		return broj;
    	}
    	else {
    		for (i=2;i<broj;i++){
    			if (broj%i==0){
    				prost=0;
    				break;
    			}
    		}
    		if (prost){
    			return broj;
    		}
    		else {
    			prost=1;
    		}
    		
    	}
    }
}
int main() {
	int A,B,suma=0,broj=0;
	
	/* Unos intervala */
	
	do{
		printf (""Unesite brojeve A i B: "");
	    scanf (""%d"",&A);
	    scanf (""%d"",&B);
	    if (A<1){
	    	printf (""A nije prirodan broj.\n"");
	    }
	    else if (A>=B){
	    	printf (""A nije manje od B.\n"");
	    }
		
	}while(A<1||A>=B || B<=0);
	
	/* Racunanje sume prostih brojeva u intervalu */ 
	
	while (broj<B){
		broj=daj_prost();
		if (broj>A&&broj<B){
			suma+=broj;
		}
	}
	
	/* Ispis sume */ 
	
	printf (""Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
	
	return 0;
}
","#include<stdio.h>
int daj_prost () {
	int prost=1, n;
	static int br=1;
	while (1) {
		br++;
		if (br==2){
			return br;
		} else {
			for (n=2;n<br;n++) {
				if (br%n==0){
					prost=0;
					break;
				}
			}
			if (prost) {
				return br;
			} else {
				prost=1;
			}
		}
	}
}

int main () {
	int X,Y,zbir=0,br=0;
	
	/*UNOS INTERVALA*/
	do {
		printf (""Unesite brojeve A i B: "");
		scanf (""%d%d"", &X, &Y);
		if (X<1) {
			printf (""A nije prirodan broj.\n"");
		} else if (X>=Y) {
			printf (""A nije manje od B.\n"");
		}
	} while (X<1 || X>=Y || Y<=0);
	while (br<Y) {
		br=daj_prost ();
		if (br>X && br<Y) {
			zbir+=br;
		}
	}
	
	/*ISPPIS SUME*/
	printf (""Suma prostih brojeva izmedju %d i %d je %d."", X, Y, zbir);
	return 0;
}"
2025,86,86,0,137,A2016/Z1/Z1/student5512,A2016/Z1/Z1/student9524,"#include <stdio.h>
int main() {
	double Tb, Bb, Mb, p1, p2, P, dz, zi, Bp1, Bp2, BP, Bdz, Bzi, Mp1, Mp2, MP, Mdz, Mzi;
	int oT, oB, oM;
	printf (""Unesite bodove za Tarika: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &p1);
	if (p1>20 || p1<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &p2);
	if (p2>20 || p2<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Prisustvo: "");
	scanf (""%lf"", &P);
	if (P>10 || P<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zadace: "");
	scanf (""%lf"", &dz);
	if (dz>10 || dz<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &zi);
	if (zi>40 || zi<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	Tb=p1+p2+P+dz+zi;
	
	printf (""Unesite bodove za Bojana: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &Bp1);
	if (Bp1>20 || Bp1<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &Bp2);
	if (Bp2>20 || Bp2<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Prisustvo: "");
	scanf (""%lf"", &BP);
	if (BP>10 || BP<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zadace: "");
	scanf (""%lf"", &Bdz);
	if (Bdz>10 || Bdz<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &Bzi);
	if (Bzi>40 || Bzi<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	Bb=Bp1+Bp2+BP+Bdz+Bzi;
	
	printf (""Unesite bodove za Mirzu: \n"");
		printf (""I parcijalni ispit: "");
	scanf (""%lf"", &Mp1);
	if (Mp1>20 || Mp1<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &Mp2);
	if (Mp2>20 || Mp2<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Prisustvo: "");
	scanf (""%lf"", &MP);
	if (MP>10 || MP<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zadace: "");
	scanf (""%lf"", &Mdz);
	if (Mdz>10 || Mdz<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &Mzi);
	if (Mzi>40 || Mzi<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	Mb=Mp1+Mp1+MP+Mdz+Mzi;
	
	if (Tb>=55 && Tb<65)
	oT=6;
	else if (Tb>=65 && Tb<75)
	oT=7;
	else if (Tb>=75 && Tb<85)
	oT=8;
	else if (Tb>=85 && Tb<92)
	oT=9;
	else if (Tb>=92 && Tb<=100)
	oT=10;
	else oT=0;
	if (Bb>=55 && Bb<65)
	oB=6;
	else if (Bb>=65 && Bb<75)
	oB=7;
	else if (Bb>=75 && Bb<85)
	oB=8;
	else if (Bb>=85 && Bb<92)
	oB=9;
	else if (Bb>=92 && Bb<=100)
	oB=10;
	else oB=0;
	if (Mb>=55 && Mb<65)
	oM=6;
	else if (Mb>=65 && Mb<75)
	oM=7;
	else if (Mb>=75 && Mb<85)
	oM=8;
	else if (Mb>=85 && Mb<92)
	oM=9;
	else if (Mb>=92 && Mb<=100)
	oM=10;
	else oM=0;
	if (oT<6 && oB<6 && oM<6)
    printf (""Nijedan student nije polozio."");
    if (Tb>=55 && Bb>=55 && Mb>=55){
    printf (""Sva tri studenta su polozila."");
    if (oT==oB && oB==oM )
    printf (""\nSva tri studenta imaju istu ocjenu."");
    else if (oT==oB || oB==oM || oM==oT)
    printf (""\nDva od tri studenta imaju istu ocjenu."");
    else
    printf (""\nSvaki student ima razlicitu ocjenu."");}
    if ((Tb>=55 && Bb>=55 && Mb<55) || (Tb<55 && Bb>=55 && Mb>=55) || (Tb>=55 && Bb<55 && Mb>=55))
    printf (""Dva studenta su polozila."");
    if ((Tb>=55 && Bb<55 && Mb<55) || (Tb<55 && Bb>=55 && Mb<55) || (Tb<55 && Bb<55 && Mb>=55))
    printf (""Jedan student je polozio."");
   
    return 0;
	
}","#include <stdio.h>
#include <math.h>

int main() {
	double IP, IIP, P, Z, ZI, IP1, IIP1, P1, Z1, ZI1, IIP2, Z2, ZI2, A, B, C, IP2, P2 ;


	printf(""Unesite bodove za Tarika: \n"");

	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &IP);
	if (IP<0 || IP>20) {
		printf (""Neispravan broj bodova"");
		return 0;
}

	printf(""II parcijalni ispit: \n"");
	scanf(""%lf"" , &IIP);
	if (IIP<0 || IIP>20) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}

	printf(""Prisustvo: \n"");
	scanf(""%lf"", &P);
	if (P<0 || P>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}

	printf(""Zadaca: \n"");
	scanf(""%lf"", &Z);
	if (Z<0 || Z>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Zavrsni ispit: \n"");
	scanf(""%lf"", &ZI);
	if (ZI<0 || ZI>40) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}

	printf(""Unesite bodove za Bojana: \n"");

	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &IP1);
	if (IP1<0 || IP1>20) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"" , &IIP1);
	if (IIP1<0 || IIP1>20) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Prisustvo: "");
	scanf(""%lf"", &P1);
	if (P1<0 || P1>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Zadaca: "");
	scanf(""lf"", &Z1);
	if (Z1<0 || Z1>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Zavrsni ispit: \n"");
	scanf(""lf"", &ZI1);
	if (ZI1<0 || ZI1>40) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Unesite bodove za Mirzu: \n"");

	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &IP2);
	if (IP2<0 || IP2>20) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"" , &IIP2);
	if (IIP2<0 || IIP2>20) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Prisustvo: "");
	scanf(""%lf"", &P2);
	if (P2<0 || P2>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Zadaca: "");
	scanf(""%lf"", &Z2);
	if (Z2<0 || Z2>10) {
		printf (""Neispravan broj bodova"");
		return 0 ;
}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &ZI2);
	if (ZI2<0 || ZI2>40) {
		printf (""Neispravan broj bodova"");
		return 0 ;}
		

	A==IP+IIP+P+Z;
	B==IP1+IIP1+P1+Z1;
	C==IP2+IIP2+P2+Z2;



	if (A<55 && B<55 && C<55) {
		printf(""Nijedan student nije polozio.\n"");
	} else if (A<55 && B<55 && C>=55 || A<55 && B>=55 && C<55 || A>=55 && B<55 && C<55 ) {
		printf(""Jedan student je polozio .\n"");
	} else if (A>=55 && B>=55 && C<55 || A<55 && B>=55 && C>=55 || A>=55 && B<55 && C>=55) {
		printf(""Dva studenta su polozila.\n"");
	} else if (A>=55 && B>=55 && C>=55) {
		printf(""Sva tri studenta su polozila.\n"");
	}
	


		if(A>=55&&A<65)
    	    A=6;
	else if(A>=65&&A<75)
    	     A=7;
	else if(A>=75&&A<85)
    	    A=8;
	else if(A>=85&&A<92)
    	     A=9;
	else if(A>=92&&A<=100)
    	    A=10;

    	if(B>=55&&B<65)
    	    B=6;
	else if(B>=65&&B<75)
    	     B=7;
	else if(B>=75&&B<85)
    	    B=8;
	else if(B>=85&&B<92)
    	     B=9;
	else if(B>=92&&A<=100)
    	    B=10;

    	if(C>=55&&C<65)
    	    C=6;
	else if(C>=65&&C<75)
    	    C=7;
	else if(C>=75&&C<85)
    	    C=8;
	else if(C>=85&&C<92)
    	    C=9;
	else if(C>=92&&C<=100)
    	    C=10;

			if(A==B&&B==C) {
          		printf(""Sva tri studenta imaju istu ocjenu."");
			}
			else if(A==B||A==C||B==C) {
          		printf(""Dva od tri studenta imaju istu ocjenu."");
			}
			else {
          		printf(""Svaki student ima razlicitu ocjenu."");
			}
	return 0;
}"
2026,99,99,0,104,A2016/Z4/Z4/student9163,A2016/Z4/Z4/student7193,"#include <stdio.h>

#define eps 0.0001

int da_li_je_broj(int broj) {
	return broj >= '0' && broj <= '9';
}

char* obuhvat (char* koordinate, double x1, double y1, double x2, double y2) {
	char* pom = koordinate, *pocetak, *kraj; 
	double x, y, predznakX, predznakY, decimala;
	int f;
	while (*koordinate != 0) {
		if (*koordinate == '(') {
			x = y = decimala = 0;
			predznakX = predznakY = 1;
			f = 10;
			
			koordinate++;
			if (*koordinate == '.' || *koordinate == ',' || *koordinate == '(') 
				return NULL;
			if (*koordinate == '-') {
				predznakX = -1;
				koordinate++;
			}
			while (da_li_je_broj(*koordinate)) {
				x *= 10;
				x += *koordinate - 48;
				koordinate++;
			}
			if (*koordinate == '.') {
				koordinate++;
				while (da_li_je_broj(*koordinate)) {
					decimala += (double)(*koordinate - 48)/f;
					f *= 10;
					koordinate++;
				}
			} else if (*koordinate != ',') return NULL;
			x += decimala;
			x *= predznakX;
			f = 10;
			decimala = 0;
			if (*koordinate == ',') { 
				koordinate++;
				if (*koordinate == '.' || *koordinate == ')') 
					return NULL; 
				if (*koordinate == '-') {
					predznakY = -1;
					koordinate++;
				}
				while (da_li_je_broj(*koordinate)) {
					y *= 10;
					y += *koordinate - 48;
					koordinate++;
				}
				if (*koordinate == '.') {
					koordinate++;
					while (da_li_je_broj(*koordinate)) {
						decimala += (double)(*koordinate - 48)/f;
						f /= 10;
						koordinate++;
					}
				}
				if (*koordinate != ')') 
					return NULL;
				y += decimala;
				y *= predznakY;
				koordinate++;
				if (*koordinate == ')' || (*koordinate == ',' && *(koordinate + 1) != '('))
					return NULL; 
			} else return NULL;
			if ((x < x1 || x > x2 || y < y1 || y > y2)) { 
				if (*koordinate == 0) {
					koordinate--;
					while (*(koordinate+1) != '(' && koordinate != pom)
						koordinate--;
					*koordinate = 0;
				} else {
					kraj = koordinate + 2;
					while (*(koordinate-1) != '(') 
						koordinate--;
					pocetak = koordinate;
					if (koordinate-1 == pom)
						koordinate--;
					else
						koordinate-=2;
					while (*kraj != '\0') {
						*pocetak = *kraj;
						pocetak++;
						kraj++;
					}
					*pocetak = 0;
				}
			}
		}
		else return NULL;
		if (koordinate != pom && *koordinate != 0) {
			koordinate++;
		}
	}
	return pom;
}

int main() {
	char koordinate[1000] =  ""(1.1,5.5),(1.2,5.5),(1.3,5.5),(1.4,5.5),(1.5,5.5)"";
	printf(""%s\n"", obuhvat(koordinate, 1.2, 5.499, 1.4, 5.501));
	
	return 0;
}
","#include <stdio.h>

#define eps 0.0001

int da_li_je_broj(int broj) {
	return broj >= '0' && broj <= '9';
}

char* obuhvat (char* koordinate, double x1, double y1, double x2, double y2) {
	char* pom = koordinate, *pocetak, *kraj; 
	double x, y, predznakX, predznakY, decimala;
	int f;
	while (*koordinate != 0) {
		if (*koordinate == '(') {
			x = y = decimala = 0;
			predznakX = predznakY = 1;
			f = 10;
			
			koordinate++;
			if (*koordinate == '.' || *koordinate == ',' || *koordinate == '(') 
				return NULL;
			if (*koordinate == '-') {
				predznakX = -1;
				koordinate++;
			}
			while (da_li_je_broj(*koordinate)) {
				x *= 10;
				x += *koordinate - 48;
				koordinate++;
			}
			if (*koordinate == '.') {
				koordinate++;
				while (da_li_je_broj(*koordinate)) {
					decimala += (double)(*koordinate - 48)/f;
					f *= 10;
					koordinate++;
				}
			} else if (*koordinate != ',') return NULL;
			x += decimala;
			x *= predznakX;
			f = 10;
			decimala = 0;
			if (*koordinate == ',') { 
				koordinate++;
				if (*koordinate == '.' || *koordinate == ')') 
					return NULL; 
				if (*koordinate == '-') {
					predznakY = -1;
					koordinate++;
				}
				while (da_li_je_broj(*koordinate)) {
					y *= 10;
					y += *koordinate - 48;
					koordinate++;
				}
				if (*koordinate == '.') {
					koordinate++;
					while (da_li_je_broj(*koordinate)) {
						decimala += (double)(*koordinate - 48)/f;
						f /= 10;
						koordinate++;
					}
				}
				if (*koordinate != ')') 
					return NULL;
				y += decimala;
				y *= predznakY;
				koordinate++;
				if (*koordinate == ')' || (*koordinate == ',' && *(koordinate + 1) != '('))
					return NULL; 
			} else return NULL;
			if ((x < x1 || x > x2 || y < y1 || y > y2)) { 
				if (*koordinate == 0) {
					koordinate--;
					while (*(koordinate+1) != '(' && koordinate != pom)
						koordinate--;
					*koordinate = 0;
				} else {
					kraj = koordinate + 2;
					while (*(koordinate-1) != '(') 
						koordinate--;
					pocetak = koordinate;
					if (koordinate-1 == pom)
						koordinate--;
					else
						koordinate-=2;
					while (*kraj != '\0') {
						*pocetak = *kraj;
						pocetak++;
						kraj++;
					}
					*pocetak = 0;
				}
			}
		}
		else return NULL;
		if (koordinate != pom && *koordinate != 0) {
			koordinate++;
		}
	}
	return pom;
}

int main() {
	char koordinate[1000] =  ""(1.1,5.5),(1.2,5.5),(1.3,5.5),(1.4,5.5),(1.5,5.5)"";
	printf(""%s\n"", obuhvat(koordinate, 1.2, 5.499, 1.4, 5.501));
	
	return 0;
}
"
2028,27,27,0,21,A2016/Z4/Z2/student8631,A2016/Z4/Z2/student2240,"#include <stdio.h>

void sortiraj(int *niz,int *sort,int *index)
{
	int i,j;
	int temp;
	
		for(i=0;i<127;i++)
		{
			for(j=i;j<127;j++)
			{
				if(niz[i]<niz[j])
				{
					temp=niz[i];
					niz[i]=niz[j];
					niz[j]=temp;
					
					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
				else if(niz[i]==niz[j] && index[i]>index[j])
				{
					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
			}
		}
}

void Pretvori(char *s,char *sifrarnik)
{
	char *p=s,*kljuc=sifrarnik;
	int br;
		while(*p!='\0')
		{	br=0;
			kljuc=sifrarnik;
			
			while(*kljuc!='\0')
			{
				if(*p==*kljuc++){*p=126-br;break;}
				br++;
			}
			p++;
		}
	
}


char *kodiraj(char *s,char *sifrarnik)
{
	
	char *p=s,*pok=sifrarnik;
	int i;
	int niz[127];
	int sort[127];
	int index[127];
	
		for(i=0;i<127;i++)
		{
			if(i<32){ niz[i]=-1; index[i]=-1;}
			else{niz[i]=0;index[i]=i;}
		}
		while(*p!='\0')
		{
			niz[*p+0]++;
			p++;
		}
		
		for(i=0;i<127;i++)
			sort[i]=niz[i];
			
		sortiraj(niz,sort,index);
		
		for(i=0;i<127;i++)
		{   
			if(index[i]!=-1)
			{
				*pok=index[i];
				pok++;
			}
		}
		Pretvori(s,sifrarnik);
	return s;
}

char* dekodiraj(char *s,char *sifrarnik)
{
	
	char *p=s;
	
		while(*p!='\0')
		{
			*p=sifrarnik[126-*p];
			p++;
		}
	return s;
	
}

int main() {
	char tekst[] = ""U ovom testu cemo testirati samo kodiranje"";
    char sifrarnik[100] = """";
    kodiraj(tekst, sifrarnik);
    printf(""%s\n"", tekst);
    printf(""%s\n"", sifrarnik);
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

void unesi(char niz[], int velicina)
{
    char znak=getchar();
    int i=0;
    
    if(znak=='\n') znak=getchar();
    while(i<velicina-1 && znak!='\n')
    {
        niz[i]=znak;
        i++;
        znak=getchar();
    }
    niz[i]='\0';
}

char* kodiraj(char* text, char* tablica)
{
    int ucestalost[96];
    int i=0, j=0, tmp_int;
    char tmp_char, *pocetak=text;
    
    for(i=0; i<95; i++)
    {
        ucestalost[i]=0;
        tablica[i] = i+32;
    }
    tablica[95] = '\0';
    while(*text!='\0')
    {
        for(i=0; i<95; i++)
        {
            if(*text==tablica[i])
            {
                ucestalost[i]++;
                break;
            }
        }
        text++;
    }
    for(i=0; i<94; i++)
    {
        for(j=i; j<95; j++)
        {
            if(ucestalost[i]<ucestalost[j])
            {
                tmp_int=ucestalost[i];
                ucestalost[i]=ucestalost[j];
                ucestalost[j]=tmp_int;
                
                tmp_char=tablica[i];
                tablica[i]=tablica[j];
                tablica[j]=tmp_char;
            }
            else if(ucestalost[i]==ucestalost[j])
            {
                if(tablica[i]>tablica[j])
                {
                    tmp_char=tablica[i];
                    tablica[i]=tablica[j];
                    tablica[j]=tmp_char;
                }
            }
        }
    }
    text=pocetak;
    while(*text != '\0')
    {
        for(i=0; i<95; i++)
        if(tablica[i]==*text)
            tmp_int=i;
        
        *text=126-tmp_int;
        text++;
    }
    text=pocetak;
    return text;
}
char* dekodiraj(char* text, char* tablica)
{
    int tmp_int;
    char* pocetak=text;
    
    while(*text != '\0')
    {
        tmp_int=126-*text;
        *text=tablica[tmp_int];
        text++;
    }
    text=pocetak;
    return text;
}
int main ()
{
    char str[1000];
    char tablica[96];
    int i;
    
    unesi(str, 1000);
    
    kodiraj(str, tablica);
    
    i=0;
    while(str[i]!='\0')
    {
        printf(""%c"", str[i]);
        i++;
    }
    dekodiraj(str, tablica);
    printf(""\n"");
    i=0;
    while(str[i]!='\0')
    {
        printf(""%c"", str[i]);
        i++;
    }
    return 0;
}"
2031,90,90,0,58,A2016/Z3/Z3/student7697,A2016/Z3/Z3/student9923,"#include <stdio.h>

int main() {
	
	int matrica[200][200], M, N;
	int i,j,k,z, jednaki;
	
	do{
	printf(""Unesite brojeve M i N: "");
	scanf(""%d %d"", &M, &N);
	if(M<1 || M>200 || N<1 || N>200)
		printf(""Brojevi nisu u trazenom opsegu.\n"");
	} while(M<1 || M>200 || N<1 || N>200);
	
	printf(""Unesite elemente matrice: "");
	
	for(i=0; i<M; i++) {
		for(j=0; j<N; j++)
			scanf(""%d"", &matrica[i][j]);
		
	}
	
	for(i=0; i<M; i++) {
		for(j=i+1; j<M; j++) {
			jednaki=1;
			for(k=0; k<N; k++) {
				if(matrica[i][k]!=matrica[j][k]) {
					jednaki=0;
					break;
				}
				
			}
			if(jednaki) {
				for(z=j; z<M-1; z++) {
					for(k=0; k<N; k++)
						matrica[z][k]=matrica[z+1][k];
				}
				M--;
				j--;
			}
			
		}
	}
	
	for(i=0; i<N; i++) {
		for(j=i+1; j<N; j++) {
			jednaki=1;
			for(k=0; k<M; k++) {
				if(matrica[k][i]!=matrica[k][j]) {
					jednaki=0;
					break;
				}
				
			}
			if(jednaki) {
				for(z=j; z<N-1; z++) {
					for(k=0; k<M; k++)
						matrica[k][z]=matrica[k][z+1];
				}
				N--;
				j--;
			}
			
		}
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0; i<M; i++) {
		for(j=0; j<N; j++) 
			printf(""%5d"", matrica[i][j]);
		printf(""\n"");
	}
	
return 0;
}
","#include <stdio.h>

int main() {
	int niz[200][200];
	int i,j,m,n,k,p,q,pret;
	 do {
	printf(""\nUnesite brojeve M i N: "");
	scanf(""%d %d"", &m, &n);
	if((m>200 || n>200 || m<1 || n<1))
	printf(""Brojevi nisu u trazenom opsegu."");
	} while(m<1 || m>200 || n<1 || n>200); 
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
	 for(j=0;j<n;j++){
	 	scanf(""%d"", &niz[i][j]);
	 }
	 }
	for(i=0;i<m;i++)
	{
		for(j=i+1;j<m;j++)
		{
			pret=1;
			for(k=0;k<n;k++)
			if(niz[i][k]!=niz[j][k])
			      pret=0;
			if(pret==1)
			{
				for(p=j;p<m-1;p++)
				  for(q=0;q<n;q++)
				    niz[p][q]=niz[p+1][q];
				m--;
				j--;
			}
		}
	}

for(i=0;i<n;i++)
 {
	for(j=i+1;j<n;j++)
	{
		pret=1;
		for(k=0;k<m;k++)
		if(niz[k][i] != niz[k][j])
		pret=0;
		if(pret==1)
		{
			for(p=j;p<n-1;p++) 
			for(q=0;q<m;q++) 
			niz[q][p]=niz[q][p+1];
			n--;
			j--; 
			
		}
	}
}
printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
for(i=0;i<m;i++){
	for(j=0;j<n;j++)
	{
		printf(""%5d"", niz[i][j]);
	}
	printf(""\n"");
}


	return 0;
}
"
2041,98,98,0,36,A2016/Z2/Z3/student2142,A2016/Z2/Z3/student5961,"#include <stdio.h>

int main() {
	int niz1[100], niz2[100], i, j, n, k=0, brojac=0;
	//Unos broja tacaka
	do{
		printf(""Unesite broj tacaka: "");
	    scanf(""%d"", &n);
	    if(n<1 || n>10) printf(""Pogresan unos\n"");
	}while(n<1 || n>10);
	i=0;
	//Unos tacaka preko dva niza kao x y koordinatne tacke
	do{
	    printf(""Unesite %d. tacku: "", i+1);
	    scanf(""%d %d"", &niz1[i], &niz2[i]);
	    if(niz1[i]<0 || niz1[i]>=20 || niz2[i]<0 || niz2[i]>=20){
	        printf(""Pogresan unos\n"");
	        i--;
	    }
	    i++;
	}while(i<n);
	//provjeravanje tacaka
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			//provjera svake tacke posebno
			for(k=0; k<n; k++){
                if(niz1[k]==j && niz2[k]==i){
                    brojac++;
                    break;
                }
            }
			if(brojac>0) printf(""*"");
			else printf("" "");
			brojac=0;
		}
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int niz1[100], niz2[100], i, j, n, k=0, brojac=0;
	//Unos broja tacaka
	do{
		printf(""Unesite broj tacaka: "");
	    scanf(""%d"", &n);
	    if(n<1 || n>10) printf(""Pogresan unos\n"");
	}while(n<1 || n>10);
	i=0;
	//Unos tacaka preko dva niza kao x y koordinatne tacke
	do{
	    printf(""Unesite %d. tacku: "", i+1);
	    scanf(""%d %d"", &niz1[i], &niz2[i]);
	    if(niz1[i]<0 || niz1[i]>=20 || niz2[i]<0 || niz2[i]>=20){
	        printf(""Pogresan unos\n"");
	        i--;
	    }
	    i++;
	}while(i<n);
	//provjeravanje tacaka
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			//provjera svake tacke posebno
			for(k=0; k<n; k++){
                if(niz1[k]==j && niz2[k]==i){
                    brojac++;
                    break;
                }
            }
			if(brojac>0) printf(""*"");
			else printf("" "");
			brojac=0;
		}
		printf(""\n"");
	}
	return 0;
}
"
2045,99,99,0,89,A2016/Z1/Z3/student7232,A2016/Z1/Z3/student2086,"#include <stdio.h>

int main()
{
    int C,B,S,V,P,br;
    float maksimal, postotak;
    char x;
    br=0;
    C=B=S=V=P=0;
    
    printf(""Unesite vozila: "");
    do{
        scanf(""%c"", &x);
        if(x=='C'||x=='c')
        {
            C+=1;
        }
        else if(x=='B'||x=='b')
        {
            B+=1;
        }
        else if(x=='S'||x=='s')
        {
            S+=1;
        }
        else if(x=='V'||x=='v')
        {
            V+=1;
        }
        else if(x=='P'||x=='p')
        {
            P+=1;
        }
        else if(x=='\n'||x=='K'||x=='k')
        {
        }
        else
        {
            printf(""Neispravan unos\n"");
        }
    }while(x!='K'&&x!='k');
    
    br=C+B+S+V+P;
    printf(""Ukupno evidentirano %d vozila.\n"", br);
    if(br==0)
    {
        printf(""Najpopularnija boja je crna (0.00%%)."");
        return 0;
    }
    maksimal=C;
    if(B>maksimal)
    {
        maksimal=B;
    }
    if(S>maksimal)
    {
        maksimal=S;
    }
     if(V>maksimal)
    {
        maksimal=V;
    }
    if(P>maksimal)
    {
        maksimal=P;
    }
    
    postotak=maksimal/br*100;
    
    if(C==maksimal)
    {
        printf(""Najpopularnija boja je crna (%.2f%%)."",postotak);
        return 0;
    }
    else if (B==maksimal)
    {
        printf(""Najpopularnija boja je bijela (%.2f%%)."",postotak);
    }
    else if (S==maksimal)
    {
        printf(""Najpopularnija boja je siva (%.2f%%)."",postotak);
    }
    else if (V==maksimal)
    {
        printf(""Najpopularnija boja je crvena (%.2f%%)."",postotak);
    }
    else
    {
        printf(""Najpopularnija boja je plava (%.2f%%)."",postotak);
    }
    return 0;
}","#include <stdio.h>

int main()
{
    int C,B,S,V,P,br;
    float maksimal, postotak;
    char x;
    br=0;
    C=B=S=V=P=0;
    
    printf(""Unesite vozila: "");
    do{
        scanf(""%c"", &x);
        if(x=='C'||x=='c')
        {
            C+=1;
        }
        else if(x=='B'||x=='b')
        {
            B+=1;
        }
        else if(x=='S'||x=='s')
        {
            S+=1;
        }
        else if(x=='V'||x=='v')
        {
            V+=1;
        }
        else if(x=='P'||x=='p')
        {
            P+=1;
        }
        else if(x=='\n'||x=='K'||x=='k')
        {
        }
        else
        {
            printf(""Neispravan unos\n"");
        }
    }while(x!='K'&&x!='k');
    
    br=C+B+S+V+P;
    printf(""Ukupno evidentirano %d vozila.\n"", br);
    if(br==0)
    {
        printf(""Najpopularnija boja je crna (0.00%%)."");
        return 0;
    }
    maksimal=C;
    if(B>maksimal)
    {
        maksimal=B;
    }
    if(S>maksimal)
    {
        maksimal=S;
    }
     if(V>maksimal)
    {
        maksimal=V;
    }
    if(P>maksimal)
    {
        maksimal=P;
    }
    
    postotak=maksimal/br*100;
    
    if(C==maksimal)
    {
        printf(""Najpopularnija boja je crna (%.2f%%)."",postotak);
        return 0;
    }
    else if (B==maksimal)
    {
        printf(""Najpopularnija boja je bijela (%.2f%%)."",postotak);
    }
    else if (S==maksimal)
    {
        printf(""Najpopularnija boja je siva (%.2f%%)."",postotak);
    }
    else if (V==maksimal)
    {
        printf(""Najpopularnija boja je crvena (%.2f%%)."",postotak);
    }
    else
    {
        printf(""Najpopularnija boja je plava (%.2f%%)."",postotak);
    }
    return 0;
}"
2053,31,31,0,78,A2016/Z5/Z3/student9972,A2016/Z5/Z3/student6548,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};
char unesi(char niz[],int velicina) {
	char znak=getchar();
	int i=0;
	while(znak=='\n')
	znak=getchar();
	while(i< velicina-1 && znak !='\n' ) {
		niz[i++] = znak;
		znak = getchar();
	}
niz[i]='\0';
return znak; }
void ocisti(char znak){
	int ima=0;
	while(znak!='\n')
	znak=getchar(); }
int ucitaj_datoteku(struct Cas raspored[]){
FILE* dat=fopen(""raspored.dat"",""rb"");
if(dat == NULL) return 0;
int ucitanih=fread(raspored,sizeof(struct Cas),KAPACITET,dat);
fclose(dat);
return ucitanih; }
void ispisreda(){
printf(""\n       PON       UTO       SRI"");
printf(""       CET       PET       SUB"");
printf(""\n""); }
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	ispisreda();
	for(i=0;i<broj_casova;i++){
		if(raspored[i].pocetak.sati<min)
		min=raspored[i].pocetak.sati;}
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max ){
			max=raspored[i].kraj.sati;
			indexmaxa=i;
}} if(raspored[indexmaxa].kraj.minute==0) max=max-1;

int x;
int s,dan,n;

for(i=min;i<=max;i++){
	if(i<10) printf(""9:00   "");
	else printf(""%d:00  "",i);
	for(j=1;j<7;j++){
		for(k=0;k<broj_casova;k++){
			s=raspored[k].pocetak.sati;
			dan=raspored[k].dan_u_sedmici;
			n=raspored[k].kraj.sati;
			if(s<=i && dan==j && n>=i) {
				printf(""%-10s"",raspored[k].predmet);
				break;
			}}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");}
			printf(""\n""); }}
			
			void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
				int i;
				printf(""Uneseni su casovi: "");
				int k=1;
				
			for(i=0;i<broj_casova;i++){
				if(raspored[i].dan_u_sedmici==dan){
					printf(""\n%d) %s ("",k++,raspored[i].predmet);
					if(raspored[i].pocetak.sati<10) printf(""0"");
					printf(""%d:"",raspored[i].pocetak.sati);
					if (raspored[i].pocetak.minute<10) printf(""0"");
					printf(""%d-"",raspored[i].pocetak.minute);
					printf(""%02d:%02d)"",raspored[i].kraj.sati,raspored[i].kraj.minute);
				}
			}}
			int zapisi_datoteku(struct Cas raspored[], int broj_casova){
				FILE* dat = fopen(""raspored.dat"", ""wb"");
				int ucitano=fwrite(raspored, sizeof(struct Cas), broj_casova, dat);
				fclose(dat);
				if(ucitano>0) return 1;
				return ucitano; }
				void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
					int i; int k=0; int j, brojac=1;
					for(i=0;i<broj_casova;i++){
					if(raspored[i].dan_u_sedmici==dan){ k++; brojac++;
					if(k==redni_broj){
						
						for(j=i;j<broj_casova-1;j++)
						raspored[j]=raspored[j+1];
						
						if(brojac>0)break; } }}}
						int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){
							int i;
						int minpoc1,minpoc2,minkraj1,minkraj2;
						for(i=0;i<broj_casova;i++) {
							minpoc1=raspored[i].pocetak.minute+raspored[i].pocetak.sati*60;
							minkraj1=raspored[i].kraj.minute+raspored[i].kraj.sati*60;
							minpoc2=cas.pocetak.minute+cas.pocetak.sati*60;
							minkraj2=cas.kraj.minute+cas.kraj.sati*60;
						if (raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<minpoc2 && minkraj1>minpoc2 || minpoc2<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 && cas.kraj.minute+cas.kraj.sati*60>minkraj1 || raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 && minkraj1>cas.kraj.minute+cas.kraj.sati*60))
						return 1;
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (minpoc2==minpoc1 || minkraj1==minkraj2))
						return 1; 
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&(minpoc1<minpoc2 && minkraj1>minpoc2 || minpoc2<minpoc1 && minkraj2>minkraj1 || minpoc1<minkraj2 && minkraj1>minkraj2))
						return 1; }
						return 0;}
						int dodaj_cas(struct Cas raspored[], int broj_casova, const char*predmet, int trajanje){
							if (broj_casova==200) return 0;
							int i,j,preklop;
							for(i=0; i<6; i++)
								for(j=9; j<=19-trajanje; j++){
									struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
									char *q=cas.predmet,*p=(char*)predmet;
									struct Cas cc;
									while(*q++=*p++);
									preklop=preklapanje(raspored,broj_casova,cas);
									if(preklop==0){
										raspored[broj_casova]=cas;
										return 1;
									} if(preklop==1) continue; }
									return 0; }
									void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
								int i,redni=0;
								for(i=0;i<broj_casova; i++){
									if(raspored[i].dan_u_sedmici==dan) redni++;
									if(redni_broj==redni)
									raspored[i]=promjena; }}
								int main () {
									int opcija,broj_casova=0;
									struct Cas raspored[KAPACITET];
									ucitaj_datoteku(raspored);
									do{
										printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
										scanf(""%d"",&opcija);
										int broj=opcija;
										switch(opcija){
											case 0: {
												zapisi_datoteku(raspored,broj_casova);
												break;
											} case 1:{
												if(broj!=0)   ispis_rasporeda(raspored,broj_casova);
												break;}
												case 2:  if(broj!=0)
											{
								
												int br_casova,dodan=0;
												char  predmet[10];
												printf(""Unesite naziv predmeta: Unesite broj casova: "");
												if(broj!=0)   ocisti(unesi(predmet,10));
												scanf(""%d"",&br_casova);
												dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
												int vr=dodan;
											if(vr==0)
											printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
											if(vr==1)  broj_casova++;
											
											break;}
											case 4: if(broj!=0)
											{
												int dan,redni;
												int br=broj_casova;
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,br,dan);
												printf(""\nIzaberite koji cas zelite obrisati: "");
											    scanf(""%d"",&redni);
											    obrisi_cas(raspored,br,dan,redni);
											    printf("" Cas obrisan\n"");
											    broj_casova--;
											}
											case 3:  if(broj!=0){
												struct Cas promjena;
												int dan,redni;
												char *q,*p;
												char znak,predmet[10];
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,broj_casova,dan);
												promjena.dan_u_sedmici=dan;
												printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
												scanf(""%d"",&redni);
												ocisti(unesi(predmet,10));
												q=promjena.predmet;
												p=predmet;
												strcpy(q,p);
												printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
												scanf(""%d%c"",&promjena.pocetak.sati,&znak);
												scanf(""%d"",&promjena.pocetak.minute);
												scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
												promijeni_cas(raspored,broj_casova,dan,redni,promjena);
												break;}
										} 
										
									} while(opcija!=0);
									    
									    
									    	return 0; 
									
								}
									
											
							
						
					
					
			
	


","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme{
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

char unesi(char niz[], int velicina){
	char znak=getchar();
	int vel=velicina;
		int i = 0, k=0;
	if (znak== '\n')
		znak = getchar();
	while (i<vel && znak !='\n'){
		niz[i] = znak;
		i++;k++;
		znak=getchar();
	}
	niz[i]='\0';
	return znak;
}

void cln(char znak){
	while(znak!='\n')
		znak=getchar();
		
}

int ucitaj_datoteku(struct Cas raspored[]){
	FILE* dat = fopen(""raspored.dat"", ""rb"");
	if(dat==NULL) return 0;
	int ucitanih=fread(raspored,sizeof(struct Cas), KAPACITET,dat);
	fclose(dat);
	return ucitanih;
}
void isp(int vel){
	int x;
	int veli=vel/2;
	for(x=0;x<veli;x++)
		printf(""  "");
		
}
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	
	for (i=0;i<broj_casova;i++){
		if(raspored [i].pocetak.sati<min)
			min=raspored[i].pocetak.sati;
	} 
	printf(""\n       PON       UTO       SRI""); //RAZMAK=7mjesta
	printf(""       CET       "");
	printf(""PET       SUB\n"");
	
int mintt=0;
int indexpamtimo;
for (i=0; i<broj_casova;i++){
	if (raspored[i].kraj.sati>max){
		max=raspored[i].kraj.sati;
		mintt=raspored[i].kraj.minute;
		indexpamtimo=1;
	}
}

int x;
int s,dan,n;
if(mintt==0) max=max-1;
int poc=min;
int kraj=max;
int ukupno=broj_casova;
	for(i=poc;i<=kraj;i++){
		if(i<10) printf(""%d:00   "",i); //4mjesta
	else printf(""%02d:00  "",i);
		for(j=1;j<7;j++){
			
			for(k=0;k<ukupno;k++){
				if(max>0){
					dan=raspored[k].dan_u_sedmici;
					n=raspored[k].kraj.sati;
				if (raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j && n>=i){
						printf(""%-10s"",raspored[k].predmet);
						break;
					}}}
					if(k==ukupno && ukupno>-1)
					isp(10);
		}
	printf(""\n"");
}
}

void pomispis(int k, char*s,int sat, int min, int sat1, int min1){
	printf(""\n%d) %s ("",k++,s);
	printf(""%02d:%02d-"",sat,min);
	printf(""%02d:%02d)"",sat1,min1);
}
void ispisi_dan(struct Cas raspored[], int broj_casova,int dan){
	int i,k=1;
		printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			int pocs=raspored[i].pocetak.sati;
			int pocm=raspored[i].pocetak.minute;
			int krajs=raspored[i].kraj.sati;
			int krajm=raspored[i].kraj.minute;
		pomispis(k++,raspored[i].predmet,pocs,pocm,krajs,krajm);
		
		}
	}
}


	
int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	FILE *ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL || ulaz1==NULL)
		return 0;
	int nova=fwrite(raspored, sizeof (struct Cas), broj_casova,ulaz);
	int zapisano=fwrite(raspored,sizeof(struct Cas), broj_casova,ulaz1);
	if(nova!=zapisano) return 0;
	fclose(ulaz);
	fclose(ulaz1);
	if (nova>0) return 1;
	else
		return 0;
}


void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,k=0,j;
	int bezzadnjeg=broj_casova-1;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			k++;
			if(k==redni_broj){
				for(j=i;j<bezzadnjeg;j++)
				raspored[j]=raspored[j+1];
				return;
			break;
			}
		}}}
int poredba(int p, int d){
	if (p > d) return 1;
	if (p < d) return -1;
	if (p == d) return 0;
}
int Poredi(struct Vrijeme t1, struct Vrijeme t2, int vel)
{
		int vr = t1.sati*vel*vel + t1.minute*vel + t1.sekunde, vr2 = t2.sati*vel*vel + t2.minute*vel + t2.sekunde;
		return poredba(vr,vr2);
		
}
int preklapanje (struct Cas raspored[],int broj_casova, struct Cas cas)
{
	
	int ima = 0;
	int i,prvi;
	for (i = 0; i < broj_casova; i++) {
		prvi=Poredi(raspored[i].kraj,cas.pocetak,60);
		if(prvi == 1 && Poredi(cas.kraj, raspored[i].pocetak,60)==1 && (cas.dan_u_sedmici==raspored[i].dan_u_sedmici))
		ima=1;
		break;
	}


return ima;
}


int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje){
	if(broj_casova==200) return 0;
	int i,j,preklop;
	int ukupno=19-trajanje;
	for (i=0; i<6; i++){
		for(j=9; j<=ukupno; j++){
			struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
			char *q=cas.predmet,*p=(char*) predmet;
			struct Cas cc;
			while (*q++=*p++);
			preklop=preklapanje(raspored,broj_casova,cas);
			if(preklop==1) continue;
			else{
				raspored[broj_casova]=cas;
				goto jedan;
			}
		}
	}
	
	return 0;
	jedan:
	return 1;
}


void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj,struct Cas promjena){
	int i, redni=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
			raspored[i]=promjena;
	}
}
void mjesto(int br){
	printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br);
}


int main() {
	int opcija, broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do{
		printf(""1) Ispis rasporeda\n"");
		printf(""2) Dodavanje casa\n3) Promjena casa\n"");
		printf(""4) Brisanje casa\n0) Kraj rada\n"");
		printf(""Izaberite opciju: "");
		scanf(""%d"",&opcija);
		
			if (opcija!=4 && opcija!=3 && opcija!=0 && opcija!=1){
				int br_casova,dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				cln(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				int vr=dodan;
				if(vr==0)
				mjesto(br_casova);
				if(vr==1)
				broj_casova++;
			}
			if (opcija!=0 && opcija!=3 && opcija!=2 && opcija!=1){
				int dan, redni;
				printf(""Unesite dan "");
				printf(""1=ponedjeljak, 2=utorak...,6=subota: "");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				printf(""\nIzaberite koji cas zelite obrisati: "");
				scanf(""%d"",&redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
					broj_casova--;
				printf(""Cas obrisan\n"");
			}
			if(opcija==0)
				zapisi_datoteku(raspored,broj_casova);
			if(opcija!=4 && opcija!=3 && opcija!=2 && opcija!=0);
				ispis_rasporeda(raspored,broj_casova);
			if(opcija!=4 && opcija!=0 && opcija!=2 && opcija!=1){
				struct Cas promjena;
				int dan,redni;
				char znak,predmet[10];
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota):"");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				promjena.dan_u_sedmici=dan;
				printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
				scanf(""%d"",&redni);
				cln(unesi(predmet,10));
				char *q=promjena.predmet;
				char *p=predmet;
				while(*q++=*p++);
				int prvi=broj_casova;
				int drugi=dan;
				int treci=redni;
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c"",&promjena.pocetak.sati,&znak);
				scanf(""%d"",&promjena.pocetak.minute);
				scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				promijeni_cas(raspored,prvi,drugi,redni,promjena);
			}
		
	} while(opcija!=0);
	return 0;
}"
2060,98,98,0,134,A2016/Z3/Z2/student3900,A2016/Z3/Z2/student7802,"#include <stdio.h>
#include <stdlib.h>

int sum(int p){

    int suma=0,broj,zadnji_broj;
    broj=p;


    if(broj==0){
        suma=0;
    }else{
        if (broj<0) broj=abs(broj);
        while(broj!=0){
        
        zadnji_broj = (broj)%10; 
        suma = suma + zadnji_broj;
        broj=(broj)/10;
        }
    }
return suma;
}

int fibonacci(int a) {
    int prvi=0,drugi=1,sljedeci,i;
    for(i=0;i<a;i++) {
       
        sljedeci=prvi+drugi;
        prvi=drugi;
        drugi=sljedeci;
    if(sljedeci==a) {
        return 1;
    }  
    }
    return 0;
 
}

void ubaci (int* p, int n) {
	int *pok,*q,*zadnji,*reset=p;
    int i;
    
    pok=p;
    
    /* pok postavimo na vrijednost 10-og clana u nizu */
    pok=p+n-1;
    
    /* zadnji na zadnje mjesto koje smo rezervisali u memoriji za ovaj niz */
    zadnji=p+2*n-2;
    
    /* upisujemo na svkao drugo mjesto od kraja prema pocetku vrijednosti koje smo unjeli */
    for(i=0;i<n;i++){
        
        *zadnji=*pok;
        zadnji=zadnji-2;
        pok--;
    }
    
    pok=p;
    q=p;
    
    /* sad na neparna mjesta upisujemo brojeve koje smo dobili iz funkcije suma koja sumira vrijednosti svake cifre broja*/
    
    for(i=0;i<2*n;i++){ 
        q=pok-1;
        if(i%2!=0) *pok=sum(*q);
        pok++;
        }
        
}

int izbaci (int *p,int velicina) {
int i,j,niz[20],*q=p;
 
/*upisujem niz koji sam dobio iz funkcije ubaci kako bi radio sa njim u ovoj funkciji*/
 
for(i=0;i<velicina;i++) {
    niz[i]=*p;
    p++;
   
}
 
    for(i=0;i<velicina;i++) {
        
    /*svaki clan niza ove funkcije saljemo da provjerimo da li je on fibonacijev broj*/
        
    if(fibonacci(niz[i])==1) {
    
    /*ako jest izbacimo ga iz niza*/
        for(j=i;j<velicina-1;j++) {
            niz[j]=niz[j+1];
        }
        velicina--;
        i--;
 
        }
    }
    
    /*vratimo pokazivac na pocetak niza i upisemo ga u njegovu adresu na koju pokazuje p*/
    p=q;
    for(i=0;i<velicina;i++) {
        *p=niz[i];
        p++;
        
    }
   
    return velicina;
   
}


int main(){
    int k,n=10,niz[20],i;
    printf(""Unesite niz od 10 brojeva: "");
    for(i=0;i<10;i++){
        
        scanf(""%d"", &niz[i]);
        
    }

    
    ubaci(niz,n);
    k=izbaci(niz,2*n);
    
    if(k==0){
        
        printf(""Prazan niz"");
        return 0;
        
    }
    
    printf(""Modificirani niz glasi: "");
    for(i=0;i<k;i++){
        if(i==k-1) 
            printf(""%d."", niz[i]);
        else
            printf(""%d, "", niz[i]);
        
    }
 return 0;
 }","#include <stdio.h>
#include <stdlib.h>

int sum(int p){

    int suma=0,broj,zadnji_broj;
    broj=p;


    if(broj==0){
        suma=0;
    }else{
        if (broj<0) broj=abs(broj);
        while(broj!=0){
        
        zadnji_broj = (broj)%10; 
        suma = suma + zadnji_broj;
        broj=(broj)/10;
        }
    }
return suma;
}

int fibonacci(int a) {
    int prvi=0,drugi=1,sljedeci,i;
    for(i=0;i<a;i++) {
       
        sljedeci=prvi+drugi;
        prvi=drugi;
        drugi=sljedeci;
    if(sljedeci==a) {
        return 1;
    }  
    }
    return 0;
 
}

void ubaci (int* p, int n) {
	int *pok,*q,*zadnji,*reset=p;
    int i;
    
    pok=p;
    
    /* pok postavimo na vrijednost 10-og clana u nizu */
    pok=p+n-1;
    
    /* zadnji na zadnje mjesto koje smo rezervisali u memoriji za ovaj niz */
    zadnji=p+2*n-2;
    
    /* upisujemo na svkao drugo mjesto od kraja prema pocetku vrijednosti koje smo unjeli */
    for(i=0;i<n;i++){
        
        *zadnji=*pok;
        zadnji=zadnji-2;
        pok--;
    }
    
    pok=p;
    q=p;
    
    /* sad na neparna mjesta upisujemo brojeve koje smo dobili iz funkcije suma koja sumira vrijednosti svake cifre broja*/
    
    for(i=0;i<2*n;i++){ 
        q=pok-1;
        if(i%2!=0) *pok=sum(*q);
        pok++;
        }
        
}

int izbaci (int *p,int velicina) {
int i,j,niz[20],*q=p;
 
/*upisujem niz koji sam dobio iz funkcije ubaci kako bi radio sa njim u ovoj funkciji*/
 
for(i=0;i<velicina;i++) {
    niz[i]=*p;
    p++;
   
}
 
    for(i=0;i<velicina;i++) {
        
    /*svaki clan niza ove funkcije saljemo da provjerimo da li je on fibonacijev broj*/
        
    if(fibonacci(niz[i])==1) {
    
    /*ako jest izbacimo ga iz niza*/
        for(j=i;j<velicina-1;j++) {
            niz[j]=niz[j+1];
        }
        velicina--;
        i--;
 
        }
    }
    
    /*vratimo pokazivac na pocetak niza i upisemo ga u njegovu adresu na koju pokazuje p*/
    p=q;
    for(i=0;i<velicina;i++) {
        *p=niz[i];
        p++;
        
    }
   
    return velicina;
   
}


int main(){
    int k,n=10,niz[20],i;
    printf(""Unesite niz od 10 brojeva: "");
    for(i=0;i<10;i++){
        
        scanf(""%d"", &niz[i]);
        
    }

    
    ubaci(niz,n);
    k=izbaci(niz,2*n);
    
    if(k==0){
        
        printf(""Prazan niz"");
        return 0;
        
    }
    
    printf(""Modificirani niz glasi: "");
    for(i=0;i<k;i++){
        if(i==k-1) 
            printf(""%d."", niz[i]);
        else
            printf(""%d, "", niz[i]);
        
    }
 return 0;
 }"
2064,61,61,0,68,A2016/Z3/Z2/student8797,A2016/Z3/Z2/student4495,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

/*funkcija koja ubacuje clanove koji predstavljaju zbir cifara u niz*/

void ubaci (int* p, int duzina){
	int* pomp=p;
	int* pomp2;
	int clan=0;
	int k=0;
	int broj;

	while(pomp<p+2*duzina){
		broj=abs(*pomp);
		while(broj){
			clan=clan+broj%10;
			broj= broj/10;
		}
	
		for(pomp2=p+(duzina+k); pomp2>pomp; pomp2--){
			*pomp2=*(pomp2-1);
		}
		k++;
		pomp++;
		*pomp=clan;
		clan=0;
		pomp++;	
	}
}	
/*funkcija koja vraca 1 ako je fibbonacijaev broj*/

int fibonaccijeve(int broj){
	
	int niz[1000];
	niz[0]=1;
	niz[1]=1;
	
	if(broj==1) 
		return 1;
	
	int*pomp1=niz;
	int*pomp2=niz+1;
	int*pomp3=niz+2;
	
	while(1){
		*pomp3=*pomp2+*pomp1;
		if(*pomp3==broj)
			return 1;
		if(*pomp3>broj){
			return 0;
		}
		pomp1++;
		pomp2++;
		pomp3++;
	}
}

/*funkcija koja izbacuje clan niza ako je taj clan fibbonacijev broj*/

int izbaci(int*p, int duzina){
	int*pomp=p;
	int*pomp2;
	int broj;
	
	while(pomp<p+duzina){
		
		broj=*pomp;
        broj=fibonaccijeve(broj);
        if(broj==1){
        	for(pomp2=pomp; pomp2<p+duzina-1; pomp2++){
        		*pomp2=*(pomp2+1);
         }
        	duzina--;
        	pomp--;
    	 }
			pomp++;	
	}
	
	return duzina;	
}

int main() {
	
	int i,n; 
	int niz[100];
	
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<10; i++)
		scanf(""%d"", &niz[i]);
	
	ubaci(niz, 10);
	n=izbaci(niz, 20);
	
/* ispis modificiranog niza */

	printf(""Modificirani niz glasi: "");
	for(i=0; i<n; i++){
		if(i==n-1)
			printf(""%d."", niz[i]);
		else 
			printf(""%d, "", niz[i]);
	}
	return 0;
}","#include <stdio.h>
#include <math.h>
#include <stdlib.h>


void ubaci (int* niz, int vel) {
	
	int* clan;
	
	clan=niz;
	while (clan < niz + vel) {
		
		//Suma cifara clana niza
		
		int suma_c=0;
		int clan_niza=abs(*clan);
		
		while (clan_niza != 0) {
			suma_c=suma_c+(clan_niza%10);
			clan_niza=clan_niza/10;
		}
		
		//Pomjeranje clanova niza za jedno mjesto
		
		int* temp_p;
		temp_p=niz+vel;
		while (temp_p > clan) {
			*temp_p=*(temp_p-1);
			temp_p--;
		}
		
		//Ubacivanje novog clana niza
		
		*(clan+1)=suma_c;
		
		clan=clan+2;
		vel++;
			
		
	}
	
}

int fibonacci (int br) {
	
	int niz[1000];
	niz[0]=1;
	niz[1]=1;
	
	if (br == 1)
		return 1;
		
	int* p1=niz;
	int* p2=niz+1;
	int* p3=niz+2;
	
	while (1) {
		*p3=*p2+*p1;
		if (*p3 == br)
			return 1;
		if (*p3>br)
			return 0;
			
		p1++;
		p2++;
		p3++;
	}
}

int izbaci (int* p, int vel) {
	
	int* niz = p;
	int br;
	int* temp_p;
	while (niz < p+vel) {
		br=*niz;
		br=fibonacci(br);
	if (br == 1) {
		for (temp_p=niz; temp_p<p+vel-1; temp_p++) {
			*temp_p=*(temp_p+1);
		}
		vel--;
		niz--;
	}
		niz++;
	
}
	return vel;
}

int main() {
	int niz[100], i, izbaceni;
	 
	printf(""Unesite niz od 10 brojeva: "");
	for (i = 0; i < 10; i++) {
		scanf(""%d"", &niz[i]);
	}
	
	ubaci(niz, 10);
	izbaceni=izbaci(niz, 20);
	
	printf(""Modificirani niz glasi: "");
	for (i = 0; i < izbaceni; i++) {
		if (i < izbaceni -1) 
			printf(""%d, "", niz[i]);
		else 
			printf(""%d."", niz[i]);
	}
	return 0;
}
"
2065,20,20,0,36,A2016/Z5/Z3/student9972,A2016/Z5/Z3/student9897,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};
char unesi(char niz[],int velicina) {
	char znak=getchar();
	int i=0;
	while(znak=='\n')
	znak=getchar();
	while(i< velicina-1 && znak !='\n' ) {
		niz[i++] = znak;
		znak = getchar();
	}
niz[i]='\0';
return znak; }
void ocisti(char znak){
	int ima=0;
	while(znak!='\n')
	znak=getchar(); }
int ucitaj_datoteku(struct Cas raspored[]){
FILE* dat=fopen(""raspored.dat"",""rb"");
if(dat == NULL) return 0;
int ucitanih=fread(raspored,sizeof(struct Cas),KAPACITET,dat);
fclose(dat);
return ucitanih; }
void ispisreda(){
printf(""\n       PON       UTO       SRI"");
printf(""       CET       PET       SUB"");
printf(""\n""); }
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	ispisreda();
	for(i=0;i<broj_casova;i++){
		if(raspored[i].pocetak.sati<min)
		min=raspored[i].pocetak.sati;}
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max ){
			max=raspored[i].kraj.sati;
			indexmaxa=i;
}} if(raspored[indexmaxa].kraj.minute==0) max=max-1;

int x;
int s,dan,n;

for(i=min;i<=max;i++){
	if(i<10) printf(""9:00   "");
	else printf(""%d:00  "",i);
	for(j=1;j<7;j++){
		for(k=0;k<broj_casova;k++){
			s=raspored[k].pocetak.sati;
			dan=raspored[k].dan_u_sedmici;
			n=raspored[k].kraj.sati;
			if(s<=i && dan==j && n>=i) {
				printf(""%-10s"",raspored[k].predmet);
				break;
			}}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");}
			printf(""\n""); }}
			
			void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
				int i;
				printf(""Uneseni su casovi: "");
				int k=1;
				
			for(i=0;i<broj_casova;i++){
				if(raspored[i].dan_u_sedmici==dan){
					printf(""\n%d) %s ("",k++,raspored[i].predmet);
					if(raspored[i].pocetak.sati<10) printf(""0"");
					printf(""%d:"",raspored[i].pocetak.sati);
					if (raspored[i].pocetak.minute<10) printf(""0"");
					printf(""%d-"",raspored[i].pocetak.minute);
					printf(""%02d:%02d)"",raspored[i].kraj.sati,raspored[i].kraj.minute);
				}
			}}
			int zapisi_datoteku(struct Cas raspored[], int broj_casova){
				FILE* dat = fopen(""raspored.dat"", ""wb"");
				int ucitano=fwrite(raspored, sizeof(struct Cas), broj_casova, dat);
				fclose(dat);
				if(ucitano>0) return 1;
				return ucitano; }
				void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
					int i; int k=0; int j, brojac=1;
					for(i=0;i<broj_casova;i++){
					if(raspored[i].dan_u_sedmici==dan){ k++; brojac++;
					if(k==redni_broj){
						
						for(j=i;j<broj_casova-1;j++)
						raspored[j]=raspored[j+1];
						
						if(brojac>0)break; } }}}
						int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){
							int i;
						int minpoc1,minpoc2,minkraj1,minkraj2;
						for(i=0;i<broj_casova;i++) {
							minpoc1=raspored[i].pocetak.minute+raspored[i].pocetak.sati*60;
							minkraj1=raspored[i].kraj.minute+raspored[i].kraj.sati*60;
							minpoc2=cas.pocetak.minute+cas.pocetak.sati*60;
							minkraj2=cas.kraj.minute+cas.kraj.sati*60;
						if (raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<minpoc2 && minkraj1>minpoc2 || minpoc2<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 && cas.kraj.minute+cas.kraj.sati*60>minkraj1 || raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 && minkraj1>cas.kraj.minute+cas.kraj.sati*60))
						return 1;
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (minpoc2==minpoc1 || minkraj1==minkraj2))
						return 1; 
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&(minpoc1<minpoc2 && minkraj1>minpoc2 || minpoc2<minpoc1 && minkraj2>minkraj1 || minpoc1<minkraj2 && minkraj1>minkraj2))
						return 1; }
						return 0;}
						int dodaj_cas(struct Cas raspored[], int broj_casova, const char*predmet, int trajanje){
							if (broj_casova==200) return 0;
							int i,j,preklop;
							for(i=0; i<6; i++)
								for(j=9; j<=19-trajanje; j++){
									struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
									char *q=cas.predmet,*p=(char*)predmet;
									struct Cas cc;
									while(*q++=*p++);
									preklop=preklapanje(raspored,broj_casova,cas);
									if(preklop==0){
										raspored[broj_casova]=cas;
										return 1;
									} if(preklop==1) continue; }
									return 0; }
									void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
								int i,redni=0;
								for(i=0;i<broj_casova; i++){
									if(raspored[i].dan_u_sedmici==dan) redni++;
									if(redni_broj==redni)
									raspored[i]=promjena; }}
								int main () {
									int opcija,broj_casova=0;
									struct Cas raspored[KAPACITET];
									ucitaj_datoteku(raspored);
									do{
										printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
										scanf(""%d"",&opcija);
										int broj=opcija;
										switch(opcija){
											case 0: {
												zapisi_datoteku(raspored,broj_casova);
												break;
											} case 1:{
												if(broj!=0)   ispis_rasporeda(raspored,broj_casova);
												break;}
												case 2:  if(broj!=0)
											{
								
												int br_casova,dodan=0;
												char  predmet[10];
												printf(""Unesite naziv predmeta: Unesite broj casova: "");
												if(broj!=0)   ocisti(unesi(predmet,10));
												scanf(""%d"",&br_casova);
												dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
												int vr=dodan;
											if(vr==0)
											printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
											if(vr==1)  broj_casova++;
											
											break;}
											case 4: if(broj!=0)
											{
												int dan,redni;
												int br=broj_casova;
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,br,dan);
												printf(""\nIzaberite koji cas zelite obrisati: "");
											    scanf(""%d"",&redni);
											    obrisi_cas(raspored,br,dan,redni);
											    printf("" Cas obrisan\n"");
											    broj_casova--;
											}
											case 3:  if(broj!=0){
												struct Cas promjena;
												int dan,redni;
												char *q,*p;
												char znak,predmet[10];
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,broj_casova,dan);
												promjena.dan_u_sedmici=dan;
												printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
												scanf(""%d"",&redni);
												ocisti(unesi(predmet,10));
												q=promjena.predmet;
												p=predmet;
												strcpy(q,p);
												printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
												scanf(""%d%c"",&promjena.pocetak.sati,&znak);
												scanf(""%d"",&promjena.pocetak.minute);
												scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
												promijeni_cas(raspored,broj_casova,dan,redni,promjena);
												break;}
										} 
										
									} while(opcija!=0);
									    
									    
									    	return 0; 
									
								}
									
											
							
						
					
					
			
	


","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati, minute, sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

void unesi(char niz[]) {
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<9 && znak!='\n') {
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	while(znak!='\n')
	znak=getchar();
}


int ucitaj_datoteku(struct Cas raspored[]) {
	FILE *ulaz=fopen(""raspored.dat"", ""rb+"");
	int greska=0;
	FILE *ulaz1=fopen(""raspored.dat"", ""rb+"");
	if(ulaz==NULL || ulaz1==NULL) {
		greska=1;
		return 0;
	}
  
   int ucitano=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz);
   int ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);
   fclose(ulaz);
   fclose(ulaz1);

return ucitano1                      ;
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova) {
	FILE* dat=fopen(""raspored.dat"", ""wb"");
	int vel=sizeof(struct Cas);
    int ucitano=fwrite(raspored,vel,broj_casova,dat);
	fclose(dat);
	if(ucitano>0) return 1;
	return ucitano;
	}

void ispis_rasporeda(struct Cas raspored[], int broj_casova) {
	int i, j, k, x, s, min=100, max=0;
	int indexmaxa=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].pocetak.sati<min) min=raspored[i].pocetak.sati;
		if(raspored[i].kraj.sati>max) {
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	if(raspored[indexmaxa].kraj.minute==0) max=max-1;
	printf(""\n       PON       UTO       SRI"");
	printf(""       CET       PET       SUB\n"");
	for(i=min;i<=max;i++) {
		if(i<10) printf(""%d:00   "",i);
		else printf(""%d:00  "", i);
		
		for(j=1;j<7;j++) {
			for(k=0;k<broj_casova;k++) {
				s=raspored[k].pocetak.sati; 
				if(s<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i) {
					printf(""%-10s"", raspored[k].predmet);
					break;
					x=i;
				}
			}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");
		}
		printf(""\n"");
	}
	//printf(""\n"");
}

int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas) {
	int i;
	for(i=0;i<broj_casova;i++) {
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&
		(cas.pocetak.minute+cas.pocetak.sati*60==raspored[i].pocetak.minute+raspored[i].pocetak.sati*60
		|| raspored[i].kraj.minute+raspored[i].kraj.sati*60==cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && 
		(raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.pocetak.minute+cas.pocetak.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.pocetak.minute+cas.pocetak.sati*60 || 
		cas.pocetak.minute+cas.pocetak.sati*60<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 &&
		cas.kraj.minute+cas.kraj.sati*60>raspored[i].kraj.minute+raspored[i].kraj.sati*60 ||
		raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
	}
	return 0;
}

void ispisi_dan(struct Cas raspored[], int broj_casova, int dan) {
	int brojac=1;
	int i;
	printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) {
			printf(""\n%d) %s (%02d:%02d-%02d:%02d)"", brojac,
			raspored[i].predmet, raspored[i].pocetak.sati,
			raspored[i].pocetak.minute,raspored[i].kraj.sati,
			raspored[i].kraj.minute);
			brojac++;
		}
	}
}

void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj) {
	int i, j;
	int k=0;
	int n=1;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) { k++; n++; }
		if(k==redni_broj) {
			for(j=i;j<broj_casova-1;j++) {
				raspored[j]=raspored[j+1];
			}
			if(n>0) break;
			return;
		}
	}
}

int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje) {
	if(broj_casova==200 || trajanje>10) return 0;
	int i, k, pocetak, dan, poc, moze=0;
	struct Cas cas;
	
	for(i=1;i<7;i++) 
	  for(k=9;k<=19-trajanje;k++) {
	  	dan=i;
	  	poc=k;
	  	strcpy(cas.predmet,predmet);
	  	cas.dan_u_sedmici=dan;
	  	cas.pocetak.sati=poc;
	  	cas.kraj.sati=k+trajanje;
	  	cas.pocetak.minute=cas.kraj.minute=0;
	  	if(preklapanje(raspored,broj_casova,cas)==0) {
	  	raspored[broj_casova]=cas;
	  	return 1;
	  }
}
  return 0;
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan,int redni_broj, struct Cas promjena) {
	int i;
	int k=0;
	int index=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) k++;
		if(k==redni_broj) {
			index=i;
			break;
		}
}
  raspored[index]=promjena;
}

int poziv(struct Cas raspored[], int ucit, char* ime, int br) {
	int vr=dodaj_cas(raspored,ucit,ime,br);
	return vr;
}

struct Cas zamj(struct Cas casko, int dan, int sat, int min, int sat1, int min1) {
	casko.dan_u_sedmici=dan;
	casko.pocetak.sati=sat;
	casko.pocetak.minute=min;
	casko.kraj.sati=sat1;
	casko.kraj.minute=min1;
	return casko;
	
}
int main() {
	struct Cas raspored[KAPACITET];
	int ucit=ucitaj_datoteku(raspored);
	int broj, br, rez, dan, cs, zap, m;
	char ime[100];
	for (m=0;m<KAPACITET;m++)
	{
		raspored[m].pocetak.sati=0;
		raspored[m].kraj.sati=0;
		raspored[m].dan_u_sedmici=1;
		raspored[m].pocetak.minute=0;
		raspored[m].kraj.minute=0;
		raspored[m].pocetak.sekunde=0;
		raspored[m].kraj.sekunde=0;
	}
	poc:
	printf(""1) Ispis rasporeda\n"");
	printf(""2) Dodavanje casa\n"");
	printf(""3) Promjena casa\n"");
	printf(""4) Brisanje casa\n"");
	printf(""0) Kraj rada\n"");
	printf(""Izaberite opciju: "");
	scanf(""%d"", &broj);
	switch(broj) {
		case 1:
		ispis_rasporeda(raspored,ucit);
		if(broj==0) return 0;
		break;
		
		case 2:
		printf(""Unesite naziv predmeta: "");
		unesi(ime);
		printf(""Unesite broj casova: "");
		scanf(""%d"", &br);
		if(broj==0) return 0;
		rez=poziv(raspored,ucit,ime,br);
		if(rez==0) printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"", br);
		if(rez==1) ucit++;
		break;
	
       case 4:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     ispisi_dan(raspored,ucit,dan);
     printf(""\nIzaberite koji cas zelite obrisati: "");
     scanf(""%d"", &cs);
     obrisi_cas(raspored,ucit,dan,cs);
     if(broj==0) return 0;
     printf(""Cas obrisan\n"");
     ucit--;
     break;
     
     case 3:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     int sat, min;
     char z;
     int sat1, min1;
     char z1;
     ispisi_dan(raspored,ucit,dan);
     if(broj==0) return 0;
     printf(""\nIzaberite koji cas zelite promijeniti: "");
     scanf(""%d"", &cs);
     printf(""Naziv predmeta: "");
     unesi(ime);
     printf(""Vrijeme pocetka: "");
     scanf(""%d"", &sat);
     scanf(""%c"", &z);
     scanf(""%d"", &min);
     printf(""Vrijeme zavrsetka: "");
     scanf(""%d"", &sat1);
     scanf(""%c"", &z1);
     scanf(""%d"", &min1);
     struct Cas casko={ime,dan,{sat,min,0},{sat1,min1,0}};
     strcpy(casko.predmet,ime);
     casko=zamj(casko,dan,sat,min,sat1,min1);
     promijeni_cas(raspored,ucit,dan,cs,casko);
     break;
     
     case 0:
     zap=zapisi_datoteku(raspored,ucit);
     return 0;
	}
	if(broj!=0) goto poc;
	return 0;
}
"
2069,99,99,0,136,A2016/Z1/Z1/student2886,A2016/Z1/Z1/student2197,"#include <stdio.h>

int main() {
double PPI1,PPI2,PPI3,DPI1,DPI2,DPI3,P1,P2,P3,Z1,Z2,Z3,ZI1,ZI2,ZI3,OT,OB,OM;
	/*PPI - I parcijalni ispit*/
	/*DRI - II parcijalni ispit*/
	/*P - Prisustvo*/
	/*Z - Zadace*/
	/*ZI - Zavrsni ispit*/
	/*OT - Ocjena Tarik*/
	/*OB - Ocjena Bojan*/
	/*OM - Ocjena Mirza*/
	
	/*Tarik*/
	
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &PPI1);
	if(PPI1<0 || PPI1>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else { 
		printf(""II parcijalni ispit: "");
	scanf(""%lf"", &DPI1); }
	if(DPI1<0 || DPI1>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else { 
		printf(""Prisustvo: "");
	scanf(""%lf"", &P1);}
	if(P1<0 || P1>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else { 
		printf(""Zadace: "");
	scanf(""%lf"", &Z1);}
	if(Z1<0 || Z1>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Zavrsni ispit: "");
	scanf(""%lf"", &ZI1);}
	if(ZI1<0 || ZI1>40) { printf(""Neispravan broj bodova\n"");
	return 0;}
	
	/*Bojan*/
	
	printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &PPI2);
	if(PPI2<0 || PPI2>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""II parcijalni ispit: "");
	scanf(""%lf"", &DPI2);}
	if(DPI2<0 || DPI2>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Prisustvo: "");
	scanf(""%lf"", &P2);}
	if(P2<0 || P2>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Zadace: "");
	scanf(""%lf"", &Z2);}
	if(Z2<0 || Z2>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Zavrsni ispit: "");
	scanf(""%lf"", &ZI2);}
	if(ZI2<0 || ZI2>40) { printf(""Neispravan broj bodova\n"");
	return 0;}
	
	/*Mirza*/
	
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &PPI3);
	if(PPI3<0 || PPI3>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""II parcijalni ispit: "");
	scanf(""%lf"", &DPI3);}
	if(DPI3<0 || DPI3>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Prisustvo: "");
	scanf(""%lf"", &P3);}
	if(P3<0 || P3>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Zadace: "");
	scanf(""%lf"", &Z3);}
	if(Z3<0 || Z3>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Zavrsni ispit: "");
	scanf(""%lf"", &ZI3);}
	if(ZI3<0 || ZI3>40) { printf(""Neispravan broj bodova\n"");
	return 0;}
	
	/*Ocjene*/

	if(PPI1+DPI1+P1+Z1+ZI1>=55 && PPI1+DPI1+P1+Z1+ZI1<65) { OT=6;
	} else if(PPI1+DPI1+P1+Z1+ZI1>=65 && PPI1+DPI1+P1+Z1+ZI1<75) { OT=7;
	} else if(PPI1+DPI1+P1+Z1+ZI1>=75 && PPI1+DPI1+P1+Z1+ZI1<85) { OT=8;
	} else if(PPI1+DPI1+P1+Z1+ZI1>=85 && PPI1+DPI1+P1+Z1+ZI1<92) { OT=9;
	} else if(PPI1+DPI1+P1+Z1+ZI1>=92 && PPI1+DPI1+P1+Z1+ZI1<=100) { OT=10;
	}
	if(PPI2+DPI2+P2+Z2+ZI2>=55 && PPI2+DPI2+P2+Z2+ZI2<65) { OB=6;
	} else if(PPI2+DPI2+P2+Z2+ZI2>=65 && PPI2+DPI2+P2+Z2+ZI2<75) { OB=7;
	} else if(PPI2+DPI2+P2+Z2+ZI2>=75 && PPI2+DPI2+P2+Z2+ZI2<85) { OB=8;
	} else if(PPI2+DPI2+P2+Z2+ZI2>=85 && PPI2+DPI2+P2+Z2+ZI2<92) { OB=9;
	} else if(PPI2+DPI2+P2+Z2+ZI2>=92 && PPI2+DPI2+P2+Z2+ZI2<=100) { OB=10;
	}
	
	if(PPI3+DPI3+P3+Z3+ZI3>=55 && PPI3+DPI3+P3+Z3+ZI3<65) { OM=6;
	} else if(PPI3+DPI3+P3+Z3+ZI3>=65 && PPI3+DPI3+P3+Z3+ZI3<75) { OM=7;
	} else if(PPI3+DPI3+P3+Z3+ZI3>=75 && PPI3+DPI3+P3+Z3+ZI3<85) { OM=8;
	} else if(PPI3+DPI3+P3+Z3+ZI3>=85 && PPI3+DPI3+P3+Z3+ZI3<92) { OM=9;
	} else if(PPI3+DPI3+P3+Z3+ZI3>=92 && PPI3+DPI3+P3+Z3+ZI3<=100) { OM=10;
	}
	
	/*Poruke ovisno o situaciji*/
	
	if(PPI1+DPI1+P1+Z1+ZI1<55 && PPI2+DPI2+P2+Z2+ZI2<55 && PPI3+DPI3+P3+Z3+ZI3<55) printf(""Nijedan student nije polozio.\n"");
	else if((PPI1+DPI1+P1+Z1+ZI1<55 && PPI2+DPI2+P2+Z2+ZI2<55 && PPI3+DPI3+P3+Z3+ZI3>=55) || (PPI1+DPI1+P1+Z1+ZI1>=55 && PPI2+DPI2+P2+Z2+ZI2<55 && PPI3+DPI3+P3+Z3+ZI3<55) || (PPI1+DPI1+P1+Z1+ZI1<55 && PPI2+DPI2+P2+Z2+ZI2>=55 && PPI3+DPI3+P3+Z3+ZI3<55))
	printf(""Jedan student je polozio.\n"");
	else if((PPI1+DPI1+P1+Z1+ZI1<55 && PPI2+DPI2+P2+Z2+ZI2>=55 && PPI3+DPI3+P3+Z3+ZI3>=55) || (PPI1+DPI1+P1+Z1+ZI1>=55 && PPI2+DPI2+P2+Z2+ZI2<55 && PPI3+DPI3+P3+Z3+ZI3>=55) || (PPI1+DPI1+P1+Z1+ZI1>=55 && PPI2+DPI2+P2+Z2+ZI2>=55 && PPI3+DPI3+P3+Z3+ZI3<55))
	printf(""Dva studenta su polozila.\n"");
	else if((PPI1+DPI1+P1+Z1+ZI1>=55 && PPI2+DPI2+P2+Z2+ZI2>=55 && PPI3+DPI3+P3+Z3+ZI3>=55)) printf(""Sva tri studenta su polozila.\n"");
	
	/*Poruke ako su sva tri studenta polozila*/
	
	if(PPI1+DPI1+P1+Z1+ZI1>=55 && PPI2+DPI2+P2+Z2+ZI2>=55 && PPI3+DPI3+P3+Z3+ZI3>=55) {if(OT==OB && OB==OM) {
		printf(""Sva tri studenta imaju istu ocjenu.\n"");
	}
	else if((OT==OB && OT!=OM) || (OB==OM && OB!=OT) || (OT==OM && OM!=OB)) {
		printf(""Dva od tri studenta imaju istu ocjenu.\n"");
	}
	else if((OT!=OB && OT!=OM && OB!=OM)) {
		printf(""Svaki student ima razlicitu ocjenu.\n"");
		}
		return 0;
}}
","#include <stdio.h>

int main() {
double PPI1,PPI2,PPI3,DPI1,DPI2,DPI3,P1,P2,P3,Z1,Z2,Z3,ZI1,ZI2,ZI3,OT,OB,OM;
	/*PPI - I parcijalni ispit*/
	/*DRI - II parcijalni ispit*/
	/*P - Prisustvo*/
	/*Z - Zadace*/
	/*ZI - Zavrsni ispit*/
	/*OT - Ocjena Tarik*/
	/*OB - Ocjena Bojan*/
	/*OM - Ocjena Mirza*/
	
	/*Tarik*/
	
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &PPI1);
	if(PPI1<0 || PPI1>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else { 
		printf(""II parcijalni ispit: "");
	scanf(""%lf"", &DPI1); }
	if(DPI1<0 || DPI1>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else { 
		printf(""Prisustvo: "");
	scanf(""%lf"", &P1);}
	if(P1<0 || P1>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else { 
		printf(""Zadace: "");
	scanf(""%lf"", &Z1);}
	if(Z1<0 || Z1>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Zavrsni ispit: "");
	scanf(""%lf"", &ZI1);}
	if(ZI1<0 || ZI1>40) { printf(""Neispravan broj bodova\n"");
	return 0;}
	
	/*Bojan*/
	
	printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &PPI2);
	if(PPI2<0 || PPI2>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""II parcijalni ispit: "");
	scanf(""%lf"", &DPI2);}
	if(DPI2<0 || DPI2>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Prisustvo: "");
	scanf(""%lf"", &P2);}
	if(P2<0 || P2>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Zadace: "");
	scanf(""%lf"", &Z2);}
	if(Z2<0 || Z2>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Zavrsni ispit: "");
	scanf(""%lf"", &ZI2);}
	if(ZI2<0 || ZI2>40) { printf(""Neispravan broj bodova\n"");
	return 0;}
	
	/*Mirza*/
	
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &PPI3);
	if(PPI3<0 || PPI3>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""II parcijalni ispit: "");
	scanf(""%lf"", &DPI3);}
	if(DPI3<0 || DPI3>20) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Prisustvo: "");
	scanf(""%lf"", &P3);}
	if(P3<0 || P3>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Zadace: "");
	scanf(""%lf"", &Z3);}
	if(Z3<0 || Z3>10) { printf(""Neispravan broj bodova\n"");
	return 0;}
	else {
		printf(""Zavrsni ispit: "");
	scanf(""%lf"", &ZI3);}
	if(ZI3<0 || ZI3>40) { printf(""Neispravan broj bodova\n"");
	return 0;}
	
	/*Ocjene*/

	if(PPI1+DPI1+P1+Z1+ZI1>=55 && PPI1+DPI1+P1+Z1+ZI1<65) { OT=6;
	} else if(PPI1+DPI1+P1+Z1+ZI1>=65 && PPI1+DPI1+P1+Z1+ZI1<75) { OT=7;
	} else if(PPI1+DPI1+P1+Z1+ZI1>=75 && PPI1+DPI1+P1+Z1+ZI1<85) { OT=8;
	} else if(PPI1+DPI1+P1+Z1+ZI1>=85 && PPI1+DPI1+P1+Z1+ZI1<92) { OT=9;
	} else if(PPI1+DPI1+P1+Z1+ZI1>=92 && PPI1+DPI1+P1+Z1+ZI1<=100) { OT=10;
	}
	if(PPI2+DPI2+P2+Z2+ZI2>=55 && PPI2+DPI2+P2+Z2+ZI2<65) { OB=6;
	} else if(PPI2+DPI2+P2+Z2+ZI2>=65 && PPI2+DPI2+P2+Z2+ZI2<75) { OB=7;
	} else if(PPI2+DPI2+P2+Z2+ZI2>=75 && PPI2+DPI2+P2+Z2+ZI2<85) { OB=8;
	} else if(PPI2+DPI2+P2+Z2+ZI2>=85 && PPI2+DPI2+P2+Z2+ZI2<92) { OB=9;
	} else if(PPI2+DPI2+P2+Z2+ZI2>=92 && PPI2+DPI2+P2+Z2+ZI2<=100) { OB=10;
	}
	
	if(PPI3+DPI3+P3+Z3+ZI3>=55 && PPI3+DPI3+P3+Z3+ZI3<65) { OM=6;
	} else if(PPI3+DPI3+P3+Z3+ZI3>=65 && PPI3+DPI3+P3+Z3+ZI3<75) { OM=7;
	} else if(PPI3+DPI3+P3+Z3+ZI3>=75 && PPI3+DPI3+P3+Z3+ZI3<85) { OM=8;
	} else if(PPI3+DPI3+P3+Z3+ZI3>=85 && PPI3+DPI3+P3+Z3+ZI3<92) { OM=9;
	} else if(PPI3+DPI3+P3+Z3+ZI3>=92 && PPI3+DPI3+P3+Z3+ZI3<=100) { OM=10;
	}
	
	/*Poruke ovisno o situaciji*/
	
	if(PPI1+DPI1+P1+Z1+ZI1<55 && PPI2+DPI2+P2+Z2+ZI2<55 && PPI3+DPI3+P3+Z3+ZI3<55) printf(""Nijedan student nije polozio.\n"");
	else if((PPI1+DPI1+P1+Z1+ZI1<55 && PPI2+DPI2+P2+Z2+ZI2<55 && PPI3+DPI3+P3+Z3+ZI3>=55) || (PPI1+DPI1+P1+Z1+ZI1>=55 && PPI2+DPI2+P2+Z2+ZI2<55 && PPI3+DPI3+P3+Z3+ZI3<55) || (PPI1+DPI1+P1+Z1+ZI1<55 && PPI2+DPI2+P2+Z2+ZI2>=55 && PPI3+DPI3+P3+Z3+ZI3<55))
	printf(""Jedan student je polozio.\n"");
	else if((PPI1+DPI1+P1+Z1+ZI1<55 && PPI2+DPI2+P2+Z2+ZI2>=55 && PPI3+DPI3+P3+Z3+ZI3>=55) || (PPI1+DPI1+P1+Z1+ZI1>=55 && PPI2+DPI2+P2+Z2+ZI2<55 && PPI3+DPI3+P3+Z3+ZI3>=55) || (PPI1+DPI1+P1+Z1+ZI1>=55 && PPI2+DPI2+P2+Z2+ZI2>=55 && PPI3+DPI3+P3+Z3+ZI3<55))
	printf(""Dva studenta su polozila.\n"");
	else if((PPI1+DPI1+P1+Z1+ZI1>=55 && PPI2+DPI2+P2+Z2+ZI2>=55 && PPI3+DPI3+P3+Z3+ZI3>=55)) printf(""Sva tri studenta su polozila.\n"");
	
	/*Poruke ako su sva tri studenta polozila*/
	
	if(PPI1+DPI1+P1+Z1+ZI1>=55 && PPI2+DPI2+P2+Z2+ZI2>=55 && PPI3+DPI3+P3+Z3+ZI3>=55) {if(OT==OB && OB==OM) {
		printf(""Sva tri studenta imaju istu ocjenu.\n"");
	}
	else if((OT==OB && OT!=OM) || (OB==OM && OB!=OT) || (OT==OM && OM!=OB)) {
		printf(""Dva od tri studenta imaju istu ocjenu.\n"");
	}
	else if((OT!=OB && OT!=OM && OB!=OM)) {
		printf(""Svaki student ima razlicitu ocjenu.\n"");
		}
		return 0;
}}
"
2077,99,99,0,130,A2016/Z4/Z2/student2351,A2016/Z4/Z2/student7180,"#include <stdio.h>

void sortiranje(int *sortiraj, int *index)
{
	int i=0, j, temp1, temp2;
	i=0;
	while(i<95)
	{
		j=0;
		while(j<95)
		{
			if(sortiraj[j]<sortiraj[i])
			{
				temp1=sortiraj[i];
				sortiraj[i]=sortiraj[j];
				sortiraj[j]=temp1;
				
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			
			if(sortiraj[i]==sortiraj[j] && index[i]<index[j])
			{
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			j++;
		}
		i++;
	}
}

void stvori(char *kljuc, int *sortiraj, int *index)
{
	int i;
	i=0;
	do
	{
		if(sortiraj[i]!=0) 
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	
	i=0;
	do{
		if(sortiraj[i]==0)
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	*kljuc='\0';
}

char *kodiraj (char *tekst, char *kljuc)
{
	char *p=tekst;
	char *q;
	int niz[95], sort[95], in[95];
	int i, br;
	
	i=0;
	while(i<95) 
	{
		niz[i]=0;
		i++;
	}
	do{
		q=p;
		br=0;
		while(*q!='\0')
		{
		if(*p==*q) br++;
		q++;
		}
		if(niz[*p-32]==0) {niz[*p-32]=br;}
		p++;
	}
	while(*p!='\0');
	
	i=0;
	while(i<95)
	{
		sort[i]=niz[i];
		in[i]=i;
		i++;
	}
	sortiranje(sort, in);
	stvori(kljuc, sort, in);
	p=tekst;
	q=kljuc;
	
	do{
		q=kljuc;
		br=0;
		while(*q!='\0')
		{
			if(*p==*q)
			{
				*p=126-br;
				break;
			}
			br++;
			q++;
		}
		p++;
	} while(*p!='\0');
	return tekst;
}

char *dekodiraj(char *tekst, char *kljuc)
{
	char *p=tekst;
	do
	{
	*p=kljuc[126-*p];
	p++;
	} while(*p!='\0');
	return tekst;
}

int main() {
	char primjer[]=""LLMLNLNMONM"";
	char sifra[100]="""";
	printf(""%s"", kodiraj(primjer, sifra));
	return 0;
}
","#include <stdio.h>

void sortiranje(int *sortiraj, int *index)
{
	int i=0, j, temp1, temp2;
	i=0;
	while(i<95)
	{
		j=0;
		while(j<95)
		{
			if(sortiraj[j]<sortiraj[i])
			{
				temp1=sortiraj[i];
				sortiraj[i]=sortiraj[j];
				sortiraj[j]=temp1;
				
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			
			if(sortiraj[i]==sortiraj[j] && index[i]<index[j])
			{
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			j++;
		}
		i++;
	}
}

void stvori(char *kljuc, int *sortiraj, int *index)
{
	int i;
	i=0;
	do
	{
		if(sortiraj[i]!=0) 
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	
	i=0;
	do{
		if(sortiraj[i]==0)
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	*kljuc='\0';
}

char *kodiraj (char *tekst, char *kljuc)
{
	char *p=tekst;
	char *q;
	int niz[95], sort[95], in[95];
	int i, br;
	
	i=0;
	while(i<95) 
	{
		niz[i]=0;
		i++;
	}
	do{
		q=p;
		br=0;
		while(*q!='\0')
		{
		if(*p==*q) br++;
		q++;
		}
		if(niz[*p-32]==0) {niz[*p-32]=br;}
		p++;
	}
	while(*p!='\0');
	
	i=0;
	while(i<95)
	{
		sort[i]=niz[i];
		in[i]=i;
		i++;
	}
	sortiranje(sort, in);
	stvori(kljuc, sort, in);
	p=tekst;
	q=kljuc;
	
	do{
		q=kljuc;
		br=0;
		while(*q!='\0')
		{
			if(*p==*q)
			{
				*p=126-br;
				break;
			}
			br++;
			q++;
		}
		p++;
	} while(*p!='\0');
	return tekst;
}

char *dekodiraj(char *tekst, char *kljuc)
{
	char *p=tekst;
	do
	{
	*p=kljuc[126-*p];
	p++;
	} while(*p!='\0');
	return tekst;
}

int main() {
	char primjer[]=""LLMLNLNMONM"";
	char sifra[100]="""";
	printf(""%s"", kodiraj(primjer, sifra));
	return 0;
}
"
2078,79,79,0,18,A2016/Z1/Z4/student5355,A2016/Z1/Z4/student4644,"#include <stdio.h>

int main() {
	int i, j, n;
	do {
		printf(""Unesite broj n: "");
		scanf(""%d"", &n);
	}
	
	while (n<0 || n>50);
	for  (i=0; i<n; i++) {
		for (j=0; j <= 4*n-4; j++){
			if(i == j) printf (""*"");
		else	if((n*2)-2 == i+j && i != n-1 ) printf (""*"");
		else	if(2*(n-1)+i == j) printf (""*"");
		else if(i+j == 4*n-4) printf (""*"");
			else printf ("" "");
		}
		printf (""\n"");
	}
	
	
	return 0;
}
","#include <stdio.h>

int main() {

		int i, j, n;
		do { 
				printf(""Unesite broj n: "");
				scanf(""%d"", &n);
				if(n<1 || n>50) 
				printf(""Pogresan unos\n"");
				if(n==1) {
				printf(""***"");
				return 0;}
				
		}
		while (n<1 || n>50);
		for (i=0; i<n; i++) {
			for (j=0; j<=4*n-4; j++) {
				
				if(i==j) printf (""*"");
				
				else if((n*2)-2==i+j && i!=n-1)
				printf (""*"");
				
				else if(2*(n-1)+i==j)
				printf(""*"");
				
				else if(i+j==4*n-4)
				printf(""*"");
				else printf("" "");
				
			}
			printf(""\n"");
		}
	return 0;
}
"
2080,92,92,0,16,A2016/Z2/Z1/student1476,A2016/Z2/Z1/student5496,"#include <stdio.h>
#include <math.h>
int main() {
	int n,C1,C2;
	int k=1;
	int S=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	n=fabs (n);
		while(n>=10){
		C1=n%10;
		C2=(n/10)%10;
		S+=fabs((C1-C2)*k);
		k*=10;
		n/=10;
    
	}
	printf(""%d"", S);
	return 0;
}
","#include <stdio.h>
#include <math.h>
int main() {
	int n,C1,C2;
	int k=1;
	int S=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	n=fabs (n);
		while(n>=10){
		C1=n%10;
		C2=(n/10)%10;
		S+=fabs((C1-C2)*k);
		k*=10;
		n/=10;
    
	}
	printf(""%d"", S);
	return 0;
}
"
2082,99,99,0,89,A2016/Z5/Z1/student8004,A2016/Z5/Z1/student5468,"#include <stdio.h>
#include <string.h>
#define epsilon 0.00001
void unesi(char* niz,int vel){
	int i=0;
	char znak=getchar();
	if(znak=='\n')
		znak=getchar();
	while(i<vel-1 && znak!='\0'){
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
}
struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

int genijalci(struct Student *studenti,int vel,float prosjek){
	int i,j,suma_ocjena=0,logicki_prosjek,broj_studenta[3]={0};
	float pojedinacni_prosjek=5.0,max[3]={0};
	//trazenje prosjek studenta pojedinacno
	for(i=0;i<vel;i++){
		suma_ocjena=0;
		logicki_prosjek=1;
		if(studenti[i].br_ocjena==0){
			pojedinacni_prosjek=5.0;
			logicki_prosjek=0;
			
		}
		for(j=0;j<studenti[i].br_ocjena;j++){
			if(studenti[i].ocjene[j]==5){
				logicki_prosjek=0;
				pojedinacni_prosjek=5.0;
				break;
			}
			else
			suma_ocjena+=studenti[i].ocjene[j];
		}
		if(logicki_prosjek)
		pojedinacni_prosjek=(float)suma_ocjena/studenti[i].br_ocjena;
		//izbacivanje iz niza
		if(pojedinacni_prosjek<prosjek){
			for(j=i;j<vel-1;j++){
				studenti[j]=studenti[j+1];
			}
			
			vel--;
			i--;
			continue;
			}
		//trazenje najboljih/maximalnih u nizu i leksikografsko poredjenje po potrebi
		if(pojedinacni_prosjek>max[0] || (pojedinacni_prosjek==max[0] && strcmp(studenti[i].prezime,studenti[broj_studenta[0]].prezime)<0)||(pojedinacni_prosjek==max[0] && strcmp(studenti[i].prezime,studenti[broj_studenta[0]].prezime)==0 && strcmp(studenti[i].ime,studenti[broj_studenta[0]].ime)<0)){
			max[2]=max[1];
			max[1]=max[0];
			max[0]=pojedinacni_prosjek;
			broj_studenta[2]=broj_studenta[1];
			broj_studenta[1]=broj_studenta[0];
			broj_studenta[0]=i;
		}
		else if(pojedinacni_prosjek>max[1] || (pojedinacni_prosjek==max[1] && strcmp(studenti[i].prezime,studenti[broj_studenta[1]].prezime)<0)||(pojedinacni_prosjek==max[1] && strcmp(studenti[i].prezime,studenti[broj_studenta[1]].prezime)==0 && strcmp(studenti[i].ime,studenti[broj_studenta[1]].ime)<0)){
			max[2]=max[1];
			max[1]=pojedinacni_prosjek;
			broj_studenta[2]=broj_studenta[1];
			broj_studenta[1]=i;
		}
		else if(pojedinacni_prosjek>max[2] || (pojedinacni_prosjek==max[2] && strcmp(studenti[i].prezime,studenti[broj_studenta[2]].prezime)<0)||(pojedinacni_prosjek==max[2] && strcmp(studenti[i].prezime,studenti[broj_studenta[2]].prezime)==0 && strcmp(studenti[i].ime,studenti[broj_studenta[2]].ime)<0)){
			max[2]=pojedinacni_prosjek;
			broj_studenta[2]=i;
	
		}
		}
		//ispis najboljih
		if(max[0]!=0) printf(""%s %s\n"",studenti[broj_studenta[0]].prezime,studenti[broj_studenta[0]].ime);
		if(max[1]!=0) printf(""%s %s\n"",studenti[broj_studenta[1]].prezime,studenti[broj_studenta[1]].ime);
		if(max[2]!=0) printf(""%s %s\n"",studenti[broj_studenta[2]].prezime,studenti[broj_studenta[2]].ime);
	return vel;
}

int main() {
	struct Student studenti[100];
	int i=0,prekid;
	do{
		printf(""Unesite ime i prezime studenta %d: "",i+1);
		unesi(studenti[i].ime,20);
		unesi(studenti[i].prezime,20);
		i++;
		printf(""Ako ste zavrsili sa unosom studenata pritisnite 0, ako ne onda 1."");
		scanf(""%d"",&prekid);
	}while(i<100 && prekid);
	return 0;
}
","#include <stdio.h>
#include <string.h>
#define epsilon 0.00001
void unesi(char* niz,int vel){
	int i=0;
	char znak=getchar();
	if(znak=='\n')
		znak=getchar();
	while(i<vel-1 && znak!='\0'){
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
}
struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

int genijalci(struct Student *studenti,int vel,float prosjek){
	int i,j,suma_ocjena=0,logicki_prosjek,broj_studenta[3]={0};
	float pojedinacni_prosjek=5.0,max[3]={0};
	//trazenje prosjek studenta pojedinacno
	for(i=0;i<vel;i++){
		suma_ocjena=0;
		logicki_prosjek=1;
		if(studenti[i].br_ocjena==0){
			pojedinacni_prosjek=5.0;
			logicki_prosjek=0;
			
		}
		for(j=0;j<studenti[i].br_ocjena;j++){
			if(studenti[i].ocjene[j]==5){
				logicki_prosjek=0;
				pojedinacni_prosjek=5.0;
				break;
			}
			else
			suma_ocjena+=studenti[i].ocjene[j];
		}
		if(logicki_prosjek)
		pojedinacni_prosjek=(float)suma_ocjena/studenti[i].br_ocjena;
		//izbacivanje iz niza
		if(pojedinacni_prosjek<prosjek){
			for(j=i;j<vel-1;j++){
				studenti[j]=studenti[j+1];
			}
			
			vel--;
			i--;
			continue;
			}
		//trazenje najboljih/maximalnih u nizu i leksikografsko poredjenje po potrebi
		if(pojedinacni_prosjek>max[0] || (pojedinacni_prosjek==max[0] && strcmp(studenti[i].prezime,studenti[broj_studenta[0]].prezime)<0)||(pojedinacni_prosjek==max[0] && strcmp(studenti[i].prezime,studenti[broj_studenta[0]].prezime)==0 && strcmp(studenti[i].ime,studenti[broj_studenta[0]].ime)<0)){
			max[2]=max[1];
			max[1]=max[0];
			max[0]=pojedinacni_prosjek;
			broj_studenta[2]=broj_studenta[1];
			broj_studenta[1]=broj_studenta[0];
			broj_studenta[0]=i;
		}
		else if(pojedinacni_prosjek>max[1] || (pojedinacni_prosjek==max[1] && strcmp(studenti[i].prezime,studenti[broj_studenta[1]].prezime)<0)||(pojedinacni_prosjek==max[1] && strcmp(studenti[i].prezime,studenti[broj_studenta[1]].prezime)==0 && strcmp(studenti[i].ime,studenti[broj_studenta[1]].ime)<0)){
			max[2]=max[1];
			max[1]=pojedinacni_prosjek;
			broj_studenta[2]=broj_studenta[1];
			broj_studenta[1]=i;
		}
		else if(pojedinacni_prosjek>max[2] || (pojedinacni_prosjek==max[2] && strcmp(studenti[i].prezime,studenti[broj_studenta[2]].prezime)<0)||(pojedinacni_prosjek==max[2] && strcmp(studenti[i].prezime,studenti[broj_studenta[2]].prezime)==0 && strcmp(studenti[i].ime,studenti[broj_studenta[2]].ime)<0)){
			max[2]=pojedinacni_prosjek;
			broj_studenta[2]=i;
	
		}
		}
		//ispis najboljih
		if(max[0]!=0) printf(""%s %s\n"",studenti[broj_studenta[0]].prezime,studenti[broj_studenta[0]].ime);
		if(max[1]!=0) printf(""%s %s\n"",studenti[broj_studenta[1]].prezime,studenti[broj_studenta[1]].ime);
		if(max[2]!=0) printf(""%s %s\n"",studenti[broj_studenta[2]].prezime,studenti[broj_studenta[2]].ime);
	return vel;
}

int main() {
	struct Student studenti[100];
	int i=0,prekid;
	do{
		printf(""Unesite ime i prezime studenta %d: "",i+1);
		unesi(studenti[i].ime,20);
		unesi(studenti[i].prezime,20);
		i++;
		printf(""Ako ste zavrsili sa unosom studenata pritisnite 0, ako ne onda 1."");
		scanf(""%d"",&prekid);
	}while(i<100 && prekid);
	return 0;
}
"
2085,26,26,0,24,A2016/Z5/Z1/student1542,A2016/Z5/Z1/student8357,"#include <stdio.h>
#include <string.h>

struct Student {
	char ime [20],prezime[20];
	int ocjene [50];
	int br_ocjena;
};

void unesi(char niz[], int velicina) {
	char znak = getchar();
	if (znak == '\n') znak=getchar();
	int i = 0;
	while (i < velicina-1 && znak != '\n') {
		niz[i] = znak;
		i++;
		znak = getchar();
	}
	niz[i]='\0';
}

float prosjek(int niz[], int velicina){
	int i,suma=0;
	float pr;
	for(i=0;i<velicina;i++){
		if(niz[i]==5 || velicina==0) return 5;
		suma+=niz[i];
	}
		pr=(float)suma/velicina;
	return pr;
}

int genijalci (struct Student *niz,int velicina,float pros){
	int i,j,indeks=0,indeks2=0,indeks3=0;
	float max=0;
	for(i=0;i<velicina;i++){
		if(niz[i].br_ocjena==0 || prosjek(niz[i].ocjene,niz[i].br_ocjena)<pros){
			for(j=i;j<velicina-1;j++){
				niz[j]=niz[j+1];
			}
			velicina--;
			i--;
		}
	}
	if(velicina==0)return 0;
		for(i=0;i<velicina;i++){
			if(prosjek(niz[i].ocjene,niz[i].br_ocjena)>max){
			max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			indeks=i;
			}
			else if(prosjek(niz[i].ocjene,niz[i].br_ocjena)==max){
				if(strcmp(niz[indeks].prezime,niz[i].prezime)>0){
					indeks=i;
					max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
				}
				else if(strcmp(niz[indeks].prezime,niz[i].prezime)==0 && strcmp(niz[indeks].ime,niz[i].ime)>0){
					indeks=i;
					max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
				}
			}
		}
		printf(""%s %s\n"",niz[indeks].prezime,niz[indeks].ime);
		max=0;
		indeks2=-1;
	
		for(i=0; i<velicina; i++){
			if(i==indeks)continue;
			else {
				indeks2=i;
				break;
			}
		}
		if(indeks2==-1)return velicina;
		max=prosjek(niz[indeks2].ocjene,niz[indeks2].br_ocjena);
		for(i=0; i<velicina; i++){
			if(i==indeks)continue;
			if(prosjek(niz[i].ocjene,niz[i].br_ocjena)>max){
				max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
				indeks2=i;
			}
		else if(prosjek(niz[i].ocjene,niz[i].br_ocjena)==max){
			if(strcmp(niz[indeks2].prezime,niz[i].prezime)>0){
				indeks2=i;
				max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			}
			else if(strcmp(niz[indeks2].prezime,niz[i].prezime)==0 && strcmp(niz[indeks2].ime,niz[i].ime)>0){
				indeks2=i;
				max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			}
		}
		}
		printf(""%s %s\n"",niz[indeks2].prezime,niz[indeks2].ime);
		max=0;
		indeks3=-1;
		for(i=0; i<velicina; i++){
			if(i==indeks || i==indeks2)continue;
			else {
				indeks3=i;
				break;
			}
		}
		if(indeks3==-1)return velicina;
		max=prosjek(niz[indeks3].ocjene,niz[indeks3].br_ocjena);
		for(i=0; i<velicina; i++){
			if(i==indeks || i==indeks2)continue;
			if(prosjek(niz[i].ocjene,niz[i].br_ocjena)>max){
			max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			indeks3=i;
			}
		else if(prosjek(niz[i].ocjene,niz[i].br_ocjena)==max){
			if(strcmp(niz[indeks3].prezime,niz[i].prezime)>0){
				indeks3=i;
				max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			}
			else if(strcmp(niz[indeks3].prezime,niz[i].prezime)==0 && strcmp(niz[indeks3].ime,niz[i].ime)>0){
				indeks3=i;
				max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
			}
		}
		}
		printf(""%s %s\n"",niz[indeks3].prezime,niz[indeks3].ime);
		return velicina;
}
int main() {
	struct Student studenti[6] ={
		{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
		{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
		{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5}, 
		{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
		{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
		{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
	};
	genijalci(studenti, 6, 6.5);
	return 0;
}
","#include <stdio.h>
#define epsilon 0.0001
#include <string.h>

struct Student{    
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};


/*Funckija racuna prosjek svakog studenta pojedinacno u zavsnosti koliko ima ocjena*/
float prosjek(int niz[],int vel){   
	int i=0,suma=0;
	if (vel==0) return 5;           
	for(i=0;i<vel;i++){
		if (niz[i]==5) return 5;    
		suma+=niz[i];     
	}
	return (float)suma/vel;         
}

/*Funkcija prima 2 studenta, vraca 1 ako prvi treba biti ispred drugog, odnosno 0 ako ne treba*/
int dalijeveci(struct Student pr, struct Student dr){  
     
        if(prosjek(pr.ocjene,pr.br_ocjena)>prosjek(dr.ocjene,dr.br_ocjena)) return 1;       
        if(prosjek(pr.ocjene,pr.br_ocjena)<prosjek(dr.ocjene,dr.br_ocjena)) return 0;       
  
     
        if(strcmp(pr.prezime,dr.prezime)>0) return 0;
        else if(strcmp(pr.prezime,dr.prezime)<0) return 1;
           
        
       
        if(strcmp(pr.ime,dr.ime)>0) return 0;            
        else if(strcmp(pr.ime,dr.ime)<0) return 1;
        else return 1;          
}
/*Funkcija prima niz struktura, velicinu niza i zadani prosjek*/
int genijalci(struct Student niz[], int vel, double prosjekk){  
    int i,j,indexprvi,indexdrugi,indextreci,indexmin=0;
    double maxprvi, maxdrugi, maxtreci,temp_prosjek,min=10;
	
	/*Izbacivanje iz niza ako je prosjek manji od zadanog*/
	for(i=0;i<vel;i++){ 
		if(prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena)>epsilon) {         
                for(j=i;j<vel-1;j++){           
                    niz[j]=niz[j+1];
                }
			vel--;
			i--;
		}
	}
  /*Trazimo min i upamtimo mu indeks*/
  for(i=0;i<vel;i++){ 
  float temp=prosjek(niz[i].ocjene,niz[i].br_ocjena);
      	if(min-temp>epsilon) {
      	    min=temp; indexmin=i;
      	}
  }
    
    /*Pamtimo index prvog clana tj najveceg studenta*/
    float max=5;
	if(vel>0) { 
	 indexprvi=indexmin;        
    for(i=0;i<vel;i++){
        int vr=dalijeveci(niz[i],niz[indexprvi]);
        if(vr==1)      
            indexprvi=i;     
            max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
	}
	
	/*Ispis najboljeg studenta*/
	if(i>0)
	printf(""\n%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);  
	}
	
	/*Ako je velicina veca od 1, treba jos jednog minimalno ispisati*/
	if(vel>1){ 
	indexdrugi=indexmin;
	for(i=0;i<vel;i++){
	    if(i==indexprvi) continue;  
	     int vr=dalijeveci(niz[i],niz[indexdrugi]);
        if(vr==1) 
        
            indexdrugi=i;
            max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
        }
	
		printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
	}
	/*Ako je velicina 3 ili vise, ispisujemo i treceg studenta*/
	if(vel>2){ 
    indextreci=indexmin;
    for(i=0;i<vel;i++){
        if(i==indexprvi ||i==indexdrugi) continue;      
         int vr=dalijeveci(niz[i],niz[indextreci]);
        if(vr==1) 
        
            indextreci=i;
            max=prosjek(niz[i].ocjene,niz[i].br_ocjena);
	}
     if(i>0)    
    	printf(""%s %s\n"",niz[indextreci].prezime,niz[indextreci].ime);
	}

 return vel;
}


int main() {
    struct Student studenti[5] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Eso"", ""Esic"", { 10, 10, 10, 10, 5}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 5, 6.5);
 
	return 0;
}
"
2087,99,99,0,77,A2016/Z3/Z3/student2111,A2016/Z3/Z3/student7165,"#include <stdio.h>
int main() {
	int nesto=0;
	int isti=1;
	int matrica[20][20];
	int broj_redova,broj_kolona;
	int j,k,l,m;
	int i=0;
	do{
		if(i==0){
			printf(""Unesite brojeve M i N: "");
			scanf(""%d %d"",&broj_redova,&broj_kolona);
			i=5;
		}
		else {
			printf(""Brojevi nisu u trazenom opsegu.\n"");
			printf(""Unesite brojeve M i N: "");
			scanf(""%d %d"",&broj_redova,&broj_kolona);
		}
	}while(broj_redova<=0 || broj_kolona<=0 || broj_kolona>200 || broj_redova>200);
	
	printf(""Unesite elemente matrice: "");
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for(i=0;i<broj_redova;i++){
		for(j=0;j<broj_kolona;j++){
			scanf(""%d"",&matrica[i][j]);
		}
	}

	for(i=0;i<broj_redova;i++){
		for(k=i+1;k<broj_redova;k++){
			isti=1;
			for(j=0;j<broj_kolona;j++){
				if((matrica[i][j])!=(matrica[k][j])) {
					isti=0;
				}
			}
		if(isti==1){
				for(j=k;j<broj_redova;j++){
					for(l=0;l<broj_kolona;l++){
						matrica[j][l]=matrica[j+1][l];

					}
				}
				k--;
				broj_redova--;
			}
		}
	}
	
	
	for(i=0;i<broj_kolona-1;i++){
		for(j=i+1;j<broj_kolona;j++){
			isti=1;
			for(k=0;k<broj_redova;k++){
				if((matrica[k][i])!=(matrica[k][j])) {
					isti=0;
				}
			}
			if(isti==1){
				for(m=j;m<broj_kolona;m++){
					for(l=0;l<broj_redova;l++){
						matrica[l][m]=matrica[l][m+1];
					}
				}
				j--;
				broj_kolona--;
			}
		}
	}

	for(i=0;i<broj_redova;i++){
		for(j=0;j<broj_kolona;j++){
			printf(""%5d"",matrica[i][j]);
		}
		printf(""\n"");
	}
	return 0;
	}
","#include <stdio.h>
int main() {
	int nesto=0;
	int isti=1;
	int matrica[20][20];
	int broj_redova,broj_kolona;
	int j,k,l,m;
	int i=0;
	do{
		if(i==0){
			printf(""Unesite brojeve M i N: "");
			scanf(""%d %d"",&broj_redova,&broj_kolona);
			i=5;
		}
		else {
			printf(""Brojevi nisu u trazenom opsegu.\n"");
			printf(""Unesite brojeve M i N: "");
			scanf(""%d %d"",&broj_redova,&broj_kolona);
		}
	}while(broj_redova<=0 || broj_kolona<=0 || broj_kolona>200 || broj_redova>200);
	
	printf(""Unesite elemente matrice: "");
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for(i=0;i<broj_redova;i++){
		for(j=0;j<broj_kolona;j++){
			scanf(""%d"",&matrica[i][j]);
		}
	}

	for(i=0;i<broj_redova;i++){
		for(k=i+1;k<broj_redova;k++){
			isti=1;
			for(j=0;j<broj_kolona;j++){
				if((matrica[i][j])!=(matrica[k][j])) {
					isti=0;
				}
			}
		if(isti==1){
				for(j=k;j<broj_redova;j++){
					for(l=0;l<broj_kolona;l++){
						matrica[j][l]=matrica[j+1][l];

					}
				}
				k--;
				broj_redova--;
			}
		}
	}
	
	
	for(i=0;i<broj_kolona-1;i++){
		for(j=i+1;j<broj_kolona;j++){
			isti=1;
			for(k=0;k<broj_redova;k++){
				if((matrica[k][i])!=(matrica[k][j])) {
					isti=0;
				}
			}
			if(isti==1){
				for(m=j;m<broj_kolona;m++){
					for(l=0;l<broj_redova;l++){
						matrica[l][m]=matrica[l][m+1];
					}
				}
				j--;
				broj_kolona--;
			}
		}
	}

	for(i=0;i<broj_redova;i++){
		for(j=0;j<broj_kolona;j++){
			printf(""%5d"",matrica[i][j]);
		}
		printf(""\n"");
	}
	return 0;
	}
"
2092,98,98,0,46,A2016/Z1/Z4/student3900,A2016/Z1/Z4/student2117,"#include <stdio.h>

int main() {
	float a,a1,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,r;
	
	printf(""Unesite broj n:"");
	  
	  	scanf(""%f"", &a);
	  	if(a<=0 || a>50)
	  	{
	  		printf(""Pogresan unos"");
	  	printf(""\nUnesite broj n:"");}
	  	while(a<=0 ||a>50);
	  	if(a>=1 && a<=50){
	  		b=1;
	  		k=1;
	  		n=2*a-5;
	  		e=1;
	  		m=2*a-5;
	  		n=a;
	  		printf("" "");
	  		for(a1=1;a1<=k;a1++){
	  			printf(""*"");
	  		}
	  		for(d=1;d<=2*a-3;d++){printf("" "");} printf(""*"");
	  		for(p=0;p<2*a-3;p++){printf("" "");} printf(""*""); printf(""\n"");
	  		for(j=0;j<a-2;j++){
	  			for(f=0;f<=j;f++){printf("" "");}
	  			printf(""*"");
	  			for(i=0; i<n;i++){printf("" "");}
	  			printf(""*"");c=c-2;
	  			for(g=0;g<2*g+1;g++){printf("" "");}
	  			printf(""*"");
	  			for(o=0;o<m;o++){
	  				printf("" "");}
	  			printf(""*"");
	  		}m=m-2;printf(""*"");
	  		b++;e++;
	  		printf(""\n"");}
	  		if(a>1){ for(p=1;p<r;p++){
	  			printf("" "");}
	  			printf(""*"");
	  			for(r=1;r<=2*a-3;r++)
	  			{
	  				printf("" "");
	  				
	  			}
	  			printf(""*"");
	  	}
	  return 0;
}
","#include <stdio.h>

int main() {
	float a,a1,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,r;
	
	printf(""Unesite broj n:"");
	  
	  	scanf(""%f"", &a);
	  	if(a<=0 || a>50)
	  	{
	  		printf(""Pogresan unos"");
	  	printf(""\nUnesite broj n:"");}
	  	while(a<=0 ||a>50);
	  	if(a>=1 && a<=50){
	  		b=1;
	  		k=1;
	  		n=2*a-5;
	  		e=1;
	  		m=2*a-5;
	  		n=a;
	  		printf("" "");
	  		for(a1=1;a1<=k;a1++){
	  			printf(""*"");
	  		}
	  		for(d=1;d<=2*a-3;d++){printf("" "");} printf(""*"");
	  		for(p=0;p<2*a-3;p++){printf("" "");} printf(""*""); printf(""\n"");
	  		for(j=0;j<a-2;j++){
	  			for(f=0;f<=j;f++){printf("" "");}
	  			printf(""*"");
	  			for(i=0; i<n;i++){printf("" "");}
	  			printf(""*"");c=c-2;
	  			for(g=0;g<2*g+1;g++){printf("" "");}
	  			printf(""*"");
	  			for(o=0;o<m;o++){
	  				printf("" "");}
	  			printf(""*"");
	  		}m=m-2;printf(""*"");
	  		b++;e++;
	  		printf(""\n"");}
	  		if(a>1){ for(p=1;p<r;p++){
	  			printf("" "");}
	  			printf(""*"");
	  			for(r=1;r<=2*a-3;r++)
	  			{
	  				printf("" "");
	  				
	  			}
	  			printf(""*"");
	  	}
	  return 0;
}
"
2100,61,61,0,26,A2016/Z3/Z1/student2900,A2016/Z3/Z1/student1313,"#include <stdio.h>
int daj_prost (){
	int i;
	static int broj = 2;
	while (1) {
		int pr = 1;
		for (i = 2; i < broj; i++){
			if (broj % i == 0){
				pr = 0;
			}
		}
		if (pr == 0){
				broj++;
		}
		else break;
	}
	broj++;
	return broj-1;
}

int main() {
	int A, B;
	int suma = 0;
	do {
		printf (""Unesite brojeve A i B: "");
		scanf (""%d %d"",&A,&B);
		if (A <= 0) printf (""A nije prirodan broj.\n"");
		else if (A >= B) printf(""A nije manje od B.\n"");
		else break;
	} while (1);
	while(1){
		int temp = daj_prost();
		if(temp > A && temp < B)
			suma += temp;
		if(temp >= B)
			break;
		
	}
   	printf (""Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
	return 0;
}
","#include <stdio.h>

int daj_prost () {
	static int br=2;
	int i;
	 while(1) {
	 	int prost=1;
	 	for (i=2;i<br;i++) {
	 		if(br%i==0){
	 			prost=0;
	 		}
	 	}
	 if (prost==0){
	 	br++;
	 }
	 else break;
	 }
	  br++;
	  return br-1;
}

int main() {
	int A,B,suma=0;
	do {
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"",&A,&B);
		if (A<=0) printf (""A nije prirodan broj.\n"");
		else if (A>=B) printf (""A nije manje od B.\n"");
		else break;
	} while (1);
	
	while(1){
		int C;
		  C=daj_prost();
		if (C>A && C<B) 
		  suma=suma+C;
	    if (C>=B) break;
	}
printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
	return 0;
}
"
2103,77,77,0,39,A2016/Z3/Z1/student7232,A2016/Z3/Z1/student4770,"#include<stdio.h>
int daj_prost () {
	int prost=1, n;
	static int br=1;
	while (1) {
		br++;
		if (br==2){
			return br;
		} else {
			for (n=2;n<br;n++) {
				if (br%n==0){
					prost=0;
					break;
				}
			}
			if (prost) {
				return br;
			} else {
				prost=1;
			}
		}
	}
}

int main () {
	int X,Y,zbir=0,br=0;
	
	/*UNOS INTERVALA*/
	do {
		printf (""Unesite brojeve A i B: "");
		scanf (""%d%d"", &X, &Y);
		if (X<1) {
			printf (""A nije prirodan broj.\n"");
		} else if (X>=Y) {
			printf (""A nije manje od B.\n"");
		}
	} while (X<1 || X>=Y || Y<=0);
	while (br<Y) {
		br=daj_prost ();
		if (br>X && br<Y) {
			zbir+=br;
		}
	}
	
	/*ISPPIS SUME*/
	printf (""Suma prostih brojeva izmedju %d i %d je %d."", X, Y, zbir);
	return 0;
}","#include <stdio.h>
int daj_prost(){
	int prost=1;
	int i;
	static int n=1;
	while(1){
		n++;
		if(n==2)
		return n;
		else {
			for(i=2;i<n;i++){
					if(n%i==0){
						prost=0;
						break;
					}
					
			}
		}
		if(prost) return n;	
		else 
		prost =1;
	}
}
int main(){
	int A,B,suma=0,n=0;
	do{
		printf(""\nUnesite brojeve A i B: "");
		scanf(""%d %d"", &A,&B);
		if(A>=B) printf(""A nije manje od B."");
		if(A<1) printf(""A nije prirodan broj."");
	}
	while(A>=B || A<=0);
	while(n<B){
		n=daj_prost();
		if(n>A && n<B){
			suma+=n;
		}
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."", A,B,suma);
	return 0;
}"
2106,90,90,0,65,A2016/Z3/Z1/student4888,A2016/Z3/Z1/student6995,"#include <stdio.h>

//int g=1;
int daj_prost () {
	int i, b=1, j;
	static int g=1;
	i=g;
	i++;
	for (; b>0;i++) {
		b=0;
		for (j=2; j<i; j++) {
			if (i%j == 0) b++;
			
		}
		
	} 
	i--;
	g=i;
	return i;
}

int main() {
//	printf(""Zadaća 3, Zadatak 1"");
	int a, b, c=0, suma=0;
	unos: {
		printf (""\nUnesite brojeve A i B: "");
		scanf (""%d"", &a);
		scanf (""%d"", &b);
		if ((int) a!=a || a<=0 ) {
			printf (""A nije prirodan broj. "");
			goto unos;
		}
		if (a>=b) {
			printf (""A nije manje od B. "");
			goto unos;
		}
		if ((int) b!=b || b<=0) {
			printf (""B nije prirodan broj. "");
			goto unos;
		}
	}
	
	/*prost: {
		c=daj_prost();
		if (c<b) {
			suma+=c;
			goto prost;
		}
	}//napomena
*/	
/*	do {
	suma+=c;
		prost: {
			c=daj_prost();
			if (c<a) goto prost;
		}
	} while (c<b);
	*/
	
	do {
		suma+=c;
	//	printf (""\nS:%d"", suma);
		do {
			c=daj_prost();
	//		printf (""\nC:%d"", c);
		} while (c<=a);
	} while (c<b);
	
	printf (""Suma prostih brojeva izmedju %d i %d je %d."", a, b, suma);
	return 0;
}
/*

int main() {
	int x, i;
	scanf (""%d"", &x);
	for (i=0; i<x; i++)	printf (""\nR:%d, %d"", daj_prost(), g);
	return 0;
}
*/","#include <stdio.h>
int daj_prost (){
	int k, a, e=1;
	static int r=1;
	k=r;
	k++;
	for( ;e>0;k++) {
		e=0;
		for(a=2;a<k;a++){
			if(k%a ==0) e++;
		}
	}
	k--;
	r=k;
	return k;
}
int main() {
	//printf(""zadaca broj 3, zadatak 1"");//
	int e,f,g=0,suma=0;
	unos: {
		printf(""\nUnesite brojeve A i B: "");
		scanf(""%d"",&e);
		scanf(""%d"",&f);
		if ((int) e!=e || e<=0) {
			printf(""A nije prirodan broj. "");
			goto unos;
		}
		if (e>=f) {
			printf(""A nije manje od B. "");
			goto unos;
		}
		if ((int) f!=f || f<=0) {
			printf(""B nije prirodan broj. "");
			goto unos;
		}
	}
	do {
		suma+=g;
	do {
		g=daj_prost();
	} while (g<=e);
		
	} while(g<f);
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",e,f,suma);
	return 0;
}
"
2117,77,77,0,91,A2016/Z4/Z3/student3872,A2016/Z4/Z3/student1616,"#include <stdio.h>
void unesi(char *niz, int velicina)
{
	char znak=getchar();
	int i=0;
	if(znak=='\n') znak=getchar();
	while(i<velicina-1 && znak!='\n')
	{
		niz[i]=znak;
		i++;
	znak=getchar();
	}
	niz[i]='\0';
}

int DaLiSuIsti(char *s, char *pomocni)
{
	int isti=1;
	while(*pomocni!='\0')
	{
		if(*pomocni++!=*s++)
		{
			isti=0;
			break;
		}
if(*pomocni=='\0' && (*s!=' ' && *s!='\0' ) )
{
	isti=0;
	break;
}
	}
	return isti;
}

void ZamijeniRijec(char *recenica, 	char *rijec)
{
	while(*rijec!='\0')
	{
		*recenica++=*rijec++;
	}
	recenica++;
}

int Rjecnik(char **rijeci, char ** zamjene, int broj_rijeci)
{
	int i, isti=1;
	char *pomocni, *temp;
	for(i=0;i<broj_rijeci;i++)
	{
		pomocni=rijeci[i];
		temp=zamjene[i];
		while(*pomocni!='\0' || *temp!='\0')
		{if(*pomocni++!=*temp++) isti=0;
		
	}
	if(isti==0) break;
}
return isti;}

char *zamjena_rijeci(char *tekst, char **rijeci, char **zamjene, int broj_rijeci)
{
char *s=tekst;
char *pomocni, *pok, *kpok, *temp;
int i, broj;
if(Rjecnik(rijeci, zamjene, broj_rijeci)) return tekst;
while(*s!='\0')
{if(s==tekst || *(s-1)==' ')
{
	while(*s==' ') s++;
	pok=s;
	for(i=0;i<broj_rijeci;i++)
	{
		broj=0;
		s=pok;
		temp=rijeci[i];
		if(DaLiSuIsti(s,pomocni))
		{
			kpok=pok;
			while(*pomocni!='\0')
			{
				broj++;
				pomocni++;
		}
		temp=kpok+broj;
		s--;
		while(kpok!=s)
		{
			*temp--=*kpok--;
		}
		pomocni=zamjene[i];
		ZamijeniRijec(pok, pomocni);
	}
}
}
s++;
}
return tekst;
}
int main() {
	int i;
char text[100];
printf(""Unesite neki text: "");
unesi(text, 100);
char *rijeci[3]={""Zasto"", ""me"", ""rani""};
char *zamjene[3]={""Izdrzati"", ""necu"", ""moci""};
printf(""%s"", zamjena_rijeci(text, rijeci, zamjene, 3));
return 0;
}
","#include <stdio.h>
#include <ctype.h>

//Provjeravamo da li su rijeci iz ""rijeci"" i ""teksta"" iste//
int JesuIsti(char *p,char *temp)
{
	int	isti=1;

		while(*temp!='\0')
		{
			if(*temp++!=*p++){isti=0;break;}
			if(*temp=='\0' && (*p!=' ' && *p!='\0')){isti=0;break;}
		}
	return isti;
		
}
//Upisujemo rijezi iz ""zamjene"" u mjesto koje smo ostavili za zamjenu//
void ZamijeniRijeci(char *recenica,char *rijec)
{
	while(*rijec!='\0')
	{
		*recenica++=*rijec++;
	}
	recenica++;
}
//Vrsimo poredbu rijeci iz ""rijeci"" i ""zamjena""//
int Rjecnik(char **rijeci,char **zamjene,int broj_rijeci)
{
	int i,isti=1;
	char *pom,*pom1;
	
		for(i=0;i<broj_rijeci;i++)
		{
			pom=rijeci[i];
			pom1=zamjene[i];
			while(*pom!='\0' || *pom1!='\0')
			{
				if(*pom++!=*pom1++)isti=0;
			}
			if (isti==0) break;
		}
		return isti;
}

//Algoritam za izbacivanje te ubacivanje u niz rijeci koje treba zamjeniti//
char* zamjena_rijeci(char* tekst, char** rijeci,char** zamjene, int broj_rijeci)
{
	char *p=tekst;
	char *temp,*pt,*kt,*ht;
	int i,br;
	     
	     
	    if(Rjecnik(rijeci,zamjene,broj_rijeci)) return tekst;
	     
		while(*p!='\0')
		{
			if(p==tekst || *(p-1)==' ')
			{
				while(*p==' ') p++;
				pt=p;
				
				for(i=0;i<broj_rijeci;i++)
				{	
					br=0;
					p=pt;
					temp=rijeci[i];
					
					if(JesuIsti(p,temp))
					{	
						kt=pt;
						
						while(*p!='\0' && *p!=' ') p++;
						
						
						while(*p!='\0')
						{
							*kt++=*p++;
						}						
						*kt='\0';
						
						p=pt;
						temp=zamjene[i];
						while(*temp!='\0')
						{
							br++;
							temp++;
						}
					
						ht=kt+br;
						p--;
						
						while(kt!=p)
						{
							*ht--=*kt--;
						}
						
						temp=zamjene[i];
						ZamijeniRijeci(pt,temp);			
					}
				}
			}
			p++;
				
		}
	return tekst;
}

//Testni main//
int main() {
	
	char* rijeci[3] = { ""beli"", ""sneg"",""breg""};
	char* zamjene[3] = { ""bijeli"", ""snijeg"",""brijeg""};
	char tekst[100] = ""beli sneg je pokrio beli breg"";
	printf(""'%s'"", zamjena_rijeci(tekst, rijeci, zamjene, 3));
	
	return 0;
}"
2122,90,90,0,68,A2016/Z3/Z3/student7232,A2016/Z3/Z3/student6999,"#include <stdio.h>
int main () {
	int mat[200][200], n, m, M, N, x, y, p=0, temp;
	int brojac=0;
	
	/*UNOS DIMENZIJA*/
	do {
		printf (""Unesite brojeve M i N: "");
		scanf (""%d %d"", &M, &N);
		if(M<1 || M>200 || N<1 || N>200) {
			printf (""Brojevi nisu u trazenom opsegu.\n"");
		}
	} while (M<1 || M>200 || N<1 || N>200);
	
	/*UNOS ELEMENATA*/
	printf (""Unesite elemente matrice: "");
	for (n=0; n<M; n++) {
		for (m=0; m<N; m++) {
			scanf (""%d"", &mat[n][m]);
		}
	}
	
	/*POREĐENJE I IZBACIVANJE REDOVA*/
	for (n=0; n<M; n++) {
		for (m=n+1; m<M; m++) {
			brojac=0;
			for (p=0; p<N; p++) {
				if (mat[n][p]==mat[m][p]) {
					brojac++;
				} if (brojac==N) {
					for (y=m+1; y<M; y++) {
						for (x=0; x<N; x++) {
							temp=mat[y-1][x];
							mat[y-1][x]=mat[y][x];
							mat[y][x]=temp;
						}
					}
					M--;
					m--;
				}
			}
		}
	}
	
	/*POREĐENJE I IZBACIVANJE KOLONA*/
	for (n=0; n<N; n++) {
		for (m=n+1; m<N; m++) {
			brojac=0;
			for (p=0; p<M; p++) {
				if (mat[p][n]==mat[p][m]) {
					brojac++;
				} if (brojac==M) {
					for (y=m+1; y<N; y++) {
						for (x=0; x<M; x++) {
							temp=mat[x][y-1];
							mat[x][y-1]=mat[x][y];
							mat[x][y]=temp;
						}
					}
					N--;
					m--;
				}
			}
		}
	}
	
	/*ISPIS MATRICE*/
	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (n=0; n<M; n++) {
		for (m=0; m<N; m++) {
			printf (""%5d"", mat[n][m]);
		}
		printf (""\n"");
	}
	return 0;
}","#include <stdio.h>

int main() {
	int mat[200][200],i,j,M,N,brojac=0,k=0,x,y,privremena;
do{
	printf(""Unesite brojeve M i N: "");
	scanf(""%d %d"",&M,&N);
	if((M<=0 || N<=0 || M>200 || N>200)) {
	printf(""Brojevi nisu u trazenom opsegu.\n"");}
}while(M<=0 || N<=0 || M>200 || N>200);
	
printf(""Unesite elemente matrice: "");
for(i=0;i<M;i++){
	for(j=0;j<N;j++){
		scanf(""%d"",&mat[i][j]);
	}
}
	/*poređenje redova*/ 
for(i=0;i<M;i++){
	for(j=i+1;j<M;j++){
		brojac=0;
			for(k=0;k<N;k++){
				if(mat[i][k]==mat[j][k]){brojac++;}
		/*izbacivanje reda*/
		if(brojac==N){
			for(x=j+1;x<M;x++){
				for(y=0;y<N;y++){
					privremena=mat[x-1][y];
					mat[x-1][y]=mat[x][y];
					mat[x][y]=privremena;
				}
			}
			M--;
			j--;
			}
		}
	}
}

	/*poređenje kolona*/
for(i=0;i<N;i++){
	for(j=i+1;j<N;j++){
		brojac=0;
		for(k=0;k<M;k++){
			if(mat[k][i]==mat[k][j]){brojac++;}
			/*izbacivanje kolone*/
			if(brojac==M){
				for(x=j+1;x<N;x++){
					for(y=0;y<M;y++){
						privremena=mat[y][x-1];
						mat[y][x-1]=mat[y][x];
						mat[y][x]=privremena;
					}
				}
			N--;
			j--;
			}
		}
	}
}
	
printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");	
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			printf(""%5d"",mat[i][j]);
		}
		printf(""\n"");
	}
	return 0;
}"
2123,97,97,0,22,A2016/Z2/Z1/student6151,A2016/Z2/Z1/student9538,"#include <stdio.h>
#include <stdlib.h>
int main() {
	
	int n, c, b,broj=0;
	
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	
	int k=1;
	
	while(n!=0){
		c=abs(n)%10;
     	n=abs(n)/10;
     	if(n==0)break;
     	b=abs(n)%10;
     	
     	broj=broj+(abs(c-b)*k);
     	k=k*10;
     	
	}
	printf(""%d"", broj);
	
	return 0;
}
","#include <stdio.h>
#include<stdlib.h>

int main() {
	int n,varijabla1,varijabla2,br=0;
	printf(""Unesite broj: "");
	scanf(""%d"",&n);
	int w=1;
	while(n!=0) {
		varijabla1=abs(n)%10;
		n=abs(n)/10;
		if(n==0) break;
		varijabla2=abs(n)%10;
		br=br+(abs(varijabla1-varijabla2)*w);
		w=w*10;}
		printf(""%d"",br);
	return 0;
}
"
2126,88,88,0,55,A2016/Z3/Z2/student3567,A2016/Z3/Z2/student8357,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define brel 10
#define brel2 20
void ubaci(int *p,int vel){
	int i,cifra,cifra1,cifra2=0;
	for (i=vel-1;i>=0;i--){
		*(p+2*i)=*(p+i);
	}
	for (i=0;i<vel*2;i++){
		if (i%2==1){
			cifra=*(p+i-1);
			while (cifra!=0){
				cifra1=cifra%10;
				cifra2+=cifra1;
				cifra/=10;
		    }
		    cifra2=abs(cifra2);
			*(p+i)=cifra2;
			cifra2=0;
		}
	}
}
int izbaci(int *p,int vel){
	int i,j,k,a=0,b=1,c;
	for (i=0;i<vel;i++){
		a=0;
		b=1;
		for (j=1;j<10000;j++){
			if (j==1) c=j;
			else {
				c=a+b;
				a=b;
				b=c;
			}
			if (*(p+i)==c){
				for (k=i;k<vel-1;k++){
						*(p+k)=*(p+k+1);
				}
				vel--;
				i--;
				break;
			}
		}
	}
	return vel;
}
 
int main() {
	int niz[20],i,g;
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0;i<10;i++){
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,brel);
	g=izbaci(niz,brel2);
	printf (""Modificirani niz glasi: "");
	for (i=0;i<g;i++){
		if (i<(g-1)){
			printf (""%d, "",niz[i]);
	    }
	    else {
	    	printf (""%d. "",niz[i]);
	    }
	}
 
	return 0;
}","#include <stdio.h>
#include <math.h>

void ubaci(int *niz,int velicina){
	int i,cifra,clan,suma=0;
	for (i=velicina-1;i>=0;i--){
		*(niz+2*i)=*(niz+i);
	}
	for (i=0;i<velicina*2;i++){
		if (i%2==1){
			clan=*(niz+i-1);
			while (clan!=0){
				cifra=clan%10;
				suma+=cifra;
				clan=clan/10;
		    }
		    suma=fabs(suma);
			*(niz+i)=suma;
			suma=0;
		}
	}
}

int izbaci(int *niz,int velicina){
	int i,j,k,prvi=0,drugi=1,slijedeci;
	for (i=0;i<velicina;i++){
		prvi=0;
		drugi=1;
		for (j=1;j<10000;j++){
			if (j==1) slijedeci=j;
			else {
				slijedeci=prvi+drugi;
				prvi=drugi;
				drugi=slijedeci;
			}
			if (*(niz+i)==slijedeci){
				for (k=i;k<velicina-1;k++){
						*(niz+k)=*(niz+k+1);
				}
				velicina--;
				i--;
				break;
			}
	    }
    }
}
int main() {
	int niz[20],i,y,velicina1=10,velicina2=20;
 
	/* Unos elemenata niza */ 
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0;i<10;i++){
		scanf(""%d"",&niz[i]);
	}
	
	/* Poziv funkcije ubaci */ 
	ubaci(niz,velicina1);
 
	/* Poziv funkcije izbaci */ 
	y=izbaci(niz,velicina2);
 
    /* Ispis modificiranog niza */
	printf (""Modificirani niz glasi: "");
	for (i=0;i<y;i++){
		if (i<(y-1)){
			printf (""%d, "",niz[i]);
	    }
	    else {
	    	printf (""%d. "",niz[i]);
	    }
	}
	return 0;
}

"
2138,96,96,0,17,A2016/Z1/Z2/student6364,A2016/Z1/Z2/student4471,"#include <stdio.h>

int main() {
	float a1, b1, a2, b2, y, x;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
	if(a1==a2 && b1!=b2) {
		printf(""Paralelne su"");
	} 
	else if(a1==a2 && b1==b2) { 
		printf (""Poklapaju se"");
	}
	else { x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x, y);
	}
return 0;
}","#include <stdio.h>

int main() {
	float a1,b1,a2,b2,y,x;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	
	
	
	if(a1==a2 && b1!=b2){
		printf(""Paralelne su"");
	}else if (a1==a2 && b1==b2){
		
		printf(""Poklapaju se"");
	}else{
		
		x = (b2-b1)/(a1-a2);
		y = a1*x + b1 ;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
		
		
		
		
		
	}
	return 0;
}
"
2146,99,99,0,228,A2016/Z1/Z1/student7735,A2016/Z1/Z1/student9498,"#include <stdio.h>
int main() 
{
    double TPP, TDP, TP, TZ, TZA, BPP, BDP, BP, BZ, BZA, MPP, MDP, MP, MZ, MZA, TUK, MUK, BUK, TO, MO, BO;
    printf(""Unesite bodove za Tarika: "");
    printf(""\nI parcijalni ispit: "");
    scanf(""%lf"", &TPP);
    if(TPP<0 || TPP>20) 
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%lf"", &TDP);
    if(TDP<0 || TDP>20)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%lf"", &TP);
    if(TP<0 || TP>10) 
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%lf"", &TZ);
    if(TZ<0 || TZ>20) 
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%lf"", &TZA);
    if(TZA<0 || TZA>40)
    { 
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Unesite bodove za Bojana: "");
    printf(""\nI parcijalni ispit: "");    
    scanf(""%lf"", &BPP);
    if(BPP<0 || BPP>20)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%lf"", &BDP);
    if(BDP<0 || BDP>20)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%lf"", &BP);
    if(BP<0 || BP>10)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%lf"", &BZ);
    if(BZ<0 || BZ>10)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%lf"", &BZA);
    if(BZA<0 || BZA>40)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }

    printf(""Unesite bodove za Mirzu:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%lf"", &MPP);
    if(MPP<0 || MPP>20)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%lf"", &MDP);
    if(MDP<0 || MDP>20)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: ""); 
    scanf(""%lf"", &MP);
    if(MP<0 || MP>10)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%lf"", &MZ);
    if(MZ<0 || MZ>10)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%lf"", &MZA);
    if(MZA<0 || MZA>40)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    
    TUK=TPP+TDP+TZ+TP+TZA;
    MUK=MPP+MDP+MZ+MP+MZA;
    BUK=BPP+BDP+BZ+BP+BZA;
    
    if (TUK<55) {
        TO=5;
    }
    if(TUK>=55 && TUK<65) {
            TO=6;
    }
    if(TUK>=65 && TUK<75) {
            TO=7;
    }
    if(TUK>=75 && TUK<85) {
            TO=8;
    }
    if(TUK>=85 && TUK<92) {
            TO=9;
    }
    if(TUK>=92 && TUK<100 ) {
            TO=10;
    }
    if(TUK<55) {
            TO=5;
    }
    if(MUK>=55 && MUK<65) {
            MO=6;
    }
    if(MUK>=65 && MUK<75) {
            MO=7;
    }
    if(MUK>=75 && MUK<85) {
            MO=8;
    }
    if(MUK>=85 && MUK<92) {
            MO=9;
    }
    if(MUK>=92 && MUK<100) { 
            MO=10;
    }
    
    if(BUK<55) {
            BO=5;
    }
        
    if(BUK>=55 && BUK<65) {
            BO=6;
    }
    if(BUK>=65 && BUK<75) {
           BO=7;
    }
    if(BUK>=75 && BUK<85) {
            BO=8;
    }
    if(BUK>=85 && BUK<92) {
            BO=9;
    }
    if(BUK>=92 && BUK<100 ) {
            BO=10;
    }
    if((MUK<55) && (BUK<55) && (TUK<55)) {
                    printf(""Nijedan student nije polozio.\n"");
                    return 0;
                }
                else if((MUK<55) && (BUK>=55) && (TUK<55)) {
                    printf(""Jedan student je polozio.\n"");
                    return 0;
                }
                else if((MUK>=55) && (BUK<55) && (TUK<55)) {
                    printf(""Jedan student je polozio.\n"");
                    return 0;
                }
                else if((MUK<55) && (BUK<55) && (TUK>=55)) {
                    printf(""Jedan student je polozio.\n"");
                    return 0;
                }
                else if((MUK>=55) && (BUK>=55) && (TUK<55)) {
                    printf(""Dva studenta su polozila.\n"");
                    return 0;
                }
                else if((MUK>=55) && (BUK<55) && (TUK>=55)) {
                    printf(""Dva studenta su polozila.\n"");
                     return 0;
                }
                else if((MUK<55) && (BUK>=55) && (TUK>=55)) {
                    printf(""Dva studenta su polozila.\n"");
                     return 0;
                }
                else if((TUK>=55) && (MUK>=55) && (BUK>=55)) {
            printf(""Sva tri studenta su polozila.\n"");
    }
    
    if((MO==BO) && (MO==TO)) {
            printf(""Sva tri studenta imaju istu ocjenu.\n"");
    }
        
   else if((MO==BO) && (MO!=TO)){
            printf(""Dva od tri studenta imaju istu ocjenu.\n"");
    }
    
    else if((MO==TO) && (MO!=BO)){
             printf(""Dva od tri studenta imaju istu ocjenu.\n"");
                }
    else if((TO==BO) && (TO!=MO)){
                    printf(""Dva od tri studenta imaju istu ocjenu.\n"");
         }
                    
    else if((TO!=BO && MO!=BO && MO!=TO)) {
                    printf(""Svaki student ima razlicitu ocjenu.\n"");
                    return 0;
                }

        
    
return 0;
}","#include <stdio.h>
int main() 
{
    double TPP, TDP, TP, TZ, TZA, BPP, BDP, BP, BZ, BZA, MPP, MDP, MP, MZ, MZA, TUK, MUK, BUK, TO, MO, BO;
    printf(""Unesite bodove za Tarika: "");
    printf(""\nI parcijalni ispit: "");
    scanf(""%lf"", &TPP);
    if(TPP<0 || TPP>20) 
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%lf"", &TDP);
    if(TDP<0 || TDP>20)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%lf"", &TP);
    if(TP<0 || TP>10) 
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%lf"", &TZ);
    if(TZ<0 || TZ>20) 
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%lf"", &TZA);
    if(TZA<0 || TZA>40)
    { 
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Unesite bodove za Bojana: "");
    printf(""\nI parcijalni ispit: "");    
    scanf(""%lf"", &BPP);
    if(BPP<0 || BPP>20)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%lf"", &BDP);
    if(BDP<0 || BDP>20)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%lf"", &BP);
    if(BP<0 || BP>10)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%lf"", &BZ);
    if(BZ<0 || BZ>10)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%lf"", &BZA);
    if(BZA<0 || BZA>40)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }

    printf(""Unesite bodove za Mirzu:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%lf"", &MPP);
    if(MPP<0 || MPP>20)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%lf"", &MDP);
    if(MDP<0 || MDP>20)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: ""); 
    scanf(""%lf"", &MP);
    if(MP<0 || MP>10)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%lf"", &MZ);
    if(MZ<0 || MZ>10)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%lf"", &MZA);
    if(MZA<0 || MZA>40)
    {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    
    TUK=TPP+TDP+TZ+TP+TZA;
    MUK=MPP+MDP+MZ+MP+MZA;
    BUK=BPP+BDP+BZ+BP+BZA;
    
    if (TUK<55) {
        TO=5;
    }
    if(TUK>=55 && TUK<65) {
            TO=6;
    }
    if(TUK>=65 && TUK<75) {
            TO=7;
    }
    if(TUK>=75 && TUK<85) {
            TO=8;
    }
    if(TUK>=85 && TUK<92) {
            TO=9;
    }
    if(TUK>=92 && TUK<100 ) {
            TO=10;
    }
    if(TUK<55) {
            TO=5;
    }
    if(MUK>=55 && MUK<65) {
            MO=6;
    }
    if(MUK>=65 && MUK<75) {
            MO=7;
    }
    if(MUK>=75 && MUK<85) {
            MO=8;
    }
    if(MUK>=85 && MUK<92) {
            MO=9;
    }
    if(MUK>=92 && MUK<100) { 
            MO=10;
    }
    
    if(BUK<55) {
            BO=5;
    }
        
    if(BUK>=55 && BUK<65) {
            BO=6;
    }
    if(BUK>=65 && BUK<75) {
           BO=7;
    }
    if(BUK>=75 && BUK<85) {
            BO=8;
    }
    if(BUK>=85 && BUK<92) {
            BO=9;
    }
    if(BUK>=92 && BUK<100 ) {
            BO=10;
    }
    if((MUK<55) && (BUK<55) && (TUK<55)) {
                    printf(""Nijedan student nije polozio.\n"");
                    return 0;
                }
                else if((MUK<55) && (BUK>=55) && (TUK<55)) {
                    printf(""Jedan student je polozio.\n"");
                    return 0;
                }
                else if((MUK>=55) && (BUK<55) && (TUK<55)) {
                    printf(""Jedan student je polozio.\n"");
                    return 0;
                }
                else if((MUK<55) && (BUK<55) && (TUK>=55)) {
                    printf(""Jedan student je polozio.\n"");
                    return 0;
                }
                else if((MUK>=55) && (BUK>=55) && (TUK<55)) {
                    printf(""Dva studenta su polozila.\n"");
                    return 0;
                }
                else if((MUK>=55) && (BUK<55) && (TUK>=55)) {
                    printf(""Dva studenta su polozila.\n"");
                     return 0;
                }
                else if((MUK<55) && (BUK>=55) && (TUK>=55)) {
                    printf(""Dva studenta su polozila.\n"");
                     return 0;
                }
                else if((TUK>=55) && (MUK>=55) && (BUK>=55)) {
            printf(""Sva tri studenta su polozila.\n"");
    }
    
    if((MO==BO) && (MO==TO)) {
            printf(""Sva tri studenta imaju istu ocjenu.\n"");
    }
        
   else if((MO==BO) && (MO!=TO)){
            printf(""Dva od tri studenta imaju istu ocjenu.\n"");
    }
    
    else if((MO==TO) && (MO!=BO)){
             printf(""Dva od tri studenta imaju istu ocjenu.\n"");
                }
    else if((TO==BO) && (TO!=MO)){
                    printf(""Dva od tri studenta imaju istu ocjenu.\n"");
         }
                    
    else if((TO!=BO && MO!=BO && MO!=TO)) {
                    printf(""Svaki student ima razlicitu ocjenu.\n"");
                    return 0;
                }

        
    
return 0;
}"
2149,85,85,0,116,A2016/Z2/Z2/student5789,A2016/Z2/Z2/student2585,"#include <stdio.h>
#include <stdlib.h>
#define PI 3.1415926


int main() 
{
int stepen=0,minuta=0,sekunde=0;
int i,j,n=0;
double radijan,a=0,sekunda1=0, sekunda2=0, c=0;

radijan=(float)180/PI;
double niz[500];

do
{
printf(""Unesite broj uglova: "");
scanf(""%d"" , &n);
} while(n<1 || n>500);


for(i=0 ; i<n ; i++)
{
scanf(""%lf"" , &niz[i]); 
niz[i]=niz[i]*radijan;
}

printf(""Uglovi su: \n"");

for(i=0 ; i<n ; i++)
{
	
if(niz[i]>=0)
	{
a=niz[i];
stepen=(int)a;
c=(a-stepen)*60;
minuta=(int)c;
sekunda1=(c-minuta)*60;
sekunda2=(sekunda1-(int)sekunda1)*10;

if(sekunda2>=5)
{
	sekunde=(int)sekunda1+1;
}

else
{
sekunde=(int)sekunda1;	
}

if(sekunde==60)
{
	sekunde=0;
	minuta++;
	if(minuta==60)
	{
		minuta=0;
		stepen++;
	}
}


if(sekunde>30)
{
	for(j=i; j<n-1; j++)
	{
		niz[j]=niz[j+1];
	}
	
n--;
i--;
continue;
}
 printf(""%d stepeni %d minuta %d sekundi \n"" , stepen,minuta,sekunde);
 
}





if(niz[i]<0)
{
a=niz[i];
stepen=(int)a;
c=(a-stepen)*(-1)*60;
minuta=(int)c;
sekunda1=(c-minuta)*60;
sekunda2=(sekunda1-(int)sekunda1)*10;


if(sekunda2>=5)
{
	sekunde=(int)sekunda1+1;
}

else
{
sekunde=(int)sekunda1;	
}

if(sekunde==60)
{
	sekunde=0;
	minuta++;
	if(minuta==60)
	{
		minuta=0;
		stepen--;
	}
}


if(sekunde>30)
{
	for(j=i; j<n-1;j++)
	{
		niz[j]=niz[j+1];
	}
n--;
i--;
continue;
}


 printf(""%d stepeni %d minuta %d sekundi\n"" , stepen,minuta,sekunde);

}
}


	return 0;

}
","#include <stdio.h>

#define PI 3.1415926

int main() {
	int n=0, i, j, stepen=0, minuta=0, sekunde=0;
	double rad, a=0, sekunda=0, sekunda1=0, c=0;
	rad=(double)180/PI;
	double niz[500];
	do
	{
		printf(""Unesite broj uglova: "");
		scanf(""%d"", &n);
		
	} while(n<1 || n>500);
	
	for(i=0; i<n; i++)
{
	scanf(""%lf"", &niz[i]);
	niz[i]=niz[i]*rad;

}
printf(""Uglovi su: \n"");
for(i=0; i<n; i++)
{
	if(niz[i]>=0)
	{
	a=niz[i];
	stepen=(int)a;
	c=(a-stepen)*60;
	minuta=(int)c;
	sekunda=(c-minuta)*60;
	sekunda1=(sekunda-(int)sekunda)*10;
		if(sekunda1>=5)
		{
		sekunde=(int)sekunda+1;
		}
		
		else
		{ 
			sekunde=(int)sekunda;
		}
		
		if(sekunde==60)
		{
			sekunde=0;
			minuta++;
			if (minuta==60)
			{
				minuta=0;
				stepen++;
			}
		}
			
		
		if(sekunde>30)
		{
			for(j=i; j<n-1; j++)
			{
			niz[j]=niz[j+1];
			
			}
		n--;
		i--;
		continue;
		}
	
		printf(""%d stepeni %d minuta %d sekundi \n"", stepen, minuta, sekunde);
	}
	
		if(niz[i]<0)
	{
	a=niz[i];
	stepen=(int)a;
	c=(a-stepen)*(-1)*60;
	minuta=(int)c;
	sekunda=(c-minuta)*60;
	sekunda1=(sekunda-(int)sekunda)*10;
		if(sekunda1>=5)
		{
		sekunde=(int)sekunda+1;
		}
		
		else
		{ 
			sekunde=(int)sekunda;
		}
		
		if(sekunde==60)
		{
			sekunde=0;
			minuta++;
			if (minuta==60)
			{
				minuta=0;
				stepen--;
			}
		}
			
		
		if(sekunde>30)
		{
			for(j=i; j<n-1; j++)
			{
			niz[j]=niz[j+1];
			
			}
		n--;
		i--;
		continue;
		}
	
		printf(""%d stepeni %d minuta %d sekundi\n"", stepen, minuta, sekunde);
	}
	

}


	return 0;
}
"
2175,22,22,0,60,A2016/Z5/Z3/student8357,A2016/Z5/Z3/student9538,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};

char unesi(char niz[], int velicina) {
    
	char znak = getchar();
	if(velicina<0) return znak;
	if (znak == '\n') znak = getchar();
	int i = 0,k=0;
	while (i < velicina-1 && znak != '\n') {
		niz[i] = znak;
		i++;
		znak = getchar();
		k++;
	}

	niz[k] = '\0';
	return znak;
}

void ocisti(char znak){
	while(znak!='\n')
		znak=getchar();
}

int ucitaj_datoteku(struct Cas raspored[]){
	FILE *ulaz=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL)
		return 0;
	int kap=KAPACITET;
	int vel=sizeof (struct Cas);
	int ucitano;
	ucitano=fread(raspored,vel,KAPACITET,ulaz);
	fclose(ulaz);
	return ucitano;
}
int mmm(int d){
    if(d==0) return -1;
    else return 0;
}
int MAX(struct Cas raspored[], int broj_casova){
    int brojac=1;
      int i,j,max=0,indexmaxa=0;
    for (i=0; i<broj_casova;i++){
        brojac++;
            if (raspored[i].kraj.sati>max ){
                max=raspored[i].kraj.sati;
                indexmaxa=i;
}}
max=max-mmm(raspored[indexmaxa].kraj.minute);
return max;

}

int MIN(struct Cas raspored[], int broj_casova){
     int i,j,min=25;
    for (i=0; i<broj_casova;i++)
            if (raspored[i].pocetak.sati<min)
            	min=raspored[i].pocetak.sati;
    return min;
}
void ispisss(){
    printf(""\n       PON       UTO       SRI       CET       PET       SUB\n"");
}
void ispispr(char *pr){
    printf(""%-10s"",pr);
}
void ispispraz(int d){
     printf(""          "");
}
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
    int i,j, k;
   int max=MAX(raspored,broj_casova);
   int min=MIN(raspored,broj_casova);
       ispisss();
    for(i=min;i<=max;i++){
         if(i<10) printf(""9:00   "");
             else printf(""%d:00  "",i);
        for(j=1;j<7;j++){
			
                for(k=0;k<broj_casova;k++)
                    if ( raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j  && raspored[k].kraj.sati>=i){
                            ispispr(raspored[k].predmet);
                            break;
                            ispispraz(10);
                    }
                    if (k==broj_casova)
                       ispispraz(10);
            }
        printf(""\n"");
    }
}


    void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
        int i;
    printf(""Uneseni su casovi: "");
        int k=1;
        for(i=0;i<broj_casova;i++){
            if(raspored[i].dan_u_sedmici==dan){
            	int sat=raspored[i].pocetak.sati;
            	int min=raspored[i].pocetak.minute;
                printf(""\n%d) %s ("",k++,raspored[i].predmet);
                 if(sat<10) printf(""0"");
                 printf(""%d:"",sat);
                  if(min<10) printf(""0"");
                 printf(""%d-"",min);
                 if(raspored[i].kraj.sati<10) printf(""0"");
                 printf(""%d:"",raspored[i].kraj.sati);
                  if(raspored[i].kraj.minute<10) printf(""0"");
                 printf(""%d)\n"",raspored[i].kraj.minute);
            }
        }
    }


void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,j=0;
	for(i=0; i<broj_casova; i++){
		if (raspored[i].dan_u_sedmici==dan) j++;
		if (redni_broj==j){
		    for(;i<broj_casova-1;i++)
			    raspored[i]=raspored[i+1];
		    break;
		}
	}
}

int PorediVrj(struct Vrijeme t1, struct Vrijeme t2,int i)
{
    int sat=t1.sati*3600;
    int sat1=t2.sati*3600;
    int min=t1.minute*60;
    int min1=t2.minute*60;
    int d1 = sat+min+ t1.sekunde;
    int d2 = sat1+min1+ t2.sekunde;
    if (d1 > d2)  return 1; 
    if (d1 < d2)  return -1; 
    if (d1 == d2)  return 0; 
    
}
int preklapanje (struct Cas raspored[], int broj_casova, struct Cas cas)
{

    int prekl = 0;
    int i;
    for (i = 0; i < broj_casova; i++) {
		int drugi=PorediVrj(cas.kraj, raspored[i].pocetak,i);
		if(i<0) return prekl;
        if (PorediVrj(raspored[i].kraj,cas.pocetak,i)== 1 && drugi==1 && (cas.dan_u_sedmici == raspored[i].dan_u_sedmici)) {
            prekl= 1; 
            break;
        }
    }
   if(i>-1) return prekl;
}
int prazan(struct Cas cas){
    if(cas.predmet=="""") return 0;
    else return 1;
}


int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje){
	if(broj_casova==200) return 0;
	if(trajanje<0 ||trajanje>200) return 0;
	int i,j,preklop;
	for (i=0; i<6; i++)
		for(j=9; j<=19-trajanje; j++){
			struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
		cas.pocetak.minute=0;
		cas.kraj.minute=0;
		cas.pocetak.sekunde=0;
		cas.pocetak.minute=0;
		strcpy(cas.predmet,predmet);
		int praz=prazan(cas);
		struct Cas pom={"""",0,{0,0,0},{0,0,0}};
		strcpy(cas.predmet,predmet);
			preklop=preklapanje(raspored,broj_casova,cas);
			if (preklop==0){
				raspored[broj_casova]=cas;
				return 1;
			}
		}
	return 0;			
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
	int i,redni=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
			raspored[i]=promjena;
	}
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL)
		return 0;
	int kap=broj_casova;
	int vel=sizeof (struct Cas);
	int zapisano=fwrite(raspored,vel, broj_casova,ulaz);
	fclose(ulaz);
 return 1;

}

int main() {
	int opcija,broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do {
		printf(""1) Ispis rasporeda\n"");
	printf(""2) Dodavanje casa\n"");
	printf(""3) Promjena casa\n"");
	printf(""4) Brisanje casa\n"");
	printf(""0) Kraj rada\n"");
	printf(""Izaberite opciju: "");

		scanf(""%d"",&opcija);
		if (opcija==2){
				int br_casova,dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				ocisti(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				switch(dodan){
				    case 1: broj_casova++; break;
				    default: 	printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
				}
				
				
			}
		if (opcija==0) 
				zapisi_datoteku(raspored,broj_casova);
		if (opcija==1) 
				ispis_rasporeda(raspored,broj_casova);
		
		if (opcija==3 ){
				struct Cas promjena;
				int dan,redni;
				char predmet[10];
				printf(""Unesite dan (1=ponedjeljak, "");
				printf(""2=utorak..., "");
				printf(""6=subota): "");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				promjena.dan_u_sedmici=dan;
				printf(""Izaberite koji cas zelite promijeniti:  "");
				scanf(""%d"",&redni);
				if(redni>100 ||redni<0) goto preskok;
				printf(""Naziv predmeta: "");
				ocisti(unesi(predmet,10));
				char *q;
				
				if(opcija!=0) q=promjena.predmet;
				char*p;
			  if(opcija!=0)	p=predmet;
				preskok:
				strcpy(q,p);
				char znak;
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c%d%d%c%d"",&promjena.pocetak.sati,&znak,&promjena.pocetak.minute,&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				promijeni_cas(raspored,broj_casova,dan,redni,promjena);
			}
			if (opcija==4){
				int dan,redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				
				scanf(""%d"",&dan);
				if(opcija!=0){
				ispisi_dan(raspored,broj_casova,dan);
				printf(""Izaberite koji cas zelite obrisati: "");
				scanf(""%d"",&redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
				broj_casova=broj_casova-1;
				printf("" Cas obrisan\n"");
				}
			}
	} while (opcija!=0);
    
	return 0;
}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};
char unesi(char niz[],int velicina) {
	char znak=getchar();
	int i=0;
	while(znak=='\n')
	znak=getchar();
	while(i< velicina-1 && znak !='\n' ) {
		niz[i++] = znak;
		znak = getchar();
	}
niz[i]='\0';
return znak; }
void ocisti(char znak){
	int ima=0;
	while(znak!='\n')
	znak=getchar(); }
int ucitaj_datoteku(struct Cas raspored[]){
FILE* dat=fopen(""raspored.dat"",""rb"");
if(dat == NULL) return 0;
int ucitanih=fread(raspored,sizeof(struct Cas),KAPACITET,dat);
fclose(dat);
return ucitanih; }
void ispisreda(){
printf(""\n       PON       UTO       SRI"");
printf(""       CET       PET       SUB"");
printf(""\n""); }
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	ispisreda();
	for(i=0;i<broj_casova;i++){
		if(raspored[i].pocetak.sati<min)
		min=raspored[i].pocetak.sati;}
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max ){
			max=raspored[i].kraj.sati;
			indexmaxa=i;
}} if(raspored[indexmaxa].kraj.minute==0) max=max-1;

int x;
int s,dan,n;

for(i=min;i<=max;i++){
	if(i<10) printf(""9:00   "");
	else printf(""%d:00  "",i);
	for(j=1;j<7;j++){
		for(k=0;k<broj_casova;k++){
			s=raspored[k].pocetak.sati;
			dan=raspored[k].dan_u_sedmici;
			n=raspored[k].kraj.sati;
			if(s<=i && dan==j && n>=i) {
				printf(""%-10s"",raspored[k].predmet);
				break;
			}}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");}
			printf(""\n""); }}
			
			void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
				int i;
				printf(""Uneseni su casovi: "");
				int k=1;
				
			for(i=0;i<broj_casova;i++){
				if(raspored[i].dan_u_sedmici==dan){
					printf(""\n%d) %s ("",k++,raspored[i].predmet);
					if(raspored[i].pocetak.sati<10) printf(""0"");
					printf(""%d:"",raspored[i].pocetak.sati);
					if (raspored[i].pocetak.minute<10) printf(""0"");
					printf(""%d-"",raspored[i].pocetak.minute);
					printf(""%02d:%02d)"",raspored[i].kraj.sati,raspored[i].kraj.minute);
				}
			}}
			int zapisi_datoteku(struct Cas raspored[], int broj_casova){
				FILE* dat = fopen(""raspored.dat"", ""wb"");
				int ucitano=fwrite(raspored, sizeof(struct Cas), broj_casova, dat);
				fclose(dat);
				if(ucitano>0) return 1;
				return ucitano; }
				void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
					int i; int k=0; int j, brojac=1;
					for(i=0;i<broj_casova;i++){
					if(raspored[i].dan_u_sedmici==dan){ k++; brojac++;
					if(k==redni_broj){
						
						for(j=i;j<broj_casova-1;j++)
						raspored[j]=raspored[j+1];
						
						if(brojac>0)break; } }}}
						int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){
							int i;
						int minpoc1,minpoc2,minkraj1,minkraj2;
						for(i=0;i<broj_casova;i++) {
							minpoc1=raspored[i].pocetak.minute+raspored[i].pocetak.sati*60;
							minkraj1=raspored[i].kraj.minute+raspored[i].kraj.sati*60;
							minpoc2=cas.pocetak.minute+cas.pocetak.sati*60;
							minkraj2=cas.kraj.minute+cas.kraj.sati*60;
						if (raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<minpoc2 && minkraj1>minpoc2 || minpoc2<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 && cas.kraj.minute+cas.kraj.sati*60>minkraj1 || raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 && minkraj1>cas.kraj.minute+cas.kraj.sati*60))
						return 1;
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (minpoc2==minpoc1 || minkraj1==minkraj2))
						return 1; 
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&(minpoc1<minpoc2 && minkraj1>minpoc2 || minpoc2<minpoc1 && minkraj2>minkraj1 || minpoc1<minkraj2 && minkraj1>minkraj2))
						return 1; }
						return 0;}
						int dodaj_cas(struct Cas raspored[], int broj_casova, const char*predmet, int trajanje){
							if (broj_casova==200) return 0;
							int i,j,preklop;
							for(i=0; i<6; i++)
								for(j=9; j<=19-trajanje; j++){
									struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
									char *q=cas.predmet,*p=(char*)predmet;
									struct Cas cc;
									while(*q++=*p++);
									preklop=preklapanje(raspored,broj_casova,cas);
									if(preklop==0){
										raspored[broj_casova]=cas;
										return 1;
									} if(preklop==1) continue; }
									return 0; }
									void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
								int i,redni=0;
								for(i=0;i<broj_casova; i++){
									if(raspored[i].dan_u_sedmici==dan) redni++;
									if(redni_broj==redni)
									raspored[i]=promjena; }}
								int main () {
									int opcija,broj_casova=0;
									struct Cas raspored[KAPACITET];
									ucitaj_datoteku(raspored);
									do{
										printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
										scanf(""%d"",&opcija);
										int broj=opcija;
										switch(opcija){
											case 0: {
												zapisi_datoteku(raspored,broj_casova);
												break;
											} case 1:{
												if(broj!=0)   ispis_rasporeda(raspored,broj_casova);
												break;}
												case 2:  if(broj!=0)
											{
								
												int br_casova,dodan=0;
												char  predmet[10];
												printf(""Unesite naziv predmeta: Unesite broj casova: "");
												if(broj!=0)   ocisti(unesi(predmet,10));
												scanf(""%d"",&br_casova);
												dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
												int vr=dodan;
											if(vr==0)
											printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
											if(vr==1)  broj_casova++;
											
											break;}
											case 4: if(broj!=0)
											{
												int dan,redni;
												int br=broj_casova;
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,br,dan);
												printf(""\nIzaberite koji cas zelite obrisati: "");
											    scanf(""%d"",&redni);
											    obrisi_cas(raspored,br,dan,redni);
											    printf("" Cas obrisan\n"");
											    broj_casova--;
											}
											case 3:  if(broj!=0){
												struct Cas promjena;
												int dan,redni;
												char *q,*p;
												char znak,predmet[10];
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,broj_casova,dan);
												promjena.dan_u_sedmici=dan;
												printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
												scanf(""%d"",&redni);
												ocisti(unesi(predmet,10));
												q=promjena.predmet;
												p=predmet;
												strcpy(q,p);
												printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
												scanf(""%d%c"",&promjena.pocetak.sati,&znak);
												scanf(""%d"",&promjena.pocetak.minute);
												scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
												promijeni_cas(raspored,broj_casova,dan,redni,promjena);
												break;}
										} 
										
									} while(opcija!=0);
									    
									    
									    	return 0; 
									
								}
									
											
							
						
					
					
			
	


"
2178,47,47,0,10,A2016/Z2/Z1/student2965,A2016/Z2/Z1/student4661,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

int main() {
	int n,c1,c2,t=1,suma=0;
	printf(""Unesite broj: "");
	scanf(""%d"",&n);
	if(n<0) { 
		n=abs(n);
	}
	while (n>=10) {
		c1=n%10;
		c2=(n/10)%10;
		suma=suma+t*fabs(c1-c2);
		t=t*10;
		n=n/10;
	
	}
	printf(""%d"",suma);
	
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

int main() {
	int a, i=1, pc, dc, nb=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &a);
	if (a<0){ 
	 	a=abs(a);
	}
	while (a >= 10) { 
		pc=a%10;
		dc=(a/10)%10;
		nb=nb+abs(dc-pc)*i;
		i=i*10;
		a=a/10;
	}
	
	printf(""%d"", nb);
	return 0;
}
"
2196,99,99,0,56,A2016/Z2/Z2/student8069,A2016/Z2/Z2/student3217,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define PI 3.1415926

int main() {
	int st=0, m=0, s=0, n, i, j;
	double niz[500], us=0 ;
	
	do {
		printf(""Unesite broj uglova: "");
		
		scanf(""%d"", &n);
		
	} while (n < 1 || n > 500);
	
	printf(""Uglovi su: \n"");
	
	for(i=0; i<n ; i++){
		
		scanf(""%lf"", &niz[i]);
		
		us=fabs(niz[i]*180/PI)*3600;
		
		us=abs((int)(us + 0.5));
		
		st=(us/3600);
		
		m=abs((us - st*3600)/60);
		
		s=abs((us - st*3600-m*60));
		
		if(s>=60){
			m+=1;
			s-=60;
		} 
		
		if ( m>=60){
			st+=1;
			m-=60;
		}
		
		if(s > 30){
			
			for(j=i; j<n-1 ; j++ ){
				niz[j] = niz[j+1];
				
			n--;
			i--;
			
			}
			
		} 
		
		else if(niz[i]<0) printf(""-%d stepeni %d minuta %d sekundi\n"", st, m, s);
			
		else printf(""%d stepeni %d minuta %d sekundi \n"", st, m ,s);
		
	}
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define PI 3.1415926

int main() {
	int st=0, m=0, s=0, n, i, j;
	double niz[500], us=0 ;
	
	do {
		printf(""Unesite broj uglova: "");
		
		scanf(""%d"", &n);
		
	} while (n < 1 || n > 500);
	
	printf(""Uglovi su: \n"");
	
	for(i=0; i<n ; i++){
		
		scanf(""%lf"", &niz[i]);
		
		us=fabs(niz[i]*180/PI)*3600;
		
		us=abs((int)(us + 0.5));
		
		st=(us/3600);
		
		m=abs((us - st*3600)/60);
		
		s=abs((us - st*3600-m*60));
		
		if(s>=60){
			m+=1;
			s-=60;
		} 
		
		if ( m>=60){
			st+=1;
			m-=60;
		}
		
		if(s > 30){
			
			for(j=i; j<n-1 ; j++ ){
				niz[j] = niz[j+1];
				
			n--;
			i--;
			
			}
			
		} 
		
		else if(niz[i]<0) printf(""-%d stepeni %d minuta %d sekundi\n"", st, m, s);
			
		else printf(""%d stepeni %d minuta %d sekundi \n"", st, m ,s);
		
	}
	
	return 0;
}
"
2197,97,97,0,37,A2016/Z3/Z1/student2831,A2016/Z3/Z1/student3943,"#include <stdio.h>

 int daj_prost()
{
	 int i;
	static   int a=1;
	a++;
	for(i=2; i<a; i++) {
		if(a%i==0) {     /*Nalazenje prosstog broja u funkciji*/
			a++;
			i=2;
		}
	}
	return a;
}





int main()
{
	  int A,B;
	do {
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"",&A,&B);
		if(A<=0) printf(""A nije prirodan broj.\n"");
		else {
			if(A>=B) printf(""A nije manje od B.\n"");
			else if(B<=0) printf(""B nije prirodan broj.\n"");
		}

	} while(!(A<B && (A>0 && B>0))); /*Unos prirodnih brojeva A i B */
	 int suma=0,i,prost;
	for(i=0; i<B; i++) {
		prost=daj_prost();
		if(prost>A && prost<B) suma=suma+prost; /*Izračunavanje sume*/
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
	return 0;
}
","#include <stdio.h>

 int daj_prost()
{
	 int i;
	static   int a=1;
	a++;
	for(i=2; i<a; i++) {
		if(a%i==0) {     /*Nalazenje prosstog broja u funkciji*/
			a++;
			i=2;
		}
	}
	return a;
}





int main()
{
	  int A,B;
	do {
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"",&A,&B);
		if(A<=0) printf(""A nije prirodan broj.\n"");
		else {
			if(A>=B) printf(""A nije manje od B.\n"");
			else if(B<=0) printf(""B nije prirodan broj.\n"");
		}

	} while(!(A<B && (A>0 && B>0))); /*Unos prirodnih brojeva A i B */
	 int suma=0,i,prost;
	for(i=0; i<B; i++) {
		prost=daj_prost();
		if(prost>A && prost<B) suma=suma+prost; /*Izračunavanje sume*/
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
	return 0;
}
"
2200,69,69,0,15,A2016/Z1/Z4/student5496,A2016/Z1/Z4/student1120,"#include <stdio.h>

int main() {
	int i,j,n;
	do
	{
		printf(""Unesite broj n: "");	scanf(""%d"", &n);
	if(n<=0 || n>50) printf(""Pogresan unos\n"");
	} while (n<=0 || n>50); {
		if(n==1) {printf(""***"");
		}else
	for (i=0; i<n; i++)
	 {
	for (j=0; j<4*n-3; j++)
    	{
		if(i==j || i+j-(n-1)==n-1 || i==j-2*(n-1) || i+j-3*(n-1)==n-1) 
		printf(""*"");
		else printf ("" "");
     }
      printf(""\n"");
     }
   
	}
return 0;
}","#include <stdio.h>

int main() {
	int i,j,n;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<=0 || n>50)
	{
		printf(""Pogresan unos\n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1)
	printf(""***"");
	else
	{
	for(i=0;i<n;i++)
	{
		for(j=0;j<4*n-3;j++)
		{
			if(i==j || i+j-(n-1)==n-1 || i==j-2*(n-1) || i+j-3*(n-1)==n-1)
				printf(""*"");
			else printf("" "");
			}
			printf(""\n"");
		}
		return 0;
	}
}
"
2202,65,65,0,35,A2016/Z2/Z3/student7293,A2016/Z2/Z3/student6594,"#include <stdio.h>
#define duzina 20

int main() 
{
	int mat[duzina][duzina]={0};
	int niz1[duzina], niz2[duzina];
	int n,i,j,k;
	
	
	printf (""Unesite broj tacaka: "");
	scanf (""%d"", &n);
	
		for (j=0; j<duzina; j++)
 		{
 			for (k=0; k<duzina; k++)
 			{
 				mat[j][k]=32;
 			}
 		}
	
	while (n>10 || n<1)
	{
		printf (""Pogresan unos\n"");
		printf (""Unesite broj tacaka: "");
		scanf (""%d"", &n);
	}
	
	for (i=0; i<n; i++)
	{
		printf (""Unesite %d. tacku: "", i+1);
		scanf (""%d %d"", &niz1[i], &niz2[i]);
		if(niz1[i]<0 || niz2[i]<0 || niz1[i]>19 || niz2[i]>19)
		{
			while (1)
			{
				printf (""Pogresan unos\n"");
				printf (""Unesite %d. tacku: "", i+1);
				scanf (""%d %d"", &niz1[i], &niz2[i]);
				
				if (niz1[i]<20 && niz1[i]>-1 && niz2[i]>=0 && niz2[i]<=19)
				break;
			}
		}
	}
	



	
	for (i=0; i<n; i++)
	{
		for (j=0; j<duzina; j++)
		{
			for (k=0; k<duzina; k++)
			{
				if (k==niz1[i] && j==niz2[i])
				{
					mat[j][k]=42;
				}
			}
		}
	}
	
 	for (j=0; j<duzina; j++)
 	{
		for (k=0; k<duzina; k++)
		{
			printf (""%c"", mat[j][k]);
		}
		printf (""\n"");
 	}
 	
 
	return 0;
}
","#include <stdio.h>
#define visina 20
#define sirina 20
int main() {
    int j,i,n,nizA[visina],nizB[sirina],l;
    char mat[visina][sirina];
    do {
        printf(""Unesite broj tacaka: "");
        scanf(""%d"",&n);
        if(n<=0 || n>10)
        printf(""Pogresan unos\n"");
        }
        while(n<=0 || n>10);
        for(l=0;l<n;l++){
            printf(""Unesite %d. tacku: "",l+1);
            scanf(""%d %d"",&nizA[l],&nizB[l]);
            while((nizA[l]<0 || nizA[l]>19) || (nizB[l]<0 || nizB[l]>19)){
                printf(""Pogresan unos\n"");
                printf(""\nUnesite %d. tacku: "",l+1);
                scanf(""%d %d"",&nizA[l],&nizB[l]);
            }
        }
        for(i=0;i<visina;i++){
            for(j=0;j<sirina;j++){
                mat[i][j]=' ';
            }
        }
        for(l=0;l<n;l++) {
            for(i=0;i<visina;i++){
                for(j=0;j<sirina;j++){
                    if(i==nizB[l] && j==nizA[l])
                    mat[i][j]='*';
                }
            }
        }
        for(i=0;i<visina;i++){
            for(j=0;j<sirina;j++){
                printf(""%c"",mat[i][j]);
            }
        printf(""\n"");
        }
	return 0;
}
"
2213,98,98,0,113,A2016/Z1/Z3/student6824,A2016/Z1/Z3/student5899,"#include <stdio.h>
#define crna c
#define bijela b
#define crvena v
#define siva s
#define plava p

int main() 
{
	char colour;
	float Postotak,Ukupno;
	int crna=0,bijela=0,siva=0,crvena=0,plava=0;
	int max;

	printf(""Unesite vozila: "");
	
	do
	
	
	
	{
		scanf(""%c"",&colour);
		if(colour=='c'|| colour=='C' || colour=='b' || colour=='B' || colour == 's'|| colour=='S'|| colour=='v'|| colour=='V'|| colour=='p'|| colour=='P'||colour=='k'||colour=='K')
		{
			if(colour=='c' || colour=='C')
			{
				crna+=1;
			}
			else if(colour=='b' || colour=='B')
			{
				bijela+=1;
			}
			else if(colour=='s'||colour=='S')
			{
				siva+=1;
			}
			else if(colour=='v'|| colour=='V')
			{
				crvena+=1;
			}
			else if(colour=='p'||colour=='P')
			{
				plava+=1;
			}
			else if(colour =='k'|| colour =='K')
			{
				break;
			}
			
			
			
			
			
		}
		else if(colour!='c' || colour!='C' || colour!='b'||colour!='B' || colour!='s'|| colour!='S'|| colour!='v'|| colour!='V'||colour!='p'||colour!='P'||colour!='k'||colour!='K')
		{
			printf(""Neispravan unos\n"");
		}
	}
	while (colour!='k' || colour!='K');
	
	
		Ukupno=crna+bijela+siva+crvena+plava;
		
		printf(""Ukupno evidentirano %g vozila.\n"",Ukupno);
		
    	
	
		
		if(crna>=bijela && crna>=siva && crna>=crvena && crna>=plava)
		{
			max=crna;
		}
		if(bijela>=crna && bijela>=siva && bijela>=crvena && bijela>=plava)
		{
			max=bijela;
		}
		if(siva>=crna && siva>=bijela && siva>=crvena && siva>=plava)
		{
			max=siva;
		}
		if(crvena>=crna && crvena>=bijela && crvena>=siva && crvena>=plava)
		{
			max=crvena;
		}
		if(plava>=crna && plava>=bijela && plava>=siva && plava>=crvena)
		{
			max=plava;
		}
		
	
		if(Ukupno==0)
		{
			Postotak=0.0;
		}
		else
		{
			Postotak=(max*100)/Ukupno;
		}
	
		if (max==crna)
		{
			printf(""Najpopularnija boja je crna (%.2f%%).\n"",Postotak);
		}
		
		else if (max==bijela)
		{
			printf(""Najpopularnija boja je bijela (%.2f%%).\n"",Postotak);
		}
		else if (max==siva)
		{
			printf(""Najpopularnija boja je siva (%.2f%%).\n"",Postotak);
		}
		else if (max==crvena)
		{
			printf(""Najpopularnija boja je crvena (%.2f%%).\n"",Postotak);
		}
		else if (max==plava)
		{
			printf(""Najpopularnija boja je plava (%.2f%%).\n"",Postotak);
		}
		
	
	return 0;
	






}

","#include <stdio.h>
#define crna c
#define bijela b
#define crvena v
#define siva s
#define plava p

int main() 
{
	char colour;
	float Postotak,Ukupno;
	int crna=0,bijela=0,siva=0,crvena=0,plava=0;
	int max;

	printf(""Unesite vozila: "");
	
	do
	
	
	
	{
		scanf(""%c"",&colour);
		if(colour=='c'|| colour=='C' || colour=='b' || colour=='B' || colour == 's'|| colour=='S'|| colour=='v'|| colour=='V'|| colour=='p'|| colour=='P'||colour=='k'||colour=='K')
		{
			if(colour=='c' || colour=='C')
			{
				crna+=1;
			}
			else if(colour=='b' || colour=='B')
			{
				bijela+=1;
			}
			else if(colour=='s'||colour=='S')
			{
				siva+=1;
			}
			else if(colour=='v'|| colour=='V')
			{
				crvena+=1;
			}
			else if(colour=='p'||colour=='P')
			{
				plava+=1;
			}
			else if(colour =='k'|| colour =='K')
			{
				break;
			}
			
			
			
			
			
		}
		else if(colour!='c' || colour!='C' || colour!='b'||colour!='B' || colour!='s'|| colour!='S'|| colour!='v'|| colour!='V'||colour!='p'||colour!='P'||colour!='k'||colour!='K')
		{
			printf(""Neispravan unos\n"");
		}
	}
	while (colour!='k' || colour!='K');
	
	
		Ukupno=crna+bijela+siva+crvena+plava;
		
		printf(""Ukupno evidentirano %g vozila.\n"",Ukupno);
		
    	
	
		
		if(crna>=bijela && crna>=siva && crna>=crvena && crna>=plava)
		{
			max=crna;
		}
		if(bijela>=crna && bijela>=siva && bijela>=crvena && bijela>=plava)
		{
			max=bijela;
		}
		if(siva>=crna && siva>=bijela && siva>=crvena && siva>=plava)
		{
			max=siva;
		}
		if(crvena>=crna && crvena>=bijela && crvena>=siva && crvena>=plava)
		{
			max=crvena;
		}
		if(plava>=crna && plava>=bijela && plava>=siva && plava>=crvena)
		{
			max=plava;
		}
		
	
		if(Ukupno==0)
		{
			Postotak=0.0;
		}
		else
		{
			Postotak=(max*100)/Ukupno;
		}
	
		if (max==crna)
		{
			printf(""Najpopularnija boja je crna (%.2f%%).\n"",Postotak);
		}
		
		else if (max==bijela)
		{
			printf(""Najpopularnija boja je bijela (%.2f%%).\n"",Postotak);
		}
		else if (max==siva)
		{
			printf(""Najpopularnija boja je siva (%.2f%%).\n"",Postotak);
		}
		else if (max==crvena)
		{
			printf(""Najpopularnija boja je crvena (%.2f%%).\n"",Postotak);
		}
		else if (max==plava)
		{
			printf(""Najpopularnija boja je plava (%.2f%%).\n"",Postotak);
		}
		
	
	return 0;
	






}

"
2226,98,98,0,59,A2016/Z3/Z2/student8363,A2016/Z3/Z2/student1938,"#include <stdio.h>
#include <math.h>

void ubaci(int niz[],int n){
	int i,tmp,suma=0;
	for(i=n-1;i>0;i--)
	{
		niz[2*i]=niz[i];
	}
	for(i=0;i<2*n-1;i+=2)
	{
		suma=0;
		tmp=niz[i];
		while(tmp!=0)
		{
			suma+=(tmp%10);
			tmp=tmp/10;
		}
		if(suma<0)suma*=-1;
		niz[i+1]=suma;
	}
}
int fib(int a)
{
	int i=1,j=0;
	while(i<=a)
	{
		i+=j;
		j=i-j;
		if(a==i)return 1;
	}
	return 0;
}
int izbaci(int niz[],int n)
{
	int i,j,v=n;
	for(i=0;i<v-1;i++)
	{
		if(fib(niz[i])){
			for(j=i;j<v-1;j++)
			{
				niz[j]=niz[j+1];
			}
			i--;v--;
		}
	}
	if(fib(niz[i]))v--;
	return v;
}
int main(){
	int i,niz[2000],n;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	{
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,10);
	n=izbaci(niz,20);
	printf(""Modificirani niz glasi:"");
	for(i=0;i<n;i++){
		if(i==n-1)printf("" %d."",niz[i]);
		else printf("" %d,"",niz[i]);
	}

	return 0;
}","#include <stdio.h>
#include <math.h>

void ubaci(int niz[],int n){
	int i,tmp,suma=0;
	for(i=n-1;i>0;i--)
	{
		niz[2*i]=niz[i];
	}
	for(i=0;i<2*n-1;i+=2)
	{
		suma=0;
		tmp=niz[i];
		while(tmp!=0)
		{
			suma+=(tmp%10);
			tmp=tmp/10;
		}
		if(suma<0)suma*=-1;
		niz[i+1]=suma;
	}
}
int fib(int a)
{
	int i=1,j=0;
	while(i<=a)
	{
		i+=j;
		j=i-j;
		if(a==i)return 1;
	}
	return 0;
}
int izbaci(int niz[],int n)
{
	int i,j,v=n;
	for(i=0;i<v-1;i++)
	{
		if(fib(niz[i])){
			for(j=i;j<v-1;j++)
			{
				niz[j]=niz[j+1];
			}
			i--;v--;
		}
	}
	if(fib(niz[i]))v--;
	return v;
}
int main(){
	int i,niz[2000],n;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	{
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,10);
	n=izbaci(niz,20);
	printf(""Modificirani niz glasi:"");
	for(i=0;i<n;i++){
		if(i==n-1)printf("" %d."",niz[i]);
		else printf("" %d,"",niz[i]);
	}

	return 0;
}"
2232,97,97,0,46,A2016/Z1/Z4/student1483,A2016/Z1/Z4/student3610,"#include <stdio.h>
int main() {
    int n;
    unos:
    printf(""Unesite broj n: "");
    scanf(""%d"",&n);
    if(n<1||n>50)
     {printf(""Pogresan unos \n"");goto unos;
     }
    
    int i,j,k,l,s;
    for(i=0;i<n;i++){
        for(j=0;j<n;j++){
            if(n==1)
            printf(""**"");
            if(i==j)
            printf(""*"");
            else printf("" "");
        }
        for(k=0;k<n-1;k++){
            if(i+k==n-2)
            printf(""*"");
            else printf("" "");
        }
        for(l=0;l<n-1;l++){
            if(i==l+1)
            printf(""*"");
            else printf("" "");
        }
        for(s=0;s<=n;s++){
            if(i+s==n-2)
            printf(""*"");
            else printf("" "");
        }
        printf(""\n"");
    }
	return 0;
}","#include <stdio.h>

int main() {
	int n;
	unos:
	printf(""\nUnesite broj n: "");
	scanf(""%d"",&n);
	if((n<1)||(n>50))
	{ 
		printf(""Pogresan unos"");
		goto unos;
	}
	int i,j,k,z,q;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if(n==1)
			printf(""**"");
			if(i==j)
			printf(""*"");
			else 
			printf("" "");
			
		}
		for(k=0;k<n-1;k++)
		{
			if(i+k==n-2)
			printf(""*"");
			else
			printf("" "");
			
		}
		for(z=0;z<n-1;z++)
		{
			if(i==z+1)
			printf(""*"");
			else printf("" "");
			
		}
		for(q=0;q<=n;q++)
		{
			if(i+q==n-2)
			printf(""*"");
			else printf("" "");
			
		}
		printf(""\n"");
		
    }
	return 0;
}
"
2243,99,99,0,123,A2016/Z1/Z1/student8580,A2016/Z1/Z1/student4852,"#include <stdio.h>
int main() {
	double BT,BB,BM,IP,IIP,P,Z,ZI,IPB,IIPB,PB,ZB,ZIB,IPM,IIPM,PM,ZM,ZIM;
	int OT,OB,OM;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&IP);
		if(IP>20||IP<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIP);
		if(IIP>20||IIP<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&P);
		if(P>10||P<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&Z);
		if(Z>10||Z<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZI);
		if(ZI>40||ZI<0){
			printf(""Neispravan broj bodova"");return 0;}
	BT=IP+IIP+P+Z+ZI;
	
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&IPB);
		if(IPB>20||IPB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIPB);
		if(IIPB>20||IIPB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&PB);
		if(PB>10||PB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&ZB);
		if(ZB>10||ZB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZIB);
		if(ZIB>40||ZIB<0){
			printf(""Neispravan broj bodova"");return 0;}

	BB=IPB+IIPB+PB+ZB+ZIB;



	printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&IPM);
		if(IPM>20||IPM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIPM);
		if(IIPM>20||IIPM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&PM);
		if(PM>10||PM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&ZM);
		if(ZM>10||ZM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZIM);
		if(ZI>40||ZI<0){
			printf(""Neispravan broj bodova"");return 0;}
	BM=IPM+IIPM+PM+ZM+ZIM;
	if(BT>=55&&BT<65)
	OT=6;
	else	if(BT>=64&&BT<75)
	OT=7;
	else	if(BT>=75&&BT<85)
	OT=8;
	else	if(BT>=85&&BT<92)
	OT=9;
	else	if(BT>=92&&BT<=100)
	OT=10;
	else OT=0;
	if(BB>=55&&BB<65)
	OB=6;
	else	if(BB>=65&&BB<75)
	OB=7;
	else	if(BB>=75&&BB<85)
	OB=8;
	else	if(BB>=85&&BB<92)
	OB=9;
	 else   if(BB>=92&&BB<=100)
	OB=10;
	else OB=1;
	if(BM>=55&&BM<65)
	OM=6;
	else	if(BM>=65&&BM<75)
	OM=7;
		else if(BM>=75&&BM<85)
	OM=8;
		else if(BM>=85&&BM<92)
	OM=9;
	else	if(BM>=92&&BM<=100)
	OM=10;
	else OM=2;
if(BT<55&&BB<55&&BM<55)
	printf(""Nijedan student nije polozio."");
	if(OT>=6&&OB>=6&&OM>=6){
	printf(""Sva tri studenta su polozila."");
	if(OT==OB&&OB==OM)
	printf(""\nSva tri studenta imaju istu ocjenu."");
	else if((OT==OB||OB==OM||OM==OT))
		printf(""\nDva od tri studenta imaju istu ocjenu."");
		else
		printf(""\nSvaki student ima razlicitu ocjenu."");}
		if((OT>=6&&OB<6&&OM<6)||(OT<6&&OB>=6&&OM<6)||(OT<6&&OB<6&&OM>=6))
		printf(""Jedan student je polozio."");

			if((OT>=6&&OB>=6&&OM<6)||(OT<6&&OB>=6&&OM>=6)||(OT>=6&&OB<6&&OM>=6))
		printf(""Dva studenta su polozila."");
	return 0;
}

","#include <stdio.h>
int main() {
	double BT,BB,BM,IP,IIP,P,Z,ZI,IPB,IIPB,PB,ZB,ZIB,IPM,IIPM,PM,ZM,ZIM;
	int OT,OB,OM;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&IP);
		if(IP>20||IP<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIP);
		if(IIP>20||IIP<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&P);
		if(P>10||P<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&Z);
		if(Z>10||Z<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZI);
		if(ZI>40||ZI<0){
			printf(""Neispravan broj bodova"");return 0;}
	BT=IP+IIP+P+Z+ZI;
	
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&IPB);
		if(IPB>20||IPB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIPB);
		if(IIPB>20||IIPB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&PB);
		if(PB>10||PB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&ZB);
		if(ZB>10||ZB<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZIB);
		if(ZIB>40||ZIB<0){
			printf(""Neispravan broj bodova"");return 0;}

	BB=IPB+IIPB+PB+ZB+ZIB;



	printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&IPM);
		if(IPM>20||IPM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIPM);
		if(IIPM>20||IIPM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&PM);
		if(PM>10||PM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&ZM);
		if(ZM>10||ZM<0){
			printf(""Neispravan broj bodova"");return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZIM);
		if(ZI>40||ZI<0){
			printf(""Neispravan broj bodova"");return 0;}
	BM=IPM+IIPM+PM+ZM+ZIM;
	if(BT>=55&&BT<65)
	OT=6;
	else	if(BT>=64&&BT<75)
	OT=7;
	else	if(BT>=75&&BT<85)
	OT=8;
	else	if(BT>=85&&BT<92)
	OT=9;
	else	if(BT>=92&&BT<=100)
	OT=10;
	else OT=0;
	if(BB>=55&&BB<65)
	OB=6;
	else	if(BB>=65&&BB<75)
	OB=7;
	else	if(BB>=75&&BB<85)
	OB=8;
	else	if(BB>=85&&BB<92)
	OB=9;
	 else   if(BB>=92&&BB<=100)
	OB=10;
	else OB=1;
	if(BM>=55&&BM<65)
	OM=6;
	else	if(BM>=65&&BM<75)
	OM=7;
		else if(BM>=75&&BM<85)
	OM=8;
		else if(BM>=85&&BM<92)
	OM=9;
	else	if(BM>=92&&BM<=100)
	OM=10;
	else OM=2;
if(BT<55&&BB<55&&BM<55)
	printf(""Nijedan student nije polozio."");
	if(OT>=6&&OB>=6&&OM>=6){
	printf(""Sva tri studenta su polozila."");
	if(OT==OB&&OB==OM)
	printf(""\nSva tri studenta imaju istu ocjenu."");
	else if((OT==OB||OB==OM||OM==OT))
		printf(""\nDva od tri studenta imaju istu ocjenu."");
		else
		printf(""\nSvaki student ima razlicitu ocjenu."");}
		if((OT>=6&&OB<6&&OM<6)||(OT<6&&OB>=6&&OM<6)||(OT<6&&OB<6&&OM>=6))
		printf(""Jedan student je polozio."");

			if((OT>=6&&OB>=6&&OM<6)||(OT<6&&OB>=6&&OM>=6)||(OT>=6&&OB<6&&OM>=6))
		printf(""Dva studenta su polozila."");
	return 0;
}

"
2245,98,98,0,28,A2016/Z1/Z4/student3856,A2016/Z1/Z4/student9113,"#include <stdio.h>

int main() {
	int n,i,j;
	do {
		printf(""Unesite broj n: "");
		scanf(""%d"", &n);
		if (n<=0 || n>50)
		printf(""Pogresan unos\n"");
	}  while (n<=0 || n>50);
	if (n!=1)
	for (i=0; i<n; i++)
	{
		for (j=0; j<4*n-3; j++)
		{ 
			if ( i==j || i==n-1-j+n-1 || i==-2*n+2*1+j || i==n-1-j+3*n-3*1 ){
		printf(""*"");}
		else printf("" "");
	}  
	printf(""\n"");
	}
else { printf(""***"");
}
	
	

	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j; 
	do
	{   printf("" \nUnesite broj n: "");
		scanf (""%d"",&n);
	
		if (n<=0 || n>50)
		printf(""Pogresan unos"");
		
	}while (n<=0 || n>50);
	if (n!=1)
    for (i=0; i<n; i++ )
{
	for (j=0; j<4*n-3; j++)
{ 
	if (i==j || i==n-1-j+n-1 || i==-2*n+2*1+j || i==n-1-j+3*n-3*1)
printf(""*"");

else  printf ("" "");
	
	
}
printf(""\n"");
}
  else 
{printf (""***"");
}
	return 0;
}
"
2249,97,97,0,48,A2016/Z1/Z4/student7735,A2016/Z1/Z4/student9498,"#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50){
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1){
		printf(""***"");
		return 0;
	}
	for(i=1;i<n;i++){
		for(j=1;j<i;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*"");
		if(i<2){
				for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
		if(i>=2){
		for(j=1;j<=2*i-3;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	}
		if(i==n){
			for(j=1;j<n;j++){
				printf("" "");
			}
			printf(""*"");
		for(j=1;j<=2*n-3;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50){
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1){
		printf(""***"");
		return 0;
	}
	for(i=1;i<n;i++){
		for(j=1;j<i;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*"");
		if(i<2){
				for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
		if(i>=2){
		for(j=1;j<=2*i-3;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	}
		if(i==n){
			for(j=1;j<n;j++){
				printf("" "");
			}
			printf(""*"");
		for(j=1;j<=2*n-3;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	return 0;
}
"
2266,99,99,0,269,A2016/Z5/Z3/student2351,A2016/Z5/Z3/student1477,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200
struct Vrijeme{
	int sati, minute, sekunde;
};
struct Cas{
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

int manjeod(const struct Vrijeme prvo,const struct Vrijeme drugo){
	// 0 - ako su jednaki, 1 - ako je prvi manji od drugog, -1 - ako je prvi veci od drugog
	if(prvo.sati == drugo.sati && prvo.minute == drugo.minute && prvo.sekunde == drugo.sekunde) return 0;
	
	if( prvo.sati < drugo.sati) return 1;
	else if( prvo.sati == drugo.sati && prvo.minute < drugo.minute) return 1;
	else if ( prvo.sati == drugo.sati && prvo.minute == drugo.minute && prvo.sekunde < drugo.sekunde) return 1;
	
	return -1;
}
int preklapanje(struct Cas raspored[], int broj_casova, struct Cas predmet){
	int i;
	for(i = 0; i < broj_casova; i++){
	//	printf(""U funkciji preklapanje testiramo %s sa %s , vrijeme prvog %d - %d , vrijeme drugog %d - %d\n"",raspored[i].predmet, predmet.predmet, raspored[i].pocetak.sati,raspored[i].kraj.sati, predmet.pocetak.sati,predmet.kraj.sati);
		if(predmet.dan_u_sedmici == raspored[i].dan_u_sedmici && 
		!(manjeod(raspored[i].kraj,predmet.pocetak ) == 1 ||
	 	  manjeod(raspored[i].kraj,predmet.pocetak ) == 0 ||
	 	  manjeod(predmet.kraj,raspored[i].pocetak ) == 1 ||
		  manjeod(predmet.kraj,raspored[i].pocetak ) == 0))
		{
			return 1;
		}
	}
	return 0;
}


int ucitaj_datoteku(struct Cas raspored[]){
int broj_casova;
FILE* upis = fopen(""raspored.dat"",""rb"");
fread(&broj_casova,sizeof(int),1,upis);
fread(raspored,sizeof(struct Cas),broj_casova,upis);
fclose(upis);

return broj_casova;	
}
int zapisi_datoteku(struct Cas raspored[],int broj_casova){
	FILE* ispis = fopen(""raspored.dat"",""wb"");
	if(ispis == NULL) return 0;
	if(broj_casova > 200) broj_casova = 200;
	fwrite(&broj_casova,sizeof(int),1,ispis);
	fwrite(raspored,sizeof(struct Cas),broj_casova,ispis);
	fclose(ispis);
	return 1;
}
int dodaj_cas(struct Cas raspored[],int broj_casova, const char* predmet, int trajanje){
	int i ,j ,k;
	struct Cas pr;
	strcpy(pr.predmet,predmet);
	pr.pocetak.sati = 0, pr.pocetak.minute = 0, pr.pocetak.sekunde = 0;
	pr.kraj.sati = 0, pr.kraj.minute = 0, pr.kraj.sekunde = 0;
	for(i = 1; i <= 6; i++){
		pr.dan_u_sedmici = i;
		for(j = 0; j <= 10 - trajanje; j++){
			pr.pocetak.sati = 9 + j;
			pr.kraj.sati = 9 + j + trajanje;
			k = preklapanje(raspored,broj_casova,pr);
			if(k == 0){
				strcpy(raspored[broj_casova].predmet,predmet);
				raspored[broj_casova].pocetak = pr.pocetak;
				raspored[broj_casova].kraj = pr.kraj;
				raspored[broj_casova].dan_u_sedmici = pr.dan_u_sedmici;
				
				return 1;
			}
		}
	}
	
	
	return 0;
}

int roundnadole(struct Vrijeme vr){
	if(vr.minute == 0 && vr.sekunde == 0) return vr.sati;
	 return vr.sati +1;
}

void ispis_rasporeda(struct Cas raspored[],int broj_casova){
	int minsat = 24,maxsat = 0, i, j, k;
	struct Vrijeme poc = {0,0,0},kraj = {0,0,0};
	for(i = 0; i < broj_casova; i++){
		if(raspored[i].pocetak.sati < minsat) minsat = raspored[i].pocetak.sati;
		if(roundnadole(raspored[i].kraj) > maxsat) maxsat = roundnadole(raspored[i].kraj);
	}
	printf(""       "");
	printf(""%-10s%-10s%-10s%-10s%-10s%-10s\n"",""PON"",""UTO"",""SRI"",""CET"",""PET"",""SUB"");
	for(j = minsat; j < maxsat; j++)
	{
		poc.sati = j;
		kraj.sati = j +1;
		printf(""%d:00  "",j);
		if( j < 10) printf("" "");
		for(i = 1; i <= 6; i++){
			int found = 0;
			for(k = 0;k < broj_casova; k++){
				if(!(manjeod(raspored[k].kraj,poc ) == 1 ||
	 				 manjeod(raspored[k].kraj,poc ) == 0 ||
				 	 manjeod(kraj,raspored[k].pocetak ) == 1 ||
					 manjeod(kraj,raspored[k].pocetak ) == 0) && 
				raspored[k].dan_u_sedmici == i){
					printf(""%-10s"",raspored[k].predmet);
					found = 1;
					
				}
			}
			if(found == 0) printf(""          "");
		}
		
		printf(""\n"");
	}
}
void ispisi_dan(struct Cas raspored[],int broj_casova,int dan){
	int i, counter = 1;
	printf(""Uneseni su casovi: \n"");
	for(i = 0; i < broj_casova; i++){
		if(raspored[i].dan_u_sedmici == dan){
			printf(""%d) %s ("",counter,raspored[i].predmet);
			if(raspored[i].pocetak.sati < 10) printf(""0"");
			printf(""%d:"",raspored[i].pocetak.sati);
			if(raspored[i].pocetak.minute < 10) printf(""0"");
			printf(""%d-"",raspored[i].pocetak.minute);
			
			if(raspored[i].kraj.sati < 10) printf(""0"");
			printf(""%d:"",raspored[i].kraj.sati);
			if(raspored[i].kraj.minute < 10) printf(""0"");
			printf(""%d)\n"",raspored[i].kraj.minute);
			counter++;
		}
		
	}
}
void promijeni_cas(struct Cas raspored[],int broj_casova,int dan,int redni_broj,struct Cas promjena){
	int i, counter = 0, uspjeh;
	for(i = 0; i < broj_casova; i++){
		if(dan == raspored[i].dan_u_sedmici){
			counter++;
			if(counter == redni_broj){
				struct Vrijeme poc,kraj;
				poc = raspored[i].pocetak;
				kraj = raspored[i].kraj;
				raspored[i].pocetak.sati = 0;
				raspored[i].kraj.sati = 0;
				strcpy(raspored[i].predmet, promjena.predmet);
				raspored[i].pocetak = promjena.pocetak;
				raspored[i].kraj = promjena.kraj;
				return;
			}
		}
	}
}
int temp_promjeni(struct Cas raspored[],int broj_casova,int dan,int redni_broj, struct Cas promjena){
	//printf(""U funkciji temp_promjeni dan je %d, a redni_broj je %d\n"",dan,redni_broj);
	int i, counter = 0, uspjeh;
	for(i = 0; i < broj_casova; i++){
		if(dan == raspored[i].dan_u_sedmici){
			counter++;
			if(counter == redni_broj){
			//	printf(""U funkciji temp_promjeni mijenjamo predmet %s\n"",raspored[i].predmet);
				struct Vrijeme poc,kraj;
				poc = raspored[i].pocetak;
				kraj = raspored[i].kraj;
				raspored[i].pocetak.sati = 0;
				raspored[i].kraj.sati = 0;
				promjena.dan_u_sedmici = dan;
				uspjeh = preklapanje(raspored,broj_casova,promjena);
				raspored[i].pocetak = poc;
				raspored[i].kraj = kraj;
				return uspjeh;
			}
		}
	}
	return -1;
}
void obrisi_cas(struct Cas raspored[],int broj_casova,int dan,int redni_broj){
	int i, counter = 0;
	for(i = 0; i < broj_casova; i++){
		if(dan == raspored[i].dan_u_sedmici){
			counter++;
			if(counter == redni_broj && i != broj_casova -1){
				raspored[i] = raspored[broj_casova - 1];
				return;
			}
		}
	}
}
void unosnaziva(char* pok){
	int i = 0;
	char c;
	while(1){
		c = getchar();
		if(c == '\n' && i==0) c = getchar();
		if(c == '\n') break;
		if(i < 9){
			pok[i] = c;
			i++;
		}
	}
	pok[i] = '\0';
}

int main() {
	
	struct Cas raspored[KAPACITET];
	char predmet[10];
	int izbor, broj_casova = 0, trajanje, uspjeh, dan, promjena;
	struct Cas pomocni = {""X"",0,{0,0,0},{0,0,0}};
	while(1){
		printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
		scanf(""%d"",&izbor);
		if(izbor == 1){
			printf(""\n"");
			ispis_rasporeda(raspored,broj_casova);
		} else if (izbor == 2) {
			
			printf(""Unesite naziv predmeta: "");
			unosnaziva(predmet);
			printf(""Unesite broj casova: "");
			scanf(""%d"", &trajanje);
			uspjeh = dodaj_cas(raspored, broj_casova, predmet, trajanje);
			broj_casova += uspjeh;
			if(uspjeh == 0){
				printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",trajanje);
			}
			
		} else if (izbor == 3){
			while(1){
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"", &dan);
				ispisi_dan(raspored,broj_casova,dan);
				printf(""Izaberite koji cas zelite promijeniti: "");
				scanf(""%d"",&promjena);
				printf(""Naziv predmeta: "");
				unosnaziva(pomocni.predmet);
				printf(""Vrijeme pocetka: "");
				scanf(""%d:%d"",&pomocni.pocetak.sati,&pomocni.pocetak.minute);
				printf(""Vrijeme zavrsetka: "");
				scanf(""%d:%d"",&pomocni.kraj.sati,&pomocni.kraj.minute);
			//	printf(""Funkcija temp_promjeni pozvana sa dan: %d, promjena: %d, pocetak %d:%d , kraj %d:%d\n"",dan,promjena,pomocni.pocetak.sati,pomocni.pocetak.minute, pomocni.kraj.sati,pomocni.kraj.minute);
				uspjeh = temp_promjeni(raspored,broj_casova,dan,promjena,pomocni);
			//	printf(""temp_promjeni daje %d\n"",uspjeh);
				if(uspjeh == 0){
					promijeni_cas(raspored,broj_casova,dan,promjena,pomocni);
					break;
				} else {
					printf(""Promjena nije moguca jer dovodi do preklapanja\n"");
				}
			}			
			
		} else if (izbor == 4) {
			printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
			scanf(""%d"", &dan);
			ispisi_dan(raspored,broj_casova,dan);
			printf(""Izaberite koji cas zelite obrisati: "");
			scanf(""%d"",&promjena);
			obrisi_cas(raspored,broj_casova,dan,promjena);
			printf(""Cas obrisan\n"");
			broj_casova--;
			
		} else if (izbor == 0) {
			zapisi_datoteku(raspored,broj_casova);
			break;
		}
	}
	

	return 0;
}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200
struct Vrijeme{
	int sati, minute, sekunde;
};
struct Cas{
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

int manjeod(const struct Vrijeme prvo,const struct Vrijeme drugo){
	// 0 - ako su jednaki, 1 - ako je prvi manji od drugog, -1 - ako je prvi veci od drugog
	if(prvo.sati == drugo.sati && prvo.minute == drugo.minute && prvo.sekunde == drugo.sekunde) return 0;
	
	if( prvo.sati < drugo.sati) return 1;
	else if( prvo.sati == drugo.sati && prvo.minute < drugo.minute) return 1;
	else if ( prvo.sati == drugo.sati && prvo.minute == drugo.minute && prvo.sekunde < drugo.sekunde) return 1;
	
	return -1;
}
int preklapanje(struct Cas raspored[], int broj_casova, struct Cas predmet){
	int i;
	for(i = 0; i < broj_casova; i++){
	//	printf(""U funkciji preklapanje testiramo %s sa %s , vrijeme prvog %d - %d , vrijeme drugog %d - %d\n"",raspored[i].predmet, predmet.predmet, raspored[i].pocetak.sati,raspored[i].kraj.sati, predmet.pocetak.sati,predmet.kraj.sati);
		if(predmet.dan_u_sedmici == raspored[i].dan_u_sedmici && 
		!(manjeod(raspored[i].kraj,predmet.pocetak ) == 1 ||
	 	  manjeod(raspored[i].kraj,predmet.pocetak ) == 0 ||
	 	  manjeod(predmet.kraj,raspored[i].pocetak ) == 1 ||
		  manjeod(predmet.kraj,raspored[i].pocetak ) == 0))
		{
			return 1;
		}
	}
	return 0;
}


int ucitaj_datoteku(struct Cas raspored[]){
int broj_casova;
FILE* upis = fopen(""raspored.dat"",""rb"");
fread(&broj_casova,sizeof(int),1,upis);
fread(raspored,sizeof(struct Cas),broj_casova,upis);
fclose(upis);

return broj_casova;	
}
int zapisi_datoteku(struct Cas raspored[],int broj_casova){
	FILE* ispis = fopen(""raspored.dat"",""wb"");
	if(ispis == NULL) return 0;
	if(broj_casova > 200) broj_casova = 200;
	fwrite(&broj_casova,sizeof(int),1,ispis);
	fwrite(raspored,sizeof(struct Cas),broj_casova,ispis);
	fclose(ispis);
	return 1;
}
int dodaj_cas(struct Cas raspored[],int broj_casova, const char* predmet, int trajanje){
	int i ,j ,k;
	struct Cas pr;
	strcpy(pr.predmet,predmet);
	pr.pocetak.sati = 0, pr.pocetak.minute = 0, pr.pocetak.sekunde = 0;
	pr.kraj.sati = 0, pr.kraj.minute = 0, pr.kraj.sekunde = 0;
	for(i = 1; i <= 6; i++){
		pr.dan_u_sedmici = i;
		for(j = 0; j <= 10 - trajanje; j++){
			pr.pocetak.sati = 9 + j;
			pr.kraj.sati = 9 + j + trajanje;
			k = preklapanje(raspored,broj_casova,pr);
			if(k == 0){
				strcpy(raspored[broj_casova].predmet,predmet);
				raspored[broj_casova].pocetak = pr.pocetak;
				raspored[broj_casova].kraj = pr.kraj;
				raspored[broj_casova].dan_u_sedmici = pr.dan_u_sedmici;
				
				return 1;
			}
		}
	}
	
	
	return 0;
}

int roundnadole(struct Vrijeme vr){
	if(vr.minute == 0 && vr.sekunde == 0) return vr.sati;
	 return vr.sati +1;
}

void ispis_rasporeda(struct Cas raspored[],int broj_casova){
	int minsat = 24,maxsat = 0, i, j, k;
	struct Vrijeme poc = {0,0,0},kraj = {0,0,0};
	for(i = 0; i < broj_casova; i++){
		if(raspored[i].pocetak.sati < minsat) minsat = raspored[i].pocetak.sati;
		if(roundnadole(raspored[i].kraj) > maxsat) maxsat = roundnadole(raspored[i].kraj);
	}
	printf(""       "");
	printf(""%-10s%-10s%-10s%-10s%-10s%-10s\n"",""PON"",""UTO"",""SRI"",""CET"",""PET"",""SUB"");
	for(j = minsat; j < maxsat; j++)
	{
		poc.sati = j;
		kraj.sati = j +1;
		printf(""%d:00  "",j);
		if( j < 10) printf("" "");
		for(i = 1; i <= 6; i++){
			int found = 0;
			for(k = 0;k < broj_casova; k++){
				if(!(manjeod(raspored[k].kraj,poc ) == 1 ||
	 				 manjeod(raspored[k].kraj,poc ) == 0 ||
				 	 manjeod(kraj,raspored[k].pocetak ) == 1 ||
					 manjeod(kraj,raspored[k].pocetak ) == 0) && 
				raspored[k].dan_u_sedmici == i){
					printf(""%-10s"",raspored[k].predmet);
					found = 1;
					
				}
			}
			if(found == 0) printf(""          "");
		}
		
		printf(""\n"");
	}
}
void ispisi_dan(struct Cas raspored[],int broj_casova,int dan){
	int i, counter = 1;
	printf(""Uneseni su casovi: \n"");
	for(i = 0; i < broj_casova; i++){
		if(raspored[i].dan_u_sedmici == dan){
			printf(""%d) %s ("",counter,raspored[i].predmet);
			if(raspored[i].pocetak.sati < 10) printf(""0"");
			printf(""%d:"",raspored[i].pocetak.sati);
			if(raspored[i].pocetak.minute < 10) printf(""0"");
			printf(""%d-"",raspored[i].pocetak.minute);
			
			if(raspored[i].kraj.sati < 10) printf(""0"");
			printf(""%d:"",raspored[i].kraj.sati);
			if(raspored[i].kraj.minute < 10) printf(""0"");
			printf(""%d)\n"",raspored[i].kraj.minute);
			counter++;
		}
		
	}
}
void promijeni_cas(struct Cas raspored[],int broj_casova,int dan,int redni_broj,struct Cas promjena){
	int i, counter = 0, uspjeh;
	for(i = 0; i < broj_casova; i++){
		if(dan == raspored[i].dan_u_sedmici){
			counter++;
			if(counter == redni_broj){
				struct Vrijeme poc,kraj;
				poc = raspored[i].pocetak;
				kraj = raspored[i].kraj;
				raspored[i].pocetak.sati = 0;
				raspored[i].kraj.sati = 0;
				strcpy(raspored[i].predmet, promjena.predmet);
				raspored[i].pocetak = promjena.pocetak;
				raspored[i].kraj = promjena.kraj;
				return;
			}
		}
	}
}
int temp_promjeni(struct Cas raspored[],int broj_casova,int dan,int redni_broj, struct Cas promjena){
	//printf(""U funkciji temp_promjeni dan je %d, a redni_broj je %d\n"",dan,redni_broj);
	int i, counter = 0, uspjeh;
	for(i = 0; i < broj_casova; i++){
		if(dan == raspored[i].dan_u_sedmici){
			counter++;
			if(counter == redni_broj){
			//	printf(""U funkciji temp_promjeni mijenjamo predmet %s\n"",raspored[i].predmet);
				struct Vrijeme poc,kraj;
				poc = raspored[i].pocetak;
				kraj = raspored[i].kraj;
				raspored[i].pocetak.sati = 0;
				raspored[i].kraj.sati = 0;
				promjena.dan_u_sedmici = dan;
				uspjeh = preklapanje(raspored,broj_casova,promjena);
				raspored[i].pocetak = poc;
				raspored[i].kraj = kraj;
				return uspjeh;
			}
		}
	}
	return -1;
}
void obrisi_cas(struct Cas raspored[],int broj_casova,int dan,int redni_broj){
	int i, counter = 0;
	for(i = 0; i < broj_casova; i++){
		if(dan == raspored[i].dan_u_sedmici){
			counter++;
			if(counter == redni_broj && i != broj_casova -1){
				raspored[i] = raspored[broj_casova - 1];
				return;
			}
		}
	}
}
void unosnaziva(char* pok){
	int i = 0;
	char c;
	while(1){
		c = getchar();
		if(c == '\n' && i==0) c = getchar();
		if(c == '\n') break;
		if(i < 9){
			pok[i] = c;
			i++;
		}
	}
	pok[i] = '\0';
}

int main() {
	
	struct Cas raspored[KAPACITET];
	char predmet[10];
	int izbor, broj_casova = 0, trajanje, uspjeh, dan, promjena;
	struct Cas pomocni = {""X"",0,{0,0,0},{0,0,0}};
	while(1){
		printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
		scanf(""%d"",&izbor);
		if(izbor == 1){
			printf(""\n"");
			ispis_rasporeda(raspored,broj_casova);
		} else if (izbor == 2) {
			
			printf(""Unesite naziv predmeta: "");
			unosnaziva(predmet);
			printf(""Unesite broj casova: "");
			scanf(""%d"", &trajanje);
			uspjeh = dodaj_cas(raspored, broj_casova, predmet, trajanje);
			broj_casova += uspjeh;
			if(uspjeh == 0){
				printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",trajanje);
			}
			
		} else if (izbor == 3){
			while(1){
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"", &dan);
				ispisi_dan(raspored,broj_casova,dan);
				printf(""Izaberite koji cas zelite promijeniti: "");
				scanf(""%d"",&promjena);
				printf(""Naziv predmeta: "");
				unosnaziva(pomocni.predmet);
				printf(""Vrijeme pocetka: "");
				scanf(""%d:%d"",&pomocni.pocetak.sati,&pomocni.pocetak.minute);
				printf(""Vrijeme zavrsetka: "");
				scanf(""%d:%d"",&pomocni.kraj.sati,&pomocni.kraj.minute);
			//	printf(""Funkcija temp_promjeni pozvana sa dan: %d, promjena: %d, pocetak %d:%d , kraj %d:%d\n"",dan,promjena,pomocni.pocetak.sati,pomocni.pocetak.minute, pomocni.kraj.sati,pomocni.kraj.minute);
				uspjeh = temp_promjeni(raspored,broj_casova,dan,promjena,pomocni);
			//	printf(""temp_promjeni daje %d\n"",uspjeh);
				if(uspjeh == 0){
					promijeni_cas(raspored,broj_casova,dan,promjena,pomocni);
					break;
				} else {
					printf(""Promjena nije moguca jer dovodi do preklapanja\n"");
				}
			}			
			
		} else if (izbor == 4) {
			printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
			scanf(""%d"", &dan);
			ispisi_dan(raspored,broj_casova,dan);
			printf(""Izaberite koji cas zelite obrisati: "");
			scanf(""%d"",&promjena);
			obrisi_cas(raspored,broj_casova,dan,promjena);
			printf(""Cas obrisan\n"");
			broj_casova--;
			
		} else if (izbor == 0) {
			zapisi_datoteku(raspored,broj_casova);
			break;
		}
	}
	

	return 0;
}
"
2277,97,97,0,46,A2016/Z1/Z4/student4824,A2016/Z1/Z4/student8357,"#include <stdio.h>

int main() {
	int n;
	unos:
	printf(""\nUnesite broj n: "");
	scanf(""%d"",&n);
	if((n<1)||(n>50))
	{ 
		printf(""Pogresan unos"");
		goto unos;
	}
	int i,j,k,z,q;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if(n==1)
			printf(""**"");
			if(i==j)
			printf(""*"");
			else 
			printf("" "");
			
		}
		for(k=0;k<n-1;k++)
		{
			if(i+k==n-2)
			printf(""*"");
			else
			printf("" "");
			
		}
		for(z=0;z<n-1;z++)
		{
			if(i==z+1)
			printf(""*"");
			else printf("" "");
			
		}
		for(q=0;q<=n;q++)
		{
			if(i+q==n-2)
			printf(""*"");
			else printf("" "");
			
		}
		printf(""\n"");
		
    }
	return 0;
}
","#include <stdio.h>

int main() {
    int n;
    unos:
    printf(""Unesite broj n: "");
    scanf(""%d"",&n);
    if(n<1||n>50){
        printf(""Pogresan unos \n"");goto unos;
    }
    int i,j,k,l,s;
    for(i=0;i<n;i++){
        for(j=0;j<n;j++){
            if(n==1)
            printf(""**"");
            if(i==j)
            printf(""*"");
            else printf("" "");
        }
        for(k=0;k<n-1;k++){
            if(i+k==n-2)
            printf(""*"");
            else printf("" "");
        }
        for(l=0;l<n-1;l++){
            if(i==l+1)
            printf(""*"");
            else printf("" "");
        }
        for(s=0;s<=n;s++){
            if(i+s==n-2)
            printf(""*"");
            else printf("" "");
        }
        printf(""\n"");
    }
	return 0;
}
"
2278,11,11,0,25,A2016/Z5/Z3/student9897,A2016/Z5/Z3/student6548,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati, minute, sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

void unesi(char niz[]) {
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<9 && znak!='\n') {
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	while(znak!='\n')
	znak=getchar();
}


int ucitaj_datoteku(struct Cas raspored[]) {
	FILE *ulaz=fopen(""raspored.dat"", ""rb+"");
	int greska=0;
	FILE *ulaz1=fopen(""raspored.dat"", ""rb+"");
	if(ulaz==NULL || ulaz1==NULL) {
		greska=1;
		return 0;
	}
  
   int ucitano=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz);
   int ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);
   fclose(ulaz);
   fclose(ulaz1);

return ucitano1                      ;
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova) {
	FILE* dat=fopen(""raspored.dat"", ""wb"");
	int vel=sizeof(struct Cas);
    int ucitano=fwrite(raspored,vel,broj_casova,dat);
	fclose(dat);
	if(ucitano>0) return 1;
	return ucitano;
	}

void ispis_rasporeda(struct Cas raspored[], int broj_casova) {
	int i, j, k, x, s, min=100, max=0;
	int indexmaxa=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].pocetak.sati<min) min=raspored[i].pocetak.sati;
		if(raspored[i].kraj.sati>max) {
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	if(raspored[indexmaxa].kraj.minute==0) max=max-1;
	printf(""\n       PON       UTO       SRI"");
	printf(""       CET       PET       SUB\n"");
	for(i=min;i<=max;i++) {
		if(i<10) printf(""%d:00   "",i);
		else printf(""%d:00  "", i);
		
		for(j=1;j<7;j++) {
			for(k=0;k<broj_casova;k++) {
				s=raspored[k].pocetak.sati; 
				if(s<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i) {
					printf(""%-10s"", raspored[k].predmet);
					break;
					x=i;
				}
			}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");
		}
		printf(""\n"");
	}
	//printf(""\n"");
}

int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas) {
	int i;
	for(i=0;i<broj_casova;i++) {
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&
		(cas.pocetak.minute+cas.pocetak.sati*60==raspored[i].pocetak.minute+raspored[i].pocetak.sati*60
		|| raspored[i].kraj.minute+raspored[i].kraj.sati*60==cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && 
		(raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.pocetak.minute+cas.pocetak.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.pocetak.minute+cas.pocetak.sati*60 || 
		cas.pocetak.minute+cas.pocetak.sati*60<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 &&
		cas.kraj.minute+cas.kraj.sati*60>raspored[i].kraj.minute+raspored[i].kraj.sati*60 ||
		raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
	}
	return 0;
}

void ispisi_dan(struct Cas raspored[], int broj_casova, int dan) {
	int brojac=1;
	int i;
	printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) {
			printf(""\n%d) %s (%02d:%02d-%02d:%02d)"", brojac,
			raspored[i].predmet, raspored[i].pocetak.sati,
			raspored[i].pocetak.minute,raspored[i].kraj.sati,
			raspored[i].kraj.minute);
			brojac++;
		}
	}
}

void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj) {
	int i, j;
	int k=0;
	int n=1;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) { k++; n++; }
		if(k==redni_broj) {
			for(j=i;j<broj_casova-1;j++) {
				raspored[j]=raspored[j+1];
			}
			if(n>0) break;
			return;
		}
	}
}

int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje) {
	if(broj_casova==200 || trajanje>10) return 0;
	int i, k, pocetak, dan, poc, moze=0;
	struct Cas cas;
	
	for(i=1;i<7;i++) 
	  for(k=9;k<=19-trajanje;k++) {
	  	dan=i;
	  	poc=k;
	  	strcpy(cas.predmet,predmet);
	  	cas.dan_u_sedmici=dan;
	  	cas.pocetak.sati=poc;
	  	cas.kraj.sati=k+trajanje;
	  	cas.pocetak.minute=cas.kraj.minute=0;
	  	if(preklapanje(raspored,broj_casova,cas)==0) {
	  	raspored[broj_casova]=cas;
	  	return 1;
	  }
}
  return 0;
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan,int redni_broj, struct Cas promjena) {
	int i;
	int k=0;
	int index=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) k++;
		if(k==redni_broj) {
			index=i;
			break;
		}
}
  raspored[index]=promjena;
}

int poziv(struct Cas raspored[], int ucit, char* ime, int br) {
	int vr=dodaj_cas(raspored,ucit,ime,br);
	return vr;
}

struct Cas zamj(struct Cas casko, int dan, int sat, int min, int sat1, int min1) {
	casko.dan_u_sedmici=dan;
	casko.pocetak.sati=sat;
	casko.pocetak.minute=min;
	casko.kraj.sati=sat1;
	casko.kraj.minute=min1;
	return casko;
	
}
int main() {
	struct Cas raspored[KAPACITET];
	int ucit=ucitaj_datoteku(raspored);
	int broj, br, rez, dan, cs, zap, m;
	char ime[100];
	for (m=0;m<KAPACITET;m++)
	{
		raspored[m].pocetak.sati=0;
		raspored[m].kraj.sati=0;
		raspored[m].dan_u_sedmici=1;
		raspored[m].pocetak.minute=0;
		raspored[m].kraj.minute=0;
		raspored[m].pocetak.sekunde=0;
		raspored[m].kraj.sekunde=0;
	}
	poc:
	printf(""1) Ispis rasporeda\n"");
	printf(""2) Dodavanje casa\n"");
	printf(""3) Promjena casa\n"");
	printf(""4) Brisanje casa\n"");
	printf(""0) Kraj rada\n"");
	printf(""Izaberite opciju: "");
	scanf(""%d"", &broj);
	switch(broj) {
		case 1:
		ispis_rasporeda(raspored,ucit);
		if(broj==0) return 0;
		break;
		
		case 2:
		printf(""Unesite naziv predmeta: "");
		unesi(ime);
		printf(""Unesite broj casova: "");
		scanf(""%d"", &br);
		if(broj==0) return 0;
		rez=poziv(raspored,ucit,ime,br);
		if(rez==0) printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"", br);
		if(rez==1) ucit++;
		break;
	
       case 4:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     ispisi_dan(raspored,ucit,dan);
     printf(""\nIzaberite koji cas zelite obrisati: "");
     scanf(""%d"", &cs);
     obrisi_cas(raspored,ucit,dan,cs);
     if(broj==0) return 0;
     printf(""Cas obrisan\n"");
     ucit--;
     break;
     
     case 3:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     int sat, min;
     char z;
     int sat1, min1;
     char z1;
     ispisi_dan(raspored,ucit,dan);
     if(broj==0) return 0;
     printf(""\nIzaberite koji cas zelite promijeniti: "");
     scanf(""%d"", &cs);
     printf(""Naziv predmeta: "");
     unesi(ime);
     printf(""Vrijeme pocetka: "");
     scanf(""%d"", &sat);
     scanf(""%c"", &z);
     scanf(""%d"", &min);
     printf(""Vrijeme zavrsetka: "");
     scanf(""%d"", &sat1);
     scanf(""%c"", &z1);
     scanf(""%d"", &min1);
     struct Cas casko={ime,dan,{sat,min,0},{sat1,min1,0}};
     strcpy(casko.predmet,ime);
     casko=zamj(casko,dan,sat,min,sat1,min1);
     promijeni_cas(raspored,ucit,dan,cs,casko);
     break;
     
     case 0:
     zap=zapisi_datoteku(raspored,ucit);
     return 0;
	}
	if(broj!=0) goto poc;
	return 0;
}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme{
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

char unesi(char niz[], int velicina){
	char znak=getchar();
	int vel=velicina;
		int i = 0, k=0;
	if (znak== '\n')
		znak = getchar();
	while (i<vel && znak !='\n'){
		niz[i] = znak;
		i++;k++;
		znak=getchar();
	}
	niz[i]='\0';
	return znak;
}

void cln(char znak){
	while(znak!='\n')
		znak=getchar();
		
}

int ucitaj_datoteku(struct Cas raspored[]){
	FILE* dat = fopen(""raspored.dat"", ""rb"");
	if(dat==NULL) return 0;
	int ucitanih=fread(raspored,sizeof(struct Cas), KAPACITET,dat);
	fclose(dat);
	return ucitanih;
}
void isp(int vel){
	int x;
	int veli=vel/2;
	for(x=0;x<veli;x++)
		printf(""  "");
		
}
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	
	for (i=0;i<broj_casova;i++){
		if(raspored [i].pocetak.sati<min)
			min=raspored[i].pocetak.sati;
	} 
	printf(""\n       PON       UTO       SRI""); //RAZMAK=7mjesta
	printf(""       CET       "");
	printf(""PET       SUB\n"");
	
int mintt=0;
int indexpamtimo;
for (i=0; i<broj_casova;i++){
	if (raspored[i].kraj.sati>max){
		max=raspored[i].kraj.sati;
		mintt=raspored[i].kraj.minute;
		indexpamtimo=1;
	}
}

int x;
int s,dan,n;
if(mintt==0) max=max-1;
int poc=min;
int kraj=max;
int ukupno=broj_casova;
	for(i=poc;i<=kraj;i++){
		if(i<10) printf(""%d:00   "",i); //4mjesta
	else printf(""%02d:00  "",i);
		for(j=1;j<7;j++){
			
			for(k=0;k<ukupno;k++){
				if(max>0){
					dan=raspored[k].dan_u_sedmici;
					n=raspored[k].kraj.sati;
				if (raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j && n>=i){
						printf(""%-10s"",raspored[k].predmet);
						break;
					}}}
					if(k==ukupno && ukupno>-1)
					isp(10);
		}
	printf(""\n"");
}
}

void pomispis(int k, char*s,int sat, int min, int sat1, int min1){
	printf(""\n%d) %s ("",k++,s);
	printf(""%02d:%02d-"",sat,min);
	printf(""%02d:%02d)"",sat1,min1);
}
void ispisi_dan(struct Cas raspored[], int broj_casova,int dan){
	int i,k=1;
		printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			int pocs=raspored[i].pocetak.sati;
			int pocm=raspored[i].pocetak.minute;
			int krajs=raspored[i].kraj.sati;
			int krajm=raspored[i].kraj.minute;
		pomispis(k++,raspored[i].predmet,pocs,pocm,krajs,krajm);
		
		}
	}
}


	
int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	FILE *ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL || ulaz1==NULL)
		return 0;
	int nova=fwrite(raspored, sizeof (struct Cas), broj_casova,ulaz);
	int zapisano=fwrite(raspored,sizeof(struct Cas), broj_casova,ulaz1);
	if(nova!=zapisano) return 0;
	fclose(ulaz);
	fclose(ulaz1);
	if (nova>0) return 1;
	else
		return 0;
}


void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,k=0,j;
	int bezzadnjeg=broj_casova-1;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			k++;
			if(k==redni_broj){
				for(j=i;j<bezzadnjeg;j++)
				raspored[j]=raspored[j+1];
				return;
			break;
			}
		}}}
int poredba(int p, int d){
	if (p > d) return 1;
	if (p < d) return -1;
	if (p == d) return 0;
}
int Poredi(struct Vrijeme t1, struct Vrijeme t2, int vel)
{
		int vr = t1.sati*vel*vel + t1.minute*vel + t1.sekunde, vr2 = t2.sati*vel*vel + t2.minute*vel + t2.sekunde;
		return poredba(vr,vr2);
		
}
int preklapanje (struct Cas raspored[],int broj_casova, struct Cas cas)
{
	
	int ima = 0;
	int i,prvi;
	for (i = 0; i < broj_casova; i++) {
		prvi=Poredi(raspored[i].kraj,cas.pocetak,60);
		if(prvi == 1 && Poredi(cas.kraj, raspored[i].pocetak,60)==1 && (cas.dan_u_sedmici==raspored[i].dan_u_sedmici))
		ima=1;
		break;
	}


return ima;
}


int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje){
	if(broj_casova==200) return 0;
	int i,j,preklop;
	int ukupno=19-trajanje;
	for (i=0; i<6; i++){
		for(j=9; j<=ukupno; j++){
			struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
			char *q=cas.predmet,*p=(char*) predmet;
			struct Cas cc;
			while (*q++=*p++);
			preklop=preklapanje(raspored,broj_casova,cas);
			if(preklop==1) continue;
			else{
				raspored[broj_casova]=cas;
				goto jedan;
			}
		}
	}
	
	return 0;
	jedan:
	return 1;
}


void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj,struct Cas promjena){
	int i, redni=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
			raspored[i]=promjena;
	}
}
void mjesto(int br){
	printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br);
}


int main() {
	int opcija, broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do{
		printf(""1) Ispis rasporeda\n"");
		printf(""2) Dodavanje casa\n3) Promjena casa\n"");
		printf(""4) Brisanje casa\n0) Kraj rada\n"");
		printf(""Izaberite opciju: "");
		scanf(""%d"",&opcija);
		
			if (opcija!=4 && opcija!=3 && opcija!=0 && opcija!=1){
				int br_casova,dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				cln(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				int vr=dodan;
				if(vr==0)
				mjesto(br_casova);
				if(vr==1)
				broj_casova++;
			}
			if (opcija!=0 && opcija!=3 && opcija!=2 && opcija!=1){
				int dan, redni;
				printf(""Unesite dan "");
				printf(""1=ponedjeljak, 2=utorak...,6=subota: "");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				printf(""\nIzaberite koji cas zelite obrisati: "");
				scanf(""%d"",&redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
					broj_casova--;
				printf(""Cas obrisan\n"");
			}
			if(opcija==0)
				zapisi_datoteku(raspored,broj_casova);
			if(opcija!=4 && opcija!=3 && opcija!=2 && opcija!=0);
				ispis_rasporeda(raspored,broj_casova);
			if(opcija!=4 && opcija!=0 && opcija!=2 && opcija!=1){
				struct Cas promjena;
				int dan,redni;
				char znak,predmet[10];
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota):"");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				promjena.dan_u_sedmici=dan;
				printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
				scanf(""%d"",&redni);
				cln(unesi(predmet,10));
				char *q=promjena.predmet;
				char *p=predmet;
				while(*q++=*p++);
				int prvi=broj_casova;
				int drugi=dan;
				int treci=redni;
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c"",&promjena.pocetak.sati,&znak);
				scanf(""%d"",&promjena.pocetak.minute);
				scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				promijeni_cas(raspored,prvi,drugi,redni,promjena);
			}
		
	} while(opcija!=0);
	return 0;
}"
2282,81,81,0,23,A2016/Z2/Z3/student8561,A2016/Z2/Z3/student1639,"#include <stdio.h>
#define d 10

int main() {
	int i,j,n,niza[d],nizb[d],c,e;	
		do{
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&n);
		if (n>10 || n<=0) printf(""Pogresan unos\n"");
		} while (n>10 || n<=0);
	for(c=0;c<n;c++){
		printf(""Unesite %d. tacku: "", c+1);
		scanf(""%d %d"",&niza[c],&nizb[c]);
		if(niza[c]<0 || niza[c]>19 || nizb[c]<0 || nizb[c]>19){
		printf(""Pogresan unos\n"");
		c--;
		}
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			for(e=0;e<n;e++){
			if(niza[e]==j && nizb[e]==i){
				printf(""*"");
				j++;
			}
			}
			printf("" "");
		}
		printf(""\n"");
	}
	
	return 0;
}","#include <stdio.h>

int main() {
	int i=0, j=0, k=0, brojtacaka, A[10], B[10] ;
    do{printf(""Unesite broj tacaka: "");
	scanf(""%d"", &brojtacaka);
		if(brojtacaka>10 || brojtacaka<=0)printf(""Pogresan unos\n"");}
	while(brojtacaka>10 || brojtacaka<=0);


	for(i=0; i<brojtacaka; i++){
	    printf(""Unesite %d. tacku: "", i+1); 
		scanf(""%d %d"", &A[i], &B[i]);
		if(A[i]>19 || A[i]<0 || B[i]>19 || B[i]<0){
			printf(""Pogresan unos\n"");
			i--;
			continue;
		}}
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			for(k=0; k<brojtacaka; k++){
			if(A[k]==j && B[k]==i ){
				printf(""*"");
				j++;
				}
			}
			printf("" "");
		}
		printf(""\n"");
	}
		

	return 0;}
	

"
2285,99,99,0,89,A2016/Z3/Z3/student2160,A2016/Z3/Z3/student8189,"#include <stdio.h>
#define A 201
#define B 201
int main ()
{ int M,N,i,j,k,g,h,p,r,s,t,l;
  int mat[A][B];
/*Unosimo matricu tako da osiguramo da ce biti u datom opsegu sa do-while petljom. */
    do {
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"",&M,&N);
        if(M>200 || M<1 || N>200 || N<1)  
        printf(""Brojevi nisu u trazenom opsegu.\n"");
    } while(M>200 || M<1 || N>200 || N<1);
    
    printf(""Unesite elemente matrice: "");
     for(i=0;i<M;i++){
        for(j=0;j<N;j++){
        scanf(""%d"",&mat[i][j]);
    }
 }  
 /*Ako je broj redova veci od jedan onda je potrebno izbacivanje dok ako ima jedan red nije.*/
         if(M>1){
       for(i=0;i<=M-1;i++){ /*i ide kroz redove.*/
        int brojkolona=N;
   
        for(j=i+1;j<=M-1;j++){ /*j takodjer kroz redove tako da uporedjuje drugi red sa prvim.*/
            int provjera=1; /*Postavljamo logicku varijablu provjera na 1 tako da kada naidje na razlicite redove onda ce postati 0.*/
            
            for(k=0;k<=brojkolona-1;k++){
                int red=i;
                int reddrugi=j;
                int kolona=k;
                
             if(mat[red][kolona]!=mat[reddrugi][kolona])  provjera=0;
            }

         if(provjera==1){ /* A ako je ipak logicka varijabla provjera 1 onda su redovi isti pa ih treba izbaciti tako da opet kroz dvije for petlje vrsimo provjeru izbacivanja.*/
         for(g=j;g<M-1;g++){
         for(h=0;h<brojkolona;h++){
             int red=g;
             int kolona=h;
             int sljedecired=red+1;
       
         mat[red][kolona]=mat[sljedecired][kolona];
                  }
              }
              if(M>1){
               M--;
               j--;
             }
             
         }
      }
   }
}
/*Analogno prethodnom sta smo ucinili za redove to ucinimo za kolone.*/
   if(N>1){
       int brojredova=M;
   
   for(p=0;p<=N-1;p++){
      for(r=p+1;r<=N-1;r++){
             int  provjera=1;
             for(s=0;s<=brojredova-1;s++){
                 int red=s;
                 int kolona=p;
                 int drugakolona=r;
                if(mat[red][kolona]!=mat[red][drugakolona]) provjera=0;
             }
                
        if(provjera==1) {
        for(t=r;t<N-1;t++){
            for(l=0;l<brojredova;l++){
                mat[l][t]=mat[l][t+1];
                   } 
                }   
                if(N>1){
                N--;
                r--;
                }
        }
     }
  }       
}
 printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
 for(i=0;i<M;i++){ 
     for(j=0;j<N;j++){ 
         printf(""%5d"",mat[i][j]);
      }    
     printf(""\n"");
 }

    return 0;
}
    
    
    
    
    
    
    
","#include <stdio.h>
#define A 201
#define B 201
int main ()
{ int M,N,i,j,k,g,h,p,r,s,t,l;
  int mat[A][B];
/*Unosimo matricu tako da osiguramo da ce biti u datom opsegu sa do-while petljom. */
    do {
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"",&M,&N);
        if(M>200 || M<1 || N>200 || N<1)  
        printf(""Brojevi nisu u trazenom opsegu.\n"");
    } while(M>200 || M<1 || N>200 || N<1);
    
    printf(""Unesite elemente matrice: "");
     for(i=0;i<M;i++){
        for(j=0;j<N;j++){
        scanf(""%d"",&mat[i][j]);
    }
 }  
 /*Ako je broj redova veci od jedan onda je potrebno izbacivanje dok ako ima jedan red nije.*/
         if(M>1){
       for(i=0;i<=M-1;i++){ /*i ide kroz redove.*/
        int brojkolona=N;
   
        for(j=i+1;j<=M-1;j++){ /*j takodjer kroz redove tako da uporedjuje drugi red sa prvim.*/
            int provjera=1; /*Postavljamo logicku varijablu provjera na 1 tako da kada naidje na razlicite redove onda ce postati 0.*/
            
            for(k=0;k<=brojkolona-1;k++){
                int red=i;
                int reddrugi=j;
                int kolona=k;
                
             if(mat[red][kolona]!=mat[reddrugi][kolona])  provjera=0;
            }

         if(provjera==1){ /* A ako je ipak logicka varijabla provjera 1 onda su redovi isti pa ih treba izbaciti tako da opet kroz dvije for petlje vrsimo provjeru izbacivanja.*/
         for(g=j;g<M-1;g++){
         for(h=0;h<brojkolona;h++){
             int red=g;
             int kolona=h;
             int sljedecired=red+1;
       
         mat[red][kolona]=mat[sljedecired][kolona];
                  }
              }
              if(M>1){
               M--;
               j--;
             }
             
         }
      }
   }
}
/*Analogno prethodnom sta smo ucinili za redove to ucinimo za kolone.*/
   if(N>1){
       int brojredova=M;
   
   for(p=0;p<=N-1;p++){
      for(r=p+1;r<=N-1;r++){
             int  provjera=1;
             for(s=0;s<=brojredova-1;s++){
                 int red=s;
                 int kolona=p;
                 int drugakolona=r;
                if(mat[red][kolona]!=mat[red][drugakolona]) provjera=0;
             }
                
        if(provjera==1) {
        for(t=r;t<N-1;t++){
            for(l=0;l<brojredova;l++){
                mat[l][t]=mat[l][t+1];
                   } 
                }   
                if(N>1){
                N--;
                r--;
                }
        }
     }
  }       
}
 printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
 for(i=0;i<M;i++){ 
     for(j=0;j<N;j++){ 
         printf(""%5d"",mat[i][j]);
      }    
     printf(""\n"");
 }

    return 0;
}
    
    
    
    
    
    
    
"
2287,76,76,0,26,A2016/Z2/Z4/student2197,A2016/Z2/Z4/student9438,"#include <stdio.h>


int main() {
	int i,j;
	int tep=1;
	int cirk=1;
	double mat[100][100];
	int m,n;
	do{
		printf(""Unesite M i N: "");
		scanf(""%d %d"",&m,&n);
		if(m<1 || n<1 || m>100 || n>100) printf(""Pogresan unos!\n"");
	}
	while(m<1 || n<1 || m>100 || n>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			scanf(""%lf"",&mat[i][j]);
			}
	}
	
	for(i=0;i<m-1;i++){
		for(j=0;j<n-1;j++){
			if(mat[i][j]!=mat[i+1][j+1]) {tep=0;}
		}
	}
	
	for(i=0;i<m-1;i++){
			if(mat[i][n-1]!=mat[i+1][0]) {cirk=0;}
		
	}
	
	if(cirk && tep) {printf(""Matrica je cirkularna"");}
	else if(tep) {printf(""Matrica je Teplicova"");}
	else {printf(""Matrica nije ni cirkularna ni Teplicova"");}
	
	
	return 0;
}
","#include <stdio.h>

int main() {
	double mat[100][100];
	 int M,N,cirk=1,i,j;int tep=1;
 
     do { 
   	printf(""Unesite M i N: "");
    scanf(""%d %d"",&M,&N);
    if( M<=0 || M>100 || N<=0 || N>100 ) printf(""Pogresan unos!\n"");
   } while( M<=0 || M>100 || N<=0 || N>100 ) ;
   
   
    printf(""Unesite elemente matrice: "");
    for(i=0;i<M;i++){
    	for(j=0;j<N;j++){
    		scanf(""%lf"",&mat[i][j]);
    	}
    }
    
    for(i=0;i<M-1;i++){
    	for(j=0;j<N-1;j++){
    		if(mat[i][j]!=mat[i+1][j+1]) tep=0;
    	}
    }
    if(tep==1)
    {
     for(i=0;i<M-1;i++){
    	
    		if(mat[i][N-1]!=mat[i+1][0])
    		{cirk=0;}
    	
    }
    }
    	if(tep==1)
    	{
    	 if (cirk==1) printf(""Matrica je cirkularna"");
    	 else printf(""Matrica je Teplicova"");
    	}
   else printf(""Matrica nije ni cirkularna ni Teplicova"");
   
	return 0;
}
"
2288,99,99,0,46,A2016/Z2/Z4/student1772,A2016/Z2/Z4/student6913,"#include <stdio.h>

int main() {
	double mat[100][100];
	int i,j,m,n,c=1,t=1;
	do{
	printf(""Unesite M i N: "");
	scanf(""%d%d"",&m,&n);
	if((n>100 || n<=0)||(m>100 || m<=0)){
		printf(""Pogresan unos!\n"");
	}
	}while(n>100 || n<=0 || m>100 || m<=0);
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			scanf(""%lf"",&mat[i][j]);
		}
	}
       for(i=0;i<m-1;i++){
       	for(j=0;j<n-1;j++){
       		if(mat[i][n-1]!=mat[i+1][0]){
       			c=0;
       			break;
       		}
       	}
       }
    	for(i=0;i<m-1;i++){
		for(j=0;j<n-1;j++){
			if(mat[i][j]!=mat[i+1][j+1]){
				t=0;
				break;
			}
		}
	}
	if(m>1 && n==1){
		printf(""Matrica je Teplicova"");
		return 0;
	}
	
	if(t==1){
		if(c==1){
			printf(""Matrica je cirkularna"");
		}
		else printf(""Matrica je Teplicova"");
	}
	else printf(""Matrica nije ni cirkularna ni Teplicova"");
	
	return 0;
}
","#include <stdio.h>

int main() {
	double mat[100][100];
	int i,j,m,n,c=1,t=1;
	do{
	printf(""Unesite M i N: "");
	scanf(""%d%d"",&m,&n);
	if((n>100 || n<=0)||(m>100 || m<=0)){
		printf(""Pogresan unos!\n"");
	}
	}while(n>100 || n<=0 || m>100 || m<=0);
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			scanf(""%lf"",&mat[i][j]);
		}
	}
       for(i=0;i<m-1;i++){
       	for(j=0;j<n-1;j++){
       		if(mat[i][n-1]!=mat[i+1][0]){
       			c=0;
       			break;
       		}
       	}
       }
    	for(i=0;i<m-1;i++){
		for(j=0;j<n-1;j++){
			if(mat[i][j]!=mat[i+1][j+1]){
				t=0;
				break;
			}
		}
	}
	if(m>1 && n==1){
		printf(""Matrica je Teplicova"");
		return 0;
	}
	
	if(t==1){
		if(c==1){
			printf(""Matrica je cirkularna"");
		}
		else printf(""Matrica je Teplicova"");
	}
	else printf(""Matrica nije ni cirkularna ni Teplicova"");
	
	return 0;
}
"
2293,83,83,0,30,A2016/Z2/Z3/student6707,A2016/Z2/Z3/student3133,"#include <stdio.h>

int main()
{
    char mat[20][20];
    int n,i,j,m,k,l;
    
     for( i=0; i<20; i++)
    {
       for( j=0; j<20; j++)
    {
         mat[i][j]=' ';
      
    } 
    }
    do{
        printf(""Unesite broj tacaka: "");
        scanf(""%d"",&n);
        if(n<=0 || n>10) printf(""Pogresan unos\n"");
        }while(n<=0 || n>10);
    
    
    m=0;
    while(m!=n)
    {
        do{
        printf(""Unesite %d. tacku: "", m+1);
        scanf(""%d %d"",&k, &l);
        if(k<0 || k>19 || l<0 || l>19 ) printf(""Pogresan unos\n"");
        }while(k<0 || k>19 || l<0 || l>19 );
        mat[l][k]='*';
    m++;
    }
    for( i=0; i<20; i++)
    {
       for( j=0; j<20; j++)
    {
        printf(""%c"",mat[i][j]);
    } 
    printf(""\n"");
    }
    return 0;
    
}","#include <stdio.h>

int main() {
    char matrica[20][20];
    int i, j, n, x, y;
    for(i=0;i<20;i++){
        for(j=0;j<20;j++){
            matrica[i][j]=' ';
        }
    }
    do{ 
        printf(""Unesite broj tacaka: "");
        scanf(""%d"", &n);
        if(n<=0||n>10) printf(""Pogresan unos\n"");}
        while(n<=0||n>10);
    for(i=0;i<n;i++){
        do{printf(""Unesite %d. tacku: "", i+1);
        scanf(""%d %d"", &x, &y);
        if(x<0||x>19||y<0||y>19) printf(""Pogresan unos\n"");}
        while(x<0||x>19||y<0||y>19);
        matrica[x][y]='*';
    }
    for(i=0;i<20;i++){
        for(j=0;j<20;j++){
            printf(""%c"", matrica[j][i]);
        }
        printf(""\n"");
    }
	return 0;
}
"
2306,98,98,0,58,A2016/Z3/Z3/student4473,A2016/Z3/Z3/student6534,"#include <stdio.h>

int main() {
	int m,n,mat[200][200],i,j,brojac,k,z,s,p;
	printf(""Unesite brojeve M i N: "");
	scanf (""%d%d"",&m,&n);
	while (m>200 || n>200 || m<1 || n<1)
	{printf(""Brojevi nisu u trazenom opsegu.\n"");
	printf(""Unesite brojeve M i N: "");
	scanf (""%d%d"",&m,&n);}
	printf (""Unesite elemente matrice: "");
	
	/*Unos elemenata matrice*/
	for (i=0;i<m;i++)
	{	for(j=0;j<n;j++)
			scanf(""%d"",&mat[i][j]);	}
			
/*poredjenje redova*/
for (s=0;s<m;s++)		
{	for (i=s+1;i<m;i++)
	{	brojac=1;
		for(j=0;j<n;j++)
		{	if (mat[s][j]!=mat[i][j]) 
			{brojac=0;break;}
		}
			if (brojac)
			{	/*izbaciti citav red*/
				for (z=i+1;z<m;z++)
				{	for(k=0;k<n;k++)
					mat[z-1][k]=mat[z][k];
				} 
				i--;m--;
			}
	}
}

/*poredjenje kolona*/
for (s=0;s<n;s++)
{	for (i=s+1;i<n;i++)
	{	brojac=1;
		for(j=0;j<m;j++)
		 {	if ( mat[j][s]!=mat[j][i]) 
		 	{brojac=0;break;}
		 }
			if (brojac)
			{ 	/*izbaciti citavu kolonu*/
				for (z=i+1;z<n;z++)
				{	for(k=0;k<m;k++)
					mat[k][z-1]=mat[k][z];
				} 
				i--;n--;
			}
	}
}
printf(""Nakon izbacivanja redova/kolona matrica glasi: \n "");
for (i=0;i<m;i++)
{ for (j=0;j<n;j++)
	printf(""%4d "",mat[i][j]);
	printf(""\n"");
	printf("" "");
}
	return 0;
}","#include <stdio.h>

int main() {
	int m,n,mat[200][200],i,j,brojac,k,z,s,p;
	printf(""Unesite brojeve M i N: "");
	scanf (""%d%d"",&m,&n);
	while (m>200 || n>200 || m<1 || n<1)
	{printf(""Brojevi nisu u trazenom opsegu.\n"");
	printf(""Unesite brojeve M i N: "");
	scanf (""%d%d"",&m,&n);}
	printf (""Unesite elemente matrice: "");
	
	/*Unos elemenata matrice*/
	for (i=0;i<m;i++)
	{	for(j=0;j<n;j++)
			scanf(""%d"",&mat[i][j]);	}
			
/*poredjenje redova*/
for (s=0;s<m;s++)		
{	for (i=s+1;i<m;i++)
	{	brojac=1;
		for(j=0;j<n;j++)
		{	if (mat[s][j]!=mat[i][j]) 
			{brojac=0;break;}
		}
			if (brojac)
			{	/*izbaciti citav red*/
				for (z=i+1;z<m;z++)
				{	for(k=0;k<n;k++)
					mat[z-1][k]=mat[z][k];
				} 
				i--;m--;
			}
	}
}

/*poredjenje kolona*/
for (s=0;s<n;s++)
{	for (i=s+1;i<n;i++)
	{	brojac=1;
		for(j=0;j<m;j++)
		 {	if ( mat[j][s]!=mat[j][i]) 
		 	{brojac=0;break;}
		 }
			if (brojac)
			{ 	/*izbaciti citavu kolonu*/
				for (z=i+1;z<n;z++)
				{	for(k=0;k<m;k++)
					mat[k][z-1]=mat[k][z];
				} 
				i--;n--;
			}
	}
}
printf(""Nakon izbacivanja redova/kolona matrica glasi: \n "");
for (i=0;i<m;i++)
{ for (j=0;j<n;j++)
	printf(""%4d "",mat[i][j]);
	printf(""\n"");
	printf("" "");
}
	return 0;
}"
2324,37,37,0,23,A2016/Z3/Z2/student2634,A2016/Z3/Z2/student9821,"#include <stdio.h>
#include <stdlib.h>

int sumabroja(int a){
	int suma=0,b,c;
	b=abs(a);
	while(b!=0){
		c=b%10;
		b=b/10;
		suma=suma+c;
	}
	
	return suma;
}

void ubaci(int *niz, int vel){
	int i, *a;
	a=niz;
	for(i=vel-1;i>0;i--){
		*(a+2*i)=*(a+i);
	}
	
	for(i=0;i<2*vel-1;i++){
		if(i%2==0){
			*(a+i+1)=sumabroja(*(a+i));
		}
	}
}

int fibonaccijevbroj(int n){
	int a=1,b=1,c;
	if(n<0) return 0;
	if(n==1) return 1;
	while(1){
		c=a+b;
		if(n==c) return 1;
		else if(c>n) return 0;
		a=b;
		b=c;
	}
}

int izbaci(int *niz, int vel){
	int i,j,*a,b;
	a=niz;
	for(i=0;i<vel;i++){
		b=fibonaccijevbroj(*(a+i));
		
		if(b==1){
			for(j=i;j<vel-1;j++) {
				*(a+j)=*(a+j+1);
			}
			vel--;
			i--;
		}
	}
	return vel;
}

int main() {
	int niz[20],i,s;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++){
		scanf(""%d"", &niz[i]);
	}
	ubaci(niz,10);
	s=izbaci(niz,20);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<s;i++){
		if(i==s-1) printf(""%d."", niz[i]);
		else printf(""%d, "",niz[i]);
	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

int suma(int n){
	int s=0,a,m;
	m=abs(n);
	while(m!=0){
		a=m%10;
		m/=10;
		s+=a;
	}
	
	return s;
}
void ubaci(int*niz, int vel){
	int i, j;
	for(i=0; i<2*vel; i++){
		if(i%2==0){
			for(j=2*vel-2; j>i; j--){
				niz[j+1]=niz[j];
			}
			niz[i+1]=suma(niz[i]);
			i++;
		}
	}
}
int fib(int n){
	int a=1, b=1;
	if(n<0) return 0;
	while(a<n && b<n){
		a=a+b;
		b=a+b;
	}
	if(a==n || b==n){
		return 1;
	}
	return 0;
}


int izbaci(int *niz, int vel){
	int a,i,j,*q;
	q=niz;
	
	for(i=0;i<vel;i++){
		a=fib(*(q+i));
		if(a==1){
			for(j=i;j<vel-1;j++){
				*(q+j)=*(q+1+j);
			}
			
		vel--;
		i--;
		}
	}
	
	return vel;
}
int main(){
	int i,v,niz[20];
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++){
		scanf(""%d"", &niz[i]);
	}
	
	ubaci(niz,10);
	v=izbaci(niz,20);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<v;i++){
		if(i==v-1) {
			printf(""%d."", niz[i]);
			break;
		}
		
		printf(""%d, "", niz[i]);
		
	}
	
return 0;
	
}"
2335,97,97,0,142,A2016/Z4/Z3/student1192,A2016/Z4/Z3/student4473,"#include <stdio.h>

int uporedi(char *prva, char *druga, int duzina){
	char *p=prva, *d=druga;
	int brojac=0;
	while(*d!='\0'){
		if(*p!=*d)
			return 0;
		p++;
		d++;
		brojac++;
	}
	if(*d=='\0'&&brojac!=duzina)
			return 0;
	return 1;
}
	
char  *prepisi(char *tekst,char *prva, char *druga, int duzina, int brojac){
	int i;
	char *d=druga, *kraj=tekst, *p=prva;
	if(brojac==0){
		while(*kraj!='\0') kraj++;
		char *pok=prva;
		while(pok!=kraj-duzina){
			*pok=*(pok+duzina);
			pok++;
			
		}
		*pok='\0';
		return tekst;
	}
	
	if(brojac!=duzina){
		if(brojac==1){
			while(*kraj!='\0') kraj++;
			char *pok=prva+1;
			while(pok!=kraj-duzina+1){
				*pok=*(pok+duzina-1);
				pok++;
			}
			*pok='\0';
			*prva=*druga;
			return tekst;
		}
		while(*kraj!='\0') kraj++;
		if(brojac>duzina){
			while(kraj!=p){
				*(kraj+brojac-duzina)=*kraj;
				kraj--;
			}
		}
		if(brojac<duzina){
			char *oduzima=p+duzina-brojac-1;
			while(oduzima!=kraj-(duzina-brojac)){
				*oduzima=*(oduzima+duzina-brojac);
				oduzima++;
			}
			*oduzima='\0';
			
		}
		
	}
	
	
	for(i=0;i<brojac;i++)
		*(p+i)=*(d+i);
	return tekst;
	
}

char *zamjena_rijeci(char *tekst, char **rijeci, char **zamjene, int broj_rijeci){
	int i=0,j=0,k,z,brojac_slova[100]={0}, brojac_rijeci=1, zamjena_velicina[50]={0};
	char *p, *pok[100], *p_rijec[100], *p_zamjena[100];

	for(i=0;i<broj_rijeci;i++){
		p_zamjena[i]=zamjene[i];
	}
	for(i=0;i<broj_rijeci;i++){
		char *z=p_zamjena[i];
		while(*z!='\0'){
			zamjena_velicina[i]++;
			z++;
		}
	}
	
	for(i=0;i<broj_rijeci;i++){
		p_rijec[i]=rijeci[i];
	}
	
	p=tekst;
	pok[j]=p;
	i=0;
	while(*p!='\0'){
		if(*p==' '){
			brojac_rijeci++;
			do{
				p++;
			}while(*p==' ');
			i++;
			j++;
			pok[j]=p;
			continue;
			
		}
		brojac_slova[i]++;
		p++;
	}

	for(i=0;i<brojac_rijeci;i++){
		for(j=0;j<broj_rijeci;j++){
			if(uporedi(pok[i],p_rijec[j],brojac_slova[i])){ 
				tekst=prepisi(tekst,pok[i],p_zamjena[j],brojac_slova[i], zamjena_velicina[j]);
				int z;
				if(zamjena_velicina[j]>brojac_slova[i]){
					for(k=0;k<zamjena_velicina[j]-brojac_slova[i];k++){
						for(z=i;z<brojac_rijeci;z++)
							pok[z+1]++;
					}
				}
				if(zamjena_velicina[j]<brojac_slova[i]){
					for(k=0;k<-zamjena_velicina[j]+brojac_slova[i];k++){
						for(z=i;z<brojac_rijeci;z++)
							pok[z+1]--;
					}
				}
			}
		}
	}
	
	return tekst;
}



int main() {
	char *rijeci[3]={""realno"", ""Ovo"", ""nije""};
	char *zamjena[3]={""zix"", ""zax"", ""zex""};
	char tekst[100]=""Ovo nije realno"";
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjena, 3));
	return 0;
}","#include <stdio.h>
//ispisati slucaj kada je brojac==1
int uporedi(char *prva, char *druga, int duzina){
	char *p=prva, *d=druga;
	int brojac=0;
	while(*d!='\0'){
		if(*p!=*d)
			return 0;
		p++;
		d++;
		brojac++;
	}
	if(*d=='\0'&&brojac!=duzina)		//potencijalna greska
			return 0;
	return 1;
}
	
char  *prepisi(char *tekst,char *prva, char *druga, int duzina, int brojac){
	int i;
	char *d=druga, *kraj=tekst, *p=prva;
	if(brojac==0){
		while(*kraj!='\0') kraj++;
		char *pok=prva;
		while(pok!=kraj-duzina){
			*pok=*(pok+duzina);
			pok++;
			
		}
		*pok='\0';
		return tekst;
	}
	
	if(brojac!=duzina){
		if(brojac==1){
			while(*kraj!='\0') kraj++;
			char *pok=prva+1;
			while(pok!=kraj-duzina+1){
				*pok=*(pok+duzina-1);
				pok++;
			}
			*pok='\0';
			*prva=*druga;
			return tekst;
		}
		while(*kraj!='\0') kraj++;
		if(brojac>duzina){
			while(kraj!=p){
				*(kraj+brojac-duzina)=*kraj;
				kraj--;
			}
		}
		if(brojac<duzina){
			char *oduzima=p+duzina-brojac-1;
			while(oduzima!=kraj-(duzina-brojac)){
				*oduzima=*(oduzima+duzina-brojac);
				oduzima++;
			}
			*oduzima='\0';
			
		}
		
	}
	
	
	for(i=0;i<brojac;i++)
		*(p+i)=*(d+i);
	return tekst;
	
}

char *zamjena_rijeci(char *tekst, char **rijeci, char **zamjene, int broj_rijeci){
	int i=0,j=0,brojac_slova[100]={0}, brojac_rijeci=1, zamjena_velicina[50]={0};
	char *p, *pok[100], *p_rijec[100], *p_zamjena[100];

	for(i=0;i<broj_rijeci;i++){
		p_zamjena[i]=zamjene[i];
	}
	for(i=0;i<broj_rijeci;i++){
		char *z=p_zamjena[i];
		while(*z!='\0'){
			zamjena_velicina[i]++;
			z++;
		}
	}
	//printf(""%d"", zamjena_velicina[0]);
	//printf(""%c\n"", *(rijeci[0]+1));
	for(i=0;i<broj_rijeci;i++){
		p_rijec[i]=rijeci[i];
	}
	//printf(""%c\n"", *(p_rijec[1]+1));
	p=tekst;
	pok[j]=p;
	i=0;
	while(*p!='\0'){
		if(*p==' '){
			brojac_rijeci++;
			do{
				p++;
			}while(*p==' ');
			i++;
			j++;
			pok[j]=p;
			continue;
			
		}
		brojac_slova[i]++;
		p++;
	}
	//brojac_slova[0] broj slova na prvoj rijeci
	//pok[0] je pokazivac na prvu rijec u stringu
	int k,z;
	for(i=0;i<brojac_rijeci;i++){
		for(j=0;j<broj_rijeci;j++){
			if(uporedi(pok[i],p_rijec[j],brojac_slova[i])){ //funkcija uporedi radi :D, vraca 1 ako su rijeci iste 0 ako nisu
				tekst=prepisi(tekst,pok[i],p_zamjena[j],brojac_slova[i], zamjena_velicina[j]);
				int z;
				if(zamjena_velicina[j]>brojac_slova[i]){
					for(k=0;k<zamjena_velicina[j]-brojac_slova[i];k++){
						for(z=i;z<brojac_rijeci;z++)
							pok[z+1]++;
					}
				}
				if(zamjena_velicina[j]<brojac_slova[i]){
					for(k=0;k<-zamjena_velicina[j]+brojac_slova[i];k++){
						for(z=i;z<brojac_rijeci;z++)
							pok[z+1]--;
					}
				}
			}
				//jos manjiti kad je brojac slova veci od zamjene velicine
		}
	}
	
	
	
	
	
	return tekst;
}



int main() {
	char *rijeci[3]={""proba"", ""Ovo"", ""je""};
	char *zamjene[3]={""a"", ""a"", ""a""};
	char tekst[100]=""Ovo je proba"";
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 3));
	return 0;
}
"
2336,86,86,0,46,A2016/Z2/Z3/student8670,A2016/Z2/Z3/student4343,"#include <stdio.h>
int main() {
int m,i,j,l,c,d;
char niz[20][20];
while(1) {
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &m);
	if(m<=10 && m>0) break;
	  else  printf(""Pogresan unos \n"");
}
for(j=0;j<20;j++) {
	for(l=0;l<20;l++) {
		niz[j][l]=' ';
	}}
for(i=1;i<=m;i++) {
	printf(""Unesite %d. tacku: "",i);
	scanf(""%d %d"", &c,&d);
	if(c<0 || c>19) {printf(""Pogresan unos\n""); i--; }else if  ( d<0 || d>19) { printf(""Pogresan unos\n"");
	i--;
} else {for(j=0;j<20;j++) {
		for(l=0;l<20;l++) {
			if(j==d && l==c) 	niz [j][l]='*';	}
	}}
}
for(j=0;j<20;j++) {
	for(l=0;l<20;l++) {
		printf(""%c"",niz[j][l]);
	}
	printf(""\n"");
}
return 0;
}","#include <stdio.h>

int main() {
	int n,i=0,j=0,k=0,a,b;
	char niz[20][20];
	while(1)
	{
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&n);
	if (n<=10 && n>0)
	break;
	else printf(""Pogresan unos\n"");
	}
	for (j=0;j<20;j++)
	{
	 for(k=0;k<20;k++)
	 { 
	 	niz[j][k]=' ';
	 	
	 }
	}
	for(i=1;i<=n;i++)
	{
		 printf(""Unesite %i. tacku: "",i);
	 scanf(""%d %d"", &a, &b);
	 if(a<0 || a>19 || b<0 || b>19)
	 {
	 printf(""Pogresan unos\n"");
	 i--;
	 } else {
	 for (j=0;j<20;j++)
	 {
	 for(k=0;k<20;k++)
	 { 
	 	if (j==b && k==a) 
	 	niz[j][k]='*';
	 	}
	 }
	 }
	}
	for (j=0;j<20;j++)
	{
	 for(k=0;k<20;k++)
	 { printf (""%c"",niz[j][k]);
	 }
	 printf(""\n"");
	}
	return 0;
}
"
2341,95,95,0,21,A2016/Z1/Z2/student2965,A2016/Z1/Z2/student7980,"#include <stdio.h>
#include <math.h>
#define EPSILON 0.0001

int main() {
	float a1,a2,b1,b2,x,y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);  
	if(fabs(a1-a2)<EPSILON && fabs(b1-b2)<EPSILON) {
		 printf(""Poklapaju se""); 
    } else if (fabs(a1-a2)<EPSILON && fabs(b1-b2)>EPSILON) {
		printf(""Paralelne su"");
	} else {
		x=(b2-b1)/(a1-a2);
		y=a1*x+b1;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	}
	return 0;
}
","#include <stdio.h>
#include<math.h>
#define epsilon 0.0001

int main() {
	float a1,b1,a2,b2,x,y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	if ( fabs(a1-a2)<epsilon && fabs(b1-b2)<epsilon)
	{
	printf(""Poklapaju se"");
	}
	else if(fabs(a1-a2)<epsilon && fabs(b1-b2)>epsilon)
	{
		printf(""Paralelne su"");
	}
		
		
		
		else
	
	{
		x=(b2-b1)/(a1-a2);
		y=a2*x+b2;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	}
	return 0;
}
"
2353,69,69,0,31,A2016/Z2/Z2/student8329,A2016/Z2/Z2/student8043,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define PI 3.1415926
#define BR 500

int main() {
	int i,j,brugl,stepen,minuta,sekunda;
	double niz[BR];
	double us=0;
	do
	{
		printf(""Unesite broj uglova: "");
		scanf(""%d"",&brugl);
	}
	while(brugl<1);
	
	for(i=0;i<brugl;i++)
	{
		scanf(""%lf"",&niz[i]);
	}
	printf(""Uglovi su:\n"");
	for(j=0;j<brugl;j++)
	{
	us=(fabs(niz[j])*180/PI)*3600;
	us=(int)(us+0.5);
	stepen=us/3600;
	minuta=(us-stepen*3600)/60;
	if(us-floor(us)>0.5)
	{
		us=ceil(us);
		sekunda=us-(stepen*3600)-(minuta*60);
	}
	else 
	{
	    us=floor(us);
	    sekunda=us-(stepen*3600)-(minuta*60);
	}
	if(sekunda>=60)
	{
		minuta++;
		sekunda=60;
	}
	if(minuta>=60)
	{
		stepen++;
		minuta=60;
	}
	if(niz[j]<0)
	{
	if(sekunda>30)
	continue;
	else printf(""-%d stepeni %d minuta %d sekundi\n"",stepen,minuta,sekunda);
	}	
	if(niz[j]>=0)
	{
	if(sekunda>30)
	continue;
	else printf(""%d stepeni %d minuta %d sekundi\n"",stepen,minuta,sekunda);
	}
	}
	return 0;
	
	
}
","#include <stdio.h>
#define PI 3.1415926
#include <stdlib.h>
#include <math.h>
int main() {
	int broj_uglova,a,stepeni,minute,sekunde;
	double niz[100];
	long double ugao_u_sekundama=0;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &broj_uglova);
	for(a=0;a<broj_uglova;a++) scanf(""%lf"", &niz[a]);
	printf(""Uglovi su:\n"");
	for(a=0;a<broj_uglova;a++) {
		ugao_u_sekundama=(fabs(niz[a])*180./PI)*3600;
		ugao_u_sekundama=(int)(ugao_u_sekundama+0.5);
		stepeni=ugao_u_sekundama/3600;
		minute=(ugao_u_sekundama-stepeni*3600)/60;
		if (ugao_u_sekundama-floor(ugao_u_sekundama)>0.5){ugao_u_sekundama=ceil(ugao_u_sekundama);sekunde=(ugao_u_sekundama-stepeni*3600-minute*60);}
		else {ugao_u_sekundama=floor(ugao_u_sekundama); sekunde=(ugao_u_sekundama-stepeni*3600-minute*60);}
		
		if(sekunde>=60) {minute++; sekunde=60;}
		if(minute>=60) {stepeni++; minute=60;}
			if(sekunde>30)
			continue;
		else
		printf(""%d stepeni %d minuta %d sekundi\n"", stepeni,minute,sekunde);}
		
		
	
	return 0;
}
"
2367,57,57,0,24,A2016/Z1/Z3/student2886,A2016/Z1/Z3/student3442,"#include <stdio.h>

int main() {
	/*C - crna*/
	/*B - bijela*/
	/*S - siva*/
	/*V - crvena*/
	/*P - plava*/
	/*K - kraj unosa*/
	
	char f;
	double c,b,s,v,p,k;
	double m,n,o,r,q;
c=0; b=0; s=0; v=0; p=0; k=0;
	printf(""Unesite vozila: "");
	do {
	scanf(""%c"", &f);
	if( f!='c' && f!='C' && f!='b' && f!='B' && f!='s' && f!='S' && f!='v' && f!='V' && f!='p' && f!='P' && f!='k' && f!='K' )
	{printf(""Neispravan unos\n"");}
	else {
			 if(f=='c' || f=='C') {c++;k++;}
		else if(f=='b' || f=='B') {b++;k++;}
		else if(f=='s' || f=='S') {s++;k++;}
		else if(f=='v' || f=='V') {v++;k++;}
		else if(f=='p' || f=='P') {p++;k++;} 
		
		}}
		while (f!='k' && f!='K');
		m=(c/k)*100;
		n=(b/k)*100;
		o=(s/k)*100;
		r=(v/k)*100;
		q=(p/k)*100;
		printf(""Ukupno evidentirano %g vozila.\n"", k);
		if(k==0) {
			printf(""Najpopularnija boja je crna (0.00%%)."");
		}
		  else if(c>=b && c>=s && c>=v && c>=p) {
			printf(""Najpopularnija boja je crna (%.2f%%)."", m);
		} else if(b>=c && b>=s && b>=v && b>=p) {
			printf(""Najpopularnija boja je bijela (%.2f%%)."", n);
		} else if(s>=c && s>=b && s>=v && s>=p) {
			printf(""Najpopularnija boja je siva (%.2f%%)."", o);
		} else if(v>=c && v>=b && v>=s && v>=p) {
			printf(""Najpopularnija boja je crvena (%.2f%%)."", r);
		} else if(p>=c && p>=b && p>=s && p>=v) {
			printf(""Najpopularnija boja je plava (%.2f%%)."", q);
		}
		
	
	return 0;
}
","#include <stdio.h>

int main() {
	
	char a;
	int c,b,s,v,p;
	float UK,nc,nb,ns,nv,np;
	
	c=0;
	b=0;
	s=0;
	v=0;
	p=0;
	
	printf(""Unesite vozila: "");
	for(;;){
		
		scanf(""%c"",&a);
		
		if(a=='C' || a=='c'){
			c++;
			continue;
		}
		if(a=='S' || a=='s'){
			s++;
			continue;
		}
		if(a=='B' || a=='b'){
			b++;
			continue;
		}
		if(a=='V' || a=='v'){
			v++;
			continue;
		}
		if(a=='P' || a=='p'){
			p++;
			continue;
		}
		if(a!='C' && a!='c' && a!='S' && a!='s' && a!='V' && a!='v' && a!='B' &&a!='b' && a!='P' && a!='p' && a!='k' && a!='K'){
			
			printf(""Neispravan unos\n"");
			continue;
		
		}
		if(a=='k' || a=='K') break;
		
	}
	
		UK=c+b+s+v+p;
		
		nc=(c/UK)*100;
		nb=(b/UK)*100;
		ns=(s/UK)*100;
		nv=(v/UK)*100;
		np=(p/UK)*100;
	
	printf(""Ukupno evidentirano %.f vozila.\n"",UK);
	
	if(c==0 && s==0 && v==0 && b==0 && p==0){
		printf(""Najpopularnija boja je crna (0.00%%)."");
		return 0;
	}
	
	if(c>=b && c>=s && c>=v && c>=p){
		printf(""Najpopularnija boja je crna (%.2f%%)."",nc);
	}
	else if(b>c && b>=s && b>=v && b>=p){
		printf(""Najpopularnija boja je bijela (%.2f%%)."",nb);
	}
	else if(s>c && s>b && s>=v && s>=p){
		printf(""Najpopularnija boja je siva (%.2f%%)."",ns);
	}
	else if(v>c && v>b && v>s && v>=p){
		printf(""Najpopularnija boja je crvena (%.2f%%)."",nv);
	}
	else if(p>c && p>b && p>s && p>v){
		printf(""Najpopularnija boja je plava (%.2f%%)."",np);
	}
	
	return 0;
}
"
2383,12,12,0,15,A2016/Z4/Z3/student6877,A2016/Z4/Z3/student5660,"#include <stdio.h>
int slovo(char c){
	if((c>=65 && c<=90)||(c>=97 && c<=122)) return 1;
	return 0;
}
int mjenjati(char *tekst, char *rijec){
	char *pocetak=tekst;
	char *pocetakrijeci=rijec;
	int isto=1;
	while (*tekst!='\0' && *rijec!='\0') {
		if(*tekst!=*rijec) isto=0;
		tekst++;
		rijec++;
	}
	if((*tekst!='\0' && *tekst!=' ') || (*rijec!='\0' )) isto=0;
	tekst=pocetak;
	rijec=pocetakrijeci;
	return isto;
}
void zamjeni(char* tekst, char* rijec, char* novarijec){
	char* temp=tekst,*a=tekst,*rijtemp=rijec,*novatemp=novarijec;
	int visak=0,i,nastavi=1;
	while(*tekst!='\0'){
		nastavi=0;
		while(*tekst!=*rijec && *tekst!='\0'){
			tekst++;
		}
		if(*tekst!='\0' && (tekst==temp || *(tekst-1)==' ') && mjenjati(tekst,rijec)){
		   while(*novarijec!='\0'){
		   	if(*tekst==' '|| *tekst=='\0'){
		   		a=tekst;
		   		while(*tekst!='\0') tekst++;
		   		tekst++;
		   		while(tekst>a){
		   			*tekst=*(tekst-1);
		   			tekst--;
		   		}
		   	}
		   	*tekst=*novarijec;
		   	tekst++;
		   	novarijec++;
		   }	
		   nastavi=1;
		}
		if(*tekst!=' ' && *tekst!='\0' && nastavi==1){
			a=tekst;
			while(*tekst!=' ' && *tekst!='\0'){
				visak++;
				tekst++;
			}
		
		tekst=a;
		for(i=0;i<visak;i++){
			tekst=a;
			while(*tekst!='\0'){
				*tekst=*(tekst+1);
				tekst++;
			}
		}
		tekst=a;
	}
	if(*tekst!=' ' && *tekst!='\0') tekst++;
	rijec=rijtemp;
	novarijec=novatemp;
	}
	tekst=temp;
	rijec=rijtemp;
	novarijec=novatemp;
}
char* zamjena_rijeci(char* tekst, char**rijeci, char**zamjene , int broj_rijec){
	char* temptekst=tekst;
	int i;
	for(i=0;i<broj_rijec;i++){
		tekst=temptekst;
		while(*tekst!='\0'){
			while(*tekst==' ' && *tekst!='\0') tekst++;
			if(mjenjati(tekst,rijeci[i])){
				zamjeni(tekst,rijeci[i],zamjene[i]);
			}
			while(*tekst!=' ' && *tekst!='\0') tekst++;
		}
	}
	return temptekst;
}

int main() {
	char* rijeci[2] = {"""", """"};
	char* zamjene[2] = {"""", """"};
	char tekst[100] = """";
	printf(""%s"",zamjena_rijeci(tekst,rijeci,zamjene,2));
	return 0;
}
","#include <stdio.h>

int DaLiJeZnak(char s)
{
	if (s < 'A' || (s > 'Z' && s < 'a') || s > 'z')
		return 1;
	return 0;
}

int DajBrojSlovaUrijeci (char* rijec)
{
    int brojac = 0;
    while (*rijec != '\0')
    {
        brojac++;
        rijec++;
    }
    return brojac;
}

int DaLiSuJednake (char* prva, char* druga)
{
	while (*prva != ' ' && *prva == *druga && *prva != '\0')
        {
            prva++;
			druga++;
		}
	if ((*prva == ' ' || *prva == '\0') && *druga == '\0')
		return 1;
	return 0;
}

void izbaci(char* trenutna)
{
    char* pocetak, *kraj;
    pocetak = trenutna;
    while (*trenutna != ' ' && *trenutna != '\0')
        trenutna++;
    kraj = trenutna;
    while (*kraj != '\0')
        *pocetak++ = *kraj++;
    while (*pocetak != '\0')
        *pocetak++ = '\0';
}

void ubaci (char* trenutna, char* ubaca)
{
    char* kraj = trenutna;
    int brojSlova = DajBrojSlovaUrijeci(ubaca);
    while (*kraj != '\0')
        kraj++;
    while (kraj > trenutna)
        *(kraj+brojSlova) = *kraj--;
    *(kraj+brojSlova) = *kraj;   
    if (*kraj != '\0')
    *kraj = ' ';
    while (*ubaca != '\0')
        *trenutna++ = *ubaca++;
}
char* zamjena_rijeci (char* tekst, char** rijeci, char** zamjene, int broj_rijeci)
{
	int i;
	char* pocetakTeksta = tekst, *trenutna;
	while (*tekst != '\0')
	{
		while (*tekst == ' ' && *tekst != '\0')
			tekst++;
		/* Ako se rijec zavrsava sa nekoliko razmaka i \0 treba provjeriti jer trenutna postaje tekst, da ne bi bilo frke */
        if (*tekst == '\0') break;
		trenutna = tekst;
		for (i = 0; i < broj_rijeci; i++)
			if (DaLiSuJednake(trenutna, rijeci[i]))
			{
			    izbaci(trenutna);
			    ubaci (trenutna, zamjene[i]);
            }
		if (*tekst != ' ')
        {
            while (*tekst != ' ' && *tekst != '\0')
				tekst++;
        }
		else tekst++;
	}
	return pocetakTeksta;
}

int main()
{

    char* rijeci[2] = { ""beli"", ""sneg"" };
char* zamjene[2] = { ""bijeli"", ""snijeg"" };
char tekst[100] = ""beli sneg je pokrio beli breg"";
printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));


	return 0;
}
"
2387,71,71,0,43,A2016/Z4/Z3/student2908,A2016/Z4/Z3/student2210,"#include <stdio.h>

char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	int i, j=0,k=0,h=0,x;
	char *p=tekst,*t=tekst;
	char* kraj=p;
	if(tekst==NULL || broj_rijeci<=0) return t;
	while(*tekst!='\0'){
		for(i=0;i<broj_rijeci;i++){
			while(*tekst!=' ' && *tekst!=',' && rijeci[i][j]!='\0'){
				if(*tekst!=rijeci[i][j]) break;
				tekst++;
				j++;
			}
			if((*tekst==' ' || *tekst==',' || *tekst=='\0') && rijeci[i][j]=='\0'){
				k=0;h=0;
				while(rijeci[i][k]!='\0') k++; 
				while(zamjene[i][h]!='\0') h++;
				while(*kraj!='\0') kraj++;
				while(kraj>p){
					*(kraj+h-k)=*kraj;
					kraj--;
				}
				for(x=0;x<h;x++){
					if(*p==' '&& x==0) p++;
					*p=zamjene[i][x];
					p++;
					tekst=p;
				}
			}
			else if(j==broj_rijeci-1 || *tekst=='-' || *tekst==','){
				while(*tekst!=' ' && *tekst!='\0')tekst++;
			}			
			p=tekst;
			j=0;
		}
		
		tekst++;
	}
	return t;
}

int main(){
	char* rijeci[2] = { ""c"" };
	char* zamjene[2] = {  ""Prijestolonasljednikovica"" };

	/* Ovako cemo zadati tekst da bi vrijednosti >3 bile neinicijalizirane */
	char tekst[100];
	tekst[0] = 'c';
	tekst[1] = ' ';
	tekst[2] = 'c';
	tekst[3] = '\0';

	printf(""'%s'"", zamjena_rijeci(tekst, rijeci, zamjene, 1));
	
	return 0;
}
","#include <stdio.h>
char* zamjena_rijeci(char* tekst,char** rijeci,char** zamjene,int broj_rijeci){
	int a=0,b=0,i,j=0,k;
	char* p=tekst;
	char* q=tekst;
	char* zadnji=p;
	if(*tekst==NULL || broj_rijeci<=0) return q;
	while(*tekst!='\0'){
		for(i=0;i<broj_rijeci;i++){
			while(*tekst!=' ' && *tekst!=',' && rijeci[i][j]!='\0'){
				if(*tekst!=rijeci[i][j])
				break;
				j++;
				tekst++;
			}
			if((*tekst==' ' || *tekst==',' || *tekst=='\0') && rijeci[i][j]=='\0'){
				a=0;
				b=0;
				while(rijeci[i][a]!='\0')
				a++;
				while(zamjene[i][b]!='\0')
				b++;
				while(*zadnji!='\0')
				zadnji++;
				while(zadnji>p){
					*(zadnji-a+b)=*zadnji;
					zadnji--;
				}
				for(k=0;k<b;k++){
					if(*p==' ' && k==0)
					p++;
					*p=zamjene[i][k];
					p++;
					tekst=p;
				}
			}
			else if(j==broj_rijeci-1 || *tekst=='-' || *tekst==','){
				while(*tekst!=' ' && *tekst!='\0')
				tekst++;
			}
			p=tekst;
			j=0;
		}
		tekst++;
	}
	return q;
}
int main() {
	char* rijeci[2] = {""beli"",""sneg""};
	char* zamjene[2] = {""bijeli"",""snijeg""};
	char tekst[100] = {""beli sneg je pokrio beli breg""};
	printf(""%s"", zamjena_rijeci(tekst,rijeci,zamjene,2));
	
	return 0;
}
"
2390,99,99,0,201,A2016/Z5/Z2/student9972,A2016/Z5/Z2/student6723,"#include <stdio.h>
#include <ctype.h>
#include <string.h>

void unesi(char niz[], int velicina) {
	char znak=getchar();
	if (znak=='\n') znak=getchar();
	int i = 0;
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
niz[i]='\0';
}
int slovo(int c){
	if(c>='A' && c<='Z' || c>='a' && c<='z')
	return 1;
	return 0;
}
void swap(char*p,char*q){
	char temp[100];
strcpy(temp,p);
strcpy(p,q);
strcpy(q,temp); }
void kompresuj(char* naziv, char*naziv1){
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv1,""w"");
	char rijeci[1000][1000]={0};
	int brojac[1000]={0};
	int i,broj_rijeci = 0;
	char rijec[1000];
	int duzina;
	char znak=fgetc(ulaz);
	while(znak!=EOF) {
		duzina = 0;
	while(slovo(znak)) {
		rijec[duzina++]= znak;
		znak=fgetc(ulaz);
	}
	rijec[duzina]='\0';
	if (duzina <10 && duzina!=0){
		int ima = 0;
		int j;
		for(j = 0;j < broj_rijeci; j++) {
			if (strcmp(rijeci[j],rijec) ==0) {
				ima = 1;
				brojac[j]++;
				break;
			}
		}
	if (ima!=1) {
		strcpy(rijeci[broj_rijeci], rijec);
		brojac[broj_rijeci++] = 1;
	} }
	znak=fgetc(ulaz); }
	int j;
	for(i=0;i<broj_rijeci;i++){
		for(j=i+1;j<broj_rijeci;j++){
			if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1)){
				int temp=brojac[j];
				brojac[j]=brojac[i];
				brojac[i]=temp;
				swap(rijeci[i],rijeci[j]);
			}
		}
	}
	int kraj=10;
	char novired='\n';
	if(broj_rijeci<10) kraj=broj_rijeci;
	for(i=0;i<kraj;i++){
		fputs(rijeci[i],izlaz);
		fputc(novired,izlaz);
	}
char c=fgetc(ulaz1);
while(c!=EOF){
	duzina = 0;
	while(slovo(c)) {
		rijec[duzina++]=c;
		c=fgetc(ulaz1);
	}
	rijec[duzina]='\0';
	int kontrola=0;
	if(duzina<10 && duzina!=0){
		for(j=0; j<kraj; j++){
if(strcmp(rijeci[j], rijec) == 0){
	char znk=j+20;
	kontrola=1;
	fputc(znk,izlaz);
	fputc(c,izlaz);
	break;
}}
}
if (kontrola==0){
	char*r=rijec;
	while(*r!='\0'){
fputc(*r,izlaz);
r++; }
fputc(c,izlaz);
}
c=fgetc(ulaz1);
}
printf(""Datoteka kompresovana.\n"");
fclose(ulaz);
fclose(ulaz1);
fclose(izlaz);
}
void dekompresuj(char*naziv, char*naziv1){
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv1,""w"");
char rijeci[1000][1000]={0}, rijec[1000];
int broj_rijeci=0, duzina=0, brojackrajeva=0;
char znak=fgetc(ulaz);
int kontrola=0;
while(znak!=EOF){
	duzina=0;
	kontrola=0;
	while(slovo(znak)){
		rijec[duzina++]= znak;
		znak=fgetc(ulaz); }
		rijec[duzina]='\0';
		if (duzina <10 && duzina!=0) {
			strcpy(rijeci[broj_rijeci], rijec);
		int j;
		for( j=0; j < broj_rijeci; j++) {
			if(strcmp(rijeci[j], rijec) == 0){
				kontrola=1;
				break;
			} }
if(kontrola)
break;
broj_rijeci++; 
}
znak=fgetc(ulaz);
}
brojackrajeva=0;
char c=fgetc(ulaz1);
while(c!=EOF){
	if(c=='\n')brojackrajeva++;
	if(brojackrajeva==broj_rijeci) break;
	c=fgetc(ulaz1); 
}
c=fgetc(ulaz1);
while(c!=EOF){
	int n=0;
if(c>=20 && c<=30) {
	char*p=rijeci[c-20];
	n=1;
while(*p!='\0'){
fputc(*p,izlaz);
p++; }}
if(n==0)
fputc(c,izlaz);
c=fgetc(ulaz1); }
printf(""Datoteka dekompresovana.\n"");
fclose(ulaz);
fclose(izlaz);
fclose(ulaz1);
}
int main(){
	int opcija;
char s[100],p[100];
do {
	printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
scanf(""%d"",&opcija);
switch(opcija){
	case 1:
	printf(""Unesite ime ulazne datoteke: "");
	unesi(s,40);
	printf(""Unesite ime izlazne datoteke: "");
	unesi(p,40);
	kompresuj(s,p);
	break;
	case 2:
	printf(""Unesite ime ulazne datoteke: "");
	unesi(s,40);
	printf(""Unesite ime izlazne datoteke: "");
	unesi(p,40);
	dekompresuj(s,p);} }
	while(opcija!=0);
	return 0; }","
#include <stdio.h>
#include <ctype.h>
#include <string.h>

void unesi(char niz[], int velicina) {
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\n') {
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
	
}

int slovo(int c) {
	if(c>='A' && c<='Z' || c>='a' && c<='z') return 1;
	return 0;
}

void swap(char*p , char*q) {
	char temp[100];
	strcpy(temp,p);
	strcpy(p,q);
	strcpy(q,temp);
}

void kompresuj(char*naziv, char*naziv1) {
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv1,""w"");
	
	char rijeci[1000][1000]={0};
	int brojac[1000]={0}; 
	int i, broj_rijeci=0;
	char rijec[1000];
	int duzina;
	char znak=fgetc(ulaz);
	while(znak!=EOF) {
		duzina=0;
		while(slovo(znak)) {
			rijec[duzina++]=znak;
			znak=fgetc(ulaz);
		}
		rijec[duzina]='\0';
		if(duzina<10 && duzina!=0) {
			int ima=0;
			int j;
			for(j=0;j<broj_rijeci;j++) {
				if(strcmp(rijeci[j],rijec)==0) {
					ima=1;
					brojac[j]++;
					break;
				}
			}
			if(ima!=1) {
				strcpy(rijeci[broj_rijeci],rijec);
				brojac[broj_rijeci++]=1;
			}
		}
		znak=fgetc(ulaz);
	}
	int j;
	for(i=0;i<broj_rijeci;i++) {
		for(j=i+1;j<broj_rijeci;j++) {
			if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1)) {
				int temp=brojac[j];
				brojac[j]=brojac[i];
				brojac[i]=temp;
				swap(rijeci[i],rijeci[j]);
			}
		}
	}
	int kraj=10;
	char novired='\n';
	if(broj_rijeci<10) kraj=broj_rijeci;
	
	for(i=0;i<kraj;i++) {
		fputs(rijeci[i],izlaz);
		fputc(novired,izlaz);
	}
	
	char c=fgetc(ulaz1);
	while(c!=EOF) {
		duzina=0;
		while(slovo(c)) {
			rijec[duzina++]=c;
			c=fgetc(ulaz1);
		}
		rijec[duzina]='\0';
		int kontrola=0;
		if(duzina<10 && duzina!=0) {
			for(j=0;j<kraj;j++) {
				if(strcmp(rijeci[j],rijec)==0) {
					char znk=j+20;
					kontrola=1;
					fputc(znk,izlaz);
					fputc(c,izlaz);
					break;
				}
			}
		}
		if(kontrola==0) {
			char*r=rijec;
			while(*r!='\0') {
				fputc(*r,izlaz);
				r++;
			}
			fputc(c,izlaz);
		}
		c=fgetc(ulaz1);
	}
	printf(""Datoteka kompresovana.\n"");
	fclose(ulaz);
	fclose(ulaz1);
	fclose(izlaz);
	
}

void dekompresuj(char*naziv, char*naziv1) {
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv1,""w"");
	
	char rijeci[1000][1000]={0},rijec[1000];
	int broj_rijeci=0, duzina=0, brojackrajeva=0;
	char znak=fgetc(ulaz);
	int kontrola=0;
	while(znak!=EOF) {
		duzina=0;
		kontrola=0;
		while(slovo(znak)) {
			rijec[duzina++]=znak;
			znak=fgetc(ulaz);
		}
		rijec[duzina]='\0';
		if(duzina<10 && duzina!=0) {
			strcpy(rijeci[broj_rijeci],rijec);
			int j;
			for(j=0;j<broj_rijeci;j++) {
				if(strcmp(rijeci[j],rijec)==0) {
					kontrola=1;
					break;
				}
			}
			if(kontrola) break;
			broj_rijeci++;
		}
		znak=fgetc(ulaz);
	}
	brojackrajeva=0;
	char c=fgetc(ulaz1);
	while(c!=EOF) {
		if(c=='\n') brojackrajeva++;
		if(brojackrajeva==broj_rijeci) break;
		c=fgetc(ulaz1);
	}
	c=fgetc(ulaz1);
	while(c!=EOF) {
		int n=0;
		if(c>=20 && c<=30) {
			char*p=rijeci[c-20];
			n=1;
			while(*p!='\0') {
				fputc(*p,izlaz);
				p++;
			}
		}
		if(n==0)
		fputc(c,izlaz);
		c=fgetc(ulaz1);
	}
	printf(""Datoteka dekompresovana.\n"");
	fclose(ulaz);
	fclose(izlaz);
	fclose(ulaz1);
	
}

int main() {
	int opcija;
	char s[100], p[100];
	do {
		printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
		scanf(""%d"",&opcija);
		switch(opcija){
			case 1: printf(""Unesite ime ulazne datoteke: "");
			unesi(s,40);
			printf(""Unesite ime izlazne datoteke: "");
			unesi(p,40);
			kompresuj(s,p);
			break;
			case 2:
			printf(""Unesite ime ulazne datoteke: "");
			unesi(s,40);
			printf(""Unesite ime izlazne datoteke: "");
			unesi(p,40);
			dekompresuj(s,p);
			
			
		} 
	}while(opcija!=0);
	return 0;
}
                                                                                                                                   
               "
2398,97,97,0,61,A2016/Z4/Z1/student2567,A2016/Z4/Z1/student9897,"#include <stdio.h>

void unesi (char niz[], int velicina) {
	
	char znak=getchar(); 
	if (znak=='\n') znak=getchar(); 
	int i=0; 
	
	while (i<velicina-1 && znak!='\n') {
		niz[i]=znak; 
		i++; 
		znak=getchar(); 
	}
	niz[i]='\0'; 
}

 char* izbaci_najcescu (char*s) {
	
	char*p=s;
	char*kraj=s; 
	char*q=s;
	int neslovo=1,razmak=1; 
	
	while (*s!='\0') { 
		
		if (*s==' ') razmak=1; 
		
		else if (razmak==1) {
			
			razmak=0; 
			if (*s>='A' && *s<='Z' || *s>='a' && *s<='z') neslovo=1; 
			
			else if (neslovo==1) {
				
				q++; 
				
				if (*q=='\0') break; 
				
				if (*p++==*q++) {
					kraj=s; 
					
					while (*kraj!='\0' && *kraj!=' ') 
					kraj++; 
				}

			}
			
		}
		s++; 
		*kraj='\0';
	}
	return q; 
}

int main() {
	
	char tekst[100]; 
	
	printf (""Unesite neki tekst: ""); 
	unesi(tekst, 100); 
	
	izbaci_najcescu(tekst); 
	printf (""%s"", tekst); 
	
	return 0;
}
","#include <stdio.h>

void unesi (char niz[], int velicina) {
	
	char znak=getchar(); 
	if (znak=='\n') znak=getchar(); 
	int i=0; 
	
	while (i<velicina-1 && znak!='\n') {
		niz[i]=znak; 
		i++; 
		znak=getchar(); 
	}
	niz[i]='\0'; 
}

 char* izbaci_najcescu (char*s) {
	
	char*p=s;
	char*kraj=s; 
	char*q=s;
	int neslovo=1,razmak=1; 
	
	while (*s!='\0') { 
		
		if (*s==' ') razmak=1; 
		
		else if (razmak==1) {
			
			razmak=0; 
			if (*s>='A' && *s<='Z' || *s>='a' && *s<='z') neslovo=1; 
			
			else if (neslovo==1) {
				
				q++; 
				
				if (*q=='\0') break; 
				
				if (*p++==*q++) {
					kraj=s; 
					
					while (*kraj!='\0' && *kraj!=' ') 
					kraj++; 
				}

			}
			
		}
		s++; 
		*kraj='\0';
	}
	return q; 
}

int main() {
	
	char tekst[100]; 
	
	printf (""Unesite neki tekst: ""); 
	unesi(tekst, 100); 
	
	izbaci_najcescu(tekst); 
	printf (""%s"", tekst); 
	
	return 0;
}
"
2409,44,44,0,13,A2016/Z3/Z1/student8518,A2016/Z3/Z1/student3759,"#include<stdio.h>
int daj_prost()
{
    static int i=1;
    int j;
    i++;
    for(j=2; j<i; j++) {
        if(i%j==0) {
            daj_prost();
        }
    }
    return i;
}

int main()
{
    int A,B,i,y,suma=0;
    do {
        printf(""Unesite brojeve A i B:"");
        scanf(""%d %d"",&A,&B);
        if(A<=0) {
            printf("" A nije prirodan broj.\n"");
        }
        if(A>=B) {
            printf("" A nije manje od B.\n"");
        }
    } while (A>=B || A<=0 || B<=0);

    for(i=1; i<B; i++) {
        y=daj_prost();
        if(y>A && y<B) {
            suma=suma +y ;
        }
    }
    printf("" Suma prostih brojeva izmedju %d i %d je %d."",A,B,suma);
    return 0;
}
","#include <stdio.h>

int daj_prost(){
	int j;
	static int a=1;
	a++;
	for(j=2;j<a;j++){
		if(a%j==0){
			a++;
			j=2;
		}
	}
	return a;
}

int main() {
	
	int A, B, i, suma=0, a;
	
	do{
		printf(""Unesite brojeve A i B: "");
		scanf(""%d %d"", &A, &B);
		if(A<=0){
			printf(""A nije prirodan broj.\n"");
		}
		else if(A>=B){
			printf(""A nije manje od B.\n"");
		}
	}while(A>=B || A<=0 || B<=0);
	
	for(i=0;i<B;i++){
		a=daj_prost();
		if(a>A && a<B){
			suma=suma+a;
		}
	}
	
	printf(""Suma prostih brojeva izmedju %d i %d je %d."", A, B, suma);
	
	return 0;
}
"
2410,46,46,0,25,A2016/Z1/Z3/student5170,A2016/Z1/Z3/student2953,"#include <stdio.h>
#include <math.h>
int main() {
    char L;
    int UV=0,C=0,B=0,S=0,V=0,P=0;
    float PC,PB,PS,PV,PP;
    printf(""Unesite vozila: "");
    do {
    scanf(""%c"",&L);
    if (L!='C' && L!='c' && L!='B' && L!='b' && L!='S' && L!='s' && L!='V' && L!='v' && L!='P' && L!='p' && L!='k' && L!='K' && L!='\n') {printf(""Neispravan unos\n"");}
    else if (L=='C' || L=='c' || L=='B' || L=='b' || L=='S' || L=='s' || L=='V' || L=='v' || L=='P' || L=='p') {UV++;}
    if (L=='p' || L=='P') {P++;}
    if (L=='v' || L=='V') {V++;}
    if (L=='s' || L=='S') {S++;}
    if (L=='b' || L=='B') {B++;}
    if (L=='c' || L=='C') {C++;}
    } while (L!='k' && L!='K');
    printf(""Ukupno evidentirano %d vozila.\n"", UV);
    if (UV!=0) {
    if (C>=V && C>=S && C>=B && C>=P) {PC=(C*100.0)/UV; printf(""Najpopularnija boja je crna (%.2f%%)."", PC);}
    else if (B>=V && B>=S && B>=P && B>=C) {PB=(B*100.0)/UV; printf(""Najpopularnija boja je bijela (%.2f%%)."", PB);}
    else if (S>=V && S>=P && S>=B && S>=C) {PS=(S*100.0)/UV; printf(""Najpopularnija boja je siva (%.2f%%)."", PS);}
    else if (V>=P && V>=S && V>=B && V>=C) {PV=(V*100.0)/UV; printf(""Najpopularnija boja je crvena (%.2f%%)."", PV);}
    else if (P>=V && P>=S && P>=B && P>=C) {PP=(P*100.0)/UV; printf(""Najpopularnija boja je plava (%.2f%%)."", PP);}
    }
    else {printf(""Najpopularnija boja je crna (0.00%%)."");}
	return 0;
}
","#include <stdio.h>

int main() {
	char a;
	a=='m';
	int brc, brp, brv, brb, brs, u;
	brc=0; brb=0; brs=0; brv=0; brp=0; u=0;
	printf(""Unesite vozila: "");
	do {
		scanf(""%c"", &a);
		if (a=='c' || a=='C') brc++;
		else if (a=='b' || a=='B') brb++;
		else if (a=='s' || a=='S') brs++;
		else if (a=='v' || a=='V') brv++;
		else if (a=='p' || a=='P') brp++;
		else if (a!='c' && a!='C' && a!='b' && a!='B' && a!='s' && a!='S' && a!='v' && a!='V' && a!='p' && a!='P' && a!='k' && a!='K') {
			printf(""Neispravan unos\n"");
	}
		else if (a=='k' || a=='K') break;
		
	}
	while (a!='k' && a!='K');
	double x;
	u = brc + brb + brs + brv + brp;
	printf(""Ukupno evidentirano %d vozila.\n"",u);
	if (u!=0) {
	if (brc>=brp && brc>=brv && brc>=brb && brc>=brs) {
		x = (brc*100.)/u;
		printf(""Najpopularnija boja je crna (%.2f%%)."", x);
	}
	else if (brb>=brc && brb>=brv && brb>=brs && brb>=brp) {
		x = (brb*100.)/u;
		printf(""Najpopularnija boja je bijela (%.2f%%)."", x);
	}
    else if (brs>=brp && brs>=brc && brs>=brb && brs>=brv) {
		x = (brs*100.)/u;
		printf(""Najpopularnija boja je siva (%.2f%%)."", x);
	}
    else if (brv>=brp && brv>=brb && brv>=brc && brv>=brs) {
		x = (brv*100.)/u;
		printf(""Najpopularnija boja je crvena (%.2f%%)."", x);
	}
	else if (brp>=brs && brp>=brv && brp>=brb && brp>=brc) {
		x = (brp*100.)/u;
		printf(""Najpopularnija boja je plava (%.2f%%)."", x);
	}
	}
	else if (u==0) {
	if (brc>=brp && brc>=brv && brc>=brb && brc>=brs) {
		printf(""Najpopularnija boja je crna (0.00%%)."");
	}
	else if (brb>=brc && brb>=brv && brb>=brs && brb>=brp) {
		printf(""Najpopularnija boja je bijela (0.00%%)."");
	}
    else if (brs>=brp && brs>=brc && brs>=brb && brs>=brv) {
		printf(""Najpopularnija boja je siva (0.00%%)."");
	}
    else if (brv>=brp && brv>=brb && brv>=brc && brv>=brs) {
		printf(""Najpopularnija boja je crvena (0.00%%)."");
	}
	else if (brp>=brs && brp>=brv && brp>=brb && brp>=brc) {
		printf(""Najpopularnija boja je plava (0.00%%)."");
	}
}
	/*printf(""Zadaća 1, Zadatak 3"");*/
	return 0;
}
"
2421,20,20,0,36,A2016/Z5/Z3/student1833,A2016/Z5/Z3/student9538,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati, minute, sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

void unesi(char niz[]) {
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<9 && znak!='\n') {
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	while(znak!='\n')
	znak=getchar();
}


int ucitaj_datoteku(struct Cas raspored[]) {
	FILE *ulaz=fopen(""raspored.dat"", ""rb+"");
	int greska=0;
	FILE *ulaz1=fopen(""raspored.dat"", ""rb+"");
	if(ulaz==NULL || ulaz1==NULL) {
		greska=1;
		return 0;
	}
  
   int ucitano=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz);
   int ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);
   fclose(ulaz);
   fclose(ulaz1);

return ucitano1                      ;
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova) {
	FILE* dat=fopen(""raspored.dat"", ""wb"");
	int vel=sizeof(struct Cas);
    int ucitano=fwrite(raspored,vel,broj_casova,dat);
	fclose(dat);
	if(ucitano>0) return 1;
	return ucitano;
	}

void ispis_rasporeda(struct Cas raspored[], int broj_casova) {
	int i, j, k, x, s, min=100, max=0;
	int indexmaxa=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].pocetak.sati<min) min=raspored[i].pocetak.sati;
		if(raspored[i].kraj.sati>max) {
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	if(raspored[indexmaxa].kraj.minute==0) max=max-1;
	printf(""\n       PON       UTO       SRI"");
	printf(""       CET       PET       SUB\n"");
	for(i=min;i<=max;i++) {
		if(i<10) printf(""%d:00   "",i);
		else printf(""%d:00  "", i);
		
		for(j=1;j<7;j++) {
			for(k=0;k<broj_casova;k++) {
				s=raspored[k].pocetak.sati; 
				if(s<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i) {
					printf(""%-10s"", raspored[k].predmet);
					break;
					x=i;
				}
			}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");
		}
		printf(""\n"");
	}
	//printf(""\n"");
}

int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas) {
	int i;
	for(i=0;i<broj_casova;i++) {
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&
		(cas.pocetak.minute+cas.pocetak.sati*60==raspored[i].pocetak.minute+raspored[i].pocetak.sati*60
		|| raspored[i].kraj.minute+raspored[i].kraj.sati*60==cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && 
		(raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.pocetak.minute+cas.pocetak.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.pocetak.minute+cas.pocetak.sati*60 || 
		cas.pocetak.minute+cas.pocetak.sati*60<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 &&
		cas.kraj.minute+cas.kraj.sati*60>raspored[i].kraj.minute+raspored[i].kraj.sati*60 ||
		raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
	}
	return 0;
}

void ispisi_dan(struct Cas raspored[], int broj_casova, int dan) {
	int brojac=1;
	int i;
	printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) {
			printf(""\n%d) %s (%02d:%02d-%02d:%02d)"", brojac,
			raspored[i].predmet, raspored[i].pocetak.sati,
			raspored[i].pocetak.minute,raspored[i].kraj.sati,
			raspored[i].kraj.minute);
			brojac++;
		}
	}
}

void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj) {
	int i, j;
	int k=0;
	int n=1;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) { k++; n++; }
		if(k==redni_broj) {
			for(j=i;j<broj_casova-1;j++) {
				raspored[j]=raspored[j+1];
			}
			if(n>0) break;
			return;
		}
	}
}

int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje) {
	if(broj_casova==200 || trajanje>10) return 0;
	int i, k, pocetak, dan, poc, moze=0;
	struct Cas cas;
	
	for(i=1;i<7;i++) 
	  for(k=9;k<=19-trajanje;k++) {
	  	dan=i;
	  	poc=k;
	  	strcpy(cas.predmet,predmet);
	  	cas.dan_u_sedmici=dan;
	  	cas.pocetak.sati=poc;
	  	cas.kraj.sati=k+trajanje;
	  	cas.pocetak.minute=cas.kraj.minute=0;
	  	if(preklapanje(raspored,broj_casova,cas)==0) {
	  	raspored[broj_casova]=cas;
	  	return 1;
	  }
}
  return 0;
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan,int redni_broj, struct Cas promjena) {
	int i;
	int k=0;
	int index=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) k++;
		if(k==redni_broj) {
			index=i;
			break;
		}
}
  raspored[index]=promjena;
}

int poziv(struct Cas raspored[], int ucit, char* ime, int br) {
	int vr=dodaj_cas(raspored,ucit,ime,br);
	return vr;
}

struct Cas zamj(struct Cas casko, int dan, int sat, int min, int sat1, int min1) {
	casko.dan_u_sedmici=dan;
	casko.pocetak.sati=sat;
	casko.pocetak.minute=min;
	casko.kraj.sati=sat1;
	casko.kraj.minute=min1;
	return casko;
	
}
int main() {
	struct Cas raspored[KAPACITET];
	int ucit=ucitaj_datoteku(raspored);
	int broj, br, rez, dan, cs, zap, m;
	char ime[100];
	for (m=0;m<KAPACITET;m++)
	{
		raspored[m].pocetak.sati=0;
		raspored[m].kraj.sati=0;
		raspored[m].dan_u_sedmici=1;
		raspored[m].pocetak.minute=0;
		raspored[m].kraj.minute=0;
		raspored[m].pocetak.sekunde=0;
		raspored[m].kraj.sekunde=0;
	}
	poc:
	printf(""1) Ispis rasporeda\n"");
	printf(""2) Dodavanje casa\n"");
	printf(""3) Promjena casa\n"");
	printf(""4) Brisanje casa\n"");
	printf(""0) Kraj rada\n"");
	printf(""Izaberite opciju: "");
	scanf(""%d"", &broj);
	switch(broj) {
		case 1:
		ispis_rasporeda(raspored,ucit);
		if(broj==0) return 0;
		break;
		
		case 2:
		printf(""Unesite naziv predmeta: "");
		unesi(ime);
		printf(""Unesite broj casova: "");
		scanf(""%d"", &br);
		if(broj==0) return 0;
		rez=poziv(raspored,ucit,ime,br);
		if(rez==0) printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"", br);
		if(rez==1) ucit++;
		break;
	
       case 4:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     ispisi_dan(raspored,ucit,dan);
     printf(""\nIzaberite koji cas zelite obrisati: "");
     scanf(""%d"", &cs);
     obrisi_cas(raspored,ucit,dan,cs);
     if(broj==0) return 0;
     printf(""Cas obrisan\n"");
     ucit--;
     break;
     
     case 3:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     int sat, min;
     char z;
     int sat1, min1;
     char z1;
     ispisi_dan(raspored,ucit,dan);
     if(broj==0) return 0;
     printf(""\nIzaberite koji cas zelite promijeniti: "");
     scanf(""%d"", &cs);
     printf(""Naziv predmeta: "");
     unesi(ime);
     printf(""Vrijeme pocetka: "");
     scanf(""%d"", &sat);
     scanf(""%c"", &z);
     scanf(""%d"", &min);
     printf(""Vrijeme zavrsetka: "");
     scanf(""%d"", &sat1);
     scanf(""%c"", &z1);
     scanf(""%d"", &min1);
     struct Cas casko={ime,dan,{sat,min,0},{sat1,min1,0}};
     strcpy(casko.predmet,ime);
     casko=zamj(casko,dan,sat,min,sat1,min1);
     promijeni_cas(raspored,ucit,dan,cs,casko);
     break;
     
     case 0:
     zap=zapisi_datoteku(raspored,ucit);
     return 0;
	}
	if(broj!=0) goto poc;
	return 0;
}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};
char unesi(char niz[],int velicina) {
	char znak=getchar();
	int i=0;
	while(znak=='\n')
	znak=getchar();
	while(i< velicina-1 && znak !='\n' ) {
		niz[i++] = znak;
		znak = getchar();
	}
niz[i]='\0';
return znak; }
void ocisti(char znak){
	int ima=0;
	while(znak!='\n')
	znak=getchar(); }
int ucitaj_datoteku(struct Cas raspored[]){
FILE* dat=fopen(""raspored.dat"",""rb"");
if(dat == NULL) return 0;
int ucitanih=fread(raspored,sizeof(struct Cas),KAPACITET,dat);
fclose(dat);
return ucitanih; }
void ispisreda(){
printf(""\n       PON       UTO       SRI"");
printf(""       CET       PET       SUB"");
printf(""\n""); }
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	ispisreda();
	for(i=0;i<broj_casova;i++){
		if(raspored[i].pocetak.sati<min)
		min=raspored[i].pocetak.sati;}
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max ){
			max=raspored[i].kraj.sati;
			indexmaxa=i;
}} if(raspored[indexmaxa].kraj.minute==0) max=max-1;

int x;
int s,dan,n;

for(i=min;i<=max;i++){
	if(i<10) printf(""9:00   "");
	else printf(""%d:00  "",i);
	for(j=1;j<7;j++){
		for(k=0;k<broj_casova;k++){
			s=raspored[k].pocetak.sati;
			dan=raspored[k].dan_u_sedmici;
			n=raspored[k].kraj.sati;
			if(s<=i && dan==j && n>=i) {
				printf(""%-10s"",raspored[k].predmet);
				break;
			}}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");}
			printf(""\n""); }}
			
			void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
				int i;
				printf(""Uneseni su casovi: "");
				int k=1;
				
			for(i=0;i<broj_casova;i++){
				if(raspored[i].dan_u_sedmici==dan){
					printf(""\n%d) %s ("",k++,raspored[i].predmet);
					if(raspored[i].pocetak.sati<10) printf(""0"");
					printf(""%d:"",raspored[i].pocetak.sati);
					if (raspored[i].pocetak.minute<10) printf(""0"");
					printf(""%d-"",raspored[i].pocetak.minute);
					printf(""%02d:%02d)"",raspored[i].kraj.sati,raspored[i].kraj.minute);
				}
			}}
			int zapisi_datoteku(struct Cas raspored[], int broj_casova){
				FILE* dat = fopen(""raspored.dat"", ""wb"");
				int ucitano=fwrite(raspored, sizeof(struct Cas), broj_casova, dat);
				fclose(dat);
				if(ucitano>0) return 1;
				return ucitano; }
				void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
					int i; int k=0; int j, brojac=1;
					for(i=0;i<broj_casova;i++){
					if(raspored[i].dan_u_sedmici==dan){ k++; brojac++;
					if(k==redni_broj){
						
						for(j=i;j<broj_casova-1;j++)
						raspored[j]=raspored[j+1];
						
						if(brojac>0)break; } }}}
						int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){
							int i;
						int minpoc1,minpoc2,minkraj1,minkraj2;
						for(i=0;i<broj_casova;i++) {
							minpoc1=raspored[i].pocetak.minute+raspored[i].pocetak.sati*60;
							minkraj1=raspored[i].kraj.minute+raspored[i].kraj.sati*60;
							minpoc2=cas.pocetak.minute+cas.pocetak.sati*60;
							minkraj2=cas.kraj.minute+cas.kraj.sati*60;
						if (raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<minpoc2 && minkraj1>minpoc2 || minpoc2<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 && cas.kraj.minute+cas.kraj.sati*60>minkraj1 || raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 && minkraj1>cas.kraj.minute+cas.kraj.sati*60))
						return 1;
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (minpoc2==minpoc1 || minkraj1==minkraj2))
						return 1; 
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&(minpoc1<minpoc2 && minkraj1>minpoc2 || minpoc2<minpoc1 && minkraj2>minkraj1 || minpoc1<minkraj2 && minkraj1>minkraj2))
						return 1; }
						return 0;}
						int dodaj_cas(struct Cas raspored[], int broj_casova, const char*predmet, int trajanje){
							if (broj_casova==200) return 0;
							int i,j,preklop;
							for(i=0; i<6; i++)
								for(j=9; j<=19-trajanje; j++){
									struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
									char *q=cas.predmet,*p=(char*)predmet;
									struct Cas cc;
									while(*q++=*p++);
									preklop=preklapanje(raspored,broj_casova,cas);
									if(preklop==0){
										raspored[broj_casova]=cas;
										return 1;
									} if(preklop==1) continue; }
									return 0; }
									void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
								int i,redni=0;
								for(i=0;i<broj_casova; i++){
									if(raspored[i].dan_u_sedmici==dan) redni++;
									if(redni_broj==redni)
									raspored[i]=promjena; }}
								int main () {
									int opcija,broj_casova=0;
									struct Cas raspored[KAPACITET];
									ucitaj_datoteku(raspored);
									do{
										printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
										scanf(""%d"",&opcija);
										int broj=opcija;
										switch(opcija){
											case 0: {
												zapisi_datoteku(raspored,broj_casova);
												break;
											} case 1:{
												if(broj!=0)   ispis_rasporeda(raspored,broj_casova);
												break;}
												case 2:  if(broj!=0)
											{
								
												int br_casova,dodan=0;
												char  predmet[10];
												printf(""Unesite naziv predmeta: Unesite broj casova: "");
												if(broj!=0)   ocisti(unesi(predmet,10));
												scanf(""%d"",&br_casova);
												dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
												int vr=dodan;
											if(vr==0)
											printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
											if(vr==1)  broj_casova++;
											
											break;}
											case 4: if(broj!=0)
											{
												int dan,redni;
												int br=broj_casova;
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,br,dan);
												printf(""\nIzaberite koji cas zelite obrisati: "");
											    scanf(""%d"",&redni);
											    obrisi_cas(raspored,br,dan,redni);
											    printf("" Cas obrisan\n"");
											    broj_casova--;
											}
											case 3:  if(broj!=0){
												struct Cas promjena;
												int dan,redni;
												char *q,*p;
												char znak,predmet[10];
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,broj_casova,dan);
												promjena.dan_u_sedmici=dan;
												printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
												scanf(""%d"",&redni);
												ocisti(unesi(predmet,10));
												q=promjena.predmet;
												p=predmet;
												strcpy(q,p);
												printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
												scanf(""%d%c"",&promjena.pocetak.sati,&znak);
												scanf(""%d"",&promjena.pocetak.minute);
												scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
												promijeni_cas(raspored,broj_casova,dan,redni,promjena);
												break;}
										} 
										
									} while(opcija!=0);
									    
									    
									    	return 0; 
									
								}
									
											
							
						
					
					
			
	


"
2425,99,99,0,192,A2016/Z1/Z1/student8819,A2016/Z1/Z1/student4888,"#include <stdio.h>

int main() {
	//printf(""Zadaća 1, Zadatak 1"");
	
	//Tarik
	
	float Tp1, Tp2, Tp, Tz, Tzi, Tu;
	int To;
	printf (""Unesite bodove za Tarika: "");
	printf (""\nI parcijalni ispit: "");
	scanf (""%f"", &Tp1);
	if (Tp1>20 || Tp1<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%f"", &Tp2);
	if (Tp2>20 || Tp2<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%f"", &Tp);
	if (Tp>10 || Tp<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%f"", &Tz);
	if (Tz>10 || Tz<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%f"", &Tzi);
	if (Tzi>40 || Tzi<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	Tu = Tp1 + Tp2 + Tz + Tp + Tzi;
	if (Tu<55) To = 0;
	if (Tu>=55 && Tu<65) To = 6;
	if (Tu>=65 && Tu<75) To = 7;
	if (Tu>=75 && Tu<85) To = 8;
	if (Tu>=85 && Tu<92) To = 9;
	if (Tu>=92 && Tu<=100) To = 10;
	
//	printf(""Tu %f"", Tu);
//	printf (""To %d"", To);
	//Bojan
	
	float Bp1, Bp2, Bp, Bz, Bzi, Bu;
	int Bo;
	printf (""Unesite bodove za Bojana: "");
	printf (""\nI parcijalni ispit: "");
	scanf (""%f"", &Bp1);
	if (Bp1>20 || Bp1<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%f"", &Bp2);
	if (Bp2>20 || Bp2<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%f"", &Bp);
	if (Bp>10 || Bp<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%f"", &Bz);
	if (Bz>10 || Bz<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%f"", &Bzi);
	if (Bzi>40 || Bzi<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	
	Bu = Bp1 + Bp2 + Bz + Bp + Bzi;
	if (Bu<55) Bo = 0;
	if (Bu>=55 && Bu<65) Bo = 6;
	if (Bu>=65 && Bu<75) Bo = 7;
	if (Bu>=75 && Bu<85) Bo = 8;
	if (Bu>=85 && Bu<92) Bo = 9;
	if (Bu>=92 && Bu<=100) Bo = 10;
	
//	printf(""Bu %f"", Bu);
//	printf (""Bo %d"", Bo);
	//Mirza
	
	float Mp1, Mp2, Mp, Mz, Mzi, Mu;
	int Mo;
	printf (""Unesite bodove za Mirzu: "");
	printf (""\nI parcijalni ispit: "");
	scanf (""%f"", &Mp1);
	if (Mp1>20 || Mp1<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%f"", &Mp2);
	if (Mp2>20 || Mp2<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%f"", &Mp);
	if (Mp>10 || Mp<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%f"", &Mz);
	if (Mz>10 || Mz<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%f"", &Mzi);
	if (Mzi>40 || Mzi<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	Mu = Mp1 + Mp2 + Mz + Mp + Mzi;
	if (Mu<55) Mo = 0;
	if (Mu>=55 && Mu<65) Mo = 6;
	if (Mu>=65 && Mu<75) Mo = 7;
	if (Mu>=75 && Mu<85) Mo = 8;
	if (Mu>=85 && Mu<92) Mo = 9;
	if (Mu>=92 && Mu<=100) Mo = 10;
	
//	printf(""Mu %f"", Mu);
//	printf (""Mo %d"", Mo);
	
	//ISPITIVANJE	int a;
/*	a=0;
	if (To>5 && Mo>5 && Bo>5) {
		printf (""Sva tri studenta su polozila. "");
		a = 1;
	}
	
	else if (To>5 && Mo>5 && Bo<6 || To>5 && Mo<6 && Bo>5 || To<6 && Mo>5 && Bo>5) printf (""Dva studenta su polozila. "");
	else if (To>5 && Mo<6 && Bo<6 || To<6 && Mo>5 && Bo<6 || To<6 && Mo<5 && Bo>5) printf (""Jedan student je polozio. "");
	else printf (""Nijedan student nije polozio. "");
	
	if (To>=6) {
		if (Bo>=6) {
			if (Mo>=6) {
				printf (""Sva tri studenta su polozila. "");
				a = 1;
			}
			else printf (""Dva studenta su polozila. "");
		}
		else printf (""Jedan student je polozio. "");
	}
	else printf (""Nijedan student nije polozio. ""); 
	
	if (a) {
		if (To == Bo && To == Mo) printf (""\nSva tri studenta imaju istu ocjenu. "");
		if (To == Bo && Bo != Mo || Mo == To && Bo != To) printf (""\nDva od tri studenta imaju istu ocjenu. "");
		if (To != Bo && Mo != To) printf (""\nSvaki student ima razlicitu ocjenu. "");
	}
	*/
	
	int t=0;
	int b=0;
	int m=0;
	int s=0;
	
	if (To>5) t++;
	if (Bo>5) b++;
	if (Mo>5) m++;
	
	s = t+ b +m;
	
	if (s==0) printf (""Nijedan student nije polozio. "");
	if (s==1) printf (""Jedan student je polozio. "");
	if (s==2) printf (""Dva studenta su polozila. "");
	if (s==3) {
		printf (""Sva tri studenta su polozila. "");
		if (To == Bo && To == Mo) printf (""\nSva tri studenta imaju istu ocjenu. "");
		if (To == Bo && Bo != Mo || Mo == To && Bo != To) printf (""\nDva od tri studenta imaju istu ocjenu. "");
		if (To != Bo && Mo != To) printf (""\nSvaki student ima razlicitu ocjenu. "");
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	//printf(""Zadaća 1, Zadatak 1"");
	
	//Tarik
	
	float Tp1, Tp2, Tp, Tz, Tzi, Tu;
	int To;
	printf (""Unesite bodove za Tarika: "");
	printf (""\nI parcijalni ispit: "");
	scanf (""%f"", &Tp1);
	if (Tp1>20 || Tp1<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%f"", &Tp2);
	if (Tp2>20 || Tp2<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%f"", &Tp);
	if (Tp>10 || Tp<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%f"", &Tz);
	if (Tz>10 || Tz<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%f"", &Tzi);
	if (Tzi>40 || Tzi<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	Tu = Tp1 + Tp2 + Tz + Tp + Tzi;
	if (Tu<55) To = 0;
	if (Tu>=55 && Tu<65) To = 6;
	if (Tu>=65 && Tu<75) To = 7;
	if (Tu>=75 && Tu<85) To = 8;
	if (Tu>=85 && Tu<92) To = 9;
	if (Tu>=92 && Tu<=100) To = 10;
	
//	printf(""Tu %f"", Tu);
//	printf (""To %d"", To);
	//Bojan
	
	float Bp1, Bp2, Bp, Bz, Bzi, Bu;
	int Bo;
	printf (""Unesite bodove za Bojana: "");
	printf (""\nI parcijalni ispit: "");
	scanf (""%f"", &Bp1);
	if (Bp1>20 || Bp1<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%f"", &Bp2);
	if (Bp2>20 || Bp2<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%f"", &Bp);
	if (Bp>10 || Bp<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%f"", &Bz);
	if (Bz>10 || Bz<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%f"", &Bzi);
	if (Bzi>40 || Bzi<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	
	Bu = Bp1 + Bp2 + Bz + Bp + Bzi;
	if (Bu<55) Bo = 0;
	if (Bu>=55 && Bu<65) Bo = 6;
	if (Bu>=65 && Bu<75) Bo = 7;
	if (Bu>=75 && Bu<85) Bo = 8;
	if (Bu>=85 && Bu<92) Bo = 9;
	if (Bu>=92 && Bu<=100) Bo = 10;
	
//	printf(""Bu %f"", Bu);
//	printf (""Bo %d"", Bo);
	//Mirza
	
	float Mp1, Mp2, Mp, Mz, Mzi, Mu;
	int Mo;
	printf (""Unesite bodove za Mirzu: "");
	printf (""\nI parcijalni ispit: "");
	scanf (""%f"", &Mp1);
	if (Mp1>20 || Mp1<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""II parcijalni ispit: "");
	scanf (""%f"", &Mp2);
	if (Mp2>20 || Mp2<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Prisustvo: "");
	scanf (""%f"", &Mp);
	if (Mp>10 || Mp<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zadace: "");
	scanf (""%f"", &Mz);
	if (Mz>10 || Mz<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	printf (""Zavrsni ispit: "");
	scanf (""%f"", &Mzi);
	if (Mzi>40 || Mzi<0 ) {
		printf (""Neispravan broj bodova"");
		return 0;
	}
	Mu = Mp1 + Mp2 + Mz + Mp + Mzi;
	if (Mu<55) Mo = 0;
	if (Mu>=55 && Mu<65) Mo = 6;
	if (Mu>=65 && Mu<75) Mo = 7;
	if (Mu>=75 && Mu<85) Mo = 8;
	if (Mu>=85 && Mu<92) Mo = 9;
	if (Mu>=92 && Mu<=100) Mo = 10;
	
//	printf(""Mu %f"", Mu);
//	printf (""Mo %d"", Mo);
	
	//ISPITIVANJE	int a;
/*	a=0;
	if (To>5 && Mo>5 && Bo>5) {
		printf (""Sva tri studenta su polozila. "");
		a = 1;
	}
	
	else if (To>5 && Mo>5 && Bo<6 || To>5 && Mo<6 && Bo>5 || To<6 && Mo>5 && Bo>5) printf (""Dva studenta su polozila. "");
	else if (To>5 && Mo<6 && Bo<6 || To<6 && Mo>5 && Bo<6 || To<6 && Mo<5 && Bo>5) printf (""Jedan student je polozio. "");
	else printf (""Nijedan student nije polozio. "");
	
	if (To>=6) {
		if (Bo>=6) {
			if (Mo>=6) {
				printf (""Sva tri studenta su polozila. "");
				a = 1;
			}
			else printf (""Dva studenta su polozila. "");
		}
		else printf (""Jedan student je polozio. "");
	}
	else printf (""Nijedan student nije polozio. ""); 
	
	if (a) {
		if (To == Bo && To == Mo) printf (""\nSva tri studenta imaju istu ocjenu. "");
		if (To == Bo && Bo != Mo || Mo == To && Bo != To) printf (""\nDva od tri studenta imaju istu ocjenu. "");
		if (To != Bo && Mo != To) printf (""\nSvaki student ima razlicitu ocjenu. "");
	}
	*/
	
	int t=0;
	int b=0;
	int m=0;
	int s=0;
	
	if (To>5) t++;
	if (Bo>5) b++;
	if (Mo>5) m++;
	
	s = t+ b +m;
	
	if (s==0) printf (""Nijedan student nije polozio. "");
	if (s==1) printf (""Jedan student je polozio. "");
	if (s==2) printf (""Dva studenta su polozila. "");
	if (s==3) {
		printf (""Sva tri studenta su polozila. "");
		if (To == Bo && To == Mo) printf (""\nSva tri studenta imaju istu ocjenu. "");
		if (To == Bo && Bo != Mo || Mo == To && Bo != To) printf (""\nDva od tri studenta imaju istu ocjenu. "");
		if (To != Bo && Mo != To) printf (""\nSvaki student ima razlicitu ocjenu. "");
	}
	
	return 0;
}
"
2427,99,99,0,98,A2016/Z4/Z4/student8187,A2016/Z4/Z4/student3631,"#include <stdio.h>

void unesi (char niz[], int velicina){
	char znak = getchar();
	if (znak== '\n') znak=getchar();
	int i=0;
	while (i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}


char* obuhvat (char* tekst, double x1, double x2, double y1, double y2){
	char* krajprosle;
	char *s=tekst;
	double x=0, y=0;
	double o=0.1;
	while (*s!='\0'){
		if (!((*s>=0 && s<=9) || *s=='-' || *s=='.' || *s==',')) return 0;
		int imadec=0, predznak=1;
		char* poc;
		if (*s='(') {poc=s; s++;}
		x=0;
		while (*s!=','){
			if (!((*s>=0 && s<=9) || *s=='-' || *s=='.' || *s==',')) return 0;
			
			if (*s=='-') {s++; predznak=-1;}
			if (*s=='.') {imadec=1; s++;}
			if (*s==',') {break;}
			
			if (imadec==0){
				x=x*10+(*s-48);
			}
			else {
				x=x+(*s-48)*o;
				o=o/10;
			}
			s++;
			
		}
		x=x*predznak;
		imadec=0; predznak=1;
		s++;
		y=0;
		
		o=0.1;
		
		while (s!=')'){
			if (*s=='-') {s++; predznak=-1;}
			if (*s=='.') {imadec=1;s++;}
			
			if (imadec==0){
				y=y*10+(*s-48);
			}
			else {
				y=y+(*s-48)*o;
				o=o/10;
			}
			s++;
		}
		
		y=y*predznak;
		krajprosle=s;
		
		char *a=poc;
		int izb=0;
		if (y>y2 || y<y1 || x<x1 || x>x2) {
			izb=1;
			if (*(s+1)=='\0') {
				*(poc-1)='\0'; return tekst;
			}
			else { char*hod=s+2;
			while (*hod!='\0') {*poc=*hod;
			poc++; hod++;
			}
			poc='\0';
		}
	}
	if (izb){
		s=a; 
		s-=2;
	}
	s++;s++;
} 
return tekst;
	
}


int main() {
	char s[]=""(2.,2)"";
	char* rez= obuhvat(s,-3,-3,3,3);
	printf (""%s %s"", rez, s);
	return 0;
}
","#include <stdio.h>

void unesi(char niz[], int velicina) {
    char znak = getchar();
    if (znak == '\n') znak=getchar();
    int i = 0;
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i]='\0';
}

char* obuhvat(char* tekst, double x1, double x2, double y1, double y2){
    char* krajprosle;
    char *s=tekst;
    double x=0,y=0;
    double o=0.1;
     
    while (*s!='\0'){
        
        if (!((*s>=0 && s<=9) || *s=='-' || *s=='.' || *s==',')) return 0;
        int imadec=0, predznak=1;
        char* poc;
         if (*s='(') {poc=s; s++;}
        x=0;
       
        while (*s!=','){
        if (!((*s>=0 && s<=9) || *s=='-' || *s=='.' || *s==',')) return 0;
        
        if (*s=='-') {s++;predznak=-1;}
        if (*s=='.') {imadec=1;s++;}
        if (*s==',') {break;}
        
        if (imadec==0){
            x=x*10+(*s-48);
        }
        
        else {
            x=x+(*s-48)*o;
            o=o/10;
        }
        s++;
        }
        
        x=x*predznak;
        imadec=0;predznak=1;
        s++;
        y=0;
        
        o=0.1;
        
        while(s!=')') {
            
        if (*s=='-') {s++;predznak=-1;}
        if (*s=='.') {imadec=1;s++;}
        
        if (imadec==0){
            
            y=y*10+(*s-48);
        }
           else {
               y=y+(*s-48)*o;
               o=o/10;
           } 
            s++;
        }
        
        y=y*predznak;
        krajprosle=s;
        
        char *a=poc;
        int izb=0;
        if(y>y2 ||y<y1 || x<x1 || x>x2) {
            izb=1;
        if(*(s+1)=='\0') {*(poc-1)='\0'; return tekst;  }
        else {char*hod=s+2;
        while (*hod!='\0'){ *poc=*hod;
        poc++; hod++;
        }
        poc='\0';
        
    }
}

if (izb) {
    s=a; s-=2;}
    s++; s++;
} return tekst; }


int main() {
char s[]=""(2.,2)"";
char* rez= obuhvat(s,-3,-3,3,3);
printf (""%s %s"", rez, s);



	return 0;
}
"
2436,78,78,0,169,A2016/Z1/Z1/student7496,A2016/Z1/Z1/student8796,"#include <stdio.h>
#include <stdlib.h>
int main () {
    float a,b,c,x1,x2,x3,x4,x5,y1,y2,y3,y4,y5,z1,z2,z3,z4,z5;
    int x,y,z;
    printf(""Unesite bodove za Tarika:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &x1);
    if (x1<0 || x1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    } 
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &x2);
    if (x2<0 || x2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"", &x3);
    if(x3<0 || x3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%f"", &x4);
    if(x4<0 || x4>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &x5);
    if(x5<0 || x5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/*za prvog studenta*/
    
    printf(""Unesite bodove za Bojana:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &y1);
    if(y1<0 || y1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &y2);
    if(y2<0 || y2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"", &y3);
    if(y3<0 || y3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%f"", &y4);
    if(y4<0 || y4>10) {
        printf (""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &y5);
    if(y5<0 || y5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/* za drugog studenta*/
    
    printf(""Unesite bodove za Mirzu:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &z1);
    if(z1<0 || z1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &z2);
    if(z2<0 || z2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"",&z3);
    if(z3<0 || z3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }  
    printf(""Zadace: "");
    scanf(""%f"", &z4);
    if(z4<0 || z4>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &z5);
    if(z5<0 || z5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/* za treceg studenta*/
    
    system(""clear"");
    a=x1+x2+x3+x4+x5; 
    b=y1+y2+y3+y4+y5;
    c=z1+z2+z3+z4+z5;
    
    x=a;
    y=b;
    z=c;
    
    if(x<55) {
        x=5;
    }
    if(x>=55 && x<65) {
        x=6;
    }
    if(x>=65 && x<75) {
        x=7;
    }
    if (x>=75 && x<85) {
        x=8;
    }
    if (x>=85 && x<92) {
        x=9;
    }
    if (x>=92 && x<100) {
        x=10;
    }
    
    if(y<55) {
        y=5;
    }
    if(y>=55 && y<65) {
        y=6;
    }
    if(y>=65 && y<75) {
        y=7;
    }
    if (y>=75 && y<85) {
        y=8;
    }
    if (y>=85 && y<92) {
        y=9;
    }
    if (y>=92 && y<100) {
        y=10;
    }
    
    if(z<55) {
        z=5;
    }
    if(z>=55 && z<65) {
        z=6;
    }
    if(z>=65 && z<75) {
        z=7;
    }
    if (z>=75 && z<85) {
        z=8;
    }
    if (z>=85 && z<92) {
        z=9;
    }
    if (z>=92 && z<100) {
        z=10;
    }
    
    if(x>5 && y>5 && z>5) {
        printf(""Sva tri studenta su polozila.\n"");
        printf(""Svaki student ima razlicitu ocjenu.\n"");
        return 0;
    }
    
    if(x<=5 && y<=5 && z<=5) {
        printf(""Nijedan student nije polozio.\n"");
        return 0;
    }
    
    if((x>5 && y<=5 && z<=5) || (x<=5 && y>5 && z<=5) || (x<=5 && y<=5 && z>5)) {
        printf(""Jedan student je polozio.\n"");
        return 0;
    } 
    
    if((x>5 && y>5 && z<=5) || (x<=5 && y>5 && z>5) || (x>5 && y<=5 && z>5)) {
        printf(""Dva studenta su polozila.\n"");
        return 0;
    }
        
    if(x==y && y==z) {
        printf(""Sva tri studenta imaju istu ocjenu.\n"");
        return 0;
    }   
    
    if(x!=y && y!=z) {
        printf(""Sva tri studenta imaju razlicitu ocjenu.\n"");
        return 0;
    }
    
    if((x==y && y!=z) || (x!=y && y==z) || (x==y && y!=z)) {
        printf(""Dva od tri studenta imaju istu ocjenu.\n"");
        return 0;
    }
    
    return 0;
}     
       

","#include <stdio.h>
#include <stdlib.h>
int main() {
    float t1,t2,t3,t4,t5,b1,b2,b3,b4,b5,m1,m2,m3,m4,m5;
	int a,b,c;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &t1);
	if (t1<0 || t1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
    printf(""II parcijalni ispit: "");
	scanf(""%f"", &t2);
	if (t2<0 || t2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &t3);
	if (t3<0 || t3>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &t4);
	if (t4<0 || t4>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &t5);
	if (t5<0 || t5>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &b1);
	if (b1<0 || b1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &b2);
	if (b2<0 || b2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &b3);
	if (b3<0 || b3>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &b4);
	if (b4<0 || b4>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &b5);
	if (b5<0 || b5>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &m1);
	if (m1<0 || m1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &m2);
	if (m2<0 || m2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &m3);
	if (m3<0 || m3>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &m4);
	if (m4<0 || m4>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &m5);
	if (m5<0 || m5>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	system(""clear"");
a=t1 + t2 + t3 + t4 + t5;
b=b1 + b2 + b3 + b4 + b5;
c=m1 + m2 + m3 + m4 + m5;
if(a<55) {
	a=5;
}
if(a>=55 && a<65) {
	a=6;
}
if(a>=65 && a<75) {
	a=7;
}
if(a>=75 && a<85) {
	a=8;
}
if(a>=85 && a<92) {
	a=9;
}
if(a>=92 && a<=100) {
	a=10;
}
if(b<55) {
	b=5;
}
if(b>=55 && b<65) {
	b=6;
}
if(b>=65 && b<75) {
	b=7;
}
if(b>=75 && b<85) {
	b=8;
}
if(b>=85 && b<92) {
	b=9;
}
if(b>=92 && b<=100) {
	b=10;
}
if(c<55) {
	c=5;
}
if(c>=55 && c<65) {
	c=6;
}
if(c>=65 && c<75) {
	c=7;
}
if(c>=75 && c<85) {
	c=8;
}
if(c>=85 && c<92) {
	c=9;
}
if(c>=92 && c<100) {
	c=10;
}
if(a>5 && b>5 && c>5){
		printf(""Sva tri studenta su polozila. \n"");
}
if(a<=5 && b<=5 && c<=5){
		printf(""Nijedan student nije polozio.\n"");
		return 0;
}
	if(a>5 && b<=5 && c<=5){
		printf(""Jedan student je polozio.\n"");
		return 0;
}
	if(a<=5 && b>5 && c<=5){
		printf(""Jedan student je polozio.\n"");
		return 0;
}
	if(a<=5 && b<=5 && c>5){
		printf(""Jedan student je polozio.\n"");
		return 0;
}
if(a>5 && b>5 && c<= 5)
	{
	printf(""Dva studenta su polozila.\n"");
	return 0;
}
if(a<=5 && b>5 && c>5)
	{
	printf(""Dva studenta su polozila.\n"");
	return 0;
}
if(a>5 && b<=5 && c>5)
	{
	printf(""Dva studenta su polozila.\n"");
	return 0;
}
if(a == b && b == c ){
		printf(""Sva tri studenta imaju istu ocjenu.\n"");
}
if(a != b && b != c ){
		printf(""Svaki student ima razlicitu ocjenu.\n"");
}
if(a == b && b != c )
	{
		printf(""Dva od tri studenta imaju istu ocjenu.\n"");
}
if(a != b && b == c )
	{
		printf(""Dva od tri studenta imaju istu ocjenu.\n"");
}
if(a == c && b != c )
	{
		printf(""Dva od tri studenta imaju istu ocjenu.\n"");
}
return 0;
}

"
2437,93,93,0,68,A2016/Z3/Z3/student2900,A2016/Z3/Z3/student1313,"#include <stdio.h>

int main() {
	int i, i1, i2, j, M, N, matrica[200][200], temp;
	/*Unos dimenzija matrice */
	do {
	printf(""Unesite brojeve M i N: "");
	scanf (""%d %d"",&M,&N);
	if (M < 0 || M > 200 || N < 0 || N > 200)
	printf (""Brojevi nisu u trazenom opsegu.\n"");
	else break;
	} while (1);
	/*Unos elemenata matrice*/
	printf(""Unesite elemente matrice: "");
	for (i = 0; i < M; i++){
		for (j = 0; j < N; j++){
			scanf (""%d"",&matrica[i][j]);
		}
	}
	/* Za izbacivanje redova matrice */
	for(i=0; i<M; i++){
		for(i1 = i+1; i1<M; i1++){
			int a=1;
			for(j=0; j<N; j++){
				if(matrica[i][j] != matrica[i1][j])
					a=0;
			}
			if(a == 1){
				for(i2=i1+1; i2<M; i2++){
					for(j=0; j<N; j++){
						int temp = matrica[i2-1][j];
						matrica[i2-1][j] = matrica[i2][j];
					    matrica[i2][j] = temp;
					}
				}
				M--;
				i1--;
			}
		}
	}
	/*Za izbacivanje kolona matrice*/
    for (j = 0; j < N; j++){
 		for (i1 = j + 1; i1 < N; i1++){
 			int a = 1;
 			for (i2 = 0; i2 < M; i2++){
 				if (matrica[i2][j] != matrica[i2][i1] ) a = 0;
 			}
 			if (a == 1){
 				for (i = i1 + 1; i < N; i++){
 					for (i2 = 0; i2 < M; i2++){
 						int temp;
 					    temp = matrica [i2][i-1];
 						matrica[i2][i-1] = matrica [i2][i];
 					    matrica [i2][i] = temp;
 					}
 				}
 				N--;
 				i1--;
 			}
 		}
 	}	
 	/* Ispis matrice */
 	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i = 0; i < M; i++){
		for (j = 0; j < N; j++){
         printf(""%5.d"",matrica[i][j]);
		}
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int i,j, mat[200][200],M,N,i1,i2;
	
	do {
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"",&M,&N);
		 if (M<0 || M>200 || N<0 || N>200)
		 printf(""Brojevi nisu u trazenom opsegu.\n"");
		 else break;
	} while (1);
	
	printf(""Unesite elemente matrice: "");
	 for (i=0;i<M;i++){
	 	for (j=0;j<N;j++){
	 		scanf(""%d"",&mat[i][j]);
	 	}
	 }
	 
	for (i=0;i<M;i++){
		for (i1=i+1; i1<M; i1++){
			int istinitost=1;
			 for (j=0;j<N;j++){
			 	if (mat[i][j]!= mat[i1][j])
			 	istinitost=0;
			 }
	if (istinitost==1){
		for (i2=i1+1;i2<M;i2++){
			for (j=0;j<N;j++){
				int temp=mat[i2-1][j];
				mat[i2-1][j]=mat[i2][j];
				mat[i2][j]=temp;
			}
		}
		M--;
		i1--;
	}
		}
	}
		
	for (j=0;j<N;j++){
		for (i1=j+1;i1<N;i1++){
			int istinitost=1;
			for (i2=0;i2<M;i2++){
				if (mat[i2][j]!=mat[i2][i1])
				istinitost=0;
			}
			if (istinitost==1){
				for (i=i1+1;i<N;i++){
					for (i2=0;i2<M;i2++){
						int temp =mat[i2][i-1];
						mat[i2][i-1]=mat[i2][i];
						mat[i2][i]=temp;
						
					}
				}
				N--;
				i1--;
			}
		}
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	 for (i=0;i<M;i++){
	 	for (j=0;j<N;j++){
	 		printf(""%5.d"",mat[i][j]);
	 	}
	 	printf(""\n"");
	 }
	
	return 0;
}
"
2443,90,90,0,11,A2016/Z1/Z2/student3306,A2016/Z1/Z2/student5829,"#include <stdio.h>
#include <math.h>
#define EPSILON 0.0001
int main() {
	/*printf(""Zadaća 1, Zadatak 2"");*/
	double a1,b1,a2,b2,x,y;
	printf (""Unesite a1,b1,a2,b2: "");
	scanf (""%lf,%lf,%lf,%lf"",&a1,&b1,&a2,&b2);
	if (fabs(a1-a2)<EPSILON && fabs (b1-b2)>EPSILON)
		printf (""Paralelne su"");
	else if (fabs(a1-a2)<EPSILON && fabs (b1-b2)<EPSILON)
		printf (""Poklapaju se"");
	else {
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	printf (""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	}
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define epsilon 0.001
int main() {
	float a1, b1, a2, b2, x, y;
	printf (""Unesite a1,b1,a2,b2: "");
	scanf (""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
	if(fabs(a1-a2)<epsilon && fabs(b1-b2)>epsilon) printf (""Paralelne su"");
	else if(fabs(a1-a2)<epsilon && fabs(b1-b2)<epsilon) printf (""Poklapaju se"");
	else{

	x=(b2-b1)/(a1-a2);
	y=(a1*x)+b1;
		
		printf (""Prave se sijeku u tacci (%.1f,%.1f)"", x,y);
		
	}
	
	return 0;
}
"
2444,74,74,0,40,A2016/Z2/Z2/student2464,A2016/Z2/Z2/student4495,"#include <stdio.h>
#include <math.h>
#define pi 3.1415926

int main() {
	int n, i;
	double a[502], st[502], m[502], sk[502];
	do
	{
		printf(""Unesite broj uglova: "");
		scanf(""%d"", &n);
	}while(n>500);
	
	for(i=0;i<n;i++)
	{
		scanf(""%lf"", &a[i]);
		st[i]=a[i]*180/pi;
		m[i]=(((int)(st[i])-st[i])*60);
		sk[i]=(((int)(m[i])-m[i])*60);
		if(sk[i]>=0) sk[i]+=0.5; else sk[i]-=0.5;
		sk[i]=(int)(sk[i]);
		st[i]=(int)st[i];
		m[i]=fabs((int)m[i]);
		sk[i]=fabs((int)sk[i]);
		if(sk[i]==60) {sk[i]=0; m[i]++;}
		if(m[i]==60) {m[i]=0; if(st[i]>=0) st[i]++; else st[i]--;}
		if(sk[i]>30){i--; n--;}
	}
	printf(""Uglovi su: \n"");
	for(i=0;i<n;i++)
	{
		printf(""%g stepeni %g minuta %g sekundi\n"", st[i], m[i], sk[i]);
	}
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define pi 3.1415926


int main() {
	
	int br_u,i;
	double rad[502],stepeni[502],minute[502],sekundi[502];

	do{
		printf(""Unesite broj uglova: "");
		scanf(""%d"", &br_u);
	}while(br_u<1 || br_u>500);
	
	for(i=0;i<br_u;i++)	{
		scanf(""%lf"",&rad[i]);
			
		stepeni[i]=rad[i]*180/pi;
		minute[i]=(((int)(stepeni[i])-stepeni[i])*60);
		sekundi[i]=(((int)(minute[i])-minute[i])*60);
		
		if(sekundi[i]>=0)
			sekundi[i]+=0.5;
		else sekundi[i]-=0.5;
		
		sekundi[i]=fabs((int)(sekundi[i]));
		minute[i]=fabs((int)(minute[i]));
		stepeni[i]=(int)(stepeni[i]);
		
	
		if(sekundi[i]==60){
			minute[i]++;
			sekundi[i]=0;
		}
			
			
		if(minute[i]>=60){
			minute[i]=0;
			if(stepeni[i]>=0)
				stepeni[i]++;
			else stepeni[i]--;
			
		}
			
		if (sekundi[i]>30) {
			
			br_u--;
			i--;
		}
		
	}
			
		printf(""Uglovi su: \n"");
		for(i=0;i<br_u;i++){
			printf(""%g stepeni %g minuta %g sekundi\n"",stepeni[i],minute[i],sekundi[i]);
		}
		
	
	
	
	return 0;
}

"
2447,5,5,0,3,A2016/Z4/Z4/student8774,A2016/Z4/Z4/student2254,"#include <stdio.h>

void dbr(char *p,char *k,float *x,float *y)
{
        char *q=p;
        int min;
        float a,b;
        
      *x=0;*y=0;
        
                while (q!=k)
                {
                        q++;min=0;
                        
                        if(*q=='-'){min=1;q++;}
                
                        *x=0;
                        while(*q>='0' && *q<='9')
                        {
                                *x=*x*10+(*q-'0');
                                q++;
                        }
                        if(*q=='.')
                        {
                                q++;a=0;
                                while(*q>='0' && *q<='9')
                                {
                                        a=a*10+(*q-'0');
                                        q++;
                                }
                                while(a>=1)
                                 a/=10;
                                *x=*x+a;
                        }
                        if(min==1) *x*=-1;
                        if(*q==',')q++;
                        min=0;
                        if(*q=='-'){min=1;q++;}
                        *y=0;
                        while(*q>='0' && *q<='9')
                        {
                                *y=*y*10+(*q-'0');
                                q++;
                        }
                        if(*q=='.')
                        {
                                q++;b=0;
                                while(*q>='0' && *q<='9')
                                {
                                        b=b*10+(*q-'0');
                                        q++;
                                }
                                while(b>=1)
                                 b/=10;
                                *y=*y+b;
                        }
                        if(min==1) *y*=-1;
                        
                }
                
        
}


char* obuhvat(char *s,float x1,float y1,float x2,float y2)
{
        char* q=s;
        char *p,*k,*i;
        float x,y;
        while(*q!='\0')
                { 
                        
                    if(*q=='(')
                        {
                          p=q;
                            while(*q!=')')q++;
                          k=q;
                        
                     dbr(p,k,&x,&y);
                        
                
                 if(x<x1 || x>x2 || y<y1 || y>y2)
                        {   
                       q++;
                     while(*q==',')q++;
                               i=q;
                                while(*i!='\0')
                                {
                                  *p++=*i++;
                                }
                                *p='\0';
                                q=q-(i-p);
                        }
                    }else q++;
                                
                }
                
            if(q!=s) q--;
                if(*q==',') *q='\0';
        return s;        
}




int main() {
        
        char s[] = ""(0,-3.1),(-15.09,4),(2.,2),(-1.1,217)"";
        char* rez = obuhvat(s, -3, -3, 3, 3);
        printf(""%s %s\n"", rez, s);
        return 0;
}
","#include <stdio.h>
#include <math.h>
#define EPSILON 0.0001

int abs(float x);
int br_el_rijeci(char *s);
char *obuhvat(char *s, float x1, float y1, float x2, float y2);

int main() {
	char s[] = ""(0,-3.1),(-15.09,4),(2.,2),(-1.1,217)"";
	char *rez = obuhvat(s, -3, -3, 3, 3);
	printf(""'%s'"", rez);
	return 0;
}

int br_el_rijeci(char *s){
    int broj = 1;
    while (*s != ')' && *s != 0) {
        broj++;
        s++;
    }
    return broj;
}

int abs(float x){
	if(x < 0)
		x *= -1;
	
	return x;
}


char *obuhvat(char *s, float x1, float y1, float x2, float y2){
	char *p = s, *q = s, *z = s;
	float x_koord[1000] = {0}, y_koord[1000] = {0};
	int i = 0, kraj_niza, jenegativan, br_el_stringa, j = 1, k, brojac = 0, nijebilo = 1, br_zagrada1 = 0, br_zagrada2 = 0, br_zareza = 0;
	
	
	if (*p == 0)
		return s;
	
	while(*p != 0){
		
		
		if(*p == '(')
			br_zagrada1++;
			
		else if(*p == ')')
			br_zagrada2++;
		else if(*p == ',')
			br_zareza++;
			
		j++;
		p++;
			
		}		//saznajemo broj elemenata stringa
	
	if(br_zagrada1 - br_zagrada2 != 0) // ako je ispravan zapis mora biti isti broj i otvorenih i zatvorenih zagrada
		return *s = 0;
	if(br_zareza != br_zagrada1 + br_zagrada1-1) 
		return *s = 0;
		
	p = s;
		

		while(*p != 0){
			
			jenegativan = 0;
			nijebilo = 1;
			br_zareza = 0;
			brojac = 0;
			
		while(*p != '('){ //preskačemo do prve zagrade (kada je završen rad sa prvim koordinatama)
			
				if(*p != ',' && *p != '(') //ako prilikom preskakanja naiđemo na nešto što nije zagrada ili zarez nije pravilan format
					return s[0] = 0;
				p++;
			}
			
			p++; //prelazimo na broj

			if(!(*p >= '0' && *p <= '9') && *p != '-') return *s = 0; //ako nije broj/minus onda nije pravilan format
			
	
			while(*p != ','){
				

				if(!(*p >= '0' && *p <= '9') && *p != '-' && *p != '.' || *p == ')'){ // ako naiđe na nesto sto nije broj/minus ili ako nema zareza u zagradi niej tačan fromat
					return *s = 0;
				}
			
				
				if(*p == '-'){
					jenegativan = 1;
					p++;
				}
				
				if(nijebilo) //osigurava da se samo jednom broji broj cifara
					k = -1;
	
				q = p;
				
				while(*q != ',' && nijebilo == 1){
					q++;
					
					if(*q != '.')
						k++;
				}
				
				
				
				if(*p == '.'){
					p++;
					z = p;
				
					while(*z != ','){ //tražimo koliko decimala ima broj
						z++;
						brojac++;
					}

				}
				nijebilo = 0;
				

				
				x_koord[i] += (*p - '0')*(pow(10,k));	//pretvaramo x koordinatu u broj
	
				
				if(*p != ',')	//Da ne preskače zarez kada nakon prvog broja ima samo jedna tačka
					p++;
				k--;

				
			}
			x_koord[i] /= pow(10,brojac); // ako je decimalan broj

			if(jenegativan)
				x_koord[i] = -x_koord[i];

			
			jenegativan = 0;
			brojac = 0; //vraćamo na 0 da možemo brojati decimale drugog broja
			nijebilo = 1;
			
			p++; //prelazimo na sljedeći broj
			
			if(!(*p >= '0' && *p <= '9') && *p != '-'){ // u slučaju da nije broj/minus prvo šta nailazimo nakon zareza
				return s[0] = 0;
			}
				

			
			while(*p != ')'){
				
				if(!(*p >= '0' && *p <= '9') && *p != '-' && *p != '.' ){ // ako naiđe na nesto sto nije broj/minus
					return s[0] = 0;
				}
	
				if(*p == '-'){
					
					jenegativan = 1;
					p++;
					
					if(!(*p >= '0' && *p <= '9')){    // ako poslije minusa nije broj
						*s = 0;
						return s[0];
					}
					
				}
				
				
				if(nijebilo)
					k = -1;
				
				q = p;
				
				while(*q != ')'){
					
					q++;
					
					if(*q != '.')
						k++;
				}
				
				if(*p == '.'){
					p++;
					z = p;
				
					while(*z != ')'){ //tražimo koliko decimala ima broj
						z++;
						brojac++;
					}
					
				
				}
				
			
				y_koord[i] += (*p - '0')*pow(10,k); // pretvaramo y koordinatu u broj
				
				
				p++;
				k--;
	
				
			}
			
			y_koord[i] /= pow(10,brojac);
			
			if(jenegativan)
				y_koord[i] = -1.*y_koord[i];
				
			i++;
			p++;
				
		}
		

		
		kraj_niza = i;
		p = s;
		
		for(i = 0; i < kraj_niza; i++){
			q = p;
	
			if((x1 < x2 || abs(x1 - x2) < EPSILON) && (y1 < y2 || abs(y1 -y2) < EPSILON)){
				if(((x_koord[i] > x1 || (abs(x_koord[i] - x1) < EPSILON)) && ((x_koord[i] < x2) || (abs(x_koord[i] - x2) < EPSILON))) && ((y_koord[i] > y1 || (abs(y_koord[i] - y1) < EPSILON)) &&(y_koord[i] < y2 || (abs(y_koord[i] - y2) < EPSILON))))
				{
					while(*p != ')')
						p++;
						p += 2; //prelazimo na drugu zagradu (ako pređe u neinicijalzovanu vrijednost ionako ga nigdje ne dereferencujemo pa nema problema)
				}
						
					else{
						br_el_stringa = br_el_rijeci(p); //nalazimo koliko elemanata treba izbaciti
						
						if (kraj_niza == 1){
							*q = 0;
							return s;
						}

						while(q < s + j)
							*q++ = *(q+br_el_stringa); 

						j -= br_el_stringa;
							
					}
			}
			
			else{
				*s = 0;
				return s[0];
			}

		}
		
	if(p != s && *(p-1) != ')')
		*(p-1) = 0;

		return s;
}
		"
2454,99,99,0,61,A2016/Z2/Z4/student5904,A2016/Z2/Z4/student7774,"#include <stdio.h>
#define NIZ 100

int main() {
	
	int M, N, i, j, tip_matrice=2;
	double el[NIZ][NIZ];
	
	do {
		printf(""Unesite M i N: "");
		scanf(""%d %d"", &M,&N);
		
		if (M<1 || M>100) {
			printf(""Pogresan unos!\n"");
		} else if (N<1 || N>100) {
			printf(""Pogresan unos!\n"");
		}
	} while (M<1 || M>100 || N<1 || N>100);
	
	printf(""Unesite elemente matrice: "");
	
	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) {
			scanf(""%lf"", &el[i][j]);
		}
	}
	
	for (i=0; i<M-1; i++) {
		for (j=0; j<N-1; j++) {
			
			if ((el[i][j]!=el[i+1][j+1]) || (el[i][N-1]!=el[i+1][0])) {
				tip_matrice--;
				i=M;
				break;
			}
		}		
	}		
	
	for (i=0; i<M-1; i++) {
		for (j=0; j<N-1; j++){		
			if (el[i][j]!=el[i+1][j+1]) {
				tip_matrice--;
				i=M;
				break;
			}
		}
	}
	
	switch (tip_matrice) {
		case 2:
		printf(""Matrica je cirkularna"");
		break;
		
		case 1:
		printf(""Matrica je Teplicova"");
		break;
		
		case 0:
		printf(""Matrica nije ni cirkularna ni Teplicova"");
		break;
	
	}
	
	return 0;
}
","#include <stdio.h>
#define NIZ 100

int main() {
	
	int M, N, i, j, tip_matrice=2;
	double el[NIZ][NIZ];
	
	do {
		printf(""Unesite M i N: "");
		scanf(""%d %d"", &M,&N);
		
		if (M<1 || M>100) {
			printf(""Pogresan unos!\n"");
		} else if (N<1 || N>100) {
			printf(""Pogresan unos!\n"");
		}
	} while (M<1 || M>100 || N<1 || N>100);
	
	printf(""Unesite elemente matrice: "");
	
	for (i=0; i<M; i++) {
		for (j=0; j<N; j++) {
			scanf(""%lf"", &el[i][j]);
		}
	}
	
	for (i=0; i<M-1; i++) {
		for (j=0; j<N-1; j++) {
			
			if ((el[i][j]!=el[i+1][j+1]) || (el[i][N-1]!=el[i+1][0])) {
				tip_matrice--;
				i=M;
				break;
			}
		}		
	}		
	
	for (i=0; i<M-1; i++) {
		for (j=0; j<N-1; j++){		
			if (el[i][j]!=el[i+1][j+1]) {
				tip_matrice--;
				i=M;
				break;
			}
		}
	}
	
	switch (tip_matrice) {
		case 2:
		printf(""Matrica je cirkularna"");
		break;
		
		case 1:
		printf(""Matrica je Teplicova"");
		break;
		
		case 0:
		printf(""Matrica nije ni cirkularna ni Teplicova"");
		break;
	
	}
	
	return 0;
}
"
2455,83,83,0,42,A2016/Z2/Z3/student8329,A2016/Z2/Z3/student9160,"#include <stdio.h>

int main() {
	char mat[20][20];
	int i,j,brtac;
	int br;
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&brtac);
	while((brtac<1)||(brtac>10))
	{
		printf(""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&brtac);
		
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			mat[i][j]=' ';
			
		}
	}
	for(br=0;br<brtac;br++)
	{
		printf(""Unesite %d. tacku: "",br+1);
		scanf(""%d %d"",&i,&j);
		while((i<0)||(i>19)||(j<0)||(j>19))
		{
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "",br+1);
			scanf(""%d %d"",&i,&j);
		}
		mat[i][j]='*';
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			printf(""%c"",mat[j][i]);	
			
		}
		printf(""\n"");
	}
	

	return 0;
	}

","#include <stdio.h>

int main() {
	int broj_tacaka,brojac,i,j;
	char niz[20][20];

	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&broj_tacaka);
	while(broj_tacaka<1 || broj_tacaka>10)
	{printf(""Pogresan unos\n"");
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &broj_tacaka);}
	for(i=0; i<20; i++){
	for(j=0; j<20;j++)
	{niz[i][j]=' ';}}
	for(brojac=0; brojac<broj_tacaka; brojac++){
	printf(""Unesite %d. tacku: "",brojac+1);
	scanf(""%d"",&i);
	scanf(""%d"",&j);
	while(i<0 || j<0 || j>19 || i>19){
	printf(""Pogresan unos\n"");
	printf(""Unesite %d. tacku: "",brojac+1);
	scanf(""%d"",&i);		
	scanf(""%d"",&j);}
	niz[i][j]='*';}
	
	for(i=0; i<20; i++){
	for(j=0; j<20;j++){
	printf(""%c"",niz[j][i]);}
	printf(""\n"");}
	return 0;}"
2456,85,85,0,49,A2016/Z2/Z2/student9972,A2016/Z2/Z2/student5380,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926
int main() {
    double niz[500];
    int i,j,n;
    double stepeni, minute, sekunde;
    double ugao;
    printf(""Unesite broj uglova: "");
    scanf(""%d"",&n);
   for(i=0;i<n;i++) {
       scanf(""%lf"",&niz[i]);
   }
   for(i=0;i<n;i++){
       ugao=fabs((niz[i]*180)/PI);
       minute=(ugao-(int)ugao)*60;
       sekunde=round((minute-(int)minute)*60);
       if(sekunde==60) {sekunde=0, minute++;}
       if(sekunde>30) {
    for(j=i; j<n-1;j++) {
niz[j]=niz[j+1]; }
n--;
i--;
}
}
printf(""Uglovi su:\n"");
for(i=0; i<n; i++) {
    ugao=(niz[i]*180)/PI;
    minute=fabs((ugao-(int)ugao)*60);
    sekunde=round((minute-(int)minute)*60);
    stepeni=(int)ugao;
    minute=(int)minute;
    sekunde=round(sekunde);
    if(stepeni>=0) {
        if(sekunde==60) {sekunde=0;minute++;}
        if(minute==60){minute=0; stepeni++;}}
    if (stepeni<0) {
        if(sekunde==60) {sekunde=0; minute++;}
        if(minute==60) {minute=0; stepeni--;}}
        printf(""%.f stepeni %.f minuta %.f sekundi\n"",stepeni,minute,sekunde);
    }
    return 0; }","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926

int main () {
    
double niz [500];
double step,min,sec,x;
int i,j,n;

printf (""Unesite broj uglova: "");
scanf (""%d"", &n);

for (i=0; i<n; i++) {
    scanf (""%lf"", &niz[i]); 
    }

for (i=0; i<n; i++) {

x = fabs ((niz[i])*(180/PI));
min = ((x-(int)x)*60);
sec = (round ((min-(int)min)*60)); 
if(sec==60) { sec=0; min++;}

if (sec>30) {
    
for (j=i; j<n-1; j++) {
        niz [j]=niz [j+1]; 
    
    }
        n--;
        i--;
    } }


printf (""Uglovi su:\n"");
for (i=0; i<n; i++) {
    
    x= (niz[i]*(180/PI));
    min = fabs((x-(int)x)*60);
    sec = ((min-(int)min)*60);

    step=(int)x;
    min=(int) min;
    sec=round (sec);
    
if (step>=0) {
    if (sec==60){sec=0; min++;} 
    if (min==60){min=0; step++;}}
    
if (step<0) {
    if (sec==60){sec=0; min++;}
    if (min==60){min=0; step--;}}
    
printf(""%.f stepeni %.f minuta %.f sekundi\n"", step, min, sec);    
    
}

return 0;

}


    


"
2457,22,22,0,60,A2016/Z5/Z3/student9972,A2016/Z5/Z3/student8357,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};
char unesi(char niz[],int velicina) {
	char znak=getchar();
	int i=0;
	while(znak=='\n')
	znak=getchar();
	while(i< velicina-1 && znak !='\n' ) {
		niz[i++] = znak;
		znak = getchar();
	}
niz[i]='\0';
return znak; }
void ocisti(char znak){
	int ima=0;
	while(znak!='\n')
	znak=getchar(); }
int ucitaj_datoteku(struct Cas raspored[]){
FILE* dat=fopen(""raspored.dat"",""rb"");
if(dat == NULL) return 0;
int ucitanih=fread(raspored,sizeof(struct Cas),KAPACITET,dat);
fclose(dat);
return ucitanih; }
void ispisreda(){
printf(""\n       PON       UTO       SRI"");
printf(""       CET       PET       SUB"");
printf(""\n""); }
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	ispisreda();
	for(i=0;i<broj_casova;i++){
		if(raspored[i].pocetak.sati<min)
		min=raspored[i].pocetak.sati;}
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max ){
			max=raspored[i].kraj.sati;
			indexmaxa=i;
}} if(raspored[indexmaxa].kraj.minute==0) max=max-1;

int x;
int s,dan,n;

for(i=min;i<=max;i++){
	if(i<10) printf(""9:00   "");
	else printf(""%d:00  "",i);
	for(j=1;j<7;j++){
		for(k=0;k<broj_casova;k++){
			s=raspored[k].pocetak.sati;
			dan=raspored[k].dan_u_sedmici;
			n=raspored[k].kraj.sati;
			if(s<=i && dan==j && n>=i) {
				printf(""%-10s"",raspored[k].predmet);
				break;
			}}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");}
			printf(""\n""); }}
			
			void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
				int i;
				printf(""Uneseni su casovi: "");
				int k=1;
				
			for(i=0;i<broj_casova;i++){
				if(raspored[i].dan_u_sedmici==dan){
					printf(""\n%d) %s ("",k++,raspored[i].predmet);
					if(raspored[i].pocetak.sati<10) printf(""0"");
					printf(""%d:"",raspored[i].pocetak.sati);
					if (raspored[i].pocetak.minute<10) printf(""0"");
					printf(""%d-"",raspored[i].pocetak.minute);
					printf(""%02d:%02d)"",raspored[i].kraj.sati,raspored[i].kraj.minute);
				}
			}}
			int zapisi_datoteku(struct Cas raspored[], int broj_casova){
				FILE* dat = fopen(""raspored.dat"", ""wb"");
				int ucitano=fwrite(raspored, sizeof(struct Cas), broj_casova, dat);
				fclose(dat);
				if(ucitano>0) return 1;
				return ucitano; }
				void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
					int i; int k=0; int j, brojac=1;
					for(i=0;i<broj_casova;i++){
					if(raspored[i].dan_u_sedmici==dan){ k++; brojac++;
					if(k==redni_broj){
						
						for(j=i;j<broj_casova-1;j++)
						raspored[j]=raspored[j+1];
						
						if(brojac>0)break; } }}}
						int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){
							int i;
						int minpoc1,minpoc2,minkraj1,minkraj2;
						for(i=0;i<broj_casova;i++) {
							minpoc1=raspored[i].pocetak.minute+raspored[i].pocetak.sati*60;
							minkraj1=raspored[i].kraj.minute+raspored[i].kraj.sati*60;
							minpoc2=cas.pocetak.minute+cas.pocetak.sati*60;
							minkraj2=cas.kraj.minute+cas.kraj.sati*60;
						if (raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<minpoc2 && minkraj1>minpoc2 || minpoc2<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 && cas.kraj.minute+cas.kraj.sati*60>minkraj1 || raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 && minkraj1>cas.kraj.minute+cas.kraj.sati*60))
						return 1;
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (minpoc2==minpoc1 || minkraj1==minkraj2))
						return 1; 
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&(minpoc1<minpoc2 && minkraj1>minpoc2 || minpoc2<minpoc1 && minkraj2>minkraj1 || minpoc1<minkraj2 && minkraj1>minkraj2))
						return 1; }
						return 0;}
						int dodaj_cas(struct Cas raspored[], int broj_casova, const char*predmet, int trajanje){
							if (broj_casova==200) return 0;
							int i,j,preklop;
							for(i=0; i<6; i++)
								for(j=9; j<=19-trajanje; j++){
									struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
									char *q=cas.predmet,*p=(char*)predmet;
									struct Cas cc;
									while(*q++=*p++);
									preklop=preklapanje(raspored,broj_casova,cas);
									if(preklop==0){
										raspored[broj_casova]=cas;
										return 1;
									} if(preklop==1) continue; }
									return 0; }
									void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
								int i,redni=0;
								for(i=0;i<broj_casova; i++){
									if(raspored[i].dan_u_sedmici==dan) redni++;
									if(redni_broj==redni)
									raspored[i]=promjena; }}
								int main () {
									int opcija,broj_casova=0;
									struct Cas raspored[KAPACITET];
									ucitaj_datoteku(raspored);
									do{
										printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
										scanf(""%d"",&opcija);
										int broj=opcija;
										switch(opcija){
											case 0: {
												zapisi_datoteku(raspored,broj_casova);
												break;
											} case 1:{
												if(broj!=0)   ispis_rasporeda(raspored,broj_casova);
												break;}
												case 2:  if(broj!=0)
											{
								
												int br_casova,dodan=0;
												char  predmet[10];
												printf(""Unesite naziv predmeta: Unesite broj casova: "");
												if(broj!=0)   ocisti(unesi(predmet,10));
												scanf(""%d"",&br_casova);
												dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
												int vr=dodan;
											if(vr==0)
											printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
											if(vr==1)  broj_casova++;
											
											break;}
											case 4: if(broj!=0)
											{
												int dan,redni;
												int br=broj_casova;
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,br,dan);
												printf(""\nIzaberite koji cas zelite obrisati: "");
											    scanf(""%d"",&redni);
											    obrisi_cas(raspored,br,dan,redni);
											    printf("" Cas obrisan\n"");
											    broj_casova--;
											}
											case 3:  if(broj!=0){
												struct Cas promjena;
												int dan,redni;
												char *q,*p;
												char znak,predmet[10];
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,broj_casova,dan);
												promjena.dan_u_sedmici=dan;
												printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
												scanf(""%d"",&redni);
												ocisti(unesi(predmet,10));
												q=promjena.predmet;
												p=predmet;
												strcpy(q,p);
												printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
												scanf(""%d%c"",&promjena.pocetak.sati,&znak);
												scanf(""%d"",&promjena.pocetak.minute);
												scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
												promijeni_cas(raspored,broj_casova,dan,redni,promjena);
												break;}
										} 
										
									} while(opcija!=0);
									    
									    
									    	return 0; 
									
								}
									
											
							
						
					
					
			
	


","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};

char unesi(char niz[], int velicina) {
    
	char znak = getchar();
	if(velicina<0) return znak;
	if (znak == '\n') znak = getchar();
	int i = 0,k=0;
	while (i < velicina-1 && znak != '\n') {
		niz[i] = znak;
		i++;
		znak = getchar();
		k++;
	}

	niz[k] = '\0';
	return znak;
}

void ocisti(char znak){
	while(znak!='\n')
		znak=getchar();
}

int ucitaj_datoteku(struct Cas raspored[]){
	FILE *ulaz=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL)
		return 0;
	int kap=KAPACITET;
	int vel=sizeof (struct Cas);
	int ucitano;
	ucitano=fread(raspored,vel,KAPACITET,ulaz);
	fclose(ulaz);
	return ucitano;
}
int mmm(int d){
    if(d==0) return -1;
    else return 0;
}
int MAX(struct Cas raspored[], int broj_casova){
    int brojac=1;
      int i,j,max=0,indexmaxa=0;
    for (i=0; i<broj_casova;i++){
        brojac++;
            if (raspored[i].kraj.sati>max ){
                max=raspored[i].kraj.sati;
                indexmaxa=i;
}}
max=max-mmm(raspored[indexmaxa].kraj.minute);
return max;

}

int MIN(struct Cas raspored[], int broj_casova){
     int i,j,min=25;
    for (i=0; i<broj_casova;i++)
            if (raspored[i].pocetak.sati<min)
            	min=raspored[i].pocetak.sati;
    return min;
}
void ispisss(){
    printf(""\n       PON       UTO       SRI       CET       PET       SUB\n"");
}
void ispispr(char *pr){
    printf(""%-10s"",pr);
}
void ispispraz(int d){
     printf(""          "");
}
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
    int i,j, k;
   int max=MAX(raspored,broj_casova);
   int min=MIN(raspored,broj_casova);
       ispisss();
    for(i=min;i<=max;i++){
         if(i<10) printf(""9:00   "");
             else printf(""%d:00  "",i);
        for(j=1;j<7;j++){
			
                for(k=0;k<broj_casova;k++)
                    if ( raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j  && raspored[k].kraj.sati>=i){
                            ispispr(raspored[k].predmet);
                            break;
                            ispispraz(10);
                    }
                    if (k==broj_casova)
                       ispispraz(10);
            }
        printf(""\n"");
    }
}


    void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
        int i;
    printf(""Uneseni su casovi: "");
        int k=1;
        for(i=0;i<broj_casova;i++){
            if(raspored[i].dan_u_sedmici==dan){
            	int sat=raspored[i].pocetak.sati;
            	int min=raspored[i].pocetak.minute;
                printf(""\n%d) %s ("",k++,raspored[i].predmet);
                 if(sat<10) printf(""0"");
                 printf(""%d:"",sat);
                  if(min<10) printf(""0"");
                 printf(""%d-"",min);
                 if(raspored[i].kraj.sati<10) printf(""0"");
                 printf(""%d:"",raspored[i].kraj.sati);
                  if(raspored[i].kraj.minute<10) printf(""0"");
                 printf(""%d)\n"",raspored[i].kraj.minute);
            }
        }
    }


void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,j=0;
	for(i=0; i<broj_casova; i++){
		if (raspored[i].dan_u_sedmici==dan) j++;
		if (redni_broj==j){
		    for(;i<broj_casova-1;i++)
			    raspored[i]=raspored[i+1];
		    break;
		}
	}
}

int PorediVrj(struct Vrijeme t1, struct Vrijeme t2,int i)
{
    int sat=t1.sati*3600;
    int sat1=t2.sati*3600;
    int min=t1.minute*60;
    int min1=t2.minute*60;
    int d1 = sat+min+ t1.sekunde;
    int d2 = sat1+min1+ t2.sekunde;
    if (d1 > d2)  return 1; 
    if (d1 < d2)  return -1; 
    if (d1 == d2)  return 0; 
    
}
int preklapanje (struct Cas raspored[], int broj_casova, struct Cas cas)
{

    int prekl = 0;
    int i;
    for (i = 0; i < broj_casova; i++) {
		int drugi=PorediVrj(cas.kraj, raspored[i].pocetak,i);
		if(i<0) return prekl;
        if (PorediVrj(raspored[i].kraj,cas.pocetak,i)== 1 && drugi==1 && (cas.dan_u_sedmici == raspored[i].dan_u_sedmici)) {
            prekl= 1; 
            break;
        }
    }
   if(i>-1) return prekl;
}
int prazan(struct Cas cas){
    if(cas.predmet=="""") return 0;
    else return 1;
}


int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje){
	if(broj_casova==200) return 0;
	if(trajanje<0 ||trajanje>200) return 0;
	int i,j,preklop;
	for (i=0; i<6; i++)
		for(j=9; j<=19-trajanje; j++){
			struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
		cas.pocetak.minute=0;
		cas.kraj.minute=0;
		cas.pocetak.sekunde=0;
		cas.pocetak.minute=0;
		strcpy(cas.predmet,predmet);
		int praz=prazan(cas);
		struct Cas pom={"""",0,{0,0,0},{0,0,0}};
		strcpy(cas.predmet,predmet);
			preklop=preklapanje(raspored,broj_casova,cas);
			if (preklop==0){
				raspored[broj_casova]=cas;
				return 1;
			}
		}
	return 0;			
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
	int i,redni=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
			raspored[i]=promjena;
	}
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL)
		return 0;
	int kap=broj_casova;
	int vel=sizeof (struct Cas);
	int zapisano=fwrite(raspored,vel, broj_casova,ulaz);
	fclose(ulaz);
 return 1;

}

int main() {
	int opcija,broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do {
		printf(""1) Ispis rasporeda\n"");
	printf(""2) Dodavanje casa\n"");
	printf(""3) Promjena casa\n"");
	printf(""4) Brisanje casa\n"");
	printf(""0) Kraj rada\n"");
	printf(""Izaberite opciju: "");

		scanf(""%d"",&opcija);
		if (opcija==2){
				int br_casova,dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				ocisti(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				switch(dodan){
				    case 1: broj_casova++; break;
				    default: 	printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
				}
				
				
			}
		if (opcija==0) 
				zapisi_datoteku(raspored,broj_casova);
		if (opcija==1) 
				ispis_rasporeda(raspored,broj_casova);
		
		if (opcija==3 ){
				struct Cas promjena;
				int dan,redni;
				char predmet[10];
				printf(""Unesite dan (1=ponedjeljak, "");
				printf(""2=utorak..., "");
				printf(""6=subota): "");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				promjena.dan_u_sedmici=dan;
				printf(""Izaberite koji cas zelite promijeniti:  "");
				scanf(""%d"",&redni);
				if(redni>100 ||redni<0) goto preskok;
				printf(""Naziv predmeta: "");
				ocisti(unesi(predmet,10));
				char *q;
				
				if(opcija!=0) q=promjena.predmet;
				char*p;
			  if(opcija!=0)	p=predmet;
				preskok:
				strcpy(q,p);
				char znak;
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c%d%d%c%d"",&promjena.pocetak.sati,&znak,&promjena.pocetak.minute,&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				promijeni_cas(raspored,broj_casova,dan,redni,promjena);
			}
			if (opcija==4){
				int dan,redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				
				scanf(""%d"",&dan);
				if(opcija!=0){
				ispisi_dan(raspored,broj_casova,dan);
				printf(""Izaberite koji cas zelite obrisati: "");
				scanf(""%d"",&redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
				broj_casova=broj_casova-1;
				printf("" Cas obrisan\n"");
				}
			}
	} while (opcija!=0);
    
	return 0;
}
"
2459,98,98,0,30,A2016/Z2/Z3/student1266,A2016/Z2/Z3/student3217,"#include <stdio.h>
#define t 10

int main() {
	int i,j,k,bt,X[t],Y[t],a;

	do{
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &bt);
		if(bt<=0 || bt>10)
		printf(""Pogresan unos\n"");
	}
	while(bt<=0 || bt>10);
	for(a=0;a<bt;a++) {
		    printf(""Unesite %d. tacku: "", a+1);
		    scanf(""%d %d"", &X[a], &Y[a]);
		    
		if(X[a]<0 || Y[a]<0 || X[a]>19 || Y[a]>19) {
			a--;
			printf(""Pogresan unos\n"");
		} }
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			for(k=0;k<bt;k++){
			if(X[k]==j && Y[k]==i) {
							printf(""*"");
					j++;
					
				}}
			  printf("" "");
			}
			
			printf(""\n"");
}
	return 0;
}
","#include <stdio.h>
#define t 10

int main() {
	int i,j,k,bt,X[t],Y[t],a;

	do{
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &bt);
		if(bt<=0 || bt>10)
		printf(""Pogresan unos\n"");
	}
	while(bt<=0 || bt>10);
	for(a=0;a<bt;a++) {
		    printf(""Unesite %d. tacku: "", a+1);
		    scanf(""%d %d"", &X[a], &Y[a]);
		    
		if(X[a]<0 || Y[a]<0 || X[a]>19 || Y[a]>19) {
			a--;
			printf(""Pogresan unos\n"");
		} }
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			for(k=0;k<bt;k++){
			if(X[k]==j && Y[k]==i) {
							printf(""*"");
					j++;
					
				}}
			  printf("" "");
			}
			
			printf(""\n"");
}
	return 0;
}
"
2465,95,95,0,18,A2016/Z2/Z1/student2831,A2016/Z2/Z1/student3943,"#include <stdio.h>
#include <stdlib.h>
int main()
{
	int n,a,b,c,s=0,h,d=1;
	printf(""Unesite broj: "");
	scanf(""%d"",&n);
	if(n>0 && n<10) printf(""0"");
	else {
		h=abs(n);
		while(h>=10) {
			a=h%10;
			b=h%100;
			b=b/10;
			c=abs(a-b);
			s=s+(c*d);
			d=d*10;
		    h=h/10;
		}
	printf(""%d"",s);

	}

	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
int main()
{
	int n,a,b,c,s=0,h,d=1;
	printf(""Unesite broj: "");
	scanf(""%d"",&n);
	if(n>0 && n<10) printf(""0"");
	else {
		h=abs(n);
		while(h>=10) {
			a=h%10;
			b=h%100;
			b=b/10;
			c=abs(a-b);
			s=s+(c*d);
			d=d*10;
		    h=h/10;
		}
	printf(""%d"",s);

	}

	return 0;
}
"
2472,74,74,0,39,A2016/Z2/Z3/student1192,A2016/Z2/Z3/student3594,"#include <stdio.h>

int main() {
	int i, j, k, n;
	int a[20], b[20];
	int c[20][20];
	for(i=0;i<20;i++)
	{
		for(j=0; j<20;j++)
		c[i][j]=0;
	}
	do
	{
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &n);
	if((n<1)||(n>10))
	{
		printf(""Pogresan unos\n"");
	}
	}
	while((n<1)||(n>10));
	
		
	for (i=0; i<n; i++)
	{
		printf(""Unesite %d. tacku: "", i+1);
		scanf(""%d %d"", &a[i], &b[i]);
		if((a[i]<0)||(a[i]>19)||(b[i]<0)||(b[i]>19))
		{
			printf(""Pogresan unos\n"");
			i--;
		}
	}
	for (i=0; i<n; i++)
		{
	    	for(j=0; j<20; j++)
			{
				for(k=0; k<20; k++)
				{
					
					if((j==b[i]) &&(k==a[i]))
					{
						c[j][k]=1;
					 
					}
					
					
				
				}
			}
		
		}
    	for(j=0; j<20; j++)
		{
			for(k=0; k<20; k++)
			{
			if(c[j][k]==1)
			printf(""*"");
			else 
			printf("" "");
			}
			printf(""\n"");
		}
		
    
	return 0;
}
","#include <stdio.h>

int main() {
	
	int broj_tacaka, x_koordinate[10], y_koordinate [10], i, j, k;
	char prostor [20][20];
	
	for(i=0; i<20; i++){
	    
        for(j=0; j<20; j++){
        prostor[i][j]=' ';
    }
}

	do{
		
	printf(""\nUnesite broj tacaka: "");
	scanf(""%d"", &broj_tacaka);
    if(broj_tacaka>10 || broj_tacaka<=0) printf(""Pogresan unos"");
    
	}while(broj_tacaka>10 || broj_tacaka<=0);
    
    
    for(k=0; k<broj_tacaka; k++){
    	
        printf(""Unesite %d. tacku: "", k+1);
        scanf(""%d %d"",&x_koordinate[k], &y_koordinate[k] );
        
        if(x_koordinate[k] < 0 || x_koordinate[k] > 19 || y_koordinate[k] < 0 || y_koordinate[k] > 19){
        	printf(""Pogresan unos\n"");
        	k--;
        }
       
        
    }

    for(i=0; i<broj_tacaka; i++){
    	
    	for(j=0; j<20; j++) {
    	    
    	    for(k=0; k<20; k++){
    	       
    	        if(j==y_koordinate[i] && k==x_koordinate[i]) {
    	            prostor[j][k]='*';
    	        }
    	        
    	    }
    	    
    	}

        
    }

for(i=0; i<20; i++){
    
    for(j=0; j<20; j++){
        printf(""%c"", prostor[i][j]);
    }
    
    printf(""\n"");
}

	return 0;
}
"
2474,98,98,0,115,A2016/Z3/Z2/student8794,A2016/Z3/Z2/student4415,"#include <stdio.h>
#include <math.h>

// Funkcija koja provjerava da li je broj fibonacijev

int Fibonaci(int a)
{

	int	b = a, first = 0, second = 1, next, x = 1;

	while (1) {
		next = first + second;

		if (b == next)
			break;
		else if (b < next) {
			x = 0;
			break;
		} else {
			first = second;
			second = next;
		}
	}

	return x;
}

// Funkcija koja racuna sumu cifara


int Suma_cif(int a)
{

	int	zad_cifra, suma = 0;
	int b=fabs(a);

	while (b) {
		zad_cifra = b%10;
		suma = suma + zad_cifra;
		b = b/10;
	}

	return suma;
}

// Funkcija ubaci ( ubaciva sumu vrijednost elementa iza tog elemta)

void ubaci (int niz[], int vel)
{

	int i, position = 2;                        // pozicija na koju ubavicamo sumu
	int vel1 = vel;							// kopija velicina niza
	int	*p = niz, *q = niz, *d = niz;         // Pokazivaci na niz

	while (d < niz + vel) {
		// Ubacivamo sumu cifara broja odma poslije broja tako da pozicija gdje ubacivamo sumu poveca va za 2 (1, 3, 5....)
		// Petlja koja pomjera cijeli niz za jedno mjesto napred

		for (i = vel1 - 1; i >= position - 1; i--) {
			*(p+i+1) = *(p+i);
		}
		// Ubacivamo sumu u niz
		*(p+position-1) = Suma_cif(*q);

		// povecavamo velicinu niza, poziciju na koju ubacivamo sumu, i pokazivac gdje dodajemo sumu na niz
		vel1++;
		position += 2;
		q += 2;
		d++;
	}
}

//Funkcija koja izbaciva sve fibonacijeve brojeve iz niza

int izbaci(int niz[], int vel)
{

	int vel1 = vel, i, j;		 // kopija velicine niza
	int *p = niz, *q = niz;	// pokazivaci na niz

	// Izbacivamo elemente iz niza uz ocuvanje redoslijeda

	for (i = 0; i < vel1; i++) {
		// Provjeravamo da li je broj fibonacijev , ako je izbacivamo ga
		if (Fibonaci(*(p+i))) {
			for (j=i; j < vel1 - 1; j++) {
				*(q+j) = *(q+j+1);
			}
			vel1 --;
			i --;
		}
	}
	// Vracamo novu velicinu niza
	return vel1;
}

int main()
{

	int		niz[30], vel = 10, vel1,  i;

	// Unos niza
	printf (""Unesite niz od 10 brojeva: "");

	for (i = 0 ; i < vel; i++) {
		scanf (""%d"", &niz[i]);
	}
	// Pozivamo funkciju ubaci saljemo duzinu niza za koju znamo da je 10, funkcija nam ne vraca nista jer znamo da je nova velicina niza duplo vec
	ubaci(niz, vel);
	// Pozivamo funkciju izbaci , saljemo novu velicinu niza , funkcija nam vraca sada novu velicinu koju moramo sacuvati u neku varijablu
	vel1 = izbaci (niz, 2*vel);

	printf (""Modificirani niz glasi: "");
    
	for (i = 0 ; i < vel1; i++) {

		if ( i == vel1 -1 )
			printf (""%d."", niz[i]);
		else
			printf (""%d, "", niz[i]);
	}

	return 0;
}
","#include <stdio.h>
#include <math.h>

// Funkcija koja provjerava da li je broj fibonacijev

int Fibonaci(int a)
{

	int	b = a, first = 0, second = 1, next, x = 1;

	while (1) {
		next = first + second;

		if (b == next)
			break;
		else if (b < next) {
			x = 0;
			break;
		} else {
			first = second;
			second = next;
		}
	}

	return x;
}

// Funkcija koja racuna sumu cifara


int Suma_cif(int a)
{

	int	zad_cifra, suma = 0;
	int b=fabs(a);

	while (b) {
		zad_cifra = b%10;
		suma = suma + zad_cifra;
		b = b/10;
	}

	return suma;
}

// Funkcija ubaci ( ubaciva sumu vrijednost elementa iza tog elemta)

void ubaci (int niz[], int vel)
{

	int i, position = 2;                        // pozicija na koju ubavicamo sumu
	int vel1 = vel;							// kopija velicina niza
	int	*p = niz, *q = niz, *d = niz;         // Pokazivaci na niz

	while (d < niz + vel) {
		// Ubacivamo sumu cifara broja odma poslije broja tako da pozicija gdje ubacivamo sumu poveca va za 2 (1, 3, 5....)
		// Petlja koja pomjera cijeli niz za jedno mjesto napred

		for (i = vel1 - 1; i >= position - 1; i--) {
			*(p+i+1) = *(p+i);
		}
		// Ubacivamo sumu u niz
		*(p+position-1) = Suma_cif(*q);

		// povecavamo velicinu niza, poziciju na koju ubacivamo sumu, i pokazivac gdje dodajemo sumu na niz
		vel1++;
		position += 2;
		q += 2;
		d++;
	}
}

//Funkcija koja izbaciva sve fibonacijeve brojeve iz niza

int izbaci(int niz[], int vel)
{

	int vel1 = vel, i, j;		 // kopija velicine niza
	int *p = niz, *q = niz;	// pokazivaci na niz

	// Izbacivamo elemente iz niza uz ocuvanje redoslijeda

	for (i = 0; i < vel1; i++) {
		// Provjeravamo da li je broj fibonacijev , ako je izbacivamo ga
		if (Fibonaci(*(p+i))) {
			for (j=i; j < vel1 - 1; j++) {
				*(q+j) = *(q+j+1);
			}
			vel1 --;
			i --;
		}
	}
	// Vracamo novu velicinu niza
	return vel1;
}

int main()
{

	int		niz[30], vel = 10, vel1,  i;

	// Unos niza
	printf (""Unesite niz od 10 brojeva: "");

	for (i = 0 ; i < vel; i++) {
		scanf (""%d"", &niz[i]);
	}
	// Pozivamo funkciju ubaci saljemo duzinu niza za koju znamo da je 10, funkcija nam ne vraca nista jer znamo da je nova velicina niza duplo vec
	ubaci(niz, vel);
	// Pozivamo funkciju izbaci , saljemo novu velicinu niza , funkcija nam vraca sada novu velicinu koju moramo sacuvati u neku varijablu
	vel1 = izbaci (niz, 2*vel);

	printf (""Modificirani niz glasi: "");
    
	for (i = 0 ; i < vel1; i++) {

		if ( i == vel1 -1 )
			printf (""%d."", niz[i]);
		else
			printf (""%d, "", niz[i]);
	}

	return 0;
}
"
2475,96,96,0,26,A2016/Z2/Z2/student1476,A2016/Z2/Z2/student5496,"#include <stdio.h>
#define PI 3.1415926
int main () {
	int i,y,broj;
	int STEP[500],MIN[500],SEC[500];
	double ugao;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &broj);
	for (i=0; i<broj; i++){
		scanf(""%lf"", &ugao);
		if(ugao>0)
		y=(ugao*180*3600)/PI+0.5;
		if(ugao<0)
		y=(ugao*180*3600)/PI-0.5;
		STEP[i]=y/3600;
		if(y<0){ y*=-1;
		}
		SEC[i]=y%60;
		y/=60;
		MIN[i]=y%60;
		if(SEC[i]>30){
		   broj--;
		    i--;
		}
	}
			printf(""Uglovi su:\n"");
			for(i=0;i<broj;i++)
			printf(""%d stepeni %d minuta %d sekundi\n"", STEP[i],MIN[i],SEC[i]);
			
	return 0;
}
","#include <stdio.h>
#define PI 3.1415926
int main () {
	int i,y,broj;
	int STEP[500],MIN[500],SEC[500];
	double ugao;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &broj);
	for (i=0; i<broj; i++){
		scanf(""%lf"", &ugao);
		if(ugao>0)
		y=(ugao*180*3600)/PI+0.5;
		if(ugao<0)
		y=(ugao*180*3600)/PI-0.5;
		STEP[i]=y/3600;
		if(y<0){ y*=-1;
		}
		SEC[i]=y%60;
		y/=60;
		MIN[i]=y%60;
		if(SEC[i]>30){
		   broj--;
		    i--;
		}
	}
			printf(""Uglovi su:\n"");
			for(i=0;i<broj;i++)
			printf(""%d stepeni %d minuta %d sekundi\n"", STEP[i],MIN[i],SEC[i]);
			
	return 0;
}
"
2480,99,99,0,52,A2016/Z1/Z3/student7948,A2016/Z1/Z3/student2247,"#include <stdio.h>

int main () {
    int k=0;
    char x, c1='c', c2='C', b1='b', b2='B', s1='s', s2='S', v1='v', v2='V', p1='p', p2='P', k1='k', k2='K';
    double ocp, obp, osp, ovp, opp, oc=0, ob=0, os=0, ov=0, op=0, ou;
    printf(""Unesite vozila: "");
    for( ; ; ) {
    x=getchar();
    if(x==k1 || x==k2)
        { break; }
    else if(x==c1 || x==c2)
        { oc=oc+1; }
    else if(x==b1 || x==b2)   
        { ob=ob+1; }
    else if(x==s1 || x==s2)
        { os=os+1; }
    else if(x==v1 || x==v2)
        { ov=ov+1; }
    else if(x==p1 || x==p2)
        { op=op+1; }
    else if(x!=c1 && x!=c2 && x!=b1 && x!=b2 && x!=s1 && x!=s2 && x!=v1 && x!=v2 && x!=p1 && x!=p2 && x!=k1 && x!=k2) 
    { if(k!=0) { printf(""\nNeispravan unos""); }
      else if(k<1) { printf(""Neispravan unos"");
      k++; } }
    }

ou=oc+ob+os+ov+op;

if(k==0)
printf(""Ukupno evidentirano %g vozila."", ou);
else if(k!=0)
printf(""\nUkupno evidentirano %g vozila."", ou);
ocp=(oc/ou)*100;
obp=(ob/ou)*100; 
osp=(os/ou)*100;
ovp=(ov/ou)*100;
opp=(op/ou)*100;
if(oc==0) ocp=0.00;
if(ob==0) obp=0.00;
if(os==0) osp=0.00;
if(ov==0) ovp=0.00;
if(op==0) opp=0.00;

if(oc>=ob && oc>=os && oc>=ov && oc>=op) 
    { printf(""\nNajpopularnija boja je crna (%.2f%%)."", ocp); }
else if(ob>oc && ob>=os && ob>=ov && ob>=op) 
    { printf(""\nNajpopularnija boja je bijela (%.2f%%)."", obp); }
else if(os>oc && os>ob && os>=ov && os>=op) 
    { printf(""\nNajpopularnija boja je siva (%.2f%%)."", osp); }
else if(ov>oc && ov>ob && ov>os && ov>=op) 
    { printf(""\nNajpopularnija boja je crvena (%.2f%%)."", ovp); }
else if(op>oc && op>ob && op>ov && op>os) 
    { printf(""\nNajpopularnija boja je plava (%.2f%%)."", opp); }        

return 0;
} ","#include <stdio.h>

int main () {
    int k=0;
    char x, c1='c', c2='C', b1='b', b2='B', s1='s', s2='S', v1='v', v2='V', p1='p', p2='P', k1='k', k2='K';
    double ocp, obp, osp, ovp, opp, oc=0, ob=0, os=0, ov=0, op=0, ou;
    printf(""Unesite vozila: "");
    for( ; ; ) {
    x=getchar();
    if(x==k1 || x==k2)
        { break; }
    else if(x==c1 || x==c2)
        { oc=oc+1; }
    else if(x==b1 || x==b2)   
        { ob=ob+1; }
    else if(x==s1 || x==s2)
        { os=os+1; }
    else if(x==v1 || x==v2)
        { ov=ov+1; }
    else if(x==p1 || x==p2)
        { op=op+1; }
    else if(x!=c1 && x!=c2 && x!=b1 && x!=b2 && x!=s1 && x!=s2 && x!=v1 && x!=v2 && x!=p1 && x!=p2 && x!=k1 && x!=k2) 
    { if(k!=0) { printf(""\nNeispravan unos""); }
      else if(k<1) { printf(""Neispravan unos"");
      k++; } }
    }

ou=oc+ob+os+ov+op;

if(k==0)
printf(""Ukupno evidentirano %g vozila."", ou);
else if(k!=0)
printf(""\nUkupno evidentirano %g vozila."", ou);
ocp=(oc/ou)*100;
obp=(ob/ou)*100; 
osp=(os/ou)*100;
ovp=(ov/ou)*100;
opp=(op/ou)*100;
if(oc==0) ocp=0.00;
if(ob==0) obp=0.00;
if(os==0) osp=0.00;
if(ov==0) ovp=0.00;
if(op==0) opp=0.00;

if(oc>=ob && oc>=os && oc>=ov && oc>=op) 
    { printf(""\nNajpopularnija boja je crna (%.2f%%)."", ocp); }
else if(ob>oc && ob>=os && ob>=ov && ob>=op) 
    { printf(""\nNajpopularnija boja je bijela (%.2f%%)."", obp); }
else if(os>oc && os>ob && os>=ov && os>=op) 
    { printf(""\nNajpopularnija boja je siva (%.2f%%)."", osp); }
else if(ov>oc && ov>ob && ov>os && ov>=op) 
    { printf(""\nNajpopularnija boja je crvena (%.2f%%)."", ovp); }
else if(op>oc && op>ob && op>ov && op>os) 
    { printf(""\nNajpopularnija boja je plava (%.2f%%)."", opp); }        

return 0;
} "
2482,97,97,0,45,A2016/Z2/Z3/student9315,A2016/Z2/Z3/student4766,"#include <stdio.h>

int main() {
	int x[10], y[10], num,i,j,k, looping,print;
	for(i=0; i<10;i++){
		x[i]=-1;
		y[i]=-1;
	}
	
	do{
		looping =0;
		
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &num);
		if(num>0 && num<11)
		for(i=0; i<num; i++){
			printf(""Unesite %d. tacku: "", i+1);
			scanf(""%d %d"", &x[i], &y[i]);
			
			if(x[i]>19 || x[i]<0 || y[i] >19 || y[i] <0){
				
				printf(""Pogresan unos\n"");
				i--;
			}
		}else
		looping=1;
		
		if(looping){
			printf(""Pogresan unos\n"");
		}
	}while(looping);
	
	for(i=0; i<=19; i++){
		for(j=0; j<=19; j++){
			print=0;
			for(k=0; k<10;k++){
				if(j==x[k] && i==y[k]){
				print=1;
				break;
				}
			}
			if(print)
			printf(""*"");
			else
			printf("" "");
		}
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int x[10], y[10], num,i,j,k, looping,print;
	for(i=0; i<10;i++){
		x[i]=-1;
		y[i]=-1;
	}
	
	do{
		looping =0;
		
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &num);
		if(num>0 && num<11)
		for(i=0; i<num; i++){
			printf(""Unesite %d. tacku: "", i+1);
			scanf(""%d %d"", &x[i], &y[i]);
			
			if(x[i]>19 || x[i]<0 || y[i] >19 || y[i] <0){
				
				printf(""Pogresan unos\n"");
				i--;
			}
		}else
		looping=1;
		
		if(looping){
			printf(""Pogresan unos\n"");
		}
	}while(looping);
	
	for(i=0; i<=19; i++){
		for(j=0; j<=19; j++){
			print=0;
			for(k=0; k<10;k++){
				if(j==x[k] && i==y[k]){
				print=1;
				break;
				}
			}
			if(print)
			printf(""*"");
			else
			printf("" "");
		}
		printf(""\n"");
	}
	return 0;
}
"
2491,94,94,0,60,A2016/Z1/Z3/student8518,A2016/Z1/Z3/student8110,"#include<stdio.h>
int main ()
{
	int Crnaboja=0,Bijelaboja=0,Sivaboja=0,Crvenaboja=0,Plavaboja=0,U;
	char znak;
	float P,max;
	printf(""Unesite vozila: "");
	 while (1){
	 	scanf(""%c"",&znak);
	   if (znak=='C'|| znak=='c'){
		Crnaboja++ ;}
		else if (znak=='B'|| znak=='b'){
		Bijelaboja++ ;}
		else if (znak=='S'|| znak=='s'){
		Sivaboja++ ;}
		else if (znak=='V'|| znak=='v'){
		Crvenaboja++ ;}
		else if (znak=='P'|| znak=='p'){
		Plavaboja++ ;}
		else if (znak=='k' || znak=='K'){
			break ; }
         	else {
			printf (""Neispravan unos \n"");	} }
			
		U=Crnaboja+Bijelaboja+Sivaboja+Crvenaboja+Plavaboja ;
	   printf(""Ukupno evidentirano %d vozila."",U);
	   if(U==0){
	   	printf(""\nNajpopularnija boja je crna (0.00%%)."");}
	   	else {
	   
	   max=Crnaboja; 
	   znak='c';
	   if(Bijelaboja>max) {
	   	max=Bijelaboja;znak='b';}
	   	if(Sivaboja>max) {
	   		max=Sivaboja ; znak='s'; }
	   		if(Plavaboja>max){
	   			max=Plavaboja ;znak='p' ;}
	   			if(Crvenaboja>max){
	   				max=Crvenaboja; znak='v';}
	   				P=max/U *100 ;
	   				if(znak=='c'){
	   					printf(""\nNajpopularnija boja je crna (%.2f%%)."",P);}
	   				if(znak=='b'){
	   					printf(""\nNajpopularnija boja je bijela (%.2f%%)."",P);}
	   				if(znak=='s'){
	   					printf(""\nNajpopularnija boja je siva (%.2f%%)."",P);}
	                if(znak=='p'){
	   					printf(""\nNajpopularnija boja je plava (%.2f%%)."",P);}
	                if(znak=='v'){
	   					printf(""\nNajpopularnija boja je crvena (%.2f%%)."",P);}
	   	}
	   					return 0 ;}","#include <stdio.h>
int main() {
	int Cb=0,Bb=0,Sb=0,Vb=0,Pb=0,UK;
	char znak;
	float Proc,max;
	printf(""Unesite vozila: "");
	while (1) {
	scanf(""%c"", &znak);
	if (znak=='C' || znak=='c') {
		Cb++;
	}
	else if (znak=='B' || znak=='b') {
		Bb++;
	}
	else if (znak=='S' || znak=='s') {
		Sb++;
	}
	else if (znak=='V' || znak=='v') {
		Vb++;
	}
	else if (znak=='P' || znak=='p') {
		Pb++;
	}
	else if (znak=='K' || znak=='k') {
		break;
	}
	else {
		printf(""Neispravan unos\n"");
	}
	}
	UK=Cb+Bb+Sb+Vb+Pb;
	printf(""Ukupno evidentirano %d vozila."", UK);
	if (UK==0) {
		printf(""\nNajpopularnija boja je crna (0.00%%)."");
		return 0;
	}
	max=Cb;znak='c';
	if (Bb>max) {
		max=Bb;znak='b';
	}
	if (Sb>max) {
		max=Sb;znak='s';
	}
	if (Vb>max) {
		max=Vb;znak='v';
	}
	if (Pb>max) {
		max=Pb;znak='p';
	}
	Proc=(max/UK)*100;
	if (znak=='c') {
	printf(""\nNajpopularnija boja je crna (%.2f%%)."", Proc);
	}
	if (znak=='b') {
	printf(""\nNajpopularnija boja je bijela (%.2f%%)."", Proc);
	}
	if (znak=='s') {
	printf(""\nNajpopularnija boja je siva (%.2f%%)."", Proc);
	}
	if (znak=='v') {
	printf(""\nNajpopularnija boja je crvena (%.2f%%)."", Proc);
	}
	if (znak=='p') {
	printf(""\nNajpopularnija boja je plava (%.2f%%)."", Proc);
	}
	return 0;
}
	
	
	
"
2495,36,36,0,6,A2016/Z2/Z1/student5621,A2016/Z2/Z1/student2526,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main() {
	int a,b,p,p1=0,suma,n=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &p);
	p=abs(p);
	if (p<10){
		p1=0;
		printf(""%d"", p1);
	} else {
	n=1;
	while(p>=10){
		a=p%10;
		p/=10;
		if(p!=0){
		b=p%10;
		suma=abs(b-a);
		p1=p1+suma*pow(10,n-1);
		n++;}
	}
	printf(""%d"", p1);
	}
	
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main() {
	int broj,cifra1,cifra2,k=0,broj2=0,broj3=0;
	printf (""Unesite broj: "");
	scanf (""%d"",&broj);
	broj=abs(broj);
	if (broj<10) printf ("""");
	do{
		cifra1=broj%10;
		broj/=10;
		if (broj!=0){
		cifra2=broj%10;
		broj2=abs(cifra1-cifra2);
		broj3=broj3+broj2*pow(10,k);
		k++;
		} 
		}while (broj!=0);
	printf (""%d"",broj3);
	
	return 0;
}
"
2497,96,96,0,22,A2016/Z1/Z2/student5378,A2016/Z1/Z2/student5867,"#include <stdio.h>
#include <math.h>
int main() {
	float a1,a2,b1,b2,x,y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	if(a1==a2 && b1!=b2) {printf(""Paralelne su""); return 0;}
	else if(a1==a2 && b1==b2) {printf(""Poklapaju se""); return 0;}
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	return 0;
}
","#include <stdio.h>
#include <math.h>

int main() 
{
	float a1, b1, a2, b2, x, y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
	
	if(a1==a2 && b1!=b2)
	{
	printf(""Paralelne su"");
	return 0;
	}
	
	else if(a1==a2 && b1==b2)
	{
		printf(""Poklapaju se"");
		return 0;
	}
	
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x, y);
	return 0;
}
"
2505,39,39,0,12,A2016/Z2/Z1/student4456,A2016/Z2/Z1/student5860,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

int main() {
	int c,d,n,f;
	int suma=0;
	int br=-1;
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	if(n<0)
		n=abs(n);
	while(n!=0){
		c=n%10;
		n=n/10;
		if(n==0)
			break;
		d=n%10;
		br++;
		f=c-d;
		if(f<0)
			f=abs(f);
		suma=suma+pow(10,br)*f;
		
}
	printf(""%d"",suma);

	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

int main() {
	int broj, a, b, c;
	int br=0, br1=0;

	printf(""Unesite broj: "");
	scanf(""%d"", &broj);
	
	if(broj<0){
	 broj=abs(broj);
	}

while(broj!=0){

	a=broj%10;
	broj=broj/10;
	if (broj==0) break;
	b=broj%10;
	if(a>b){
	c=a-b;
	}
	else{
		c=abs(a-b);}
br=br*10;
br=br+c;
}

while(br!=0){
	br1=br1*10;
	br1=br1+br%10;
	br=br/10;
	if(br==0) break;
}

printf(""%d"", br1);

	return 0;
}
"
2506,36,36,0,23,A2016/Z4/Z2/student6053,A2016/Z4/Z2/student3557,"#include <stdio.h>
char* kodiraj(char* string_1, char* string_2 ){
char* a=string_1;
char* b=string_1;
int i;
int j;
int max=0;
int br [95] = {0};
char* string_string = string_2;
int nesto;


while (*b != NULL ) { 
	for(i=0; i<95; i++) {
		if(*b == i+32 ) 
		br [i] ++;
		
	}
	
	b++;
}

for(i=0; i<96;i++) {
	for (j=0;j<95; j++){
		if(br[max]<br[j])
		max = j;
		
	}
	*string_2 = max+32;
	string_2 ++;
	br[max] = -1;
	max=0;
	
	}
	*string_2 = NULL;
	string_2 = string_string;
	while (*a != NULL) {
		while(*a != *string_string)
		string_string++;
		
		nesto = string_string - string_2 ;
		*a=126-nesto;
		string_string=string_2;
		a++;
		
		
		
	}
	return string_1;
}

char* dekodiraj(char* string_1, char* string_2 ){
	char* m=string_1;
	char* n=string_2;
	int varijabla;
	int i;
	while (*m != NULL){
	varijabla=126-*m; 
	for(i=0;i<varijabla;i++)
		n++;
	
	*m=*n; 
	n=string_2;
	m++;
	
	}
	return string_1;
}
int main() {
int i;	
char string [] = ""LLMLNLNMONM"";
char niz_1 [500] = "" "";
char niz_2 [500] = "" "";

printf (""%s"",kodiraj(string,niz_1));
for(i=0;i<10;i++);
printf(""%c"", niz_1 [i]);
printf (""%s"",kodiraj(string, niz_2));
for(i=0;i<10;i++);
printf(""%c"", niz_2 [i]);
printf(""%s"",dekodiraj(string,niz_2));
printf(""%s"",dekodiraj(string,niz_1));




	return 0;
}
","#include <stdio.h>

char *kodiraj (char *s, char *sifre) {
	int i=0, j=0, max=0;
	int brojac[95]= {0};
	char *p, *q, *t;
	p = s;
	q = s;
	t = sifre;
	
	while(*q != '\0') {
		
		for(i=0; i<95; i++) {
			
			if(*q==i+32) brojac[i]++;
		}
		q++;
	}
	
	for (i=0; i<96; i++) {
		for(j=0; j<95; j++) {
			
			if (brojac[j] > brojac[max])
			max = j;
		}
		
		*sifre++ = 32+max;
		brojac[max] = -1;
		max = 0;
	}
	*sifre = '\0';
	sifre = t;
	
	while (*p!='\0') {
		
		while (*p != *t)
		t++;
		*p=126 - (t-sifre);
	t = sifre; 
		p++;

	}
	
	return s;
} 

char *dekodiraj (char* s, char* sifre) {
	int i, d;
	char *p = s;
	char *t = sifre;
	
	while ( *p != '\0') {
		d= 126 - *p;
		
		for (i=0; i<d; i++) t++;
		
			*p = *t;
			t = sifre;
			p++; 
	}
	return s;
}

int main() {

	printf(""Zadaca 4, Zadatak 2"");
	return 0;
}


"
2509,99,99,0,24,A2016/Z1/Z4/student8580,A2016/Z1/Z4/student5512,"#include <stdio.h>

int main() {
	int n,i,j;
	do{
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
		if(n<=0||n>50)
		printf(""Pogresan unos\n"");	}
	while(n<=0||n>50);
	if(n==1){
	printf(""***"");
	return 0;}
	
	
	for(i=0;i<n;i++){
		for(j=0;j<4*n-3;j++){
			if(i==j||2*n-2-i==j||2*n-2+i==j||4*n-4-i==j){
			printf(""*"");
			}
			else
			printf("" "");
		}printf(""\n"");
		}

	return 0;
}
","#include <stdio.h>

int main() {
	int j, i, n;
	do {
		printf (""Unesite broj n: "");
		scanf (""%d"", &n);
		if (n<=0 || n>50)
		printf (""Pogresan unos \n"");}
		while (n<=0 || n>50);
		if (n==1){
			printf (""***"");
			return 0;}
			
		for (i=0; i<n; i++){
			for (j=0;j<4*n-3;j++){
				if (i==j || 2*n-2-i==j || 2*n-2+i==j || 4*n-4-i==j){
					printf (""*"");}
				else
				printf ("" "");}
				printf (""\n"");}
				
	return 0;
}"
2510,57,57,0,26,A2016/Z2/Z2/student2664,A2016/Z2/Z2/student5412,"#include <stdio.h>
#define PI 3.1415926
#include <math.h>

int main() {
	int i , j;
	double niz[500];
	int n, step, min, sekundi;
	double sek;
	
	
		printf(""Unesite broj uglova: "");
        scanf(""%d"",&n);

	
	for ( i = 0 ; i < n ; i++)
	{
		scanf(""%lf"",&niz[i]);
	}
	
	printf (""Uglovi su: \n"");
	for ( i = 0 ; i < n ; i++)
	{
		step = niz[i]*(180/PI);
		min = fabs(niz[i]*(180/PI)*60) - fabs(step*60);
		sek = fabs(niz[i]*(180/PI)*3600) - fabs(step*3600) - fabs(min*60);
		sekundi = (int)(sek + 0.5);
		
		if (sekundi > 59) {
			min += 1;
			sekundi = 0;
		}
		if (min > 59) {
			if (step>0) {
			step += 1;
			}
			else {
			step -= 1;
			}
			min = 0;
		}
		
		if (sekundi>30)
		{
			for ( j=i ; j < n-1 ; j++)
			{
				niz[j]=niz[j+1];
			}
			n--;
			i--;
			continue;
		}
		printf (""%d stepeni %d minuta %d sekundi\n"", step, min, sekundi);
	}
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define PI 3.1415926

int main()
{
    double niz[500];
    int n, i, j, stepen, minuta, sekundica;
    double sekunda;
    
    do
    {
        printf (""Unesite broj uglova: "");
        scanf (""%d"", &n);
    }while (n<0 && n>500);
    
    for (i=0; i<n; i++)
    {
        scanf (""%lf"", &niz[i]);
    }
    
    printf (""Uglovi su: \n"");
    
    for (i=0; i<n; i++)
    {
        stepen = (180/PI)*niz[i];
        minuta = fabs(niz[i]*(180/PI)*60) - fabs(stepen*60);
        sekunda = fabs(niz[i]*(180/PI)*3600) - fabs(minuta*60) - fabs(stepen*3600);
        
        if (sekunda >= 60 )
        {
            minuta += 1;
            sekunda = 0;
        }
        
        if (minuta > 60)
        {
            stepen += 1;
            minuta = 0;
        }
        
        if(sekunda > 30)
        {
            for (j=i; j<n-1; j++)
            {
                niz[j] = niz[j+1];
            }
            n--;
            i--;
        continue;
        }
        sekundica=(int)(sekunda+(0.5));
        
        printf (""%d stepeni %d minuta %d sekundi\n"", stepen, minuta, sekundica);
    }
    
    return 0;
}"
2515,96,96,0,39,A2016/Z3/Z1/student8133,A2016/Z3/Z1/student1180,"#include <stdio.h>

int daj_prost(){
	int j;
	static int i=1;
	i++;
	for (j=2; j<i; j++) {
		if (i%j==0) {
			i++;
			j=2;
		}
		
	
	}
	return i;
}

int main() {
	int A,B,y=0,p;
	
	do {
		
	printf (""\nUnesite brojeve A i B: "");
	scanf (""%d %d"", &A,&B);
	if (A<=0) 
		printf (""A nije prirodan broj."");
	else if (A>=B) 
		printf (""A nije manje od B."");
		
	} while (A<=0 || A>=B);
	
	do {
		p=daj_prost();
		if(p<=A) 
			continue;
		if(p>=B) 
			break;
		y=y+p;
	} while (p<B);
	
	printf (""Suma prostih brojeva izmedju %d i %d je %d. "", A,B,y);
	
	
	return 0;
}
","#include <stdio.h>

int daj_prost(){
	int j;
	static int i=1;
	i++;
	for (j=2; j<i; j++) {
		if (i%j==0) {
			i++;
			j=2;
		}
		
	
	}
	return i;
}

int main() {
	int A,B,y=0,p;
	
	do {
		
	printf (""\nUnesite brojeve A i B: "");
	scanf (""%d %d"", &A,&B);
	if (A<=0) 
		printf (""A nije prirodan broj."");
	else if (A>=B) 
		printf (""A nije manje od B."");
		
	} while (A<=0 || A>=B);
	
	do {
		p=daj_prost();
		if(p<=A) 
			continue;
		if(p>=B) 
			break;
		y=y+p;
	} while (p<B);
	
	printf (""Suma prostih brojeva izmedju %d i %d je %d. "", A,B,y);
	
	
	return 0;
}
"
2538,11,11,0,14,A2016/Z4/Z3/student6877,A2016/Z4/Z3/student5581,"#include <stdio.h>
int slovo(char c){
	if((c>=65 && c<=90)||(c>=97 && c<=122)) return 1;
	return 0;
}
int mjenjati(char *tekst, char *rijec){
	char *pocetak=tekst;
	char *pocetakrijeci=rijec;
	int isto=1;
	while (*tekst!='\0' && *rijec!='\0') {
		if(*tekst!=*rijec) isto=0;
		tekst++;
		rijec++;
	}
	if((*tekst!='\0' && *tekst!=' ') || (*rijec!='\0' )) isto=0;
	tekst=pocetak;
	rijec=pocetakrijeci;
	return isto;
}
void zamjeni(char* tekst, char* rijec, char* novarijec){
	char* temp=tekst,*a=tekst,*rijtemp=rijec,*novatemp=novarijec;
	int visak=0,i,nastavi=1;
	while(*tekst!='\0'){
		nastavi=0;
		while(*tekst!=*rijec && *tekst!='\0'){
			tekst++;
		}
		if(*tekst!='\0' && (tekst==temp || *(tekst-1)==' ') && mjenjati(tekst,rijec)){
		   while(*novarijec!='\0'){
		   	if(*tekst==' '|| *tekst=='\0'){
		   		a=tekst;
		   		while(*tekst!='\0') tekst++;
		   		tekst++;
		   		while(tekst>a){
		   			*tekst=*(tekst-1);
		   			tekst--;
		   		}
		   	}
		   	*tekst=*novarijec;
		   	tekst++;
		   	novarijec++;
		   }	
		   nastavi=1;
		}
		if(*tekst!=' ' && *tekst!='\0' && nastavi==1){
			a=tekst;
			while(*tekst!=' ' && *tekst!='\0'){
				visak++;
				tekst++;
			}
		
		tekst=a;
		for(i=0;i<visak;i++){
			tekst=a;
			while(*tekst!='\0'){
				*tekst=*(tekst+1);
				tekst++;
			}
		}
		tekst=a;
	}
	if(*tekst!=' ' && *tekst!='\0') tekst++;
	rijec=rijtemp;
	novarijec=novatemp;
	}
	tekst=temp;
	rijec=rijtemp;
	novarijec=novatemp;
}
char* zamjena_rijeci(char* tekst, char**rijeci, char**zamjene , int broj_rijec){
	char* temptekst=tekst;
	int i;
	for(i=0;i<broj_rijec;i++){
		tekst=temptekst;
		while(*tekst!='\0'){
			while(*tekst==' ' && *tekst!='\0') tekst++;
			if(mjenjati(tekst,rijeci[i])){
				zamjeni(tekst,rijeci[i],zamjene[i]);
			}
			while(*tekst!=' ' && *tekst!='\0') tekst++;
		}
	}
	return temptekst;
}

int main() {
	char* rijeci[2] = {"""", """"};
	char* zamjene[2] = {"""", """"};
	char tekst[100] = """";
	printf(""%s"",zamjena_rijeci(tekst,rijeci,zamjene,2));
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

/*duzina stringa*/
int duzina_stringa (char *s) {
	
	int duzina=0;
	while (*s != '\0'){
		
		duzina++;
		s++;
	}
	
	return duzina;
}

/*funkcija koja pronalazi određenu riječ u stringu i vraća pokazivač na početak te riječi*/
char* trazi_rijec (char* s, char* rijec){
	
	while (*s != '\0'){
		while (*s == ' ') {
			s++;
		}
		char* p=s;
		char* a=s;
		char* q=rijec;
		
		while (*p++ == *q++) {
			if (*q == '\0' && (*p == ' ' || *p == '\0')) {
				return a;
			}
		}
		while (*s != '\0' && *s != ' '){
			s++;
		}
	}
	
	return NULL;
}

/*funkcija koja vraća broj riječi*/
int broj_rijeci1 (char* s)
{

	int neslovo=1, broj_rijeci1=0;

	while(*s != '\0') {

		if (!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))) {
			neslovo=1;
		} 
		else if (neslovo == 1) {

			neslovo=0;
			broj_rijeci1++;
		}
		s++;
	}

	return broj_rijeci1;
}

/*funkcija zamjena_rijeci*/
char* zamjena_rijeci (char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	
	int duzina;
	int i,j;
	
	if (duzina_stringa(tekst)==0 || broj_rijeci==0){
		return tekst;
	}
	
	
	for (j=0; j<broj_rijeci1(tekst); j++){
		for (i=0; i<broj_rijeci; i++){
			
			char* a;
			char* pok;
			a=trazi_rijec(tekst, rijeci[i]);
			
			if (a==NULL){
				continue;
			}
			
			duzina=duzina_stringa(zamjene[i])-duzina_stringa(rijeci[i]);
			
			/*slučaj kada je riječ koja se mijenja kraća od riječi sa kojom se mijenja*/
			if (duzina>=0) {
				
				char* kraj = a;
				while (*kraj != '\0') {
					kraj++;
				}
				
				/*ubacuje slobodna mjesta*/
				while (kraj>a) {
					*(kraj+duzina) = *kraj;
					kraj--;
				}
				/*prepisuje zamjenu preko riječi*/
				pok=zamjene[i];
				while (*pok != '\0') {
					*a=*pok;
					pok++;
					if (*pok != '\0') {
						a++;
					}
				}
			}
			
			/*slučaj kada je riječ koja se mijenja duža od riječi sa kojom se mijenja*/
			if(duzina<0){
				
				duzina=abs(duzina);
				
				/*izbacuje višak karaktera u riječi koja se mijenja*/
				char* pocetak=a;
				char* kraj=a+duzina;
				while (*pocetak++=*kraj++);
				
				/*prepisuje zamjenu preko riječi*/
				char* pocetak1=a;
				char* zamjena=zamjene[i];
				while (*zamjena != '\0'){
					*pocetak1=*zamjena;
					pocetak1++;
					zamjena++;
				}
			}
			
			a++;
		}
	}
	return tekst;
}
	
int main (){

char* rijeci[2] = { ""auto"", ""stop"" };
char* zamjene[2] = { ""vozilo"", ""start"" };
char tekst[100] = ""auto-stop auto. stop auto kj stop"";
printf (""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));

	return 0;
}
"
2541,62,62,0,49,A2016/Z3/Z1/student4108,A2016/Z3/Z1/student5621,"#include <stdio.h>

    int daj_prost (){
        int i, prost=1;
        static int a=1;
       
        
        while(1){ 
            a++;
           
            if(a==2) {
            return a;
            }else {
            for (i=2; i<a; i++){
                if (a%i==0){ 
                    prost=0;
                    break;}
            }
        }
        if(prost){return a;}
        else{
            prost=1;
        }
        
    }

}




int main() {
	
	int a,b,c=0,suma=0;
	
	do{
	
	printf(""Unesite brojeve A i B: "");
	scanf(""%d %d"", &a, &b);
	
	if( a < 1  ){ 
	    printf(""A nije prirodan broj.\n"");
	}
	else if( b <= a ){
	    printf(""A nije manje od B.\n"");
	}

	 
	}while(a<1 || a>=b);
	
	
	
    while(c<b){

	c=daj_prost();
	if(c>a && c<b){
        suma+=c;
    }
	
}

	printf(""Suma prostih brojeva izmedju %d i %d je %d."", a,b,suma);
	
	
	
	
	
	
	
	
	
	return 0;
}
","#include <stdio.h>

int daj_prost () {
	int p=0, i; 
	static int q=0; 
	
	while (1){
		q++;
		if(q==2){
			return q;
		}
		else if(q==3){
			return q;
		}
		else {
		for(i=2; i<q; i++){
			if(q%i==0){
				p=0;
				break;
			}
		}
		if (p){
			return q;
		}
		else{
			p=1;
		}
	}
}
}
int main() {
	int A,B, sum=0, q=0;
	do {
		printf(""Unesite brojeve A i B: "");
		scanf (""%d"", &A);
		scanf (""%d"", &B);
		if(A<1){
			printf(""A nije prirodan broj.\n"");
		}
		else if(A>=B){
			printf(""A nije manje od B.\n"");
		}
		
	}while(A<1 || A>=B || B<=0);
	while(q<B){
		q=daj_prost();
		if(q>A && q<B){
			sum+=q;
		}
	}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."", A, B, sum);
	return 0;
}"
2551,47,47,0,15,A2016/Z2/Z1/student9897,A2016/Z2/Z1/student5122,"#include <stdio.h>
#include <stdlib.h>

int main() { 
    
    int br, n, m, br1; 
    int suma=0, brojac=1;  

    printf (""Unesite broj: ""); 
    scanf (""%d"", &br); 
    
    
    if (br<0) 
    br=abs(br);
   
    while (br>=10) { 
        
        n=br%10;
        br=br/10; 
        m=br%10; 
        br1=abs(m-n); 
        
        suma=suma+br1*brojac; 
        brojac=brojac*10; 
    }
        
        printf (""%d"", suma); 
        
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
int main() {
	int broj, cifra, brojac=1, pom1, pom2, pom,n=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &broj);
	if(broj<0){
		broj=abs(broj);
	}
	while(broj>9){
		pom1=broj%10;
		broj=broj/10;
		pom2=broj%10;
		pom=pom1-pom2;
		if(pom<0)
		pom=abs(pom);
		cifra=brojac*pom;
		n+=cifra;
		brojac*=10;
	}
	printf(""%d"", n);
	return 0;
}
"
2556,98,98,0,94,A2016/Z3/Z2/student6720,A2016/Z3/Z2/student4628,"#include <stdio.h>
#include <stdlib.h>
int suma_cifara( int c)
{
	int clan, suma=0;
	while(c>0) {
		clan=c%10;
		suma += clan;
		c /= 10;
	}
	return suma;
}

void ubaci(int niz[], int vel)
{
	int i, c, pomocni_niz[20]= {0};

	for(i=0; i<vel; i++) {
		pomocni_niz[i]=niz[i];
	}

	/*osigurvamo da ima dovoljno mjesta u memoriji za clanove koje cemo ubaciti*/
	for(i=vel-1; i>=0; i--) {
		niz[i*2]=pomocni_niz[i];
	}

	for(i=0; i<vel; i++) {
		/*u slucaju negativnih brojeva uzimamo absolutnu vrijednost da bi dobili isparvnu sumu*/
		c= abs(niz[2*i]);
		niz[2*i+1]=suma_cifara(c);
	}
}

/*funkcija ispituje da li je broj clan fibonaccijevog niza*/
int fibonaci(int n)
{
	int clan1, clan2, clan;
	
	if(n<0) return 0;

	clan1=1;
	clan2=1;
	clan=0; 
	
	if(n==clan1 || n==clan2) return 1;

	clan=clan1 + clan2;

	while(clan<=n) {
		if(clan==n) return 1;
		clan1= clan2;
		clan2=clan;
		clan= clan1 + clan2;
	}
	return 0;
}

int izbaci(int niz[], int vel)
{
	int i, j;

	for(i=0; i<vel; i++) {
		/*ako je clan niza ujedno i fibonaccijev broj treba ga izbaciti*/
		if(fibonaci(niz[i])) {
			for(j=i; j<vel-1; j++) {
				niz[j]=niz[j+1];
			}
			i--;
			vel--;
		}

	}
	return vel;
}


int main()
{
	int i, niz[20], modif_vel=0;

	printf(""Unesite niz od 10 brojeva: "");

	for(i=0; i<10; i++) {
		scanf(""%d"", &niz[i]);
	}

	ubaci(niz, 10);
	modif_vel=izbaci(niz, 20);

	printf(""Modificirani niz glasi: "");

	for(i=0; i<modif_vel; i++) {
		if(i<modif_vel-1)
			printf(""%d, "", niz[i]);
		else
			printf(""%d."", niz[i]);
	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
int suma_cifara( int c)
{
	int clan, suma=0;
	while(c>0) {
		clan=c%10;
		suma += clan;
		c /= 10;
	}
	return suma;
}

void ubaci(int niz[], int vel)
{
	int i, c, pomocni_niz[20]= {0};

	for(i=0; i<vel; i++) {
		pomocni_niz[i]=niz[i];
	}

	/*osigurvamo da ima dovoljno mjesta u memoriji za clanove koje cemo ubaciti*/
	for(i=vel-1; i>=0; i--) {
		niz[i*2]=pomocni_niz[i];
	}

	for(i=0; i<vel; i++) {
		/*u slucaju negativnih brojeva uzimamo absolutnu vrijednost da bi dobili isparvnu sumu*/
		c= abs(niz[2*i]);
		niz[2*i+1]=suma_cifara(c);
	}
}

/*funkcija ispituje da li je broj clan fibonaccijevog niza*/
int fibonaci(int n)
{
	int clan1, clan2, clan;
	
	if(n<0) return 0;

	clan1=1;
	clan2=1;
	clan=0; 
	
	if(n==clan1 || n==clan2) return 1;

	clan=clan1 + clan2;

	while(clan<=n) {
		if(clan==n) return 1;
		clan1= clan2;
		clan2=clan;
		clan= clan1 + clan2;
	}
	return 0;
}

int izbaci(int niz[], int vel)
{
	int i, j;

	for(i=0; i<vel; i++) {
		/*ako je clan niza ujedno i fibonaccijev broj treba ga izbaciti*/
		if(fibonaci(niz[i])) {
			for(j=i; j<vel-1; j++) {
				niz[j]=niz[j+1];
			}
			i--;
			vel--;
		}

	}
	return vel;
}


int main()
{
	int i, niz[20], modif_vel=0;

	printf(""Unesite niz od 10 brojeva: "");

	for(i=0; i<10; i++) {
		scanf(""%d"", &niz[i]);
	}

	ubaci(niz, 10);
	modif_vel=izbaci(niz, 20);

	printf(""Modificirani niz glasi: "");

	for(i=0; i<modif_vel; i++) {
		if(i<modif_vel-1)
			printf(""%d, "", niz[i]);
		else
			printf(""%d."", niz[i]);
	}
	return 0;
}
"
2578,67,67,0,49,A2016/Z3/Z2/student8886,A2016/Z3/Z2/student2513,"#include <stdio.h>
#include <stdlib.h>

/*Racunanje sume cifara i-tog clana niza*/
int suma(int n) {
    int c, sum=0;
    while (n!=0) {
        c=abs(n%10);
        sum+=c;
        n=n/10;
    }
    return sum;
}

/*Ubacivanje sume cifara i-tog clana niza u niz nakon tog clana*/ 
void ubaci(int *niz, int vel) {
    int i, j;
    for (i=0; i<vel; i++) {
        for (j=vel-1; j>i; j--) 
            niz [j+1]=niz[j];
            niz [i+1]=suma(niz[i]);
            vel++;
            i++;
        
    }
}

/*Provjeravanje da li se i-ti clan niza pojavljuje u Fibonacijevom nizu*/
int fibonaci(int n)
{
    int x,y;
    x=1;
    y=1;
    while (x<n && y<n) {
        x=x+y;
        y=x+y;
    }
    if (x==n || y==n) return 1;
    else return 0;
}

/*Izbacivanje onih clanova iz niza koji se pojavljuju u Fibonacijevom nizu*/
int izbaci(int* niz,int vel)
{
    int i,j;
    for(i=0; i<vel; i++)
    {
        if (fibonaci(niz[i])==1){
        for(j=i; j<vel-1; j++)
        {
            niz[j]=niz[j+1];
        }
        vel--;
        i--;
        }
    }
    return vel;

}
int main () {
    
    int niz[1000], i, vel=10;
    printf(""Unesite niz od 10 brojeva: "");
    for (i=0; i<vel; i++) {
        scanf (""%d"", &niz[i]);
    }
    ubaci(niz, vel);
    vel=vel*2;
    vel=izbaci(niz, vel);
    
/*Ispis modificiranog niza*/
    printf(""Modificirani niz glasi: "");
    for(i=0; i<vel; i++)
    {
        if(i==vel-1) {
            printf(""%d."", niz[i]);
        } else
        printf(""%d, "", niz[i]);
    }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

/*Funkcija koja izracunava sumu cifara proslijedjenog broja*/
int suma (int n){
    int s=0;
    n=abs(n);
    while(n!=0){
        s=s+n%10;
        n=n/10;
    }
    return s;
}

/*Funkcija provjerava da li je njoj proslijedjeni broj fibonacijev*/
int fibonaci(int n){
    int a=1,b=1;
    while(a<n && b<n){
        a=a+b;
        b=a+b;
    }
    if(n==a || n==b) 
        return 1;
    else 
        return 0;
    
}

/*Funkcija koja izbacuje iz niza brojeva one brojeve koji su fibonacijevi */
int izbaci(int* niz, int vel){
    int i, j;
    for(i=0;i<vel;i++){
        if(fibonaci(niz[i])==1){
            for(j=i;j<vel-1;j++){
                niz[j]=niz[j+1];
            }
        i--;
        vel--;
        }
    }
    return vel;
}

/*Ubacivanje elemenata u niz jednakih sumi cifara odgovarajucih im prethodnih elementa*/
void ubaci(int* niz, int vel){
    int i,j;
    for(i=0; i<vel; i++){
        for(j=vel-1; j>i; j--){
            niz[j+1]=niz[j];
        }
            niz[i+1]=suma(niz[i]);
            vel++;
            i++;
    }

}

int main() {
    int niz[20],i,vel;
    printf(""Unesite niz od 10 brojeva: "");
    for(i=0;i<10;i++)
    scanf(""%d"",&niz[i]);
    ubaci(niz,10);
    vel=izbaci(niz,20);
    printf(""Modificirani niz glasi: "");
    for(i=0; i<vel; i++){
        if(i==vel-1)
            printf(""%d."",niz[i]);
        else
            printf(""%d, "",niz[i]);
    }
    
	
	return 0;
}
"
2585,81,81,0,80,A2016/Z3/Z2/student5612,A2016/Z3/Z2/student6824,"#include <stdio.h>
#include<stdlib.h>
#define VELICINA 10
#define velicina_2 20
void ubaci (int *niz, int velicina)
{
	int i, k;
	int b1;
	int b2;
	int b3 = 0;
	for(k = velicina - 1; k >= 0; k--){
		niz[2*k] = niz[k];
	}
	for(i = 0; i < 2 * velicina; i = i + 2){
		b1 = abs (niz[i]);
		if (b1 < 10) 
		b3 = b1;
		else {
			do{
			b2 = b1  % 10;
			b3 = b3 + b2;
			b1 = b1 / 10;
			}
			while(b1 != 0);
		}
		niz[i + 1] = b3;
		b3 = 0;
	}
}
int izbaci(int *niz, int velicina)
{
	int i;
	int k;
	int x = 1;
	int y = 1;
	int z;
	int u;
	for(i = 0; i < velicina; i++){
		x = 1;
		y = 1;
		for(k = 1; k < 10000; k++){
			if (k == 1)
			z = 1;
			else {
				z = x + y;
				x = y;
				y = z;
			}
			if(niz[i] == z){
				for(u = i; u < velicina - 1; u++){
					niz[u] = niz[u+1];
				
				}
				velicina -- ; 
				i --; 
				break;
			}
		}
	}
	return velicina;
}
int main(){
	int niz[2 * VELICINA];
	int i;
	int u;
	printf(""Unesite niz od 10 brojeva: "");
	for(i = 0; i < VELICINA; i++){
		scanf(""%d"", &niz[i]);
	}
	ubaci(niz, VELICINA);
	u = izbaci(niz, velicina_2);
	printf(""Modificirani niz glasi: "");
	for(i = 0; i < u; i++){
		if (i == u - 1){
			printf(""%d."", niz[i]);
		}else {
			printf(""%d, "", niz[i]);
		}
	}
	return 0;
}","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define VEL 10
#define velicina 20
void ubaci(int *niz, int vel)
{
	int i,broj,broj1,nbroj=0,j;
	for(j=vel-1;j>=0;j--)
	{
		niz[2*j]=niz[j];
	}
		for(i=0; i<2*vel; i+=2)
		{
			broj=abs(niz[i]);
			if(broj<10)
			{
				nbroj=broj;
			}
			else
			{
				do
				{
					broj1=broj%10;
					nbroj=nbroj+broj1;
					broj=broj/10;
				}
				while(broj!=0);
			}
			niz[i+1]=nbroj;
			nbroj=0;
		}
}
	
	
int izbaci(int *niz, int vel)
{
	int i,j,a=1,b=1,c,s;
	for(i=0;i<vel;i++)
	{
		a=1;
		b=1;
		for(j=1;j<10000;j++)
		{
			if(j==1)
			{
				c=1;
			}
			else
			{
				c=a+b;
				a=b;
				b=c;
			}
			if(niz[i]==c)
			{
				for(s=i; s<vel-1; s++)
				{
					niz[s]=niz[s+1];
					
				}
			vel--;
			i--;
			break;
		}
	}
}
return vel;
}
int main()
{
	int niz[2*VEL],s,i;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<VEL;i++)
	{
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,VEL);
	s=izbaci(niz,velicina);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<s;i++)
	{
		if(i==s-1)
		{
			printf(""%d."",niz[i]);
		}
		else
		{
			printf(""%d, "",niz[i]);
		}
	}
	return 0;
}
	
"
2590,97,97,0,56,A2016/Z3/Z1/student5529,A2016/Z3/Z1/student6571,"#include <stdio.h>
#include <stdlib.h>

int daj_prost(){
    static int c=1;
    int i,prost;
   
    
    
    while(1){
        c++;
        prost=1;
    for(i=2; i<c; i++){
       
        if(c%i==0){
            prost=0;
            break;
         }
    }
    if(prost)
        break;
    }
        return c;
    
}



int main()
{

    int a, b, i, k,suma=0;


    do{
    printf(""\nUnesite brojeve A i B: "");
    scanf(""%d %d"", &a, &b);
    
    if(a<=0 && a<b){
        printf(""A nije prirodan broj."");
        continue;
    }
   
    if(a>=b){
        printf(""A nije manje od B."");
        continue;
    }
        
    } while(a<=0 || a>=b);
    for(i=a+1;i<b;i++){
        k=daj_prost();
        if(k>a && k<b){
            suma=suma+k;

        }

    }

    printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b, suma);



    return 0;
}","#include <stdio.h>
#include <stdlib.h>

int daj_prost(){
    static int c=1;
    int i,prost;
   
    
    
    while(1){
        c++;
        prost=1;
    for(i=2; i<c; i++){
       
        if(c%i==0){
            prost=0;
            break;
         }
    }
    if(prost)
        break;
    }
        return c;
    
}



int main()
{

    int a, b, i, k,suma=0;


    do{
    printf(""\nUnesite brojeve A i B: "");
    scanf(""%d %d"", &a, &b);
    
    if(a<=0 && a<b){
        printf(""A nije prirodan broj."");
        continue;
    }
   
    if(a>=b){
        printf(""A nije manje od B."");
        continue;
    }
        
    } while(a<=0 || a>=b);
    for(i=a+1;i<b;i++){
        k=daj_prost();
        if(k>a && k<b){
            suma=suma+k;

        }

    }

    printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b, suma);



    return 0;
}"
2593,98,98,0,72,A2016/Z3/Z2/student7232,A2016/Z3/Z2/student3301,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define bre1 10
#define bre12 20
void ubaci (int *niz, int size) {
	int n, dig, num1, num2=0;
	for (n=size-1; n>=0; n--) {
		*(niz+2*n)=*(niz+n);
	}
	for (n=0; n<size*2; n++) {
		if (n%2==1) {
			num1=*(niz+n-1);
			while (num1!=0) {
				dig=num1%10;
				num2+=dig;
				num1/=10;
			}
			num2=abs(num2);
			*(niz+n)=num2;
			num2=0;
		}
	}
}

int izbaci (int*niz, int size) {
	int n, m, p, first=0, second=1, next;
	for (n=0; n<size; n++) {
		first=0;
		second=1;
		for (m=1; m<10000; m++) {
			if (m==1) {
				next=m;
			} else {
				next=first+second;
				first=second;
				second=next;
			}
			if (*(niz+n)==next) {
				for (p=n; p<size-1; p++) {
					*(niz+p)=*(niz+p+1);
				}
				size--;
				n--;
				break;
			}
		}
	}
	return size;
}

int main () {
	int niz[20], n, x;
	
	/*UNOS */
	printf (""Unesite niz od 10 brojeva: "");
	for (n=0; n<10; n++) {
		scanf (""%d"", &niz[n]);
	}
	
	/*POZIVANJE FUNKCIJE ""UBACI""*/
	ubaci (niz, bre1);
	
	/*POZIVANJE FUNKCIJE ""IZBACI""*/
	x=izbaci (niz, bre12);
	
	printf (""Modificirani niz glasi: "");
	for (n=0; n<x; n++) {
		if (n<(x-1)) {
			printf (""%d, "", niz[n]);
		} else {
			printf (""%d. "", niz[n]);
		}
	}
	return 0;
}","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define brel 10
#define brel2 20
/* Funkcija ubaci */ 
void ubaci(int *niz,int velicina){
	int i,cifra,broj,broj2=0;
	for (i=velicina-1;i>=0;i--){    /* Pomjeranje clanova niza */ 
		*(niz+2*i)=*(niz+i);
	}
	for (i=0;i<velicina*2;i++){
		if (i%2==1){
			broj=*(niz+i-1);
			while (broj!=0){        /* Dodavanje clanova sabiranjem cifara prethodnog clana */ 
				cifra=broj%10;
				broj2+=cifra;
				broj/=10;
		    }
		    broj2=abs(broj2);
			*(niz+i)=broj2;
			broj2=0;
		}
	}
}

/* Funkcija izbaci */ 
/* Formiranje pretlji za prolazak po nizu i uporedivanje njegovih clanova sa Fibonaccijevim nizom, izbacivanje jednakih */
int izbaci(int *niz,int velicina){
	int i,j,m,prvi=0,drugi=1,slijedeci;
	for (i=0;i<velicina;i++){
		prvi=0;
		drugi=1;
		for (j=1;j<10000;j++){   
			if (j==1) slijedeci=j;                
			else {
				slijedeci=prvi+drugi;
				prvi=drugi;
				drugi=slijedeci;
			}
			if (*(niz+i)==slijedeci){
				for (m=i;m<velicina-1;m++){
						*(niz+m)=*(niz+m+1);
				}
				velicina--;
				i--;
				break;
			}
		}
	}
	return velicina;
}

int main() {
	int niz[20],i,n;
	
	/* Unos elemenata */ 
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0;i<10;i++){
		scanf(""%d"",&niz[i]);
	}
	
	/* Pozivanje funkcije ubaci */ 
	
	ubaci(niz,brel);
	
	/* Pozivanje funkcije izbaci */ 
		
	n=izbaci(niz,brel2);
	
	/* Ispis niza */
	printf (""Modificirani niz glasi: "");
	for (i=0;i<n;i++){
		if (i<(n-1)){
			printf (""%d, "",niz[i]);
	    }
	    else {
	    	printf (""%d. "",niz[i]);
	    }
	}
	
	return 0;
}
"
2599,77,77,0,91,A2016/Z1/Z1/student9358,A2016/Z1/Z1/student8004,"#include <stdio.h>

int main() {
	double m,b,t,t1,t2,t3,t4,t5,b1,b2,b3,b4,b5,m1,m2,m3,m4,m5;
	printf(""Unesite bodove za Tarika:\nI parcijalni ispit: "");
	scanf(""%lf"",&t1);
	if(t1<0 || t1>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&t2);
	if(t2<0 || t2>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&t3);
	if(t3<0 || t3>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&t4);
	if(t4<0 || t4>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&t5);
	if(t5<0 || t5>40) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Unesite bodove za Bojana:\nI parcijalni ispit: "");
	scanf(""%lf"",&b1);
	if(b1<0 || b1>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&b2);
	if(b2<0 || b2>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&b3);
	if(b3<0 || b3>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&b4);
	if(b4<0 || b4>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&b5);
	if(b5<0 || b5>40) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Unesite bodove za Mirzu:\nI parcijalni ispit: "");
	scanf(""%lf"",&m1);
	if(m1<0 || m1>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&m2);
	if(m2<0 || m2>20) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Prisustvo: "");
	scanf(""%lf"",&m3);
	if(m3<0 || m3>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zadace: "");
	scanf(""%lf"",&m4);
	if(m4<0 || m4>10) {printf(""Neispravan broj bodova""); return 0;}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&m5);
	if(m5<0 || m5>40) {printf(""Neispravan broj bodova""); return 0;}
	m=m1+m2+m3+m4+m5;
	t=t1+t2+t3+t4+t5;
	b=b1+b2+b3+b4+b5;
	if (m<55 && t<55 && b<55) {printf(""Nijedan student nije polozio.\n""); return 0;}
	else if((m>=55 && b<55 && t<55) || (m<55 && b>=55 && t<55) || (m<55 && b<55 && t>=55)) {printf(""Jedan student je polozio.\n""); return 0;}
	else if((m>55 && b>55 && t<55) || (m>55 && t>55 && b<55) || (m<55 && b>55 && t>55)) {printf(""Dva studenta su polozila.\n""); return 0;}
	else printf(""Sva tri studenta su polozila.\n"");
	if ((m>=55 && m<65 && t>=55 && t<65 && b>=55 && b<65) || (m>=65 && m<75 && t>=65 && t<75 && b>=65 && b<75) || (m>=75 && m<85 && t>=75 && t<85 && b>=75 && t<85) || (m>=85 && m<95 && t>=85 && t<95 && b>=85 && b<95) || (m>=95 && b>=95 && t>=95)) {printf(""Sva tri studenta imaju istu ocjenu.""); return 0;}
	if ((m>=55 && m<65 && t>=55 && t<65 && b>=65) || (m>=55 && m<65 && b>=55 && b<65 && t>=65) || (b>=55 && b<65 && t>=55 && t<65 && m>=65) || (m>=65 && m<75 && t>=65 && t<75 && (b>=75 || b<65)) || (m>=65 && m<75 && b>=65 && b<75 && (t>=75 || t<65)) || (b>=65 && b<75 && t>=65 && t<75 && (m<65 || m>=75)) ||  (m>=75 && m<85 && t>=75 && t<85 && (b>=85 || b<75)) || (m>=75 && m<85 && b>=75 && b<85 && (t>=85 || t<75)) || (b>=75 && b<85 && t>=75 && t<85 && (m<75 || m>=85)) || (m>=85 && m<95 && t>=85 && t<95 && (b>=95 || b<85)) || (m>=85 && m<95 && b>=85 && b<95 && (t>=95 || t<85)) || (b>=85 && b<95 && t>=85 && t<95 && (m<85 || m>=95)) || (m>=95 && t>=95 && b<95) || (m>=95 && b>=95 && t<95) || (b>=95 && t>=95 && m<95)) printf(""Dva od tri studenta imaju istu ocjenu."");
	else printf(""Svaki student ima razlicitu ocjenu."");
	
	return 0;
}
","#include <stdio.h>

int main() {
	double Ipt,IIpt,pt,zt,zit,ubt,ubb,ubm,Ipb,IIpb,zb,pb,zib,Ipm,IIpm,pm,zm,zim;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&Ipt);
	if ((Ipt<0)||(Ipt>20)){
printf(""Neispravan broj bodova"");
return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIpt);
	if ((IIpt<0)||(IIpt>20)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""Prisustvo: "");
	scanf(""%lf"",&pt);
	if ((pt<0)||(pt>10)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""Zadace: "");
	scanf(""%lf"",&zt);
	if ((zt<0||zt>10)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&zit);
	if ((zit<0||zit>40)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&Ipb);
	if ((Ipb<0||Ipb>20)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIpb);
	if ((IIpb<0)||(IIpb>20)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""Prisustvo: "");
	scanf(""%lf"",&pb);
	if ((pb<0)||(pb>10)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""Zadace: "");
	scanf(""%lf"",&zb);
	if ((zb<0)||(zb>10)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&zib);
	if ((zib<0)||(zib>40)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&Ipm);
	if ((Ipm<0)||(Ipm>20)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&IIpm);
	if ((IIpm<0)||(IIpm>20)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""Prisustvo: "");
	scanf(""%lf"",&pm);
	if ((pm<0)||(pm>10)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""Zadace: "");
	scanf(""%lf"",&zm);
	if ((zm<0)||(zm>10)){
printf(""Neispravan broj bodova"");
return 0;
}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&zim);
	if ((zim<0)||(zim>40)){
printf(""Neispravan broj bodova"");
return 0;
}
ubt=Ipt+IIpt+zt+pt+zit;
ubm=Ipm+IIpm+zm+pm+zim;
ubb=Ipb+IIpb+zb+pb+zib;
	if(ubt<55 && ubb<55 && ubm<55)
	printf(""Nijedan student nije polozio."");
	else if((ubt<55 && ubb<55)||(ubt<55 && ubm<55)||(ubb<55 && ubm<55))
	printf(""Jedan student je polozio."");
	else if(ubt<55 || ubm<55 || ubb<55)
	printf(""Dva studenta su polozila."");
	else
	printf(""Sva tri studenta su polozila."");
	if(ubt>=55&&ubb>=55&&ubm>=55){
		if((ubt<65 && ubb<65 && ubm<65)||(ubt>=65 && ubb>=65 && ubm>=65 && ubt<75 && ubb<75 && ubm<75)||(ubt>=75 && ubm>=75 && ubb>=75 && ubt<85 && ubb<85 && ubm<85)||(ubt>=85 && ubm>=85 && ubb>=85 && ubt<92 && ubb<92 && ubm<92)||(ubt>=92 && ubb>=92 && ubm>=92 &&ubt<=100 && ubb<=100 && ubm<=100))
		printf(""\nSva tri studenta imaju istu ocjenu."");
		else if((ubt<65&&ubb<65&&ubm>=65)||(ubt<65&&ubm<65&&ubb>=65)||(ubm<65&&ubb<65&&ubt>=65)||(ubt>=65&&ubt<75&&ubb<75&&ubb>=65&&(ubm<65||ubm>=75))||(ubt<75&&ubt>=65&&ubm<75&&ubm>=65&&(ubb<65||ubb>=75))||(ubm>=65&&ubm<75&&ubb<75&&ubb>=65&&(ubt<65||ubt>=75))||(ubt>=75&&ubt<85&&ubb<85&&ubb>=75&&(ubm<75||ubm>=85))||(ubt>=75&&ubt<85&&ubm<85&&ubm>=75&&(ubb<75||ubb>=85))||(ubm>=75&&ubm<85&&ubb<85&&ubb>=75&&(ubt<75||ubt>=85))||(ubt>=85&&ubt<92&&ubb<92&&ubb>=85&&(ubm<85||ubm>=92))||(ubt>=85&&ubt<92&&ubm<92&&ubm>=85&&(ubb<85||ubb>=92))||(ubm>=85&&ubm<92&&ubb<92&&ubb>=85&&(ubt<85||ubt>=92))||(ubt>=92&&ubb>=92&&ubm<92)||(ubt>=92&&ubm>=92&&ubb<92)||(ubm>=92&&ubb>=92&&ubt<92))
		printf(""\nDva od tri studenta imaju istu ocjenu."");
		else
		printf(""\nSvaki student ima razlicitu ocjenu."");
	}
return 0;
}
"
2602,98,98,0,120,A2016/Z4/Z4/student1192,A2016/Z4/Z4/student7085,"#include <stdio.h>

char*  obuhvat(char*c, float x1, float y1, float x2, float y2){
	char* reset=c, *pocetak=c, *kraj;
	float x, xd, y, yd; 
	int i, brx,bry, predznak;
	while(*c!='\0'){
	if(*c=='(') {
		       if(c==reset)
			       pocetak=c;
				x=0;
			    y=0;
			    xd=0; yd=0;
			    brx=0; bry=0;
			    predznak=1;
			    c++;
			}
			else return NULL;
		
				if(*c=='-'){
				predznak=-1;
				c++;
				}
				if (*c<'0'|| *c>'9') return NULL;
			while(*c>='0'&& *c<='9'){
					x=x*10 + predznak*(*c-'0');
					c++;
				}
				
		if(*c=='.'){
			c++;
			if (*c==' ') return NULL;
			while(*c>='0'&& *c<='9'){
				xd= xd*10 + (*c-'0');
				brx++;
				c++;
				if(*c==','){
					for(i=0; i<brx; i++)
					xd=xd/10;
					x= x+ predznak*xd;
					predznak=1;
					
				}
				
			}
		}
		predznak=1;
		
				if(*c==',') c++; else return NULL;
				if(*c=='-')	{predznak=-1; c++;}
				if (*c<'0'|| *c>'9') return NULL;
				while(*c>='0'&& *c<='9'){
					y=y*10 + predznak*(*c-'0');
					c++;
				}
				
				/*Racunanje decimala broja ako je broj decimalan*/
			if(*c=='.')
			{ c++;
		    if (*c==' ') return NULL;
			while(*c>='0'&& *c<='9'){
				yd= yd*10 + (*c-'0');
				bry++;
				
				c++;
				if(*c==')'){
					for(i=0; i<bry; i++)
					yd=yd/10;
					y= y+ predznak*yd;
			
				}
			}
			}
			if (*c==')') {
	             c++;
				kraj= c;
			}
			else return NULL;
			
			/*Izbacivanje onih tacaka koje se ne nalaze unutar pavougaonika*/
			if( x<x1 || x> x2 || y<y1 || y> y2)
			{
				while(*kraj!='\0')
				{
					*pocetak=*kraj;
					pocetak++;
					kraj++;
				}
				*pocetak=*kraj;
				c= c-(kraj-pocetak);
			}
			if(*c==',') {
			pocetak=c;
			c++;
				x=0;
			    y=0;
			    xd=0; yd=0;
			    brx=0; bry=0;
			    predznak=1;
			    if(*c=='\0') return NULL;
			}
			
	
		
	
	
	}
	/*Izbacivanje zareza ako se nalazi na pocetku stringa*/
	c=reset;
	if(*c==','){
		while(*c!='\0'){
			*c=*(c+1);
			c++;
		}
		*c=*(c+1);
	}
	c=reset;
	return c;
}


int main() {
	printf(""Zadaća 4, Zadatak 4"");
	return 0;
}
","#include <stdio.h>

char*  obuhvat(char*c, float x1, float y1, float x2, float y2){
	char* reset=c, *pocetak=c, *kraj;
	float x, xd, y, yd; 
	int i, brx,bry, predznak;
	while(*c!='\0'){
	if(*c=='(') {
		       if(c==reset)
			       pocetak=c;
				x=0;
			    y=0;
			    xd=0; yd=0;
			    brx=0; bry=0;
			    predznak=1;
			    c++;
			}
			else return NULL;
		
				if(*c=='-'){
				predznak=-1;
				c++;
				}
				if (*c<'0'|| *c>'9') return NULL;
			while(*c>='0'&& *c<='9'){
					x=x*10 + predznak*(*c-'0');
					c++;
				}
				
		if(*c=='.'){
			c++;
			if (*c==' ') return NULL;
			while(*c>='0'&& *c<='9'){
				xd= xd*10 + (*c-'0');
				brx++;
				c++;
				if(*c==','){
					for(i=0; i<brx; i++)
					xd=xd/10;
					x= x+ predznak*xd;
					predznak=1;
					
				}
				
			}
		}
		predznak=1;
		
				if(*c==',') c++; else return NULL;
				if(*c=='-')	{predznak=-1; c++;}
				if (*c<'0'|| *c>'9') return NULL;
				while(*c>='0'&& *c<='9'){
					y=y*10 + predznak*(*c-'0');
					c++;
				}
				
				/*Racunanje decimala broja ako je broj decimalan*/
			if(*c=='.')
			{ c++;
		    if (*c==' ') return NULL;
			while(*c>='0'&& *c<='9'){
				yd= yd*10 + (*c-'0');
				bry++;
				
				c++;
				if(*c==')'){
					for(i=0; i<bry; i++)
					yd=yd/10;
					y= y+ predznak*yd;
			
				}
			}
			}
			if (*c==')') {
	             c++;
				kraj= c;
			}
			else return NULL;
			
			/*Izbacivanje onih tacaka koje se ne nalaze unutar pavougaonika*/
			if( x<x1 || x> x2 || y<y1 || y> y2)
			{
				while(*kraj!='\0')
				{
					*pocetak=*kraj;
					pocetak++;
					kraj++;
				}
				*pocetak=*kraj;
				c= c-(kraj-pocetak);
			}
			if(*c==',') {
			pocetak=c;
			c++;
				x=0;
			    y=0;
			    xd=0; yd=0;
			    brx=0; bry=0;
			    predznak=1;
			    if(*c=='\0') return NULL;
			}
			
	
		
	
	
	}
	/*Izbacivanje zareza ako se nalazi na pocetku stringa*/
	c=reset;
	if(*c==','){
		while(*c!='\0'){
			*c=*(c+1);
			c++;
		}
		*c=*(c+1);
	}
	c=reset;
	return c;
}


int main() {
	printf(""Zadaća 4, Zadatak 4"");
	return 0;
}
"
2603,99,99,0,55,A2016/Z1/Z3/student9463,A2016/Z1/Z3/student4389,"#include <stdio.h>

int main() {
    char inpt, unos;
    int blk=0, wht=0, gry=0, red=0, blu=0, i=0;
    float blkp, whtp, gryp, redp, blup;
    printf(""Unesite vozila: "");
    do{
        scanf(""%c"", &inpt);
        if( ((inpt!='C') && (inpt!='B') && (inpt!='S') && (inpt!='V') && (inpt!='P') && (inpt!='K')) && ((inpt!='c') && (inpt!='b') && (inpt!='s') && (inpt!='v') && (inpt!='p')) && (inpt!='k') ){
            printf(""Neispravan unos\n"");
        }
                 if(inpt== 'C' || inpt== 'c'){
                blk++;
            }
            else if(inpt== 'B' || inpt== 'b'){
                wht++;
            }
            else if(inpt== 'S' || inpt== 's'){;
                gry++;
            }
            else if(inpt== 'V' || inpt== 'v'){
                red++;
            }
            else if(inpt== 'P' || inpt== 'p'){
                blu++;
            }
            if((inpt!='k' && inpt!='K') && ((inpt=='C') || (inpt=='c') || (inpt=='B') || (inpt=='b') || (inpt=='S') || (inpt=='s') || (inpt=='V') || (inpt=='v') || (inpt=='P') || (inpt=='p'))){
                i++;
            }
            if(inpt=='k' || inpt=='K'){
                break;
            }
    }while(inpt != 'k');
    printf(""Ukupno evidentirano %d vozila.\n"", i);
    blkp = ((blk)/((float)i))*100;
    whtp = ((wht)/((float)i))*100;
    gryp = ((gry)/((float)i))*100;
    redp = ((red)/((float)i))*100;
    blup = ((blu)/((float)i))*100;
         if(((blk >= wht) && (blk >= gry) && (blk >= red) && (blk >= blu)) && i==0){
             printf(""Najpopularnija boja je crna (0.00%)."");
         }
    else if((blk >= wht) && (blk >= gry) && (blk >= red) && (blk >= blu)){
             printf(""Najpopularnija boja je crna (%.2f%)."", blkp);
    }
    else if((wht >= blk) && (wht >= gry) && (wht >= red) && (wht >= blu)){
            printf(""Najpopularnija boja je bijela (%.2f%)."", whtp);
    }
    else if((gry >= wht) && (gry >= blk) && (gry >= red) && (gry >= blu)){
            printf(""Najpopularnija boja je siva (%.2f%)."", gryp);
    }
    else if((red >= wht) && (red >= gry) && (red >= blk) && (red >= blu)){
            printf(""Najpopularnija boja je crvena (%.2f%)."", redp);        
    }
    else if((blu >= wht) && (blu >= gry) && (blu >= red) && (blu >= blk)){
            printf(""Najpopularnija boja je plava (%.2f%)."", blup);        
    }
    
}","#include <stdio.h>

int main() {
    char inpt, unos;
    int blk=0, wht=0, gry=0, red=0, blu=0, i=0;
    float blkp, whtp, gryp, redp, blup;
    printf(""Unesite vozila: "");
    do{
        scanf(""%c"", &inpt);
        if( ((inpt!='C') && (inpt!='B') && (inpt!='S') && (inpt!='V') && (inpt!='P') && (inpt!='K')) && ((inpt!='c') && (inpt!='b') && (inpt!='s') && (inpt!='v') && (inpt!='p')) && (inpt!='k') ){
            printf(""Neispravan unos\n"");
        }
                 if(inpt== 'C' || inpt== 'c'){
                blk++;
            }
            else if(inpt== 'B' || inpt== 'b'){
                wht++;
            }
            else if(inpt== 'S' || inpt== 's'){;
                gry++;
            }
            else if(inpt== 'V' || inpt== 'v'){
                red++;
            }
            else if(inpt== 'P' || inpt== 'p'){
                blu++;
            }
            if((inpt!='k' && inpt!='K') && ((inpt=='C') || (inpt=='c') || (inpt=='B') || (inpt=='b') || (inpt=='S') || (inpt=='s') || (inpt=='V') || (inpt=='v') || (inpt=='P') || (inpt=='p'))){
                i++;
            }
            if(inpt=='k' || inpt=='K'){
                break;
            }
    }while(inpt != 'k');
    printf(""Ukupno evidentirano %d vozila.\n"", i);
    blkp = ((blk)/((float)i))*100;
    whtp = ((wht)/((float)i))*100;
    gryp = ((gry)/((float)i))*100;
    redp = ((red)/((float)i))*100;
    blup = ((blu)/((float)i))*100;
         if(((blk >= wht) && (blk >= gry) && (blk >= red) && (blk >= blu)) && i==0){
             printf(""Najpopularnija boja je crna (0.00%)."");
         }
    else if((blk >= wht) && (blk >= gry) && (blk >= red) && (blk >= blu)){
             printf(""Najpopularnija boja je crna (%.2f%)."", blkp);
    }
    else if((wht >= blk) && (wht >= gry) && (wht >= red) && (wht >= blu)){
            printf(""Najpopularnija boja je bijela (%.2f%)."", whtp);
    }
    else if((gry >= wht) && (gry >= blk) && (gry >= red) && (gry >= blu)){
            printf(""Najpopularnija boja je siva (%.2f%)."", gryp);
    }
    else if((red >= wht) && (red >= gry) && (red >= blk) && (red >= blu)){
            printf(""Najpopularnija boja je crvena (%.2f%)."", redp);        
    }
    else if((blu >= wht) && (blu >= gry) && (blu >= red) && (blu >= blk)){
            printf(""Najpopularnija boja je plava (%.2f%)."", blup);        
    }
    
}"
2614,97,97,0,17,A2016/Z1/Z4/student3872,A2016/Z1/Z4/student2371,"#include <stdio.h>

int main() {
	int i, n, j;
poc:	printf(""Unesite broj n: "");
	scanf(""%d"", &n);
	if(n<=0 || n>50) {printf(""Pogresan unos\n""); goto poc; }
if(n==1) { printf(""***""); }
else {	for(i=0;i<n;i++)
	{
		for(j=0;j<4*n-3;j++)
		{
			if(i==j || j==((n*4-3)/2)-i || j==((n*4-3)/2)+i || j==((n*4-4)-i))
			printf(""*"");
			else printf("" "");
		}
		printf(""\n"");
	} }
	return 0;
	
	
}
","#include <stdio.h>

int main() {
	int n, j, i;
	unos:
		printf(""Unesite broj n: "");
		scanf (""%d"", &n);
			if(n>50 || n<=0) {
				printf (""Pogresan unos\n""); 
				goto unos;
			}
	if (n==1) printf (""***"");
	else{
	for (i=0; i<n; i++){
		for (j=0; j<n*4-3; j++){
			if (j==i || (j==((n*4-3)/2)-i)|| (j==((n*4-3)/2)+i)||(j==(n*4-4)-i)) printf(""*"");
			else printf ("" "");
		}
		printf (""\n"");
	}
	}
	return 0;
}
"
2627,95,95,0,57,A2016/Z3/Z1/student8187,A2016/Z3/Z1/student5829,"#include <stdio.h>

int daj_prost() {
    int m=0, n;
    /*ispitivanje da li je broj prost*/   
    do {
        m=0;
        static int p=2;
        for (n=2; n<p; n++)
        {
            if (p%n==0) 
            {
                m++;
            }
            
        }
            if (m==0)
            {
                p++;
                return p-1;
            }
           p++; 
            
        }
    
        while (m!=0);
}

int main() {
    int a,b,c=2,broj,d;
    /* osiguravanje pravilnog unosa brojeva a i b*/
    do {
        printf (""Unesite brojeve A i B: "");
        scanf (""%d%d"", &a, &b);
        if (a>=b) 
        {
            printf (""A nije manje od B.\n"");
        }
        else if (a<1)
        {
            printf (""A nije prirodan broj.\n"");
        }
       
        else break;
    }
    while (c<3);
    
    
    d=0;
    broj=daj_prost();
    /*izracunavanje sume svih prostih brojeva vecih od a i manjih od b uz pomoc uslova i while petlje*/   
    while (broj<b)
    {
        if (a<broj && broj<b)
        d=d+broj;
        broj=daj_prost();
    }
    /*ispisivanje sume*/
    printf (""Suma prostih brojeva izmedju %d i %d je %d."", a,b,d);
	return 0;
}
","#include <stdio.h>
int daj_prost(){
	int k=0, i;
do{
	k=0;
static int n=2;
	for (i=2; i<n; i++)
	{
		if(n%i==0){
			k++;}
	}
	if (k==0)
	{
		n++;
		return n-1;}
	n++;}
while (k!=0);
}

int main() {
	int A,B,p=2,s,br;
	do{
	printf (""Unesite brojeve A i B: "");
	scanf (""%d%d"", &A, &B);
	if (A>=B) printf (""A nije manje od B.\n"");
	else if (A<1) printf (""A nije prirodan broj.\n"");
	else if (B<1) printf (""B nije prirodan broj.\n"");
	else break;}
	while (p<3);
	
	s=0;
	
br=daj_prost();

	while (br<B)
	{
		if (A<br&&br<B)
		s=s+br;
		br=daj_prost();
	}
	
	printf (""Suma prostih brojeva izmedju %d i %d je %d."", A, B, s);
	
	
	
	
	
	
	return 0;
}"
2646,81,81,0,40,A2016/Z1/Z3/student7735,A2016/Z1/Z3/student8796,"#include <stdio.h>

int main() {
	int c=0,p=0,b=0,s=0,v=0,uk=0;
	float procenat;
	char boja=' ';
	printf(""Unesite vozila: "");
	while(boja!='k' || boja!='K'){
		scanf(""%c"",&boja);
			if(boja=='c' || boja=='C'){
				c++;
				uk++;
			}
			if(boja=='b' || boja=='B'){
				b++;
				uk++;
			}
			if(boja=='s' || boja=='S'){
				s++;
				uk++;
			}
			if(boja=='v' || boja=='V'){
				v++;
				uk++;;
			}
			if(boja=='p' || boja=='P'){
				p++;
				uk++;
			}
			if(boja!='c' && boja!='C' && boja!='b' && boja!='B' && boja!='s' && boja!='S' && boja!='v' && boja!='V' && boja!='p' && boja!='P' && boja!='k' && boja!='K'){
				printf(""Neispravan unos\n"");
			}
			if(boja=='k' || boja=='K'){
				goto l1;
			}
	}
l1:
printf(""Ukupno evidentirano %d vozila.\n"",uk);
if(uk==0){
		printf(""Najpopularnija boja je crna (0.00%%)."");
		return 0;
}
if(c>=b  && c>=s  && c>=v  && c>=p){
	procenat=((float)c/uk)*100;
	printf(""Najpopularnija boja je crna (%.2f%%)."",procenat);
}
if(c<b  && b>=s  && b>=v  && b>=p){
	procenat=((float)b/uk)*100;
	printf(""Najpopularnija boja je bijela (%.2f%%)."",procenat);	
}
if(c<s  && b<s  && s>=v  && s>=p){
	procenat=((float)s/uk)*100;
	printf(""Najpopularnija boja je siva (%.2f%%)."",procenat);	
}
if(c<v  && b<v  && s<v  && v>=p){
	procenat=((float)v/uk)*100;
	printf(""Najpopularnija boja je crvena (%.2f%%)."",procenat);	
}
if(c<p  && b<p  && s<p  && v<p){
	procenat=((float)p/uk)*100;
	printf(""Najpopularnija boja je plava (%.2f%%)."",procenat);	
}
	return 0;
}","#include <stdio.h>

int main() {
	int c=0,p=0,b=0,s=0,v=0,uk=0;
	float pr;
	char boja=' ';
	printf(""Unesite vozila: "");
	while(boja!='k' || boja!='K'){
		scanf(""%c"",&boja);
			if(boja=='c' || boja=='C'){
				c=c+1;
				uk=uk+1;
			}
			if(boja=='b' || boja=='B'){
				b=b+1;
				uk=uk+1;
			}
			if(boja=='s' || boja=='S'){
				s=s+1;
				uk=uk+1;
			}
			if(boja=='v' || boja=='V'){
				v=v+1;
				uk=uk+1;
			}
			if(boja=='p' || boja=='P'){
				p=p+1;
				uk=uk+1;
			}
			if(boja!='c' && boja!='C' && boja!='b' && boja!='B' && boja!='s' && boja!='S' && boja!='v' && boja!='V' && boja!='p' && boja!='P' && boja!='k' && boja!='K'){
				printf(""Neispravan unos\n"");
			}
			if(boja=='k' || boja=='K'){
				goto l1;
			}
	}
l1:
printf(""Ukupno evidentirano %d vozila.\n"",uk);
if(uk==0){
		printf(""Najpopularnija boja je crna (0.00%%)."");
		return 0;
}
if(c>b  && c>s  && c>v  && c>p){
	pr=((float)c/uk)*100;
	printf(""Najpopularnija boja je crna (%.2f%%)."",pr);
}
if(c<b  && b>s  && b>v  && b>p){
	pr=((float)b/uk)*100;
	printf(""Najpopularnija boja je bijela (%.2f%%)."",pr);	
}
if(c<s  && b<s  && s>v  && s>p){
	pr=((float)s/uk)*100;
	printf(""Najpopularnija boja je siva (%.2f%%)."",pr);	
}
if(c<v  && b<v  && s<v  && v>p){
	pr=((float)v/uk)*100;
	printf(""Najpopularnija boja je crvena (%.2f%%)."",pr);	
}
if(c<p  && b<p  && s<p  && v<p){
	pr=((float)p/uk)*100;
	printf(""Najpopularnija boja je plava (%.2f%%)."",pr);	
}
	return 0;
}
"
2654,95,95,0,15,A2016/Z1/Z2/student9949,A2016/Z1/Z2/student2477,"#include <stdio.h>
#include <math.h>
#define e 0.001

int main () {
	
	float a1,b1,a2,b2,y1,x;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);

	if(fabs(a1-a2) < e && fabs(b1-b2) > e) {
		printf(""Paralelne su\n"");
	} else 
	if(fabs(a1-a2) < e && fabs(b1-b2) < e) {
		printf(""Poklapaju se\n"");
	} else {
	x=(b2-b1)/(a1-a2);
	y1=a1*x+b1;
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x,y1);
	}
	return 0;
}","#include <stdio.h>
#include <math.h>
#define e 0.00001

int main() {

	float a1, a2, b1, b2, x, y;

	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
	
	if(fabs(a1-a2)<e && fabs(b1-b2)>e) {
		printf(""Paralelne su "");
	} else if(fabs(a1-a2)<e && fabs(b1-b2)<e) {
		printf(""Poklapaju se "");
	} else {
	x=(b2-b1)/(a1-a2);
	y=a1*x +b1;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x, y);
	}




	return 0;
}
"
2657,99,99,0,82,A2016/Z3/Z3/student3301,A2016/Z3/Z3/student3567,"#include <stdio.h>

	
int main() {
	int matrica[200][200],j,M,N,i,k=0,m,n,temp;
	int brojac=0;
	
	/* Unos dimenzija matrice */ 
	
	do{
	printf (""Unesite brojeve M i N:"");
	scanf (""%d %d"",&M,&N);
	if (M<1||M>200||N<1||N>200) printf ("" Brojevi nisu u trazenom opsegu.\n"");
	}while(M<1||M>200||N<1||N>200);
	
	/* Unos elemenata matrice */ 
	
	printf ("" Unesite elemente matrice: "");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			scanf (""%d"",&matrica[i][j]);
		}
	}
	
	/* Poredenje i izbacivanje redova*/ 
	
	for (i=0;i<M;i++){
		for (j=i+1;j<M;j++)
		{
			brojac=0;
			for (k=0;k<N;k++){
				if(matrica[i][k]==matrica[j][k]){
					brojac++;
				}
				if(brojac==N){
					for (m=j+1;m<M;m++){ 
						for (n=0;n<N;n++){
							temp=matrica[m-1][n];
						    matrica[m-1][n]=matrica[m][n];
						    matrica[m][n]=temp;
						}
					}
					M--;
					j--;
				}
			}
		}
	}
	
	/* Poredenje i izbacivanje kolona*/ 
	
	for (i=0;i<N;i++){
		for (j=i+1;j<N;j++){
			brojac=0;
			for (k=0;k<M;k++){
				if(matrica[k][i]==matrica[k][j]){
					brojac++;
				}
				if(brojac==M){
					for (m=j+1;m<N;m++){ 
						for (n=0;n<M;n++){
							temp=matrica[n][m-1];
						    matrica[n][m-1]=matrica[n][m];
						    matrica[n][m]=temp;
						}
					}
					N--;
					j--;
				}
			}
		}
	}	
	
	/* Ispis matrice nakon izbacivanja  */ 
	
	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			printf (""%5d"",matrica[i][j]);
		}
		printf(""\n"");
	}
	

	return 0;
}
","#include <stdio.h>

int main() {
	int matrica[200][200],j,M,N,i,k=0,m,n,temp;
	int brojac=0;
	do{
	printf(""Unesite brojeve M i N:"");
	scanf(""%d %d"",&M,&N);
		if (M<1||M>200||N<1||N>200) printf ("" Brojevi nisu u trazenom opsegu.\n"");
	}while(M<1||M>200||N<1||N>200);
	
		printf ("" Unesite elemente matrice: "");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			scanf (""%d"",&matrica[i][j]);
		}
	}
		for (i=0;i<M;i++){
		for (j=i+1;j<M;j++)
		{
			brojac=0;
			for (k=0;k<N;k++){
				if(matrica[i][k]==matrica[j][k]){
					brojac++;
				}
				if(brojac==N){
					for (m=j+1;m<M;m++){ 
						for (n=0;n<N;n++){
							temp=matrica[m-1][n];
						    matrica[m-1][n]=matrica[m][n];
						    matrica[m][n]=temp;
						}
					}
					M--;
					j--;
				}
			}
		}
	}
		for (i=0;i<N;i++){
		for (j=i+1;j<N;j++){
			brojac=0;
			for (k=0;k<M;k++){
				if(matrica[k][i]==matrica[k][j]){
					brojac++;
				}
				if(brojac==M){
					for (m=j+1;m<N;m++){ 
						for (n=0;n<M;n++){
							temp=matrica[n][m-1];
						    matrica[n][m-1]=matrica[n][m];
						    matrica[n][m]=temp;
						}
					}
					N--;
					j--;
				}
			}
		}
	}	
		printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			printf (""%5d"",matrica[i] [j]);
		}
		printf(""\n"");
	}
	return 0;
}

"
2660,35,35,0,35,A2016/Z4/Z2/student2351,A2016/Z4/Z2/student5284,"#include <stdio.h>

void sortiranje(int *sortiraj, int *index)
{
	int i=0, j, temp1, temp2;
	i=0;
	while(i<95)
	{
		j=0;
		while(j<95)
		{
			if(sortiraj[j]<sortiraj[i])
			{
				temp1=sortiraj[i];
				sortiraj[i]=sortiraj[j];
				sortiraj[j]=temp1;
				
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			
			if(sortiraj[i]==sortiraj[j] && index[i]<index[j])
			{
				temp2=index[i];
				index[i]=index[j];
				index[j]=temp2;
			}
			j++;
		}
		i++;
	}
}

void stvori(char *kljuc, int *sortiraj, int *index)
{
	int i;
	i=0;
	do
	{
		if(sortiraj[i]!=0) 
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	
	i=0;
	do{
		if(sortiraj[i]==0)
		{
			*kljuc=index[i]+32;
			kljuc++;
		}
		i++;
	} while(i<95);
	*kljuc='\0';
}

char *kodiraj (char *tekst, char *kljuc)
{
	char *p=tekst;
	char *q;
	int niz[95], sort[95], in[95];
	int i, br;
	
	i=0;
	while(i<95) 
	{
		niz[i]=0;
		i++;
	}
	do{
		q=p;
		br=0;
		while(*q!='\0')
		{
		if(*p==*q) br++;
		q++;
		}
		if(niz[*p-32]==0) {niz[*p-32]=br;}
		p++;
	}
	while(*p!='\0');
	
	i=0;
	while(i<95)
	{
		sort[i]=niz[i];
		in[i]=i;
		i++;
	}
	sortiranje(sort, in);
	stvori(kljuc, sort, in);
	p=tekst;
	q=kljuc;
	
	do{
		q=kljuc;
		br=0;
		while(*q!='\0')
		{
			if(*p==*q)
			{
				*p=126-br;
				break;
			}
			br++;
			q++;
		}
		p++;
	} while(*p!='\0');
	return tekst;
}

char *dekodiraj(char *tekst, char *kljuc)
{
	char *p=tekst;
	do
	{
	*p=kljuc[126-*p];
	p++;
	} while(*p!='\0');
	return tekst;
}

int main() {
	char primjer[]=""LLMLNLNMONM"";
	char sifra[100]="""";
	printf(""%s"", kodiraj(primjer, sifra));
	return 0;
}
","#include <stdio.h>

void sort(int *sortiraj,int *index)
{
    int i,j,temp;
    
     for(i=0;i<95;i++)
     {
            for(j=0;j<95;j++)
            {
                if(sortiraj[j]<sortiraj[i])
                {   
                    temp=sortiraj[i];
                    sortiraj[i]=sortiraj[j];
                    sortiraj[j]=temp;
                    
                    temp=index[i];
                    index[i]=index[j];
                    index[j]=temp;
                }
                if(sortiraj[i]==sortiraj[j] && index[j]>index[i])
                {
                    temp=index[i];
                    index[i]=index[j];
                    index[j]=temp;
            
            }
            
        }
     }
}


void stvorikljuc(char *kljuc,int *sortiraj,int *index)
{   
    int i;
     for(i=0;i<95;i++)
          {   
             if(sortiraj[i]!=0)
             {
              *kljuc=index[i]+32;
              kljuc++;
             }
         }
       
          for(i=0;i<95;i++)
          {
              if(sortiraj[i]==0) {*kljuc=index[i]+32; kljuc++;}
          }
          *kljuc='\0';
}

char *kodiraj(char *tekst,char *kljuc)
{
    char *p=tekst,*q;
    int niz[95];
    int sortiraj[95];
    int index[95];
    
    int i,br;

 
    
        for(i=0;i<95;i++)
            niz[i]=0;  
            
            
        while(*p!='\0')
            {   
                q=p;
                br=0;
                while(*q!='\0')
                {
                    if(*p==*q) br++;
                    q++;
                }
                if(niz[*p-32]==0) niz[*p-32]=br;
                p++;

            }
            
            for(i=0;i<95;i++)
                {
                    sortiraj[i]=niz[i];
                    index[i]=i;
                }
            
       
           
           sort(sortiraj,index);
           stvorikljuc(kljuc,sortiraj,index);
         
          
          
            p=tekst;
            q=kljuc;
            
            while(*p!='\0')
            {    q=kljuc;br=0;
                while(*q!='\0')
                {
                    if(*p==*q) {*p=126-br;break;}
                    br++;
                    q++;
                }
                p++;
            }
          
     return tekst;
     
}


char *dekodiraj(char *tekst,char *kljuc)
{
    char *p=tekst;
        
        while(*p!='\0')
        {
            *p=kljuc[126-*p];
            p++;
        }
    return tekst;
}

int main() {

    char tekst[] = ""LLMLNLNMONM"";
char sifrarnik[100] = """";
printf(""%s"", kodiraj(tekst, sifrarnik));
return 0;
}
    
    "
2673,97,97,0,54,A2016/Z3/Z1/student1915,A2016/Z3/Z1/student5603,"#include <stdio.h>
#include<math.h>

 int daj_prost(){
	static int a=2;
     int i,j;
	
	for(i=a; i<100000; i++){
		int prost=1;
       for(j=2; j<=sqrt(i); j++)
	     	if(i % j==0){ prost=0; break;}
		
	if(prost==1){
		a=i;
		break;
	}
	}

	return a++;
	
}


int main() {
	int A,B;
	int pom1=1,pom2=1,sum=0;
	
	do{

     printf(""Unesite brojeve A i B: "");
	scanf(""%d %d"",&A,&B);
	
	if(A<=0) printf(""A nije prirodan broj.\n"");
	
	else if (A>=B) printf(""A nije manje od B.\n"");
		
	}while(A>=B || A<=0);
	
	while(pom1 < A ){
		
		pom1=daj_prost();
		
		if(pom1>A && pom1<B) sum=pom1; 
	     
	}
	while(pom2 < B){
		
		pom2=daj_prost();
		
	     if(pom2>=B) break;
	     
	     sum+=pom2;
	}
	

	
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B,sum);
	
	
	return 0;
}
","#include <stdio.h>
#include<math.h>

 int daj_prost(){
	static int a=2;
     int i,j;
	
	for(i=a; i<100000; i++){
		int prost=1;
       for(j=2; j<=sqrt(i); j++)
	     	if(i % j==0){ prost=0; break;}
		
	if(prost==1){
		a=i;
		break;
	}
	}

	return a++;
	
}


int main() {
	int A,B;
	int pom1=1,pom2=1,sum=0;
	
	do{

     printf(""Unesite brojeve A i B: "");
	scanf(""%d %d"",&A,&B);
	
	if(A<=0) printf(""A nije prirodan broj.\n"");
	
	else if (A>=B) printf(""A nije manje od B.\n"");
		
	}while(A>=B || A<=0);
	
	while(pom1 < A ){
		
		pom1=daj_prost();
		
		if(pom1>A && pom1<B) sum=pom1; 
	     
	}
	while(pom2 < B){
		
		pom2=daj_prost();
		
	     if(pom2>=B) break;
	     
	     sum+=pom2;
	}
	

	
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",A,B,sum);
	
	
	return 0;
}
"
2674,46,46,0,39,A2016/Z3/Z2/student3301,A2016/Z3/Z2/student5403,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define brel 10
#define brel2 20
/* Funkcija ubaci */ 
void ubaci(int *niz,int velicina){
	int i,cifra,broj,broj2=0;
	for (i=velicina-1;i>=0;i--){    /* Pomjeranje clanova niza */ 
		*(niz+2*i)=*(niz+i);
	}
	for (i=0;i<velicina*2;i++){
		if (i%2==1){
			broj=*(niz+i-1);
			while (broj!=0){        /* Dodavanje clanova sabiranjem cifara prethodnog clana */ 
				cifra=broj%10;
				broj2+=cifra;
				broj/=10;
		    }
		    broj2=abs(broj2);
			*(niz+i)=broj2;
			broj2=0;
		}
	}
}

/* Funkcija izbaci */ 
/* Formiranje pretlji za prolazak po nizu i uporedivanje njegovih clanova sa Fibonaccijevim nizom, izbacivanje jednakih */
int izbaci(int *niz,int velicina){
	int i,j,m,prvi=0,drugi=1,slijedeci;
	for (i=0;i<velicina;i++){
		prvi=0;
		drugi=1;
		for (j=1;j<10000;j++){   
			if (j==1) slijedeci=j;                
			else {
				slijedeci=prvi+drugi;
				prvi=drugi;
				drugi=slijedeci;
			}
			if (*(niz+i)==slijedeci){
				for (m=i;m<velicina-1;m++){
						*(niz+m)=*(niz+m+1);
				}
				velicina--;
				i--;
				break;
			}
		}
	}
	return velicina;
}

int main() {
	int niz[20],i,n;
	
	/* Unos elemenata */ 
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0;i<10;i++){
		scanf(""%d"",&niz[i]);
	}
	
	/* Pozivanje funkcije ubaci */ 
	
	ubaci(niz,brel);
	
	/* Pozivanje funkcije izbaci */ 
		
	n=izbaci(niz,brel2);
	
	/* Ispis niza */
	printf (""Modificirani niz glasi: "");
	for (i=0;i<n;i++){
		if (i<(n-1)){
			printf (""%d, "",niz[i]);
	    }
	    else {
	    	printf (""%d. "",niz[i]);
	    }
	}
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define vel1 10
#define vel2 20

void ubaci(int *niz, int vel )
{

  int m=2*vel;
  int i,nizpom[20];

  /*Kopiranje vrijednosti clanova niza iz starog u novi*/
  for(i=vel-1; i>=0; i--) {
    *(nizpom+2*i)=*(niz+i);
  }

  /*Racunanje sume cifara broja i smjestanje sume u clanove novog niza*/
  for(i=0; i<m; i=i+2) {
    int suma=0;
    int tmp,zadnja;
    tmp=*(nizpom+i);

    while(*(nizpom+i)!=0) {
      if(*(nizpom+i)<0)
        *(nizpom+i)=-*(nizpom+i);
      zadnja=*(nizpom+i)%10;
      suma+=zadnja;
      *(nizpom+i)/=10;
    }
    *(nizpom+i)=tmp;
    *(nizpom+i+1)=suma;
  }

  /*Kopiranje clanova niza iz pomocnog u novi*/
  for(i=0; i<m; i++) {
    *(niz+i)=*(nizpom+i);
  }
}

int izbaci(int *niz, int m)
{
  int i,j,x,z,y;
  /*Petlja koja provjerava da li clan novog niza zadovoljava uslov da pripada Fibonacijevom nizu*/
  for(i=0; i<m; i++) {
    x=0,y=1,z=1;
    while(z<*(niz+i)) {
      z=x+y;
      x=y;
      y=z;
    }
    /*Petlja koja izbacuje clanove Fibonacijevog niza*/
    if(*(niz+i)==z) {
      for(j=i; j<m-1; j++) {
        *(niz+j)=*(niz+j+1);
      }
      m--;
      i--;
    } else
      continue;
  }
  return m;
}


int main()
{

  int  niz[20],n,i;
  printf(""Unesite niz od 10 brojeva: "");
  for(i=0; i<10; i++)
    scanf(""%d"", &niz[i]);
  ubaci(niz,vel1);
  n=izbaci(niz,vel2);
  printf(""Modificirani niz glasi: "");
  for(i=0; i<n; i++) {
    if(i<n-1)
      printf(""%d, "", niz[i]);
    else if(i==n-1)
      printf(""%d."", niz[i]);
  }
  return 0;
}"
2679,99,99,0,123,A2016/Z4/Z1/student7823,A2016/Z4/Z1/student9175,"#include <stdio.h>

//funkcija koja izbacuje rijec iz stringa 

void izbacivanje(char* str1ng, int vel) {
	while(*(str1ng+vel)) {
		*str1ng=*(str1ng+vel);
		str1ng++;
	}
	*str1ng=*(str1ng+vel);
}

char* izbaci_najcescu(char* string) {
	
	char *max = string, *p = string, *pocetak, *kraj, *temp, *sljedeciPocetak, *sljedeciKraj, *temp1, *p2, *p3;
	int vel1, BrojRijeci=0, vel2, jednaka, vel3, maxBrojRijeci=0, maxVelicina=0, znak;
	char znak1,znak2;
	
	
	if (*p == '\0') return string;
	while(*p != '\0') {
		while((*p < 'A' || (*p > 'Z' && *p < 'a') || *p > 'z') && *(p+1) != '\0') p++;
			if(*p != '\0') {
				//Odredivanje prvog i posljednjeg slova trenutne rijeci
				pocetak = p;
				kraj = p;
				vel1 = 1;
				while(((*(kraj+1) >= 'A' && *(kraj+1) <= 'Z') || (*(kraj+1) >= 'a' && *(kraj+1) <= 'z')) && *(kraj+1) != '\0') {
					vel1++;
					kraj++;
				}
				BrojRijeci=1;
				temp=kraj+1;
				
				while (*temp != '\0') {
					//Odredivanje prvog i posljednjeg slova sljedece rijeci
					sljedeciPocetak=temp;
					
					while ((*sljedeciPocetak < 'A' || (*sljedeciPocetak > 'Z' && *sljedeciPocetak < 'a') || *sljedeciPocetak > 'z') && *(sljedeciPocetak+1) != '\0') sljedeciPocetak++;
					sljedeciKraj = sljedeciPocetak;
					vel2=1;
					
					while(((*(sljedeciKraj+1) >= 'A' && *(sljedeciKraj+1) <= 'Z') || (*(sljedeciKraj+1) >= 'a' && *(sljedeciKraj+1) <= 'z')) && *(sljedeciKraj+1) != '\0') {
						vel2++;
						sljedeciKraj++;					
					}					
					jednaka=1; vel3=0;
					
					temp1=pocetak;
					
					if (vel1 != vel2 ) jednaka=0;
					else 
					while (vel3 < vel2) {
						
						if(*temp1 >= 'A' && *temp1 <= 'Z') znak1=(*temp1) + ('a' - 'A');
						else znak1=*temp1;
						
						if(*sljedeciPocetak >= 'A' && *sljedeciPocetak <= 'Z') znak2=(*sljedeciPocetak) + ('a' - 'A');
						else znak2=*sljedeciPocetak;
						
						if(znak1 != znak2) jednaka=0;
						
						temp1++; sljedeciPocetak++; vel3++;
						
					}
					
					if(jednaka) BrojRijeci++;
					temp=sljedeciKraj+1;
					
				}
				
				if(BrojRijeci>maxBrojRijeci ) {
				maxBrojRijeci=BrojRijeci;
				max=kraj;
				maxVelicina=vel1;
				}
			}
			p=kraj+1;
	}
	//izbacivanje najcesce rijeci
	p=temp-1;
	while (p>=string) {
		znak=0;
		if((*(p+1) < 'A' || (*(p+1)>'Z' && *(p+1)<'a') || *(p+1)>'z') || *(p+1)=='\0') znak=1;
		
		if(*p>='A' && *p<='Z') znak1=(*p)+('a'-'A'); 
		else znak1=*p;
		
		if(*max >= 'A' && *max <='Z') znak2=(*max)+('a'-'A'); else znak2=*max;
		
		
		
		if(znak1==znak2 && znak){
			p3=p;
			p2=max;
			vel2=0;
			jednaka=1;
			
			while(p3>=string && (( *p3>='A' && *p3  <= 'Z') || (*p3>= 'a' && *p3 <= 'z'))) {
				if(p2>=string) {
					if(*p2>='A' && *p2<= 'Z') znak1=(*p2)+('a'-'A'); 
					else znak1=*p2;
					if(*p2>='A' && *p2<= 'Z') znak2=(*p2)+('a'-'A'); 
					else znak2=*p2;
					if(znak1!=znak2) jednaka=0;
					
				}
				vel2++;
				p3--;
				p2--;
			}
			p3++;
			if(maxVelicina!=vel2) jednaka=0;
			if(jednaka==1) {
				izbacivanje(p3,vel2);
			}
		}
		p--;
	}
	return string;
}

int main() {
	char str1ng[400]="" Koristio sam auto-stop da dodjem do znaka stop ali prije stopa sam otvorio dekstop kompjutera stop"";
	printf(""%s"", izbaci_najcescu(str1ng));
	return 0;
	
}","#include <stdio.h>

//funkcija koja izbacuje rijec iz stringa 

void izbacivanje(char* str1ng, int vel) {
	while(*(str1ng+vel)) {
		*str1ng=*(str1ng+vel);
		str1ng++;
	}
	*str1ng=*(str1ng+vel);
}

char* izbaci_najcescu(char* str) {
	
	char *max = str, *p = str, *pocetak, *kraj, *temp, *sljpocetak, *sljkraj, *tempoc, *p2, *p3;
	int vel1, broj_rijeci=0, vel2, jednaka, vel3, max_broj_rijeci=0, maxvel=0, znak;
	char c1,c2;
	
	
	if (*p == '\0') return str;
	while(*p != '\0') {
		while((*p < 'A' || (*p > 'Z' && *p < 'a') || *p > 'z') && *(p+1) != '\0') p++;
			if(*p != '\0') {
				//Odredivanje prvog i posljednjeg slova trenutne rijeci
				pocetak = p;
				kraj = p;
				vel1 = 1;
				while(((*(kraj+1) >= 'A' && *(kraj+1) <= 'Z') || (*(kraj+1) >= 'a' && *(kraj+1) <= 'z')) && *(kraj+1) != '\0') {
					vel1++;
					kraj++;
				}
				broj_rijeci=1;
				temp=kraj+1;
				
				while (*temp != '\0') {
					//Odredivanje prvog i posljednjeg slova sljedece rijeci
					sljpocetak=temp;
					
					while ((*sljpocetak < 'A' || (*sljpocetak > 'Z' && *sljpocetak < 'a') || *sljpocetak > 'z') && *(sljpocetak+1) != '\0') sljpocetak++;
					sljkraj = sljpocetak;
					vel2=1;
					
					while(((*(sljkraj+1) >= 'A' && *(sljkraj+1) <= 'Z') || (*(sljkraj+1) >= 'a' && *(sljkraj+1) <= 'z')) && *(sljkraj+1) != '\0') {
						vel2++;
						sljkraj++;
					
					}
					
					jednaka=1; vel3=0;
					
					tempoc=pocetak;
					
					if (vel1 != vel2 ) jednaka=0;
					else 
					while (vel3 < vel2) {
						
						if(*tempoc >= 'A' && *tempoc <= 'Z') c1=(*tempoc) + ('a' - 'A');
						else c1=*tempoc;
						
						if(*sljpocetak >= 'A' && *sljpocetak <= 'Z') c2=(*sljpocetak) + ('a' - 'A');
						else c2=*sljpocetak;
						
						if(c1 != c2) jednaka=0;
						
						tempoc++; sljpocetak++; vel3++;
						
					}
					
					if(jednaka) broj_rijeci++;
					temp=sljkraj+1;
					
				}
				
				if(broj_rijeci>max_broj_rijeci ) {
				max_broj_rijeci=broj_rijeci;
				max=kraj;
				maxvel=vel1;
				}
			}
			p=kraj+1;
	}
	//izbacivanje najcesce rijeci
	p=temp-1;
	while (p>=str) {
		znak=0;
		if((*(p+1) < 'A' || (*(p+1)>'Z' && *(p+1)<'a') || *(p+1)>'z') || *(p+1)=='\0') znak=1;
		
		if(*p>='A' && *p<='Z') c1=(*p)+('a'-'A'); 
		else c1=*p;
		
		if(*max >= 'A' && *max <='Z') c2=(*max)+('a'-'A'); else c2=*max;
		
		
		
		if(c1==c2 && znak){
			p3=p;
			p2=max;
			vel2=0;
			jednaka=1;
			
			while(p3>=str && (( *p3>='A' && *p3  <= 'Z') || (*p3>= 'a' && *p3 <= 'z'))) {
				if(p2>=str) {
					if(*p2>='A' && *p2<= 'Z') c1=(*p2)+('a'-'A'); 
					else c1=*p2;
					if(*p2>='A' && *p2<= 'Z') c2=(*p2)+('a'-'A'); 
					else c2=*p2;
					if(c1!=c2) jednaka=0;
					
				}
				vel2++;
				p3--;
				p2--;
			}
			p3++;
			if(maxvel!=vel2) jednaka=0;
			if(jednaka==1) {
				izbacivanje(p3,vel2);
			}
		}
		p--;
	}
	return str;
}

int main() {
	char str1ng[400]="" zghklkvedza zvezda zdvdwa"";
	printf(""%s"", izbaci_najcescu(str1ng));
	return 0;
	
}
"
2686,16,16,0,9,A2016/Z4/Z2/student3116,A2016/Z4/Z2/student5744,"#include <stdio.h>

void sortiraj(int *niz,int *sort,int *index)
{
	int i,j;
	int temp;
	
		for(i=0;i<127;i++)
		{
			for(j=i;j<127;j++)
			{
				if(niz[i]<niz[j])
				{
					temp=niz[i];
					niz[i]=niz[j];
					niz[j]=temp;
					
					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
				else if(niz[i]==niz[j] && index[i]>index[j])
				{
					temp=index[i];
					index[i]=index[j];
					index[j]=temp;
				}
			}
		}
	
	
}

void Pretvori(char *s,char *sifrarnik)
{
	char *p=s,*kljuc=sifrarnik;
	int br;
		while(*p!='\0')
		{	br=0;
			kljuc=sifrarnik;
			
			while(*kljuc!='\0')
			{
				if(*p==*kljuc++){*p=126-br;break;}
				br++;
			}
			p++;
		}
	
}


char *kodiraj(char *s,char *sifrarnik)
{
	
	char *p=s,*pok=sifrarnik;
	int i;
	int niz[127];
	int sort[127];
	int index[127];
	
		for(i=0;i<127;i++)
		{
			if(i<32){ niz[i]=-1; index[i]=-1;}
			else{niz[i]=0;index[i]=i;}
		}
		while(*p!='\0')
		{
			niz[*p+0]++;
			p++;
		}
		
		for(i=0;i<127;i++)
			sort[i]=niz[i];
			
		sortiraj(niz,sort,index);
		
		for(i=0;i<127;i++)
		{   
			if(index[i]!=-1)
			{
				*pok=index[i];
				pok++;
			}
		}
		Pretvori(s,sifrarnik);
		
	return s;
}

char* dekodiraj(char *s,char *sifrarnik)
{
	
	char *p=s;
	
		while(*p!='\0')
		{
			*p=sifrarnik[126-*p];
			p++;
		}
	return s;
	
}

int main() {


	
	char tekst[] = ""U ovom testu cemo testirati samo kodiranje"";
    char sifrarnik[100] = """";
    kodiraj(tekst, sifrarnik);
    printf(""%s\n"", tekst);
    printf(""%s\n"", sifrarnik);
	
	return 0;
}
","#include <stdio.h>

char* kodiraj(char* s,char* kod)
{
	int broj[96]={0},i,j,pomi;
	char* pom=s;
	char pomc=' ';
	//generise sifrarnik kao niz ASCII znakova
	for(i=0;i<95;i++,pomc++)
	{
		kod[i]=pomc;
	}
	//broji koliko se puta koji clan pojavljuje
	while(*s!='\0')
	{
		for(i=0;i<95;i++)
		{
			if(*s==kod[i])
			{
				broj[i]++;
				break;
			}
		}
		s++;
	}
	//sortira clanove po ucestalosti
	for(i=0;i<94;i++)
	{
		for(j=i;j<95;j++)
		{
			if(broj[i]<broj[j]||(broj[i]==broj[j] && kod[i]>kod[j]))
			{
				pomc=kod[i];
				kod[i]=kod[j];
				kod[j]=pomc;
				pomi=broj[i];
				broj[i]=broj[j];
				broj[j]=pomi;
			}
		}
	}
	s=pom;
	//mijenja clanove za clanove iz tabele po ucestalosti
	while(*s!='\0')
	{
		for(i=0;i<95;i++)
		{
			if(*s==kod[i])
			{
				*s='~'-i;
				break;
			}
		}
		s++;
	}
	return pom;
}

char* dekodiraj(char *s,char *kod)
{
	int i;
	char* pom=s;
	while(*s!='\0')
	{
		//mijenja clanove za one od kojih ih je napravio
		for(i=0;i<95;i++)
		{
			if(*s==126-i)
			{
				*s=kod[i];
				break;
			}
		}
		s++;
	}
	return pom;
}

int main() {
	char s[]=""ssUU"",kod[96];
	char *p=s;
	int i;
	p=kodiraj(s,kod);
	for(i=0;i<4;p++,i++)
	{
		printf(""%c"",*p);
	}
	return 0;
}
"
2688,96,96,0,14,A2016/Z1/Z2/student5741,A2016/Z1/Z2/student6364,"#include <stdio.h>

int main() {
	float a1,b1,a2,b2,x,y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	if(a1==a2 && b1!=b2){
		printf(""Paralelne su"");
	}
	else if(a1==a2 && b1==b2){
		printf(""Poklapaju se"");
	}
	else {
		x=(b2-b1)/(a1-a2);
		y=a1*x+b1;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	}
	return 0;
}
","#include <stdio.h>

int main() {
	float a1, b1, a2, b2, y, x;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
	if(a1==a2 && b1!=b2) {
		printf(""Paralelne su"");
	} 
	else if(a1==a2 && b1==b2) { 
		printf (""Poklapaju se"");
	}
	else { x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x, y);
	}
return 0;
}"
2690,82,82,0,30,A2016/Z2/Z3/student5496,A2016/Z2/Z3/student8576,"#include <stdio.h>
int main() {
	int i,j,n,br;
	char mat[20][20];
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &n);
	while (n<1 || n>10) {printf(""Pogresan unos\n"");
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&n);
	}
	for(i=0; i<20; i++){
	 for(j=0; j<20; j++){
	  mat[i][j]=' ';
	 	}
	}
	for(br=0;br<n;br++){
		printf(""Unesite %d. tacku: "", br+1);
		scanf(""%d"", &i);
		scanf(""%d"", &j);
		while((i<0 || i>19)||(j<0 || j>19)) 
		{
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "", br+1);
			scanf(""%d"", &i);
			scanf(""%d"", &j);
		}
	mat[i][j]='*'; 
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			printf(""%c"", mat[j][i]);
		}
		printf(""\n"");
}
return 0;
}","#include <stdio.h>

int main() {
    
    int n; int i, j,x,y;
    char zvjezdice[20][20];
    
    printf(""Unesite broj tacaka: "");
    scanf(""%d"", &n);
    
    while(n<=0 || n>10) {
        printf(""Pogresan unos"");
        printf(""\nUnesite broj tacaka: "");
        scanf(""%d"", &n);
    }
    for(i=0; i<20; i++){
        for(j=0; j<20; j++){
            zvjezdice[i][j]=' ';
        }
    }
    
    for(i=0; i<n; i++){
        printf(""Unesite %d. tacku: "", i+1);
        scanf(""%d %d"", &x, &y);
        while((x<0 || x>19) || (y<0 || y>19)){
            printf(""Pogresan unos\n"");
            printf(""Unesite %d. tacku: "", i+1);
            scanf(""%d %d"", &x, &y);
        }
        zvjezdice[y][x] = '*';
    }
    for(i=0; i<20; i++){
        for(j=0; j<20; j++){
            if(zvjezdice[i][j]!='*') zvjezdice[i][j]=' ';
            printf(""%c"", zvjezdice[i][j]);
        }
        printf(""\n"");
    }
   
    
    
	return 0;
}
"
2714,13,13,0,40,A2016/Z5/Z3/student6956,A2016/Z5/Z3/student9897,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200
struct Vrijeme{
	int sati, minute, sekunde;
};

struct Cas{
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};


char unesi(char niz[], int velicina){
	char znak=getchar();
	int vr=znak;
	int i=0;
	while (znak=='\n') 
	znak=getchar();
	while (i<velicina-1 && znak!='\n' && vr>0){
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	return znak;
}
void ocisti(char znak){
	int ima=0;
	if(znak=='\0') return;
	while(znak!='\n')
	znak=getchar();
}
int ucitaj_datoteku(struct Cas raspored[]){
	FILE* ulaz=fopen(""raspored.dat"",""rb+"");
	FILE* ulaz1=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL || ulaz1==NULL){
		return 0;
	}
	int ucitano=fread(raspored,sizeof(struct Cas), KAPACITET, ulaz);
	int ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);
	fclose(ulaz);
	fclose(ulaz1);
	if(ucitano==ucitano1) 
	return ucitano;
}

int MAX(struct Cas raspored[], int broj_casova){
	int nasao=0;
	
	int i,j,max=0,indexmaxa=0;
	
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max){
			nasao=1;
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	if(raspored[indexmaxa].kraj.minute==0 && nasao==1) max=max-1;
	if(nasao == 1)return max;
}

int MIN(struct Cas raspored[],int broj_casova){
	int i, j, min=25;
	int nasao=0;
	
	for(i=0; i<broj_casova; i++){
		if(raspored[i].pocetak.sati<min) 
		nasao=1;
		min=raspored[i].pocetak.sati;
	}
	if(nasao==1)
	return min;
}

void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k;
	
	printf(""\n       "");
	printf(""PON       "");
	printf(""UTO       "");
	printf(""SRI       "");
	printf(""CET       "");
	printf(""PET       "");
	printf(""SUB\n"");
	
	for(i=MIN(raspored,broj_casova);i<=MAX(raspored,broj_casova);i++){
		if(i<10) printf(""9:00   "");
		else printf(""%d:00  "",i);
		
		for(j=1;j<7;j++){
			for(k=0;k<broj_casova;k++)
			if (raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i){
				printf(""%-10s"", raspored[k].predmet);
				break;
			}
			if(k==broj_casova)
			printf(""          "");
		}
		printf(""\n"");
	}
	
}

void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
	int i;
	printf(""Uneseni su casovi: "");
	int k=1;
	int brojac=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			printf(""\n%d) %s ("",k++,raspored[i].predmet);
			if(raspored[i].pocetak.sati<10) printf(""0"");
			printf(""%d:"",raspored[i].pocetak.sati);
			if(raspored[i].pocetak.minute<10) printf(""0"");
			printf(""%d-"",raspored[i].pocetak.minute);
			if(raspored[i].kraj.sati<10) printf(""0"");
			printf(""%d:"",raspored[i].kraj.sati);
			if(raspored[i].kraj.minute<10) printf(""0"");
			printf(""%d"",raspored[i].kraj.minute);
			printf("")"");
		}
		
		brojac++;
	}
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	int zapisano; int nova;
	FILE* ulaz=fopen(""raspored.dat"",""wb+"");
	FILE* ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL || ulaz1==NULL){
		return 0;
	}
	
	nova=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz);
	zapisano=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz1);
	
	fclose(ulaz);
	fclose(ulaz1);
	
	if(zapisano>=1 && nova==zapisano) return 1;
	else
	return 0;
}

void obrisi_cas(struct Cas raspored[],int broj_casova,int dan, int redni_broj){
	
	int i,j=0,obrisan=0;
	
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan) j++;
		if(redni_broj==j){
			obrisan=1;
			for(;i<broj_casova-1;i++)
			raspored[i]=raspored[i+1];
			break;
		}
	}
}

int PorediVrj(struct Vrijeme t1, struct Vrijeme t2){
	int d1=t1.sati*3600 + t1.minute*60 + t1.sekunde;
	int d2=t2.sati*3600 + t2.minute*60 + t2.sekunde;
	
	if(d1>d2) return 1;
	if(d1<d2) return -1;
	if(d1==d2) return 0;
	
	return -2;
}

int preklapanje(struct Cas raspored[],int broj_casova, struct Cas cas){
	
	int flag=0;
	int i;
	for(i=0;i<broj_casova;i++){
		int prvi=PorediVrj(raspored[i].kraj,cas.pocetak);
		int drugi=PorediVrj(cas.kraj,raspored[i].pocetak);
		
		if(prvi==1 && drugi==1 && (cas.dan_u_sedmici==raspored[i].dan_u_sedmici)){
			flag=1;
			break;
		}
	}
	
	return flag;
}

int dodaj_cas(struct Cas raspored[],int broj_casova, const char* predmet, int trajanje){
	
	if(broj_casova==200) return 0;
	int i,j,preklop;
	int dokle=19-trajanje;
	
	for(i=0;i<6;i++)
	for(j=9;j<=dokle;j++){
		struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
		struct Cas cas1={""pom"",2,{0,0,0},{0,0,0}};
		char*q=cas.predmet,*p=(char*)predmet;
		
		while(*q++=*p++);
		char*a=cas1.predmet;
		char*b=cas1.predmet;
		if(a==b)
		preklop=preklapanje(raspored,broj_casova,cas);
		if(preklop==0){
			raspored[broj_casova]=cas;
			return 1;
		}
	}
	return 0;
}

void promijeni_cas(struct Cas raspored[], int broj_casova,int dan,int redni_broj,struct Cas promjena){
	
	int i, redni=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
		raspored[i]=promjena;
	}
}

int main() {
	int opcija, broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do{
		printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
		scanf(""%d"",&opcija);
		switch(opcija){
			case 0: 
			{
				zapisi_datoteku(raspored,broj_casova);
				break;
			}
			case 1:
			{
				ispis_rasporeda(raspored,broj_casova);
				break;
			}
			case 2:
			{
				int br_casova, dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				ocisti(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				int vr=dodan;
				if(vr==0)
				printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
				if(vr==1)
				broj_casova++;
				
				break;
			}
			
			case 3:
			{
				struct Cas promjena;
				int dan, redni;
				char*q,*p;
				char znak, predmet[10];
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"", &dan);
				int BROJ=broj_casova;
				ispisi_dan(raspored,BROJ,dan);
				promjena.dan_u_sedmici=dan;
				int dani=dan+7;
				printf(""\nIzaberite koji cas zelite promijeniti:  Naziv predmeta: "");
				scanf(""%d"",&redni);
				ocisti(unesi(predmet,10));
				
				q=promjena.predmet;
				p=predmet;
				strcpy(q,p);
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c%d"",&promjena.pocetak.sati,&znak,&promjena.pocetak.minute);
				scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				
				
				if(dani>0) promijeni_cas(raspored, BROJ, dan, redni, promjena);
				break;
			}
			
			case 4:
			{
				int dan, redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"", &dan);
				
				ispisi_dan(raspored,broj_casova,dan);
				
				printf(""\nIzaberite koji cas zelite obrisati: "");
				scanf(""%d"", &redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
				printf("" Cas obrisan\n"");
				broj_casova--;
			}
			
			
			
		}
		
	}
	
	while(opcija!=0);
	
	return 0;
}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati, minute, sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

void unesi(char niz[]) {
	char znak=getchar();
	if(znak=='\n') znak=getchar();
	int i=0;
	while(i<9 && znak!='\n') {
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	while(znak!='\n')
	znak=getchar();
}


int ucitaj_datoteku(struct Cas raspored[]) {
	FILE *ulaz=fopen(""raspored.dat"", ""rb+"");
	int greska=0;
	FILE *ulaz1=fopen(""raspored.dat"", ""rb+"");
	if(ulaz==NULL || ulaz1==NULL) {
		greska=1;
		return 0;
	}
  
   int ucitano=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz);
   int ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);
   fclose(ulaz);
   fclose(ulaz1);

return ucitano1                      ;
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova) {
	FILE* dat=fopen(""raspored.dat"", ""wb"");
	int vel=sizeof(struct Cas);
    int ucitano=fwrite(raspored,vel,broj_casova,dat);
	fclose(dat);
	if(ucitano>0) return 1;
	return ucitano;
	}

void ispis_rasporeda(struct Cas raspored[], int broj_casova) {
	int i, j, k, x, s, min=100, max=0;
	int indexmaxa=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].pocetak.sati<min) min=raspored[i].pocetak.sati;
		if(raspored[i].kraj.sati>max) {
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	if(raspored[indexmaxa].kraj.minute==0) max=max-1;
	printf(""\n       PON       UTO       SRI"");
	printf(""       CET       PET       SUB\n"");
	for(i=min;i<=max;i++) {
		if(i<10) printf(""%d:00   "",i);
		else printf(""%d:00  "", i);
		
		for(j=1;j<7;j++) {
			for(k=0;k<broj_casova;k++) {
				s=raspored[k].pocetak.sati; 
				if(s<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i) {
					printf(""%-10s"", raspored[k].predmet);
					break;
					x=i;
				}
			}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");
		}
		printf(""\n"");
	}
	//printf(""\n"");
}

int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas) {
	int i;
	for(i=0;i<broj_casova;i++) {
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&
		(cas.pocetak.minute+cas.pocetak.sati*60==raspored[i].pocetak.minute+raspored[i].pocetak.sati*60
		|| raspored[i].kraj.minute+raspored[i].kraj.sati*60==cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
		if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && 
		(raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.pocetak.minute+cas.pocetak.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.pocetak.minute+cas.pocetak.sati*60 || 
		cas.pocetak.minute+cas.pocetak.sati*60<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 &&
		cas.kraj.minute+cas.kraj.sati*60>raspored[i].kraj.minute+raspored[i].kraj.sati*60 ||
		raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 &&
		raspored[i].kraj.minute+raspored[i].kraj.sati*60>cas.kraj.minute+cas.kraj.sati*60)) return 1;
		
	}
	return 0;
}

void ispisi_dan(struct Cas raspored[], int broj_casova, int dan) {
	int brojac=1;
	int i;
	printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) {
			printf(""\n%d) %s (%02d:%02d-%02d:%02d)"", brojac,
			raspored[i].predmet, raspored[i].pocetak.sati,
			raspored[i].pocetak.minute,raspored[i].kraj.sati,
			raspored[i].kraj.minute);
			brojac++;
		}
	}
}

void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj) {
	int i, j;
	int k=0;
	int n=1;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) { k++; n++; }
		if(k==redni_broj) {
			for(j=i;j<broj_casova-1;j++) {
				raspored[j]=raspored[j+1];
			}
			if(n>0) break;
			return;
		}
	}
}

int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje) {
	if(broj_casova==200 || trajanje>10) return 0;
	int i, k, pocetak, dan, poc, moze=0;
	struct Cas cas;
	
	for(i=1;i<7;i++) 
	  for(k=9;k<=19-trajanje;k++) {
	  	dan=i;
	  	poc=k;
	  	strcpy(cas.predmet,predmet);
	  	cas.dan_u_sedmici=dan;
	  	cas.pocetak.sati=poc;
	  	cas.kraj.sati=k+trajanje;
	  	cas.pocetak.minute=cas.kraj.minute=0;
	  	if(preklapanje(raspored,broj_casova,cas)==0) {
	  	raspored[broj_casova]=cas;
	  	return 1;
	  }
}
  return 0;
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan,int redni_broj, struct Cas promjena) {
	int i;
	int k=0;
	int index=0;
	for(i=0;i<broj_casova;i++) {
		if(raspored[i].dan_u_sedmici==dan) k++;
		if(k==redni_broj) {
			index=i;
			break;
		}
}
  raspored[index]=promjena;
}

int poziv(struct Cas raspored[], int ucit, char* ime, int br) {
	int vr=dodaj_cas(raspored,ucit,ime,br);
	return vr;
}

struct Cas zamj(struct Cas casko, int dan, int sat, int min, int sat1, int min1) {
	casko.dan_u_sedmici=dan;
	casko.pocetak.sati=sat;
	casko.pocetak.minute=min;
	casko.kraj.sati=sat1;
	casko.kraj.minute=min1;
	return casko;
	
}
int main() {
	struct Cas raspored[KAPACITET];
	int ucit=ucitaj_datoteku(raspored);
	int broj, br, rez, dan, cs, zap, m;
	char ime[100];
	for (m=0;m<KAPACITET;m++)
	{
		raspored[m].pocetak.sati=0;
		raspored[m].kraj.sati=0;
		raspored[m].dan_u_sedmici=1;
		raspored[m].pocetak.minute=0;
		raspored[m].kraj.minute=0;
		raspored[m].pocetak.sekunde=0;
		raspored[m].kraj.sekunde=0;
	}
	poc:
	printf(""1) Ispis rasporeda\n"");
	printf(""2) Dodavanje casa\n"");
	printf(""3) Promjena casa\n"");
	printf(""4) Brisanje casa\n"");
	printf(""0) Kraj rada\n"");
	printf(""Izaberite opciju: "");
	scanf(""%d"", &broj);
	switch(broj) {
		case 1:
		ispis_rasporeda(raspored,ucit);
		if(broj==0) return 0;
		break;
		
		case 2:
		printf(""Unesite naziv predmeta: "");
		unesi(ime);
		printf(""Unesite broj casova: "");
		scanf(""%d"", &br);
		if(broj==0) return 0;
		rez=poziv(raspored,ucit,ime,br);
		if(rez==0) printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"", br);
		if(rez==1) ucit++;
		break;
	
       case 4:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     ispisi_dan(raspored,ucit,dan);
     printf(""\nIzaberite koji cas zelite obrisati: "");
     scanf(""%d"", &cs);
     obrisi_cas(raspored,ucit,dan,cs);
     if(broj==0) return 0;
     printf(""Cas obrisan\n"");
     ucit--;
     break;
     
     case 3:
     printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
     scanf(""%d"", &dan);
     int sat, min;
     char z;
     int sat1, min1;
     char z1;
     ispisi_dan(raspored,ucit,dan);
     if(broj==0) return 0;
     printf(""\nIzaberite koji cas zelite promijeniti: "");
     scanf(""%d"", &cs);
     printf(""Naziv predmeta: "");
     unesi(ime);
     printf(""Vrijeme pocetka: "");
     scanf(""%d"", &sat);
     scanf(""%c"", &z);
     scanf(""%d"", &min);
     printf(""Vrijeme zavrsetka: "");
     scanf(""%d"", &sat1);
     scanf(""%c"", &z1);
     scanf(""%d"", &min1);
     struct Cas casko={ime,dan,{sat,min,0},{sat1,min1,0}};
     strcpy(casko.predmet,ime);
     casko=zamj(casko,dan,sat,min,sat1,min1);
     promijeni_cas(raspored,ucit,dan,cs,casko);
     break;
     
     case 0:
     zap=zapisi_datoteku(raspored,ucit);
     return 0;
	}
	if(broj!=0) goto poc;
	return 0;
}
"
2717,88,88,0,50,A2016/Z3/Z3/student8069,A2016/Z3/Z3/student2210,"#include <stdio.h>

int main() {
	int matrica[200][200];
	int r,k;
	int i,j,k1,pomocna=1,q,h;
do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d"" ""%d"" ,&r,&k);
		if(r>200||r<=0||k<=0||k>200)printf(""Brojevi nisu u trazenom opsegu.\n"");
		
	}	while(r<=0||r>200||k<=0||k>200);
	printf(""Unesite elemente matrice: "");
for(i=0;i<r;i++){
	for(j=0;j<k;j++){
		scanf(""%d"",&matrica[i][j]);
	}
}
for(i=0;i<r;i++){
	for(j=i+1;j<r;j++){pomocna=1;
	for(k1=0;k1<k;k1++){
		if(matrica[i][k1]!=matrica[j][k1])pomocna=0;}
		if(pomocna==1){
		for(q=j;q<r-1;q++)
		for(h=0;h<k;h++)matrica[q][h]=matrica[q+1][h];
		r--;
		j--;
		
			
		}
	}
		
	}
	for(i=0;i<k;i++){
		for(j=i+1;j<k;j++){
			pomocna=1;
			for(k1=0;k1<r;k1++){if(matrica[k1][i]!=matrica[k1][j])pomocna=0;}
				if(pomocna==1){
		for(q=0;q<r;q++)
		for(h=j;h<k-1;h++)matrica[q][h]=matrica[q][h+1];
		k--;
		j--;
		
			
		}
		}
	}
printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<r;i++){
	for(j=0;j<k;j++){
		printf(""%5d"",matrica[i][j]);
	}printf(""\n"");
}
	return 0;
}
","#include <stdio.h>

int main() {
	int mat[200][200],i,j,k,T=1,p,q,N,M;
	
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"",&M,&N);
		if(M<=0 || N<=0 || M>200 || N>200)
		printf(""Brojevi nisu u trazenom opsegu.\n"");
	} while(M<=0 || N<=0 || M>200 || N>200);
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			scanf(""%d"",&mat[i][j]);
		}
	}
	for(i=0;i<M;i++){
		for(j=i+1;j<M;j++){
			T=1;
			for(k=0;k<N;k++){
				if(mat[i][k]!=mat[j][k])
				T=0;
			}
			if(T==1){
				for(p=j;p<M-1;p++)
					for(q=0;q<N;q++)
						mat[p][q]=mat[p+1][q];
						M--;
						j--;
				}
		}
	}
	for(i=0; i<N; i++){
		for(j=i+1; j<N; j++){
			T=1;
			for(k=0; k<M; k++){
				if(mat[k][i]!=mat[k][j]) T=0;
			}
			if(T==1){
				for(p=0; p<M; p++) 
					for(q=j; q<N-1; q++)
						mat[p][q]=mat[p][q+1];
				N--;
				j--;
			}
		}
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			printf(""%5d"",mat[i][j]);
		}
		printf(""\n"");
	}
	
	return 0;
}
"
2720,24,24,0,47,A2016/Z5/Z3/student9972,A2016/Z5/Z3/student8480,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme {
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak,kraj;
};
char unesi(char niz[],int velicina) {
	char znak=getchar();
	int i=0;
	while(znak=='\n')
	znak=getchar();
	while(i< velicina-1 && znak !='\n' ) {
		niz[i++] = znak;
		znak = getchar();
	}
niz[i]='\0';
return znak; }
void ocisti(char znak){
	int ima=0;
	while(znak!='\n')
	znak=getchar(); }
int ucitaj_datoteku(struct Cas raspored[]){
FILE* dat=fopen(""raspored.dat"",""rb"");
if(dat == NULL) return 0;
int ucitanih=fread(raspored,sizeof(struct Cas),KAPACITET,dat);
fclose(dat);
return ucitanih; }
void ispisreda(){
printf(""\n       PON       UTO       SRI"");
printf(""       CET       PET       SUB"");
printf(""\n""); }
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	ispisreda();
	for(i=0;i<broj_casova;i++){
		if(raspored[i].pocetak.sati<min)
		min=raspored[i].pocetak.sati;}
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max ){
			max=raspored[i].kraj.sati;
			indexmaxa=i;
}} if(raspored[indexmaxa].kraj.minute==0) max=max-1;

int x;
int s,dan,n;

for(i=min;i<=max;i++){
	if(i<10) printf(""9:00   "");
	else printf(""%d:00  "",i);
	for(j=1;j<7;j++){
		for(k=0;k<broj_casova;k++){
			s=raspored[k].pocetak.sati;
			dan=raspored[k].dan_u_sedmici;
			n=raspored[k].kraj.sati;
			if(s<=i && dan==j && n>=i) {
				printf(""%-10s"",raspored[k].predmet);
				break;
			}}
			if(k==broj_casova)
			for(x=0;x<10;x++)
			printf("" "");}
			printf(""\n""); }}
			
			void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
				int i;
				printf(""Uneseni su casovi: "");
				int k=1;
				
			for(i=0;i<broj_casova;i++){
				if(raspored[i].dan_u_sedmici==dan){
					printf(""\n%d) %s ("",k++,raspored[i].predmet);
					if(raspored[i].pocetak.sati<10) printf(""0"");
					printf(""%d:"",raspored[i].pocetak.sati);
					if (raspored[i].pocetak.minute<10) printf(""0"");
					printf(""%d-"",raspored[i].pocetak.minute);
					printf(""%02d:%02d)"",raspored[i].kraj.sati,raspored[i].kraj.minute);
				}
			}}
			int zapisi_datoteku(struct Cas raspored[], int broj_casova){
				FILE* dat = fopen(""raspored.dat"", ""wb"");
				int ucitano=fwrite(raspored, sizeof(struct Cas), broj_casova, dat);
				fclose(dat);
				if(ucitano>0) return 1;
				return ucitano; }
				void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
					int i; int k=0; int j, brojac=1;
					for(i=0;i<broj_casova;i++){
					if(raspored[i].dan_u_sedmici==dan){ k++; brojac++;
					if(k==redni_broj){
						
						for(j=i;j<broj_casova-1;j++)
						raspored[j]=raspored[j+1];
						
						if(brojac>0)break; } }}}
						int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){
							int i;
						int minpoc1,minpoc2,minkraj1,minkraj2;
						for(i=0;i<broj_casova;i++) {
							minpoc1=raspored[i].pocetak.minute+raspored[i].pocetak.sati*60;
							minkraj1=raspored[i].kraj.minute+raspored[i].kraj.sati*60;
							minpoc2=cas.pocetak.minute+cas.pocetak.sati*60;
							minkraj2=cas.kraj.minute+cas.kraj.sati*60;
						if (raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<minpoc2 && minkraj1>minpoc2 || minpoc2<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 && cas.kraj.minute+cas.kraj.sati*60>minkraj1 || raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 && minkraj1>cas.kraj.minute+cas.kraj.sati*60))
						return 1;
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (minpoc2==minpoc1 || minkraj1==minkraj2))
						return 1; 
						if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&(minpoc1<minpoc2 && minkraj1>minpoc2 || minpoc2<minpoc1 && minkraj2>minkraj1 || minpoc1<minkraj2 && minkraj1>minkraj2))
						return 1; }
						return 0;}
						int dodaj_cas(struct Cas raspored[], int broj_casova, const char*predmet, int trajanje){
							if (broj_casova==200) return 0;
							int i,j,preklop;
							for(i=0; i<6; i++)
								for(j=9; j<=19-trajanje; j++){
									struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
									char *q=cas.predmet,*p=(char*)predmet;
									struct Cas cc;
									while(*q++=*p++);
									preklop=preklapanje(raspored,broj_casova,cas);
									if(preklop==0){
										raspored[broj_casova]=cas;
										return 1;
									} if(preklop==1) continue; }
									return 0; }
									void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
								int i,redni=0;
								for(i=0;i<broj_casova; i++){
									if(raspored[i].dan_u_sedmici==dan) redni++;
									if(redni_broj==redni)
									raspored[i]=promjena; }}
								int main () {
									int opcija,broj_casova=0;
									struct Cas raspored[KAPACITET];
									ucitaj_datoteku(raspored);
									do{
										printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
										scanf(""%d"",&opcija);
										int broj=opcija;
										switch(opcija){
											case 0: {
												zapisi_datoteku(raspored,broj_casova);
												break;
											} case 1:{
												if(broj!=0)   ispis_rasporeda(raspored,broj_casova);
												break;}
												case 2:  if(broj!=0)
											{
								
												int br_casova,dodan=0;
												char  predmet[10];
												printf(""Unesite naziv predmeta: Unesite broj casova: "");
												if(broj!=0)   ocisti(unesi(predmet,10));
												scanf(""%d"",&br_casova);
												dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
												int vr=dodan;
											if(vr==0)
											printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
											if(vr==1)  broj_casova++;
											
											break;}
											case 4: if(broj!=0)
											{
												int dan,redni;
												int br=broj_casova;
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,br,dan);
												printf(""\nIzaberite koji cas zelite obrisati: "");
											    scanf(""%d"",&redni);
											    obrisi_cas(raspored,br,dan,redni);
											    printf("" Cas obrisan\n"");
											    broj_casova--;
											}
											case 3:  if(broj!=0){
												struct Cas promjena;
												int dan,redni;
												char *q,*p;
												char znak,predmet[10];
												printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
												scanf(""%d"",&dan);
												ispisi_dan(raspored,broj_casova,dan);
												promjena.dan_u_sedmici=dan;
												printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
												scanf(""%d"",&redni);
												ocisti(unesi(predmet,10));
												q=promjena.predmet;
												p=predmet;
												strcpy(q,p);
												printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
												scanf(""%d%c"",&promjena.pocetak.sati,&znak);
												scanf(""%d"",&promjena.pocetak.minute);
												scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
												promijeni_cas(raspored,broj_casova,dan,redni,promjena);
												break;}
										} 
										
									} while(opcija!=0);
									    
									    
									    	return 0; 
									
								}
									
											
							
						
					
					
			
	


","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme{
    int sati, minute, sekunde;
};

struct Cas{
    char predmet[10];
    int dan_u_sedmici;
    struct Vrijeme pocetak, kraj;
};

int ucitaj_datoteku(struct Cas raspored[]){ //ucitavanje binarne 
    FILE* dat=fopen(""raspored.dat"",""rb"");
    if(dat==NULL) return 0;
    int ucitanih;
    ucitanih=fread(raspored,sizeof(struct Cas),KAPACITET,dat);
    if(ucitanih>-1) fclose(dat);
    if(ucitanih>-1) return ucitanih;
}

void ispismain(){
    printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
}

void unesi(char niz[]){ //unos stringa
    char znak=getchar();
    while(znak=='\n') znak=getchar();
    int i=0;
    while(i<9 && znak!='\n'){
        niz[i++]=znak;
        znak=getchar();
    }
    niz[i]='\0';
    
    while(znak!='\n') //ocistimo spremnik, ako se unese previse znakova
    znak=getchar();
}

struct Cas prekopiraj(struct Cas cas, int i, int k, int trajanje, char* predmet){
    int ukupno=k+trajanje; //funkcija upise sadrzaj u nas cas
    int dan=i;
    cas.kraj.sati=ukupno;
    cas.pocetak.minute=cas.kraj.minute=0;
    cas.dan_u_sedmici=dan;
    cas.pocetak.sati=k;
    if(cas.pocetak.minute==0);
    return cas;
}

int prekl(int minpoc1, int minkraj1, int minpoc2, int minkraj2){ //saljemo dva intervala i vidimo da li se preklapa
    return(minpoc1<minpoc2 && minkraj1>minpoc2 || minpoc2<minpoc1 && minkraj2>minkraj1 || minpoc1<minkraj2 && minkraj1>minkraj2);
    }

int minute (int min, int sati){ //funkcija koja pretvara u min
    return min+sati*60;
}

int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){
    int i;
    int minpoc1, minpoc2, minkraj1, minkraj2;
    for(i=0;i<broj_casova;i++){ //nadjemo pocetak i kraj oba casa
        int minpoc1=minute(raspored[i].pocetak.minute, raspored[i].pocetak.sati);
        int minkraj1=minute(raspored[i].kraj.minute,raspored[i].kraj.sati);
        int minpoc2=minute(cas.pocetak.minute, cas.pocetak.sati);
        int minkraj2=minute(cas.kraj.minute,cas.kraj.sati);
        int vr=prekl(minpoc1,minkraj1,minpoc2,minkraj2);
        
        if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici&&(minpoc2==minpoc1 || minkraj1==minkraj2)) return 1;
        if(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && vr==1) return 1;
    }
    return 0;
}
int dodaj_cas(struct Cas raspored[], int broj_casova, const char* predmet, int trajanje){
    if(broj_casova==200) return 0;
    if(trajanje>10) return 0;
    
    int poz=1;
    int i,k,pocetak,dan,moze=0;
    struct Cas cas;
    
    for(i=1;i<7;i++) //prodjemo kroz sedmicu
        for(k=9;k<=19-trajanje;k++){
            int dokle=k;
            int vr=i;
            strcpy(cas.predmet,predmet); //upisemo ime predmeta
            cas=prekopiraj(cas,i,k,trajanje,predmet); // upisemo i ostale podatke
            strcpy(cas.predmet,predmet);
            
            if(poz==1 && k==dokle){
                if(preklapanje(raspored,broj_casova,cas)==0 && i==vr){ //ispitamo preklapanje
                    moze=1;
                    raspored[broj_casova]=cas;
                    return 1;
                }
            }}
        return 0;
    }
    
int MIN(struct Cas raspored[], int broj_casova){ //funkcija vrati sat prvog casa
    int i,j,min=25;
    for(i=0;i<broj_casova;i++){ //prodjemo kroz casove
        if(raspored[i].pocetak.sati<min) 
            min=raspored[i].pocetak.sati; //spasavamo najmanji sati
    }
    return min;
}

void ispis(){
    printf(""\n       PON       UTO       SRI       CET       PET       SUB\n"");
}

void daliispisuje(struct Cas raspored[], int i, int broj_casova){ //pomocna funkcija koja ispisuje raspored
    int k,j;
    for(j=1;j<7;j++){
        for(k=0;k<broj_casova;k++) 
             if(raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i){ //ako je u nasem intervalu ispisujemo 
                    printf(""%-10s"", raspored[k].predmet);
                    break;
                 }
    if(k==broj_casova) printf(""          ""); //ako nije, onda ispisujemo prazna mjesta
    }
}

void ispis_rasporeda(struct Cas raspored[], int broj_casova){
    int k;
    int i,j,max=0,indexmaxa=0;
    for(i=0;i<broj_casova;i++){ //prodjemo kroz casove
        if(raspored[i].kraj.sati>max){
            max=raspored[i].kraj.sati; //spavamo, a onda pamtimo mu i index 
            indexmaxa=i; 
        }
    }
    if(raspored[indexmaxa].kraj.minute==0) max=max-1; 
    int min=MIN(raspored,broj_casova); //pozovemo funkciju koja vraca odakle pocinju casovi
    ispis();
    
    for(i=min;i<=max;i++){ //od min do max idemo i pozivamo funkciju koja ispisuje raspored
        if(i<10) printf(""9:00   "");
        else printf(""%d:00  "",i);
        daliispisuje(raspored,i,broj_casova);
        printf(""\n"");
    }
}

void dansispis(struct Cas raspored[], int broj_casova, int dan){
    int k=1, i;
    int ispis=0;
    for(i=0;i<broj_casova;i++){
        if(raspored[i].dan_u_sedmici==dan){
            ispis=1; //ispisemo cijeli dan
            printf(""\n%d) %s ("",k++,raspored[i].predmet); //morali ispitivati zbog dodavanja 0 pri ispisu
            if(raspored[i].pocetak.sati<10) printf(""0"");
            printf(""%d:"",raspored[i].pocetak.sati);
            if(raspored[i].pocetak.minute<10) printf(""0""); // da li je jednocifren il dvocifren
            printf(""%d"", raspored[i].pocetak.minute);
            printf(""-"");
            if(raspored[i].kraj.sati<10) printf(""0"");
            printf(""%d"", raspored[i].kraj.sati);
            printf("":"");
            if(raspored[i].kraj.minute<10) printf(""0"");
            if(ispis==1) printf(""%d)"",raspored[i].kraj.minute);
            }
    }
}
void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
    int i;
    printf(""Uneseni su casovi: "");
    
    dansispis(raspored,broj_casova, dan);
    return;
}

void unosss(){ //pomocna funkcija da ne pisemo vise puta
    printf(""\nIzaberite koji cas zelite promijeniti: "");
    printf(""Naziv predmeta: "");
    printf(""Vrijeme pocetka: "");
    printf(""Vrijeme zavrsetka: "");
}

struct Cas pr(int dan, int sat, int min, int sat1, int min1, char* ime){ //prekopiranje podataka u strukturu
    struct Cas casko;
    int dan_u_sedmici=dan;
    strcpy(casko.predmet,ime);
    casko.dan_u_sedmici=dan_u_sedmici;
    casko.pocetak.sati=sat;
    casko.pocetak.minute=min;
    casko.kraj.sati=sat1;
    casko.kraj.minute=min1;
    strcpy(casko.predmet,ime);
    return casko;
}

void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
    int i, k=0; int index=0;
    
    for(i=0;i<broj_casova;i++){
        if(raspored[i].dan_u_sedmici==dan) k++;
        if(k==redni_broj){ //nadjemo onaj koji treba zamijeniti i upamtimo mu index
            index=i;
        }
    }
    raspored[index]=promjena;
}

int zapisi_datoteku (struct Cas raspored[], int broj_casova){//zapisivanje binarne
    FILE* dat=fopen(""raspored.dat"",""wb"");
    int ucitano=fwrite(raspored,sizeof(struct Cas),broj_casova,dat);
    fclose(dat);
    return 1;
}



void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
    int i, k=0, j, r=0;
    
    for(i=0;i<broj_casova;i++){
        if(raspored[i].dan_u_sedmici==dan) {k++;r++;}
        
        if(k==redni_broj){
            if(r==redni_broj) for(j=i;j<broj_casova-1;j++) //izbacivanje iz niza
            raspored[j]=raspored[j+1];
            break;
            return;
        }
    }
}
int main() {

struct Cas raspored[KAPACITET];
int ucit=ucitaj_datoteku(raspored);
int broj, br, dan, cs;
char ime[100];
int zap;

do{
    ispismain();
    
    scanf(""%d"",&broj);
    
    switch(broj){
        case 2:
            printf(""Unesite naziv predmeta: "");
            printf(""Unesite broj casova: "");
            unesi(ime);
            scanf(""%d"", &br);
            int nema=dodaj_cas(raspored,ucit,ime,br);
            if(nema==1) ucit++;
            if(nema==0) printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br);
            break;
            
        case 1:
            ispis_rasporeda(raspored,ucit);
            int i;
            
            for(i=0;i<ucit;i++){
                if(raspored[i].pocetak.sati<9) return 1;
            }
            break;
            
            case 3: 
                printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
                scanf(""%d"",&dan);
                ispisi_dan(raspored,ucit,dan);
            
            unosss();
            
            int sat, min;
            char z;
            
            int sat1,min1;
            char z1;
            
            scanf(""%d"",&cs);

            unesi(ime);
            
            scanf(""%d%c%d"",&sat,&z,&min);
            scanf(""%d%c%d"", &sat1,&z1,&min1);
            
            struct Cas casko=pr(dan,sat,min,sat1,min1,ime);
            
            promijeni_cas(raspored,ucit,dan,cs,casko);
            break;
            
        case 0:
                zap=zapisi_datoteku(raspored,ucit);
                return 0;
            
        case 4: 
                printf(""Unesite dan "");
                printf(""(1=ponedjeljak, 2=utorak..., 6=subota): "");
                scanf(""%d"", &dan);
                ispisi_dan(raspored,ucit,dan);
                printf(""\nIzaberite koji cas zelite obrisati: "");
                scanf(""%d"", &cs);
                obrisi_cas(raspored,ucit,dan,cs);
                printf(""Cas obrisan\n"");
                if(dan>0) ucit--;
                break;
        
    }
}while(broj!=0);
	
	return 0;
}
"
2721,87,87,0,41,A2016/Z2/Z3/student8329,A2016/Z2/Z3/student4420,"#include <stdio.h>

int main() {
	char mat[20][20];
	int i,j,brtac;
	int br;
	printf(""Unesite broj tacaka: "");
	scanf(""%d"",&brtac);
	while((brtac<1)||(brtac>10))
	{
		printf(""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&brtac);
		
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			mat[i][j]=' ';
			
		}
	}
	for(br=0;br<brtac;br++)
	{
		printf(""Unesite %d. tacku: "",br+1);
		scanf(""%d %d"",&i,&j);
		while((i<0)||(i>19)||(j<0)||(j>19))
		{
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "",br+1);
			scanf(""%d %d"",&i,&j);
		}
		mat[i][j]='*';
	}
	for(i=0;i<20;i++)
	{
		for(j=0;j<20;j++)
		{
			printf(""%c"",mat[j][i]);	
			
		}
		printf(""\n"");
	}
	

	return 0;
	}

","#include <stdio.h>

int main(){
  int bkt,i,j,ktacke;
  char niz[20][20];
 printf(""Unesite broj tacaka: "");
 scanf(""%d"",&bkt);
 while(bkt<1||bkt>10){
 	printf(""Pogresan unos\n"");
 	printf(""Unesite broj tacaka: "");
 	scanf(""%d"",&bkt);}
       for(i=0;i<20;i++){
 	       for(j=0;j<20;j++){
 		niz[i][j] =' ';
 			}
 }
 	for(ktacke=0;ktacke<bkt;ktacke++){
 		printf(""Unesite %d. tacku: "",ktacke+1);
 		scanf(""%d %d"",&i,&j);
 		while(i<0||j<0||i>19||j>19){
 			printf(""Pogresan unos\n"");
 			printf(""Unesite %d. tacku: "",ktacke+1);
 			scanf(""%d %d"",&i,&j);}
 			niz[i][j]='*';
 	}
 	for(i=0;i<20;i++){
 		for(j=0;j<20;j++){
 			printf(""%c"",niz[j][i]);
 	}
 	printf(""\n"");}
 	return 0;
 }





"
2724,85,85,0,58,A2016/Z2/Z4/student5573,A2016/Z2/Z4/student1278,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define g 0.000000000000000000000001
int main()
{
    double niz[100][100];
    int m,n,i=0,j,a=0;
    do{
        if(i>0)
        printf(""Pogresan unos!\n"");
        printf(""Unesite M i N: "");
        scanf(""%d %d"",&m,&n);
        i++;
    }while(m<=0 || m>100 || n<=0 || n>100);
    printf(""Unesite elemente matrice: "");
    i=0;
    while(i<m)
    {
        j=0;
        while(j<n)
        {
            scanf(""%lf"",&niz[i][j]);
            j++;
        }
        i++;
    }
    for(i=0;i<m-1;i++)
    {
        for(j=0;j<n-1;j++)
        {
            if(fabs(niz[i][j]-niz[i+1][j+1])>g)
            {
                a++;
                break;
            }
        }
        if(a==1)
        {
            printf(""Matrica nije ni cirkularna ni Teplicova"");
        }
    }
    if(a==0)
    {
        for(i=0;i<m-1;i++)
        {
            if(m==1)
            {
                break;
            }
            for(j=0;j<n;j++)
            {
                if(fabs(niz[i][n-1]-niz[i+1][0])>g)
                {
                    a++;
                    printf(""Matrica je Teplicova "");
                    break;
                }
            }
            if(a==1)
            {
                break;
            }
        }
        if(a==0)
        {
            printf(""Matrica je cirkularna "");
        }
    }
    return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define g 0.0000000000000000000000001
int main() {
	double niz[100][100];
	int m,n,k=0,a=0,j;
	do{
		if(k>0)
		printf(""Pogresan unos!\n"");
		printf(""Unesite M i N: "");
		scanf(""%d %d"", &m,&n);
		k++;
	}while(m<=0 || m>100 || n<=0 || n>100);
	printf(""Unesite elemente matrice: "");
	k=0;
	while(k<m){
		j=0;
		while (j<n){
			scanf(""%lf"",&niz[k][j]);
			j++;
		}
		k++;
	}
	for(k=0;k<m-1;k++){
		for(j=0;j<n-1;j++){
			if(fabs(niz[k][j]-niz[k+1][j+1])>g){
				a++;
				break;
			}
		}
		if(a==1){
			printf(""Matrica nije ni cirkularna ni Teplicova"");
		}
	}
	if(a==0){
		for(k=0;k<m-1;k++){
			if(m==1){
				break;
			}
			for(j=0;j<n;j++){
				if(fabs(niz[k][n-1]-niz[k+1][0])>g){
					a++;
					printf(""Matrica je Teplicova "");
					break;
				}
			}
			if(a==1){
				break;
			}
		}
		if(a==0){
			printf(""Matrica je cirkularna "");
		}
	}
	return 0;
}"
2729,77,77,0,67,A2016/Z3/Z2/student4934,A2016/Z3/Z2/student8043,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

    void ubaci(int *niz, int velicina)   {
        
        int *o;
        int *s;
        int i;
        int zbir;
        int x;
        int y;
        o=s=niz;
        /*postavljamo pokazivac na zadnje mjesto trenutnog niza*/ 
        for(i=velicina-1; i>=0; i--){
        *(s+(2*i))=*(o+i);
        
        }
        o=niz;
        /*racunamo sumu pomocu apsolutne vrijednosti*/
        for(i=0; i<2*velicina; i++){
            zbir=0;
            x=*(o+i);
            x=abs(x);
            do {
                y=x%10;
                x=x/10;
                zbir=zbir+y;
                /*u sljedeci clan upisujemo sumu*/
            } while (x!=0);
            *(o+1+i)=zbir;
            i++;
        }
    }
    /*trazimo Fibonacijev niz*/
    int Fibonacijev_niz(int m){
        int a;
        int b;
        int c;
        if(m<0)return 0;
        if(m==1)return 1;
        a=1;
        b=1;
        while(1){
            c=a+b;
            if(m==c)return 1;
            else if(c>m)return 0;
            a=b;
            b=c;
        }
    }
    /*izbacujemo brojeve Fibonacijevog niza iz ovog niza*/
    int izbaci(int *niz, int velicina)   {
        
        int i;
        int x;
        int j;
        int *o;
        o=niz;
        for(i=0; i<velicina; i++)    {
            x=Fibonacijev_niz(*(o+i));
          
            if(x==1){
                for(j=i; j<velicina-1; j++)  {
                    *(o+j)=*(o+j+1);
                }
                
                velicina--;
                i--;
            }
        }
        
        return velicina;
    }
    
    int main()  {
        
        int niz[20],i,velicina=10,x;
        printf(""Unesite niz od 10 brojeva:"");
        for(i=0; i<velicina; i++)    {
            scanf(""%d"", &niz[i]);
        }
        /*niz koji izbacujmo sadrzi i cifru koju
        unesemo i zbir cifara koje unesemo zato je 
        duzina niza je duplo veca od pocetnog niza*/
        ubaci(niz,velicina);
        x=izbaci(niz,2*velicina);    
        
        printf("" Modificirani niz glasi: "");
        for(i=0; i<x-1; i++)  {
            printf(""%d, "", niz[i]);
            
        }
            printf(""%d."", niz[i]);
        
        return 0;
        
    }
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
void ubaci(int *niz, int vel)
{       
        int *p,*q,i,suma,a,b;
        p=q=niz;
        for(i=vel-1; i>=0; i--)
        {
        *(q+(2*i))=*(p+i);
        }
        p=niz;
        for(i=0; i<2*vel; i++)
        {
            suma=0;
            a=*(p+i);
            a=abs(a);
            while(a!=0)
            {
                b=a%10;
                a/=10;
                suma+=b;
            }
            *(p+i+1)=suma;
            i++;
        }
    }
    int fibniz(int n)
    {   
                int x,y,z;
        if(n<0)return 0;
        if(n==1)return 1;
        x=1;
        y=1;
        while(1)
        {
            z=x+y;
            if(n==z)return 1;
            else if(z>n)return 0;
            x=y;
            y=z;
        }
    }
    int izbaci(int *niz, int vel)
    {
        int i,a,j,*p;
        p=niz;
        for(i=0; i<vel; i++)   
        {
            a=fibniz(*(p+i));
            if(a==1)    
            {
                for(j=i; j<vel-1; j++)  
                {
                    *(p+j)=*(p+j+1);
                }
                vel--;
                i--;
            }
        }
        return vel;
    }
    int main()  {
        int niz[20],i,vel=10,a;
        printf(""Unesite niz od 10 brojeva:"");
        for(i=0; i<vel; i++)
        {
            scanf(""%d"", &niz[i]);
        }
        ubaci(niz,vel);
        a=izbaci(niz,2*vel);
         printf("" Modificirani niz glasi: "");
        for(i=0; i<a-1; i++)
        {
            printf(""%d, "", niz[i]);
        }
            printf(""%d."", niz[i]);
        return 0;
    }

        
        
        
        
        
        
        
        "
2731,98,98,0,31,A2016/Z2/Z3/student7013,A2016/Z2/Z3/student5222,"#include <stdio.h>

int main() {
	char matrica[20][20];
	int n = 0, x, y, i = 0;
	
	for(y = 0; y < 20; y++)
		for(x = 0; x < 20; x++)
			matrica[y][x] = ' ';
	
	while(1){
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &n);
		if(n < 1 || n > 10) printf(""Pogresan unos\n"");
		else break;
	}
	while(i < n){
		printf(""Unesite %d. tacku: "", i + 1);
		scanf(""%d%d"", &x, &y);
		if(x < 0 || x > 19 || y < 0 || y > 19){
			printf(""Pogresan unos\n"");
		}
		else{
			matrica[y][x] = '*';
			i++;
		}
	}
	for(y = 0; y < 20; y++){
		for(x = 0; x < 20; x++)
			printf(""%c"", matrica[y][x]);
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main() {
	char matrica[20][20];
	int n = 0, x, y, i = 0;
	
	for(y = 0; y < 20; y++)
		for(x = 0; x < 20; x++)
			matrica[y][x] = ' ';
	
	while(1){
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &n);
		if(n < 1 || n > 10) printf(""Pogresan unos\n"");
		else break;
	}
	while(i < n){
		printf(""Unesite %d. tacku: "", i + 1);
		scanf(""%d%d"", &x, &y);
		if(x < 0 || x > 19 || y < 0 || y > 19){
			printf(""Pogresan unos\n"");
		}
		else{
			matrica[y][x] = '*';
			i++;
		}
	}
	for(y = 0; y < 20; y++){
		for(x = 0; x < 20; x++)
			printf(""%c"", matrica[y][x]);
		printf(""\n"");
	}
	return 0;
}
"
2732,90,90,0,76,A2016/Z3/Z3/student2676,A2016/Z3/Z3/student9805,"#include <stdio.h>

int main() {
	int mat[202][202], m, n, i, j, k, poc, isti;
	do
	{
	    printf(""Unesite brojeve M i N: "");
	    scanf(""%d %d"", &m, &n);
	    if(m<=0 || n<=0 || m>200 || n>200) printf(""Brojevi nisu u trazenom opsegu.\n"");
	} while(m<=0 || n<=0 || m>200 || n>200);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++)
		{
			scanf(""%d"", &mat[i][j]);
		}
	}
	
	for(poc=0;poc<m;poc++)
	{
		for(i=poc+1;i<m;i++)
		{
			isti=1;
			for(j=0;j<n;j++)
			{
				if(mat[poc][j]!=mat[i][j]) isti=0;
			}
			if(isti)
			{
				// izbacivanje istog reda
				
				for(k=i;k<m-1;k++)
				{
					for(j=0;j<n;j++)
					{
						mat[k][j]=mat[k+1][j];
					}
				}
				i--;
				m--;
			}
		}
	}
	
	for(poc=0;poc<n;poc++)
	{
		for(j=poc+1;j<n;j++)
		{
			isti=1;
			for(i=0;i<m;i++)
			{
				if(mat[i][poc]!=mat[i][j]) isti=0;
			}
			if(isti)
			{
				// izbacivanje iste kolone
				
				for(i=0;i<m;i++)
				{
					for(k=j;k<n-1;k++)
					{
						mat[i][k]=mat[i][k+1];
					}
				}
				j--;
				n--;
			}
		}
	}
	
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0;i<m;i++)
	{
		printf("" "");
		for(j=0;j<n;j++)
		{
			printf(""%4d "", mat[i][j]);
		}
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int matrica[200][200],M,N,red,kolona,pocetnired,pocetnakolona,jednakost,zavrsni;
	do{
		printf(""Unesite brojeve M i N:"");
		scanf(""%d %d"",&M,&N);
		if (M<=0 || M>200 || N<=0 || N>200){
			printf ("" Brojevi nisu u trazenom opsegu.\n"");
			continue;
		}
	} while (M<=0 || M>200 || N<=0 || N>200);
	printf ("" Unesite elemente matrice: "");
	for (red=1;red<=M;red++){
		for (kolona=1;kolona<=N;kolona++){
			scanf (""%d"",&matrica[red][kolona]);
		}
	}
	for (pocetnired=1;pocetnired<=M;pocetnired++){
		for(red=pocetnired+1;red<=M;red++){
			//Uslov za jednakost redova//
			jednakost=1;
			for(kolona=1;kolona<=N;kolona++){
				if (matrica[pocetnired][kolona]!=matrica[red][kolona]) jednakost=0;
			}
			//izbacivanje reda uz ocuvanje redoslijeda//
			if (jednakost) {
				for(zavrsni=red;zavrsni<=M;zavrsni++){
					for(kolona=1;kolona<=N;kolona++){
						matrica[zavrsni][kolona]=matrica[zavrsni+1][kolona];
					}
				}
				red--;
				M--;
			}
		}
	}

	for (pocetnakolona=1;pocetnakolona<=N;pocetnakolona++){
		for(kolona=pocetnakolona+1;kolona<=N;kolona++){
			//uslov za jednakost kolone//
			jednakost=1;
			for(red=1;red<=M;red++){
				if (matrica[red][pocetnakolona]!=matrica[red][kolona]) jednakost=0;
			}
			if (jednakost) {
				//izbacivanje kolone uz ocuvanje redoslijeda//
				for(red=1;red<=M;red++){
					for(zavrsni=kolona;zavrsni<=N;zavrsni++){
						matrica[red][zavrsni]=matrica[red][zavrsni+1];
					}
				}
				kolona--;
				N--;
			}
		}
	}
	printf (""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for (red=1;red<=M;red++){
		printf ("" "");
		for (kolona=1;kolona<=N;kolona++){
			printf(""%4d "", matrica[red][kolona]);
		}
		printf (""\n"");
	}
	return 0;
}
"
2734,96,96,0,22,A2016/Z1/Z4/student3701,A2016/Z1/Z4/student2486,"#include <stdio.h>
#include <stdlib.h>

int main()
{
    int n, i, j;

    do{
        printf(""Unesite broj n: "");
        scanf(""%d"",&n);
        if(n<=0||n>50){
            printf(""Pogresan unos"");
            printf(""\n"");
        }
    }while(n<=0||n>50);
    
    if(n==1){ printf(""**"");}

    for(i=0;i<n;i++){
        for(j=0;j<=4*(n-1);j++){
            if(i==j||i+j==2*(n-1)||j-i==2*(n-1)||j+i==4*(n-1)){
                printf(""*"");
            } else printf("" "");
        }
        printf(""\n"");
    }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

int main()
{
    int n, i, j;

    do{
        printf(""Unesite broj n: "");
        scanf(""%d"",&n);
        if(n<=0||n>50){
            printf(""Pogresan unos"");
            printf(""\n"");
        }
    }while(n<=0||n>50);
    
    if(n==1){ printf(""**"");}

    for(i=0;i<n;i++){
        for(j=0;j<=4*(n-1);j++){
            if(i==j||i+j==2*(n-1)||j-i==2*(n-1)||j+i==4*(n-1)){
                printf(""*"");
            } else printf("" "");
        }
        printf(""\n"");
    }
    return 0;
}"
2739,22,22,0,19,A2016/Z5/Z1/student6548,A2016/Z5/Z1/student3386,"#include <stdio.h>
#include <string.h>

struct Student{
    char ime[20],prezime[20];
    int ocjene[50];
    int br_ocjena;
};

double prosjecna_ocjena(int niz[],int vel){
    if(vel==0) return 0;
    int i;
    double prosjek=5, suma=0;
    for(i=0;i<vel;i++){
        if(niz[i]==5) return 5;
        suma+=niz[i];
    }
    prosjek=suma/vel;
    return prosjek;
}

int uporedi(char* s1, char* s2){
    while (*s1!='\0' && *s2!='\0'){
        if(*s1<*s2) return -1;
        if(*s1>*s2) return 1;
        s1++;
        s2++;
    }
    if(*s1!='\0') return 1;
    if(*s2!='\0') return -1;
    return 0;
}
int genijalci(struct Student studenti[], int velicina, double prosjek){
    int i,j;
    for(i=0;i<velicina;i++){
        if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)<prosjek){
            for(j=i; j<velicina-1; j++)
                studenti[j]=studenti[j+1];
            velicina--;
            i--;
        }
    }
int prvi=-1, drugi=-1, treci=-1;
double najveci=0, prosj;
int ispred;

for(i=0; i<velicina; i++){
    if(prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena) >= najveci){
        if(prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena) > najveci){
            prvi=i;
            najveci=prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena);
                continue;
        }
        najveci=prosjecna_ocjena(studenti[i].ocjene, studenti[i].br_ocjena);
        ispred=uporedi(studenti[prvi].prezime, studenti[i].prezime);
        if(ispred==0)
            ispred=uporedi(studenti[prvi].ime,studenti[i].ime);
        if(ispred==1){
            prvi=i;
            }
        }
    }
    najveci=0;
    for(i=0;i<velicina;i++){
        if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)>=najveci && i!=prvi){
            if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)>najveci){
                drugi=i;
        najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
            continue;
            }
            najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
            ispred=uporedi(studenti[drugi].prezime,studenti[i].prezime);
            if(ispred==0)
                ispred=uporedi(studenti[drugi].ime,studenti[i].ime);
                if(ispred==1){
                    drugi=i;
                }
        }
    }
    najveci=0;
    for(i=0;i<velicina;i++){
        if(prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)>=najveci && i!=prvi && i!=drugi){
            if(prosjecna_ocjena (studenti[i].ocjene,studenti[i].br_ocjena)>najveci){
                
                treci=i;
                najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
                continue;
            }
            najveci=prosjecna_ocjena(studenti[i].ocjene,studenti[i].br_ocjena);
            ispred=uporedi(studenti[treci].prezime,studenti[i].prezime);
            if(ispred==0)
                ispred=uporedi(studenti[treci].ime,studenti[i].ime);
            if(ispred==1){
                treci=i;
            }
        }
    }
    for (i=0;i<velicina;i++)
        if(i==prvi)
            printf(""\n%s %s\n"", studenti[prvi].prezime, studenti[prvi].ime);
    for (i=0;i<velicina;i++)
        if(i==drugi)
            printf(""%s %s\n"", studenti[drugi].prezime, studenti[drugi].ime);
    for(i=0;i<velicina;i++)
        if(i==treci)
            printf(""%s %s\n"",studenti[treci].prezime, studenti[treci].ime);
    return velicina;
}
    
int main(){
    struct Student studenti[10]={
        {""Meho"", ""Mujic"",{7,7,7,7,8},5},
        {""Pero"", ""Peric"",{8,8,8,8,7},5},
        {""Beba"", ""Bebic"",{7,8,9},3},
        {""Mujo"", ""Mujic"",{10,10,10,10,9},5},
        {""Mujo"", ""Mujic"",{7,7,7,7,7,7,7},7},
        {""Fata"", ""Fatic"",{7,7,7,7,7,7,6,6,6,5},10},
        {""Osman"", ""Osmic"",{8,6,9,10,9},5},
        {""Pero"", ""Mujic"",{10,6,10,10,9},5},
        {""Beba"", ""Mujic"",{10,8,7,6,9},5},
        
    };
    
    int vel=genijalci(studenti, 9, 7);
    return 0;
}","#include <stdio.h>
#include <string.h>
#define EPSILON 0.0001
struct Student
{
	char ime[20],prezime[20];
	int ocjene[50];
	int br_ocjena;
};
/*prosjek svakog studenta pojedinacno
u zavisnosti od broja ocjena*/
float prosjek(int niz[],int vel)
{
	int i=0,suma=0;
	float prosjek;
	if(vel==0)
		return 5;
	for(i=0;i<vel;i++)
	{
		/*ako ima ijednu 5 pao je*/
		if(niz[i]==5)
			return 5;
		suma+=niz[i];
	}
	prosjek=(float)suma/vel;
	return prosjek;
	
}
/*vraca 1 ako prvi treba bit
ispred drugog odnosno 0 ako ne*/
int dalijeveci(struct Student pr,struct Student dr)
{
	if(prosjek(pr.ocjene,pr.br_ocjena)>prosjek(dr.ocjene,dr.br_ocjena))
		return 1;
	else if(prosjek(pr.ocjene,pr.br_ocjena)<prosjek(dr.ocjene,dr.br_ocjena))
		return 0;
	/*prosjek im je jednak ako se 
	funkcija nije prekinula do sada
	pa gledamo prezimena*/
	if(strcmp(pr.prezime,dr.prezime)>0)
		return 0;
	else if(strcmp(pr.prezime,dr.prezime)<0)
		return 1;
	if(strcmp(pr.ime,dr.ime)>0)
		return 0;
	else if(strcmp(pr.ime,dr.ime)<0)
		return 1;
	/*ako su jednaki prosjeci 
	svejedno sta se vraca*/
	else return 1;
}
int ind(struct Student niz[],int vel,double prosjekk)
{
	int i;
	int indexmin=0;
	double min=10;
	float temp;
	for(i=0;i<vel;i++)
	{
		temp=prosjek(niz[i].ocjene,niz[i].br_ocjena);
		if(min-temp>EPSILON)
		{
			min=temp;
			indexmin=i;
		}
	}
	return indexmin;
}
int izb(struct Student niz[],int vel,double prosjekk)
{
	int i,j;
	for(i=0;i<vel;i++)
	{
		/*ako je nas prosjek manji od 
		zadanog moramo ga izbaciti*/
		if(prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena) > EPSILON)
		{
			for(j=i;j<vel-1;j++)
			{
				niz[j]=niz[j+1];
			}
			vel--;
			i--;
		}
	}
	return vel;
}

void ispis(struct Student niz[],int vel,double prosjekk,int indexmin)
{
	int i,indexprvi,indexdrugi=0,indextreci,vr;
	if(vel>0)
	{
		/*indexmin prije smo nasli vec ranije*/
		indexprvi=indexmin;
		for(i=0;i<vel;i++)
		{
			vr=dalijeveci(niz[i],niz[indexprvi]);
			if(vr==1)
			/*patmimo najveceg studenta 
			da bi ga mogli preskocit slj. put*/
			indexprvi=i;
		}
		if(i>0)
		/*printamo naj studenta*/
		printf(""\n%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);
	}
	if(vel>1)
	{
		indexdrugi=indexmin;
		for(i=0;i<vel;i++)
		{
			if(i==indexprvi)
				continue;
			vr=dalijeveci(niz[i],niz[indexdrugi]);
			if(vr==1)
				indexdrugi=i;
		}
	printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
	}
	if(vel>2)
	{
		indextreci=indexmin;
		for(i=0;i<vel;i++)
		{
			if(i==indexprvi || i==indexdrugi)
				continue;
			vr=dalijeveci(niz[i],niz[indextreci]);
			if(vr==1)
			indextreci=i;
		}
		if(i>0)
		printf(""%s %s\n"",niz[indextreci].prezime,niz[indextreci].ime);
	}
}
int genijalci(struct Student niz[],int vel,double prosjekk)
{
	int indexmin=0;
	vel=izb(niz,vel,prosjekk);
	indexmin=ind(niz,vel,prosjekk);
	ispis(niz,vel,prosjekk,indexmin);
	return vel;
}
int main() {
	struct Student studenti[5] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Beba"", ""Bebic"", { 10, 10, 10, 10, 5}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 5, 6.5);

	return 0;
}
"
2741,14,14,0,13,A2016/Z4/Z3/student5170,A2016/Z4/Z3/student2210,"#include <stdio.h>

int provjera (char* text, char* zamjena)
{
	int je_li_isto=1;
	char* reset=text;
	char* prvoslovo=zamjena;
	while (*zamjena!='\0' && *text!='\0') {
		if(*text!=*zamjena)
			je_li_isto=0;
		zamjena++;
		text++;
	}
	if(*zamjena!='\0' || (*text!='\0' && *text!=' ')) je_li_isto=0;
	zamjena=prvoslovo;
	text=reset;
	return je_li_isto;
}

void promjena(char* text, char* zamjena, char* nova)
{
	int ostatak=0, cont=1,i;
	char* rst=text;
	char* reset_rij=zamjena;
	char* reset=nova;
	char* kraj=text;
	while(*text!='\0') {
		cont=0;
		while(*text!='\0' && *text!=*zamjena) text++;
		if(provjera(text, zamjena) && (text==rst || *(text-1)==' ') && *text!='\0') {
			while(*nova!='\0') {
				if(*text=='\0' || *text==' ') {
					kraj=text;
					while(*text!='\0') text++;
					text++;
					while(text>kraj) {
						*text=*(text-1);
						text=text-1;
					}
				}
				*text=*nova;
				nova++;
				text++;
			}
			cont=1;
		}
		if(cont==1 && *text!='\0' && *text!=' ') {
			kraj=text;
			while(*text!='\0' && *text!=' ') {
				text++;
				ostatak++;
			}
			text=kraj;
			for(i=0; i<ostatak; i++) {
				text=kraj;
				while(*text!='\0') {
					*text=*(text+1);
					text++;
				}
			}
			text=kraj;
		}
		if(*text!='\0' && *text!=' ') text++;
		nova=reset;
		zamjena=reset_rij;
	}
	nova=reset;
	zamjena=reset_rij;
	text=rst;
}

char* zamjena_rijeci(char*tekst, char** rijeci, char** zamjene, int broj_rijeci)
{
	char *reset=tekst;
	int i,br;
	br=broj_rijeci;
	for(i=0; i<br; i++) {
		tekst=reset;
		while(*tekst!='\0') {
			while(*tekst!='\0' && *tekst==' ')
				tekst++;
			if(provjera(tekst,rijeci[i])) {
				promjena(tekst, rijeci[i], zamjene[i]);
			}
			while(*tekst!='\0' && *tekst!=' ') tekst++;
		}
	}
	return reset;
}

int main()
{
	char* promjene[2]= {"""",""""};
	char* rij[2]= {"""",""""};
	char t[100]="""";
	printf(""%s"", zamjena_rijeci(t, rij, promjene, 2));
	return 0;
}","#include <stdio.h>
char* zamjena_rijeci(char* tekst,char** rijeci,char** zamjene,int broj_rijeci){
	int a=0,b=0,i,j=0,k;
	char* p=tekst;
	char* q=tekst;
	char* zadnji=p;
	if(*tekst==NULL || broj_rijeci<=0) return q;
	while(*tekst!='\0'){
		for(i=0;i<broj_rijeci;i++){
			while(*tekst!=' ' && *tekst!=',' && rijeci[i][j]!='\0'){
				if(*tekst!=rijeci[i][j])
				break;
				j++;
				tekst++;
			}
			if((*tekst==' ' || *tekst==',' || *tekst=='\0') && rijeci[i][j]=='\0'){
				a=0;
				b=0;
				while(rijeci[i][a]!='\0')
				a++;
				while(zamjene[i][b]!='\0')
				b++;
				while(*zadnji!='\0')
				zadnji++;
				while(zadnji>p){
					*(zadnji-a+b)=*zadnji;
					zadnji--;
				}
				for(k=0;k<b;k++){
					if(*p==' ' && k==0)
					p++;
					*p=zamjene[i][k];
					p++;
					tekst=p;
				}
			}
			else if(j==broj_rijeci-1 || *tekst=='-' || *tekst==','){
				while(*tekst!=' ' && *tekst!='\0')
				tekst++;
			}
			p=tekst;
			j=0;
		}
		tekst++;
	}
	return q;
}
int main() {
	char* rijeci[2] = {""beli"",""sneg""};
	char* zamjene[2] = {""bijeli"",""snijeg""};
	char tekst[100] = {""beli sneg je pokrio beli breg""};
	printf(""%s"", zamjena_rijeci(tekst,rijeci,zamjene,2));
	
	return 0;
}
"
2747,93,93,0,18,A2016/Z1/Z4/student3872,A2016/Z1/Z4/student6042,"#include <stdio.h>

int main() {
	int i, n, j;
poc:	printf(""Unesite broj n: "");
	scanf(""%d"", &n);
	if(n<=0 || n>50) {printf(""Pogresan unos\n""); goto poc; }
if(n==1) { printf(""***""); }
else {	for(i=0;i<n;i++)
	{
		for(j=0;j<4*n-3;j++)
		{
			if(i==j || j==((n*4-3)/2)-i || j==((n*4-3)/2)+i || j==((n*4-4)-i))
			printf(""*"");
			else printf("" "");
		}
		printf(""\n"");
	} }
	return 0;
	
	
}
","#include <stdio.h>

int main() {
		int i,j,n;
		p:printf (""Unesite broj n: "");
		scanf (""%d"",&n); if (n<=0 || n>50)  { 
			printf (""Pogresan unos\n""); 
			goto p; 
			} 
		
		
		if (n==1) {
			printf (""***""); return 0;
		}
		
		
		
		
		
		for (i=0;i<n;i++) {
			for (j=0;j<=4*n-3;j++) {
				if ( i==j ||  j==(((n*4-3)/2)-i) || j==(((n*4-3)/2)+i) || j==((n*4-4)-i) )  
					printf (""*""); 
					else printf ("" ""); 
			}
			printf (""\n"");  
		}
		
		
		
		return 0;				
} 
"
2748,47,47,0,10,A2016/Z2/Z1/student2755,A2016/Z2/Z1/student1845,"#include <stdio.h>
#include <math.h>

int main() {
	int n=0, k=1, cifra1=0, cifra2=0, novi=0;
	
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	n=fabs(n);
	
	while(n>=10) {
		cifra1=n%10;
		cifra2=(n/10)%10;
		novi = novi + fabs(cifra1-cifra2)*k;
		k*=10;
		n/=10;
	}
	
	printf(""%d"", novi);
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

int main() {
	int k=1,n,p,d,razlika=0, novi=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	n=abs(n);
while(n>=10)
{
	p=n%10;
	d=(n/10)%10;
	
	razlika=abs(p-d);
	
	novi+=razlika*k;
	k*=10;
	n/=10;
}	
	printf(""%d"", novi);
	return 0;
}
"
2751,99,99,0,46,A2016/Z2/Z3/student2900,A2016/Z2/Z3/student4036,"#include <stdio.h>

int main() {
    int unos, i, j;
    char a[20][20];
    for (i = 0; i < 20; i++){
        for (j = 0; j < 20; j++){
            a[i][j] = ' ';
        }
    }
    
    do {
	printf(""Unesite broj tacaka: "");
	scanf (""%d"", &unos);
	if (unos <= 0 || unos > 10)
	printf(""Pogresan unos \n"");
	else break;
    } while (1);
    for (i = 0; i < unos; i++){
    int x,y;
    printf(""Unesite %d. tacku: "",i+1);
    scanf(""%d %d"",&x, &y);
    if (x >= 0 && x<=19 && y>=0 && y<=19){
        a[x][y] = '*';
    }
    else {
        printf(""Pogresan unos\n"");
        i--;
    }
    }
    
    
    int kocka = 0;
    for (kocka; kocka < 20; kocka++){
        int sat = 0;
        for (sat; sat < 20; sat++){
            if (a[sat][kocka] == '*')
                printf(""*"");
            else printf ("" "");
    
        }
        printf(""\n"");
    
    }
    
    
    
	return 0;
}
","#include <stdio.h>

int main() {
    int unos, i, j;
    char a[20][20];
    for (i = 0; i < 20; i++){
        for (j = 0; j < 20; j++){
            a[i][j] = ' ';
        }
    }
    
    do {
	printf(""Unesite broj tacaka: "");
	scanf (""%d"", &unos);
	if (unos <= 0 || unos > 10)
	printf(""Pogresan unos \n"");
	else break;
    } while (1);
    for (i = 0; i < unos; i++){
    int x,y;
    printf(""Unesite %d. tacku: "",i+1);
    scanf(""%d %d"",&x, &y);
    if (x >= 0 && x<=19 && y>=0 && y<=19){
        a[x][y] = '*';
    }
    else {
        printf(""Pogresan unos\n"");
        i--;
    }
    }
    
    
    int kocka = 0;
    for (kocka; kocka < 20; kocka++){
        int sat = 0;
        for (sat; sat < 20; sat++){
            if (a[sat][kocka] == '*')
                printf(""*"");
            else printf ("" "");
    
        }
        printf(""\n"");
    
    }
    
    
    
	return 0;
}
"
2762,91,91,0,102,A2016/Z3/Z3/student4108,A2016/Z3/Z3/student2526,"#include <stdio.h>


int main() {
	
	int i, k, br, j, mat[200][200],m,n,a,b,temp;
	
	/* dio 1: unos matrice */
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"", &m, &n);
		if(m<1||m>=200 || n<1 || n>=200){
			printf(""Brojevi nisu u trazenom opsegu.\n"");
		}
		
	}while(m<1||m>200 ||n<1|| n>200);	
	
	
	/* dio 2: unos elemenata */
	
		printf(""Unesite elemente matrice: "");
		for (i=0; i<m; i++) {
			for (j=0; j<n; j++) {
				scanf(""%d"", &mat[i][j]);
	}
	
}	
	/* dio 3: poredjenje i izbacivanje redova */
	
		for (i=0; i<n; i++) {
			for (j=i+1;j<m;j++){
				br=0;
				
				for(k=0;k<n;k++){
					if(mat[i][k]==mat[j][k]){
						br++;
					}
					if(br==n){
						for (a=j+1;a<m;a++){
							for(b=0;b<n;b++){
								temp=mat[m-1][n];
								mat[m-1][n]=mat[m][n];
								mat[m][n]=temp;
							}
						}
						m--;
						j--;
					}
				}
				
			}
    }
	


	/* dio 4: poredjenje i izbacivanje kolona */
	
		for (i=0; i<n; i++) {
			for (j=i+1;j<n;j++){
				br=0;
				
				for(k=0;k<m;k++){
					if(mat[k][i]==mat[k][j]){
						br++;
					}
					if(br==m){
						for (a=j+1;a<n;a++){
							for(b=0;b<m;b++){
								temp=mat[n][m-1];
								mat[n][m-1]=mat[n][m];
								mat[n][m]=temp;
							}
						}
						n--;
						j--;
					}
				}
				
			}
    }
	

	
	
	
	
	
	
	
	
	
	/*ispis matrice*/
	
	
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			printf(""%5d"", mat[i][j]);
		}
		printf(""\n"");
	}
	
	
	
	
	
	
	
	
	return 0;
}
","#include <stdio.h>

	
int main() {
	int matrica[200][200],j,M,N,i,k=0,m,n,temp;
	int brojac=0;
	
	/* Unos dimenzija matrice */ 
	
	do{
	printf (""Unesite brojeve M i N:"");
	scanf (""%d %d"",&M,&N);
	if (M<1||M>200||N<1||N>200) printf ("" Brojevi nisu u trazenom opsegu.\n"");
	}while(M<1||M>200||N<1||N>200);
	
	/* Unos elemenata matrice */ 
	
	printf ("" Unesite elemente matrice: "");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			scanf (""%d"",&matrica[i][j]);
		}
	}
	
	/* Poredenje i izbacivanje redova*/ 
	
	for (i=0;i<M;i++){
		for (j=i+1;j<M;j++)
		{
			brojac=0;
			for (k=0;k<N;k++){
				if(matrica[i][k]==matrica[j][k]){
					brojac++;
				}
				if(brojac==N){
					for (m=j+1;m<M;m++){ 
						for (n=0;n<N;n++){
							temp=matrica[m-1][n];
						    matrica[m-1][n]=matrica[m][n];
						    matrica[m][n]=temp;
						}
					}
					M--;
					j--;
				}
			}
		}
	}
	
	/* Poredenje i izbacivanje kolona*/ 
	
	for (i=0;i<N;i++){
		for (j=i+1;j<N;j++){
			brojac=0;
			for (k=0;k<M;k++){
				if(matrica[k][i]==matrica[k][j]){
					brojac++;
				}
				if(brojac==M){
					for (m=j+1;m<N;m++){ 
						for (n=0;n<M;n++){
							temp=matrica[n][m-1];
						    matrica[n][m-1]=matrica[n][m];
						    matrica[n][m]=temp;
						}
					}
					N--;
					j--;
				}
			}
		}
	}	
	
	/* Ispis matrice nakon izbacivanja  */ 
	
	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			printf (""%5d"",matrica[i][j]);
		}
		printf(""\n"");
	}
	

	return 0;
}
"
2766,94,94,0,31,A2016/Z1/Z4/student4852,A2016/Z1/Z4/student9946,"#include <stdio.h>

int main() {
	int n,i,j;
	do{
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
		if(n<=0||n>50)
		printf(""Pogresan unos\n"");	}
	while(n<=0||n>50);
	if(n==1){
	printf(""***"");
	return 0;}
	
	
	for(i=0;i<n;i++){
		for(j=0;j<4*n-3;j++){
			if(i==j||2*n-2-i==j||2*n-2+i==j||4*n-4-i==j){
			printf(""*"");
			}
			else
			printf("" "");
		}printf(""\n"");
		}

	return 0;
}
","#include <stdio.h>
int main ()
{
    int n,i,j;
    do {
        printf (""Unesite broj n: "");
        scanf(""%d"" ,&n);
        if(n<=0 || n>50) {
            printf(""Pogresan unos\n"");
        }

    } while (n<=0 || n>50);
    if (n==1) {
        printf (""***"");
        return 0;
    }

    for(i=0; i<n ; i++) {
        for(j=0; j<4*n-3 ; j++) {
            if(i==j || 2*n-2-i==j) {
                printf(""*"");
            }

            else if (2*n-2+i==j || 4*n-4-i==j) {
                printf(""*"");
            }

            else {
                printf("" "");
            }
        }
        printf(""\n"");
    }

    return 0;
}
"
2767,98,98,0,72,A2016/Z4/Z2/student9318,A2016/Z4/Z2/student8665,"#include <stdio.h>
#define DUZ 95

int vrati_najveci(int *niz,int vel){
	int i,j = 0;
	static int vrijednost = -1;
	int max = niz[0];
	for(i = 0;i < vel; i++)
		if(niz[i] > max) {max = niz[i]; j = i;}
	/*promijenili smo mu vrijednost,da sl put kad pozevemo da vrati sl. max */
	niz[j] = vrijednost;
	vrijednost--;
	/*treba nam pozicija navjeceg */
	return j;
}

char *kodiraj(char *tekst,char *tablica){
	char *pocetak = tekst,*pamti = tablica;
	int brojac[DUZ] = {0}, i;
	while (*tekst != '\0') brojac[*tekst++ - 32]++;
	for(i = 0; i < DUZ; i++) 
	*tablica++ = vrati_najveci(brojac,DUZ) + 32;
	for(i = 0; i < DUZ; i++)
		if(brojac[i] == 0) *tablica++ = i + 32;
	tablica = '\0';
	tekst = pocetak;
	/* modifikujemo primljeni string 126 - pozicija u tablici*/
	while (*tekst != '\0') {
		tablica = pamti;
			while (*tablica != '\0') {
				if(*tablica == *tekst){	*tekst = 126 - (tablica - pamti); break;}
				tablica++;
				
			}
		tekst++;
	}
	return pocetak;
}

char *dekodiraj(char *tekst,char *tablica){
	char *pocetak = tekst,*pamti = tablica;
	int a;
	while (*tekst != '\0') {
		tablica = pamti;
			while (*tablica != '\0') {
				if(*tablica == *tekst){
								a = 126 -  *tablica;						
							*tekst = *(pamti + a) ;
							break;
					}
				tablica++;
			}
		tekst++;
	}
	return pocetak;
}

int main() {
	/* 
	 char tekst[] = ""t~|n|x~{}w{o~s}x|~{}w{yuz{y~wzx|~v}q|vyuzpr}"";
    char sifrarnik[100] = "" eotaimsdrUcjknuv!"";
    int i;
    dekodiraj(tekst, sifrarnik);
    printf(""%s"", tekst);
    printf(""\n%s"", sifrarnik);
	return 0;
	*/
	char tekst[] = ""LLMLNLNMONM"";
char sifrarnik[100] = """";
int i;
kodiraj(tekst, sifrarnik);
printf(""%s\n"", tekst);
for (i=0; i<10; i++) printf(""%c"", sifrarnik[i]);
dekodiraj(tekst, sifrarnik);
printf(""\n%s"", tekst);
return 0;
	
}","#include <stdio.h>
#define DUZ 95

int vrati_najveci(int *niz,int vel){
	int i,j = 0;
	static int vrijednost = -1;
	int max = niz[0];
	for(i = 0;i < vel; i++)
		if(niz[i] > max) {max = niz[i]; j = i;}
	/*promijenili smo mu vrijednost,da sl put kad pozevemo da vrati sl. max */
	niz[j] = vrijednost;
	vrijednost--;
	/*treba nam pozicija navjeceg */
	return j;
}

char *kodiraj(char *tekst,char *tablica){
	char *pocetak = tekst,*pamti = tablica;
	int brojac[DUZ] = {0}, i;
	while (*tekst != '\0') brojac[*tekst++ - 32]++;
	for(i = 0; i < DUZ; i++) 
	*tablica++ = vrati_najveci(brojac,DUZ) + 32;
	for(i = 0; i < DUZ; i++)
		if(brojac[i] == 0) *tablica++ = i + 32;
	tablica = '\0';
	tekst = pocetak;
	/* modifikujemo primljeni string 126 - pozicija u tablici*/
	while (*tekst != '\0') {
		tablica = pamti;
			while (*tablica != '\0') {
				if(*tablica == *tekst){	*tekst = 126 - (tablica - pamti); break;}
				tablica++;
				
			}
		tekst++;
	}
	return pocetak;
}

char *dekodiraj(char *tekst,char *tablica){
	char *pocetak = tekst,*pamti = tablica;
	int a;
	while (*tekst != '\0') {
		tablica = pamti;
			while (*tablica != '\0') {
				if(*tablica == *tekst){
								a = 126 -  *tablica;						
							*tekst = *(pamti + a) ;
							break;
					}
				tablica++;
			}
		tekst++;
	}
	return pocetak;
}

int main() {
	/* 
	 char tekst[] = ""t~|n|x~{}w{o~s}x|~{}w{yuz{y~wzx|~v}q|vyuzpr}"";
    char sifrarnik[100] = "" eotaimsdrUcjknuv!"";
    int i;
    dekodiraj(tekst, sifrarnik);
    printf(""%s"", tekst);
    printf(""\n%s"", sifrarnik);
	return 0;
	*/
	char tekst[] = ""LLMLNLNMONM"";
char sifrarnik[100] = """";
int i;
kodiraj(tekst, sifrarnik);
printf(""%s\n"", tekst);
for (i=0; i<10; i++) printf(""%c"", sifrarnik[i]);
dekodiraj(tekst, sifrarnik);
printf(""\n%s"", tekst);
return 0;
	
}"
2782,94,94,0,13,A2016/Z2/Z1/student8393,A2016/Z2/Z1/student3288,"#include <stdio.h>
#include <math.h>

int main() {
	int n,x,a,b,rez=0,c=1;
    printf(""Unesite broj: "");
    scanf(""%d"", &n);
    	while(n>=10 || n<=-10) {
    	    a=n%10;
    	    b=n%100;
    	    b=b/10;
    	    x=fabs(a-b)*c; c*=10;
    	    rez=rez+x;
    	    n=n/10;
    	    }
    printf(""%d"",rez);
	return 0;
}
","#include <stdio.h>
#include <math.h>

int main() {
	int n,x,a,b,rez=0,c=1;
    printf(""Unesite broj: "");
    scanf(""%d"", &n);
    	while(n>=10 || n<=-10) {
    	    a=n%10;
    	    b=n%100;
    	    b=b/10;
    	    x=fabs(a-b)*c; c*=10;
    	    rez=rez+x;
    	    n=n/10;
    	    }
    printf(""%d"",rez);
	return 0;
}
"
2787,25,25,0,79,A2016/Z5/Z3/student6956,A2016/Z5/Z3/student6548,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200
struct Vrijeme{
	int sati, minute, sekunde;
};

struct Cas{
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};


char unesi(char niz[], int velicina){
	char znak=getchar();
	int vr=znak;
	int i=0;
	while (znak=='\n') 
	znak=getchar();
	while (i<velicina-1 && znak!='\n' && vr>0){
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	return znak;
}
void ocisti(char znak){
	int ima=0;
	if(znak=='\0') return;
	while(znak!='\n')
	znak=getchar();
}
int ucitaj_datoteku(struct Cas raspored[]){
	FILE* ulaz=fopen(""raspored.dat"",""rb+"");
	FILE* ulaz1=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL || ulaz1==NULL){
		return 0;
	}
	int ucitano=fread(raspored,sizeof(struct Cas), KAPACITET, ulaz);
	int ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);
	fclose(ulaz);
	fclose(ulaz1);
	if(ucitano==ucitano1) 
	return ucitano;
}

int MAX(struct Cas raspored[], int broj_casova){
	int nasao=0;
	
	int i,j,max=0,indexmaxa=0;
	
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max){
			nasao=1;
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	if(raspored[indexmaxa].kraj.minute==0 && nasao==1) max=max-1;
	if(nasao == 1)return max;
}

int MIN(struct Cas raspored[],int broj_casova){
	int i, j, min=25;
	int nasao=0;
	
	for(i=0; i<broj_casova; i++){
		if(raspored[i].pocetak.sati<min) 
		nasao=1;
		min=raspored[i].pocetak.sati;
	}
	if(nasao==1)
	return min;
}

void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k;
	
	printf(""\n       "");
	printf(""PON       "");
	printf(""UTO       "");
	printf(""SRI       "");
	printf(""CET       "");
	printf(""PET       "");
	printf(""SUB\n"");
	
	for(i=MIN(raspored,broj_casova);i<=MAX(raspored,broj_casova);i++){
		if(i<10) printf(""9:00   "");
		else printf(""%d:00  "",i);
		
		for(j=1;j<7;j++){
			for(k=0;k<broj_casova;k++)
			if (raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i){
				printf(""%-10s"", raspored[k].predmet);
				break;
			}
			if(k==broj_casova)
			printf(""          "");
		}
		printf(""\n"");
	}
	
}

void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
	int i;
	printf(""Uneseni su casovi: "");
	int k=1;
	int brojac=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			printf(""\n%d) %s ("",k++,raspored[i].predmet);
			if(raspored[i].pocetak.sati<10) printf(""0"");
			printf(""%d:"",raspored[i].pocetak.sati);
			if(raspored[i].pocetak.minute<10) printf(""0"");
			printf(""%d-"",raspored[i].pocetak.minute);
			if(raspored[i].kraj.sati<10) printf(""0"");
			printf(""%d:"",raspored[i].kraj.sati);
			if(raspored[i].kraj.minute<10) printf(""0"");
			printf(""%d"",raspored[i].kraj.minute);
			printf("")"");
		}
		
		brojac++;
	}
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	int zapisano; int nova;
	FILE* ulaz=fopen(""raspored.dat"",""wb+"");
	FILE* ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL || ulaz1==NULL){
		return 0;
	}
	
	nova=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz);
	zapisano=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz1);
	
	fclose(ulaz);
	fclose(ulaz1);
	
	if(zapisano>=1 && nova==zapisano) return 1;
	else
	return 0;
}

void obrisi_cas(struct Cas raspored[],int broj_casova,int dan, int redni_broj){
	
	int i,j=0,obrisan=0;
	
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan) j++;
		if(redni_broj==j){
			obrisan=1;
			for(;i<broj_casova-1;i++)
			raspored[i]=raspored[i+1];
			break;
		}
	}
}

int PorediVrj(struct Vrijeme t1, struct Vrijeme t2){
	int d1=t1.sati*3600 + t1.minute*60 + t1.sekunde;
	int d2=t2.sati*3600 + t2.minute*60 + t2.sekunde;
	
	if(d1>d2) return 1;
	if(d1<d2) return -1;
	if(d1==d2) return 0;
	
	return -2;
}

int preklapanje(struct Cas raspored[],int broj_casova, struct Cas cas){
	
	int flag=0;
	int i;
	for(i=0;i<broj_casova;i++){
		int prvi=PorediVrj(raspored[i].kraj,cas.pocetak);
		int drugi=PorediVrj(cas.kraj,raspored[i].pocetak);
		
		if(prvi==1 && drugi==1 && (cas.dan_u_sedmici==raspored[i].dan_u_sedmici)){
			flag=1;
			break;
		}
	}
	
	return flag;
}

int dodaj_cas(struct Cas raspored[],int broj_casova, const char* predmet, int trajanje){
	
	if(broj_casova==200) return 0;
	int i,j,preklop;
	int dokle=19-trajanje;
	
	for(i=0;i<6;i++)
	for(j=9;j<=dokle;j++){
		struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
		struct Cas cas1={""pom"",2,{0,0,0},{0,0,0}};
		char*q=cas.predmet,*p=(char*)predmet;
		
		while(*q++=*p++);
		char*a=cas1.predmet;
		char*b=cas1.predmet;
		if(a==b)
		preklop=preklapanje(raspored,broj_casova,cas);
		if(preklop==0){
			raspored[broj_casova]=cas;
			return 1;
		}
	}
	return 0;
}

void promijeni_cas(struct Cas raspored[], int broj_casova,int dan,int redni_broj,struct Cas promjena){
	
	int i, redni=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
		raspored[i]=promjena;
	}
}

int main() {
	int opcija, broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do{
		printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
		scanf(""%d"",&opcija);
		switch(opcija){
			case 0: 
			{
				zapisi_datoteku(raspored,broj_casova);
				break;
			}
			case 1:
			{
				ispis_rasporeda(raspored,broj_casova);
				break;
			}
			case 2:
			{
				int br_casova, dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				ocisti(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				int vr=dodan;
				if(vr==0)
				printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
				if(vr==1)
				broj_casova++;
				
				break;
			}
			
			case 3:
			{
				struct Cas promjena;
				int dan, redni;
				char*q,*p;
				char znak, predmet[10];
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"", &dan);
				int BROJ=broj_casova;
				ispisi_dan(raspored,BROJ,dan);
				promjena.dan_u_sedmici=dan;
				int dani=dan+7;
				printf(""\nIzaberite koji cas zelite promijeniti:  Naziv predmeta: "");
				scanf(""%d"",&redni);
				ocisti(unesi(predmet,10));
				
				q=promjena.predmet;
				p=predmet;
				strcpy(q,p);
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c%d"",&promjena.pocetak.sati,&znak,&promjena.pocetak.minute);
				scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				
				
				if(dani>0) promijeni_cas(raspored, BROJ, dan, redni, promjena);
				break;
			}
			
			case 4:
			{
				int dan, redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"", &dan);
				
				ispisi_dan(raspored,broj_casova,dan);
				
				printf(""\nIzaberite koji cas zelite obrisati: "");
				scanf(""%d"", &redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
				printf("" Cas obrisan\n"");
				broj_casova--;
			}
			
			
			
		}
		
	}
	
	while(opcija!=0);
	
	return 0;
}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200

struct Vrijeme{
	int sati,minute,sekunde;
};

struct Cas {
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};

char unesi(char niz[], int velicina){
	char znak=getchar();
	int vel=velicina;
		int i = 0, k=0;
	if (znak== '\n')
		znak = getchar();
	while (i<vel && znak !='\n'){
		niz[i] = znak;
		i++;k++;
		znak=getchar();
	}
	niz[i]='\0';
	return znak;
}

void cln(char znak){
	while(znak!='\n')
		znak=getchar();
		
}

int ucitaj_datoteku(struct Cas raspored[]){
	FILE* dat = fopen(""raspored.dat"", ""rb"");
	if(dat==NULL) return 0;
	int ucitanih=fread(raspored,sizeof(struct Cas), KAPACITET,dat);
	fclose(dat);
	return ucitanih;
}
void isp(int vel){
	int x;
	int veli=vel/2;
	for(x=0;x<veli;x++)
		printf(""  "");
		
}
void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k,max=0,min=100;
	int indexmaxa=0;
	
	for (i=0;i<broj_casova;i++){
		if(raspored [i].pocetak.sati<min)
			min=raspored[i].pocetak.sati;
	} 
	printf(""\n       PON       UTO       SRI""); //RAZMAK=7mjesta
	printf(""       CET       "");
	printf(""PET       SUB\n"");
	
int mintt=0;
int indexpamtimo;
for (i=0; i<broj_casova;i++){
	if (raspored[i].kraj.sati>max){
		max=raspored[i].kraj.sati;
		mintt=raspored[i].kraj.minute;
		indexpamtimo=1;
	}
}

int x;
int s,dan,n;
if(mintt==0) max=max-1;
int poc=min;
int kraj=max;
int ukupno=broj_casova;
	for(i=poc;i<=kraj;i++){
		if(i<10) printf(""%d:00   "",i); //4mjesta
	else printf(""%02d:00  "",i);
		for(j=1;j<7;j++){
			
			for(k=0;k<ukupno;k++){
				if(max>0){
					dan=raspored[k].dan_u_sedmici;
					n=raspored[k].kraj.sati;
				if (raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j && n>=i){
						printf(""%-10s"",raspored[k].predmet);
						break;
					}}}
					if(k==ukupno && ukupno>-1)
					isp(10);
		}
	printf(""\n"");
}
}

void pomispis(int k, char*s,int sat, int min, int sat1, int min1){
	printf(""\n%d) %s ("",k++,s);
	printf(""%02d:%02d-"",sat,min);
	printf(""%02d:%02d)"",sat1,min1);
}
void ispisi_dan(struct Cas raspored[], int broj_casova,int dan){
	int i,k=1;
		printf(""Uneseni su casovi: "");
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			int pocs=raspored[i].pocetak.sati;
			int pocm=raspored[i].pocetak.minute;
			int krajs=raspored[i].kraj.sati;
			int krajm=raspored[i].kraj.minute;
		pomispis(k++,raspored[i].predmet,pocs,pocm,krajs,krajm);
		
		}
	}
}


	
int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	FILE *ulaz=fopen(""raspored.dat"",""wb+"");
	FILE *ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL || ulaz1==NULL)
		return 0;
	int nova=fwrite(raspored, sizeof (struct Cas), broj_casova,ulaz);
	int zapisano=fwrite(raspored,sizeof(struct Cas), broj_casova,ulaz1);
	if(nova!=zapisano) return 0;
	fclose(ulaz);
	fclose(ulaz1);
	if (nova>0) return 1;
	else
		return 0;
}


void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,k=0,j;
	int bezzadnjeg=broj_casova-1;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			k++;
			if(k==redni_broj){
				for(j=i;j<bezzadnjeg;j++)
				raspored[j]=raspored[j+1];
				return;
			break;
			}
		}}}
int poredba(int p, int d){
	if (p > d) return 1;
	if (p < d) return -1;
	if (p == d) return 0;
}
int Poredi(struct Vrijeme t1, struct Vrijeme t2, int vel)
{
		int vr = t1.sati*vel*vel + t1.minute*vel + t1.sekunde, vr2 = t2.sati*vel*vel + t2.minute*vel + t2.sekunde;
		return poredba(vr,vr2);
		
}
int preklapanje (struct Cas raspored[],int broj_casova, struct Cas cas)
{
	
	int ima = 0;
	int i,prvi;
	for (i = 0; i < broj_casova; i++) {
		prvi=Poredi(raspored[i].kraj,cas.pocetak,60);
		if(prvi == 1 && Poredi(cas.kraj, raspored[i].pocetak,60)==1 && (cas.dan_u_sedmici==raspored[i].dan_u_sedmici))
		ima=1;
		break;
	}


return ima;
}


int dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje){
	if(broj_casova==200) return 0;
	int i,j,preklop;
	int ukupno=19-trajanje;
	for (i=0; i<6; i++){
		for(j=9; j<=ukupno; j++){
			struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
			char *q=cas.predmet,*p=(char*) predmet;
			struct Cas cc;
			while (*q++=*p++);
			preklop=preklapanje(raspored,broj_casova,cas);
			if(preklop==1) continue;
			else{
				raspored[broj_casova]=cas;
				goto jedan;
			}
		}
	}
	
	return 0;
	jedan:
	return 1;
}


void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj,struct Cas promjena){
	int i, redni=0;
	for(i=0; i<broj_casova; i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
			raspored[i]=promjena;
	}
}
void mjesto(int br){
	printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br);
}


int main() {
	int opcija, broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do{
		printf(""1) Ispis rasporeda\n"");
		printf(""2) Dodavanje casa\n3) Promjena casa\n"");
		printf(""4) Brisanje casa\n0) Kraj rada\n"");
		printf(""Izaberite opciju: "");
		scanf(""%d"",&opcija);
		
			if (opcija!=4 && opcija!=3 && opcija!=0 && opcija!=1){
				int br_casova,dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				cln(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				int vr=dodan;
				if(vr==0)
				mjesto(br_casova);
				if(vr==1)
				broj_casova++;
			}
			if (opcija!=0 && opcija!=3 && opcija!=2 && opcija!=1){
				int dan, redni;
				printf(""Unesite dan "");
				printf(""1=ponedjeljak, 2=utorak...,6=subota: "");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				printf(""\nIzaberite koji cas zelite obrisati: "");
				scanf(""%d"",&redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
					broj_casova--;
				printf(""Cas obrisan\n"");
			}
			if(opcija==0)
				zapisi_datoteku(raspored,broj_casova);
			if(opcija!=4 && opcija!=3 && opcija!=2 && opcija!=0);
				ispis_rasporeda(raspored,broj_casova);
			if(opcija!=4 && opcija!=0 && opcija!=2 && opcija!=1){
				struct Cas promjena;
				int dan,redni;
				char znak,predmet[10];
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota):"");
				scanf(""%d"",&dan);
				ispisi_dan(raspored,broj_casova,dan);
				promjena.dan_u_sedmici=dan;
				printf(""\nIzaberite koji cas zelite promijeniti: Naziv predmeta: "");
				scanf(""%d"",&redni);
				cln(unesi(predmet,10));
				char *q=promjena.predmet;
				char *p=predmet;
				while(*q++=*p++);
				int prvi=broj_casova;
				int drugi=dan;
				int treci=redni;
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c"",&promjena.pocetak.sati,&znak);
				scanf(""%d"",&promjena.pocetak.minute);
				scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				promijeni_cas(raspored,prvi,drugi,redni,promjena);
			}
		
	} while(opcija!=0);
	return 0;
}"
2800,15,15,0,24,A2016/Z5/Z1/student6956,A2016/Z5/Z1/student4095,"#include <stdio.h>
#define epsilon 0.0001
struct Student{
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

int uporedi(char* s1, char* s2){
	while(*s1 != '\0' && *s2 != '\0'){
		if(*s1 < *s2) return -1;
		if(*s1 > *s2) return 1;
		
		s1++; s2++;
	}
	
	if(*s1!='\0') return 1;
	
	if(*s2 != '\0') return -1;
	
	return 0;
}


float prosjek(int niz[], int vel){
	if (vel==0) return 5;
	
	int i=0;
	
	float suma=0;
	
	for(i=0; i<vel; i++) 
	
	if (niz[i]==5) return 5;
	
	for(i=0; i<vel; i++) suma=suma+niz[i];
	
	return suma/vel;
}

int dalijeveci(struct Student pr, struct Student dr){
	
	
	if(prosjek(pr.ocjene,pr.br_ocjena)>prosjek(dr.ocjene, dr.br_ocjena)) return 1;
	
	if(prosjek(pr.ocjene,pr.br_ocjena)<prosjek(dr.ocjene,dr.br_ocjena)) return 0;
	
	if(uporedi(pr.prezime,dr.prezime)==-1) return 1;
	if(uporedi(pr.prezime, dr.prezime)==1) return 0;
	if(uporedi(pr.ime,dr.ime)==-1) return 1;
	if(uporedi(pr.ime,dr.ime)==1) return 0;
	
	else return 1;
	
	
}

int genijalci(struct Student niz[], int vel, double prosjekk){
	
	int i,j,indexprvi,indexdrugi,indextreci,indexmin=0;
	
	double maxprvi, maxdrugi, maxtreci, temp_prosjek, min=10;
	
	for(i=0; i<vel; i++){
		temp_prosjek=prosjek(niz[i].ocjene, niz[i].br_ocjena);
		
		if(prosjekk-temp_prosjek > epsilon){
			for(j=i; j<vel-1; j++){
				niz[j]=niz[j+1];
			}
			vel--;
			i--;
		}
	}
	
	for(i=0;i<vel;i++){
		temp_prosjek=prosjek(niz[i].ocjene,niz[i].br_ocjena);
		if(min-temp_prosjek > epsilon){
			min=temp_prosjek;
			indexmin=i;
		}
	}
	
	if(vel==0) return 0;
	
	if(vel==1) goto jedan;
	
	if(vel==2) goto dva;
	
	if(vel>=3) goto tri;
	
	jedan:
	
	indexprvi=indexmin;
	printf(""\n%s %s\n"", niz[indexprvi].prezime,niz[indexprvi].ime);
	return vel;
	
	
	dva:
	
	indexprvi=indexmin;
	for(i=0;i<vel;i++){
		if(dalijeveci(niz[i],niz[indexprvi]))
		
		indexprvi=i;
	}
	
	
	indexdrugi=indexmin;
	for(i=0;i<vel;i++){
		if(i==indexprvi) continue;
		
		if(dalijeveci(niz[i],niz[indexdrugi]))
		indexdrugi=i;
	}
	
	
	printf (""%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);
	printf (""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
	return vel;
	
	tri:
	indexprvi=indexmin;
	for(i=0;i<vel;i++){
		if(dalijeveci(niz[i],niz[indexprvi])) indexprvi=i;
	}
	
	indexdrugi=indexmin;
	
	for(i=0;i<vel;i++){
		if(i==indexprvi) continue;
		
		if(dalijeveci(niz[i],niz[indexdrugi])) 
		indexdrugi=i;
	}
	indextreci=indexmin;
	for(i=0;i<vel;i++){
		if(i==indexprvi || i==indexdrugi) continue;
		if(dalijeveci(niz[i], niz[indextreci]))
		indextreci=i;
	}
	printf(""%s %s\n"",niz[indexprvi].prezime,niz[indexprvi].ime);
	printf(""%s %s\n"",niz[indexdrugi].prezime,niz[indexdrugi].ime);
	printf(""%s %s\n"",niz[indextreci].prezime, niz[indextreci].ime);
	
	return vel;
	
	
}


int main() {
	struct Student studenti[]={
		{""Meho"", ""Behic"", {10, 9}, 2},
		{""Meho"", ""Aehic"", {10, 8}, 2},
		{""Meho"", ""Cehic"", {10, 9, 8, 7, 6}, 5},
		{""Meho"", ""Dehic"", {6, 9}, 2},
		{""Meho"", ""Zehic"", {10}, 1},
		{""Meho"", ""Nekic"", {10, 10, 5, 10, 10, 10, 10}, 7},
		{""Meho"", ""Oehic"", {10, 9, 9, 9}, 4}
		};
	int vel = sizeof studenti / sizeof studenti[0], i;
	
	vel = genijalci(studenti, vel, 9.8);
	printf(""Vel: %dStudenti:"", vel);
	
	for(i=0; i<vel; ++i)
	printf(""%s %s\n"", studenti[i].prezime, studenti[i].ime);
	
	
	
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define EPSILON 0.0001


struct Student {
    char ime[20], prezime [20];
    int ocjene[50];
    int br_ocjena;
};

/*funkcija za uporedjivanje stringova*/
int uporedi (char* s1, char* s2)
{
	while (s1!='\0' && s2!='\0')
	{
		if (*s1<*s2) return -1;
		if (*s1>*s2) return 1;
		s1++;
		s2++;
	}
	if (*s1!='\0') return 1;
	if (*s2!='\0') return -1;
	return 0;
}

/*Funkcija za racunanje prosjeka ocjena*/
double racunanje_prosjeka (struct Student student) {
	int j;
	double suma=0, prosjek_studenta=0;
	/*ako je broj ocjena jednak nuli*/
	if (student.br_ocjena==0)
	{
		prosjek_studenta=5.;
	}
		
	for (j=0; j<student.br_ocjena; j++)
	{
		/*ako postoji ocjena 5*/
		if (student.ocjene[j]==5)
		{	
			prosjek_studenta=5.0;
			break;
		}
		else
			suma+=student.ocjene[j];
	}
		if (prosjek_studenta!=5.)
			prosjek_studenta=suma/student.br_ocjena;
		
		return prosjek_studenta;
}

/*funkcija koja preslikava jednu strukturu u drugu*/
void izbacivanje (struct Student* novi, int vel)
{
	int i;
	for (i=0; i<vel; i++)
	{
		*(novi+i)=*(novi+i+1);
		/*printf(""%s"", novi[i].ime);*/
	}
}
/*odredjivanje najboljih studenata*/
void najbolji_studenti(struct Student* studenti, int vel, double prosjek)
{
	/*pronalazenje indeksa prva tri najbolja studenta (ako postoje)*/
	int i, index1=0, index2=0, index3=0;
	int n, k;
	int k1, k2, k3;
	/*Pronalazimo prvi sa najvecim prosjekom*/
	for (i=0; i<vel; i++)
	{
		if (racunanje_prosjeka(studenti[index1])<racunanje_prosjeka(studenti[i]))
			index1=i;
	}
	/*ako je broj studenata veci od 1 trazimo sljedeci najveci prosjek*/
	if (vel>1)
	{
		if (index1==index2)
			index2=index1+1;
		
		for(i=0; i<vel; i++)
		{
			if (i!=index1 && racunanje_prosjeka(studenti[index2])<racunanje_prosjeka(studenti[i]))
				index2=i;
		}
		
		/*ako je broj studenata tacno jednak 2, uporedjujemo prosjeke, te prezime i ime po potrebi i vrsimo ispis*/
		if (vel==2)
		{
			if(fabs(racunanje_prosjeka(studenti[index1])-racunanje_prosjeka(studenti[index2]))<EPSILON)
			{
				n=uporedi(studenti[index1].prezime, studenti[index2].prezime);
				if (n==-1)
				{
					printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
					printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
					return;
				}
				else if (n==1)
				{
					printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
					printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
					return;
				}
				else if (n==0)
				{
					k=uporedi(studenti[index1].ime, studenti[index2].ime);
				
					if(k==-1)
					{
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						return;
					}
					else if (k==1)
					{
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						return;
					}
					else 
					{
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						return;
					}
				}
			}
			else 
			{
				printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
				printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
				return;
			}
		}
		/*...u protivnom trazimo i treci najveci prosjek*/
		else  
		{
			if (index1==index3 || index3==index2)
				index3=index2+1;
			
			for (i=0; i<vel; i++)
			{
				if (i!=index1 && i!=index2 && racunanje_prosjeka(studenti[index3])<racunanje_prosjeka(studenti[i]))
					index3=i;
			}
			
			/*ukoliko su svi prosjeci razliciti*/
			if(racunanje_prosjeka(studenti[index1])!=racunanje_prosjeka(studenti[index2]) && racunanje_prosjeka(studenti[index2])!=racunanje_prosjeka(studenti[index3]) && racunanje_prosjeka(studenti[index1])!=racunanje_prosjeka(studenti[index3]))
			{
				printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
				printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
				printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
				return;
			}
			/*ukoliko su prvi i drugi prosjek jednaki, dok treci je manji od prva dva*/
			else if (racunanje_prosjeka(studenti[index1])==racunanje_prosjeka(studenti[index2]) && racunanje_prosjeka(studenti[index1])!=racunanje_prosjeka(studenti[index3]))
			{
				n=uporedi(studenti[index1].prezime, studenti[index2].prezime);
				if (n==-1)
				{
					printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
					printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
					printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
					return;
				}
				else if (n==1)
				{
					printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
					printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
					printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
					return;
				}
				else if (n==0)
				{
					k=uporedi(studenti[index1].ime, studenti[index2].ime);
				
					if(k==-1)
					{
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
						return;
					}
					else if (k==1)
					{
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
						return;
					}
					else 
					{
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
						return;
					}
				}
			}
			/*ukoliko su svi prosjeci ocjena jednaki*/
			else
			{
				/*u zavisnosti od povratne vrijednosti za k1,k2,k3 vrsiti ce se razliciti ispisi*/
				k1=uporedi(studenti[index1].prezime, studenti[index2].prezime);
				k2=uporedi(studenti[index1].prezime, studenti[index3].prezime);
				k3=uporedi(studenti[index2].prezime, studenti[index3].prezime);
				
				if (k1!=0 && k2!=0 && k3!=0)
				{
					if (k1==-1 && k2==-1 && k3==-1)
					{
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
						return;
					}
					else if (k1==-1 && k2==-1)
					{
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						return;
					}
					else if (k1==1 && k2==-1 && k3==-1)
					{
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
						return;
					}
					else if (k1==-1 && k2==1 && k3==1)
					{
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						return;
					}
					else if (k1==1 && k2==1 && k3==-1)
					{
						printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						return;
					}
					else 
					{
						printf(""%s %s\n"", studenti[index3].prezime, studenti[index3].ime);
						printf(""%s %s\n"", studenti[index2].prezime, studenti[index2].ime);
						printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
						return;
					}
				}
			}
		}
	}
	else if (vel==1)
	{
		printf(""%s %s\n"", studenti[index1].prezime, studenti[index1].ime);
		return;
	}
	
}

int genijalci (struct Student* studenti, int vel, double prosjek)
{
	int i, j;
	for (i=0; i<vel; i++)
	{
		if (racunanje_prosjeka(studenti[i])<prosjek)
		{
			izbacivanje(studenti+i, vel-i-1);
			vel--;
			i--;
		}
	}
	
	najbolji_studenti(studenti, vel, prosjek);
	
	return vel;
}

int main()
{
	struct Student s = { ""aaaaaaaaaaaaaaaaaaa"", ""aaaaaaaaaaaaaaaaaaa"", {}, 50 };
	int i;
	for (i=0; i<50; i++) s.ocjene[i]=10;
	printf(""Vel: %llu"", sizeof s);
	/* = 244 = 20*1 (char) + 20*1 (char) + 50*4 (int) + 4 (int) */

	struct Student niz[1];
	niz[0]=s;	
	genijalci(niz, 1, 9.9);
    return 0;
}
"
2805,46,46,0,26,A2016/Z3/Z1/student2157,A2016/Z3/Z1/student7341,"#include <stdio.h>
int daj_prost() {
int j=2,broj=0;
static int i=1;
do{
i++;
for(j=2;j<=i;){
        if(i==j){
        broj=i;
        break;}
else if(i%j==0){
        break;}
else if(i%j!=0){
j++;}}
}while(broj!=i);
return broj;}

int main() {
	int A, B, i,  suma=0, b;
	printf(""Unesite brojeve A i B: "");
	scanf(""%d %d"", &A, &B);
	while(A>=B || A<=0){
	if(A<=0) {
		printf(""A nije prirodan broj. "");
		printf(""\nUnesite brojeve A i B: "");
		scanf(""%d %d"", &A, &B);
	}
	else if(A>=B){
		printf(""A nije manje od B. "");
		printf(""\nUnesite brojeve A i B: "");
		scanf(""%d %d"", &A, &B);
	}}
			for(i=0; i<B; i++){
				b=daj_prost();
				if(b>A && b<B){
				suma+=b;}
				}
	printf(""Suma prostih brojeva izmedju %d i %d je %d."", A, B, suma);
	return 0;
}
","#include <stdio.h>

int daj_prost(){
	int i;
	static int c=1;
    do{
        c++;
        for(i=2; i<c; i++){
            if(c%i==0) break;
        }
        
    }while(c!=i);
    
	return c;	
	
}

int main(){
    int a,b,j, suma=0, prostbroj;
 	printf (""Unesite brojeve A i B: "");

 	scanf(""%d%d"", &a, &b);
 	while(a<=0 || b<0 || b<=a) {
 	   if (b<=a){
 			printf(""A nije manje od B.\nUnesite brojeve A i B: "");
 			scanf(""%d%d"", &a,&b);
 		}
    	 else if (a<=0){
 			printf(""A nije prirodan broj.\nUnesite brojeve A i B: "");
 			scanf(""%d%d"", &a,&b);
  		}
 		else if(b<0){
 			printf(""B nije prirodan broj.\nUnesite brojeve A i B: "");
 			scanf(""%d%d"", &a,&b);
 		}
 	
 		
 	}
 	
 	for(j=1;j<=b;j++){
 	    prostbroj=daj_prost();
 	    if(prostbroj>a && prostbroj<b){
 	        suma+=prostbroj;
 	    }
 	    }
  printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b,suma); 	   
   
   return 0;
 	    
 	}
 	
 	
 	"
2809,86,86,0,188,A2016/Z1/Z1/student5512,A2016/Z1/Z1/student2142,"#include <stdio.h>
int main() {
	double Tb, Bb, Mb, p1, p2, P, dz, zi, Bp1, Bp2, BP, Bdz, Bzi, Mp1, Mp2, MP, Mdz, Mzi;
	int oT, oB, oM;
	printf (""Unesite bodove za Tarika: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &p1);
	if (p1>20 || p1<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &p2);
	if (p2>20 || p2<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Prisustvo: "");
	scanf (""%lf"", &P);
	if (P>10 || P<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zadace: "");
	scanf (""%lf"", &dz);
	if (dz>10 || dz<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &zi);
	if (zi>40 || zi<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	Tb=p1+p2+P+dz+zi;
	
	printf (""Unesite bodove za Bojana: \n"");
	printf (""I parcijalni ispit: "");
	scanf (""%lf"", &Bp1);
	if (Bp1>20 || Bp1<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &Bp2);
	if (Bp2>20 || Bp2<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Prisustvo: "");
	scanf (""%lf"", &BP);
	if (BP>10 || BP<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zadace: "");
	scanf (""%lf"", &Bdz);
	if (Bdz>10 || Bdz<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &Bzi);
	if (Bzi>40 || Bzi<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	Bb=Bp1+Bp2+BP+Bdz+Bzi;
	
	printf (""Unesite bodove za Mirzu: \n"");
		printf (""I parcijalni ispit: "");
	scanf (""%lf"", &Mp1);
	if (Mp1>20 || Mp1<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""II parcijalni ispit: "");
	scanf (""%lf"", &Mp2);
	if (Mp2>20 || Mp2<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Prisustvo: "");
	scanf (""%lf"", &MP);
	if (MP>10 || MP<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zadace: "");
	scanf (""%lf"", &Mdz);
	if (Mdz>10 || Mdz<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	printf (""Zavrsni ispit: "");
	scanf (""%lf"", &Mzi);
	if (Mzi>40 || Mzi<0){
		printf (""Neispravan broj bodova"");
		return 0;}
	Mb=Mp1+Mp1+MP+Mdz+Mzi;
	
	if (Tb>=55 && Tb<65)
	oT=6;
	else if (Tb>=65 && Tb<75)
	oT=7;
	else if (Tb>=75 && Tb<85)
	oT=8;
	else if (Tb>=85 && Tb<92)
	oT=9;
	else if (Tb>=92 && Tb<=100)
	oT=10;
	else oT=0;
	if (Bb>=55 && Bb<65)
	oB=6;
	else if (Bb>=65 && Bb<75)
	oB=7;
	else if (Bb>=75 && Bb<85)
	oB=8;
	else if (Bb>=85 && Bb<92)
	oB=9;
	else if (Bb>=92 && Bb<=100)
	oB=10;
	else oB=0;
	if (Mb>=55 && Mb<65)
	oM=6;
	else if (Mb>=65 && Mb<75)
	oM=7;
	else if (Mb>=75 && Mb<85)
	oM=8;
	else if (Mb>=85 && Mb<92)
	oM=9;
	else if (Mb>=92 && Mb<=100)
	oM=10;
	else oM=0;
	if (oT<6 && oB<6 && oM<6)
    printf (""Nijedan student nije polozio."");
    if (Tb>=55 && Bb>=55 && Mb>=55){
    printf (""Sva tri studenta su polozila."");
    if (oT==oB && oB==oM )
    printf (""\nSva tri studenta imaju istu ocjenu."");
    else if (oT==oB || oB==oM || oM==oT)
    printf (""\nDva od tri studenta imaju istu ocjenu."");
    else
    printf (""\nSvaki student ima razlicitu ocjenu."");}
    if ((Tb>=55 && Bb>=55 && Mb<55) || (Tb<55 && Bb>=55 && Mb>=55) || (Tb>=55 && Bb<55 && Mb>=55))
    printf (""Dva studenta su polozila."");
    if ((Tb>=55 && Bb<55 && Mb<55) || (Tb<55 && Bb>=55 && Mb<55) || (Tb<55 && Bb<55 && Mb>=55))
    printf (""Jedan student je polozio."");
   
    return 0;
	
}","#include <stdio.h>

int main() {
	float I1, II1, DZ1, P1, Z1, S1, O1, I2, II2, P2, DZ2, Z2, S2, O2, I3, II3, P3, DZ3, Z3, S3, O3;

	
	
	printf(""Unesite bodove za Tarika:\n"");
	
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &I1);
	
	if(I1<0 || I1>20)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &II1);
	
	if(II1<0 || II1>20)
	{
		printf(""Neispravan broj bodova\n"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &P1);
	
	if(P1<0 || P1>10)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}	
	
	printf(""Zadace: "");
	scanf(""%f"", &DZ1);
	
	if(DZ1<0 || DZ1>10)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Z1);
	
	if(Z1<0 || Z1>40)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	S1=I1+II1+P1+DZ1+Z1;
	
	if(S1==0 && S1<=55)
		O1=5;
	else if(S1>55 && S1<=65)
		O1=6;
	else if(S1>65 && S1<=75)
		O1=7;
	else if(S1>75 && S1<=85)
		O1=8;
	else if(S1>85 && S1<=92)
		O1=9;
	else
		O1=10;
	
	
	
	printf(""Unesite bodove za Bojana:\n"");
	
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &I2);
	
	if(I2<0 || I2>20)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &II2);
	
	if(II2<0 || II2>20)
	{
		printf(""Neispravan broj bodova\n"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &P2);
	
	if(P2<0 || P2>10)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}	
	
	printf(""Zadace: "");
	scanf(""%f"", &DZ2);
	
	if(DZ2<0 || DZ2>10)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Z2);
	
	if(Z2<0 || Z2>40)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	S2=I2+II2+P2+DZ2+Z2;
	
	if(S2==0 && S2<=55)
		O2=5;
	else if(S2>55 && S2<=65)
		O2=6;
	else if(S2>65 && S2<=75)
		O2=7;
	else if(S2>75 && S2<=85)
		O2=8;
	else if(S2>85 && S2<=92)
		O2=9;
	else
		O2=10;
		
	
	
	printf(""Unesite bodove za Mirzu:\n"");
	
	printf(""I parcijalni ispit: "");
	scanf(""%f"", &I3);
	
	if(I3<0 || I3>20)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &II3);
	
	if(II3<0 || II3>20)
	{
		printf(""Neispravan broj bodova\n"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &P3);
	
	if(P3<0 || P3>10)
	{
		printf(""Nesipravan broj bodova\n"");
		return 0;
	}	
	
	printf(""Zadace: "");
	scanf(""%f"", &DZ3);
	
	if(DZ3<0 || DZ3>10)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Z3);
	
	if(Z3<0 || Z3>40)
	{
		printf(""Nesipravan broj bodova"");
		return 0;
	}
	
	S3=I3+II3+P3+DZ3+Z3;
	
	if(S3==0 && S3<=55)
		O3=5;
	else if(S3>55 && S3<=65)
		O3=6;
	else if(S3>65 && S3<=75)
		O3=7;
	else if(S3>75 && S3<=85)
		O3=8;
	else if(S3>85 && S3<=92)
		O3=9;
	else
		O3=10;
		
	
	
	if(O1<6 && O2<6 && O3<6)
		printf(""Nijedan student nije polozio.\n"");
		
	
	if((O1>5 && O2<6 && O3) || (O1<6 && O2>5 && O3<6) || (O1<6 && O2<6 && O3>5))
		printf(""Jedan student je polozio.\n"");
		
	
	if((O1>5 && O2>5 && O3<6) || (O1>5 && O2<6 && O3>5) || (O1<6 && O2>5 && O3>5))
		printf(""Dva studenta su polozila.\n"");
		
	
	if(O1>5 && O2>5 && O3>5)
		printf(""Sva tri studenta su polozila.\n"");
		
	
	if(O1==O2 && O1==O3)
		printf(""Sva tri studenta imaju istu ocjenu."");
		
	
	if((O1==O2 && O1!=O3) || (O1==O3 && O1!=O2) || (O2==O3 && O2!=O1))
		printf(""Dva od tri studenta imaju istu ocjenu."");
	
	
	if(O1!=O2 && O1!=O3 && O2!=O3)
		printf(""Svaki student ima razlicitu ocjenu."");
		
	return 0;
}
"
2811,99,99,0,295,A2016/Z4/Z4/student8794,A2016/Z4/Z4/student1639,"#include <stdio.h>
#include <math.h>

//Zadaca 4 by @WhiteBl4ck

// Zadatak 2.

//Funkcija koja prima string i rijec, i izbaciva rijec iz stringa
void izbaci_rijec(char* s, char* s2, int vel)
{
    char *poc = s2;
    char *kraj = s2+vel;
    while ((*poc++ = *kraj++));
}
//Funkcija koja pretvara string u float
float s_to_f(char *niz)
{
    char *p = niz;
    char *d = niz;

    float suma = 0;
    int cifra ;
    int brojCifaraizatacke = 0;
    int predznak = 0;

    int decimalan = 0;
    int i = 0;

    //provjeravamo je li broj negativan
    if(*p == '-') {
        predznak = 1;
        p++;
    }
    //PRVO CEMO PROVJERITI DA LI JE BROJ UOPSTE DECIMALAN
    while(*d != '\0') {
        if(*d == '.') {
            decimalan = 1;
        }
        d++;
    }
    // ako jeste decimalan radi sljedece
    if(decimalan == 1) {
        while(*p != '\0') {
            if(*p == '.') {
                //postavljamo q na sljedece mjesto od tacke
                char *q = p+1;
                //s ovom petljom odredujemo kolko je cifara iza tacke jer q na pocetku pokazuje na prvo mjesto iza tacke
                while(*q != '\0') {
                    brojCifaraizatacke++;
                    q++;
                }
            }
            p++;
        }
        //sada p pokazuje na jedno mjesto iza niza pa ga moramo vratiti
        p--;
        //idemo odzada broja sve dok ne dodjemo na znak .
        while(*p != '.') {
            cifra = *p - '0';
            suma += cifra/(float)(pow(10,brojCifaraizatacke));
            brojCifaraizatacke--;
            p--;
        }
        //p sad pokazuje tacno na broj ispred tacke
        p--;
        //ako je broj pozitivan
        if(predznak == 0) {
            do {
                //npr asci kod cvrke je 52 pa oduzimamo asci kod 0(koji je 48) da dobijemo 4
                cifra = *p - '0';
                suma +=cifra*pow(10,i);
                i++;
                p--;
            } while(p != niz-1);
            //petlja ide do niz-1 jer se inace ne bi ispunila za prvi broj...
        } else {
            do {
                cifra = *p - '0';
                suma +=cifra*pow(10,i);
                i++;
                p--;
            } while(p != niz);   //posto je znak minus ispred petlja ide samo od niz
        }
        if(predznak == 0) {
            return suma;
        }
        return -suma;
    }
    //AAKO NIJE DECIMALAN
    if(decimalan == 0) {
        while(*p != '\0') {
            p++;
        }
        //sada pe pokazuje iza niza pa ga mroamo vratit
        p--;
        if(predznak == 0) {
            while(p != niz-1) {
                cifra = *p - '0';
                suma +=cifra*pow(10,i);
                i++;
                p--;
            }
        } else {
            while(p != niz) {
                cifra = *p - '0';
                suma +=cifra*pow(10,i);
                i++;
                p--;
            }
        }
    }

    if(predznak == 0) {
        return suma;
    }
    return -suma;
}
// Funkcija koja nam vraca duzinu jedne tacke sa kordinatama npr. (2.3,-3.6) duzina 10
int duzina(char* s)
{
    int brojac = 1;
    while(*s != '\0' && *s != ')') {
        brojac++;
        s++;
    }
    s++;
    if (*s == ',') {
        brojac++;
    }
    return brojac;
}
//Funkcija koja prima niz tacaka (kordinate x, y) i 4 realna broja koji prave pravougaonik u ravni i izbaciva sve tacke koje nisu unutar pravougaonika
char *obuhvat(char *s, float x1, float y1, float x2, float y2)
{

    char *kopija_poc = s;
    int x = 1;          // Postavljamo uslov da je string dobro unesenes
    int tacka = 0;      // Uslov za tacku

    if (*s == '\0') {
        return s;
    }

    do {

        x = 1;
        tacka = 0;
        // Provjeravamo prvi realan broj, koji mora pocinjati sa otvorenom zagradom a zavrsavati zarezom
        // Provjeravamo da li string pocinje otvorenom zagradom
        if (*s != '(') {
            x = 0;
            break;
        } else {
            s++;
        }
        if (*s == '-') {
            s ++;
        }
        if (!(*s  >= '0' && *s  <= '9')) {
            x = 0;
            break;
        }
        while (1) {

            // Provjeravmo negativne brojeve

            if (*s == '.' && tacka == 1) {
                x = 0;
                break;
            } else if (*s == '.' && (*(s -1) >= '0' && *(s -1) <= '9')) {
                tacka = 1;
            } else if (*s == ',' && ((*(s -1) >= '0' && *(s -1) <= '9') || *(s -1) == '.' )) {
                break;
            } else if (*s  == ',') {
                x = 0;
                break;
            } else if (!(*s  >= '0' && *s  <= '9')) {
                x = 0;
                break;
            }
            s++;
        }

        if ( x == 0) {
            break;
        }

        x = 1;
        tacka = 0;

        // Provjeravamo drugi realan broj, koji mora pocinjati sa zarezom a zavrsavati zatvorenom zagradom
        // Provjeravamo da li string pocinje sa zarezom
        if (*s  != ',') {
            x = 0;
            break;
        } else {
            s++;
        }
        if (*s  == '-') {
            s ++;
        }
        if (!(*s  >= '0' && *s  <= '9')) {
            x = 0;
            break;
        }
        while (1) {

            if (*s  == '.' && tacka == 1) {
                x = 0;
                break;
            } else if (*s  == '.' && (*(s -1) >= '0' && *(s -1) <= '9')) {
                tacka = 1;
            } else if (*s  == ')' && ((*(s -1) >= '0' && *(s -1) <= '9') || *(s -1) == '.' )) {

                break;
            } else if (*s  == ')') {
                x = 0;
                break;
            } else if (!(*s  >= '0' && *s  <= '9')) {
                x = 0;
                break;
            }

            if (*s == '\0')
                break;
            s++;
        }
        if ( x == 0) {
            break;
        }
        
        if (*s == '\0')
            break;
        s++;
        if ( *s == '\0' || *s == ',') {
            if (*s == '\0') {
                break;
            } else {
                s++;
            }
        } else {                    // ukoliko string nije dobro unesen vracamo NULL pokazivac i zavrsavamo program
            return NULL;
        }
    } while (1);

    if ( x == 0) {
        return NULL;
    }
    // Ako je string ispravno unesen izbacivamo sve tacke van opsega pravougaonika
    char *a = kopija_poc;       // pokazivac a postavljamo na pocetak stringa (niz tacaka sa kordinatama), i njime prolazimo kroz cijeli string
    char r_broj_x[100];         // string u kojem cuvamo kordinate tacke kako bi ih pretvorili u float
    char r_broj_y[100];
    char *b = r_broj_x;         // pokazivacem b prolazimo kroz kordinatu x i kopiramo je u r_broj_x
    char *c = r_broj_y;         // pokazivacem c prolazimo kroz kordinatu y i kopiramo je u r_broj_y
    char *poc_tacke;            // cuvamo pocetak tacke ukoliko je uslov zadovoljen da je mozemo izbaciti iz stringa
    int duzina_tacke;
    int izbaci = 0;

    while (*a != '\0') {
        if (*a == '(') {
            izbaci = 0;
            poc_tacke = a;
            duzina_tacke = duzina(poc_tacke);
            if (*(a+duzina_tacke) == '\0' && a != kopija_poc ) {
                poc_tacke = a - 1;
                duzina_tacke++;
            }
            a++;
            b = r_broj_x;
            
            while(*a != ',' && *a != '\0') {
                *b = *a;
                a++;
                b++;
            }
            *b = '\0';

            if (s_to_f(r_broj_x) < x1 || s_to_f(r_broj_x) > x2) {               // provjeravamo da li je tacka u opsegu pravougaonika 
                izbaci = 1;
            }
            a++;
            c = r_broj_y;
            
            while(*a != ')') {
                *c = *a;
                a++;
                c++;
            }
            *c = '\0';

            if (s_to_f(r_broj_y) < y1 || s_to_f(r_broj_y) > y2) {               // provjeravamo da li je tacka u opsegu pravougaonika 
                izbaci = 1;
            }
            if (izbaci) {
                izbaci_rijec(kopija_poc,poc_tacke,duzina_tacke);                // nakon izbacivanja tacke pokazivac vracamo na pocetak stringa i smanjivamo ga za 1
                a = kopija_poc;                                                 // zbog a++, kako bi provjerili pocetni element
                a--;
            }
        }
        a++;
    }
    return kopija_poc;          // vracamo pokazivac na pocetak stringa
}

//
// END OF HOMEWORK , HAD SO MUCH FUN THX :D       done by WhiteBl4ck The DotaLucker
//
int main()
{
    char n[] = ""(0,-3),(-15,4),(2,2(,(-1,217)"";
    char* rez = obuhvat(n, -3, -3, 3, 3);
    printf(""%d "", (int)rez);
    
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
void izbaci_rijec(char* s, char* s2, int vel)
{
    char *poc = s2;
    char *kraj = s2+vel;
    while ((*poc++ = *kraj++));
}
//Funkcija koja pretvara string u float
float s_to_f(char *niz)
{
    char *p = niz;
    char *d = niz;

    float suma = 0;
    int cifra ;
    int brojCifaraizatacke = 0;
    int predznak = 0;

    int decimalan = 0;
    int i = 0;

    //provjeravamo je li broj negativan
    if(*p == '-') {
        predznak = 1;
        p++;
    }
    //PRVO CEMO PROVJERITI DA LI JE BROJ UOPSTE DECIMALAN
    while(*d != '\0') {
        if(*d == '.') {
            decimalan = 1;
        }
        d++;
    }
    // ako jeste decimalan radi sljedece
    if(decimalan == 1) {
        while(*p != '\0') {
            if(*p == '.') {
                //postavljamo q na sljedece mjesto od tacke
                char *q = p+1;
                //s ovom petljom odredujemo kolko je cifara iza tacke jer q na pocetku pokazuje na prvo mjesto iza tacke
                while(*q != '\0') {
                    brojCifaraizatacke++;
                    q++;
                }
            }
            p++;
        }
        //sada p pokazuje na jedno mjesto iza niza pa ga moramo vratiti
        p--;
        //idemo odzada broja sve dok ne dodjemo na znak .
        while(*p != '.') {
            cifra = *p - '0';
            suma += cifra/(float)(pow(10,brojCifaraizatacke));
            brojCifaraizatacke--;
            p--;
        }
        //p sad pokazuje tacno na broj ispred tacke
        p--;
        //ako je broj pozitivan
        if(predznak == 0) {
            do {
                //npr asci kod cvrke je 52 pa oduzimamo asci kod 0(koji je 48) da dobijemo 4
                cifra = *p - '0';
                suma +=cifra*pow(10,i);
                i++;
                p--;
            } while(p != niz-1);
            //petlja ide do niz-1 jer se inace ne bi ispunila za prvi broj...
        } else {
            do {
                cifra = *p - '0';
                suma +=cifra*pow(10,i);
                i++;
                p--;
            } while(p != niz);   //posto je znak minus ispred petlja ide samo od niz
        }
        if(predznak == 0) {
            return suma;
        }
        return -suma;
    }
    //AAKO NIJE DECIMALAN
    if(decimalan == 0) {
        while(*p != '\0') {
            p++;
        }
        //sada pe pokazuje iza niza pa ga mroamo vratit
        p--;
        if(predznak == 0) {
            while(p != niz-1) {
                cifra = *p - '0';
                suma +=cifra*pow(10,i);
                i++;
                p--;
            }
        } else {
            while(p != niz) {
                cifra = *p - '0';
                suma +=cifra*pow(10,i);
                i++;
                p--;
            }
        }
    }

    if(predznak == 0) {
        return suma;
    }
    return -suma;
}
// Funkcija koja nam vraca duzinu jedne tacke sa kordinatama npr. (2.3,-3.6) duzina 10
int duzina(char* s)
{
    int brojac = 1;
    while(*s != '\0' && *s != ')') {
        brojac++;
        s++;
    }
    s++;
    if (*s == ',') {
        brojac++;
    }
    return brojac;
}
//Funkcija koja prima niz tacaka (kordinate x, y) i 4 realna broja koji prave pravougaonik u ravni i izbaciva sve tacke koje nisu unutar pravougaonika
char *obuhvat(char *s, float x1, float y1, float x2, float y2)
{

    char *kopija_poc = s;
    int x = 1;          // Postavljamo uslov da je string dobro unesenes
    int tacka = 0;      // Uslov za tacku

    if (*s == '\0') {
        return s;
    }

    do {

        x = 1;
        tacka = 0;
        // Provjeravamo prvi realan broj, koji mora pocinjati sa otvorenom zagradom a zavrsavati zarezom
        // Provjeravamo da li string pocinje otvorenom zagradom
        if (*s != '(') {
            x = 0;
            break;
        } else {
            s++;
        }
        if (*s == '-') {
            s ++;
        }
        if (!(*s  >= '0' && *s  <= '9')) {
            x = 0;
            break;
        }
        while (1) {

            // Provjeravmo negativne brojeve

            if (*s == '.' && tacka == 1) {
                x = 0;
                break;
            } else if (*s == '.' && (*(s -1) >= '0' && *(s -1) <= '9')) {
                tacka = 1;
            } else if (*s == ',' && ((*(s -1) >= '0' && *(s -1) <= '9') || *(s -1) == '.' )) {
                break;
            } else if (*s  == ',') {
                x = 0;
                break;
            } else if (!(*s  >= '0' && *s  <= '9')) {
                x = 0;
                break;
            }
            s++;
        }

        if ( x == 0) {
            break;
        }

        x = 1;
        tacka = 0;

        // Provjeravamo drugi realan broj, koji mora pocinjati sa zarezom a zavrsavati zatvorenom zagradom
        // Provjeravamo da li string pocinje sa zarezom
        if (*s  != ',') {
            x = 0;
            break;
        } else {
            s++;
        }
        if (*s  == '-') {
            s ++;
        }
        if (!(*s  >= '0' && *s  <= '9')) {
            x = 0;
            break;
        }
        while (1) {

            if (*s  == '.' && tacka == 1) {
                x = 0;
                break;
            } else if (*s  == '.' && (*(s -1) >= '0' && *(s -1) <= '9')) {
                tacka = 1;
            } else if (*s  == ')' && ((*(s -1) >= '0' && *(s -1) <= '9') || *(s -1) == '.' )) {

                break;
            } else if (*s  == ')') {
                x = 0;
                break;
            } else if (!(*s  >= '0' && *s  <= '9')) {
                x = 0;
                break;
            }

            if (*s == '\0')
                break;
            s++;
        }
        if (*s == '\0')
            break;
        s++;
        if ( *s == '\0' || *s == ',') {
            if (*s == '\0') {
                break;
            } else {
                s++;
            }
        } else {                    // ukoliko string nije dobro unesen vracamo NULL pokazivac i zavrsavamo program
            return NULL;
        }
    } while (1);

    if ( x == 0) {
        return NULL;
    }
    // Ako je string ispravno unesen izbacivamo sve tacke van opsega pravougaonika
    char *a = kopija_poc;       // pokazivac a postavljamo na pocetak stringa (niz tacaka sa kordinatama), i njime prolazimo kroz cijeli string
    char r_broj_x[100];         // string u kojem cuvamo kordinate tacke kako bi ih pretvorili u float
    char r_broj_y[100];
    char *b = r_broj_x;         // pokazivacem b prolazimo kroz kordinatu x i kopiramo je u r_broj_x
    char *c = r_broj_y;         // pokazivacem c prolazimo kroz kordinatu y i kopiramo je u r_broj_y
    char *poc_tacke;            // cuvamo pocetak tacke ukoliko je uslov zadovoljen da je mozemo izbaciti iz stringa
    int duzina_tacke;
    int izbaci = 0;

    while (*a != '\0') {
        if (*a == '(') {
            izbaci = 0;
            poc_tacke = a;
            duzina_tacke = duzina(poc_tacke);
            if (*(a+duzina_tacke) == '\0' && a != kopija_poc ) {
                poc_tacke = a - 1;
                duzina_tacke++;
            }
            a++;
            b = r_broj_x;
            
            while(*a != ',' && *a != '\0') {
                *b = *a;
                a++;
                b++;
            }
            *b = '\0';

            if (s_to_f(r_broj_x) < x1 || s_to_f(r_broj_x) > x2) {               // provjeravamo da li je tacka u opsegu pravougaonika 
                izbaci = 1;
            }
            a++;
            c = r_broj_y;
            
            while(*a != ')') {
                *c = *a;
                a++;
                c++;
            }
            *c = '\0';

            if (s_to_f(r_broj_y) < y1 || s_to_f(r_broj_y) > y2) {               // provjeravamo da li je tacka u opsegu pravougaonika 
                izbaci = 1;
            }
            if (izbaci) {
                izbaci_rijec(kopija_poc,poc_tacke,duzina_tacke);                // nakon izbacivanja tacke pokazivac vracamo na pocetak stringa i smanjivamo ga za 1
                a = kopija_poc;                                                 // zbog a++, kako bi provjerili pocetni element
                a--;
            }
        }
        a++;
    }
    return kopija_poc;          // vracamo pokazivac na pocetak stringa
}

int main() {

	return 0;
}
"
2818,85,85,0,46,A2016/Z2/Z3/student9296,A2016/Z2/Z3/student3421,"#include <stdio.h>

int main() {
	
	int i, j, k, brt=0;
	
	char smor[20][20];

	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &brt);
	
	
	while(brt<=0 || brt>10)
	{
		printf(""Pogresan unos\n"");
		printf(""Unesite broj tacaka: "");
		scanf(""%d"", &brt);
	}
	
	for(i=0; i<20; i++)
	{
		for(j=0; j<20; j++)
		{
			smor[i][j] = ' ';
		}
	}
	for(k=0; k<brt; k++)
	{
		printf(""Unesite %d. tacku: "", k+1);
		scanf(""%d%d"", &i, &j);
		
		while(i<0 || i>19 || j<0 || j>19)
		{
			printf(""Pogresan unos\n"");
			printf(""Unesite %d. tacku: "", k+1);
			scanf(""%d%d"", &i, &j);
			
		}
		smor[i][j] = '*';
		
	}
	
	for(i=0; i<20; i++)
	{
		for(j=0; j<20; j++)
		{
			printf(""%c"", smor[j][i]);
		}
		printf(""\n"");
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	int broj_tacaka,brojac,n,m;
	char niz[20][20];
	
	
	
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &broj_tacaka);
	while(broj_tacaka<1 || broj_tacaka>10)
{	printf(""Pogresan unos\n"");
	    
	    printf(""Unesite broj tacaka: "");
	    scanf(""%d"", &broj_tacaka);
    
}
      for(n=0; n<20; n++)
      {
          for(m=0; m<20; m++)
      
      {
          niz[n][m]=' '; 
      }}
  
   for(brojac=0; brojac<broj_tacaka; brojac++)
   {
      	printf(""Unesite %d. tacku: "", brojac+1);
       	scanf(""%d"",&n);
    	scanf(""%d"", &m);
        while(n<0 || m<0 || n>19 || m>19)
        {
        	
        printf(""Pogresan unos\n""); 
        printf(""Unesite %d. tacku: "", brojac+1);
        scanf(""%d"",&n);
        scanf(""%d"", &m);}
        niz[n][m]='*';
       }
        

        
        for(n=0; n<20; n++)
        {
           for(m=0; m<20; m++){
              printf(""%c"", niz[m][n]);
              
           }
            printf(""\n"");
          }
		return 0;
}
"
2820,77,77,0,45,A2016/Z2/Z3/student5542,A2016/Z2/Z3/student3634,"#include <stdio.h>

int main() {
	
	char matrica[20][20];
	
	int i, j, n, p, q;
	
	
	for(i=0; i<20; i++) {
		
		for(j=0; j<20; j++) {
			
			matrica[i][j]=' ';
		}
		
    }
    
	
	do {
	
	printf(""Unesite broj tacaka: "");
	
	scanf(""%d"", &n);
	
	if(n<=0 || n>10) printf(""Pogresan unos\n"");
	
	} while (n<=0 || n>10);
	
    
	i=0;
	
	do {
		
		printf(""Unesite %d. tacku: "", i+1);
		
		scanf(""%d %d"", &p, &q);
		
		if(p<0 || p>19 || q<0 || q>19) {
			printf(""Pogresan unos\n"");
		}
		
		else {
		matrica[q][p]='*'; i++; }
		
	} while(i<n || p<0 || p>19 || q<0 || q>19);
	
	for(i=0; i<20; i++) {
		
		for(j=0; j<20; j++) {
			
			printf(""%c"", matrica[i][j]);
		}
		printf(""\n"");
	}
	
	
	return 0;
}
","#include <stdio.h>

int main() {
	
	char mat[20][20];
	int i, j, a, b, br_tacaka;
	
	for(i=0; i<20; i++) {
	    for(j=0; j<20; j++) {
	        mat[i][j]=' ';
	    }
	}
	do{
	printf(""Unesite broj tacaka: "");
	scanf(""%d"", &br_tacaka);
	if(br_tacaka<=0 || br_tacaka>10) printf(""Pogresan unos\n"");
	}while(br_tacaka<=0 || br_tacaka>10);
	

	
	for(i=0; i<br_tacaka; i++) {
		do{
	    printf(""Unesite %d. tacku: "", i+1);
	    scanf(""%d %d"", &a, &b);
	    if(a<0 || a>19 || b<0 || b>19) printf(""Pogresan unos\n"");
		}while(a<0 || a>19 || b<0 || b>19);
	    mat[b][a]='*';
	}
	
	for(i=0; i<20; i++) {
	    for(j=0; j<20; j++) {
	        printf(""%c"", mat[i][j]);
	    }
	    printf(""\n"");
	}
	return 0;
}
"
2827,99,99,0,169,A2016/Z5/Z1/student4082,A2016/Z5/Z1/student7597,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Student
{
    char ime[20], prezime[20];
    int ocjene[50];
    int br_ocjena;
};


void swap(struct Student *a, struct Student *b)
{
    struct Student temp = *b;
    *b = *a;
    *a = temp;
}

int gcd(int a, int b)
{
    return b == 0 ? a : gcd(b, a % b);
}

double get_prosjek(struct Student s)
{
    int i;
    double sum = 0.0;
    if (s.br_ocjena == 0)
        return 5;
    for (i = 0; i < s.br_ocjena; i++)
        sum += s.ocjene[i];
    return sum / s.br_ocjena;
}

int prosjek_cmp(struct Student a, struct Student b)
{
    int i, acnt, bcnt, agcd, bgcd, asum = 0, bsum = 0;
    
    acnt = a.br_ocjena;
    bcnt = b.br_ocjena;
    
    for (i = 0 ; i < a.br_ocjena; i++)
    {
        asum += a.ocjene[i];
        if (a.ocjene[i] == 5)
        {
            asum = 5;
            acnt = 1;
        }
    }
    for (i = 0 ; i < b.br_ocjena; i++)
    {
        bsum += b.ocjene[i];
        if (b.ocjene[i] == 5)
        {
            bsum = 5;
            bcnt = 1;
        }
    }
    if (asum == 0)
    {
        acnt = 1;
        asum = 5;
    }

    if (bsum == 0)
    {
        bcnt = 1;
        bsum = 5;
    }
    
    agcd = gcd(asum, acnt);
    bgcd = gcd(bsum, bcnt);
    
    asum /= agcd;
    bsum /= bgcd;
    
    acnt /= agcd;
    bcnt /= bgcd;
    
    if (asum == bsum && acnt == bcnt)
        return 0;
    else
        return (asum * bcnt > bsum * acnt) ? -1 : 1;
}

int student_cmp(struct Student a, struct Student b)
{
    int cmp;
    if (prosjek_cmp(a, b) != 0)
        return prosjek_cmp(a, b);
    else
    {
        cmp = strcmp(a.prezime, b.prezime);
        if (cmp != 0)
            return cmp;
        cmp = strcmp(a.ime, b.ime);
        return cmp;
    }
}

void remove_at(struct Student *students, int index, int *n_students)
{
    int i, j;
    for (i = 0; i < *n_students; i++)
    {
        if (i == index)
        {
            for (j = i; j < *n_students - 1; j++)
                swap(&students[j], &students[j + 1]);
            (*n_students)--;
            return;
        }
    }
}

int genijalci(struct Student *students, int n, double prosjek)
{
    int i, gen[3], t, j;
    char found = 0;
    for (i = 0; i < n; i++)
    {
        double p = get_prosjek(students[i]);
        if (p < prosjek)
        {
            remove_at(students, i, &n);
            i--;
        }
    }
    
    for (i = 0; i < 3; i++)
        gen[i] = -1;
        
    for (t = 0; t < 3; t++)
    {
        for (i = 0; i < n; i++)
        {
            found = 0;
            for (j = 0; j < t; j++)
            {
                if (gen[j] == i)
                {
                    found = 1;
                    break;
                }
            }
            if (found)
                continue;
                
            if (gen[t] == -1 || student_cmp(students[gen[t]], students[i]) > 0)
                gen[t] = i;
        }
    }
    
    for (i = 0; i < 3; i++)
        if (gen[i] != -1)
            printf(""%s %s\n"", students[gen[i]].prezime, students[gen[i]].ime);
    
    return n;
}

int main()
{
struct Student studenti[6] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 6, 6.5);

    
    return 0;
}















","#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Student
{
    char ime[20], prezime[20];
    int ocjene[50];
    int br_ocjena;
};


void swap(struct Student *a, struct Student *b)
{
    struct Student temp = *b;
    *b = *a;
    *a = temp;
}

int gcd(int a, int b)
{
    return b == 0 ? a : gcd(b, a % b);
}

double get_prosjek(struct Student s)
{
    int i;
    double sum = 0.0;
    if (s.br_ocjena == 0)
        return 5;
    for (i = 0; i < s.br_ocjena; i++)
        sum += s.ocjene[i];
    return sum / s.br_ocjena;
}

int prosjek_cmp(struct Student a, struct Student b)
{
    int i, acnt, bcnt, agcd, bgcd, asum = 0, bsum = 0;
    
    acnt = a.br_ocjena;
    bcnt = b.br_ocjena;
    
    for (i = 0 ; i < a.br_ocjena; i++)
    {
        asum += a.ocjene[i];
        if (a.ocjene[i] == 5)
        {
            asum = 5;
            acnt = 1;
        }
    }
    for (i = 0 ; i < b.br_ocjena; i++)
    {
        bsum += b.ocjene[i];
        if (b.ocjene[i] == 5)
        {
            bsum = 5;
            bcnt = 1;
        }
    }
    if (asum == 0)
    {
        acnt = 1;
        asum = 5;
    }

    if (bsum == 0)
    {
        bcnt = 1;
        bsum = 5;
    }
    
    agcd = gcd(asum, acnt);
    bgcd = gcd(bsum, bcnt);
    
    asum /= agcd;
    bsum /= bgcd;
    
    acnt /= agcd;
    bcnt /= bgcd;
    
    if (asum == bsum && acnt == bcnt)
        return 0;
    else
        return (asum * bcnt > bsum * acnt) ? -1 : 1;
}

int student_cmp(struct Student a, struct Student b)
{
    int cmp;
    if (prosjek_cmp(a, b) != 0)
        return prosjek_cmp(a, b);
    else
    {
        cmp = strcmp(a.prezime, b.prezime);
        if (cmp != 0)
            return cmp;
        cmp = strcmp(a.ime, b.ime);
        return cmp;
    }
}

void remove_at(struct Student *students, int index, int *n_students)
{
    int i, j;
    for (i = 0; i < *n_students; i++)
    {
        if (i == index)
        {
            for (j = i; j < *n_students - 1; j++)
                swap(&students[j], &students[j + 1]);
            (*n_students)--;
            return;
        }
    }
}

int genijalci(struct Student *students, int n, double prosjek)
{
    int i, gen[3], t, j;
    char found = 0;
    for (i = 0; i < n; i++)
    {
        double p = get_prosjek(students[i]);
        if (p < prosjek)
        {
            remove_at(students, i, &n);
            i--;
        }
    }
    
    for (i = 0; i < 3; i++)
        gen[i] = -1;
        
    for (t = 0; t < 3; t++)
    {
        for (i = 0; i < n; i++)
        {
            found = 0;
            for (j = 0; j < t; j++)
            {
                if (gen[j] == i)
                {
                    found = 1;
                    break;
                }
            }
            if (found)
                continue;
                
            if (gen[t] == -1 || student_cmp(students[gen[t]], students[i]) > 0)
                gen[t] = i;
        }
    }
    
    for (i = 0; i < 3; i++)
        if (gen[i] != -1)
            printf(""%s %s\n"", students[gen[i]].prezime, students[gen[i]].ime);
    
    return n;
}

int main()
{
struct Student studenti[6] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};
genijalci(studenti, 6, 6.5);

    
    return 0;
}















"
2831,76,76,0,58,A2016/Z1/Z3/student9805,A2016/Z1/Z3/student1120,"#include <stdio.h>
#include <math.h>

int main() {
	float B=0, S=0, C=0, V=0, P=0, pb=0.0, ps=0.0, pc=0.0, pv=0.0, pp=0.0, ubv;
	char boja;
	printf(""Unesite vozila: "");
	do { 
		scanf(""%c"", &boja);
		while(boja=='\n' ){
			scanf(""%c"",&boja);
		}
		if ((boja=='c')||(boja=='C')){C++; continue;}
		if ((boja=='b')||(boja=='B')){B++; continue;}
		if ((boja=='s')||(boja=='S')){S++; continue;}
		if ((boja=='v')||(boja=='V')){V++; continue;}
		if ((boja=='p')||(boja=='P')){P++; continue;}
		if ((boja != 'c') && (boja != 'C') && (boja != 'B') && (boja !='b')&&(boja != 's') && (boja !='S')&&(boja != 'V') && (boja !='v')&&(boja != 'p') && (boja !='P')&&(boja!='k')&&(boja!='K')){
			printf (""Neispravan unos\n"");
			continue;
		}
	} while (boja!='K' && boja!='k');
	ubv=B+S+C+V+P;
	pc=C*100/ubv;
	pb=B*100/ubv;
	ps=S*100/ubv;
	pv=V*100/ubv;
	pp=P*100/ubv;
	printf (""Ukupno evidentirano %g vozila. \n"",ubv);
	if(ubv==0){printf (""Najpopularnija boja je crna (0.00%%)."");
		return 0;
	}
	if (C>=B && C>=S && C>=V && C>=P){printf (""Najpopularnija boja je crna (%.2f%%)."",pc);
		return 0;
	}	if (B>=C && B>=S && B>=V && B>=P){printf (""Najpopularnija boja je bijela (%.2f%%)."",pb);
		return 0;
	}	if (S>=C && S>=B && S>=V && S>=P){printf (""Najpopularnija boja je siva (%.2f%%)."",ps);
		return 0;
	}	if (V>=C && V>=S && V>=B && V>=P){printf (""Najpopularnija boja je crvena (%.2f%%)."",pv);
		return 0;
	}	if (P>=C && P>=S && P>=V && P>=B){printf (""Najpopularnija boja je plava (%.2f%%)."",pp);
		return 0;
	}
	return 0;
}

","#include <stdio.h>

int main() {
float brc=0,brb=0,brs=0,brv=0,brp=0;
float pc=0.0,pb=0.0,ps=0.0,pv=0.0,pp=0.0,s=0;
char znak;
printf(""Unesite vozila: "");
do {
	scanf(""%c"",&znak);
	if ((znak=='C') || (znak=='c')){
		brc++; 
		continue;
	}
	 if((znak=='B') || (znak=='b')){	
	 	brb++;
	 	continue;
	 }
	if((znak=='S') || (znak=='s'))
	{ 
		brs++;
		continue;
	}
	
	if((znak=='V') || (znak=='v'))
	{ 
		brv++;
		continue;
	}
	
    if((znak=='P') || (znak=='p'))
    {
    	brp++;
    	continue;
    }
	if(((znak!='P') && (znak!='p')) && ((znak!='V') && (znak!='v')) && ((znak!='S') && (znak!='s')) && ((znak!='B') && (znak!='b')) && ((znak!='C') && (znak!='c')) && ((znak!='K') && (znak!='k')))
	{
		printf(""Neispravan unos\n"");
	}
	}while((znak!='K') && (znak!='k'));
	s=brc+brb+brs+brv+brp;
	printf(""Ukupno evidentirano %g vozila.\n"" ,s);
	if(s!=0){
		pc=(brc*100)/s;
		pb=(brb*100)/s;
		ps=(brs*100)/s;
		pv=(brv*100)/s;
		pp=(brp*100)/s;
	}
		if ((brc>=brb) && (brc>=brs) && (brc>=brv) && (brc>=brp))
		{ 
			printf(""Najpopularnija boja je crna (%.2f%%)."" ,pc);
			return 0;
		}
		if((brb>=brc) && (brb>=brs) && (brb>=brv) && (brb>=brp))
		{
			printf(""Najpopularnija boja je bijela (%.2f%%)."" ,pb);
			return 0;
		}
		if((brs>=brc) && (brs>brb) && (brs>=brv) && (brs>=brp))
		{	
			printf(""Najpopularnija boja je siva (%.2f%%)."" ,ps);
			return 0;
		}
		if((brv>=brc) && (brv>=brb) && (brv>=brs) && (brv>=brp))
		{
			printf(""Najpopularnija boja je crvena (%.2f%%)."" ,pv);
			return 0;
		}
		if((brp>=brc) && (brp>=brb) && (brp>=brs) && (brp>=brv)){
			printf(""Najpopularnija boja je plava (%.2f%%)."" ,pp);
			return 0;
		}
	return 0;
}
"
2844,20,20,0,23,A2016/Z4/Z2/student9318,A2016/Z4/Z2/student3567,"#include <stdio.h>
#define DUZ 95

int vrati_najveci(int *niz,int vel){
	int i,j = 0;
	static int vrijednost = -1;
	int max = niz[0];
	for(i = 0;i < vel; i++)
		if(niz[i] > max) {max = niz[i]; j = i;}
	/*promijenili smo mu vrijednost,da sl put kad pozevemo da vrati sl. max */
	niz[j] = vrijednost;
	vrijednost--;
	/*treba nam pozicija navjeceg */
	return j;
}

char *kodiraj(char *tekst,char *tablica){
	char *pocetak = tekst,*pamti = tablica;
	int brojac[DUZ] = {0}, i;
	while (*tekst != '\0') brojac[*tekst++ - 32]++;
	for(i = 0; i < DUZ; i++) 
	*tablica++ = vrati_najveci(brojac,DUZ) + 32;
	for(i = 0; i < DUZ; i++)
		if(brojac[i] == 0) *tablica++ = i + 32;
	tablica = '\0';
	tekst = pocetak;
	/* modifikujemo primljeni string 126 - pozicija u tablici*/
	while (*tekst != '\0') {
		tablica = pamti;
			while (*tablica != '\0') {
				if(*tablica == *tekst){	*tekst = 126 - (tablica - pamti); break;}
				tablica++;
				
			}
		tekst++;
	}
	return pocetak;
}

char *dekodiraj(char *tekst,char *tablica){
	char *pocetak = tekst,*pamti = tablica;
	int a;
	while (*tekst != '\0') {
		tablica = pamti;
			while (*tablica != '\0') {
				if(*tablica == *tekst){
								a = 126 -  *tablica;						
							*tekst = *(pamti + a) ;
							break;
					}
				tablica++;
			}
		tekst++;
	}
	return pocetak;
}

int main() {
	/* 
	 char tekst[] = ""t~|n|x~{}w{o~s}x|~{}w{yuz{y~wzx|~v}q|vyuzpr}"";
    char sifrarnik[100] = "" eotaimsdrUcjknuv!"";
    int i;
    dekodiraj(tekst, sifrarnik);
    printf(""%s"", tekst);
    printf(""\n%s"", sifrarnik);
	return 0;
	*/
	char tekst[] = ""LLMLNLNMONM"";
char sifrarnik[100] = """";
int i;
kodiraj(tekst, sifrarnik);
printf(""%s\n"", tekst);
for (i=0; i<10; i++) printf(""%c"", sifrarnik[i]);
dekodiraj(tekst, sifrarnik);
printf(""\n%s"", tekst);
return 0;
	
}","#include <stdio.h>

int izbaci_max(int niz[], int size)
{
	int max = 0, i;
	for(i = 0; i < size; i++)
		if(niz[i] > niz[max])
			max = i;
	niz[max] = -1;
	return max;
}
int daj_index(char *niz, char znak)
{
	int i = 0;
	while(*niz != '\0')
	{
		if(znak == *niz)
			return i;
		i++;
		niz++;
	}
	return -1;
}
char *kodiraj(char *tekst, char* tablica)
{
	int histogram[95] = {0}, size = 95;
	char* setac = tekst;
	char *pomocni = tablica;
	while(*setac != '\0')
	{
		histogram[*setac-32]++;
		setac++;
	}
	while(size > 0)
    {
		*tablica++ = izbaci_max(histogram, 95)+32;
        size--;
    }
    tablica = '\0';
	setac = tekst;
	while(*setac != '\0')
	{
		*setac = 126 - daj_index(pomocni, *setac);
		setac++;
	}
	return tekst;
}
char *dekodiraj(char *tekst, char* tablica)
{
	char *setac = tekst;
	while(*setac != '\0')
	{
		*setac = tablica[126 - *setac];
		setac++;
	}
	return tekst;
}


int main() {
	char tekst[] = ""LLMLNLNMONM"";
char sifrarnik[100] = """";
int i;
kodiraj(tekst, sifrarnik);
printf(""%s"", tekst);
for (i=0; i<10; i++) printf(""%c"", sifrarnik[i]);
dekodiraj(tekst, sifrarnik);
printf(""%s"", tekst);
	return 0;
}
"
2850,96,96,0,17,A2016/Z1/Z2/student4471,A2016/Z1/Z2/student2086,"#include <stdio.h>

int main() {
	float a1,b1,a2,b2,y,x;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	
	
	
	if(a1==a2 && b1!=b2){
		printf(""Paralelne su"");
	}else if (a1==a2 && b1==b2){
		
		printf(""Poklapaju se"");
	}else{
		
		x = (b2-b1)/(a1-a2);
		y = a1*x + b1 ;
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
		
		
		
		
		
	}
	return 0;
}
","#include <stdio.h>

int main() {
	float a1, a2, b1, b2, y, x;
	printf (""Unesite a1,b1,a2,b2: "");
	scanf (""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
	if (a1==a2 && b1!=b2){
	printf (""Paralelne su\n"");	
	} else if (a1==a2 && b1==b2){
		printf (""Poklapaju se\n"");
	} else {
		x=(b1-b2)/(a2-a1);
		y=a1*x+b1;
		printf (""Prave se sijeku u tacci (%.1f,%.1f)"", x, y);
	}
	return 0;
}"
2860,97,97,0,48,A2016/Z1/Z4/student7496,A2016/Z1/Z4/student3331,"#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50) {
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1) {
		printf(""***"");
		return 0;
	}
    for(i=1;i<n;i++) {
    	for(j=1;j<i;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	for(j=1;j<=((n-i)*2)-1;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	if(i<2) {
    		for(j=1;j<=((n-i)*2)-1;j++) {
    			printf("" "");
    		}	
    		printf(""*\n"");
    	}	
    	if(i>=2) {
    		for(j=1;j<=2*i-3;j++) {
    		printf("" "");
    		}
    		printf(""*"");
    		for(j=1;j<=((n-i)*2)-1;j++) {
    		printf("" "");
    	}
    	printf(""*\n"");
        }
    }
    if(i==n) {
    	for(j=1;j<n;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	for(j=1;j<=2*n-3;j++) {
    		printf("" "");
    	}
    	printf(""*\n"");
        }
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50) {
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1) {
		printf(""***"");
		return 0;
	}
    for(i=1;i<n;i++) {
    	for(j=1;j<i;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	for(j=1;j<=((n-i)*2)-1;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	if(i<2) {
    		for(j=1;j<=((n-i)*2)-1;j++) {
    			printf("" "");
    		}	
    		printf(""*\n"");
    	}	
    	if(i>=2) {
    		for(j=1;j<=2*i-3;j++) {
    		printf("" "");
    		}
    		printf(""*"");
    		for(j=1;j<=((n-i)*2)-1;j++) {
    		printf("" "");
    	}
    	printf(""*\n"");
        }
    }
    if(i==n) {
    	for(j=1;j<n;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	for(j=1;j<=2*n-3;j++) {
    		printf("" "");
    	}
    	printf(""*\n"");
        }
	return 0;
}
"
2869,90,90,0,60,A2016/Z3/Z3/student9931,A2016/Z3/Z3/student3717,"#include <stdio.h>
 
int main() {
    int m, n, mat[200][200], i, j, p, z, l, w;
    do {
        printf (""Unesite brojeve M i N: "");
        scanf (""%d %d"", &m, &n);
        if (m<=0 || m>200 || n<=0 || n>200) {
            printf (""Brojevi nisu u trazenom opsegu.\n"");
        }
    }while (m<=0 || m>200 || n<=0 || n>200);
    printf (""Unesite elemente matrice: "");
    for (i=0; i<m; i++){
        for (j=0; j<n; j++){
            scanf(""%d"", &mat[i][j]);
    }}
    for (i = 0; i < m; i++){
      for (j = i + 1; j < m; j++){
    w = 1;
         for (p = 0; p < n; p++){
         if (mat[i][p] != mat[j][p]){
    w = 0;break;
    }}
    if (w){
    for (z = j; z < m - 1; z++){
      for (l = 0; l < n; l++){
      mat[z][l] = mat[z+1][l];
    }}
    j--;m--;
    }}}
    for (j = 0; j < n; j++){
      for (i = j + 1; i < n; i++){
    w = 1;
         for (p = 0; p < m; p++){
         if (mat[p][j] != mat[p][i]){
    w = 0;break;}}
    if (w){
    for (z = i; z < n - 1; z++){
      for (l = 0; l < m; l++){
      mat[l][z] = mat[l][z+1];
    }}
    i--;n--;
    }}}
    printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
    for (i = 0; i < m; i++){
      for (j = 0; j < n; j++){
      printf(""%5d"", mat[i][j]);
    }
    printf (""\n"");
    }
    return 0;
}","#include <stdio.h>

int main() {
int M,N,mat[200][200],i,j,k,x,kolona,red;
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"",&M,&N);
		if(M<0 || M>=200 || N<0 || N>=200){
			printf(""Brojevi nisu u trazenom opsegu.\n"");
		}
	}while(M<0 || M>=200 || N<0 || N>=200);
	
printf(""Unesite elemente matrice: "");
	for(i=0; i<M; i++){
		for(j=0; j<N; j++){
			scanf(""%d"",&mat[i][j]);
		}
	}
	
	for(j=0; j<N-1; j++){
		for(k=j+1; k<N; k++){
			kolona=1;
			for(i=0; i<M; i++){
				if(mat[i][j]!=mat[i][k]){
					kolona=0;
					break;
				}
			}
			if(kolona==1){
				for(x=k; x<N-1; x++){
					for(i=0; i<M; i++){
						mat[i][x] = mat[i][x+1];
					}
				}
				N--;
				k--;
			}
		}
	}	
		
		for(i=0; i<M-1; i++){
			for(k=i+1; k<M; k++){
			red=1;
				for(j=0; j<N; j++){
				if(mat[i][j]!=mat[k][j]){
					red=0;
					break;
				}
			}
			if(red==1){
				for(x=k; x<M-1; x++){
					for(j=0; j<N; j++){
						mat[x][j] = mat[x+1][j];
					}
				}
				M--;
				k--;
			}
		}
	}	
printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for(i=0; i<M; i++){
		for(j=0; j<N; j++){
			printf(""%5d"",mat[i][j]);
		}
		printf(""\n"");
	}
	
	return 0;
}
"
2870,99,99,0,199,A2016/Z1/Z1/student7496,A2016/Z1/Z1/student3331,"#include <stdio.h>
#include <stdlib.h>
int main () {
    float a,b,c,x1,x2,x3,x4,x5,y1,y2,y3,y4,y5,z1,z2,z3,z4,z5;
    int x,y,z;
    printf(""Unesite bodove za Tarika:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &x1);
    if (x1<0 || x1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    } 
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &x2);
    if (x2<0 || x2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"", &x3);
    if(x3<0 || x3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%f"", &x4);
    if(x4<0 || x4>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &x5);
    if(x5<0 || x5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/*za prvog studenta*/
    
    printf(""Unesite bodove za Bojana:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &y1);
    if(y1<0 || y1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &y2);
    if(y2<0 || y2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"", &y3);
    if(y3<0 || y3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%f"", &y4);
    if(y4<0 || y4>10) {
        printf (""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &y5);
    if(y5<0 || y5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/* za drugog studenta*/
    
    printf(""Unesite bodove za Mirzu:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &z1);
    if(z1<0 || z1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &z2);
    if(z2<0 || z2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"",&z3);
    if(z3<0 || z3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }  
    printf(""Zadace: "");
    scanf(""%f"", &z4);
    if(z4<0 || z4>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &z5);
    if(z5<0 || z5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/* za treceg studenta*/
    
    system(""clear"");
    a=x1+x2+x3+x4+x5; 
    b=y1+y2+y3+y4+y5;
    c=z1+z2+z3+z4+z5;
    
    x=a;
    y=b;
    z=c;
    
    if(x<55) {
        x=5;
    }
    if(x>=55 && x<65) {
        x=6;
    }
    if(x>=65 && x<75) {
        x=7;
    }
    if (x>=75 && x<85) {
        x=8;
    }
    if (x>=85 && x<92) {
        x=9;
    }
    if (x>=92 && x<100) {
        x=10;
    }
    
    if(y<55) {
        y=5;
    }
    if(y>=55 && y<65) {
        y=6;
    }
    if(y>=65 && y<75) {
        y=7;
    }
    if (y>=75 && y<85) {
        y=8;
    }
    if (y>=85 && y<92) {
        y=9;
    }
    if (y>=92 && y<100) {
        y=10;
    }
    
    if(z<55) {
        z=5;
    }
    if(z>=55 && z<65) {
        z=6;
    }
    if(z>=65 && z<75) {
        z=7;
    }
    if (z>=75 && z<85) {
        z=8;
    }
    if (z>=85 && z<92) {
        z=9;
    }
    if (z>=92 && z<100) {
        z=10;
    }
    
    if(x>5 && y>5 && z>5) {
        printf(""Sva tri studenta su polozila.\n"");
        printf(""Svaki student ima razlicitu ocjenu.\n"");
        return 0;
    }
    
    if(x<=5 && y<=5 && z<=5) {
        printf(""Nijedan student nije polozio.\n"");
        return 0;
    }
    
    if((x>5 && y<=5 && z<=5) || (x<=5 && y>5 && z<=5) || (x<=5 && y<=5 && z>5)) {
        printf(""Jedan student je polozio.\n"");
        return 0;
    } 
    
    if((x>5 && y>5 && z<=5) || (x<=5 && y>5 && z>5) || (x>5 && y<=5 && z>5)) {
        printf(""Dva studenta su polozila.\n"");
        return 0;
    }
        
    if(x==y && y==z) {
        printf(""Sva tri studenta imaju istu ocjenu.\n"");
        return 0;
    }   
    
    if(x!=y && y!=z) {
        printf(""Sva tri studenta imaju razlicitu ocjenu.\n"");
        return 0;
    }
    
    if((x==y && y!=z) || (x!=y && y==z) || (x==y && y!=z)) {
        printf(""Dva od tri studenta imaju istu ocjenu.\n"");
        return 0;
    }
    
    return 0;
}     
       

","#include <stdio.h>
#include <stdlib.h>
int main () {
    float a,b,c,x1,x2,x3,x4,x5,y1,y2,y3,y4,y5,z1,z2,z3,z4,z5;
    int x,y,z;
    printf(""Unesite bodove za Tarika:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &x1);
    if (x1<0 || x1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    } 
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &x2);
    if (x2<0 || x2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"", &x3);
    if(x3<0 || x3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%f"", &x4);
    if(x4<0 || x4>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &x5);
    if(x5<0 || x5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/*za prvog studenta*/
    
    printf(""Unesite bodove za Bojana:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &y1);
    if(y1<0 || y1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &y2);
    if(y2<0 || y2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"", &y3);
    if(y3<0 || y3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zadace: "");
    scanf(""%f"", &y4);
    if(y4<0 || y4>10) {
        printf (""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &y5);
    if(y5<0 || y5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/* za drugog studenta*/
    
    printf(""Unesite bodove za Mirzu:\n"");
    printf(""I parcijalni ispit: "");
    scanf(""%f"", &z1);
    if(z1<0 || z1>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""II parcijalni ispit: "");
    scanf(""%f"", &z2);
    if(z2<0 || z2>20) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Prisustvo: "");
    scanf(""%f"",&z3);
    if(z3<0 || z3>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }  
    printf(""Zadace: "");
    scanf(""%f"", &z4);
    if(z4<0 || z4>10) {
        printf(""Neispravan broj bodova"");
        return 0;
    }
    printf(""Zavrsni ispit: "");
    scanf(""%f"", &z5);
    if(z5<0 || z5>40) {
        printf(""Neispravan broj bodova"");
        return 0;
    }/* za treceg studenta*/
    
    system(""clear"");
    a=x1+x2+x3+x4+x5; 
    b=y1+y2+y3+y4+y5;
    c=z1+z2+z3+z4+z5;
    
    x=a;
    y=b;
    z=c;
    
    if(x<55) {
        x=5;
    }
    if(x>=55 && x<65) {
        x=6;
    }
    if(x>=65 && x<75) {
        x=7;
    }
    if (x>=75 && x<85) {
        x=8;
    }
    if (x>=85 && x<92) {
        x=9;
    }
    if (x>=92 && x<100) {
        x=10;
    }
    
    if(y<55) {
        y=5;
    }
    if(y>=55 && y<65) {
        y=6;
    }
    if(y>=65 && y<75) {
        y=7;
    }
    if (y>=75 && y<85) {
        y=8;
    }
    if (y>=85 && y<92) {
        y=9;
    }
    if (y>=92 && y<100) {
        y=10;
    }
    
    if(z<55) {
        z=5;
    }
    if(z>=55 && z<65) {
        z=6;
    }
    if(z>=65 && z<75) {
        z=7;
    }
    if (z>=75 && z<85) {
        z=8;
    }
    if (z>=85 && z<92) {
        z=9;
    }
    if (z>=92 && z<100) {
        z=10;
    }
    
    if(x>5 && y>5 && z>5) {
        printf(""Sva tri studenta su polozila.\n"");
        printf(""Svaki student ima razlicitu ocjenu.\n"");
        return 0;
    }
    
    if(x<=5 && y<=5 && z<=5) {
        printf(""Nijedan student nije polozio.\n"");
        return 0;
    }
    
    if((x>5 && y<=5 && z<=5) || (x<=5 && y>5 && z<=5) || (x<=5 && y<=5 && z>5)) {
        printf(""Jedan student je polozio.\n"");
        return 0;
    } 
    
    if((x>5 && y>5 && z<=5) || (x<=5 && y>5 && z>5) || (x>5 && y<=5 && z>5)) {
        printf(""Dva studenta su polozila.\n"");
        return 0;
    }
        
    if(x==y && y==z) {
        printf(""Sva tri studenta imaju istu ocjenu.\n"");
        return 0;
    }   
    
    if(x!=y && y!=z) {
        printf(""Sva tri studenta imaju razlicitu ocjenu.\n"");
        return 0;
    }
    
    if((x==y && y!=z) || (x!=y && y==z) || (x==y && y!=z)) {
        printf(""Dva od tri studenta imaju istu ocjenu.\n"");
        return 0;
    }
    
    return 0;
}     
       

"
2872,99,99,0,129,A2016/Z4/Z1/student4473,A2016/Z4/Z1/student1453,"#include <stdio.h>

void unesi(char niz[], int velicina){
	char znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\0'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}

int uporedi(char *rijec1, char *rijec2,int vel1,int vel2){
	int i;
	char*p1=rijec1, *p2=rijec2;
	if(vel1!=vel2)
		return 0;
	else{
		for(i=0;i<vel1-1;i++){
			if(*(p2+i)>='A'&&*(p2+i)<='Z'&&*(p1+i)>='A'&&*(p1+i)<='Z'){
				if(*(p1+i)+32!=*(p2+i)+32)
					return 0;
				continue;
			}
			if(*(p1+i)>='A'&&*(p1+i)<='Z'){
				if(*(p1+i)+32!=*(p2+i))
					return 0;
				continue;
			}
			
			
			if(*(p2+i)>='A'&&*(p2+i)<='Z'){
				if(*(p1+i)!=*(p2+i)+32)
					return 0;
				continue;
			}
			
			
			
			if(*(p1+i)!=*(p2+i))
					return 0;
			
			
			
			
		}
	}
	return 1;
}




char* izbaci_najcescu(char *s){
	char *p, *pok[500];
	int i=0, j=0,brojac_slova[500]={0}, brojac_rijeci=1, brojac_najcesce[500]={0};
	p=s;
	pok[j]=p;
	if(*p=='\0')
		return NULL;
	while(*p!='\0'){
		if((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127)){
			brojac_rijeci++;
			do{
				p++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			j++;
			i++;
			pok[j]=p;
			continue;
		}
		brojac_slova[i]++;
		p++;
	}
	// daje nam broj slova za svaku rijec i stavlja pokazivac na svaku rijec
	
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(uporedi(pok[i], pok[j],brojac_slova[i], brojac_slova[j]))
				brojac_najcesce[i]++;
		}
	}
	//do sad je u niz brojac_najcece[i] ubacilo vrijednosti koliko puta se ponavlja rijec na mijestu u stringu s
	
	int max;
	max=0;
	for(i=0;i<brojac_rijeci;i++){
		if(brojac_najcesce[i]>brojac_najcesce[max]) 	
			max=i;
	}
	// pronasli smo za sad clan najcesce rijeci

	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(uporedi(pok[max], pok[i], brojac_slova[max], brojac_slova[i])){
			p=pok[i];
			if(i==brojac_rijeci-1){
				*p='\0';
				break;
			}
			while(*p!='\0'){
				*p=*(p+brojac_slova[i]);	
				if(*p=='\0') break;
				p++;
			}
			do{
				pok[i]++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pok[j]-=brojac_slova[i];
				
			}
			
		}
		
	}
	//izbacene su sve rijeci koje se ponavljaju osim prve
	p=pok[max];
	while(*p!='\0'){
		*p=*(p+brojac_slova[max]);	
		if(*p=='\0') break;
		p++;
	}
	
	return s;
}	
	
int main() {
	char tekst[]=""1PsT1 psT2 3Pst pstpst pst"";
	printf(""%s"",izbaci_najcescu(tekst));
	return 0;
}
","#include <stdio.h>

void unesi(char niz[], int velicina){
	char znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\0'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}

int uporedi(char *rijec1, char *rijec2,int vel1,int vel2){
	int i;
	char*p1=rijec1, *p2=rijec2;
	if(vel1!=vel2)
		return 0;
	else{
		for(i=0;i<vel1-1;i++){
			if(*(p2+i)>='A'&&*(p2+i)<='Z'&&*(p1+i)>='A'&&*(p1+i)<='Z'){
				if(*(p1+i)+32!=*(p2+i)+32)
					return 0;
				continue;
			}
			if(*(p1+i)>='A'&&*(p1+i)<='Z'){
				if(*(p1+i)+32!=*(p2+i))
					return 0;
				continue;
			}
			
			
			if(*(p2+i)>='A'&&*(p2+i)<='Z'){
				if(*(p1+i)!=*(p2+i)+32)
					return 0;
				continue;
			}
			
			
			
			if(*(p1+i)!=*(p2+i))
					return 0;
			
			
			
			
		}
	}
	return 1;
}




char* izbaci_najcescu(char *s){
	char *p, *pok[500];
	int i=0, j=0,brojac_slova[500]={0}, brojac_rijeci=1, brojac_najcesce[500]={0};
	p=s;
	pok[j]=p;
	if(*p=='\0')
		return NULL;
	while(*p!='\0'){
		if((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127)){
			brojac_rijeci++;
			do{
				p++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			j++;
			i++;
			pok[j]=p;
			continue;
		}
		brojac_slova[i]++;
		p++;
	}
	// daje nam broj slova za svaku rijec i stavlja pokazivac na svaku rijec
	
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(uporedi(pok[i], pok[j],brojac_slova[i], brojac_slova[j]))
				brojac_najcesce[i]++;
		}
	}
	//do sad je u niz brojac_najcece[i] ubacilo vrijednosti koliko puta se ponavlja rijec na mijestu u stringu s
	
	int max;
	max=0;
	for(i=0;i<brojac_rijeci;i++){
		if(brojac_najcesce[i]>brojac_najcesce[max]) 	
			max=i;
	}
	// pronasli smo za sad clan najcesce rijeci

	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(uporedi(pok[max], pok[i], brojac_slova[max], brojac_slova[i])){
			p=pok[i];
			if(i==brojac_rijeci-1){
				*p='\0';
				break;
			}
			while(*p!='\0'){
				*p=*(p+brojac_slova[i]);	
				if(*p=='\0') break;
				p++;
			}
			do{
				pok[i]++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pok[j]-=brojac_slova[i];
				
			}
			
		}
		
	}
	//izbacene su sve rijeci koje se ponavljaju osim prve
	p=pok[max];
	while(*p!='\0'){
		*p=*(p+brojac_slova[max]);	
		if(*p=='\0') break;
		p++;
	}
	
	return s;
}	
	
int main() {
	char tekst[]=""1PsT1 psT2 3Pst pstpst pst"";
	printf(""%s"",izbaci_najcescu(tekst));
	return 0;
}
"
2875,99,99,0,54,A2016/Z2/Z2/student3301,A2016/Z2/Z2/student1976,"#include <stdio.h>
#include <stdlib.h>
#include<math.h>
#define PI 3.1415926
int main() {
	int i,j,n;
	float niz[500];
	double ste[500],min[500],sek[500],uk[500],step[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	if(n<1 || n>500){ return 0;}
	for(i=0;i<n;i++){
		scanf(""%f"",&niz[i]);
	}
	printf(""Uglovi su: \n"");
	for(i=0;i<n;i++){
		uk[i]=(niz[i]*1296000)/(2.*PI);
		ste[i]=uk[i]/(60*60);
		step[i]=(int)(ste[i]);
		min[i]=(int)((ste[i]-step[i])*60);
		sek[i]=(ste[i]-step[i]-min[i]/60)*3600;
	if(ste[i]>0){
			if(sek[i]>=59.5) {min[i]=min[i]+1; sek[i]=0;}
			if(min[i]>59) {step[i]=step[i]+1; min[i]=0;}
		}else if(ste[i]<=0){
			if(sek[i]<-59.5){min[i]=min[i]-1; sek[i]=0;}
			if(min[i]<-59){step[i]=step[i]-1;min[i]=0;}
			
			if(min[i]<0 && sek[i]<0){
			min[i]=min[i]/(-1);
			sek[i]=sek[i]/(-1);
			}
			else if(step[i]<1&& step[i]>-1 && min[i]<0 && sek[i]<0){
			min[i]=min[i]/(-1);
			}
			else if(step[i]<0 && min[i]<1&& min[i]>-1&& sek[i]<0){
				sek[i]=sek[i]/(-1);
			}
		}
	}
	for(i=0;i<n;i++){
	}
	for(i=0;i<n;i++){
		if(sek[i]>30.5 || sek[i]<-30.5){
				for(j=i;j<n-1;j++){
					sek[j]=sek[j+1];
					min[j]=min[j+1];
					step[j]=step[j+1];
				}
			n--;
			i--;
		
		}
	}
	for(i=0;i<n;i++){
		printf(""%.f stepeni %.f minuta %.f sekundi\n"",step[i],min[i],sek[i]);
	}
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include<math.h>
#define PI 3.1415926
int main() {
	int i,j,n;
	float niz[500];
	double ste[500],min[500],sek[500],uk[500],step[500];
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	if(n<1 || n>500){ return 0;}
	for(i=0;i<n;i++){
		scanf(""%f"",&niz[i]);
	}
	printf(""Uglovi su: \n"");
	for(i=0;i<n;i++){
		uk[i]=(niz[i]*1296000)/(2.*PI);
		ste[i]=uk[i]/(60*60);
		step[i]=(int)(ste[i]);
		min[i]=(int)((ste[i]-step[i])*60);
		sek[i]=(ste[i]-step[i]-min[i]/60)*3600;
	if(ste[i]>0){
			if(sek[i]>=59.5) {min[i]=min[i]+1; sek[i]=0;}
			if(min[i]>59) {step[i]=step[i]+1; min[i]=0;}
		}else if(ste[i]<=0){
			if(sek[i]<-59.5){min[i]=min[i]-1; sek[i]=0;}
			if(min[i]<-59){step[i]=step[i]-1;min[i]=0;}
			
			if(min[i]<0 && sek[i]<0){
			min[i]=min[i]/(-1);
			sek[i]=sek[i]/(-1);
			}
			else if(step[i]<1&& step[i]>-1 && min[i]<0 && sek[i]<0){
			min[i]=min[i]/(-1);
			}
			else if(step[i]<0 && min[i]<1&& min[i]>-1&& sek[i]<0){
				sek[i]=sek[i]/(-1);
			}
		}
	}
	for(i=0;i<n;i++){
	}
	for(i=0;i<n;i++){
		if(sek[i]>30.5 || sek[i]<-30.5){
				for(j=i;j<n-1;j++){
					sek[j]=sek[j+1];
					min[j]=min[j+1];
					step[j]=step[j+1];
				}
			n--;
			i--;
		
		}
	}
	for(i=0;i<n;i++){
		printf(""%.f stepeni %.f minuta %.f sekundi\n"",step[i],min[i],sek[i]);
	}
	return 0;
}
"
2880,97,97,0,24,A2016/Z1/Z4/student8004,A2016/Z1/Z4/student5468,"#include <stdio.h>

int main() {
	int i,j,n;
greska:
	printf(""\nUnesite broj n: "");
	scanf(""%d"",&n);
	if((n<1) || n>50){
		printf(""Pogresan unos"");
		goto greska;
	}
	if(n==1){
	printf(""***"");
	return 0;
	}
	for(i=1;i<=n;i++){
		for(j=1;j<=(4*n-3);j++){
			if((i==j) || (i+j==2*n))
			printf(""*"");
			else if(i+j==2*n+2*(i-1))
			printf(""*"");
			else if(i+j==4*n-2)
			printf(""*"");
			else printf("" "");
		}
		printf(""\n"");
		}
	return 0;
}
","#include <stdio.h>

int main() {
	int i,j,n;
greska:
	printf(""\nUnesite broj n: "");
	scanf(""%d"",&n);
	if((n<1) || n>50){
		printf(""Pogresan unos"");
		goto greska;
	}
	if(n==1){
	printf(""***"");
	return 0;
	}
	for(i=1;i<=n;i++){
		for(j=1;j<=(4*n-3);j++){
			if((i==j) || (i+j==2*n))
			printf(""*"");
			else if(i+j==2*n+2*(i-1))
			printf(""*"");
			else if(i+j==4*n-2)
			printf(""*"");
			else printf("" "");
		}
		printf(""\n"");
		}
	return 0;
}
"
2883,46,46,0,39,A2016/Z3/Z2/student4420,A2016/Z3/Z2/student5403,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define brel 10
#define brel2 20
/* Funkcija ubaci */ 
void ubaci(int *niz,int velicina){
	int i,cifra,broj,broj2=0;
	for (i=velicina-1;i>=0;i--){    /* Pomjeranje clanova niza */ 
		*(niz+2*i)=*(niz+i);
	}
	for (i=0;i<velicina*2;i++){
		if (i%2==1){
			broj=*(niz+i-1);
			while (broj!=0){        /* Dodavanje clanova sabiranjem cifara prethodnog clana */ 
				cifra=broj%10;
				broj2+=cifra;
				broj/=10;
		    }
		    broj2=abs(broj2);
			*(niz+i)=broj2;
			broj2=0;
		}
	}
}
 
/* Funkcija izbaci */ 
/* Formiranje pretlji za prolazak po nizu i uporedivanje njegovih clanova sa Fibonaccijevim nizom, izbacivanje jednakih */
int izbaci(int *niz,int velicina){
	int i,j,m,prvi=0,drugi=1,slijedeci;
	for (i=0;i<velicina;i++){
		prvi=0;
		drugi=1;
		for (j=1;j<10000;j++){   
			if (j==1) slijedeci=j;                
			else {
				slijedeci=prvi+drugi;
				prvi=drugi;
				drugi=slijedeci;
			}
			if (*(niz+i)==slijedeci){
				for (m=i;m<velicina-1;m++){
						*(niz+m)=*(niz+m+1);
				}
				velicina--;
				i--;
				break;
			}
		}
	}
	return velicina;
}
 
int main() {
	int niz[20],i,n;
 
	/* Unos elemenata */ 
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0;i<10;i++){
		scanf(""%d"",&niz[i]);
	}
 
	/* Pozivanje funkcije ubaci */ 
 
	ubaci(niz,brel);
 
	/* Pozivanje funkcije izbaci */ 
 
	n=izbaci(niz,brel2);
 
	/* Ispis niza */
	printf (""Modificirani niz glasi: "");
	for (i=0;i<n;i++){
		if (i<(n-1)){
			printf (""%d, "",niz[i]);
	    }
	    else {
	    	printf (""%d. "",niz[i]);
	    }
	}
 
	return 0;
}","#include <stdio.h>
#include <math.h>
#define vel1 10
#define vel2 20

void ubaci(int *niz, int vel )
{

  int m=2*vel;
  int i,nizpom[20];

  /*Kopiranje vrijednosti clanova niza iz starog u novi*/
  for(i=vel-1; i>=0; i--) {
    *(nizpom+2*i)=*(niz+i);
  }

  /*Racunanje sume cifara broja i smjestanje sume u clanove novog niza*/
  for(i=0; i<m; i=i+2) {
    int suma=0;
    int tmp,zadnja;
    tmp=*(nizpom+i);

    while(*(nizpom+i)!=0) {
      if(*(nizpom+i)<0)
        *(nizpom+i)=-*(nizpom+i);
      zadnja=*(nizpom+i)%10;
      suma+=zadnja;
      *(nizpom+i)/=10;
    }
    *(nizpom+i)=tmp;
    *(nizpom+i+1)=suma;
  }

  /*Kopiranje clanova niza iz pomocnog u novi*/
  for(i=0; i<m; i++) {
    *(niz+i)=*(nizpom+i);
  }
}

int izbaci(int *niz, int m)
{
  int i,j,x,z,y;
  /*Petlja koja provjerava da li clan novog niza zadovoljava uslov da pripada Fibonacijevom nizu*/
  for(i=0; i<m; i++) {
    x=0,y=1,z=1;
    while(z<*(niz+i)) {
      z=x+y;
      x=y;
      y=z;
    }
    /*Petlja koja izbacuje clanove Fibonacijevog niza*/
    if(*(niz+i)==z) {
      for(j=i; j<m-1; j++) {
        *(niz+j)=*(niz+j+1);
      }
      m--;
      i--;
    } else
      continue;
  }
  return m;
}


int main()
{

  int  niz[20],n,i;
  printf(""Unesite niz od 10 brojeva: "");
  for(i=0; i<10; i++)
    scanf(""%d"", &niz[i]);
  ubaci(niz,vel1);
  n=izbaci(niz,vel2);
  printf(""Modificirani niz glasi: "");
  for(i=0; i<n; i++) {
    if(i<n-1)
      printf(""%d, "", niz[i]);
    else if(i==n-1)
      printf(""%d."", niz[i]);
  }
  return 0;
}"
2884,88,88,0,16,A2016/Z1/Z2/student8329,A2016/Z1/Z2/student8043,"#include <stdio.h>
#include <math.h>
#define E 0.00001
int main() {
	float a1,b2,a2,b1,x,y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	x=(b1-b2)/(a2-a1);
	y=(a1*x)+b1;
	
	if((fabs(a1-a2)<E)&&(fabs(b1-b2)<E))
	{
		printf(""Poklapaju se"");
		return 0;
	}
	else if(fabs(a1-a2)<E)
	{
		printf(""Paralelne su"");
		return 0;
	}
	else printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define e 0.01
int main () {
	float a,b,c,d,x,y;
	printf (""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a,&b,&c,&d);
	x=((d-b)/(a-c));
	y=(a*x)+b;
	if (fabs(a-c)<e && fabs(b-d)<e) {
	printf(""Poklapaju se"");
	return 0;}
	else if (fabs(a-c)<e) {
	printf(""Paralelne su"");
	return 0;
	}
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x,y);
	return 0;
}"
2890,97,97,0,51,A2016/Z3/Z1/student9315,A2016/Z3/Z1/student4766,"#include <stdio.h>

unsigned long daj_prost(){
	static unsigned long start = 1;
	unsigned long i;
	int prost;
	do{
		prost = 1;
		start++;
		for(i = 2; i < start; i++){
			if(start % i == 0){
				prost = 0;
				break;
			}
		}
	}while(prost==0);
	return start;
}

int main() {
	 long A, B;
	int isprUnos;
	unsigned long suma = 0, temp;
	int sabiraj = 1;
	
	do{
		isprUnos = 1;
		
		printf(""Unesite brojeve A i B: "");
		if(scanf(""%ld %ld"", &A, &B)!= 2)
		isprUnos = 0;
		
		if(A>=B){
			printf(""A nije manje od B.\n"");
			isprUnos = 0;
		}
		
		else if(A<1){
			printf(""A nije prirodan broj.\n"");
			isprUnos = 0;
		}
		
	}while(isprUnos == 0);
	
	while(sabiraj){
		temp = daj_prost();
		if(temp >= B)
		break;
		if(temp > A)
		suma += temp;
	}
	
	printf(""Suma prostih brojeva izmedju %ld i %ld je %lu."", A, B, suma);
	
	return 0;
}
","#include <stdio.h>

unsigned long daj_prost(){
	static unsigned long start = 1;
	unsigned long i;
	int prost;
	do{
		prost = 1;
		start++;
		for(i = 2; i < start; i++){
			if(start % i == 0){
				prost = 0;
				break;
			}
		}
	}while(prost==0);
	return start;
}

int main() {
	 long A, B;
	int isprUnos;
	unsigned long suma = 0, temp;
	int sabiraj = 1;
	
	do{
		isprUnos = 1;
		
		printf(""Unesite brojeve A i B: "");
		if(scanf(""%ld %ld"", &A, &B)!= 2)
		isprUnos = 0;
		
		if(A>=B){
			printf(""A nije manje od B.\n"");
			isprUnos = 0;
		}
		
		else if(A<1){
			printf(""A nije prirodan broj.\n"");
			isprUnos = 0;
		}
		
	}while(isprUnos == 0);
	
	while(sabiraj){
		temp = daj_prost();
		if(temp >= B)
		break;
		if(temp > A)
		suma += temp;
	}
	
	printf(""Suma prostih brojeva izmedju %ld i %ld je %lu."", A, B, suma);
	
	return 0;
}
"
2906,92,92,0,74,A2016/Z3/Z3/student8295,A2016/Z3/Z3/student8747,"#include <stdio.h>
int main() {
	double a[200][200];
	int i,j,M,N,k,r;
	
	//unos matrice proizvoljnih dimenzija MxN
	do{
	    printf(""Unesite brojeve M i N: ""); 
	    
	    scanf(""%d %d"",&M,&N);
	     if(M>200 || N>200||N<1||M<1) 
	     printf(""Brojevi nisu u trazenom opsegu.\n"");
	    
	}
	while(M>200 || N>200||N<1||M<1);
	printf(""Unesite elemente matrice: "");
	
	// izbacivanje redova i kolona iz matrice koji se ponavljaju
	for(i=0;i<M;i++)
	{
		for(j=0;j<N;j++)
		{
			scanf(""%lf"",&a[i][j]);
		}
	}
	
	 for(i=0;i<M;i++){
	     for(j=i+1;j<M;j++){
	         for(k=0;k<N;k++){
	             if(a[i][k]!=a[j][k])
	             break;
	         }
	         
	         
	         if(k==N) {
	             for(r=j;r<M-1;r++){
	                 for(k=0;k<N;k++){
	                     a[r][k]=a[r+1][k];
	                 }
	               
	             }
	             M--;
	             i--;
	             break;
	         }
	     }
	 }
	 
	 for(i=0;i<N;i++) {
	     for(j=i+1;j<N;j++){
	         for(k=0;k<M;k++){
	             if(a[k][i]!=a[k][j])
	             break;
	         }
	     
	         
	         if(k==M) {
	             for(r=j;r<N-1;r++){
	                 for(k=0;k<M;k++){
	                     a[k][r]=a[k][r+1];
	                 }
	                
	     }
	     N--;
	     i--;
	     break;
	 }
	     }
	 }
	//ispis promijenjene matrice
	    printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
         for (i=0; i<M; i++) {
         for (j=0; j<N; j++)
         printf(""%5.0f"", a[i][j]);
         printf(""\n"");
         }
         return 0;
         }","#include <stdio.h>
#define vel 200
int main() {
	int mat[vel][vel],i,j,M,N;
	int k,l,m,n;
	do{
		printf(""Unesite brojeve M i N: "");
		scanf(""%d%d"",&M,&N);
		if(M>200 || M<1 || N>200 || N<1) 
			printf(""Brojevi nisu u trazenom opsegu.\n"");
		}while(M>200 || M<1 || N>200 || N<1);
	printf(""Unesite elemente matrice: "");
	for(i=0; i<M; i++) {
		for(j=0; j<N; j++) {
			scanf(""%d"",&mat[i][j]);
		}
	}
		/*izbacivanje redova*/
	for(i=0; i<M; i++) {
		for(j=i+1; j<M; j++) {
			for(k=0; k<N; k++) {
				if(mat[i][k]!=mat[j][k])
					break;
			}
			if(k==N){
				for(l=j; l<M; l++){
					for(m=l; m<M-1; m++){
						for(n=0; n<N; n++){
							mat[m][n]=mat[m+1][n];
						}
					}
				}
				M--;
				i--;
				break;
			}
		}
	}
	    /*izbacivanje kolona*/
	for(i=0; i<N; i++) {
		for(j=i+1; j<N; j++) {
			for(k=0; k<M; k++) {
				if(mat[k][i]!=mat[k][j])
					break;
			}
			if(k==M){
				for(l=j; l<N; l++) {
					for(m=l; m<N-1; m++) {
						for(n=0; n<M; n++) {
							mat[n][m]=mat[n][m+1];
						}
					}
				}
				N--;
				i--;
				break;
			}
		}
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0; i<M; i++) {
		for(j=0; j<N; j++) {
			printf(""%5d"",mat[i][j]);
		}
		printf(""\n"");
	}

	return 0;
}"
2910,86,86,0,153,A2016/Z1/Z1/student4682,A2016/Z1/Z1/student6594,"#include <stdio.h>
#include <math.h>
#define EPSILON 0.0001
int main() {
	double a1=0,b1=0,c1=0,d1=0,e1=0,a2=0,b2=0,c2=0,d2=0,e2=0,a3=0,b3=0,c3=0,d3=0,e3=0,u1=0,u2=0,u3=0,oc1=0,oc2=0,oc3=0;
	printf(""Unesite bodove za Tarika: "");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"",&a1);
		if((a1<0)||(a1>20)){
	printf(""Neispravan broj bodova\n"");
		return 0;
		}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&b1);
		if((b1<0)||(b1>20)){
	printf(""Neispravan broj bodova\n"");
		return 0;
		}
	printf(""Prisustvo: "");
	scanf(""%lf"",&c1);
		if((c1<0)||(c1>10)){
		printf(""Neispravan broj bodova\n"");
		return 0;
		}
	printf(""Zadace: "");
	scanf(""%lf"",&d1);
		if((d1<0)||(d1>10)){
		printf(""Neispravan broj bodova\n"");
		return 0;	
		}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&e1);
		if((e1<0)||(e1>40)){ 
		printf(""Neispravan broj bodova\n"");
		return 0;
    }

	{	
	printf(""Unesite bodove za Bojana: "");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"",&a2);
		if((a2<0)||(a2>20)){
	printf(""Neispravan broj bodova\n"");
		return 0;
		}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&b2);
		if((b2<0)||(b2>20)){
	printf(""Neispravan broj bodova\n"");
		return 0;
		}
	printf(""Prisustvo: "");
	scanf(""%lf"",&c2);
		if((c2<0)||(c2>10)){
		printf(""Neispravan broj bodova\n"");
		return 0;
		}
	printf(""Zadace: "");
	scanf(""%lf"",&d2);
		if((d2<0)||(d2>10)){
		printf(""Neispravan broj bodova\n"");
		return 0;
		}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&e2);
		if((e2<0)||(e2>40)) {
		printf(""Neispravan broj bodova\n"");
		return 0;
        }	
	
	
	printf(""Unesite bodove za Mirzu: "");
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"",&a3);
		if((a3<0)||(a3>20)){
	printf(""Neispravan broj bodova\n"");
		return 0;
		}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&b3);
		if((b3<0)||(b3>20)){
	printf(""Neispravan broj bodova\n"");
		return 0;
		}
	printf(""Prisustvo: "");
	scanf(""%lf"",&c3);
		if((c3<0)||(c3>10)){
		printf(""Neispravan broj bodova\n"");
		return 0;
		}
	printf(""Zadace: "");
	scanf(""%lf"",&d3);
		if((d3<0)||(d3>10)){
		printf(""Neispravan broj bodova\n"");
		return 0;
		}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&e3);
		if((e3<0)||(e3>40)) {
		printf(""Neispravan broj bodova\n"");
		return 0;
		} 	
				
		
	u1=a1+b1+c1+d1+e1;
	u2=a2+b2+c2+d2+e2;
	u3=a3+b3+c3+d3+e3;
	
	if(u1>=55 && u1<65) 
	oc1=6;
	if(u1>=65 && u1<75)
	oc1=7;
	if(u1>=75 && u1<85)
	oc1=8;
	if(u1>=85 && u1<92)
	oc1=9;
	if(u1>=92 && u1<=100)
	oc1=10;
	
	if(u2>=55 && u2<65) 
	oc2=6;
	if(u2>=65 && u2<75)
	oc2=7;
	if(u2>=75 && u2<85)
	oc2=8;
	if(u2>=85 && u2<92)
	oc2=9;
	if(u2>=92 && u2<=100)
	oc2=10;
	
	if(u3>=55 && u3<65) 
	oc3=6;
	if(u3>=65 && u3<75)
	oc3=7;
	if(u3>=75 && u3<85)
	oc3=8;
	if(u3>=85 && u3<92)
	oc3=9;
	if(u3>=92 && u3<=100)
	oc3=10;
    
    if ((oc1>=0&&oc1<6)&&(oc2>=0&&oc2<6)&&(oc3>=0&&oc3<6))
		printf(""Nijedan student nije polozio."");
		else if ((oc1>=6&&oc1<10)&&(oc2>=6&&oc2<10)&&(oc3>=6&&oc3<10)) {
		printf(""Sva tri studenta su polozila."");
		if (fabs(oc1-oc2)<EPSILON && fabs(oc2-oc3)<EPSILON)
		printf(""\nSva tri studenta imaju istu ocjenu."");
		else if (fabs(oc1-oc2)>=EPSILON && fabs(oc2-oc3)>=EPSILON && fabs(oc1-oc3)>=EPSILON)
	   printf(""\nSvaki student ima razlicitu ocjenu."");
	    else 
		printf(""\nDva od tri studenta imaju istu ocjenu."");
		}
	else if ((oc1>=6&&oc1<=19)&&(oc2>=6&&oc2<=10) || (oc2>=6&&oc2<=10)&&(oc3>=6&&oc3<=10) || (oc3>=6&&oc3<=10)&&(oc1>=6&&oc1<=10))
		printf(""Dva studenta su polozila."");
		else if ((oc1>=6&&oc1<=10) || (oc2>=6&&oc2<=10) || (oc3>=6&&oc3<=10))
	printf(""Jedan student je polozio."");
	}
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define EPSILON 0.000001
int main() {

	double a=0, b=0, c=0, d=0, e=0, a1=0, b1=0, c1=0, d1=0, e1=0, a2=0, b2=0, c2=0, d2=0, e2=0, s=0, s1=0, s2=0, o1=0,  o2=0, o3=0, ou=0;
	printf(""Unesite bodove za Tarika: \n"");

	printf(""I parcijalni ispit: "");
	scanf(""%lf"", &a);
		if(a>20 || a<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &b);
	if(b>20 || b<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%lf"", &c);
	if(c>10 || c<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &d);
	if(d>10 || d<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &e);
		if(e>40 || a<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}	
	else {	
	printf(""Unesite bodove za Bojana: "");

	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &a1);
	if(a1>20 || a1<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &b1);
	if(b1>20 || b2<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%lf"", &c1);
	if(c1>10 || c1<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &d1);
	if(d1>10 || d<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &e1);
			if(e1>40 || e1<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
			
	}{	
	printf(""Unesite bodove za Mirzu:"");
	
	printf(""\nI parcijalni ispit: "");
	scanf(""%lf"", &a2);
	if(a2>20 || a2<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"", &b2);
	if(b2>20 || b2<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%lf"", &c2);
		if(c2>10 || c2<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"", &d2);
	if(d2>10 || d2<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"", &e2);
			if(e2>40 || e2<0) {
		printf(""Neispravan broj bodova"");
	
	return 0;
	}
		
	s=a+b+c+d+e;
	s1=a1+b1+c1+d1+e1;
	s2=a2+b2+c2+d2+e2;
	if(s>=55 && s<65)
	o1=6;
	if(s>=65 && s<75)
	o1=7;
	if(s>=75 && s<85)
	o1=8;
	if(s>=85 && s<92)
	o1=9;
	if(s>=92 && s<=100)
	o1=10;
	if(s1>=55 && s1<65)
	o2=6;
	if(s1>=65 && s1<75)
	o2=7;
	if(s1>=75 && s1<85)
	o2=8;
	if(s1>=85 && s1<92)
	o2=9;
	if(s1>=92 && s1<=100)
	o2=10;
	if(s2>=55 && s2<65)
	o3=6;
	if(s2>=65 && s2<75)
	o3=7;
	if(s2>=75 && s2<85)
	o3=8;
	if(s2>=85 && s2<92)
	o3=9;
	if(s2>=92 && s2<=100)
	o3=10;
	
	ou=o1+o2+o3;
	if((o1>=0 && o1<6) && (o2>=0 && o2<6) &&(o3>=0 && o3<6))
	printf(""Nijedan student nije polozio.\n"");
	else if(ou>=18 && ou<=30) {
		printf(""Sva tri studenta su polozila.\n"");

	if(fabs(o1-o2)<EPSILON && fabs(o2-o3)<EPSILON && fabs(o1-o3)<EPSILON)
	printf(""Sva tri studenta imaju istu ocjenu.\n"");
	else if (!(fabs(o1-o2)<EPSILON) && !(fabs(o1-o3)<EPSILON) && !(fabs(o2-o3)<EPSILON))
	printf(""Svaki student ima razlicitu ocjenu. \n"");
	else
	printf(""Dva od tri studenta imaju istu ocjenu. \n"");
	}
	else if((o1>=6 && o1<=10 && o2>=6 && o2<=10) || (o1>=6 && o1<=10 && o3>=6 && o3>=6 && o3<=10) || (o2>=6 && o2<=10 && o3>=6 && o3<=10))
	printf(""Dva studenta su polozila.\n"");
	else if((o1>=6 && o1<=10) || (o2>=6 && o2<=10) || (o3>=6 && o3<=10))
	printf(""Jedan student je polozio.\n"");
	}		
return 0;
 }
"
2911,99,99,0,24,A2016/Z1/Z4/student8580,A2016/Z1/Z4/student2526,"#include <stdio.h>

int main() {
	int n,i,j;
	do{
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
		if(n<=0||n>50)
		printf(""Pogresan unos\n"");	}
	while(n<=0||n>50);
	if(n==1){
	printf(""***"");
	return 0;}
	
	
	for(i=0;i<n;i++){
		for(j=0;j<4*n-3;j++){
			if(i==j||2*n-2-i==j||2*n-2+i==j||4*n-4-i==j){
			printf(""*"");
			}
			else
			printf("" "");
		}printf(""\n"");
		}

	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	do {
		printf (""Unesite broj n: "");
		scanf (""%d"", &n);
		if (n<=0 || n>50) printf (""Pogresan unos \n""); 
	} while (n<=0 || n>50);
	if (n==1) {
		printf (""***"");
		return 0;}
	for (i=0; i<n; i++) {
		for (j=0; j<4*n-3; j++) {
			if (i==j || 2*n-2-i==j || 2*n-2+i==j || 4*n-4-i==j ) printf (""*"");
			else printf("" "");
		}
			printf (""\n"");
		}
	return 0;
}
"
2915,96,96,0,15,A2016/Z1/Z4/student4903,A2016/Z1/Z4/student5713,"#include<stdio.h>
int n, i, j;
int main(){
    do {
        printf(""Unesite broj n: "");
        scanf(""%d"", &n);
        if(n<=0 || n>50) {printf(""Pogresan unos\n""); continue;}
    } while (n<=0 || n>50);
    
    if(n==1) {printf(""***""); return 0;}
    for(i=1; i<=n; i++){
        for(j=1; j<=4*n-3; j++){
            if(i==j || i+j==2*n || i+j==4*n-2 || j-i==2*n-2) printf(""*"");
            else printf("" "");
        }
        printf(""\n"");
    }
    return 0;
}","#include<stdio.h>
int n, i, j;
int main(){
    do {
        printf(""Unesite broj n: "");
        scanf(""%d"", &n);
        if(n<=0 || n>50) {printf(""Pogresan unos\n""); continue;}
    } while (n<=0 || n>50);
    
    if(n==1) {printf(""***""); return 0;}
    for(i=1; i<=n; i++){
        for(j=1; j<=4*n-3; j++){
            if(i==j || i+j==2*n || i+j==4*n-2 || j-i==2*n-2) printf(""*"");
            else printf("" "");
        }
        printf(""\n"");
    }
    return 0;
}"
2916,96,96,0,84,A2016/Z5/Z1/student7485,A2016/Z5/Z1/student8004,"#include <stdio.h>
#include <string.h>
#define epsilon 0.0001

void unesi (char *niz,int vel){
    int i=0;
    char znak=getchar();
    if (znak=='\n');
    znak=getchar();
    while(i<vel-1 && znak!='\0'){
        niz[i++]=znak;
        znak=getchar();
    }

    niz[i]='\0';
}
struct Student {
    char ime[20], prezime[20];
    int ocjene[50];
    int br_ocjena;
};
int genijalci(struct Student *studenti, int vel, float prosjek){
    int i,j,zbir_ocjena=0,logicka_varijabla,studentski_broj[3]={0};
    float prosjek_trenutnog_studenta=5.0,najbolji[3]={0};
    for (i=0;i<vel;i++){
        //trazenje prosjeka
        zbir_ocjena=0;
        logicka_varijabla=1;
        if(studenti[i].br_ocjena==0){
            prosjek_trenutnog_studenta=5.0;
            logicka_varijabla=0;
        }
        for (j=0;j<studenti[i].br_ocjena;j++){
            if (studenti[i].ocjene[j]==5){
                logicka_varijabla=0;
                prosjek_trenutnog_studenta=5.0;
                break;
            }
            else zbir_ocjena+=studenti[i].ocjene[j];
        }
        if(logicka_varijabla)
        prosjek_trenutnog_studenta=(float)zbir_ocjena/studenti[i].br_ocjena;
        //izbacivanje
        if (prosjek_trenutnog_studenta<prosjek){
            j=i;
            while(j<vel-1){
                studenti[j]=studenti[j+1];
                j++;
            }
            vel--;    
            i--;
            continue;
        }
        //izdvajanje najboljih studenata
    if(prosjek_trenutnog_studenta>najbolji[0] || ((prosjek_trenutnog_studenta==najbolji[0] && strcmp(studenti[i].prezime,studenti[studentski_broj[0]].prezime)<0)||
    (prosjek_trenutnog_studenta==najbolji[0] && strcmp(studenti[i].prezime,studenti[studentski_broj[0]].prezime)==0 && strcmp(studenti[i].ime,studenti[studentski_broj[0]].ime)<0))){
          najbolji[2]=najbolji[1];
          najbolji[1]=najbolji[0];
          najbolji[0]=prosjek_trenutnog_studenta;
          studentski_broj[2]=studentski_broj[1];
          studentski_broj[1]=studentski_broj[0];
          studentski_broj[0]=i;
      }
      else if(prosjek_trenutnog_studenta>najbolji[1] || ((prosjek_trenutnog_studenta==najbolji[1] && strcmp(studenti[i].prezime,studenti[studentski_broj[1]].prezime)<0)|| 
      (prosjek_trenutnog_studenta==najbolji[1] && strcmp(studenti[i].prezime,studenti[studentski_broj[1]].prezime)==0 && strcmp(studenti[i].ime,studenti[studentski_broj[1]].ime)<0))){
          najbolji[2]=najbolji[1];
          najbolji[1]=prosjek_trenutnog_studenta;
          studentski_broj[2]=studentski_broj[1];
          studentski_broj[1]=i;
      }
     else if(prosjek_trenutnog_studenta>najbolji[2] || ((prosjek_trenutnog_studenta==najbolji[2] && strcmp(studenti[i].prezime,studenti[studentski_broj[2]].prezime)<0)|| 
     (prosjek_trenutnog_studenta==najbolji[2] && strcmp(studenti[i].prezime,studenti[studentski_broj[2]].prezime)==0 && strcmp(studenti[i].ime,studenti[studentski_broj[2]].ime)<0))){
    najbolji[2]=prosjek_trenutnog_studenta;
    studentski_broj[2]=i;
      }
    }
    //ispis potrabnih studenata
    if(najbolji[0]!=0) printf(""%s %s\n"",studenti[studentski_broj[0]].prezime,studenti[studentski_broj[0]].ime);
    if(najbolji[1]!=0) printf(""%s %s\n"",studenti[studentski_broj[1]].prezime,studenti[studentski_broj[1]].ime);
    if(najbolji[2]!=0) printf(""%s %s\n"",studenti[studentski_broj[2]].prezime,studenti[studentski_broj[2]].ime);
    return vel;
}

int main(){
    struct Student studenti[100];
    int i=0,prekid;
    do{
        printf(""Unesite ime i prezime studenta %d: "",i+1);
        unesi(studenti[i].ime,20);
        unesi(studenti[i].prezime,20);
        i++;
        printf(""Ako ste zavrsili sa unosom studenata pritisnite 0, ako ne onda 1."");
        scanf(""%d"",&prekid);
    }while(i<100 && prekid);
    return 0;
}","#include <stdio.h>
#include <string.h>
#define epsilon 0.00001
void unesi(char* niz,int vel){
	int i=0;
	char znak=getchar();
	if(znak=='\n')
		znak=getchar();
	while(i<vel-1 && znak!='\0'){
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
}
struct Student {
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

int genijalci(struct Student *studenti,int vel,float prosjek){
	int i,j,suma_ocjena=0,logicki_prosjek,broj_studenta[3]={0};
	float pojedinacni_prosjek=5.0,max[3]={0};
	//trazenje prosjek studenta pojedinacno
	for(i=0;i<vel;i++){
		suma_ocjena=0;
		logicki_prosjek=1;
		if(studenti[i].br_ocjena==0){
			pojedinacni_prosjek=5.0;
			logicki_prosjek=0;
			
		}
		for(j=0;j<studenti[i].br_ocjena;j++){
			if(studenti[i].ocjene[j]==5){
				logicki_prosjek=0;
				pojedinacni_prosjek=5.0;
				break;
			}
			else
			suma_ocjena+=studenti[i].ocjene[j];
		}
		if(logicki_prosjek)
		pojedinacni_prosjek=(float)suma_ocjena/studenti[i].br_ocjena;
		//izbacivanje iz niza
		if(pojedinacni_prosjek<prosjek){
			for(j=i;j<vel-1;j++){
				studenti[j]=studenti[j+1];
			}
			
			vel--;
			i--;
			continue;
			}
		//trazenje najboljih/maximalnih u nizu i leksikografsko poredjenje po potrebi
		if(pojedinacni_prosjek>max[0] || (pojedinacni_prosjek==max[0] && strcmp(studenti[i].prezime,studenti[broj_studenta[0]].prezime)<0)||(pojedinacni_prosjek==max[0] && strcmp(studenti[i].prezime,studenti[broj_studenta[0]].prezime)==0 && strcmp(studenti[i].ime,studenti[broj_studenta[0]].ime)<0)){
			max[2]=max[1];
			max[1]=max[0];
			max[0]=pojedinacni_prosjek;
			broj_studenta[2]=broj_studenta[1];
			broj_studenta[1]=broj_studenta[0];
			broj_studenta[0]=i;
		}
		else if(pojedinacni_prosjek>max[1] || (pojedinacni_prosjek==max[1] && strcmp(studenti[i].prezime,studenti[broj_studenta[1]].prezime)<0)||(pojedinacni_prosjek==max[1] && strcmp(studenti[i].prezime,studenti[broj_studenta[1]].prezime)==0 && strcmp(studenti[i].ime,studenti[broj_studenta[1]].ime)<0)){
			max[2]=max[1];
			max[1]=pojedinacni_prosjek;
			broj_studenta[2]=broj_studenta[1];
			broj_studenta[1]=i;
		}
		else if(pojedinacni_prosjek>max[2] || (pojedinacni_prosjek==max[2] && strcmp(studenti[i].prezime,studenti[broj_studenta[2]].prezime)<0)||(pojedinacni_prosjek==max[2] && strcmp(studenti[i].prezime,studenti[broj_studenta[2]].prezime)==0 && strcmp(studenti[i].ime,studenti[broj_studenta[2]].ime)<0)){
			max[2]=pojedinacni_prosjek;
			broj_studenta[2]=i;
	
		}
		}
		//ispis najboljih
		if(max[0]!=0) printf(""%s %s\n"",studenti[broj_studenta[0]].prezime,studenti[broj_studenta[0]].ime);
		if(max[1]!=0) printf(""%s %s\n"",studenti[broj_studenta[1]].prezime,studenti[broj_studenta[1]].ime);
		if(max[2]!=0) printf(""%s %s\n"",studenti[broj_studenta[2]].prezime,studenti[broj_studenta[2]].ime);
	return vel;
}

int main() {
	struct Student studenti[100];
	int i=0,prekid;
	do{
		printf(""Unesite ime i prezime studenta %d: "",i+1);
		unesi(studenti[i].ime,20);
		unesi(studenti[i].prezime,20);
		i++;
		printf(""Ako ste zavrsili sa unosom studenata pritisnite 0, ako ne onda 1."");
		scanf(""%d"",&prekid);
	}while(i<100 && prekid);
	return 0;
}
"
2922,99,99,0,91,A2016/Z4/Z3/student3301,A2016/Z4/Z3/student2526,"#include <stdio.h>
#include <stdlib.h>
    /* Provjeravanje na sta pokazuje pokazivac p2 */ 
int znak(char *slovo){
	if ((*slovo>='A'&&*slovo<='Z')||(*slovo>='a'&&*slovo<='z')||*slovo=='-'||*slovo=='.') return 0;
	else return 1;
}
char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	char *p1=tekst,*poc=tekst;
	int duzina=0,duzina1=0,duzina2=0,i,l,m,j;
	for (i=0;i<broj_rijeci;i++){
		j=0;
		duzina1=0;
		duzina2=0;
		/* Odredivanje duzine rijeci */ 
		while(rijeci[i][j]!='\0'){
			duzina1++;
			j++;
		}
		m=0;
		while (zamjene[i][m]!='\0'){
			duzina2++;
			m++;
		}
		duzina=duzina2-duzina1;
		p1=tekst;
		/* Trazenje rijeci */
		while (*p1!='\0'){
			char *p2=p1;
			char *p=rijeci[i];
			while (*p2==*p){
				if (*p=='\0') break;
				p2++;p++;
			}
			int provjera2=znak(p2);
			/* Uslovi za jednakost rijeci, zatim zamjena */
			if (*p=='\0'&& (p1==poc||*(p1-1)==' ')&&(*p2=='\0'||*p2==' '||provjera2)){
				if (duzina==0){
					for(l=0;l<duzina1;l++){
						*p1++=zamjene[i][l];
					}
				}
				else if(duzina1<duzina2){
					char *kraj=p1;
				    while (*kraj != '\0') kraj++;
				    while (kraj > p1) {
   				    *(kraj+duzina) = *kraj;
   				    kraj--;
   			        }
   			        for (l=0;l<duzina2;l++){
   			    	*p1++=zamjene[i][l];
   			        }
					
				}
			
				else if(duzina1>duzina2){
					char *pocetak=p1;
				    while (*pocetak!='\0') {
   				    *pocetak=*(pocetak-duzina);
   				    if (*pocetak=='\0') break;
   				    pocetak++;
   			        }
   			        for (l=0;l<duzina2;l++){
   			    	*p1++=zamjene[i][l];
				    }
				 
   			    }
   			    
   			    p1--;
   			   
   			    
   			    
			}
                
   			    
   		
			p1++;	
			}
			
			
		}
		

      
	
	return poc;
}
int main() {
char* rijeci[2] = {""test"", ""testiranje""};
char* zamjene[2] = {""swap"", ""zamjena"" };
char tekst[] = ""test testiranje test"";
printf(""'%s'"", zamjena_rijeci(tekst, rijeci, zamjene, 1));

return 0;

}
","#include <stdio.h>
#include <stdlib.h>
    /* Provjeravanje na sta pokazuje pokazivac p2 */ 
int znak(char *slovo){
	if ((*slovo>='A'&&*slovo<='Z')||(*slovo>='a'&&*slovo<='z')||*slovo=='-'||*slovo=='.') return 0;
	else return 1;
}
char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	char *p1=tekst,*poc=tekst;
	int duzina=0,duzina1=0,duzina2=0,i,l,m,j;
	for (i=0;i<broj_rijeci;i++){
		j=0;
		duzina1=0;
		duzina2=0;
		/* Odredivanje duzine rijeci */ 
		while(rijeci[i][j]!='\0'){
			duzina1++;
			j++;
		}
		m=0;
		while (zamjene[i][m]!='\0'){
			duzina2++;
			m++;
		}
		duzina=duzina2-duzina1;
		p1=tekst;
		/* Trazenje rijeci */
		while (*p1!='\0'){
			char *p2=p1;
			char *p=rijeci[i];
			while (*p2==*p){
				if (*p=='\0') break;
				p2++;p++;
			}
			int provjera2=znak(p2);
			/* Uslovi za jednakost rijeci, zatim zamjena */
			if (*p=='\0'&& (p1==poc||*(p1-1)==' ')&&(*p2=='\0'||*p2==' '||provjera2)){
				if (duzina==0){
					for(l=0;l<duzina1;l++){
						*p1++=zamjene[i][l];
					}
				}
				else if(duzina1<duzina2){
					char *kraj=p1;
				    while (*kraj != '\0') kraj++;
				    while (kraj > p1) {
   				    *(kraj+duzina) = *kraj;
   				    kraj--;
   			        }
   			        for (l=0;l<duzina2;l++){
   			    	*p1++=zamjene[i][l];
   			        }
					
				}
			
				else if(duzina1>duzina2){
					char *pocetak=p1;
				    while (*pocetak!='\0') {
   				    *pocetak=*(pocetak-duzina);
   				    if (*pocetak=='\0') break;
   				    pocetak++;
   			        }
   			        for (l=0;l<duzina2;l++){
   			    	*p1++=zamjene[i][l];
				    }
				 
   			    }
   			    
   			    p1--;
   			   
   			    
   			    
			}
                
   			    
   		
			p1++;	
			}
			
			
		}
		

      
	
	return poc;
}
int main() {
char* rijeci[2] = {""test"", ""testiranje""};
char* zamjene[2] = {""swap"", ""zamjena"" };
char tekst[] = ""test testiranje test"";
printf(""'%s'"", zamjena_rijeci(tekst, rijeci, zamjene, 1));

return 0;

}
"
2923,84,84,0,54,A2016/Z2/Z4/student2585,A2016/Z2/Z4/student3671,"#include <stdio.h>

int main() {
int  M, N, i, j, cirkularna, teplicova;
teplicova=1;
cirkularna=1;
double m[100][100];

do
{
    printf(""Unesite M i N: "");
    scanf(""%d %d"", &M, &N);
    if(M>100 || N>100 || M<=0 || N<=0) {printf(""Pogresan unos!\n"");}
    
} while (M>100 || N>100 || M<=0 || N<=0);

printf(""Unesite elemente matrice: "");

for(i=0; i<M; i++)
{
    for(j=0; j<N; j++)
    {
        scanf(""%lf"", &m[i][j]);
        
    }
}

for(i=1; i<M; i++)
{
    for(j=1; j<N; j++)
    {
        if(m[i][j]!=m[i-1][j-1])
        {
            teplicova=0;
            
        }
    }
}

for(i=1; i<M; i++)
{
    
         if(m[i][0]!=m[i-1][N-1] )
        {
           cirkularna=0;
           break;
        }
        
    
    
}

    if(cirkularna && teplicova) 
    {
        printf(""Matrica je cirkularna\n"");
    }
  
    else if(teplicova && cirkularna==0)
    {
        printf(""Matrica je Teplicova\n"");
    }
    else
    {
        printf(""Matrica nije ni cirkularna ni Teplicova"");
        
    }

return 0;
}","#include <stdio.h>

int main() {
	double matrica[100][100];
	int i,j,M,N,teplicova=1,cirkularna=1;
	do
	{
		printf(""Unesite M i N: "");
		scanf(""%d %d"", &M,&N);
		if(M<=0 || M>100 || N<=0 || N>100)
		{
			printf(""Pogresan unos!\n"");
		}
	}while(M<=0 || M>100 || N<=0 || N>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++)
	{
		for(j=0;j<N;j++)
		{
		
			scanf(""%lf"", &matrica[i][j]);
		}
	}
	for(i=1;i<M;i++)
	{
		for(j=1;j<N;j++){
			if(matrica[i][j] != matrica[i-1][j-1])
			{
				teplicova=0;
			}
		}
	}
	
	for(i=1;i<M;i++)
	{
		if(matrica[i][0] != matrica[i-1][N-1])
		{
			cirkularna=0;
			break;
		}
	}
	if(cirkularna && teplicova)
	{printf(""Matrica je cirkularna"");}
	else if(teplicova && cirkularna==0)
	{printf(""Matrica je Teplicova"");}
	else {printf(""Matrica nije ni cirkularna ni Teplicova"");}
	return 0;
}
"
2926,63,63,0,56,A2016/Z3/Z2/student8724,A2016/Z3/Z2/student1502,"#include <stdio.h>
#include <math.h>
	
	int br(int i){
		int suma=0;
		while(i!=0){
			i=fabs(i);
			suma+=i%10;
			i/=10;
		}
		return suma;
	}
	
	int f(int b){
		
		int a=1, c=1, d;
		if(b==1){
			return 1;
		}
		while(2){
			d=a+c;
			if(d==b)return 1;
			if(d>b) return 0;
			a=c;
			c=d;
		}
	}
	
	
	
	int izbaci(int* n, int v){
		int i, y, j;
		for(i=0;i<v;i++){
			y=f(n[i]);
			if(y){
				for(j=i;j<v-1;j++){
					n[j]=n[j+1];
					
				}
				v--;
				i--;
			}
		}
		return v;
		
	}
	
	
	void ubaci(int* niz, int  velicina){
		int niz2[20];
		int niz3[20];
		int i;
		for(i=0; i<velicina;i++){
			niz2[i]=br(niz[i]);
		}
		int b=0;
		for(i=0;i<2*velicina;i+=2){
			niz3[i]=niz[b];
			niz3[i+1]=niz2[b];
			b++;
			if(b==velicina)break;
		}
		for(i=0;i<2*velicina;i++){
			niz[i]=niz3[i];
		}
	}
	
int main() {
			int niz[20];
			int i,broj;
			printf(""Unesite niz od 10 brojeva: "");
			for(i=0;i<10;i++){
				scanf(""%d"",&niz[i]);
				
			}
			
			ubaci(niz, 10);
			broj=izbaci(niz,20);
				printf(""Modificirani niz glasi: "");
				printf(""%d"", niz[0]);
				for(i=1;i<broj;i++){
					printf("", %d"", niz[i]);
					
				}
				printf(""."");
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
int daj_f(int b){
	int a=1,c=1;
	int d;
	if(b==1){
		return 1;
	}
	while(1==1){
		d=a+c;
		if(d==b)return 1;
		if(d>b)return 0;
		a=c;
		c=d;
	}
	
}
int broj(int i){
	int suma=0;
	
	while(i!=0){
		i=abs(i);
		suma+=i%10;
		i/=10;
	}
	return suma;
}
void ubaci(int* niz, int velicina){
	int niz2[20];
	int niz3[20];
	int i;
	for(i=0; i<velicina;i++){
		niz2[i]=broj(niz[i]);
	}
	int b=0;
	for(i=0;i<2*velicina;i+=2){
		niz3[i]=niz[b];
		niz3[i+1]=niz2[b];
		b++;
		if(b==velicina)break;
	}

	for(i=0;i<2*velicina;i++){
		niz[i]=niz3[i];
	}
}
int izbaci(int* niz, int velicina){
	int i;
	int j;
	  for(i=0;i<velicina; i++){
       int n=daj_f(niz[i]);
		if(n){	
			
			for(j=i;j<velicina-1;j++){
			niz[j]=niz[j+1];
			
			}
			
			velicina--;
			i--;
			
		}
		
	}
	return velicina;
}
int main() {
	int niz[20];
	int i;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<10;i++){
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,10);
	int broj_clanova=izbaci(niz,20);
		printf(""Modificirani niz glasi: "");
	printf(""%d"",niz[0]);
     for(i=1;i<broj_clanova;i++){
     	printf("", %d"",niz[i]);
     }
     printf(""."");
	return 0;
}
"
2928,80,80,0,139,A2016/Z1/Z1/student8067,A2016/Z1/Z1/student5805,"#include <stdio.h>


int main() {
	double I1,I2,I3,I4,I5,I6,P1,P2,P3,ZAD1,ZAD2,ZAD3,ZI1,ZI2,ZI3,ZT,ZM,ZB;
	int OCT,OCB,OCM;
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&I1);
   if(I1<0||I1>20)  { printf(""Neispravan broj bodova ""); return 0; }
   
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&I2);
    if(I2<0||I2>20) { printf(""Neispravan broj bodova ""); return 0; }
	
	printf(""Prisustvo: "");
	scanf(""%lf"",&P1);
    if(P1<0||P1>10) { printf(""Neispravan broj bodova ""); return 0; }
	
	printf(""Zadace: "");
	scanf(""%lf"",&ZAD1);
   if(ZAD1<0||ZAD1>10) {printf(""Neispravan broj bodova ""); return 0; }
   
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZI1);
    if(ZI1<0||ZI1>40) { printf(""Neispravan broj bodova ""); return 0; }
	
	printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&I3);
    if(I3<0||I3>20) { printf(""Neispravan broj bodova ""); return 0;  }
	
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&I4);
    if(I4<0||I4>20) {printf(""Neispravan broj bodova ""); return 0; }
    
	printf(""Prisustvo: "");
	scanf(""%lf"",&P2);
    if(P2<0||P2>10) { printf(""Neispravan broj bodova ""); return 0; }
    
	printf(""Zadace: "");
	scanf(""%lf"",&ZAD2);
   if(ZAD2<0||ZAD2>10) { printf(""Neispravan broj bodova ""); return 0; }
   
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZI2);
    if(ZI2<0||ZI2>40) {printf(""Neispravan broj bodova ""); return 0; }
	
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&I5);
    if(I5<0||I5>20) {printf(""Neispravan broj bodova ""); return 0; }

	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&I6);
	if(I6<0||I6>20) {printf(""Neispravan broj bodova ""); return 0; }
	
	printf(""Prisustvo: "");
	scanf(""%lf"",&P3);
    if(P3<0||P3>10) {printf(""Neispravan broj bodova ""); return 0; }

	printf(""Zadace: "");
	scanf(""%lf"",&ZAD3);
    if(ZAD3<0||ZAD3>10) { printf(""Neispravan broj bodova ""); return 0; }
  
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&ZI3);
	if(ZI3<0||ZI3>40) {printf(""Neispravan broj bodova ""); return 0; }

   
	ZT=I1+I2+P1+ZAD1+ZI1; 
	ZB=I3+I4+P2+ZAD2+ZI2; 
	ZM=I5+I6+P3+ZAD3+ZI3; 
	
	
	
	
	  if(ZT<55) {
		OCT=5;
	}
	else if(ZT>=55 && ZT<=65) {
		OCT=6;
	}
	else if(ZT>=65 && ZT<=75) {
		OCT=7;
	}
		else if(ZT>=75 && ZT<=85) {
		OCT=8;
		}
	else if(ZT>=85 && ZT<=92) {
	    OCT=9;
	}
	else if(ZT>=92 && ZT<=100) {
		OCT=10;
	}
	if(ZB<55) {
		OCB=5;
	}
	else if(ZB>=55 && ZB<=65) {
		OCB=6;
	}
	else if(ZB>=65 && ZB<=75) {
		OCB=7;
	}
		else if(ZB>=75 && ZB<=85) {
			OCB=8;
		}
	else if(ZB>=85 && ZB<=92) {
		OCB=9;
	}
	else if(ZB>=92 && ZB<=100) {
		OCB=10;
	}
	if(ZM<55) {
		OCM=5;
	}
	else if(ZM>=55 && ZM<=65) {
		OCM=6;
	}
	else if(ZM>=65 && ZM<=75) {
		OCM=7;
	}
		else if(ZM>=75 && ZM<=85) {
			OCM=8;
		}
	else if(ZM>=85 && ZM<=92) {
		OCM=9;
	}
	else if(ZM>=92 && ZM<=100) {
	    OCM=10;
	}

	if(OCT<6 && OCB<6 && OCM<6) {
		printf(""Nijedan student nije polozio. \n"");
	}
	 else if(OCT>=6 && OCB<6 && OCM<6 || OCB>=6 && OCT<6 && OCM<6 || OCM>=6 && OCB<6 && OCT<6) {
		printf(""Jedan student je polozio. \n"");
	}
	 else if(OCT>=6 && OCB>=6 && OCM<6 || OCB>=6 && OCM>=6 && OCT<6 || OCM>=6 && OCB>=6 && OCT<6) {
		printf(""Dva studenta su polozila. \n"");
	}
	 if(OCT>=6 && OCB>=6 && OCM>=6) {
		printf(""Sva tri studenta su polozila. \n"");
	
	if(OCT==OCB&&OCM==OCT&&OCM==OCB) {
		printf(""Sva tri studenta imaju istu ocjenu. \n"");
		
	}
	else if(OCT==OCB && OCT!=OCM || OCT==OCM && OCT!=OCB ) {
		printf(""Dva od tri studenta imaju istu ocjenu. \n"");
	}
	else if(OCT!=OCB&&OCT!=OCM&&OCB!=OCM) {
		printf(""Svaki student ima razlicitu ocjenu. \n"");
	}
	}
    
		

	

	return 0;
}
","#include <stdio.h>

int main() {
	double pp1,dp1,pris1,z1,zi1,pp2,dp2,pris2,z2,zi2,pp3,dp3,pris3,z3,zi3,bod1,bod2,bod3;
	int o1,o2,o3;
	printf(""Unesite bodove za Tarika:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&pp1);
	if(pp1<0 || pp1>20){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&dp1);
	if(dp1<0 || dp1>20){
		printf(""Neispravan broj bodoba"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%lf"",&pris1);
	if(pris1<0 || pris1>10){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"",&z1);
	if(z1<0 || z1>10){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&zi1);
	if(zi1<0 || zi1>40){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Bojana:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&pp2);
	if(pp2<0 || pp2>20){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&dp2);
	if(dp2<0 || dp2>20){
		printf(""Neipravan broj bodva"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%lf"",&pris2);
	if(pris2<0 || pris2>10){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"",&z2);
	if(z2<0 || z2>10){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&zi2);
	if(zi2<0 || zi2>40){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Mirzu:\n"");
	printf(""I parcijalni ispit: "");
	scanf(""%lf"",&pp3);
	if(pp3<0 || pp3>20){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%lf"",&dp3);
	if(dp3<0 || dp3>20){
		printf(""Neispravan broj bodoba"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%lf"",&pris3);
	if(pris3<0 || pris3>10){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%lf"",&z3);
	if(z3<0 || z3>10){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%lf"",&zi3);
	if(zi3<0 || zi3>40){
		printf(""Neispravan broj bodova"");
		return 0;
	}
	bod1=pp1+dp1+pris1+z1+zi1;
	bod2=pp2+dp2+pris2+z2+zi2;
	bod3=pp3+dp3+pris3+z3+zi3;
	bod1=(int)(bod1);
	bod2=(int)(bod2);
	bod3=(int)(bod3);
	if(bod1>=55 && bod1<65)
		o1=6;
	else if(bod1>=65 && bod1<75)
		o1=7;
	else if(bod1>=75 && bod1<85)
		o1=8;
	else if(bod1>=85 && bod1<92)
		o1=9;
	else if(bod1>=92 && bod1<=100)
		o1=10;
	else if(bod1<55)
		o1=0;
	if(bod2>=55 && bod2<65)
		o2=6;
	else if(bod2>=65 && bod2<75)
		o2=7;
	else if(bod2>=75 && bod2<85)
		o2=8;
	else if(bod2>=85 && bod2<92)
		o2=9;
	else if(bod2>=92 && bod2<=100)
		o2=10;
	else if(bod2<55)
		o2=0;
	if(bod3>=55 && bod3<65)
		o3=6;
	else if(bod3>=65 && bod3<75)
		o3=7;
	else if(bod3>=75 && bod3<85)
		o3=8;
	else if(bod3>=85 && bod3<92)
		o3=9;
	else if(bod3>=92 && bod3<=100)
		o3=10;
	else if(bod3<55)
		o3=0;
	if(o1==0 && o2==0 && o3==0)
		printf(""Nijedan student nije polozio.\n"");
	else if((o1>=6 && o2<6 && o3>=6)||(o1>=6 && o2>=6 && o3<6)){
			printf(""Dva studenta su polozila.\n"");
	}
	else if((o2>=6 && o1<6 && o3>=6)||(o2>=6 && o1>=6 && o3<6)){
			printf(""Dva studenta su polozila.\n"");
	}
	else if((o3>=6 && o2>=6 && o1<6)||(o3>=6 && o2<6 && o1>=6)){
			printf(""Dva studenta su polozila.\n"");
	}
	else if(o1>=6 && o2<6 && o3<6){
			printf(""Jedan student je polozio.\n"");
	}
	else if(o2>=6 && o1<6 && o3<6){
			printf(""Jedan student je polozio.\n"");
	}
	else if(o3>=6 && o2<6 && o1<6){
			printf(""Jedan student je polozio.\n"");
	}
	else if(o1>=6 && o2>=6 && o3>=6){
		printf(""Sva tri studenta su polozila.\n"");
		if(o1==o2 && o1==o3 && o2==o3)
			printf(""Sva tri studenta imaju istu ocjenu.\n"");
		else if(o1==o2 && o2!=o3)
			printf(""Dva od tri studenta imaju istu ocjenu.\n"");
		else if(o1==o3 && o3!=o2)
			printf(""Dva od tri studenta imaju istu ocjenu.\n"");
		else if(o2==o3 && o3!=o1)
			printf(""Dva od tri studenta imaju istu ocjenu.\n"");
		else if(o1!=o2 && o1!=o3 && o3!=o2)
			printf(""Svaki student ima razlicitu ocjenu.\n"");
	} 
	return 0;
}
"
2929,75,75,0,32,A2016/Z2/Z4/student6008,A2016/Z2/Z4/student5268,"#include <stdio.h>

int main() {
	int m, n, i, j, cirkularna=1, teplicova=1;
	double mat[100][100];
	
	
	do{
		printf(""Unesite M i N: "");
		scanf(""%d%d"", &m, &n);
		if((m<1 || m>100) ||(n<1 || n>100))
			printf(""Pogresan unos!\n"");
			
	}while(m<1 || m>100 || n<1 || n>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0; i<m; i++){
		for(j=0; j<n; j++){
			scanf(""%lf"", &mat[i][j]);
		}
	}
	for(i=0; i<m-1; i++){
		for(j=0; j<n-1; j++){
			if(mat[i][n-1]!=mat[i+1][0]) {
				cirkularna=0;
				break;
			}
		}
	}
	
	
	for(i=0; i<m-1; i++){
		for(j=0; j<n-1; j++){
			if(mat[i][j]!=mat[i+1][j+1]){
				teplicova=0;
				break;
			}
		}
	}
	if (n == 1 && m != 1) {
		cirkularna = 0;
		teplicova = 1;
	}
	
	if(teplicova==1) {
		if (cirkularna == 1) {
			printf(""Matrica je cirkularna"");
		} else {
			printf(""Matrica je Teplicova"");
		}
	} else { 
		printf(""Matrica nije ni cirkularna ni Teplicova"");
	}
	
	return 0;
}
","#include <stdio.h>

int main() {

	double mat[100][100];
	int j, k, m, n, cirk=1, tepl=1;

	do {
		printf(""Unesite M i N: "");
		scanf(""%d%d"",&m, &n);
		if((m<1 || m>100) || (n>100 || n<1)) 
			printf(""Pogresan unos!\n"");
		
	} while(m<1 || m>100 || n<1 || n>100);
	printf(""Unesite elemente matrice: "");
	for(j=0; j<m; j++) {
		for(k=0; k<n; k++) {
			scanf(""%lf"", &mat[j][k]);
		}
	}
	for(j=0; j<m-1; j++){
		for(k=0; k<n-1; k++){
			if(mat[j][n-1]!=mat[j+1][0]){
				cirk=0;
				break;
			}
		}
	}

	for(j=0; j<m-1; j++){
		for(k=0; k<n-1; k++){
			if(mat[j][k]!=mat[j+1][k+1]){
				tepl=0;
				break;
			}
		}
	}
    if(n==1 && m>1){
    	printf(""Matrica je Teplicova"");
    	return 0;
    }
	if(tepl==1) {
		if(cirk==1) {
			printf(""Matrica je cirkularna"");
		} else {
			printf(""Matrica je Teplicova"");
		}

	} else {
		printf(""Matrica nije ni cirkularna ni Teplicova"");
	}
	return 0;
}
"
2933,90,90,0,56,A2016/Z2/Z4/student4804,A2016/Z2/Z4/student2340,"#include <stdio.h>
#include <math.h>
#define E 0.0001
int main() {
	int m,n,i,j,t=0,c=0;
	double a[100][100]={{0}};
	do
	{
	printf(""Unesite M i N: "");
	scanf(""%d %d"",&m,&n);
	if(m<=0 || m>100 || n<=0 || n>100)
	printf(""Pogresan unos!\n"");
	}
	while(m<=0 || m>100 || n<=0 || n>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++)
	
		for(j=0;j<n;j++)
		{
			scanf(""%lf"",&a[i][j]);
		}
		
		for(i=0;i<m-1;i++)
		{
		for(j=0;j<n-1;j++)
		{
		if(fabs(a[i][j]-a[i+1][j+1])<E)
		t=1;
		else
		{
		t=0;
		break;
		}
		
		}
		if(t==0)
		break;
		}
		
		for(i=0;i<m-1;i++)
		{
		for(j=0;j<n-1;j++)
		{
		if(t==1 && (fabs(a[i][n-1]-a[i+1][0])<E))
		c=1;
		else
		{
		c=0;
		break;
		}
		}
		if(c==0)
		break;
		}
		if(c==1 || m==1)
		printf(""Matrica je cirkularna"");
		else
		if(t==1 || n==1)
		printf(""Matrica je Teplicova"");
		else
		printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
","/*4. (0,5 bodova) 



Također su poznate Cirkularne matrice. Cirkularna matrica je matrica kod koji svaki red ima iste elemente kao red 
iznad pomaknute za jedno mjesto u desno, pri čemu element koji je u prethodnom redu bio posljednji u sljedećem postaje 
prvi. Možemo zaključiti da je svaka cirkularna matrica ujedno i Teplicova, dok obrnuto ne važi. 
Primjer cirkularne matrice:



Napišite program koji korisniku omogućuje unos dva prirodna broja M i N manja ili jednaka od 100. Koristite do-while
petlju da osigurate da su brojevi u traženom opsegu (jednu petlju za oba broja). 


Zatim korisnik unosi matricu realnih brojeva čije su dimenzije MxN, te na kraju ispisuje jednu od poruka ""Matrica je
cirkularna"", ""Matrica je Teplicova"" ili ""Matrica nije ni cirkularna ni Teplicova"".


Primjer ulaza i izlaza:
Unesite M i N: 101 5
Pogresan unos!
Unesite M i N: 99 -1
Pogresan unos!
Unesite M i N: 4 5
Unesite elemente matrice: 1 2 3 4 5 5 1 2 3 4 4 5 1 2 3 3 4 5 1 2
Matrica je cirkularna


*/
#include <stdio.h>
#include <math.h>
#define epsilon 0.001
int main() {
	int m,n,i,j,templic,cirkularna;
	double A[100][100]={{0}};
	

					
	do{
		printf(""Unesite M i N: "");
		scanf(""%d %d"", &m,&n);
		 if((m<=0 || m>100) || (n<=0 || n>100)){
				 	printf(""Pogresan unos!\n"");
				 }
		
				
			}
	while ((m<=0 || m>100) || (n<=0 || n>100));
	printf(""Unesite elemente matrice: "");
	for (i=0; i<m; i++){
			for (j=0; j<n; j++){
				 scanf(""%lf"", &A[i][j]); 
			}
	}
	
	templic=0;
	cirkularna=0;
	/*U matematici je poznat pojam Teplicove matrice. Teplicova matrica je matrica kod koje su svi elementi 
na glavnoj dijagonali međusobno jednaki, ali su i na svakoj dijagonali koja je paralelna sa glavnom dijagonalom svi 
elementi također međusobno jednaki. Primjer Teplicove matrice:*/

		for (i=0; i<m-1; i++){
			for (j=0; j<n-1; j++){
				if(fabs(A[i][j]-A[i+1][j+1])<epsilon)
	templic=1;
	else{
		templic=0;
		break;
	}
				
			}
			if(templic==0)
			break;
		}
	
			for (i=0; i<m-1; i++){
			for (j=0; j<n-1; j++){
	if((templic==1) &&	(fabs(A[i][n-1]-A[i+1][0])<epsilon))
	{
				cirkularna=1;
	}
	else{		cirkularna=0;
				break;
	}
			}
			if(cirkularna==0)
			break;
			}
		if (cirkularna==1 || m==1) printf(""Matrica je cirkularna"");
		else
		if(templic==1 || n==1) printf(""Matrica je Teplicova"");
		else
		 printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
"
2934,99,99,0,135,A2016/Z5/Z1/student2160,A2016/Z5/Z1/student3841,"#include <stdio.h>
#include <string.h>

struct Student
{
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

/*POMOCNA FUNKCIJA ZA RACUNANJE PROSJEKA OCJENA JEDNOG STUDENTA*/
double prosjek_ocjena(int ocjene[], int br_ocjena)
{
	double prosjek1 = 0, suma = 0;
	int i = 0;
	
	if(br_ocjena == 0)
		return 5.0;
		
	for(i = 0; i < br_ocjena; i++)
	{
		if(ocjene[i] == 5)
		{
			prosjek1 = 5.0;
			return prosjek1;
		}
			
		suma += ocjene[i];
	}	
	
	prosjek1 = suma / br_ocjena;
	
	return prosjek1;
}
/*FUNKCIJA ZA POREDJENJE DVA STUDENTA PO KRITERIJU*/
int kriterij(struct Student prvi, struct Student drugi)
{
	double p1, p2;
	
	p1 = prosjek_ocjena(prvi.ocjene, prvi.br_ocjena); /*prosjek ocjena prvog studenta*/
	p2 = prosjek_ocjena(drugi.ocjene, drugi.br_ocjena); /*prosjek ocjena drugog studenta*/
	
	if(p1 > p2) /*ako je prosjek prvog veci od prosjeka drugog prvi je bolji*/
		return 1;
		
	if(p1 < p2) /*ako je prosjek drugog veci od prosjeka prvog onda je bolji drugi student*/
		return 0;
		
	if(strcmp(prvi.prezime, drugi.prezime) < 0) /*prvi bolji tj abecedno prije drugog po prezimenu (isti prosjek)*/
		return 1;
		
	else if(strcmp(prvi.prezime, drugi.prezime) > 0) /*drugi je prije abecedno*/
		return 0;
		
	if(strcmp(prvi.ime, drugi.ime) < 0) /*ako su prezimena ista gleda se cije je ime abecedno prije*/
		return 1;
		
	else 
		return 0;
}

int genijalci(struct Student studenti[], int velicina, double prosjek)
{
	double pr;
	int i = 0, j = 0, i1 = 0, i2 = -1, i3 = -1;
	
	for(i = 0; i < velicina; i++)
	{
		pr = prosjek_ocjena(studenti[i].ocjene, studenti[i].br_ocjena);
		
		if(pr < prosjek)
		{
			for(j = i; j < velicina - 1; j++) /*izbacuje studente ciji je prosjek manji od parametra funkcije*/
				studenti[j] = studenti[j + 1];
				
			velicina--;
			i--;
		}
	}
	
	if(velicina == 0)  /*ako su izbaceni svi studenti nema sta ispisivati tj prekid funkcije*/
		return 0;
		
	/*trazi se prvi student*/
	for(i = 0; i < velicina; i++)
		if(kriterij(studenti[i], studenti[i1]))
			i1 = i;
	
	/*postavljanje indeksa drugog studenta na neku vrijednost koja nije i1*/
	for(i = 0; i < velicina; i++)
		if(i != i1)
			i2 = i;
	
	/*ako postoji drugi najbolji*/
	if(i2 != -1)
	{
		/*trazenje drugog najboljeg*/
		for(i = 0; i < velicina; i++)
			if(kriterij(studenti[i], studenti[i2]) && i != i1)
				i2 = i;
		
		/*postavljanje indeksa treceg na neku vrijednost koja nije ni i1 ni i2*/
		for(i = 0; i < velicina; i++)
			if(i != i2 && i != i1)
				i3 = i;
		
		/*ukoliko postoji treci student*/
		if(i3 != -1)
			for(i = 0; i < velicina; i++) /*trazenje treceg studenta*/
				if(kriterij(studenti[i], studenti[i3]) && i != i2 && i != i1)
					i3 = i;
	}
	
	printf(""%s %s\n"", studenti[i1].prezime, studenti[i1].ime);  /*ispisivanje prvog studenta*/
	
	if(i2 != -1)
		printf(""%s %s\n"", studenti[i2].prezime, studenti[i2].ime); /*ispisivanje drugog ukoliko on postoji*/
		
	if(i3 != -1)
		printf(""%s %s\n"", studenti[i3].prezime, studenti[i3].ime); /*ispisivanje treceg ukoliko postoji*/
		
	return velicina;
}

int main() 
{
	/*printf(""Zadaća 5, Zadatak 1"");*/
	
	struct Student studenti[6] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};

	printf(""%d "", kriterij(studenti[0], studenti[5]));
	return 0;
}
","#include <stdio.h>
#include <string.h>

struct Student
{
	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

/*POMOCNA FUNKCIJA ZA RACUNANJE PROSJEKA OCJENA JEDNOG STUDENTA*/
double prosjek_ocjena(int ocjene[], int br_ocjena)
{
	double prosjek1 = 0, suma = 0;
	int i = 0;
	
	if(br_ocjena == 0)
		return 5.0;
		
	for(i = 0; i < br_ocjena; i++)
	{
		if(ocjene[i] == 5)
		{
			prosjek1 = 5.0;
			return prosjek1;
		}
			
		suma += ocjene[i];
	}	
	
	prosjek1 = suma / br_ocjena;
	
	return prosjek1;
}
/*FUNKCIJA ZA POREDJENJE DVA STUDENTA PO KRITERIJU*/
int kriterij(struct Student prvi, struct Student drugi)
{
	double p1, p2;
	
	p1 = prosjek_ocjena(prvi.ocjene, prvi.br_ocjena); /*prosjek ocjena prvog studenta*/
	p2 = prosjek_ocjena(drugi.ocjene, drugi.br_ocjena); /*prosjek ocjena drugog studenta*/
	
	if(p1 > p2) /*ako je prosjek prvog veci od prosjeka drugog prvi je bolji*/
		return 1;
		
	if(p1 < p2) /*ako je prosjek drugog veci od prosjeka prvog onda je bolji drugi student*/
		return 0;
		
	if(strcmp(prvi.prezime, drugi.prezime) < 0) /*prvi bolji tj abecedno prije drugog po prezimenu (isti prosjek)*/
		return 1;
		
	else if(strcmp(prvi.prezime, drugi.prezime) > 0) /*drugi je prije abecedno*/
		return 0;
		
	if(strcmp(prvi.ime, drugi.ime) < 0) /*ako su prezimena ista gleda se cije je ime abecedno prije*/
		return 1;
		
	else 
		return 0;
}

int genijalci(struct Student studenti[], int velicina, double prosjek)
{
	double pr;
	int i = 0, j = 0, i1 = 0, i2 = -1, i3 = -1;
	
	for(i = 0; i < velicina; i++)
	{
		pr = prosjek_ocjena(studenti[i].ocjene, studenti[i].br_ocjena);
		
		if(pr < prosjek)
		{
			for(j = i; j < velicina - 1; j++) /*izbacuje studente ciji je prosjek manji od parametra funkcije*/
				studenti[j] = studenti[j + 1];
				
			velicina--;
			i--;
		}
	}
	
	if(velicina == 0)  /*ako su izbaceni svi studenti nema sta ispisivati tj prekid funkcije*/
		return 0;
		
	/*trazi se prvi student*/
	for(i = 0; i < velicina; i++)
		if(kriterij(studenti[i], studenti[i1]))
			i1 = i;
	
	/*postavljanje indeksa drugog studenta na neku vrijednost koja nije i1*/
	for(i = 0; i < velicina; i++)
		if(i != i1)
			i2 = i;
	
	/*ako postoji drugi najbolji*/
	if(i2 != -1)
	{
		/*trazenje drugog najboljeg*/
		for(i = 0; i < velicina; i++)
			if(kriterij(studenti[i], studenti[i2]) && i != i1)
				i2 = i;
		
		/*postavljanje indeksa treceg na neku vrijednost koja nije ni i1 ni i2*/
		for(i = 0; i < velicina; i++)
			if(i != i2 && i != i1)
				i3 = i;
		
		/*ukoliko postoji treci student*/
		if(i3 != -1)
			for(i = 0; i < velicina; i++) /*trazenje treceg studenta*/
				if(kriterij(studenti[i], studenti[i3]) && i != i2 && i != i1)
					i3 = i;
	}
	
	printf(""%s %s\n"", studenti[i1].prezime, studenti[i1].ime);  /*ispisivanje prvog studenta*/
	
	if(i2 != -1)
		printf(""%s %s\n"", studenti[i2].prezime, studenti[i2].ime); /*ispisivanje drugog ukoliko on postoji*/
		
	if(i3 != -1)
		printf(""%s %s\n"", studenti[i3].prezime, studenti[i3].ime); /*ispisivanje treceg ukoliko postoji*/
		
	return velicina;
}

int main() 
{
	/*printf(""Zadaća 5, Zadatak 1"");*/
	
	struct Student studenti[6] ={
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5}, 
	{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
	{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5}, 
	{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5}, 
};

	printf(""%d "", kriterij(studenti[0], studenti[5]));
	return 0;
}
"
2944,99,99,0,33,A2016/Z2/Z4/student3900,A2016/Z2/Z4/student7802,"#include <stdio.h>
#define VISINA 100
#define SIRINA 100
int main () {
    int t=1,c=1,m=1,n=1,i=0,j=0;
    double mat[VISINA][SIRINA]= {{0}};
    printf (""Unesite M i N: "");
    do{
        scanf(""%d %d"", &m, &n);
        if (m<=0 || n<=0 || m>100 || n>100){printf(""Pogresan unos!\n"");printf(""Unesite M i N: "");}
    }while(m<=0 || n<=0 || m>100 || n>100);
    printf(""Unesite elemente matrice: "");
    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
        scanf(""%lf"", &mat[i][j]);
        }
    }
    for(i=0;i<m-1;i++){
        for(j=0;j<n-1;j++){
           if(mat[i+1][j+1]!=mat[i][j] || mat[1+i][0]!=mat[i][n-1]) c=0;

        }
    }t=1;
    for(i=0;i<m-1;i++){
        for(j=0;j<n-1;j++){
           if(mat[i][j]!=mat[i+1][j+1]) t=0;
        }
    }
    
    
    
    if(n==1 && m!=1){printf(""Matrica je Teplicova"");}
    else if(c==1){printf(""Matrica je cirkularna"");}
    else if(t==1 && c==0){printf(""Matrica je Teplicova"");}
    else if(t==0 && c==0){printf(""Matrica nije ni cirkularna ni Teplicova"");}
    return 0;
}","#include <stdio.h>
#define VISINA 100
#define SIRINA 100
int main () {
    int t=1,c=1,m=1,n=1,i=0,j=0;
    double mat[VISINA][SIRINA]= {{0}};
    printf (""Unesite M i N: "");
    do{
        scanf(""%d %d"", &m, &n);
        if (m<=0 || n<=0 || m>100 || n>100){printf(""Pogresan unos!\n"");printf(""Unesite M i N: "");}
    }while(m<=0 || n<=0 || m>100 || n>100);
    printf(""Unesite elemente matrice: "");
    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
        scanf(""%lf"", &mat[i][j]);
        }
    }
    for(i=0;i<m-1;i++){
        for(j=0;j<n-1;j++){
           if(mat[i+1][j+1]!=mat[i][j] || mat[1+i][0]!=mat[i][n-1]) c=0;

        }
    }t=1;
    for(i=0;i<m-1;i++){
        for(j=0;j<n-1;j++){
           if(mat[i][j]!=mat[i+1][j+1]) t=0;
        }
    }
    
    
    
    if(n==1 && m!=1){printf(""Matrica je Teplicova"");}
    else if(c==1){printf(""Matrica je cirkularna"");}
    else if(t==1 && c==0){printf(""Matrica je Teplicova"");}
    else if(t==0 && c==0){printf(""Matrica nije ni cirkularna ni Teplicova"");}
    return 0;
}"
2950,88,88,0,147,A2016/Z1/Z1/student1237,A2016/Z1/Z1/student4628,"#include <stdio.h>

int main() {
    double p1t,p1b,p1m,p2t,p2m,p2b,pt,pm,pb,zb,zt,zm,zim,zit,zib,T,B,M,OT,OB,OM;
printf(""Unesite bodove za Tarika: "");
printf(""\nI parcijalni ispit: "");
scanf(""%lf"",&p1t);
if(p1t<0 || p1t>20){
    printf(""Neispravan broj bodova\n""); return 0;}

printf(""II parcijalni ispit: "");
scanf(""%lf"",&p2t);
if(p2t<0 || p2t>20){
    printf(""Neispravan broj bodova\n""); 
    return 0; }

printf(""Prisustvo: "");
scanf(""%lf"",&pt);
if(pt<0 || pt>10){
  printf(""Neispravan broj bodova\n"");
    return 0;
}
printf(""Zadace: "");
scanf(""%lf"",&zt);
if(zt<0 || zt>10){
    printf(""Neispravan broj bodova\n"");
    return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"",&zit);
if(zit<0 || zit>40){
    printf(""Neispravan broj bodova\n"");
    return 0;}

printf(""Unesite bodove za Bojana: "");
printf(""\nI parcijalni ispit: "");
scanf(""%lf"",&p1b);
if(p1b<0 || p1b>20){
    printf(""Neispravan broj bodova\n"");
    return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"",&p2b);
if(p2b<0 || p2b>20){
    printf(""Neispravan broj bodova\n"");
    return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"",&pb);
if(pb<0 || pb>10){
  printf(""Neispravan broj bodova\n"");
    return 0;
}
printf(""Zadace: "");
scanf(""%lf"",&zb);
if(zb<0 || zb>10){
    printf(""Neispravan broj bodova\n"");
    return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"",&zib);
if(zib<0 || zib>40){
   printf(""Neispravan broj bodova\n"");
    return 0;
}
printf(""Unesite bodove za Mirzu: "");
printf(""\nI parcijalni ispit: "");
scanf(""%lf"",&p1m);
if(p1m<0 || p1m>20){
    printf(""Neispravan broj bodova\n"");
    return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"",&p2m);
if(p2m<0 || p2m>20){
    printf(""Neispravan broj bodova\n"");
    return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"",&pm);
if(pm<0 || pm>10){
    printf(""Neispravan broj bodova\n"");
    return 0;
}
printf(""Zadace: "");
scanf(""%lf"",&zm);
if(zm<0 || zm>10){
   printf(""Neispravan broj bodova\n"");
    return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"",&zim);
if(zim<0 || zim>40){
    printf(""Neispravan broj bodova\n"");
    return 0;
}

T=p1t+p2t+pt+zt+zit;
B=p1b+p2b+pb+zb+zib;
M=p1m+p2m+pm+zm+zim;
if(T<55 && B<55 && M<55) printf(""Nijedan student nije polozio.\n"");
if((T<55 && B<55 && M>=55) || (T<55 && M<55 && B>=55) || (T>=55 && M<55 && B<55) ) printf(""Jedan student je polozio.\n"");
if(T>=55 && B>=55 && M>=55) printf(""Sva tri studenta su polozila.\n"");
if((T>=55 && M>=55 && B<55) || (T>=55 && B>=55 && M<55) || (T<55 && M>=55 && B>=55) ) printf(""Dva studenta su polozila.\n"");

if(T>55 &&
B>55 && M>55){
if(T>=55 && T<65){
    OT=6;
}
else if(T>=65 && T<75){
    OT=7;
}
else if(T>=75 && T<85){
    OT=8;
}
else if(T>=85 && T<92){
    OT=9;
}
else if(T>=92 && T<=100){
    OT=10;
}
if(B>=55 && B<65){
    OB=6;
}
else if(B>=65 && B<75){
    OB=7;
}
else if(B>=75 && B<85){
    OB=8;
}
else if(B>=85 && B<92){
    OB=9;
}
else if(B>=92 && B<=100){
    OB=10;
}
if(M>=55 && M<65){
    OM=6;
}
else if(M>=65 && M<75){
    OM=7;
}
else if(M>=75 && M<85){
    OM=8;
}
else if(M>=85 && M<92){
    OM=9;
}
else if(M>=92 && M<=100){
    OM=10;
}
if(OM==OB && OB==OT) printf(""\nSva tri studenta imaju istu ocjenu.\n"");
if((OM==OB && OB!=OT) || (OM==OT && OT!=OB) || (OB==OT && OT!=OM)) printf(""\nDva od tri studenta imaju istu ocjenu.\n"");
if(OM!=OB && OB!=OT) printf(""\nSvaki student ima razlicitu ocjenu.\n"");}
	return 0;
}
","#include <stdio.h>

int main() {
double a1, b1, c1, d1, e1, a2, b2, c2, d2, e2, a3, b3, c3, d3, e3, s1, s2, s3, oc1, oc2, oc3;

printf(""Unesite bodove za Tarika:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a1);
if(a1<0||a1>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b1);
if(b1<0||b1>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c1);
if(c1<0||c1>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d1);
if(d1<0||d1>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e1);
if(e1<0||e1>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

printf(""Unesite bodove za Bojana:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a2);
if(a2<0||a2>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b2);
if(b2<0||b2>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c2);
if(c2<0||c2>10){
	printf(""Neispravan broj brodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d2);
if(d2<0||d2>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e2);
if(e2<0||e2>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

printf(""Unesite bodove za Mirzu:\n"");
printf(""I parcijalni ispit: "");
scanf(""%lf"", &a3);
if(a3<0||a3>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""II parcijalni ispit: "");
scanf(""%lf"", &b3);
if(b3<0||b3>20){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Prisustvo: "");
scanf(""%lf"", &c3);
if(c3<0||c3>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zadace: "");
scanf(""%lf"", &d3);
if(d3<0||d3>10){
	printf(""Neispravan broj bodova"");
	return 0;
}
printf(""Zavrsni ispit: "");
scanf(""%lf"", &e3);
if(e3<0||e3>40){
	printf(""Neispravan broj bodova"");
	return 0;
}

s1=a1+b1+c1+d1+e1;
s2=a2+b2+c2+d2+e2;
s3=a3+b3+c3+d3+e3;

if(s1<55)
oc1=5;
else if(s1>=55 && s1<65)
oc1=6;
else if(s1>=65 && s1<75)
oc1=7;
else if(s1>=75 && s1<85)
oc1=8;
else if(s1>=85 && s1<92)
oc1=9;
else if(s1>=92 && s1<=100)
oc1=10;

if(s2<55)
oc2=5;
if(s2>=55 && s2<65)
oc2=6;
else if(s2>=65 && s2<75)
oc2=7;
else if(s2>=75 && s2<85)
oc2=8;
else if(s2>=85 && s2<92)
oc2=9;
else if(s2>=92 && s2>=100)
oc2=10;

if(s3<55)
oc3=5;
else if(s3>=55 && s3<65)
oc3=6;
else if(s3>=65 && s3<75)
oc3=7;
else if(s3>=75 && s3<85)
oc3=8;
else if(s3>=85 && s3<92)
oc3=9;
else if(s3>=92 && s3<=100)
oc3=10;


if(s1>=55 && s2>=55 && s3>=55){
	printf(""Sva tri studenta su polozila."");
	if((oc1==oc2) && (oc2==oc3))
	{
		printf(""\nSva tri studenta imaju istu ocjenu."");
	}else if((oc1==oc2) || (oc2==oc3) && (oc1==oc3)){
		printf(""\nDva od tri studenta imaju istu ocjenu."");
	}else {
		printf(""\nSvaki student ima razlicitu ocjenu."");
	}

} else if((s1>=55 && s2<55 && s3<55) || (s1<55 && s2>=55 && s3<55) || (s1<55 && s2<55 && s3>=55)){
	printf(""Jedan student je polozio."");
} else if ((s1>=55 && s2>=55 && s3<55) || (s1<55 && s2>=55 && s3>=55) || (s1>=55 && s2<55 && s3>=55)){
	printf(""Dva studenta su polozila."");
}else{
	printf(""Nijedan student nije polozio."");

}

return 0;

}"
2954,55,55,0,49,A2016/Z3/Z2/student5573,A2016/Z3/Z2/student4824,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
void ubaci(int *niz, int vel)
{       
        /*Uzima neki clan niza i odredjuje sumu njegovih elemenata*/
        int *p,*q,i,suma,a,b;
        p=q=niz;
        /*odredjivanje pozicije odredjenog elementa*/
        for(i=vel-1; i>=0; i--)
        {
        *(q+(2*i))=*(p+i);
        }
        p=niz;
        /*odredjivanje sume */
        for(i=0; i<2*vel; i++)
        {
            suma=0;
            a=*(p+i);
            a=abs(a);
            while(a!=0)
            {
                b=a%10;
                a/=10;
                suma+=b;
            }
            *(p+i+1)=suma;
            i++;
        }
    }
    int fibniz(int n)
    {   /*određivanje fibonačijevog niza ako je suma prethodna dva jednaka n vraća jedan a ako nije vraća nulu*/    
        int x,y,z;
        if(n<0)return 0;
        if(n==1)return 1;
        x=1;
        y=1;
        while(1)
        {
            z=x+y;
            if(n==z)return 1;
            else if(z>n)return 0;
            x=y;
            y=z;
        }
    }
    int izbaci(int *niz, int vel)
    {
        /*izbacivanje člana niza u slučaju da je niz jednak nekom fibonačijevom članu izbacuje ga*/
        int i,a,j,*p;
        p=niz;
        for(i=0; i<vel; i++)   
        {
            a=fibniz(*(p+i));
            /*u slucaju da je pronašao podudarnost pomjera članove i umanjuje niz za jedan*/
            if(a==1)    
            {
                for(j=i; j<vel-1; j++)  
                {
                    *(p+j)=*(p+j+1);
                }
                vel--;
                i--;
            }
        }
        /*vraća vel u main program*/
        return vel;
    }
    int main()  {
        int niz[20],i,vel=10,a;
        /*unos niza*/
        printf(""Unesite niz od 10 brojeva:"");
        for(i=0; i<vel; i++)
        {
            scanf(""%d"", &niz[i]);
        }
        /*pozivanje funkcije ubaci*/
        ubaci(niz,vel);
        /*poyivanje funckije izbaci i dodjeljuje vrijednost varijabli a*/
        a=izbaci(niz,2*vel);    
        /*ispis niza*/
        printf("" Modificirani niz glasi: "");
        for(i=0; i<a-1; i++)
        {
            printf(""%d, "", niz[i]);
        }
            printf(""%d."", niz[i]);
        return 0;
    }","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
void ubaci(int *niz1,int velicina) {
	int *a,*b;
	int i,c,d,suma_cifara;
	a=b=niz1;
	/*Na posljednje mjesto niza postavljamo pokazivac*/ 
	for(i=(velicina-1);i>0;i--)
	{
		*(b+(2*i))=*(a+i);
		
	}
	a=niz1;
	for(i=0;i<velicina*2;i++) {
		suma_cifara=0;
		/* Uzimamo pozitivne vrijednosti zbog sume */
		c=*(a+i);
		c=abs(c);
		do {
			d=c%10;
			c=c/10;
			suma_cifara=suma_cifara+d;
			
		} while (c!=0);
		/* Upisujemo sumu u sljedeci clan */
		*(a+i+1)=suma_cifara;
		i++;
		
	}
	
}
int Fibon_niz(int f) {
	int e,g,h;
	if(f==1) 
	{ 
		return 1;
		
	}
	if(f<0) 
	{
		return 0;
		
	}
	e=1;
	g=1;
	while(1) {
		h=(e+g);
		if(h>f) 
		{
			return 0;
			
		}
		else if(f==h) 
		{
			return 1;
			
		}
		e=g;
		g=h;
		
	}

}
int izbaci( int *niz1, int velicina) {
	int i,c,j;
	int *a;
	a=niz1;
	for(i=0;i<velicina;i++) 
	{
		c=Fibon_niz(*(a+i));
		if(c==1)
		/*Ako pripada Fibonaccijevom nizu izbacujemo ga */
		{
			for(j=i;j<(velicina-1);j++) 
			{
				*(a+j)=*(a+j+1);
				
			}
			velicina--;
			i--;
		}
	}
	return velicina;
	
}
int main() {
	int niz1[20],i,c;
	int velicina=10;
	printf(""Unesite niz od 10 brojeva:"");
	for(i=0;i<velicina;i++) 
	{
		scanf(""%d"", &niz1[i]);
		
	}
	/*Velicina niza nakon funkcije je duplo veca od prvobitnog niza*/
	ubaci(niz1,velicina);
	c=izbaci(niz1,velicina*2);
	printf("" Modificirani niz glasi: "");
	for(i=0;i<(c-1);i++)
	{
		printf(""%d, "", niz1[i]);
			
		}  
		printf(""%d. "", niz1[i]);
	
	return 0;
}




















"
2958,7,7,0,12,A2016/Z5/Z3/student6956,A2016/Z5/Z3/student8923,"#include <stdio.h>
#include <string.h>
#define KAPACITET 200
struct Vrijeme{
	int sati, minute, sekunde;
};

struct Cas{
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};


char unesi(char niz[], int velicina){
	char znak=getchar();
	int vr=znak;
	int i=0;
	while (znak=='\n') 
	znak=getchar();
	while (i<velicina-1 && znak!='\n' && vr>0){
		niz[i++]=znak;
		znak=getchar();
	}
	niz[i]='\0';
	return znak;
}
void ocisti(char znak){
	int ima=0;
	if(znak=='\0') return;
	while(znak!='\n')
	znak=getchar();
}
int ucitaj_datoteku(struct Cas raspored[]){
	FILE* ulaz=fopen(""raspored.dat"",""rb+"");
	FILE* ulaz1=fopen(""raspored.dat"",""rb+"");
	if(ulaz==NULL || ulaz1==NULL){
		return 0;
	}
	int ucitano=fread(raspored,sizeof(struct Cas), KAPACITET, ulaz);
	int ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);
	fclose(ulaz);
	fclose(ulaz1);
	if(ucitano==ucitano1) 
	return ucitano;
}

int MAX(struct Cas raspored[], int broj_casova){
	int nasao=0;
	
	int i,j,max=0,indexmaxa=0;
	
	for(i=0;i<broj_casova;i++){
		if(raspored[i].kraj.sati>max){
			nasao=1;
			max=raspored[i].kraj.sati;
			indexmaxa=i;
		}
	}
	if(raspored[indexmaxa].kraj.minute==0 && nasao==1) max=max-1;
	if(nasao == 1)return max;
}

int MIN(struct Cas raspored[],int broj_casova){
	int i, j, min=25;
	int nasao=0;
	
	for(i=0; i<broj_casova; i++){
		if(raspored[i].pocetak.sati<min) 
		nasao=1;
		min=raspored[i].pocetak.sati;
	}
	if(nasao==1)
	return min;
}

void ispis_rasporeda(struct Cas raspored[], int broj_casova){
	int i,j,k;
	
	printf(""\n       "");
	printf(""PON       "");
	printf(""UTO       "");
	printf(""SRI       "");
	printf(""CET       "");
	printf(""PET       "");
	printf(""SUB\n"");
	
	for(i=MIN(raspored,broj_casova);i<=MAX(raspored,broj_casova);i++){
		if(i<10) printf(""9:00   "");
		else printf(""%d:00  "",i);
		
		for(j=1;j<7;j++){
			for(k=0;k<broj_casova;k++)
			if (raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i){
				printf(""%-10s"", raspored[k].predmet);
				break;
			}
			if(k==broj_casova)
			printf(""          "");
		}
		printf(""\n"");
	}
	
}

void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
	int i;
	printf(""Uneseni su casovi: "");
	int k=1;
	int brojac=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			printf(""\n%d) %s ("",k++,raspored[i].predmet);
			if(raspored[i].pocetak.sati<10) printf(""0"");
			printf(""%d:"",raspored[i].pocetak.sati);
			if(raspored[i].pocetak.minute<10) printf(""0"");
			printf(""%d-"",raspored[i].pocetak.minute);
			if(raspored[i].kraj.sati<10) printf(""0"");
			printf(""%d:"",raspored[i].kraj.sati);
			if(raspored[i].kraj.minute<10) printf(""0"");
			printf(""%d"",raspored[i].kraj.minute);
			printf("")"");
		}
		
		brojac++;
	}
}

int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	int zapisano; int nova;
	FILE* ulaz=fopen(""raspored.dat"",""wb+"");
	FILE* ulaz1=fopen(""raspored.dat"",""wb+"");
	if(ulaz==NULL || ulaz1==NULL){
		return 0;
	}
	
	nova=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz);
	zapisano=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz1);
	
	fclose(ulaz);
	fclose(ulaz1);
	
	if(zapisano>=1 && nova==zapisano) return 1;
	else
	return 0;
}

void obrisi_cas(struct Cas raspored[],int broj_casova,int dan, int redni_broj){
	
	int i,j=0,obrisan=0;
	
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan) j++;
		if(redni_broj==j){
			obrisan=1;
			for(;i<broj_casova-1;i++)
			raspored[i]=raspored[i+1];
			break;
		}
	}
}

int PorediVrj(struct Vrijeme t1, struct Vrijeme t2){
	int d1=t1.sati*3600 + t1.minute*60 + t1.sekunde;
	int d2=t2.sati*3600 + t2.minute*60 + t2.sekunde;
	
	if(d1>d2) return 1;
	if(d1<d2) return -1;
	if(d1==d2) return 0;
	
	return -2;
}

int preklapanje(struct Cas raspored[],int broj_casova, struct Cas cas){
	
	int flag=0;
	int i;
	for(i=0;i<broj_casova;i++){
		int prvi=PorediVrj(raspored[i].kraj,cas.pocetak);
		int drugi=PorediVrj(cas.kraj,raspored[i].pocetak);
		
		if(prvi==1 && drugi==1 && (cas.dan_u_sedmici==raspored[i].dan_u_sedmici)){
			flag=1;
			break;
		}
	}
	
	return flag;
}

int dodaj_cas(struct Cas raspored[],int broj_casova, const char* predmet, int trajanje){
	
	if(broj_casova==200) return 0;
	int i,j,preklop;
	int dokle=19-trajanje;
	
	for(i=0;i<6;i++)
	for(j=9;j<=dokle;j++){
		struct Cas cas={"""",i+1,{j,0,0},{j+trajanje,0,0}};
		struct Cas cas1={""pom"",2,{0,0,0},{0,0,0}};
		char*q=cas.predmet,*p=(char*)predmet;
		
		while(*q++=*p++);
		char*a=cas1.predmet;
		char*b=cas1.predmet;
		if(a==b)
		preklop=preklapanje(raspored,broj_casova,cas);
		if(preklop==0){
			raspored[broj_casova]=cas;
			return 1;
		}
	}
	return 0;
}

void promijeni_cas(struct Cas raspored[], int broj_casova,int dan,int redni_broj,struct Cas promjena){
	
	int i, redni=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan) redni++;
		if(redni_broj==redni)
		raspored[i]=promjena;
	}
}

int main() {
	int opcija, broj_casova=0;
	struct Cas raspored[KAPACITET];
	ucitaj_datoteku(raspored);
	do{
		printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
		scanf(""%d"",&opcija);
		switch(opcija){
			case 0: 
			{
				zapisi_datoteku(raspored,broj_casova);
				break;
			}
			case 1:
			{
				ispis_rasporeda(raspored,broj_casova);
				break;
			}
			case 2:
			{
				int br_casova, dodan=0;
				char predmet[10];
				printf(""Unesite naziv predmeta: Unesite broj casova: "");
				ocisti(unesi(predmet,10));
				scanf(""%d"",&br_casova);
				dodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);
				int vr=dodan;
				if(vr==0)
				printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",br_casova);
				if(vr==1)
				broj_casova++;
				
				break;
			}
			
			case 3:
			{
				struct Cas promjena;
				int dan, redni;
				char*q,*p;
				char znak, predmet[10];
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"", &dan);
				int BROJ=broj_casova;
				ispisi_dan(raspored,BROJ,dan);
				promjena.dan_u_sedmici=dan;
				int dani=dan+7;
				printf(""\nIzaberite koji cas zelite promijeniti:  Naziv predmeta: "");
				scanf(""%d"",&redni);
				ocisti(unesi(predmet,10));
				
				q=promjena.predmet;
				p=predmet;
				strcpy(q,p);
				printf(""Vrijeme pocetka: Vrijeme zavrsetka: "");
				scanf(""%d%c%d"",&promjena.pocetak.sati,&znak,&promjena.pocetak.minute);
				scanf(""%d%c%d"",&promjena.kraj.sati,&znak,&promjena.kraj.minute);
				
				
				if(dani>0) promijeni_cas(raspored, BROJ, dan, redni, promjena);
				break;
			}
			
			case 4:
			{
				int dan, redni;
				printf(""Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): "");
				scanf(""%d"", &dan);
				
				ispisi_dan(raspored,broj_casova,dan);
				
				printf(""\nIzaberite koji cas zelite obrisati: "");
				scanf(""%d"", &redni);
				obrisi_cas(raspored,broj_casova,dan,redni);
				printf("" Cas obrisan\n"");
				broj_casova--;
			}
			
			
			
		}
		
	}
	
	while(opcija!=0);
	
	return 0;
}
","#include <stdio.h>
#include <string.h>
#define KAPACITET 200
#define MAX 1000
#define MIN 0

struct Vrijeme{
	int sati,minute,sekunde;
};

struct Cas{
	char predmet[10];
	int dan_u_sedmici;
	struct Vrijeme pocetak, kraj;
};
void UnosStringa(char* s, int vel){
	int i=0;
	char z=getchar();
	if(z=='\n') z=getchar();
	while(i<vel-1 && z!='\n'){
		s[i]=z;
		i++;
		z=getchar();
	}
	s[i]='\0';
}

int ucitaj_datoteku(struct Cas raspored[]){
	int UcitajDat;
	FILE* datoteka=fopen(""raspored.dat"",""rb"");
	if(datoteka==NULL) return 0;
    UcitajDat=fread(raspored,sizeof(raspored),KAPACITET,datoteka);
	fclose(datoteka);
	return UcitajDat;
}
int zapisi_datoteku(struct Cas raspored[], int broj_casova){
	int ZapisiDat;
	FILE* datoteka=fopen(""raspored.dat"",""wb"");
	if(datoteka==NULL) return 0;
	ZapisiDat=fwrite(raspored,sizeof(raspored),broj_casova,datoteka);
	if(ferror(datoteka)){
		printf(""Greska prilikom pisanja datoteke.\n"");
	}
	fclose(datoteka);
	return 1;
}
/* pomocna */
void Inicijaliziraj(struct Cas* s){
	(*s).pocetak.sati=0;
	(*s).pocetak.minute=0;
	(*s).pocetak.sekunde=0;
	(*s).kraj.sati=0;
	(*s).kraj.minute=0;
	(*s).kraj.sekunde=0;
	(*s).dan_u_sedmici=1;
}
/* custom funkcija za kopiranje */
void CopyFunk(char* s1, const char* s2){
	int x=0;
	for(;;){
		s1[x]=s2[x];
		if(s2[x] == '\0') break;
		x++;
	}
}

int preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){
	int i;
	for(i=0;i<broj_casova;i++){
		if(cas.dan_u_sedmici != raspored[i].dan_u_sedmici) return 0;
		if(cas.pocetak.sati == raspored[i].kraj.sati){
			if(raspored[i].pocetak.sati == cas.kraj.sati){
				if(cas.pocetak.minute < raspored[i].kraj.minute && raspored[i].pocetak.minute < cas.kraj.minute){
					return 1;
				}
			}
			else if(raspored[i].pocetak.sati < cas.kraj.sati && cas.pocetak.minute < raspored[i].kraj.minute){
				return 1;
			}
		}
		else if(raspored[i].pocetak.sati == cas.kraj.sati){
			if(cas.pocetak.sati < raspored[i].kraj.sati && raspored[i].pocetak.minute < cas.kraj.minute){
				return 1;
			}
		}
		else if(cas.pocetak.sati < raspored[i].kraj.sati && raspored[i].pocetak.sati < cas.kraj.sati){
			return 1;
		}
	}
	return 0;
}
int dodaj_cas(struct Cas raspored[],int broj_casova, const char* predmet, int trajanje){
	struct Cas s;
	int i;
	int tmp=1;
	Inicijaliziraj(&s);
	if(trajanje > 10) return 0;
	broj_casova++;
	CopyFunk(s.predmet,predmet);
	for(i=0;i<broj_casova;i++){
		/*sat ne smije biti >19 i dan ne smije biti >6*/
		if(s.kraj.sati > 19 && tmp > 6) return 0;
		/*cas pocinje u 9 i zavrsava za + trajanje*/
		s.pocetak.sati=9;
		s.kraj.sati= 9 + trajanje;
		s.dan_u_sedmici=tmp;
		/*ako nema mjesta u rasporedu vraca 0, u protivnom dodajemo cas*/
		if(!preklapanje(raspored,broj_casova,s)) break;
		else{
		     for(;;){
		        s.pocetak.sati++;
			    s.kraj.sati++;
			    /*provjeravamo opet jel isteklo vrijeme*/
			    if(s.kraj.sati > 19 && tmp > 6) return 0;
			    /*ako postoji preklapanje u rasporedu prekidamo*/
			    if(!preklapanje(raspored,broj_casova,s)) break;
		    }
		}
		/*ako je proslo 19h prelazimo na sljedeci dan*/
		if(s.kraj.sati > 19){
			 tmp++;
			 i=0; /*brojac postavljamo na nulu!!*/
		}
	}
	/*sada pamtimo trenutni dan*/
	s.dan_u_sedmici=tmp;
	/*i dodajemo cas na kraj*/
	raspored[broj_casova-1]=s;
	return 1;
}
void ispis_rasporeda(struct Cas raspored[], int broj_casova){}
void ispisi_dan(struct Cas raspored[], int broj_casova, int dan){
	int i, br=0,test=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			if(test==0){
				printf(""\n"");
				printf(""Uneseni su casovi:"");
			}
			test=1; br++;
			printf(""\n%d) %s (%02d:%02d-%02d:%02d)"",br,raspored[i].predmet,raspored[i].pocetak.sati,raspored[i].pocetak.minute,raspored[i].kraj.sati,raspored[i].kraj.minute);
		}
	}
}
void promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){
	int i,tmp=0;
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			tmp++;
			if(tmp==redni_broj){
				/*mijenjam predmet sa pomocnom funk za kopiranje*/
				CopyFunk(raspored[i].predmet,promjena.predmet);
				/*ostalo jednostavno samo dodjeljujemo*/
				raspored[i].dan_u_sedmici=promjena.dan_u_sedmici;
				raspored[i].pocetak=promjena.pocetak;
				raspored[i].kraj=promjena.kraj;
			}
		}
	}
}
void obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){
	int i,j,tmp=0;
	/*brisanje uz ocuvanje redoslijeda*/
	for(i=0;i<broj_casova;i++){
		if(raspored[i].dan_u_sedmici==dan){
			tmp++;
			if(tmp==redni_broj){
				for(j=i;j<broj_casova-1;j++){
					/*koristit cu ovu funkciju za predmete jer treba paziti na tip dodjeljivanja*/
					CopyFunk(raspored[i].predmet,raspored[j+1].predmet);
					raspored[i].dan_u_sedmici=raspored[j+1].dan_u_sedmici;
					raspored[i].pocetak=raspored[j+1].pocetak;
					raspored[i].kraj=raspored[j+1].kraj;
				}
				broj_casova--;
				i--;
			}
		}
	}
}
int main() {
	struct Cas raspored[KAPACITET];
	int broj_casova=0,izbor=1,tmp;
	char string[MAX];
	ucitaj_datoteku(raspored);
	do{
			printf(""1) Ispis rasporeda\n2) Dodavanje casa\n3) Promjena casa\n4) Brisanje casa\n0) Kraj rada\nIzaberite opciju: "");
		    scanf(""%d"", &izbor);
		switch(izbor){
		    case 2: printf(""Unesite naziv predmeta: "");
		            UnosStringa(string,MAX);
		            string[9]='\0';
		            printf(""Unesite broj casova: "");
		            scanf(""%d"",&tmp);
		            /*provjeramo ima li dovoljno mjesta u rasporedu
		            if(dodaj_cas(raspored,broj_casova,string,tmp)==0){
		            	printf(""Nema dovoljno mjesta u rasporedu za %d casova.\n"",tmp);
		            }*/
		            break;
		    case 0: break;
	     }
	 }while(izbor!=0);
	zapisi_datoteku(raspored,broj_casova);
	return 0;
}
"
2960,98,98,0,101,A2016/Z4/Z1/student2351,A2016/Z4/Z1/student7180,"#include <stdio.h>
#include <ctype.h>

char *izbaci_najcescu(char *s) {
	char *p=s;
	char *pr, *kr, *kt, *pt, *pn, *kn, *q, *r, *k;
	int a, i;
	char x[1000];
	int max=0, br=0;
	if(*s=='\0') return 0;
	do{
		if(*s>='A' && *s<='Z' || *s>='a' && *s<='z' && (*(s+1)!=' ' || (s+1)!='\0')) 
		{
			pr=s;
			br=1;
			do{
				s++;
			} while((*s>='a' && *s<='z') || (*s>='A' && *s<='Z'));
			
			kr=s;
			q=s;
			while(*q!='\0'){
				 if(*q>='A' && *q<='Z' || *q>='a' && *q<='z' && (*(q+1)!=' ' || *(q+1)!='\0'))
				 {
				 	pn=q;
				 
				 	do {
				 		q++;
				 	} while(*q>='A' && *q<='Z' || *q>='a' && *q<='z');
				 	kn=q;
				 	pt=pr;
				 	kt=kr;
				 	a=1;
				 	
				 	do{
				 		if(tolower(*pt)!=tolower(*pn))
				 		{
				 			a=0; break;
				 		}
				 		pt++;
				 		pn++;
				 	} while (pt!=kr);
				 	
				 	if(a==1)
				 	br++;
				 } else q++;
			} 
			
			if(br>max) 
			{
				max=br;
				r=pr;
				k=kr;
				i=0;
				do{
					x[i]=*r;
					i++;
					r++;
				} while(r!=k);
				x[i]='\0';
			}
		} else s++;
	} while(*s!='\0');
s=p;
do{
	if(*s>='A' && *s<='Z' || *s>='a' && *s<='z' && (*(s+1)!=' ' || (s+1)!='\0')) 
		{
			pr=s;
			q=s;
			do{
				s++;
			} while(*s>='A' && *s<='Z' || *s>='a' && *s<='z');
			kr=s;
			a=1;
			pt=x;
			kt=x+i;
			do{
				if (tolower(*pt)!=tolower(*pr))
				{
					a=0;
					break;
				}
				pt++;
				pr++;
			} while(pr!=kr);
			if(a==1)
			{
				while (*kr!='\0'){
					*q=*kr;
					q++; kr++;
				}
				*q='\0';
				s-=(kr-q);
			}
			
		} else s++;
		} while(*s!='\0');
		return p;
}


int main() {
	char primjer[]=""Auto ide gore dolje gore"";
	printf(""%s"", izbaci_najcescu(primjer));
	return 0;
}
","#include <stdio.h>
#include <ctype.h>

char *izbaci_najcescu(char *s) {
	char *p=s;
	char *pr, *kr, *kt, *pt, *pn, *kn, *q, *r, *k;
	int a, i;
	char x[1000];
	int max=0, br=0;
	if(*s=='\0') return 0;
	do{
		if(*s>='A' && *s<='Z' || *s>='a' && *s<='z' && (*(s+1)!=' ' || (s+1)!='\0')) 
		{
			pr=s;
			br=1;
			do{
				s++;
			} while((*s>='a' && *s<='z') || (*s>='A' && *s<='Z'));
			
			kr=s;
			q=s;
			while(*q!='\0'){
				 if(*q>='A' && *q<='Z' || *q>='a' && *q<='z' && (*(q+1)!=' ' || *(q+1)!='\0'))
				 {
				 	pn=q;
				 
				 	do {
				 		q++;
				 	} while(*q>='A' && *q<='Z' || *q>='a' && *q<='z');
				 	kn=q;
				 	pt=pr;
				 	kt=kr;
				 	a=1;
				 	
				 	do{
				 		if(tolower(*pt)!=tolower(*pn))
				 		{
				 			a=0; break;
				 		}
				 		pt++;
				 		pn++;
				 	} while (pt!=kr);
				 	
				 	if(a==1)
				 	br++;
				 } else q++;
			} 
			
			if(br>max) 
			{
				max=br;
				r=pr;
				k=kr;
				i=0;
				do{
					x[i]=*r;
					i++;
					r++;
				} while(r!=k);
				x[i]='\0';
			}
		} else s++;
	} while(*s!='\0');
s=p;
do{
	if(*s>='A' && *s<='Z' || *s>='a' && *s<='z' && (*(s+1)!=' ' || (s+1)!='\0')) 
		{
			pr=s;
			q=s;
			do{
				s++;
			} while(*s>='A' && *s<='Z' || *s>='a' && *s<='z');
			kr=s;
			a=1;
			pt=x;
			kt=x+i;
			do{
				if (tolower(*pt)!=tolower(*pr))
				{
					a=0;
					break;
				}
				pt++;
				pr++;
			} while(pr!=kr);
			if(a==1)
			{
				while (*kr!='\0'){
					*q=*kr;
					q++; kr++;
				}
				*q='\0';
				s-=(kr-q);
			}
			
		} else s++;
		} while(*s!='\0');
		return p;
}


int main() {
	char primjer[]=""Auto ide gore dolje gore"";
	printf(""%s"", izbaci_najcescu(primjer));
	return 0;
}
"
2961,90,90,0,75,A2016/Z3/Z3/student3301,A2016/Z3/Z3/student6999,"#include <stdio.h>

	
int main() {
	int matrica[200][200],j,M,N,i,k=0,m,n,temp;
	int brojac=0;
	
	/* Unos dimenzija matrice */ 
	
	do{
	printf (""Unesite brojeve M i N:"");
	scanf (""%d %d"",&M,&N);
	if (M<1||M>200||N<1||N>200) printf ("" Brojevi nisu u trazenom opsegu.\n"");
	}while(M<1||M>200||N<1||N>200);
	
	/* Unos elemenata matrice */ 
	
	printf ("" Unesite elemente matrice: "");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			scanf (""%d"",&matrica[i][j]);
		}
	}
	
	/* Poredenje i izbacivanje redova*/ 
	
	for (i=0;i<M;i++){
		for (j=i+1;j<M;j++)
		{
			brojac=0;
			for (k=0;k<N;k++){
				if(matrica[i][k]==matrica[j][k]){
					brojac++;
				}
				if(brojac==N){
					for (m=j+1;m<M;m++){ 
						for (n=0;n<N;n++){
							temp=matrica[m-1][n];
						    matrica[m-1][n]=matrica[m][n];
						    matrica[m][n]=temp;
						}
					}
					M--;
					j--;
				}
			}
		}
	}
	
	/* Poredenje i izbacivanje kolona*/ 
	
	for (i=0;i<N;i++){
		for (j=i+1;j<N;j++){
			brojac=0;
			for (k=0;k<M;k++){
				if(matrica[k][i]==matrica[k][j]){
					brojac++;
				}
				if(brojac==M){
					for (m=j+1;m<N;m++){ 
						for (n=0;n<M;n++){
							temp=matrica[n][m-1];
						    matrica[n][m-1]=matrica[n][m];
						    matrica[n][m]=temp;
						}
					}
					N--;
					j--;
				}
			}
		}
	}	
	
	/* Ispis matrice nakon izbacivanja  */ 
	
	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			printf (""%5d"",matrica[i][j]);
		}
		printf(""\n"");
	}
	

	return 0;
}
","#include <stdio.h>

int main() {
	int mat[200][200],i,j,M,N,brojac=0,k=0,x,y,privremena;
do{
	printf(""Unesite brojeve M i N: "");
	scanf(""%d %d"",&M,&N);
	if((M<=0 || N<=0 || M>200 || N>200)) {
	printf(""Brojevi nisu u trazenom opsegu.\n"");}
}while(M<=0 || N<=0 || M>200 || N>200);
	
printf(""Unesite elemente matrice: "");
for(i=0;i<M;i++){
	for(j=0;j<N;j++){
		scanf(""%d"",&mat[i][j]);
	}
}
	/*poređenje redova*/ 
for(i=0;i<M;i++){
	for(j=i+1;j<M;j++){
		brojac=0;
			for(k=0;k<N;k++){
				if(mat[i][k]==mat[j][k]){brojac++;}
		/*izbacivanje reda*/
		if(brojac==N){
			for(x=j+1;x<M;x++){
				for(y=0;y<N;y++){
					privremena=mat[x-1][y];
					mat[x-1][y]=mat[x][y];
					mat[x][y]=privremena;
				}
			}
			M--;
			j--;
			}
		}
	}
}

	/*poređenje kolona*/
for(i=0;i<N;i++){
	for(j=i+1;j<N;j++){
		brojac=0;
		for(k=0;k<M;k++){
			if(mat[k][i]==mat[k][j]){brojac++;}
			/*izbacivanje kolone*/
			if(brojac==M){
				for(x=j+1;x<N;x++){
					for(y=0;y<M;y++){
						privremena=mat[y][x-1];
						mat[y][x-1]=mat[y][x];
						mat[y][x]=privremena;
					}
				}
			N--;
			j--;
			}
		}
	}
}
	
printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");	
	for(i=0;i<M;i++){
		for(j=0;j<N;j++){
			printf(""%5d"",mat[i][j]);
		}
		printf(""\n"");
	}
	return 0;
}"
2965,99,99,0,170,A2016/Z1/Z1/student7823,A2016/Z1/Z1/student7457,"#include <stdio.h>
#define pet 55
#define sest 65
#define sedam 75
#define osam 85
#define devet 92
#define deset 100
#define epsilon 0.005
struct prijatelj {
	float Ipi;				//max 20
	float IIpi;				//max 20
	float Prisustvo;		//max 10
	float Zadace;			//max 10
	float ZavrsniIspit;		//max 40
	float UkupnoBodova;		//svi ispiti zbrojeni
	int   Ocjena;			//ocjena na predmetu
};
void ocjena(float brojBodova, int *ocjena)
{
	int a=(brojBodova*100+0.005);
	brojBodova=a/100;
	if(brojBodova<pet)
		*ocjena=5;
	else if(brojBodova<sest)
		*ocjena=6;
	else if(brojBodova<sedam)
		*ocjena=7;
	else if(brojBodova<osam)
		*ocjena=8;
	else if(ocjena<devet)
		*ocjena=9;
	else if(ocjena<=deset)
		*ocjena=10;
}
int main()
{
	//printf(""Zadaca 1, Zadatak 1"");
	struct prijatelj Tarik, Mirza, Bojan;
	printf(""Unesite bodove za Tarika: "");
	//Unosenje bodova za Tareta
	printf(""\nI parcijalni ispit: "");
	scanf(""%f"", &Tarik.Ipi);
	if(Tarik.Ipi<0 || Tarik.Ipi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &Tarik.IIpi);
	if(Tarik.IIpi<0 || Tarik.IIpi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &Tarik.Prisustvo);
	if(Tarik.Prisustvo<0 || Tarik.Prisustvo>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &Tarik.Zadace);
	if(Tarik.Zadace<0 || Tarik.Zadace>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Tarik.ZavrsniIspit);
	if(Tarik.ZavrsniIspit<0 || Tarik.ZavrsniIspit>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}

	printf(""Unesite bodove za Bojana: "");
	//Unosenje bodova za Booju
	printf(""\nI parcijalni ispit: "");
	scanf(""%f"", &Bojan.Ipi);
	if(Bojan.Ipi<0 || Bojan.Ipi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &Bojan.IIpi);
	if(Bojan.IIpi<0 || Bojan.IIpi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &Bojan.Prisustvo);
	if(Bojan.Prisustvo<0 || Bojan.Prisustvo>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &Bojan.Zadace);
	if(Bojan.Zadace<0 || Bojan.Zadace>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Bojan.ZavrsniIspit);
	if(Bojan.ZavrsniIspit<0 || Bojan.ZavrsniIspit>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}

	printf(""Unesite bodove za Mirzu: "");
	//Unosenje bodova za Mizuu
	printf(""\nI parcijalni ispit: "");
	scanf(""%f"", &Mirza.Ipi);
	if(Mirza.Ipi<0 || Mirza.Ipi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &Mirza.IIpi);
	if(Mirza.IIpi<0 || Mirza.IIpi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &Mirza.Prisustvo);
	if(Mirza.Prisustvo<0 || Mirza.Prisustvo>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &Mirza.Zadace);
	if(Mirza.Zadace<0 || Mirza.Zadace>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Mirza.ZavrsniIspit);
	if(Mirza.ZavrsniIspit<0 || Mirza.ZavrsniIspit>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}

	//racunanje ukupnih bodova za dodjeljivanje ocjena
	Tarik.UkupnoBodova= Tarik.Ipi + Tarik.IIpi + Tarik.Prisustvo + Tarik.Zadace + Tarik.ZavrsniIspit;
	Bojan.UkupnoBodova= Bojan.Ipi + Bojan.IIpi + Bojan.Prisustvo + Bojan.Zadace + Bojan.ZavrsniIspit;
	Mirza.UkupnoBodova= Mirza.Ipi + Mirza.IIpi + Mirza.Prisustvo + Mirza.Zadace + Mirza.ZavrsniIspit;

	//dodjeljivanje ocjena 5-10
	ocjena(Tarik.UkupnoBodova, &Tarik.Ocjena);
	ocjena(Bojan.UkupnoBodova, &Bojan.Ocjena);
	ocjena(Mirza.UkupnoBodova, &Mirza.Ocjena);

	int brojacProlaznosti=0;
	if(Tarik.Ocjena>5)
		brojacProlaznosti++;
	if(Bojan.Ocjena>5)
		brojacProlaznosti++;
	if(Mirza.Ocjena>5)
		brojacProlaznosti++;
	if(brojacProlaznosti==0)
		printf(""Nijedan student nije polozio."");
	if(brojacProlaznosti==1)
		printf(""Jedan student je polozio."");
	if(brojacProlaznosti==2)
		printf(""Dva studenta su polozila."");
	if(brojacProlaznosti==3) {
		printf(""Sva tri studenta su polozila.\n"");
		int brojacOcjena=0;
		if(Tarik.Ocjena==Bojan.Ocjena)
			brojacOcjena++;
		if(Tarik.Ocjena==Mirza.Ocjena)
			brojacOcjena++;
		if(Bojan.Ocjena==Mirza.Ocjena)
			brojacOcjena++;

		if(brojacOcjena==0)
			printf(""Svaki student ima razlicitu ocjenu."");
		if(brojacOcjena==1)
			printf(""Dva od tri studenta imaju istu ocjenu."");
		if(brojacOcjena==3)		//ne moze biti 2 ako je samo 1 ista onda je to 1, a ako je 2 to znaci da je i treca relacija tocna pa ce se povecati na 3
			printf(""Sva tri studenta imaju istu ocjenu."");
	}
	return 0;
}
","#include <stdio.h>
#define pet 55
#define sest 65
#define sedam 75
#define osam 85
#define devet 92
#define deset 100
#define epsilon 0.005
struct prijatelj {
	float Ipi;				//max 20
	float IIpi;				//max 20
	float Prisustvo;		//max 10
	float Zadace;			//max 10
	float ZavrsniIspit;		//max 40
	float UkupnoBodova;		//svi ispiti zbrojeni
	int   Ocjena;			//ocjena na predmetu
};
void ocjena(float brojBodova, int *ocjena)
{
	int a=(brojBodova*100+0.005);
	brojBodova=a/100;
	if(brojBodova<pet)
		*ocjena=5;
	else if(brojBodova<sest)
		*ocjena=6;
	else if(brojBodova<sedam)
		*ocjena=7;
	else if(brojBodova<osam)
		*ocjena=8;
	else if(ocjena<devet)
		*ocjena=9;
	else if(ocjena<=deset)
		*ocjena=10;
}
int main()
{
	//printf(""Zadaca 1, Zadatak 1"");
	struct prijatelj Tarik, Mirza, Bojan;
	printf(""Unesite bodove za Tarika: "");
	//Unosenje bodova za Tareta
	printf(""\nI parcijalni ispit: "");
	scanf(""%f"", &Tarik.Ipi);
	if(Tarik.Ipi<0 || Tarik.Ipi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &Tarik.IIpi);
	if(Tarik.IIpi<0 || Tarik.IIpi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &Tarik.Prisustvo);
	if(Tarik.Prisustvo<0 || Tarik.Prisustvo>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &Tarik.Zadace);
	if(Tarik.Zadace<0 || Tarik.Zadace>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Tarik.ZavrsniIspit);
	if(Tarik.ZavrsniIspit<0 || Tarik.ZavrsniIspit>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}

	printf(""Unesite bodove za Bojana: "");
	//Unosenje bodova za Booju
	printf(""\nI parcijalni ispit: "");
	scanf(""%f"", &Bojan.Ipi);
	if(Bojan.Ipi<0 || Bojan.Ipi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &Bojan.IIpi);
	if(Bojan.IIpi<0 || Bojan.IIpi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &Bojan.Prisustvo);
	if(Bojan.Prisustvo<0 || Bojan.Prisustvo>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &Bojan.Zadace);
	if(Bojan.Zadace<0 || Bojan.Zadace>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Bojan.ZavrsniIspit);
	if(Bojan.ZavrsniIspit<0 || Bojan.ZavrsniIspit>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}

	printf(""Unesite bodove za Mirzu: "");
	//Unosenje bodova za Mizuu
	printf(""\nI parcijalni ispit: "");
	scanf(""%f"", &Mirza.Ipi);
	if(Mirza.Ipi<0 || Mirza.Ipi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
	scanf(""%f"", &Mirza.IIpi);
	if(Mirza.IIpi<0 || Mirza.IIpi>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
	scanf(""%f"", &Mirza.Prisustvo);
	if(Mirza.Prisustvo<0 || Mirza.Prisustvo>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
	scanf(""%f"", &Mirza.Zadace);
	if(Mirza.Zadace<0 || Mirza.Zadace>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
	scanf(""%f"", &Mirza.ZavrsniIspit);
	if(Mirza.ZavrsniIspit<0 || Mirza.ZavrsniIspit>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}

	//racunanje ukupnih bodova za dodjeljivanje ocjena
	Tarik.UkupnoBodova= Tarik.Ipi + Tarik.IIpi + Tarik.Prisustvo + Tarik.Zadace + Tarik.ZavrsniIspit;
	Bojan.UkupnoBodova= Bojan.Ipi + Bojan.IIpi + Bojan.Prisustvo + Bojan.Zadace + Bojan.ZavrsniIspit;
	Mirza.UkupnoBodova= Mirza.Ipi + Mirza.IIpi + Mirza.Prisustvo + Mirza.Zadace + Mirza.ZavrsniIspit;

	//dodjeljivanje ocjena 5-10
	ocjena(Tarik.UkupnoBodova, &Tarik.Ocjena);
	ocjena(Bojan.UkupnoBodova, &Bojan.Ocjena);
	ocjena(Mirza.UkupnoBodova, &Mirza.Ocjena);

	int brojacProlaznosti=0;
	if(Tarik.Ocjena>5)
		brojacProlaznosti++;
	if(Bojan.Ocjena>5)
		brojacProlaznosti++;
	if(Mirza.Ocjena>5)
		brojacProlaznosti++;
	if(brojacProlaznosti==0)
		printf(""Nijedan student nije polozio."");
	if(brojacProlaznosti==1)
		printf(""Jedan student je polozio."");
	if(brojacProlaznosti==2)
		printf(""Dva studenta su polozila."");
	if(brojacProlaznosti==3) {
		printf(""Sva tri studenta su polozila.\n"");
		int brojacOcjena=0;
		if(Tarik.Ocjena==Bojan.Ocjena)
			brojacOcjena++;
		if(Tarik.Ocjena==Mirza.Ocjena)
			brojacOcjena++;
		if(Bojan.Ocjena==Mirza.Ocjena)
			brojacOcjena++;

		if(brojacOcjena==0)
			printf(""Svaki student ima razlicitu ocjenu."");
		if(brojacOcjena==1)
			printf(""Dva od tri studenta imaju istu ocjenu."");
		if(brojacOcjena==3)		//ne moze biti 2 ako je samo 1 ista onda je to 1, a ako je 2 to znaci da je i treca relacija tocna pa ce se povecati na 3
			printf(""Sva tri studenta imaju istu ocjenu."");
	}
	return 0;
}
"
2966,78,78,0,51,A2016/Z1/Z3/student9805,A2016/Z1/Z3/student2421,"#include <stdio.h>
#include <math.h>

int main() {
	float B=0, S=0, C=0, V=0, P=0, pb=0.0, ps=0.0, pc=0.0, pv=0.0, pp=0.0, ubv;
	char boja;
	printf(""Unesite vozila: "");
	do { 
		scanf(""%c"", &boja);
		while(boja=='\n' ){
			scanf(""%c"",&boja);
		}
		if ((boja=='c')||(boja=='C')){C++; continue;}
		if ((boja=='b')||(boja=='B')){B++; continue;}
		if ((boja=='s')||(boja=='S')){S++; continue;}
		if ((boja=='v')||(boja=='V')){V++; continue;}
		if ((boja=='p')||(boja=='P')){P++; continue;}
		if ((boja != 'c') && (boja != 'C') && (boja != 'B') && (boja !='b')&&(boja != 's') && (boja !='S')&&(boja != 'V') && (boja !='v')&&(boja != 'p') && (boja !='P')&&(boja!='k')&&(boja!='K')){
			printf (""Neispravan unos\n"");
			continue;
		}
	} while (boja!='K' && boja!='k');
	ubv=B+S+C+V+P;
	pc=C*100/ubv;
	pb=B*100/ubv;
	ps=S*100/ubv;
	pv=V*100/ubv;
	pp=P*100/ubv;
	printf (""Ukupno evidentirano %g vozila. \n"",ubv);
	if(ubv==0){printf (""Najpopularnija boja je crna (0.00%%)."");
		return 0;
	}
	if (C>=B && C>=S && C>=V && C>=P){printf (""Najpopularnija boja je crna (%.2f%%)."",pc);
		return 0;
	}	if (B>=C && B>=S && B>=V && B>=P){printf (""Najpopularnija boja je bijela (%.2f%%)."",pb);
		return 0;
	}	if (S>=C && S>=B && S>=V && S>=P){printf (""Najpopularnija boja je siva (%.2f%%)."",ps);
		return 0;
	}	if (V>=C && V>=S && V>=B && V>=P){printf (""Najpopularnija boja je crvena (%.2f%%)."",pv);
		return 0;
	}	if (P>=C && P>=S && P>=V && P>=B){printf (""Najpopularnija boja je plava (%.2f%%)."",pp);
		return 0;
	}
	return 0;
}

","#include <stdio.h>
#define EPSILON 0.0001

int main() {
    float c=0,b=0,s=0,crv=0,p=0;
    float n=0,pc=0.0,pcrv=0.0,pb=0.0,ps=0.0,pp=0.0;
    char vo;
    printf(""Unesite vozila: "");
    do {
        scanf(""%c"",&vo);
        if ((vo=='C') || (vo=='c')){
            c++;
            continue;
        }
        if ((vo=='B') || (vo=='b')){
            b++;
            continue;
        }
        if ((vo=='S') || (vo=='s')){
            s++;
            continue;
        }
        if ((vo=='V') || (vo=='v')){
            crv++;
            continue;
        }
        if ((vo=='P') || (vo=='p')){
            p++;
            continue;
        }
        if((vo!='P' && vo!='p') && (vo!='V' && vo!='v') && (vo!='S' && vo!='s') && (vo!='B' && vo!='b') && (vo!='C' && vo!='c') && (vo!='K' && vo!='k')){
            printf(""Neispravan unos\n"");
        }
    }
    while ((vo!='K') && (vo!='k'));
    
    n=c+b+s+crv+p;
    
    printf(""Ukupno evidentirano %g vozila.\n"",n);
    
    if ((n-0)>EPSILON){
        pc=(c*100)/n;
        pb=(b*100)/n;
        ps=(s*100)/n;
        pcrv=(crv*100)/n;
        pp=(p*100)/n;
    }
    
    if ((c>=b)&&(c>=s)&&(c>=crv)&&(c>=p)){
        printf(""Najpopularnija boja je crna (%.2f%%)."",pc);
        return 0;
    }
    if ((b>=c)&&(b>=s)&&(b>=crv)&&(b>=p)){
        printf(""Najpopularnija boja je bijela (%.2f%%)."",pb);
        return 0;
    }
    if ((s>=c)&&(s>=b)&&(s>=crv)&&(s>=p)){
        printf(""Najpopularnija boja je siva (%.2f%%)."",ps);
        return 0;
    }
    if ((crv>=c)&&(crv>=b)&&(crv>=s)&&(crv>=p)){
        printf(""Najpopularnija boja je crvena (%.2f%%)."",pcrv);
        return 0;
    }
    if ((p>=c)&&(p>=b)&&(p>=s)&&(p>=crv)){
        printf(""Najpopularnija boja je plava (%.2f%%)."",pp);
        return 0;
    }
    
    return 0;
}"
2975,79,79,0,160,A2016/Z5/Z2/student7485,A2016/Z5/Z2/student9972,"#include <stdio.h>
#include <ctype.h>
#include <string.h>
//Unos stringa
void unesi (char niz[], int velicina){
	char znak=getchar();
	if (znak=='\n') znak=getchar();
	int i=0;
	while (i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
//Funkcija vraca 1 ako je znak koji je primila slovo
	int slovo(int ch){
		if ((ch>='a' && ch<='z')||(ch>='A' && ch<='Z'))
			return 1;
		return 0;	
	}
//funkcija primi dva stringa i zamijeni ih	
	void kompresuj(char * naziv,char* naziv1){
		FILE *ulaz=fopen(naziv,""r"");
		FILE *ulazpom=fopen(naziv,""r"");
		FILE *izlaz=fopen(naziv1,""w"");
		char rijeci[1000][1000]={{0}},novired,c,pomoc[100];
		int brojac[1000]={0},kontrola;
		int i,broj_rijeci=0,j,kraj,ima,temp;
		char rijec[100000],znak,znk;
		int duzina=0;
		znak=fgetc(ulaz);
		while(znak!=EOF){
			duzina=0;
			while (slovo(znak)){
				rijec[duzina++]=znak;
				znak=fgetc(ulaz);
			}
		rijec[duzina]='\0';
		if (duzina<10 && duzina!=0){
			ima=0;
			for (j=0;j<broj_rijeci;j++){
				if (strcmp(rijeci[j],rijec)==0){
					ima=1;
					brojac[j]++;
					break;
				}
			}
			if (ima!=1){
				strcpy(rijeci[broj_rijeci],rijec);
				brojac[broj_rijeci++]=1;
			}
		}
		znak=fgetc(ulaz);
		}
		//Sortiranje rijeci po broju ponavljanja i leksikografski
		for (i=0;i<broj_rijeci;i++){
			for (j=i+1;j<broj_rijeci;j++){
				if (brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1)){
					temp=brojac[j];
					brojac[j]=brojac[i];
					brojac[i]=temp;
					strcpy(pomoc,rijeci[i]);
					strcpy(rijeci[i],rijeci[j]);
					strcpy(rijeci[j],pomoc);
				}
			}
		}
		kraj=10;
		novired='\n';
		if (broj_rijeci<10) kraj=broj_rijeci;
		for (i=0;i<kraj;i++){
			fputs(rijeci[i],izlaz);
			fputc(novired,izlaz);
		}
		
		c=fgetc(ulazpom);
		while(c!=EOF){
			duzina=0;
			while (slovo(c)){
				rijec[duzina++]=c;
				c=fgetc(ulazpom);
			}
			rijec[duzina]='\0';
			
			kontrola=0;
			if (duzina<10 && duzina!=0){
				for (j=0;j<kraj;j++){
					if (strcmp(rijeci[j],rijec)==0){
						znk=j+20;
						kontrola=1;
						fputc(znk,izlaz);
						fputc(c,izlaz);
						break;
					}
				}
			}
			if (kontrola==0){
				char *r=rijec;
				while(*r!='\0'){
					fputc(*r,izlaz);
					r++;
				}
				fputc(c,izlaz);
			}
			c=fgetc(ulazpom);
		}
		printf(""Datoteka kompresovana.\n"");
		fclose(ulaz);
		fclose(ulazpom);
		fclose(izlaz);
	}
	
	
	void dekompresuj(char*naziv,char*naziv1){
		FILE *ulaz=fopen(naziv,""r"");
		FILE *ulazpom=fopen(naziv,""r"");
		FILE *izlaz=fopen(naziv1,""w"");
		char rijeci[1000][1000]={{0}}, rijec[1000];
		int broj_rijeci=0,duzina=0,broj_mjesta=0,j;
		char znak=fgetc(ulaz);
		int kontrola=0;
		while (znak!=EOF){
			duzina=0;
			kontrola=0;
		while (slovo(znak)){
			rijec[duzina++]=znak;
			znak=fgetc(ulaz);
		}
		rijec[duzina]='\0';
		if (duzina<10 && duzina!=0)
		strcpy(rijeci[broj_rijeci],rijec);
		int j;
		for (j=0;j<broj_rijeci;j++){
			if (strcmp(rijeci[j],rijec)==0){
				kontrola=1;
				break;
			}
			if(kontrola)
			break;
			broj_rijeci++;
		}
		znak=fgetc(ulaz);
	}
	broj_mjesta=0;
	char c=fgetc(ulazpom);
	
	while(c!=EOF){
		if (c=='\n') broj_mjesta++; //Brojimo nova mjesta
		if (broj_mjesta==broj_rijeci) break;
		c=fgetc(ulazpom);
	}
	c=fgetc(ulazpom);
	while(c!=EOF){
		int n=0;
		if (c>=20 && c<=30){
			char *p=rijeci[c-20];
			n=1;
			while (*p!='\0'){
				fputc (*p,izlaz);
				p++;
			}
		}
		if (n==0)
		fputc(c,izlaz);
		c=fgetc(ulazpom);
	}
	printf(""Datoteka dekompresovana.\n"");
	fclose(ulaz);
	fclose(ulazpom);
	fclose(izlaz);
	}
	
	
int main(){
	char str[100],paket[100];
	int menu;
	do{
		printf(""Odaberite:1-kompresuj,2-dekompresuj,0-izlaz: "");
		scanf(""%d"",&menu);
		switch(menu){
			case 1: //Unosi se ulazna i izlazna datoteka i kompresuje se
			{
				printf(""Unesite ime ulazne datoteke: "");
				unesi(str,40);
				kompresuj(str,paket);
				break;
			}
			case 2: //Unosi se ulazna i izlazna datoteka i dekompresuje se
			{
				printf(""Unesite ime ulazne datoteke: "");
				unesi(str,40);
				printf(""Unesite ime izlazne datoteke: "");
				unesi(paket,40);
				dekompresuj(str,paket);
				break;
			}
		}
	} while(menu!=0);
	return 0;
}","#include <stdio.h>
#include <ctype.h>
#include <string.h>

void unesi(char niz[], int velicina) {
	char znak=getchar();
	if (znak=='\n') znak=getchar();
	int i = 0;
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
niz[i]='\0';
}
int slovo(int c){
	if(c>='A' && c<='Z' || c>='a' && c<='z')
	return 1;
	return 0;
}
void swap(char*p,char*q){
	char temp[100];
strcpy(temp,p);
strcpy(p,q);
strcpy(q,temp); }
void kompresuj(char* naziv, char*naziv1){
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv1,""w"");
	char rijeci[1000][1000]={0};
	int brojac[1000]={0};
	int i,broj_rijeci = 0;
	char rijec[1000];
	int duzina;
	char znak=fgetc(ulaz);
	while(znak!=EOF) {
		duzina = 0;
	while(slovo(znak)) {
		rijec[duzina++]= znak;
		znak=fgetc(ulaz);
	}
	rijec[duzina]='\0';
	if (duzina <10 && duzina!=0){
		int ima = 0;
		int j;
		for(j = 0;j < broj_rijeci; j++) {
			if (strcmp(rijeci[j],rijec) ==0) {
				ima = 1;
				brojac[j]++;
				break;
			}
		}
	if (ima!=1) {
		strcpy(rijeci[broj_rijeci], rijec);
		brojac[broj_rijeci++] = 1;
	} }
	znak=fgetc(ulaz); }
	int j;
	for(i=0;i<broj_rijeci;i++){
		for(j=i+1;j<broj_rijeci;j++){
			if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1)){
				int temp=brojac[j];
				brojac[j]=brojac[i];
				brojac[i]=temp;
				swap(rijeci[i],rijeci[j]);
			}
		}
	}
	int kraj=10;
	char novired='\n';
	if(broj_rijeci<10) kraj=broj_rijeci;
	for(i=0;i<kraj;i++){
		fputs(rijeci[i],izlaz);
		fputc(novired,izlaz);
	}
char c=fgetc(ulaz1);
while(c!=EOF){
	duzina = 0;
	while(slovo(c)) {
		rijec[duzina++]=c;
		c=fgetc(ulaz1);
	}
	rijec[duzina]='\0';
	int kontrola=0;
	if(duzina<10 && duzina!=0){
		for(j=0; j<kraj; j++){
if(strcmp(rijeci[j], rijec) == 0){
	char znk=j+20;
	kontrola=1;
	fputc(znk,izlaz);
	fputc(c,izlaz);
	break;
}}
}
if (kontrola==0){
	char*r=rijec;
	while(*r!='\0'){
fputc(*r,izlaz);
r++; }
fputc(c,izlaz);
}
c=fgetc(ulaz1);
}
printf(""Datoteka kompresovana.\n"");
fclose(ulaz);
fclose(ulaz1);
fclose(izlaz);
}
void dekompresuj(char*naziv, char*naziv1){
	FILE *ulaz=fopen(naziv,""r"");
	FILE *ulaz1=fopen(naziv,""r"");
	FILE *izlaz=fopen(naziv1,""w"");
char rijeci[1000][1000]={0}, rijec[1000];
int broj_rijeci=0, duzina=0, brojackrajeva=0;
char znak=fgetc(ulaz);
int kontrola=0;
while(znak!=EOF){
	duzina=0;
	kontrola=0;
	while(slovo(znak)){
		rijec[duzina++]= znak;
		znak=fgetc(ulaz); }
		rijec[duzina]='\0';
		if (duzina <10 && duzina!=0) {
			strcpy(rijeci[broj_rijeci], rijec);
		int j;
		for( j=0; j < broj_rijeci; j++) {
			if(strcmp(rijeci[j], rijec) == 0){
				kontrola=1;
				break;
			} }
if(kontrola)
break;
broj_rijeci++; 
}
znak=fgetc(ulaz);
}
brojackrajeva=0;
char c=fgetc(ulaz1);
while(c!=EOF){
	if(c=='\n')brojackrajeva++;
	if(brojackrajeva==broj_rijeci) break;
	c=fgetc(ulaz1); 
}
c=fgetc(ulaz1);
while(c!=EOF){
	int n=0;
if(c>=20 && c<=30) {
	char*p=rijeci[c-20];
	n=1;
while(*p!='\0'){
fputc(*p,izlaz);
p++; }}
if(n==0)
fputc(c,izlaz);
c=fgetc(ulaz1); }
printf(""Datoteka dekompresovana.\n"");
fclose(ulaz);
fclose(izlaz);
fclose(ulaz1);
}
int main(){
	int opcija;
char s[100],p[100];
do {
	printf(""Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: "");
scanf(""%d"",&opcija);
switch(opcija){
	case 1:
	printf(""Unesite ime ulazne datoteke: "");
	unesi(s,40);
	printf(""Unesite ime izlazne datoteke: "");
	unesi(p,40);
	kompresuj(s,p);
	break;
	case 2:
	printf(""Unesite ime ulazne datoteke: "");
	unesi(s,40);
	printf(""Unesite ime izlazne datoteke: "");
	unesi(p,40);
	dekompresuj(s,p);} }
	while(opcija!=0);
	return 0; }"
2979,72,72,0,22,A2016/Z2/Z2/student7386,A2016/Z2/Z2/student8043,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define PI 3.1415926
 int main(){
 	double ugao[500],ugaosekunda=0;
 	int i,j,stepen,minuta,sekundi,brojuglova;
 	do{
 		printf(""Unesite broj uglova: "");
 		scanf(""%d"",&brojuglova);
 	}while(brojuglova<1);
 	for(i=0;i<brojuglova;i++){
 		scanf(""%lf"",&ugao[i]);
 	}
 	printf(""Uglovi su:\n"");
 	for(j=0;j<brojuglova;j++){
 		ugaosekunda=(fabs(ugao[j])*180./PI)*3600.;
 		ugaosekunda=(int)(ugaosekunda+.5);
 		stepen=ugaosekunda/3600;
 		minuta=(ugaosekunda-stepen*3600)/60;
 	
 


		if (ugaosekunda-floor(ugaosekunda)>0.5){ugaosekunda=ceil(ugaosekunda);sekundi=(ugaosekunda-stepen*3600-minuta*60);}
		else {ugaosekunda=floor(ugaosekunda); sekundi=(ugaosekunda-stepen*3600-minuta*60);}
	if (sekundi>=60){
		minuta++;
		sekundi=60;
	}
	if(minuta>=60){
		stepen++;
		minuta=60;
	}
		if(ugao[j]<0){
			if(sekundi>30) continue;
			else printf(""-%d stepeni %d minuta %d sekundi\n"",stepen,minuta,sekundi);
		}
	    if(ugao[j]>=0){
	    	if(sekundi>30) continue;
	   else  printf(""%d stepeni %d minuta %d sekundi\n"",stepen,minuta,sekundi);
	    }
	    }
return 0;
}","#include <stdio.h>
#define PI 3.1415926
#include <stdlib.h>
#include <math.h>
int main() {
	int broj_uglova,a,stepeni,minute,sekunde;
	double niz[100];
	long double ugao_u_sekundama=0;
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &broj_uglova);
	for(a=0;a<broj_uglova;a++) scanf(""%lf"", &niz[a]);
	printf(""Uglovi su:\n"");
	for(a=0;a<broj_uglova;a++) {
		ugao_u_sekundama=(fabs(niz[a])*180./PI)*3600;
		ugao_u_sekundama=(int)(ugao_u_sekundama+0.5);
		stepeni=ugao_u_sekundama/3600;
		minute=(ugao_u_sekundama-stepeni*3600)/60;
		if (ugao_u_sekundama-floor(ugao_u_sekundama)>0.5){ugao_u_sekundama=ceil(ugao_u_sekundama);sekunde=(ugao_u_sekundama-stepeni*3600-minute*60);}
		else {ugao_u_sekundama=floor(ugao_u_sekundama); sekunde=(ugao_u_sekundama-stepeni*3600-minute*60);}
		
		if(sekunde>=60) {minute++; sekunde=60;}
		if(minute>=60) {stepeni++; minute=60;}
			if(sekunde>30)
			continue;
		else
		printf(""%d stepeni %d minuta %d sekundi\n"", stepeni,minute,sekunde);}
		
		
	
	return 0;
}
"
2981,92,92,0,68,A2016/Z3/Z3/student4959,A2016/Z3/Z3/student5961,"#include <stdio.h>
#include <math.h>
int main()
{ int m,n,i,j,mat[200][200],check,a,b,c,x,y;
    
    do{
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"",&m,&n);
        if(m>200 || m<1 || n>200 || n<1) printf(""Brojevi nisu u trazenom opsegu.\n"");
    }
    while(m>200 || m<1 || n>200 || n<1);
    printf(""Unesite elemente matrice: "");
    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
            scanf(""%d"",&mat[i][j]);
        }
    }
    x=m;
    for(i=0;i<x;i++){
        for(j=i+1;j<x;j++){
            check=1;
            for(a=0;a<n;a++){
                if(mat[i][a]!=mat[j][a])
                { check=0;
                break;
                    
                }
            }
            if(check){
                for(b=j;b<x-1;b++){
                    for(c=0;c<n;c++){
                        mat[b][c]=mat[b+1][c];
                    }}
                    j--;
                    x--;
                }
            }
            
        }
         y=n;
    for(j=0;j<y;j++){
        for(i=j+1;i<y;i++){
            check=1;
            for(a=0;a<x;a++){
                if(mat[a][i]!=mat[a][j])
                { check=0;
                break;
                    
                }
            }
            if(check){
                for(b=i;b<y-1;b++){
                    for(c=0;c<x;c++){
                        mat[c][b]=mat[c][b+1];
                    }}
                    i--;
                    y--;
                }
            }
            
        }
    printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
    for(i=0;i<x;i++){
        for(j=0;j<y;j++){
            printf(""%5d"",mat[i][j]);
        }
        printf(""\n"");
    }
    
    return 0;
}","#include <stdio.h>

int main() {
	int M, N, matrica[200][200], i, j, k, e, f, jeste, m, n;
	do {
		printf (""Unesite brojeve M i N: "");
		scanf (""%d %d"", &M, &N);
		if (M<1 || M>200 || N<1 || N>200) {
			printf (""Brojevi nisu u trazenom opsegu.\n"");
		}
	}while (M<1 || M>200 || N<1 || N>200);
	printf (""Unesite elemente matrice: "");
	for (i=0; i<M; i++){
		for (j=0; j<N; j++){
			scanf(""%d"", &matrica[i][j]);
		}
	}
	m = M;
	for (i = 0; i < m; i++){
		for (j = i + 1; j < m; j++){
			jeste = 1;
			for (k = 0; k < N; k++){
				if (matrica[i][k] != matrica[j][k]){
                    jeste = 0;
                    break;
				}
			}
			if (jeste){
				for (e = j; e < m - 1; e++){
					for (f = 0; f < N; f++){
						matrica[e][f] = matrica[e+1][f];
					}
				}
				j--;
				m--;
			}
		}
	}
	n = N;

	for (j = 0; j < n; j++){
		for (i = j + 1; i < n; i++){
			jeste = 1;
			for (k = 0; k < m; k++){
				if (matrica[k][j] != matrica[k][i]){
					jeste = 0;
					break;
				}
			}
			if (jeste){
                for (e = i; e < n - 1; e++){
                    for (f = 0; f < m; f++){
                        matrica[f][e] = matrica[f][e+1];
                    }
                }
                i--;
                n--;
            }
		}
	}

	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i = 0; i < m; i++){
		for (j = 0; j < n; j++){
			printf(""%5d"", matrica[i][j]);
		}
		printf (""\n"");
	}


	return 0;
}"
2983,9,9,0,21,A2016/Z4/Z3/student6877,A2016/Z4/Z3/student6631,"#include <stdio.h>
int slovo(char c){
	if((c>=65 && c<=90)||(c>=97 && c<=122)) return 1;
	return 0;
}
int mjenjati(char *tekst, char *rijec){
	char *pocetak=tekst;
	char *pocetakrijeci=rijec;
	int isto=1;
	while (*tekst!='\0' && *rijec!='\0') {
		if(*tekst!=*rijec) isto=0;
		tekst++;
		rijec++;
	}
	if((*tekst!='\0' && *tekst!=' ') || (*rijec!='\0' )) isto=0;
	tekst=pocetak;
	rijec=pocetakrijeci;
	return isto;
}
void zamjeni(char* tekst, char* rijec, char* novarijec){
	char* temp=tekst,*a=tekst,*rijtemp=rijec,*novatemp=novarijec;
	int visak=0,i,nastavi=1;
	while(*tekst!='\0'){
		nastavi=0;
		while(*tekst!=*rijec && *tekst!='\0'){
			tekst++;
		}
		if(*tekst!='\0' && (tekst==temp || *(tekst-1)==' ') && mjenjati(tekst,rijec)){
		   while(*novarijec!='\0'){
		   	if(*tekst==' '|| *tekst=='\0'){
		   		a=tekst;
		   		while(*tekst!='\0') tekst++;
		   		tekst++;
		   		while(tekst>a){
		   			*tekst=*(tekst-1);
		   			tekst--;
		   		}
		   	}
		   	*tekst=*novarijec;
		   	tekst++;
		   	novarijec++;
		   }	
		   nastavi=1;
		}
		if(*tekst!=' ' && *tekst!='\0' && nastavi==1){
			a=tekst;
			while(*tekst!=' ' && *tekst!='\0'){
				visak++;
				tekst++;
			}
		
		tekst=a;
		for(i=0;i<visak;i++){
			tekst=a;
			while(*tekst!='\0'){
				*tekst=*(tekst+1);
				tekst++;
			}
		}
		tekst=a;
	}
	if(*tekst!=' ' && *tekst!='\0') tekst++;
	rijec=rijtemp;
	novarijec=novatemp;
	}
	tekst=temp;
	rijec=rijtemp;
	novarijec=novatemp;
}
char* zamjena_rijeci(char* tekst, char**rijeci, char**zamjene , int broj_rijec){
	char* temptekst=tekst;
	int i;
	for(i=0;i<broj_rijec;i++){
		tekst=temptekst;
		while(*tekst!='\0'){
			while(*tekst==' ' && *tekst!='\0') tekst++;
			if(mjenjati(tekst,rijeci[i])){
				zamjeni(tekst,rijeci[i],zamjene[i]);
			}
			while(*tekst!=' ' && *tekst!='\0') tekst++;
		}
	}
	return temptekst;
}

int main() {
	char* rijeci[2] = {"""", """"};
	char* zamjene[2] = {"""", """"};
	char tekst[100] = """";
	printf(""%s"",zamjena_rijeci(tekst,rijeci,zamjene,2));
	return 0;
}
","#include <stdio.h>
#include <math.h>

int duzinaRijeci(char* s){
	int brojac;
	brojac=0;
	
	while(*s != '\0'){
		brojac++;
		s++;
	}
	return brojac;
}

int rijecBrojac(char* s){
	char* kopija, *poredi;
	int brojRijeci;
	kopija=s;
	brojRijeci=1;
	poredi=kopija+1;
	
	while(*kopija != '\0' && *poredi != '\0'){
		if(*poredi==' ' || *poredi=='\0'){
			if(*poredi==*kopija) brojRijeci--;
			brojRijeci++;
		}
		kopija++;
		poredi++;
	}
	return brojRijeci;
}

char* trazilicafix(char* s, char* rijec){
	while(*s!='\0'){
		while(*s== ' '){
			s++;
		}
		char* p=s;
		char* start=s;
		char* q=rijec;
		
		while(*p++==*q++){
			if(*q=='\0' && (*p==' ' || *p=='\0')) return start;
		}
		while(*s != '\0' && *s != ' '){
			s++;
		}
	}
	return NULL;
}
char* trazilica(char* string, char* rijec){
	char* pamti=rijec,*lokacija;
	int radi=1;
	while(*string!='\0'){
		if(*string==*rijec){
			lokacija=string;
			while(*rijec!='\0' ){
				if(*rijec!=*string){radi=0;break;}
				rijec++;
				string++;
			}
			if(radi==1)return lokacija;
			else {radi=1;rijec=pamti;}
		}string++;
	}
	return NULL;
}

int trazilicaPonavljanja(char* string, char* rijec){
	char* pamti=rijec,*lokacija;
	int radi=1;
	while(*string!='\0'){
		if(*string==*rijec){
			lokacija=string;
			while(*rijec!='\0' ){
				if(*rijec!=*string){radi=0;break;}
				rijec++;
				string++;
			}
			if(radi==1)return 1;
			else {radi=1;rijec=pamti;}
		}string++;
	}
	return 0;
}




char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	int duzinaPrve, duzinaDruge;
	char* pocetak=tekst;
	int j, i, k, h, izbaciti, razlika;
	char* p;
	char* q;
	char* prazan=tekst;
	int ponavljanje=0,greska=1;
	int rijeciString;
	
	rijeciString=rijecBrojac(tekst);
	
	if(*prazan==' ') return tekst;


	for(i=0;i<broj_rijeci;i++){
		for(j=0;j<rijeciString;j++){
	/*	do{
		if(trazilicaPonavljanja(tekst, rijeci[i]))
		ponavljanje+=trazilicaPonavljanja(tekst, rijeci[i]);
		else greska=0;
	}while(greska==0);
	
	*/
	
		
	duzinaPrve=duzinaRijeci(rijeci[i]);
	duzinaDruge=duzinaRijeci(zamjene[i]);
	
	
		
	char* p= trazilicafix(tekst, rijeci[i]);

	if(p == NULL) continue;
	if(p != NULL){
	
	
	
	if(duzinaPrve<duzinaDruge){
		
		razlika=duzinaDruge-duzinaPrve;
		
		char* kraj=p;
		char* temp=kraj;
		while(*kraj != '\0') kraj++;
		while(kraj>p){
			*(kraj+razlika)=*kraj;
			kraj--;
		}
		
		char* prvoSlovo=p;
		char* z=zamjene[i];
		while(*z != '\0'){
			*prvoSlovo = *z;
			z++;
			prvoSlovo++;
		}
	}
	
	if(duzinaPrve>duzinaDruge){
		razlika=duzinaPrve-duzinaDruge;
		razlika=fabs(razlika);
		char* slovo=p;
		char* sljedeceSlovo=p+1;
		for(h=0;h<razlika;h++){
			char* slovo=p;
			char* sljedeceSlovo=p+1;
		while(*slovo++=*sljedeceSlovo++);}
		char* prvoSlovo=p;
		char* z=zamjene[i];
		while(*z != '\0'){
			*prvoSlovo = *z;
			z++;
			prvoSlovo++;
		}
		
	}
	
	else if(duzinaPrve==duzinaDruge){
	
		char* x= p;
		char* y=zamjene[i];
		while(*y !='\0'){
		
		*x=*y;
		
		x++;
		y++;
		}
	}
	}
	}
	}
	return pocetak;

}
	


int main() {
	
	char* rijeci[2] = { ""beli"", ""sneg"" };
	char* zamjene[2] = { ""bijeli"", ""snijeg"" };
	char tekst[100] = ""beli sneg je pokrio beli breg"";
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));

	
	return 0;
}



	/*char* pocetak=tekst;
	char* pocetakRijeci;
	char* zamjenaPok;
	int duzinaStvarne, duzinaTrazene, duzina;
	int i;
	
	while(*tekst != '\0'){
		for(i=0;i<broj_rijeci;i++){
		pocetakRijeci=podstring(tekst,(*zamjene+i));
		zamjenaPok=*(zamjene+i);
		if(pocetakRijeci==NULL) return 0;
		
		duzinaStvarne= duzinaRijeci(pocetakRijeci);
		duzinaTrazene= duzinaRijeci(*zamjene);
		duzina=duzinaStvarne-duzinaTrazene;
		
		while(*pocetakRijeci != '\0'){
			
			
				char* kraj=pocetakRijeci;
				while(*kraj != '\0') kraj++;
				while(kraj > pocetakRijeci){
					*(kraj+duzina)=*kraj;
					kraj--;
				}
			
		
			*pocetakRijeci=*zamjenaPok;
			pocetakRijeci++;
			zamjenaPok++;
		}
		
		tekst++;
	}	
	}
	
	
	return pocetak;
}*/




/*-----------------------------------------------------------------------------	
	char* rijeci[2]={""beli"", ""sneg""};
	char* test[2]={""belise"", ""aneg""};
	char* zamjene[2]={""bijeli"", ""snijeg""};
	char tekst[100]= ""beli sneg je pokrio beli breg"";
	int d,i;
	char** pointer=test[1];
	char** pointer2=zamjene[1];
	
	d=duzinaRijeci(rijeci[0]);
	
	

	
	printf(""%s"", test[1]);
	

	/*printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
	*/
/*	printf(""%d"", duzinaRijeci(test[1]));*/"
2984,94,94,0,120,A2016/Z4/Z1/student8797,A2016/Z4/Z1/student8753,"#include <stdio.h>

/*funkcija koja broji koliko ima karaktera u stringu*/
int kolko(char*s){
	char*p=s;
	int brojac=0;
	while(*p!='\0'){
		p++;brojac++;
	}
	return brojac;
}
/*funkcija koja izbacuje poslanu rijec iz poslanog stringu*/
void f(char*s, char*r){
	int duzina=kolko(r);
	char*s1=s;
	char*pomp=s;
	
	while(*s1!='\0'){
    	char*r2=r;
    	char*p2=s1;
    	while(((*p2==*r2)||(*p2==*r2-32)||(*p2==*r2+32))&&*r2!='\0'){
				p2++;r2++;
				if(s1==s){
					if(*r2=='\0' && !(*p2 >= 'A' && *p2 <= 'Z') && !(*p2 >= 'a' && *p2 <= 'z'))
					pomp=s1;
					while(*(pomp+duzina)!='\0'){
						*pomp=*(pomp+duzina);
						pomp++;
					}
					*pomp=*(pomp+duzina);

				}			
				else if(*r2=='\0' && (!(*p2 >= 'A' && *p2 <= 'Z') && !(*p2 >= 'a' && *p2 <= 'z')) && !(*(s1-1)>='a' && *(s1-1)<='z') && !(*(s1-1)>='A' && *(s1-1)<='Z')){
				    pomp=s1;
					while(*(pomp+duzina)!='\0'){
						*pomp=*(pomp+duzina);
						pomp++;
					}
					*pomp=*(pomp+duzina);
				}
		   }
    	s1++;	
   }
}
char* izbaci_najcescu(char*s){
    char*p=s;
    char*k=s;
    char*a=s;
    char*b=s;
    char*p1=s;
    int duzina=0,i=0,brojac=0;
    char rijec[10000];
    char max_rijec[10000];
    int max=0;
    int provjerim=kolko(s);
    if(provjerim==0){
    	return p;
    }
    

    while(*s!='\0'){
    	k=s;
    	while(!((*s >= 'A' && *s <= 'Z') || (*s >= 'a' && *s <= 'z'))){
			if(*s=='\0') 
				break;
			s++;}
			
		if(*s=='\0'){ 
			if(k==p)  
				return p;
		    break;}
		a=s;
		b=s;
		duzina=0;
		brojac=0;
		
		while((*s >= 'A' && *s <= 'Z') || (*s >= 'a' && *s <= 'z'))	{
			 if(*s=='\0') 
		  		break;
		  	s++;	
		}
		if(b==p && *s=='\0'){
			f(p,p);
			return p;
		}
	    if(*s=='\0') 
			break;
		i=0;
		while(i<s-a){
			*(rijec+i)=*b;
			b++;
			duzina++;
			i++;
		}
		rijec[i]='\0';
		p1=p;
		
		/*provjerim koliko se puta ponavlja*/
		while(*p1!='\0'){
			char*p2=p1;
			char*r2=rijec;
			while(((*p2==*r2)||(*p2==*r2-32)||(*p2==*r2+32))&&*r2!='\0'){
				p2++;r2++;
				if(p1==p){if(*r2=='\0' && !(*p2 >= 'A' && *p2 <= 'Z') && !(*p2 >= 'a' && *p2 <= 'z'))
							brojac++;}
				else if(*r2=='\0' && (!(*p2 >= 'A' && *p2 <= 'Z') && !(*p2 >= 'a' && *p2 <= 'z')) && !(*(p1-1)>='a' && *(p1-1)<='z') && !(*(p1-1)>='A' && *(p1-1)<='Z'))
				            brojac++;
				}
				p1++;	
			}
			
		if(brojac>max){
			max=brojac;
			for(i=0;i<duzina;i++){
				max_rijec[i]=rijec[i];
			}
			max_rijec[i]='\0';
		}
    if(*s=='\0') 
		  break;
    s++;	    
    }
    f(p,max_rijec);

   return p;
}
int main() {
	
	char s[100000]={""szzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttteeeerrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrreeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeewwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwsqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqssssssssssssssssssssssssssssssssssssssssssssssssaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaasssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss""};
	printf(""\nModificiran niz glasi: |%s|"", izbaci_najcescu(s));
	
   return 0;
}
","#include <stdio.h>

int broj_karaktera(char* s){
	char*p=s;
	int n=0;
	while(*p!='\0'){
		p++;
		n++;
	}
	return n;
}

void izbacuje(char* s,char* q){
	int duzina=broj_karaktera(q);
	char* s1=s;
	char* m=s;
	
	while (*s1!='\0'){
		char* q2=q;
		char* p2=s1;
		while(((*p2==*q2) || (*p2==*q2-32) || (*p2==*q2+32)) && *q2!='\0'){
			p2++;
			q2++;
			if(s1==s){
				if(*q2=='\0' && !(*p2>='A' && *p2<='Z') && !(*p2>='a' && *p2<='z'))
				m=s1;
				while(*(m+duzina)!='\0'){
					*m=*(m+duzina);
					m++;
				}
				*m=*(m+duzina);
			}
			else if(*q2=='\0' && (!(*p2>='A' && *p2<='Z') && !(*p2>='a' && *p2<='z')) && !(*(s1-1)>='A' && *(s1-1)<='Z') && !(*(s1-1)>='a' && *(s1-1)<='z')){
				m=s1;
				while(*(m+duzina)!='\0'){
					*m=*(m+duzina);
					m++;
				}
				*m=*(m+duzina);
			}
		}
		s1++;
	}
}

char* izbaci_najcescu(char* s){
	char* p=s;
	char* a=s;
	char* b=s;
	char* c=s;
	char* p1=s;
	int i=0,n=0,duzina=0,maks=0;
	char tekst[100];
	char maksi_rijec[100];
	int broj=broj_karaktera(s);
	if(broj==0){
		return p;
	}
	while(*s!='\0'){
		a=s;
		while(!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))){
			if(*s=='\0')
			break;
			s++;
		}
		if(*s=='\0'){
			if(a==p)
			return p;
			break;
		}
		b=s;
		c=s;
		
			while((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')){
			if(*s=='\0')
			break;
			s++;
		}
		if(c==p && *s=='\0'){
			izbacuje(p,p);
			return p;
		}
		if(*s=='\0')
		break;
		while(i<s-b){
			*(tekst+i)=*c;
			c++;
			duzina++;
			i++;
		}
		tekst[i]='\0';
		p1=p;
		
		while(*p1!='\0'){
			char* p2=p1;
			char* q2=tekst;
			while(((*p2==*q2) || (*p2==*q2-32) || (*p2==*q2+32)) && *q2!='\0'){
				p2++;
				q2++;
				if(p1=p){
					if(*q2=='\0' && !(*p2>='A' && *p2<='Z') && !(*p2>='a' && *p2<='z'))
					n++;
				}
				else if(*q2=='\0' && (!(*p2>='A' && *p2<='Z') && !(*p2>='a' && *p2<='z')) && !(*(p1-1)>='a' && *(p1-1)<='z') && !(*(p1-1)>='A' && *(p1-1)<='Z'))
				n++;
			}
			p1++;
		}
		if (n>maks){
			maks=n;
			for(i=0;i<duzina;i++){
				maksi_rijec[i]=tekst[i];
			}
			maksi_rijec[i]='\0';
		}
		if(*s=='\0')
		break;
		s++;
	}
	izbacuje(p,maksi_rijec);
	return p;
}

int main() {
	char s[10000]={"" ""};
	printf(""Modificiran niz glasi: |%s|"",izbaci_najcescu(s));
	return 0;
}
"
3010,96,96,0,18,A2016/Z1/Z4/student7507,A2016/Z1/Z4/student5162,"#include <stdio.h>

int main() {
	int i,j,n;
	do{
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
		if(n<=0 || n>50) printf(""Pogresan unos\n"");
	}while(n<=0 || n>50);
	if(n==1){ 
		for(i=0;i<(2*n);i++){
			printf(""*"");
		}
	}
		for(i=1;i<=n;i++){
			for(j=1;j<=(4*n-3);j++){
				if(i==j || i+j==2*n || j-i==(2*n-2) || (i+j)==(4*n-2)) printf(""*"");
				else printf("" "");
			}
			printf(""\n"");
		}
		
	
	return 0;
}
","#include <stdio.h>

int main() {
	int i,j,n;
	do{
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
		if(n<=0 || n>50) printf(""Pogresan unos\n"");
	}while(n<=0 || n>50);
	if(n==1){ 
		for(i=0;i<(2*n);i++){
			printf(""*"");
		}
	}
		for(i=1;i<=n;i++){
			for(j=1;j<=(4*n-3);j++){
				if(i==j || i+j==2*n || j-i==(2*n-2) || (i+j)==(4*n-2)) printf(""*"");
				else printf("" "");
			}
			printf(""\n"");
		}
		
	
	return 0;
}
"
3014,59,59,0,13,A2016/Z2/Z1/student6960,A2016/Z2/Z1/student5496,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

int main() {
	int a,b,n,cifra1,cifra2;
	b=0;
	n=1;
	
	 /*Unos*/
	 printf(""Unesite broj: "");
	 scanf(""%d"",&a);
	 a=abs(a);
	 
	 /*Obrada*/
	 while (a>=10) {
	 	cifra1=a%10;
	 	cifra2=(a/10)%10;
	  	b+=abs(cifra1-cifra2)*n;
	  	a/=10;
	 	n*=10;
	 } 
	 
	 /*Izlaz*/
	 printf(""%d"",b);

	return 0;
}
","#include <stdio.h>
#include <math.h>
int main() {
	int n,C1,C2;
	int k=1;
	int S=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &n);
	n=fabs (n);
		while(n>=10){
		C1=n%10;
		C2=(n/10)%10;
		S+=fabs((C1-C2)*k);
		k*=10;
		n/=10;
    
	}
	printf(""%d"", S);
	return 0;
}
"
3029,95,95,0,75,A2016/Z3/Z2/student6956,A2016/Z3/Z2/student3108,"#include <stdio.h>
int Fibonacci(int n) {
	int broj1=1,broj2=1,broj3;
	if(n==1) return 1;
	for(;;) {
		broj3=broj1+broj2;
		broj1=broj2;
		broj2=broj3;
		if(n==broj3) return 1;
		if(broj3>n) return 0;
	}
}
int zbir(int x) {
	int sabrani=0;
	if(x<0) x*=(-1);
	while(x>0) {
		sabrani+=x%10;
		x/=10;
	}
	return sabrani;
}
void ubaci(int *niz,int velicina) {
	int pomocni1[10],pomocni2[10],i,indeks1=0,indeks2=0;
	for(i=0;i<velicina;i++) {
		pomocni1[i]=niz[i];
		pomocni2[i]=zbir(niz[i]);
	}
	for(i=0;i<2*velicina;i++) {
		if(i%2==0) {
			niz[i]=pomocni1[indeks1];
			indeks1++;
		}
		else {
			niz[i]=pomocni2[indeks2];
			indeks2++;
		}
	}
}
int izbaci(int *niz,int velicina) {
	int i,j;
	for(i=0;i<velicina;i++) {
		if(Fibonacci(niz[i])==1) {
			for(j=i;j<velicina-1;j++) 
				niz[j]=niz[j+1];
			velicina--;
			i--;
		}
	}
	return velicina;
}
int main() {
	int i,niz[20],n=1;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++) {
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,10);
	n=izbaci(niz,20);
	if(n==0) {
		printf(""Prazan niz."");
		return 0;
	}
	printf(""Modificirani niz glasi: "");
	for(i=0;i<n-1;i++) {
		printf(""%d, "",niz[i]);
	}
	printf(""%d."",niz[n-1]);
	return 0;
}
","#include <stdio.h>

int Fibonacci(int n) {
	int broj1=1, broj2=1, broj3;
	if(n==1)
	return 1;
	
	for(;;) {
		broj3=broj1+broj2;
		broj1=broj2;
		broj2=broj3;
		if(n==broj3)
		return 1;
		if(broj3>n)
		return 0;
	}
	
}

int SumaCifara(int n) {
	int suma=0;
	if(n<0)
	n*=(-1);
	while(n>0) {
		suma+=n%10;
		n/=10;
	}
	return suma;
}

void ubaci(int* niz, int vel) {
	int pomocni1[10], pomocni2[10],i,index1=0,index2=0;
	for(i=0; i<vel; i++) {
		pomocni1[i]=niz[i];
		pomocni2[i]=SumaCifara(niz[i]);
	}
	for(i=0; i<2*vel; i++) {
		if(i%2==0) {
			niz[i]=pomocni1[index1];
			index1++;
		}
		else {
			niz[i]=pomocni2[index2];
			index2++;
		}
	}
}

int izbaci(int* niz, int vel) {
	int i,j;
	for(i=0; i<vel; i++) {
		if(Fibonacci(niz[i])==1) {
			for(j=i; j<vel-1;j++) 
			niz[j]=niz[j+1];
			vel--;
			i--;
		}
	}
	return vel;
}

int main() {
	int niz[20],i,n;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<10; i++) {
		scanf(""%d"", &niz[i]);
	}
	ubaci(niz,10);
	n=izbaci(niz,20);
	if(n==0) {
		printf(""Prazan niz."");
		return 0;
	}
	printf(""Modificirani niz glasi: "");
	for(i=0; i<n-1; i++) {
		printf(""%d, "", niz[i]);
	}
	printf(""%d."", niz[n-1]);
}
"
3039,87,87,0,53,A2016/Z1/Z3/student2160,A2016/Z1/Z3/student4863,"#include <stdio.h>

int main() {
	int brc=0,brb=0,brs=0,brv=0,brp=0,br=0;
	float y;
    char x;

printf(""Unesite vozila: "");
do
{   scanf(""%c"",&x);  
	if(x=='k' || x=='K') break;
	
	else if(x=='C' || x=='c') { br++;  brc++;}
	else if(x=='B' || x=='b') { br++;  brb++; }
	else if(x=='S' || x=='s') { br++;  brs++; }
	else if(x=='V' || x=='v') { br++; brv++; }
	else if(x=='P' || x=='p') { br++; brp++; }

	else if(x!='C' && x!='c' && x!='B' && x!='b'&& x!='S' && x!='s' && x!='V' && x!='v' && x!='P' && x!='p' && x!='K' && x!='k')
	{ printf(""Neispravan unos\n""); }

} 
while(x!='k');

printf(""Ukupno evidentirano %d vozila.\n"",br);
if(br!=0)
{
	if(brc>=brs && brc>=brv && brc>=brp && brc>=brb)
	{ 	y=(float)brc*100/br;
		printf(""Najpopularnija boja je crna (%.2f%%)."",y); }
else if(brb>=brc && brb>=brs && brb>=brv && brb>=brp)
	{ 	y=(float)brb*100/br;
		printf(""Najpopularnija boja je bijela (%.2f%%)."",y); }
else if(brs>=brc && brs>=brv && brs>=brb && brs>=brp)
	{	y=(float)brs*100/br;
		printf(""Najpopularnija boja je siva (%.2f%%)."",y);  }
else if(brv>=brc && brv>=brb && brv>=brs && brv>=brp)
	{ 	y=(float)brv*100/br;
		printf(""Najpopularnija boja je crvena (%.2f%%)."",y); }
else if(brp>=brc && brp>=brb && br>=brs && brp>=brv)
	{	y=(float)brp*100/br;
		printf(""Najpopularnija boja je plava (%.2f%%)."",y);}
}
else printf(""Najpopularnija boja je crna (0.00%)."");

	return 0;
}

","#include <stdio.h>

int main() {
	char x;
	int brojac=0,c=0, b=0,s=0,v=0,p=0;
	float u;
	printf(""Unesite vozila: "");
	do
	{
	
		x = getchar();
		if(x == 'k' || x == 'K')
			break;
		if(x == 'c' || x == 'C'){
			brojac++;
			c++;
		}
		else if(x == 'b' || x == 'B'){
			brojac++;
			b++;
		}
		else if(x == 's' || x == 'S'){
			brojac++;
			s++;
		}
		else if(x == 'v' || x == 'V'){
			brojac++;
			v++;
		}
		else if(x == 'p' || x == 'P'){
			brojac++;
			p++;
		}
		else if(x != 'k' && x!='K' && x!= 'c' && x!= 'C' && x!='s' && x!='S' && x!='v' && x!='V' && x!='p' && x!='P')
			printf(""Neispravan unos\n"");
		
		
		
	}while(x != 'k' && x != 'K');
	
	
	printf(""Ukupno evidentirano %d vozila.\n"", brojac);
	
	if(brojac != 0){
		
		if(c >= b && c >= s && c>= p && c>= v){
		u = (float) c*100/brojac;
		printf(""Najpopularnija boja je crna (%.2f%)."",u);
	}
	
		else if(b >= c &&  b>= s &&  b>= p &&  b>=v){
		u = (float)b*100/brojac;
		printf(""Najpopularnija boja je bijela (%.2f%)."",u);
	}
		else if(s >= c && s>= b && s>= p && s>= v){
		u = (float)s*100/brojac;
		printf(""Najpopularnija boja je siva (%.2f%)."",u);
	}
		
		else if(v >= c &&  v >= b && v >= s &&  v >= p){
		u = (float)v*100/brojac;
		printf(""Najpopularnija boja je crvena (%.2f%)."",u);
	}
		
		else if(p >= c && p>= b && p >= s && p >= v){
		u = (float)p*100/brojac;
		printf(""Najpopularnija boja je plava (%.2f%)."",u);
	}
		
	
	
	}
	
	else if (brojac == 0)
		printf(""Najpopularnija boja je crna (0.00%%)."");
	
		
	
	
	
	
	return 0;
}
"
3047,90,90,0,55,A2016/Z3/Z3/student5624,A2016/Z3/Z3/student3329,"#include <stdio.h>

int main() {
    int matrica[200][200], i, j, k, l, m, n,pret,pret1,p;
    do{
        printf(""Unesite brojeve M i N: "");
        scanf(""%d %d"", &m, &n);
        if(m<=0||n<=0||m>200||n>200) 
            printf(""Brojevi nisu u trazenom opsegu.\n"");
    } 
    while(m<=0||n<=0||m>200||n>200); // petlja osigurava da su brojevi u trazenom opsegu
    printf(""Unesite elemente matrice: "");
    for(i=0;i<m;i++)
        for(j=0;j<n;j++)
            scanf(""%d"",&matrica[i][j]);
    for(i=0;i<m;i++){
        for(k=i+1;k<m;k++){ 
            pret=1;
            for(j=0;j<n;j++){
                if(matrica[i][j]!=matrica[k][j]) pret=0; //ispitujemo da li su redovi matrice jednaki
            } 
            if(pret==1){ //izbacivanje jednakog reda matrice
                for(l=k;l<m-1;l++){
                    for(p=0;p<n;p++)
                        matrica[l][p]=matrica[l+1][p];
                }
                m--;
                k--;
            }
        }
    }
    for(i=0;i<n;i++){
        for(k=i+1;k<n;k++){
            pret1=1;
            for(j=0;j<m;j++){
                if(matrica[j][i]!=matrica[j][k]) pret1=0; //ispitujemo da li su kolone matrice jednake
            }
            if(pret1==1){//izbacivanje jednake kolone matrice
                for(l=k;l<n-1;l++){
                    for(p=0;p<m;p++)
                        matrica[p][l]=matrica[p][l+1];
                }
                    n--;
                    k--;
            }
        }
    }
    printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
    for(i=0;i<m;i++){
        for(j=0;j<n;j++)
            printf(""%5d"",matrica[i][j]);
        printf(""\n"");
    }
    return 0;
}
","#include <stdio.h>

int main() {
	int mat[200][200];
	int M, N, i, j, k, m, n, checker;
	do{
		printf(""Unesite brojeve M i N: ""); scanf(""%d %d"", &M, &N);
		if(M<=0||M>200||N<=0||N>200) printf(""Brojevi nisu u trazenom opsegu.\n"");
	}while(M<=0||M>200||N<=0||N>200);
	
	printf(""Unesite elemente matrice: "");
	for(i=0; i<M; i++){
		for(j=0; j<N; j++){
			scanf(""%d"",&mat[i][j]);
		}
	}
	/*izbacivanje redova*/
	
	for(i=0; i<M; i++){
		for(k=i+1; k<M; k++){
			checker=1;
			for(j=0; j<N; j++){
				if(mat[i][j]!=mat[k][j]){
					checker=0; break;
				}
			}
			if(checker){
				for(m=k; m<M-1; m++){
					for(n=0; n<N; n++){
						mat[m][n]=mat[m+1][n];
					}
				}
				M--; k--;
			}
		}
	}
	/*izbacivanje kolona analogno kao za izbacivanje redova..................*/
	
	for(j=0; j<N; j++){
		for(k=j+1; k<N; k++){
			checker=1;
			for(i=0; i<M; i++){
				if(mat[i][j]!=mat[i][k]){
					checker=0; break;
				}
			}
			if(checker){
				for(n=k; n<N-1; n++){
					for(m=0; m<M; m++){
						mat[m][n]=mat[m][n+1];
					}
				}
				N--; k--;
			}
		}
	}
	
	printf(""Nakon izbacivanja redova/kolona matrica glasi:\n"");
	for(i=0; i<M; i++){
		for(j=0; j<N; j++){
			printf(""%5d"", mat[i][j]);
		}
		printf(""\n"");
	}
	return 0;
}"
3074,97,97,0,25,A2016/Z1/Z4/student8497,A2016/Z1/Z4/student5649,"#include <stdio.h>

int main(){
	int i,j,n;
	printf(""Unesite broj n: "");
	scanf(""%d"", &n);
	while(n<1 || n>50){
		printf(""Pogresan unos\n"");
		printf(""Unesite broj n: "");
		scanf(""%d"", &n);
	}
	if(n==1){printf(""***"");}
	else{
	for(i=1;i<=n;i++){
		for(j=1;j<=4*n-3;j++){
			if(j==i || j==2*n-i || j==2*n-2+i || j==4*n-2-i){
				printf(""*"");
			}
			else {
				printf("" "");
			}
		}
		printf(""\n"");
	}
	}
	return 0; 
}
","#include <stdio.h>

int main() {
	int n, j, i;
	printf(""Unesite broj n: "");
	scanf(""%d"", &n);
	while(n<=0 || n>50) {
	printf(""Pogresan unos"");
	printf(""\nUnesite broj n: "");
	scanf(""%d"", &n);}
	if(n==1) {
		printf(""***"");}
		else {
		for(i=0;i<n;i++)
		{
			for(j=0;j<=4*n-4;j++)
		{
			if(i==j || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i) {
			printf(""*"");}
			else{
			printf("" "");}
		}
		printf(""\n"");
	}
	}
	return 0;
}






"
3075,71,71,0,73,A2016/Z3/Z2/student5612,A2016/Z3/Z2/student3732,"#include <stdio.h>
#include<stdlib.h>
#define VELICINA 10
#define velicina_2 20
void ubaci (int *niz, int velicina)
{
	int i, k;
	int b1;
	int b2;
	int b3 = 0;
	for(k = velicina - 1; k >= 0; k--){
		niz[2*k] = niz[k];
	}
	for(i = 0; i < 2 * velicina; i = i + 2){
		b1 = abs (niz[i]);
		if (b1 < 10) 
		b3 = b1;
		else {
			do{
			b2 = b1  % 10;
			b3 = b3 + b2;
			b1 = b1 / 10;
			}
			while(b1 != 0);
		}
		niz[i + 1] = b3;
		b3 = 0;
	}
}
int izbaci(int *niz, int velicina)
{
	int i;
	int k;
	int x = 1;
	int y = 1;
	int z;
	int u;
	for(i = 0; i < velicina; i++){
		x = 1;
		y = 1;
		for(k = 1; k < 10000; k++){
			if (k == 1)
			z = 1;
			else {
				z = x + y;
				x = y;
				y = z;
			}
			if(niz[i] == z){
				for(u = i; u < velicina - 1; u++){
					niz[u] = niz[u+1];
				
				}
				velicina -- ; 
				i --; 
				break;
			}
		}
	}
	return velicina;
}
int main(){
	int niz[2 * VELICINA];
	int i;
	int u;
	printf(""Unesite niz od 10 brojeva: "");
	for(i = 0; i < VELICINA; i++){
		scanf(""%d"", &niz[i]);
	}
	ubaci(niz, VELICINA);
	u = izbaci(niz, velicina_2);
	printf(""Modificirani niz glasi: "");
	for(i = 0; i < u; i++){
		if (i == u - 1){
			printf(""%d."", niz[i]);
		}else {
			printf(""%d, "", niz[i]);
		}
	}
	return 0;
}","#include <stdio.h>
#include<stdlib.h>
#include <math.h>
#define broje_elemenata 10
void ubaci(int *niz, int duzina_niza)
{
	int i,broj,broj2=0,cifra;
	for(i=duzina_niza-1;i>=0;i--)
	{
		niz[2*i]=niz[i];
	}
	for(i=0;i<2*duzina_niza;i+=2)
	{
		broj=abs(niz[i]);
		if(broj<10)
		{
			broj2=broj;
		}
		else
		{
			do
			{
				cifra=broj%10;
				broj2=broj2+cifra;
				broj=broj/10;
			}while(broj!=0);
		}
		niz[i+1]=broj2;
		broj2=0;
	}
}
/*funkcija treba vratiti broj elmenata*/
int izbaci(int *niz,int duzina_niza)
{
	/*fibonacijevi brojevi*/
	int prvi,drugi,treci;
	int i,j,k;
	for(k=0;k<duzina_niza;k++)
	{
		prvi=0;
		drugi=1;
		for(i=1;i<10000;i++)
		{
			
			if(i==1)
			{
				treci=1;
			}
			else
			{
				treci=prvi+drugi;
				prvi=drugi;
				drugi=treci;
			}
			if(niz[k]==treci)
			{
				for(j=k;j<duzina_niza-1;j++)
				{
					niz[j]=niz[j+1];
				}
				duzina_niza--;
				k--;
				break;
			}
		}
	}	
	return duzina_niza;
}

int main() {
	int niz[2*broje_elemenata],i;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	{
		scanf(""%d"",&niz[i]);
	}
	ubaci(niz,broje_elemenata);
	int funkcija;
	funkcija=izbaci(niz,2*broje_elemenata);
	printf(""Modificirani niz glasi: "");
	for(i=0;i<funkcija;i++)
	{
		if(i==funkcija-1)
		{
			printf(""%d."",niz[i]);
		}
		else
		{
			printf(""%d, "",niz[i]);
		}
	}
	return 0;
}
"
3083,91,91,0,11,A2016/Z1/Z2/student1180,A2016/Z1/Z2/student2371,"#include <stdio.h>
#include <math.h>
#define epsilon 0.00000001

int main() {
	double a1,b1,a2,b2,x,t;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%lf,%lf,%lf,%lf"", &a1,&b1,&a2,&b2);
	x=((b2-b1)/(a1-a2));
	t=(a1*x)+b1;
	if ((fabs(a1-a2)<epsilon) && (fabs(b1-b2)<epsilon))
		printf(""Poklapaju se"");
	else if(fabs(a1-a2)<epsilon)
		printf(""Paralelne su"");
	else{
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x,t);
	}
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define E 0.000000000000000001
int main() {
	float a1,b1,a2,b2, x, y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf (""%f,%f,%f,%f"", &a1, &b1, &a2, &b2);
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	if((fabs(a1-a2) < E) && (fabs(b1-b2) < E)) printf(""Poklapaju se"");
	else if (fabs(a1-a2) < E) printf(""Paralelne su"");
	
	else printf (""Prave se sijeku u tacci (%.1f,%.1f)"", x, y);
	
	return 0;
}
"
3092,93,93,0,21,A2016/Z1/Z4/student3978,A2016/Z1/Z4/student4814,"#include <stdio.h>
int main() {
	int i,j,n;
	printf (""Unesite broj n: "");
	scanf (""%d"", &n);
	while (n<=0 || n>50) {printf (""Pogresan unos \n"");
	printf (""Unesite broj n: "");
	scanf (""%d"", &n);}
	if (n==1) printf (""**"");
	for (i=0; i<n; i++) {
		for (j=0; j<(4*n-3); j++) {
			if (j==i || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i)
				printf(""*"");
			else
				printf("" "");
		}
		printf(""\n"");
	}
	
	
	return 0;}","#include <stdio.h>

int main() {
	int i,j,n;
printf(""Unesite broj n: ""); 
	scanf(""%d"",&n);
while (n<=0 || n>50) 
{printf(""Pogresan unos\n"");
printf(""Unesite broj n: ""); 
scanf(""%d"", &n);}
   if(n==1) printf(""***"");
    else{ 
    	for(i=0; i<n; i++){
    		for(j=0; j<=4*n-2; j++)
    		   { 
    		     if(i==j || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i ) printf(""*"");
    		     
    		     else printf("" "");
    		        
    		   }
    		printf(""\n"");
    	} 
    }
	return 0;
}
"
3106,98,98,0,70,A2016/Z3/Z1/student8794,A2016/Z3/Z1/student4415,"#include <stdio.h>

// Funkcija koja provjerava da li je broj prost

int prost(int a)
{

    int x = 1, i;

    if (a == 1)
        return 0;

    for (i = 2; i < a; i++) {
        if (a % i == 0) {
            x = 0;
            break;
        }
    }

    if (x)
        return 1;
    else
        return 0;
}

// Funkcija daj_prost koja nam svaki put vraca sljedeci prost broj

int daj_prost()
{
    // static int
    static int prost_broj = 2;

    // Petlja iz koje vracamo prost broj
    while (1) {
        if (prost(prost_broj))
            break;
        else
            prost_broj++;
    }
    // vracamo prost broj, a zatim ga povecavamo kako bi vratili sljedeci prost broj naredni put kada funkcija daj_prost bude pozvana
    return prost_broj++;
}

int main()
{

    int A, B, prost, suma = 0;

    // Unos brojeva A i B i provjera da li su u opsegu
    do {
        printf(""\nUnesite brojeve A i B: "");
        scanf(""%d %d"", & A, & B);

        if (A < 1)
            printf(""A nije prirodan broj."");
        else if (A >= B)
            printf(""A nije manje od B."");
        else if (B < 1)
            printf(""B nije prirodan broj."");
    } while (A >= B || A < 1 || B < 1);

    // Racunanje sume izmedju A i B
    while (1) {
        prost = daj_prost();

        if (prost > A && prost < B)
            suma = suma + prost;

        if (prost >= B)
            break;
    }
    printf(""Suma prostih brojeva izmedju %d i %d je %d."", A, B, suma);

    return 0;
}
","#include <stdio.h>

// Funkcija koja provjerava da li je broj prost

int prost(int a)
{

    int x = 1, i;

    if (a == 1)
        return 0;

    for (i = 2; i < a; i++) {
        if (a % i == 0) {
            x = 0;
            break;
        }
    }

    if (x)
        return 1;
    else
        return 0;
}

// Funkcija daj_prost koja nam svaki put vraca sljedeci prost broj

int daj_prost()
{
    // static int
    static int prost_broj = 2;

    // Petlja iz koje vracamo prost broj
    while (1) {
        if (prost(prost_broj))
            break;
        else
            prost_broj++;
    }
    // vracamo prost broj, a zatim ga povecavamo kako bi vratili sljedeci prost broj naredni put kada funkcija daj_prost bude pozvana
    return prost_broj++;
}

int main()
{

    int A, B, prost, suma = 0;

    // Unos brojeva A i B i provjera da li su u opsegu
    do {
        printf(""\nUnesite brojeve A i B: "");
        scanf(""%d %d"", & A, & B);

        if (A < 1)
            printf(""A nije prirodan broj."");
        else if (A >= B)
            printf(""A nije manje od B."");
        else if (B < 1)
            printf(""B nije prirodan broj."");
    } while (A >= B || A < 1 || B < 1);

    // Racunanje sume izmedju A i B
    while (1) {
        prost = daj_prost();

        if (prost > A && prost < B)
            suma = suma + prost;

        if (prost >= B)
            break;
    }
    printf(""Suma prostih brojeva izmedju %d i %d je %d."", A, B, suma);

    return 0;
}
"
3109,45,45,0,10,A2016/Z2/Z1/student7258,A2016/Z2/Z1/student6594,"#include <stdio.h>
#include <stdlib.h>
int main() {
	int a,c1,c2,k,b=0;
	printf(""Unesite broj: "");
	scanf(""%d"",&a);
	if (a<0) a=abs(a);
	k=1;
	while (a>=10) {
		c1=a%10;
		c2=(a/10)%10;
		b+=abs(c1-c2)*k;
		k*=10;
		a/=10;
	}
	printf(""%d"",b);
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
int main() {
	
	int n,k=1,c1,c2,raz=0;
	printf(""Unesite broj: "");
	scanf(""%d"",&n);
	
    if(n<0)
    n=abs(n);
     
   while(n>=10){
    
   c1=n%10;
   c2=(n/10)%10;
   raz+=abs(c1-c2)*k;
    k*=10;
    n/=10;
   }
  
   printf(""%d"",raz);
	    
	    
	
   
    return 0;
 }
"
3113,97,97,0,48,A2016/Z1/Z4/student7735,A2016/Z1/Z4/student7496,"#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50){
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1){
		printf(""***"");
		return 0;
	}
	for(i=1;i<n;i++){
		for(j=1;j<i;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*"");
		if(i<2){
				for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
		if(i>=2){
		for(j=1;j<=2*i-3;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	}
		if(i==n){
			for(j=1;j<n;j++){
				printf("" "");
			}
			printf(""*"");
		for(j=1;j<=2*n-3;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50) {
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1) {
		printf(""***"");
		return 0;
	}
    for(i=1;i<n;i++) {
    	for(j=1;j<i;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	for(j=1;j<=((n-i)*2)-1;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	if(i<2) {
    		for(j=1;j<=((n-i)*2)-1;j++) {
    			printf("" "");
    		}	
    		printf(""*\n"");
    	}	
    	if(i>=2) {
    		for(j=1;j<=2*i-3;j++) {
    		printf("" "");
    		}
    		printf(""*"");
    		for(j=1;j<=((n-i)*2)-1;j++) {
    		printf("" "");
    	}
    	printf(""*\n"");
        }
    }
    if(i==n) {
    	for(j=1;j<n;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	for(j=1;j<=2*n-3;j++) {
    		printf("" "");
    	}
    	printf(""*\n"");
        }
	return 0;
}
"
3124,98,98,0,33,A2016/Z2/Z3/student6042,A2016/Z2/Z3/student7080,"#include <stdio.h>


int main () {
	char mat[20][20];
	int i,j,n,x,y;
	for (i=0;i<20;i++) { 
		for (j=0;j<20;j++) {
			mat[i][j] = ' ';
		}
	}
	greska_1:printf (""Unesite broj tacaka: "");
	scanf (""%d"",&n);
	if (n<=0 || n>10) { 
		printf (""Pogresan unos\n""); 
		goto greska_1; 
		}
	for (i=1;i<=n;i++) {
		greska_2:printf (""Unesite %d. tacku: "",i);
		scanf (""%d %d"",&x,&y);
		if (x<0 || x>=20 || y<0 || y>=20) {
			printf (""Pogresan unos\n""); 
		 goto greska_2;
		}
		mat[y][x]='*'; 
		}
	
	for (i=0;i<20;i++) {
		for (j=0;j<20;j++) {
			printf (""%c"",mat[i][j]);
		}
		printf (""\n"");
	}
	
	
	return 0;
}
	
	
	
	
	

	
	
			
			
			
			
		
","#include <stdio.h>


int main () {
	char mat[20][20];
	int i,j,n,x,y;
	for (i=0;i<20;i++) { 
		for (j=0;j<20;j++) {
			mat[i][j] = ' ';
		}
	}
	greska_1:printf (""Unesite broj tacaka: "");
	scanf (""%d"",&n);
	if (n<=0 || n>10) { 
		printf (""Pogresan unos\n""); 
		goto greska_1; 
		}
	for (i=1;i<=n;i++) {
		greska_2:printf (""Unesite %d. tacku: "",i);
		scanf (""%d %d"",&x,&y);
		if (x<0 || x>=20 || y<0 || y>=20) {
			printf (""Pogresan unos\n""); 
		 goto greska_2;
		}
		mat[y][x]='*'; 
		}
	
	for (i=0;i<20;i++) {
		for (j=0;j<20;j++) {
			printf (""%c"",mat[i][j]);
		}
		printf (""\n"");
	}
	
	
	return 0;
}
	
	
	
	
	

	
	
			
			
			
			
		
"
3127,99,99,0,123,A2016/Z4/Z1/student1192,A2016/Z4/Z1/student8357,"#include <stdio.h>
#include <stdio.h>

    /*Funkcija za unos stringa*/
    
void unesi(char niz[], int velicina){
	char znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\0'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}

    /*Funkcija trazi iste rijeci u stringu*/
    
int uporedi(char *rijec1, char *rijec2,int velicina1,int velicina2){
	int i;
	char *pokazivac1,*pokazivac2;
	pokazivac1=rijec1;
	pokazivac2=rijec2;
	if(velicina1!=velicina2)
		return 0;
	else{
		for(i=0;i<velicina1-1;i++){
			if(*(pokazivac1+i)>='A'&&*(pokazivac1+i)<='Z'){
				if(*(pokazivac1+i)+32!=*(pokazivac2+i))
					return 0;
				continue;
			}
			
			if(*(pokazivac2+i)>='A'&&*(pokazivac2+i)<='Z'){
				if(*(pokazivac1+i)!=*(pokazivac2+i)+32)
					return 0;
				continue;
			}
			
			if(*(pokazivac2+i)>='A'&&*(pokazivac2+i)<='Z'&&*(pokazivac1+i)>='A'&&*(pokazivac1+i)<='Z'){
				if(*(pokazivac1+i)+32!=*(pokazivac2+i)+32)
					return 0;
				continue;
			}
			
			if(*(pokazivac1+i)!=*(pokazivac2+i))
					return 0;
		}
	}
	return 1;
}

    /*Funkcija izbacuje najcescu rijec koju pronadje*/
char* izbaci_najcescu(char *string){
	char *reset, *pok[100];
	int i=0, j=0,max=0,brojac_slova[100]={0}, brojac_rijeci=1, brojac_najcesce[100]={0};
	reset=string;
	pok[j]=string;
	if(*string=='\0')
		return 0;
		
    /*Stavljamo pokazivac na svaku rijec i brojimo slova svake rijeci*/		
	while(*string!='\0'){
		if((*string>31&&*string<'A')||(*string>'Z'&&*string<'a')||(*string>'z'&&*string<127)){
			brojac_rijeci++;
			do{
				string++;
			}while((*string>31&&*string<'A')||(*string>'Z'&&*string<'a')||(*string>'z'&&*string<127));
			j++;
			i++;
			pok[j]=string;
			continue;
		}
		brojac_slova[i]++;
		string++;
	}
	
	/*Brojimo rijeci koje se ponavljaju*/
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(uporedi(pok[i], pok[j],brojac_slova[i], brojac_slova[j]))
				brojac_najcesce[i]++;
		}
	}
	
	/*Trazimo koja je rijec najvise puta ponovljena*/
	for(i=0;i<brojac_rijeci;i++){
		if(brojac_najcesce[i]>brojac_najcesce[max]) 	//fali uslov kada se neka rijec ponavlja isti broj puta
			max=i;
	}
	
	/*Izbacujemo sva ponavljanja najcesce rijeci u stringu*/
	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(uporedi(pok[max], pok[i], brojac_slova[max], brojac_slova[i])){
			string=pok[i];
			if(i==brojac_rijeci-1){
				*string='\0';
				break;
			}
			while(*string!='\0'){
				*string=*(string+brojac_slova[i]);	
				if(*string=='\0') break;
				string++;
			}
			do{
				pok[i]++;
			}while((*string>31&&*string<'A')||(*string>'Z'&&*string<'a')||(*string>'z'&&*string<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pok[j]-=brojac_slova[i];
				
			}
		}
	}
	
	/*Izbacujemo jos samo prvo pojavljivanje najcesce rijeci*/
	string=pok[max];
	while(*string!='\0'){
		*string=*(string+brojac_slova[max]);	
		if(*string=='\0') break;
		string++;
	}
	
	return reset;
}
int main() {
	char string[]=""You ____will---never,never,!!.never walk alone,....alone"";
	printf(""%s"",izbaci_najcescu(string));
	return 0;
}
","#include <stdio.h>
#include <stdio.h>

    /*Funkcija za unos stringa*/
    
void unesi(char niz[], int velicina){
	char znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\0'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}

    /*Funkcija trazi iste rijeci u stringu*/
    
int uporedi(char *rijec1, char *rijec2,int velicina1,int velicina2){
	int i;
	char *pokazivac1,*pokazivac2;
	pokazivac1=rijec1;
	pokazivac2=rijec2;
	if(velicina1!=velicina2)
		return 0;
	else{
		for(i=0;i<velicina1-1;i++){
			if(*(pokazivac1+i)>='A'&&*(pokazivac1+i)<='Z'){
				if(*(pokazivac1+i)+32!=*(pokazivac2+i))
					return 0;
				continue;
			}
			
			if(*(pokazivac2+i)>='A'&&*(pokazivac2+i)<='Z'){
				if(*(pokazivac1+i)!=*(pokazivac2+i)+32)
					return 0;
				continue;
			}
			
			if(*(pokazivac2+i)>='A'&&*(pokazivac2+i)<='Z'&&*(pokazivac1+i)>='A'&&*(pokazivac1+i)<='Z'){
				if(*(pokazivac1+i)+32!=*(pokazivac2+i)+32)
					return 0;
				continue;
			}
			
			if(*(pokazivac1+i)!=*(pokazivac2+i))
					return 0;
		}
	}
	return 1;
}

    /*Funkcija izbacuje najcescu rijec koju pronadje*/
char* izbaci_najcescu(char *string){
	char *reset, *pok[100];
	int i=0, j=0,max=0,brojac_slova[100]={0}, brojac_rijeci=1, brojac_najcesce[100]={0};
	reset=string;
	pok[j]=string;
	if(*string=='\0')
		return 0;
		
    /*Stavljamo pokazivac na svaku rijec i brojimo slova svake rijeci*/		
	while(*string!='\0'){
		if((*string>31&&*string<'A')||(*string>'Z'&&*string<'a')||(*string>'z'&&*string<127)){
			brojac_rijeci++;
			do{
				string++;
			}while((*string>31&&*string<'A')||(*string>'Z'&&*string<'a')||(*string>'z'&&*string<127));
			j++;
			i++;
			pok[j]=string;
			continue;
		}
		brojac_slova[i]++;
		string++;
	}
	
	/*Brojimo rijeci koje se ponavljaju*/
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(uporedi(pok[i], pok[j],brojac_slova[i], brojac_slova[j]))
				brojac_najcesce[i]++;
		}
	}
	
	/*Trazimo koja je rijec najvise puta ponovljena*/
	for(i=0;i<brojac_rijeci;i++){
		if(brojac_najcesce[i]>brojac_najcesce[max]) 	//fali uslov kada se neka rijec ponavlja isti broj puta
			max=i;
	}
	
	/*Izbacujemo sva ponavljanja najcesce rijeci u stringu*/
	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(uporedi(pok[max], pok[i], brojac_slova[max], brojac_slova[i])){
			string=pok[i];
			if(i==brojac_rijeci-1){
				*string='\0';
				break;
			}
			while(*string!='\0'){
				*string=*(string+brojac_slova[i]);	
				if(*string=='\0') break;
				string++;
			}
			do{
				pok[i]++;
			}while((*string>31&&*string<'A')||(*string>'Z'&&*string<'a')||(*string>'z'&&*string<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pok[j]-=brojac_slova[i];
				
			}
		}
	}
	
	/*Izbacujemo jos samo prvo pojavljivanje najcesce rijeci*/
	string=pok[max];
	while(*string!='\0'){
		*string=*(string+brojac_slova[max]);	
		if(*string=='\0') break;
		string++;
	}
	
	return reset;
}
int main() {
	char string[]=""You ____will---never,never,!!.never walk alone,....alone"";
	printf(""%s"",izbaci_najcescu(string));
	return 0;
}
"
3131,95,95,0,52,A2016/Z3/Z2/student4108,A2016/Z3/Z2/student2086,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define br_el 10
#define br_el2 20


int ubaci (int *niz, int velicina){
	int cifra,i,br, br2=0;
	for(i=velicina-1; i>=0;i--){
		*(niz+2*i)=*(niz+i);
	}
	for(i=0;i<velicina*2;i++){
		if(i%2==1){
			br=*(niz+i-1);
			while(br!=0){
				cifra=br%10;
				br2+=cifra;
				br/=10;	
			}
			br2=abs(br2);
			*(niz+i)=br2;
			br2=0;
		}
	}
		
	}
	
	

/*
int izbaci(){
	
}
*/
int main() {

	int niz[10],i,n;
	
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++){
	scanf(""%d"",&niz[i]);
	}
	
/*	n=ubaci(niz, br_el);
	
	n=izbaci (niz, br_el2);

	
*/
	printf(""Modificirani niz glasi: "");
	for(i=0;i<n;i++){
		if(i<(n-1)){
			printf(""%d"",niz[i]);
		}
		else {
			printf(""%d"",niz[i]);
		}
	}
	
	
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define bre1 10
#define bre12 20
void ubaci (int *niz, int size) {
	int n, dig, num1, num2=0;
	for (n=size-1; n>=0; n--) {
		*(niz+2*n)=*(niz+n);
	}
	for (n=0; n<size*2; n++) {
		if (n%2==1) {
			num1=*(niz+n-1);
			while (num1!=0) {
				dig=num1%10;
				num2+=dig;
				num1/=10;
			}
			num2=abs(num2);
			*(niz+n)=num2;
			num2=0;
		}
	}
}

int izbaci (int*niz, int size) {
	int n, m, p, first=0, second=1, next;
	for (n=0; n<size; n++) {
		first=0;
		second=1;
		for (m=1; m<10000; m++) {
			if (m==1) {
				next=m;
			} else {
				next=first+second;
				first=second;
				second=next;
			}
			if (*(niz+n)==next) {
				for (p=n; p<size-1; p++) {
					*(niz+p)=*(niz+p+1);
				}
				size--;
				n--;
				break;
			}
		}
	}
	return size;
}

int main () {
	int niz[20], n, x;
	
	/*UNOS */
	printf (""Unesite niz od 10 brojeva: "");
	for (n=0; n<10; n++) {
		scanf (""%d"", &niz[n]);
	}
	
	/*POZIVANJE FUNKCIJE ""UBACI""*/
	ubaci (niz, bre1);
	
	/*POZIVANJE FUNKCIJE ""IZBACI""*/
	x=izbaci (niz, bre12);
	
	printf (""Modificirani niz glasi: "");
	for (n=0; n<x; n++) {
		if (n<(x-1)) {
			printf (""%d, "", niz[n]);
		} else {
			printf (""%d. "", niz[n]);
		}
	}
	return 0;
}"
3140,99,99,0,199,A2016/Z4/Z4/student7823,A2016/Z4/Z4/student7457,"#include <stdio.h>
#include <math.h>
#define epsilon 0.0001

struct tocka{
	double x, y;
};
char* obuhvat(char* string, double x1, double y1, double x2, double y2);
void printajString(char *znak){
	while(*znak!='\0'){
		printf(""%c"", *znak);
		znak++;
	}
	printf(""\n"");
}
double stringTodouble(char* string);
void unesi(char niz[], int velicina);
int duzinaBroja(char* string);
void ukloniTocku(char* string);
int daLiPripadaKvadratu(struct tocka daLiPripada, struct tocka ivica1, struct tocka ivica2);
int provjeriNiz(char* string);
int daLiPripadaOsi(double tocka, double var1, double var2);
int provjeriTocku(char* string);
int main() {
	//printf(""Zadaća 4, Zadatak 4"");
	char rijec1[100];
//	char rijec2[100];
//	rijec2[0]='\0';
	// struct tocka trenutna, ivica1, ivica2;
	// trenutna.x=2;
	// trenutna.y=5;
	// ivica1.x=7;
	// ivica1.y=3;
	// ivica2.x=3;
	// ivica2.y=1;
	while(1){
		printf(""Rijec 1:"");
		unesi(rijec1, 100);
		
//		printf(""%d"",'^ ');
//		printf(""Rijec 2:"");
//		unesi(rijec2, 100);
//		ukloniRijec(rijec1);
//		ukloniTocku(rijec1);
//		ukloniTocku(rijec1);
//		printf(""\nRijeci su: %s\n"", rijec1);
		printf(""\nRijeci su: %s\n"", obuhvat(rijec1,1,6,2,5));
//		izbaci_najcescu(rijec1);
//		printf(""\n"");
	}
	return 0;
}


char* obuhvat(char* string, double x1, double y1, double x2, double y2){
	char* pocetak= string;
	char* pomocniPocetak; //:D
	struct tocka trenutna, ivica1, ivica2;
	ivica1.x=x1;
	ivica1.y=y1;
	ivica2.x=x2;
	ivica2.y=y2;
	if(provjeriNiz(string)==0){
		while(*string++);
		return string;
	}
	while(*string){
		pomocniPocetak= string;
		string++;
		trenutna.x=stringTodouble(string);
		while(*string++!=',');
		trenutna.y=stringTodouble(string);
		if(daLiPripadaKvadratu(trenutna, ivica1, ivica2)==0){
			string=pomocniPocetak;
			ukloniTocku(string);
		}
		while(*string!='(' && *string!='\0')
			string++;
		if(*string=='(')
			string++;
	}
	
}
int provjeriNiz(char* string){
	while(*string){
		if(provjeriTocku(string)==0)
			return 0;
		while(*string++!=')');
		if(*string!=',' && *string!='\0')
			return 0;
		if(*string==','){
			string++;
			if(*string=='\0')
				return 0;
		}
	}
	return 1;
}
int provjeriTocku(char* string){
	if(*string++!='(')
		return 0;
	if(!(*string>='0' && *string<='9'))
		return 0;
	while(*string>='0' && *string<='9')
		string++;
	if(*string!='.' && *string!=',')
		return 0;
	
	if(*string=='.'){
		string++;
		if(*string!=','){
			if(!(*string>='0' && *string<='9'))
				return 0;
			while(*string>='0' && *string<='9')
				string++;
			if(*string!=',')
				return 0;
		}
	}
	//ovdje je zarez;
	string++;
	if(!(*string>='0' && *string<='9'))
		return 0;
	while(*string>='0' && *string<='9')
		string++;
	if(*string!='.' && *string!=')')
		return 0;
	if(*string=='.'){
		string++;
		if(*string!=')'){
			if(!(*string>='0' && *string<='9'))
				return 0;
			while(*string>='0' && *string<='9')
				string++;
			if(*string!=')')
				return 0;
		}
	}
	return 1;
}

void ukloniTocku(char* string){
	int duzina=1;
	char* pocetak= string;
	if(*string=='('){
		while(*string!='\0' && !(*string==',' && *(string-1)==')')){
			duzina++;
			string++;
		}
		string= pocetak;
		while(*(string+duzina)!='\0'){
			*string=*(string+duzina);
			string++;
		}
		*string= *(string+duzina);
	}
}

double stringTodouble(char* string){
	double broj=0, dec=1;
	int duzina= duzinaBroja(string);
	for(; duzina>0; duzina--)
		dec*=10;
	while((*string!='\0' && *string>='0' && *string<='9' && dec>0.000001) || *string=='.'){
		if(*string=='.'){
			string++;
			continue;
		}
		broj+= (9-('9' - *string))*dec;
		dec/=10;
		string++;
	}
	return broj;
}
int duzinaBroja(char* string){
	int broj=-1;
	while(*string!='\0' && *string>='0' && *string<='9'){
		broj++;
		string++;
	}
	return broj;
}
void unesi(char niz[], int velicina){
    char znak = getchar();
    if (znak == '\n') znak=getchar();
    int i = 0;
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i]='\0';
}
int daLiPripadaKvadratu(struct tocka daLiPripada, struct tocka ivica1, struct tocka ivica2){
	if(daLiPripadaOsi(daLiPripada.x, ivica1.x, ivica2.x) && daLiPripadaOsi(daLiPripada.y, ivica1.y, ivica2.y))
		return 1;
	return 0;
}
int daLiPripadaOsi(double tocka, double var1, double var2){
	if(fabs(tocka-var1)<epsilon || fabs(tocka-var2)<epsilon)
		return 1;
	if((var2<tocka && tocka<var1) || (var1<tocka && tocka<var2))
		return 1;
	return 0;
}

","#include <stdio.h>
#include <math.h>
#define epsilon 0.0001

struct tocka{
	double x, y;
};
char* obuhvat(char* string, double x1, double y1, double x2, double y2);
void printajString(char *znak){
	while(*znak!='\0'){
		printf(""%c"", *znak);
		znak++;
	}
	printf(""\n"");
}
double stringTodouble(char* string);
void unesi(char niz[], int velicina);
int duzinaBroja(char* string);
void ukloniTocku(char* string);
int daLiPripadaKvadratu(struct tocka daLiPripada, struct tocka ivica1, struct tocka ivica2);
int provjeriNiz(char* string);
int daLiPripadaOsi(double tocka, double var1, double var2);
int provjeriTocku(char* string);
int main() {
	//printf(""Zadaća 4, Zadatak 4"");
	char rijec1[100];
//	char rijec2[100];
//	rijec2[0]='\0';
	// struct tocka trenutna, ivica1, ivica2;
	// trenutna.x=2;
	// trenutna.y=5;
	// ivica1.x=7;
	// ivica1.y=3;
	// ivica2.x=3;
	// ivica2.y=1;
	while(1){
		printf(""Rijec 1:"");
		unesi(rijec1, 100);
		
//		printf(""%d"",'^ ');
//		printf(""Rijec 2:"");
//		unesi(rijec2, 100);
//		ukloniRijec(rijec1);
//		ukloniTocku(rijec1);
//		ukloniTocku(rijec1);
//		printf(""\nRijeci su: %s\n"", rijec1);
		printf(""\nRijeci su: %s\n"", obuhvat(rijec1,1,6,2,5));
//		izbaci_najcescu(rijec1);
//		printf(""\n"");
	}
	return 0;
}


char* obuhvat(char* string, double x1, double y1, double x2, double y2){
	char* pocetak= string;
	char* pomocniPocetak; //:D
	struct tocka trenutna, ivica1, ivica2;
	ivica1.x=x1;
	ivica1.y=y1;
	ivica2.x=x2;
	ivica2.y=y2;
	if(provjeriNiz(string)==0){
		while(*string++);
		return string;
	}
	while(*string){
		pomocniPocetak= string;
		string++;
		trenutna.x=stringTodouble(string);
		while(*string++!=',');
		trenutna.y=stringTodouble(string);
		if(daLiPripadaKvadratu(trenutna, ivica1, ivica2)==0){
			string=pomocniPocetak;
			ukloniTocku(string);
		}
		while(*string!='(' && *string!='\0')
			string++;
		if(*string=='(')
			string++;
	}
	
}
int provjeriNiz(char* string){
	while(*string){
		if(provjeriTocku(string)==0)
			return 0;
		while(*string++!=')');
		if(*string!=',' && *string!='\0')
			return 0;
		if(*string==','){
			string++;
			if(*string=='\0')
				return 0;
		}
	}
	return 1;
}
int provjeriTocku(char* string){
	if(*string++!='(')
		return 0;
	if(!(*string>='0' && *string<='9'))
		return 0;
	while(*string>='0' && *string<='9')
		string++;
	if(*string!='.' && *string!=',')
		return 0;
	
	if(*string=='.'){
		string++;
		if(*string!=','){
			if(!(*string>='0' && *string<='9'))
				return 0;
			while(*string>='0' && *string<='9')
				string++;
			if(*string!=',')
				return 0;
		}
	}
	//ovdje je zarez;
	string++;
	if(!(*string>='0' && *string<='9'))
		return 0;
	while(*string>='0' && *string<='9')
		string++;
	if(*string!='.' && *string!=')')
		return 0;
	if(*string=='.'){
		string++;
		if(*string!=')'){
			if(!(*string>='0' && *string<='9'))
				return 0;
			while(*string>='0' && *string<='9')
				string++;
			if(*string!=')')
				return 0;
		}
	}
	return 1;
}

void ukloniTocku(char* string){
	int duzina=1;
	char* pocetak= string;
	if(*string=='('){
		while(*string!='\0' && !(*string==',' && *(string-1)==')')){
			duzina++;
			string++;
		}
		string= pocetak;
		while(*(string+duzina)!='\0'){
			*string=*(string+duzina);
			string++;
		}
		*string= *(string+duzina);
	}
}

double stringTodouble(char* string){
	double broj=0, dec=1;
	int duzina= duzinaBroja(string);
	for(; duzina>0; duzina--)
		dec*=10;
	while((*string!='\0' && *string>='0' && *string<='9' && dec>0.000001) || *string=='.'){
		if(*string=='.'){
			string++;
			continue;
		}
		broj+= (9-('9' - *string))*dec;
		dec/=10;
		string++;
	}
	return broj;
}
int duzinaBroja(char* string){
	int broj=-1;
	while(*string!='\0' && *string>='0' && *string<='9'){
		broj++;
		string++;
	}
	return broj;
}
void unesi(char niz[], int velicina){
    char znak = getchar();
    if (znak == '\n') znak=getchar();
    int i = 0;
    while (i < velicina-1 && znak != '\n') {
        niz[i] = znak;
        i++;
        znak = getchar();
    }
    niz[i]='\0';
}
int daLiPripadaKvadratu(struct tocka daLiPripada, struct tocka ivica1, struct tocka ivica2){
	if(daLiPripadaOsi(daLiPripada.x, ivica1.x, ivica2.x) && daLiPripadaOsi(daLiPripada.y, ivica1.y, ivica2.y))
		return 1;
	return 0;
}
int daLiPripadaOsi(double tocka, double var1, double var2){
	if(fabs(tocka-var1)<epsilon || fabs(tocka-var2)<epsilon)
		return 1;
	if((var2<tocka && tocka<var1) || (var1<tocka && tocka<var2))
		return 1;
	return 0;
}

"
3145,98,98,0,119,A2016/Z4/Z2/student5581,A2016/Z4/Z2/student8317,"#include <stdio.h>

/*funkcija za unos stringa*/
void unesi(char niz[], int velicina){
	
	char znak=getchar();
	if (znak == '\n'){
		znak = getchar();
	}
	
	int i=0;
	
	while (i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	
	niz[i]='\0';
}

/*funkcija koja vraća broj ponavljanja određenog znaka u stringu*/
int prebroji (char* s, char znak){
	
	int broj=0;
	while (*s != '\0') {
		if (*s == znak) {
			broj++;
		}
		s++;
	}
	
	return broj;
}

char* kodiraj (char* tekst, char* kod){
	
	int i,j;
	char tmp;
	
	/*upisivanje karaktera u niz, sortirano po ASCII vrijednosti*/
	for (i=0; i<96; i++){
		*(kod+i)=32+i;
	}
	
	*(kod+i-1)='\0';
	
	/*sortiranje niza prema broju ponavljanja*/
	for (i=0; i<95; i++){
		for (j=i; j<95; j++){
			
			if (prebroji(tekst,*(kod+j)) > prebroji(tekst,*(kod+i))){
				tmp=*(kod+i);
				*(kod+i)=*(kod+j);
				*(kod+j)=tmp;
			}
			else if (prebroji(tekst,*(kod+j)) == prebroji(tekst,*(kod+i))){
				if (*(kod+j)<*(kod+i)){
					tmp=*(kod+i);
					*(kod+i)=*(kod+j);
					*(kod+j)=tmp;
				}
			}
		}
	}
	
	char* s=tekst;
	
	/*kodiranje teksta*/
	while (*s != '\0'){
		int pozicija=0;
		char* a=kod;
		while (*a != *s) {
			a++;
			pozicija++;
		}
		
		*s=126-pozicija;
		s++;
	}
	
	return tekst;
}


char* dekodiraj(char* tekst, char* kod) {
	
	char *a=tekst;
	char *b;
	
	/*dekodiranje teksta*/
	while(*a != '\0'){
		
		int pozicija=0;
		b=kod;
		while (*b!='\0'){
			if(*a == 126-pozicija){
				*a=*b;
				break;
			}
			b++;
			pozicija++;
		}
		a++;
	}
	
	
	return tekst;
}


int main() {
	
	char tekst[200];
	char kod[100];
	
	unesi(tekst, 200);
	printf(""%s\n"", tekst);
	kodiraj(tekst, kod);
	printf(""%s\n%s"", kod, tekst);
	dekodiraj(tekst, kod);
	printf(""\n%s"", tekst);
	

	return 0;
}
","#include <stdio.h>

/*funkcija za unos stringa*/
void unesi(char niz[], int velicina){
	
	char znak=getchar();
	if (znak == '\n'){
		znak = getchar();
	}
	
	int i=0;
	
	while (i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	
	niz[i]='\0';
}

/*funkcija koja vraća broj ponavljanja određenog znaka u stringu*/
int prebroji (char* s, char znak){
	
	int broj=0;
	while (*s != '\0') {
		if (*s == znak) {
			broj++;
		}
		s++;
	}
	
	return broj;
}

char* kodiraj (char* tekst, char* kod){
	
	int i,j;
	char tmp;
	
	/*upisivanje karaktera u niz, sortirano po ASCII vrijednosti*/
	for (i=0; i<96; i++){
		*(kod+i)=32+i;
	}
	
	*(kod+i-1)='\0';
	
	/*sortiranje niza prema broju ponavljanja*/
	for (i=0; i<95; i++){
		for (j=i; j<95; j++){
			
			if (prebroji(tekst,*(kod+j)) > prebroji(tekst,*(kod+i))){
				tmp=*(kod+i);
				*(kod+i)=*(kod+j);
				*(kod+j)=tmp;
			}
			else if (prebroji(tekst,*(kod+j)) == prebroji(tekst,*(kod+i))){
				if (*(kod+j)<*(kod+i)){
					tmp=*(kod+i);
					*(kod+i)=*(kod+j);
					*(kod+j)=tmp;
				}
			}
		}
	}
	
	char* s=tekst;
	
	/*kodiranje teksta*/
	while (*s != '\0'){
		int pozicija=0;
		char* a=kod;
		while (*a != *s) {
			a++;
			pozicija++;
		}
		
		*s=126-pozicija;
		s++;
	}
	
	return tekst;
}


char* dekodiraj(char* tekst, char* kod) {
	
	char *a=tekst;
	char *b;
	
	/*dekodiranje teksta*/
	while(*a != '\0'){
		
		int pozicija=0;
		b=kod;
		while (*b!='\0'){
			if(*a == 126-pozicija){
				*a=*b;
				break;
			}
			b++;
			pozicija++;
		}
		a++;
	}
	
	
	return tekst;
}


int main() {
	
	char tekst[200];
	char kod[100];
	
	unesi(tekst, 200);
	printf(""%s\n"", tekst);
	kodiraj(tekst, kod);
	printf(""%s\n%s"", kod, tekst);
	dekodiraj(tekst, kod);
	printf(""\n%s"", tekst);
	

	return 0;
}
"
3153,98,98,0,84,A2016/Z2/Z4/student3258,A2016/Z2/Z4/student5488,"#include <stdio.h>

int main() {
	/*printf(""Zadaća 2, Zadatak 4"");*/
	
	double matrica [100][100];
	int m,n,i,j,k;
	int cirkularna,teplicova;
	double red[200];
	double kolona [100];
	cirkularna=1; teplicova=1;
	int broj,brojac,index;
	brojac=0;broj=0;
	int a;
	double f;
	
	do{
	printf(""Unesite M i N: "");
	scanf(""%d %d"",&m,&n);
	if(m>100 || m<=0 || n>100 || n<=0) printf(""Pogresan unos!\n"");
	}while(m>100 || m<=0 || n>100 || n<=0);
	
	 printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++)
	for(j=0;j<n;j++)
		scanf(""%lf"",&matrica[i][j]);
	/*if( n==1 || m==1){ 	printf(""Matrica je cirkularna"");return 0;}	*/
		
		for(i=0;i<n;i++)
		red[i]=matrica[0][i];
		for(i=n;i<2*n;i++){
			red[i]=matrica[0][brojac];
			brojac++;
		}
		

	for( j=0;j<n;j++){
		
		/*trazenje indexa*/
	/*	for(i=2*n-1;i>=0;i--){
			if(matrica[0][j]==red[i]) {index=i; break;}
		}*/
	index=(n-1)+j+1;
		/*uzimanje n-1 brojeva ispred indeksa iz niza*/
		broj=0;
		for(k=index;k>index-m;k--){
			kolona[broj]=red[k];
			broj++;
		}
		for(a=0;a<m;a++){
			if(matrica[a][j]==kolona[a]){ cirkularna=1;}
			else{cirkularna=0;break;}
		}
	if(cirkularna==0) break;
	}
	
	k=0;
	/*	for(i=0;i<n;i++) printf(""%d"",kolona[i]);*/
	
	if(cirkularna==1){
		printf(""Matrica je cirkularna"");return 0;
	}
	
	/*ispitivanje teplicove matrice*/
	broj=0;
	for(i=0;i<n;i++){
	
		f=matrica[broj][i];

		while(++broj<m && ++i<n){
			if(f!=matrica[broj][i]){
				teplicova=0; printf(""Matrica nije ni cirkularna ni Teplicova""); return 0;
			}
			
		}
		
	}
	broj=0;
	for(i=1;i<m;i++){
		f=matrica[i][broj];
			while(++i<m && ++broj<n){
			if(f!=matrica[i][broj]){
				teplicova=0; printf(""Matrica nije ni cirkularna ni Teplicova""); return 0;
			}
		}}
	if(teplicova==1) printf(""Matrica je Teplicova"");
	return 0;
}
","#include <stdio.h>

int main() {
	/*printf(""Zadaća 2, Zadatak 4"");*/
	
	double matrica [100][100];
	int m,n,i,j,k;
	int cirkularna,teplicova;
	double red[200];
	double kolona [100];
	cirkularna=1; teplicova=1;
	int broj,brojac,index;
	brojac=0;broj=0;
	int a;
	double f;
	
	do{
	printf(""Unesite M i N: "");
	scanf(""%d %d"",&m,&n);
	if(m>100 || m<=0 || n>100 || n<=0) printf(""Pogresan unos!\n"");
	}while(m>100 || m<=0 || n>100 || n<=0);
	
	 printf(""Unesite elemente matrice: "");
	for(i=0;i<m;i++)
	for(j=0;j<n;j++)
		scanf(""%lf"",&matrica[i][j]);
	/*if( n==1 || m==1){ 	printf(""Matrica je cirkularna"");return 0;}	*/
		
		for(i=0;i<n;i++)
		red[i]=matrica[0][i];
		for(i=n;i<2*n;i++){
			red[i]=matrica[0][brojac];
			brojac++;
		}
		

	for( j=0;j<n;j++){
		
		/*trazenje indexa*/
	/*	for(i=2*n-1;i>=0;i--){
			if(matrica[0][j]==red[i]) {index=i; break;}
		}*/
	index=(n-1)+j+1;
		/*uzimanje n-1 brojeva ispred indeksa iz niza*/
		broj=0;
		for(k=index;k>index-m;k--){
			kolona[broj]=red[k];
			broj++;
		}
		for(a=0;a<m;a++){
			if(matrica[a][j]==kolona[a]){ cirkularna=1;}
			else{cirkularna=0;break;}
		}
	if(cirkularna==0) break;
	}
	
	k=0;
	/*	for(i=0;i<n;i++) printf(""%d"",kolona[i]);*/
	
	if(cirkularna==1){
		printf(""Matrica je cirkularna"");return 0;
	}
	
	/*ispitivanje teplicove matrice*/
	broj=0;
	for(i=0;i<n;i++){
	
		f=matrica[broj][i];

		while(++broj<m && ++i<n){
			if(f!=matrica[broj][i]){
				teplicova=0; printf(""Matrica nije ni cirkularna ni Teplicova""); return 0;
			}
			
		}
		
	}
	broj=0;
	for(i=1;i<m;i++){
		f=matrica[i][broj];
			while(++i<m && ++broj<n){
			if(f!=matrica[i][broj]){
				teplicova=0; printf(""Matrica nije ni cirkularna ni Teplicova""); return 0;
			}
		}}
	if(teplicova==1) printf(""Matrica je Teplicova"");
	return 0;
}
"
3156,95,95,0,18,A2016/Z1/Z2/student7085,A2016/Z1/Z2/student7258,"#include <stdio.h>
#include <math.h>
#define e 0.0001
int main() {
	float a1,b1,a2,b2,y,x;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);

	

	if(fabs(a1-a2)<e && fabs(b1-b2)<e){
		
		printf(""Poklapaju se"");
	}else
	if(fabs(a1-a2)<e && fabs(b1-b2)>e){
		printf(""Paralelne su"");
	}
	else {
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	}
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define E 0.0001
int main() {
	float a1,a2,b1,b2,x,y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);
	if(fabs (a1-a2)<E && fabs (b1-b2)>E) {
		printf(""Paralelne su""); 
	} else if (fabs (a1-a2)<E && fabs (b1-b2)<E) {
		printf(""Poklapaju se"");
	} else {
			x=(b2-b1)/(a1-a2);
			y=a1*x+b1;
			printf(""Prave se sijeku u tacci (%.1f,%.1f)"" , x, y);	
	}
	return 0;
}
"
3157,98,98,0,42,A2016/Z2/Z4/student1200,A2016/Z2/Z4/student9391,"#include <stdio.h>

int main()
{

	double Mat[100][100];
	int i,j;
	int m,n;
	int tep=1,cirk=1;
    
        printf(""Unesite M i N: "");
	    scanf(""%d %d"",&m,&n);
	
	while(m>100 || m<1 || n<1 || n>100)
	{   
		printf(""Pogresan unos!\n"");
		printf(""Unesite M i N: "");
	    scanf(""%d %d"",&m,&n);
	}
    
    printf(""Unesite elemente matrice: "");
	for(i=0; i<m; i++)
		for(j=0; j<n; j++)
			scanf(""%lf"",&Mat[i][j]);


	for(i=0; i<m-1; i++)
		for(j=0; j<n-1; j++)
			if(Mat[i][j]!=Mat[i+1][j+1]) tep=0;


	if(tep==1) {
		for(i=0; i<m-1; i++)
			if(Mat[i+1][0]!=Mat[i][n-1]) cirk=0;
	}




	if(tep==1) {
		if(cirk==1) printf(""Matrica je cirkularna"");
		else
			printf(""Matrica je Teplicova"");
	} else printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}
","#include <stdio.h>

int main()
{

	double Mat[100][100];
	int i,j;
	int m,n;
	int tep=1,cirk=1;
    
        printf(""Unesite M i N: "");
	    scanf(""%d %d"",&m,&n);
	
	while(m>100 || m<1 || n<1 || n>100)
	{   
		printf(""Pogresan unos!\n"");
		printf(""Unesite M i N: "");
	    scanf(""%d %d"",&m,&n);
	}
    
    printf(""Unesite elemente matrice: "");
	for(i=0; i<m; i++)
		for(j=0; j<n; j++)
			scanf(""%lf"",&Mat[i][j]);


	for(i=0; i<m-1; i++)
		for(j=0; j<n-1; j++)
			if(Mat[i][j]!=Mat[i+1][j+1]) tep=0;


	if(tep==1) {
		for(i=0; i<m-1; i++)
			if(Mat[i+1][0]!=Mat[i][n-1]) cirk=0;
	}




	if(tep==1) {
		if(cirk==1) printf(""Matrica je cirkularna"");
		else
			printf(""Matrica je Teplicova"");
	} else printf(""Matrica nije ni cirkularna ni Teplicova"");
	return 0;
}"
3163,99,99,0,76,A2016/Z3/Z3/student8846,A2016/Z3/Z3/student5636,"#include <stdio.h>

int main() {
	int m, n, mat[200][200], i, j, k,a,brojac=0;
	do {
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"", &m, &n);
		if(n<=0 || n>200 || m<=0 || m>200) {
			printf(""Brojevi nisu u trazenom opsegu.\n"");
		}
	}
	while (n<=0 || n>200 || m<=0 || m>200);
	printf(""Unesite elemente matrice: "");
	for(i=0; i<m; i++) {
		for(j=0; j<n; j++) {
			scanf(""%d"", &mat[i][j]);
		}
	}

	for(i=0;i<m;i++)
	{
		for(a=i+1;a<m;a++)
		{
			brojac=0;
			for(j=0;j<n;j++)
			{
				if(mat[i][j]==mat[a][j])
				brojac++;
			}
		if(brojac==n)
		{
			for(k=a;k<m-1;k++)
			{
				for(j=0;j<n;j++)
				{
					mat[k][j]=mat[k+1][j];
				}
			}
			m--;
			a--;
			brojac=0;
		}
		}
	}
	
	for(j=0;j<n;j++)
	{
		for(a=j+1;a<n;a++)
		{
			brojac=0;
			for(i=0;i<m;i++)
			{
				if(mat[i][j]==mat[i][a])
				brojac++;
			}
			if(brojac==m)
			{
				for(k=a;k<n-1;k++)
				{
					for(i=0;i<m;i++)
					{
						mat[i][k]=mat[i][k+1];
					}
				}
				n--;
				a--;
				brojac=0;
			}
		}
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for(i=0; i<m; i++) {
		for(j=0; j<n; j++) {
			printf(""%5d"", mat[i][j]);
		}
		printf(""\n"");
	}
	return 0;
}
","#include <stdio.h>

int main() {
	int m, n, mat[200][200], i, j, k,a,brojac=0;
	do {
		printf(""Unesite brojeve M i N: "");
		scanf(""%d %d"", &m, &n);
		if(n<=0 || n>200 || m<=0 || m>200) {
			printf(""Brojevi nisu u trazenom opsegu.\n"");
		}
	}
	while (n<=0 || n>200 || m<=0 || m>200);
	printf(""Unesite elemente matrice: "");
	for(i=0; i<m; i++) {
		for(j=0; j<n; j++) {
			scanf(""%d"", &mat[i][j]);
		}
	}

	for(i=0;i<m;i++)
	{
		for(a=i+1;a<m;a++)
		{
			brojac=0;
			for(j=0;j<n;j++)
			{
				if(mat[i][j]==mat[a][j])
				brojac++;
			}
		if(brojac==n)
		{
			for(k=a;k<m-1;k++)
			{
				for(j=0;j<n;j++)
				{
					mat[k][j]=mat[k+1][j];
				}
			}
			m--;
			a--;
			brojac=0;
		}
		}
	}
	
	for(j=0;j<n;j++)
	{
		for(a=j+1;a<n;a++)
		{
			brojac=0;
			for(i=0;i<m;i++)
			{
				if(mat[i][j]==mat[i][a])
				brojac++;
			}
			if(brojac==m)
			{
				for(k=a;k<n-1;k++)
				{
					for(i=0;i<m;i++)
					{
						mat[i][k]=mat[i][k+1];
					}
				}
				n--;
				a--;
				brojac=0;
			}
		}
	}
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for(i=0; i<m; i++) {
		for(j=0; j<n; j++) {
			printf(""%5d"", mat[i][j]);
		}
		printf(""\n"");
	}
	return 0;
}
"
3164,45,45,0,25,A2016/Z1/Z4/student8796,A2016/Z1/Z4/student3331,"#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50){
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1){
		printf(""***"");
		return 0;
	}
	for(i=1;i<=n-1;i++){
		for(j=1;j<=i-1;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<((n-i)*2);j++){
			printf("" "");
		}
		printf(""*"");
		if(i<2){
				for(j=1;j<((n-i)*2);j++){
			printf("" "");
		}
		printf(""*\n"");
		}
		if(i>=2){
		for(j=1;j<2*i-2;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<((n-i)*2);j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	}
		if(i==n){
			for(j=1;j<=n-1;j++){
				printf("" "");
			}
			printf(""*"");
		for(j=1;j<2*n-2;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50) {
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1) {
		printf(""***"");
		return 0;
	}
    for(i=1;i<n;i++) {
    	for(j=1;j<i;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	for(j=1;j<=((n-i)*2)-1;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	if(i<2) {
    		for(j=1;j<=((n-i)*2)-1;j++) {
    			printf("" "");
    		}	
    		printf(""*\n"");
    	}	
    	if(i>=2) {
    		for(j=1;j<=2*i-3;j++) {
    		printf("" "");
    		}
    		printf(""*"");
    		for(j=1;j<=((n-i)*2)-1;j++) {
    		printf("" "");
    	}
    	printf(""*\n"");
        }
    }
    if(i==n) {
    	for(j=1;j<n;j++) {
    		printf("" "");
    	}
    	printf(""*"");
    	for(j=1;j<=2*n-3;j++) {
    		printf("" "");
    	}
    	printf(""*\n"");
        }
	return 0;
}
"
3184,99,99,0,100,A2016/Z3/Z3/student3258,A2016/Z3/Z3/student5488,"#include <stdio.h>

/*void izbaci_redove(int matrica[][200],int M,incekct N){
/*	int i,j,a,broj,s,v,velicina1;
		 velicina1=M*N;
for(i=0;i<M;i++){
	j=i+1;
	while(j<M){
		broj=0;
		 for(a=0;a<N;a++)
		 	if(!(matrica[j][a]==matrica[i][a])) broj++;
		 
		
		 if(broj==0) { s=j;
		 while(s<M-1){
		 	for(v=0;v<N;v++) matrica[s][v]=matrica[s+1][v];
		 
		 	s++;
		 }
		 
		 
		 velicina1-=N;
		 j--;M--;
	}
		j++;
	}
}

return M;}*/

int DalisuJednaki(int p[], int q[],int velicina){
	int i;
	/*PROLAZIMO KROZ SVE*/
	i=0;
	while(i<velicina){
		if(!(q[i]==p[i])) return 0;
		i++;
	}
	return 1;
}


int main() {
	int M,N,i,j;
	int matrica [200][200];
	int velicina1;
	int a,broj,s,v;
	/*Unos dimenzija matrice*/
	do{
	printf(""Unesite brojeve M i N: "");
	scanf(""%d %d"",&M,&N);
	if(M>200||N>200||M<1||N<1) {
		printf(""Brojevi nisu u trazenom opsegu."");
		printf(""\n"");}
	}while(M>200||N>200||M<1||N<1);
	

	/*Unos elemenata matrice*/
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++)
		for(j=0;j<N;j++)
		  scanf(""%d"",&matrica[i][j]);

//	x=izbaci_redove(matrica,M,N);

	
 velicina1=M*N;/* sva polja */
 int niz_kolone[200];/*pomocni niz, za kolone*/

 /*Izbacujemo sve redove koji se ponavljaju*/

for(i=0;i<M;i++){
	j=i+1;
	while(j<M){
		broj=0;
		 for(a=0;a<N;a++)
		 	if(!(matrica[j][a]==matrica[i][a])) broj++;
		 
		
		 if(broj==0) { s=j;
		 while(s<M-1){
		 	for(v=0;v<N;v++) matrica[s][v]=matrica[s+1][v];
		  s++;
		 }
		 
		 
	 velicina1-=N;
	 j--;M--;
	}
		j++;
	}
}
/*	y=izbaci_kolone(matrica,M-x,N);*/
/*Nakon sto smo izbacili redove koji se ponavljaju sada izbacujemo kolone koje se ponavljaju*/

a=0;/*novi brojac*/
for(i=0;i<N;i++) /*setamo se po kolonama*/
for(j=0;j<M;j++){ 
	niz_kolone[a]=matrica[j][i];
	a++;}
	i=0;
	while(i<velicina1){
		j=i+M;
		while(j<velicina1){
			if(DalisuJednaki(niz_kolone+j,niz_kolone+i,M)){
				for(s=j;s<velicina1-M;s++)niz_kolone[s]=niz_kolone[s+M];
				N--;j=j-M;
				velicina1-=M;
			}
			j=j+M;
		}
		i=i+M;
	}
	
	s=0;
	for(i=0;i<N;i++)
	  for(j=0;j<M;j++){
	  	matrica[j][i]=niz_kolone[s];
	  	s++;
	  }

/*Ispisivanje matrice nakon izbacivanja*/
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for(i=0;i<M;i++){
	   for(j=0;j<N;j++)
	       printf(""%5d"",matrica[i][j]);
	   printf(""\n"");
	}
//	printf(""%d"",x);
	return 0;
}
","#include <stdio.h>

/*void izbaci_redove(int matrica[][200],int M,incekct N){
/*	int i,j,a,broj,s,v,velicina1;
		 velicina1=M*N;
for(i=0;i<M;i++){
	j=i+1;
	while(j<M){
		broj=0;
		 for(a=0;a<N;a++)
		 	if(!(matrica[j][a]==matrica[i][a])) broj++;
		 
		
		 if(broj==0) { s=j;
		 while(s<M-1){
		 	for(v=0;v<N;v++) matrica[s][v]=matrica[s+1][v];
		 
		 	s++;
		 }
		 
		 
		 velicina1-=N;
		 j--;M--;
	}
		j++;
	}
}

return M;}*/

int DalisuJednaki(int p[], int q[],int velicina){
	int i;
	/*PROLAZIMO KROZ SVE*/
	i=0;
	while(i<velicina){
		if(!(q[i]==p[i])) return 0;
		i++;
	}
	return 1;
}


int main() {
	int M,N,i,j;
	int matrica [200][200];
	int velicina1;
	int a,broj,s,v;
	/*Unos dimenzija matrice*/
	do{
	printf(""Unesite brojeve M i N: "");
	scanf(""%d %d"",&M,&N);
	if(M>200||N>200||M<1||N<1) {
		printf(""Brojevi nisu u trazenom opsegu."");
		printf(""\n"");}
	}while(M>200||N>200||M<1||N<1);
	

	/*Unos elemenata matrice*/
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++)
		for(j=0;j<N;j++)
		  scanf(""%d"",&matrica[i][j]);

//	x=izbaci_redove(matrica,M,N);

	
 velicina1=M*N;/* sva polja */
 int niz_kolone[200];/*pomocni niz, za kolone*/

 /*Izbacujemo sve redove koji se ponavljaju*/

for(i=0;i<M;i++){
	j=i+1;
	while(j<M){
		broj=0;
		 for(a=0;a<N;a++)
		 	if(!(matrica[j][a]==matrica[i][a])) broj++;
		 
		
		 if(broj==0) { s=j;
		 while(s<M-1){
		 	for(v=0;v<N;v++) matrica[s][v]=matrica[s+1][v];
		  s++;
		 }
		 
		 
	 velicina1-=N;
	 j--;M--;
	}
		j++;
	}
}
/*	y=izbaci_kolone(matrica,M-x,N);*/
/*Nakon sto smo izbacili redove koji se ponavljaju sada izbacujemo kolone koje se ponavljaju*/

a=0;/*novi brojac*/
for(i=0;i<N;i++) /*setamo se po kolonama*/
for(j=0;j<M;j++){ 
	niz_kolone[a]=matrica[j][i];
	a++;}
	i=0;
	while(i<velicina1){
		j=i+M;
		while(j<velicina1){
			if(DalisuJednaki(niz_kolone+j,niz_kolone+i,M)){
				for(s=j;s<velicina1-M;s++)niz_kolone[s]=niz_kolone[s+M];
				N--;j=j-M;
				velicina1-=M;
			}
			j=j+M;
		}
		i=i+M;
	}
	
	s=0;
	for(i=0;i<N;i++)
	  for(j=0;j<M;j++){
	  	matrica[j][i]=niz_kolone[s];
	  	s++;
	  }

/*Ispisivanje matrice nakon izbacivanja*/
	printf(""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for(i=0;i<M;i++){
	   for(j=0;j<N;j++)
	       printf(""%5d"",matrica[i][j]);
	   printf(""\n"");
	}
//	printf(""%d"",x);
	return 0;
}
"
3185,15,15,0,15,A2016/Z5/Z1/student4471,A2016/Z5/Z1/student5581,"#include <stdio.h>
#include <string.h>

int leksikon(char *p,char *q){
	
	while(*p != '\0'){
		
		if(*p > *q)return 1;
		if(*p < *q)return 0;
		if(*q == '\0')return 1;
		p++;
	}	
	if(*p == '\0' && *q!='\0')return 0;
	//ovdje je receno u zadatku da mozemo ispisati bilo kojeg
	if(*p =='\0' && *q == '\0')return 1;
}

void intcopy(int *p, int *q,int vel){
	int i = 0;
	
	while(i<vel){
		*p = *q;
		p++;
		q++;
		i++;
	}
}

struct Student{
	char ime[20];
	char prezime[20];
	int ocjene[50];
	int br_ocjena;
	
};

int genijalci(struct Student studenti[],int vel,double prosjek){
	
	
	int i;
	int j,k;
	double prosjek1 = 0, suma=0;
	double prosjeci[10000] = {0};
	int ind1 = -1,ind2 = -1,ind3 = -1;
	
	
	for(i=0;i<vel;i++){
	
		prosjek1 = 0;
		suma = 0;
		
		if(studenti[i].br_ocjena == 0){
			prosjek1 = 5.0;
			prosjeci[i] = prosjek1;
			
		}else {
			
			for(j=0;j<studenti[i].br_ocjena;j++){
				if(studenti[i].ocjene[j] == 5){
					prosjek1 = 5.0;
					prosjeci[i] = prosjek1;
					
					break;
				}else{
					suma += studenti[i].ocjene[j];
				}
			}
			
			if(suma!=0 && prosjek1!=5.0){
				prosjek1 = (double)suma/studenti[i].br_ocjena;
				prosjeci[i] = prosjek1;
				
			}
			
		}
		
			//izbacivanje!
			if(prosjek1< prosjek){
				for(k=i;k<vel-1;k++){
					studenti[k] = studenti[k+1];
				//	prosjeci[k] = prosjeci[k+1];
				}
				
				vel--;
				i--;
			}
		
		
	}
	
	//sad radimo sa nizom prosjeci
	
	
	//max1
	i = 0;
	double max = 0;
	for(i=0;i<vel;i++){
		
		if(i==0){
			max = prosjeci[i];
			ind1 = i;
		}
		
		if(prosjeci[i] > max){
			max = prosjeci[i];
			ind1 = i;
		}else if(prosjeci[i] == max){
			if(strcmp(studenti[i].prezime,studenti[ind1].prezime) == 0){
				
				if(strcmp(studenti[i].ime,studenti[ind1].ime) <0){
					ind1 = i;
				}
			}else if(strcmp(studenti[i].prezime,studenti[ind1].prezime) < 0){
				ind1 = i;
			}
		}
	}
	
	
	//max2	
	max = 0;
	int flag = 1;
	for(i=0;i<vel;i++){
		
		if(i==ind1){
			continue;
		}
		if(flag == 1){
			max = prosjeci[i];
			ind2 = i;
			flag = 0;
		}
		
		if(prosjeci[i] > max){
			max = prosjeci[i];
			ind2 = i;
		}else if(prosjeci[i] == max){
			if(strcmp(studenti[i].prezime,studenti[ind2].prezime) == 0){
				
				if(strcmp(studenti[i].ime,studenti[ind2].ime) <0){
					ind2 = i;
				}
			}else if(strcmp(studenti[i].prezime,studenti[ind2].prezime) < 0){
				ind2 = i;
			}
		}
	}
	
	
	//max2	
	max = 0;
	flag = 1;
	for(i=0;i<vel;i++){
		
		if(i==ind1){
			continue;
		}
		if(i==ind2){
			continue;
		}
		
		if(flag == 1){
			max = prosjeci[i];
			ind3 = i;
			flag = 0;
		}
		
		if(prosjeci[i] > max){
			max = prosjeci[i];
			ind3 = i;
		}else if(prosjeci[i] == max){
			if(strcmp(studenti[i].prezime,studenti[ind3].prezime) == 0){
				
				if(strcmp(studenti[i].ime,studenti[ind3].ime) <0){
					ind3 = i;
				}
			}else if(strcmp(studenti[i].prezime,studenti[ind3].prezime) < 0){
				ind3 = i;
			}
		}
	}
	
	if(ind1 != -1)printf(""%s %s\n"",studenti[ind1].prezime,studenti[ind1].ime);
	if(ind2 != -1)printf(""%s %s\n"",studenti[ind2].prezime,studenti[ind2].ime);
	if(ind3 != -1)printf(""%s %s\n"",studenti[ind3].prezime,studenti[ind3].ime);
	
	
	return vel;
	
}


int main() {
	
	struct Student studenti[] = {

            {""Meho"", ""Behic"", {10, 9}, 2},
            {""Meho"", ""Aehic"", {10, 8}, 2},
            {""Meho"", ""Cehic"", {10, 9, 8, 7, 6}, 5},
            {""Meho"", ""Dehic"", {6, 9}, 2},
            {""Meho"", ""Zehic"", {10}, 1},
            {""Meho"", ""Oehic"", {10, 9, 9, 9}, 4}
        };
        
        int vel = sizeof studenti / sizeof studenti[0], i;
        
        vel = genijalci(studenti, vel, 9.);
        printf(""Vel: %d\n"", vel);
        
    

	return 0;
}



/*

JEDAN NACIN IZBACIVANJA IZ NIZA ALI DUG ...
if(prosjek1 < prosjek){
			for(k = i;k<vel-1;k++){
			
			strcpy(studenti[k].ime,studenti[k+1].ime);
			strcpy(studenti[k].prezime ,studenti[k+1].prezime);
			intcopy(studenti[k].ocjene ,studenti[k+1].ocjene,50);
			studenti[k].br_ocjena = studenti[k+1].br_ocjena;
			
			}
			i--;
			vel--;
		}
		
*/
","#include <stdio.h>

int strcmp(char* s1, char* s2)
{
	while (*s1 != '\0' && *s2 != '\0') {
		if (*s1 < *s2) return -1;
		if (*s1 > *s2) return 1;
		s1++;
		s2++;
	}

	if(*s1=='\0'&&*s2=='\0') return 0;
	if (*s1 != '\0') return 1;
	if (*s2 != '\0') return -1;


	return 0;

}

struct Student {

	char ime[20], prezime[20];
	int ocjene[50];
	int br_ocjena;
};

/*funkcija koja računa prosjek jednog studenta*/
double prosjek (struct Student st)
{

	int i;
	double sum=0;

	if(st.br_ocjena==0) {
		return 5;
	}

	for(i=0; i<st.br_ocjena; i++) {

		if(st.ocjene[i]==5) {
			return 5;
		}

		sum=sum+st.ocjene[i];
	}
	return sum/st.br_ocjena;
}

int genijalci (struct Student studenti[], int vel, float prosjek1)
{

	int i,j;
	int max1=0,max2=0,max3=0;

	/*izbacivanje studenata koji ne ispunjavaju uslov*/
	for(i=0; i<vel; i++) {

		if(prosjek(studenti[i])<prosjek1) {
			for(j=i; j<vel-1; j++) {
				studenti[j]=studenti[j+1];
			}

			vel--;
			i--;
		}
	}
	
	/*traženje studenta sa najvećim prosjekom*/
	for(i=0; i<vel; i++) {

		if(prosjek(studenti[i])>prosjek(studenti[max1])) {
			max1=i;
		} else if(prosjek(studenti[i])==prosjek(studenti[max1])) {
			if(strcmp(studenti[i].prezime,studenti[max1].prezime)<0) {
				max1=i;
			}
		} else if(strcmp(studenti[i].prezime,studenti[max1].prezime)==0) {
			if(strcmp(studenti[i].ime,studenti[max1].ime)<0) {
				max1=i;
			}
		}
	}

	if(max1==0) {
		max2++;
	}
	
	/*traženje drugog studenta sa najvećim prosjekom*/
	if(vel>=2) {
		for(i=0; i<vel; i++) {

			if(max2>vel)
				break;

			if(i==max1) {
				continue;
			}

			if(prosjek(studenti[i])>prosjek(studenti[max2])) {
				max2=i;
			} else if(prosjek(studenti[i])==prosjek(studenti[max2])) {
				if(strcmp(studenti[i].prezime,studenti[max2].prezime)<0) {
					max2=i;
				}
			} else if(strcmp(studenti[i].prezime,studenti[max2].prezime)==0) {
				if(strcmp(studenti[i].ime,studenti[max2].ime)<0) {
					max2=i;
				}
			}
		}
		
		/*traženje trećeg studenta sa najvećim prosjekom*/
		if (vel>=3) {
			if(max1==0||max2==0) {
				max3++;
				if(max1==1||max2==1) {
					max3++;
				}
			}

			for(i=0; i<vel; i++) {
				if(max3>vel)
					break;

				if(i==max1||i==max2) {
					continue;
				}


				if(prosjek(studenti[i])>prosjek(studenti[max3])) {
					max3=i;
				} else if(prosjek(studenti[i])==prosjek(studenti[max3])) {
					if(strcmp(studenti[i].prezime,studenti[max3].prezime)<0) {
						max3=i;
					}
				} else if(strcmp(studenti[i].prezime,studenti[max3].prezime)==0) {
					if(strcmp(studenti[i].ime,studenti[max3].ime)<0) {
						max3=i;
					}
				}
			}

		}
	}
	/*ispis studenata*/
	if(prosjek(studenti[max1])>=prosjek1) printf(""%s %s\n"", studenti[max1].prezime, studenti[max1].ime);
	if(prosjek(studenti[max2])>=prosjek1 && max2!=max1 && max2<=vel) printf(""%s %s\n"", studenti[max2].prezime, studenti[max2].ime);
	if(prosjek(studenti[max3])>=prosjek1 && max3!=max2 && max3!=max1 && max3<=vel) printf(""%s %s\n"", studenti[max3].prezime, studenti[max3].ime);



	return vel;
}


int main()
{

	struct Student studenti[6] = {
		{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5},
		{ ""Meho"", ""Mujic"", { 7,7,7,7,8}, 5},
		{ ""Pero"", ""Peric"", { 8,8,8,8,7}, 5},
		{ ""Beba"", ""Bebic"", { 6,6,6,6,6}, 5},
		{ ""Mujo"", ""Mujic"", { 7,7,7,7,8}, 5},
		{ ""Fata"", ""Fatic"", { 7,7,7,7,8}, 5},
	};

	printf(""%d"", strcmp(studenti[1].ime, studenti[0].ime));

	return 0;

}
"
3191,87,87,0,52,A2016/Z2/Z2/student8317,A2016/Z2/Z2/student3631,"#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#define PI 3.1415926

int main() {
	
	double niz[500];
	int i,j,n;
	double stepeni, minute, sekunde;
	double ugao;
	
	printf(""Unesite broj uglova: "");
	scanf(""%d"", &n);
	
	for(i=0;i<n;i++) {
		scanf(""%lf"", &niz[i]);
		}
		
	for(i=0; i<n; i++){
		
		ugao=fabs((niz[i]*180)/PI);
		minute=(ugao-(int)ugao)*60;
		sekunde=round((minute-(int)minute)*60);
		if(sekunde==60){sekunde=0, minute++;}
		
		if(sekunde>30){
			
		for(j=i; j<n-1; j++) {
			
			niz[j]=niz[j+1];
		}
		
		n--;
		i--;
		}
	}
		
		
		printf(""Uglovi su:\n"");
		for(i=0; i<n; i++){
		
		ugao=(niz[i]*180)/PI;
		minute=fabs((ugao-(int)ugao)*60);
		sekunde=round((minute-(int)minute)*60);
		
		stepeni=(int)ugao;
		minute=(int) minute;
		sekunde=round(sekunde);
		
		if(stepeni>=0){
		if(sekunde==60){sekunde=0; minute++;}
		if(minute==60){minute=0; stepeni++;}}
		
		if(stepeni<0){
		if(sekunde==60){sekunde=0; minute++;}
		if(minute==60){minute=0; stepeni--;}}
		printf(""%.f stepeni %.f minuta %.f sekundi\n"", stepeni, minute, sekunde);
			
	
		}
		
		
		
		return 0;
		
	}
	
	
	
	
	
	
	
	
","#include <stdio.h>
#include <math.h>

#define PI 3.1415926

int main() {
	int i,j,br;
	double step,min,sek,ug;
	double niz[500];

printf (""Unesite broj uglova: "");
scanf (""%d"", &br);
for (i=0; i<br; i++)
{ 
	scanf (""%lf"", &niz[i]);}

for (i=0;i<br;i++)
{
	ug=fabs((niz[i]*180)/PI);
	min=(ug-(int)ug)*60;
	sek=round((min-(int)min)*60); 
	if (sek==60)
	{sek=0; min++;}
   if (sek>30)
   { 
   	for (j=i; j<br-1;j++) {
   		niz [j]= niz[j+1];
   	}
   	br--;
   	i--;
   }}
	


printf (""Uglovi su:\n"");
for (i=0;i<br;i++)
{
	ug=(niz[i]*180)/PI;
	min=fabs ((ug-(int)ug)*60);
	sek=round ((min-(int)min)*60);
		
	    step=(int)ug;
	    min=(int)min;
		sek=round(sek);


if (step>=0){
	if (sek==60) {sek=0;min++;}
	if (min==60) {min=0;step++;}}

	if (step<0){
	if (sek==60) {sek=0;min++;}
	if (min==60) {min=0;step--;}}
	
	printf (""%.f stepeni %.f minuta %.f sekundi\n"", step, min, sek);
}
	return 0;
}
"
3193,99,99,0,30,A2016/Z1/Z4/student2645,A2016/Z1/Z4/student8576,"#include <stdio.h>

int main() {
	
	int n, i, j;
	
	printf(""Unesite broj n: "");
	scanf(""%d"", &n);
	while(n<1 || n>50) {
		printf(""Pogresan unos\n"");
		printf(""Unesite broj n: "");
		scanf(""%d"", &n);
	}
	
	
	for(i=0; i<n; i++) {
		for(j=0; j<4*n-3; j++) {
			if(n==1) {
				printf(""***"");
			}
			 else if(j==i || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i) 
				printf(""*""); 
	
			
			else {
				printf("" "");
			}
		}
		printf(""\n"");
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	
	int n, i, j;
	
	printf(""Unesite broj n: "");
	scanf(""%d"", &n);
	while(n<1 || n>50) {
		printf(""Pogresan unos\n"");
		printf(""Unesite broj n: "");
		scanf(""%d"", &n);
	}
	
	
	for(i=0; i<n; i++) {
		for(j=0; j<4*n-3; j++) {
			if(n==1) {
				printf(""***"");
			}
			 else if(j==i || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i) 
				printf(""*""); 
	
			
			else {
				printf("" "");
			}
		}
		printf(""\n"");
	}
	
	return 0;
}
"
3194,99,99,0,40,A2016/Z2/Z4/student2160,A2016/Z2/Z4/student8189,"#include <stdio.h>
#include <math.h>
#define EPSILON 0.0001
#define A 100
#define B 100
int main() {
    int M,N,i,j,a,b;
    int pret=2;
    double mat[A][B];
    
     do
   {   
       
       printf(""Unesite M i N: "");
        scanf(""%d %d"",&M,&N);
        if(M<=0 || M>100 || N<=0 || N>100) 
        printf(""Pogresan unos!\n"");
    
}
    while((M<=0 || M>100) ||( N<=0 || N>100));
    printf(""Unesite elemente matrice: "");
    for(i=0;i<M;i++)
        { for(j=0;j<N;j++)
                {  scanf(""%lf"",&mat[i][j]); } 
        }
        
        if(N==1 && M!=1) {  printf(""Matrica je Teplicova""); return 0; }
         
    
    for(a=0;a<M-1;a++)
    { for(b=0;b<N-1;b++)
        {
         if(fabs(mat[a][b]-mat[a+1][b+1])>EPSILON)
       { pret=0; break; }
    
         if(fabs (mat[a][N-1]-mat[a+1][0]) >EPSILON)
        { pret=1; break; 
        }
        
        }
    } 
        if(pret==2)  printf(""Matrica je cirkularna ""); 
        else if(pret==1)  printf(""Matrica je Teplicova ""); 
       else  if(pret==0)  printf(""Matrica nije ni cirkularna ni Teplicova ""); 
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define EPSILON 0.0001
#define A 100
#define B 100
int main() {
    int M,N,i,j,a,b;
    int pret=2;
    double mat[A][B];
    
     do
   {   
       
       printf(""Unesite M i N: "");
        scanf(""%d %d"",&M,&N);
        if(M<=0 || M>100 || N<=0 || N>100) 
        printf(""Pogresan unos!\n"");
    
}
    while((M<=0 || M>100) ||( N<=0 || N>100));
    printf(""Unesite elemente matrice: "");
    for(i=0;i<M;i++)
        { for(j=0;j<N;j++)
                {  scanf(""%lf"",&mat[i][j]); } 
        }
        
        if(N==1 && M!=1) {  printf(""Matrica je Teplicova""); return 0; }
         
    
    for(a=0;a<M-1;a++)
    { for(b=0;b<N-1;b++)
        {
         if(fabs(mat[a][b]-mat[a+1][b+1])>EPSILON)
       { pret=0; break; }
    
         if(fabs (mat[a][N-1]-mat[a+1][0]) >EPSILON)
        { pret=1; break; 
        }
        
        }
    } 
        if(pret==2)  printf(""Matrica je cirkularna ""); 
        else if(pret==1)  printf(""Matrica je Teplicova ""); 
       else  if(pret==0)  printf(""Matrica nije ni cirkularna ni Teplicova ""); 
	return 0;
}
"
3214,98,98,0,102,A2016/Z3/Z2/student8561,A2016/Z3/Z2/student8419,"#include <stdio.h>

	int fibonacijev_niz(int p){
		int fniz[46]={1,1},a,b,c,r,i;
		a=1;
		b=1;
		i=0;
		r=0;
		for(i=2;i<46;i++){
			c=a+b;
			a=b;
			b=c;
			fniz[i]=c;
		}
		for(i=0;i<46;i++){
			if(p==fniz[i]){
				r=1;
				break;
			}
			else r=0;
		}
		return r;
	}
	
	int izbaci(int* niz, int v){
		int t1,t2,i,j,x;
		t1=v;
		t2=v-1;
		for(j=0;j<t1;j++){
			x=fibonacijev_niz(*niz);
			if(x==1){
				if(j==t1-1){
					v--;
					return v;
				}
				for(i=0;i<t2;i++){
					*niz=*(niz+1);
					niz++;
				}
				v--;
				niz=niz-t2;
			} else{
				if(j==t1-1)
				niz--;
				niz++;
			}
			t2--;
		}
		return v;
	}	
	
	
		int Suma(int br){
		int c,suma=0;
		if(br<0) br*=-1;
		while(br>0){
			c=br%10;
			suma+=c;
			br/=10;
		}
		return suma;
	}
	
	void ubaci(int* p, int v){
		int p1,i,j,t1,t2,suma=0;;
		t1=v;
		t2=v;
		for(i=0;i<t1;i++){
			if(i=t1-1){
				p1=*p;
				suma=Suma(p1);
				*(p+1)=suma;
				return;
			}
			p1=*p;
			suma=Suma(p1);
			for(j=0;j<t1-1;j++){
				while(v>0){
					*(p+v)=*(p+v-1);
					v--;
				}
			}
			*(p+1)=suma;
			p=p+2;
			t2--;
			v=t2;
		}
	}

int main() {
	int niz[20],i=0,v;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	scanf(""%d"",&niz[i]);
	
	ubaci(niz,10);
	v=izbaci(niz,20);
	printf(""Modificirani niz glasi: "");
	if(v>0){
		for(i=0;i<v-1;i++)
		printf(""%d, "",niz[i]);
		printf(""%d."",niz[v-1]);
	}
	else printf("" "");
	return 0;
}
","#include <stdio.h>

	int fibonacijev_niz(int p){
		int fniz[46]={1,1},a,b,c,r,i;
		a=1;
		b=1;
		i=0;
		r=0;
		for(i=2;i<46;i++){
			c=a+b;
			a=b;
			b=c;
			fniz[i]=c;
		}
		for(i=0;i<46;i++){
			if(p==fniz[i]){
				r=1;
				break;
			}
			else r=0;
		}
		return r;
	}
	
	int izbaci(int* niz, int v){
		int t1,t2,i,j,x;
		t1=v;
		t2=v-1;
		for(j=0;j<t1;j++){
			x=fibonacijev_niz(*niz);
			if(x==1){
				if(j==t1-1){
					v--;
					return v;
				}
				for(i=0;i<t2;i++){
					*niz=*(niz+1);
					niz++;
				}
				v--;
				niz=niz-t2;
			} else{
				if(j==t1-1)
				niz--;
				niz++;
			}
			t2--;
		}
		return v;
	}	
	
	
		int Suma(int br){
		int c,suma=0;
		if(br<0) br*=-1;
		while(br>0){
			c=br%10;
			suma+=c;
			br/=10;
		}
		return suma;
	}
	
	void ubaci(int* p, int v){
		int p1,i,j,t1,t2,suma=0;;
		t1=v;
		t2=v;
		for(i=0;i<t1;i++){
			if(i=t1-1){
				p1=*p;
				suma=Suma(p1);
				*(p+1)=suma;
				return;
			}
			p1=*p;
			suma=Suma(p1);
			for(j=0;j<t1-1;j++){
				while(v>0){
					*(p+v)=*(p+v-1);
					v--;
				}
			}
			*(p+1)=suma;
			p=p+2;
			t2--;
			v=t2;
		}
	}

int main() {
	int niz[20],i=0,v;
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0;i<10;i++)
	scanf(""%d"",&niz[i]);
	
	ubaci(niz,10);
	v=izbaci(niz,20);
	printf(""Modificirani niz glasi: "");
	if(v>0){
		for(i=0;i<v-1;i++)
		printf(""%d, "",niz[i]);
		printf(""%d."",niz[v-1]);
	}
	else printf("" "");
	return 0;
}
"
3221,96,96,0,36,A2016/Z2/Z1/student3978,A2016/Z2/Z1/student5829,"#include <stdio.h>
#include <stdlib.h>
int main() {
	int n,a,o,k,br,mn;
	mn=1;
	br=0;
	printf (""Unesite broj: "");
	scanf (""%d"", &n);
	if (n<0) { n = abs(n);
	

	while (n>9) {
    	
      	a=n%10;
		n=n/10;
		o=n%10;
		k=abs(a-o);
		
		br=br+mn*k;
		mn=mn*10;
	}
		printf (""%d"", br);
	}
	
	else if (n>0 && n<10) printf (""0"");
	
	else {
		while (n>9) {
    	
      	a=n%10;
		n=n/10;
		o=n%10;
		k=abs(a-o);
		
		br=br+mn*k;
		mn=mn*10;
	}
	printf (""%d"", br);
	}

 
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
int main() {
	int n,a,o,k,br,mn;
	mn=1;
	br=0;
	printf (""Unesite broj: "");
	scanf (""%d"", &n);
	if (n<0) { n = abs(n);
	

	while (n>9) {
    	
      	a=n%10;
		n=n/10;
		o=n%10;
		k=abs(a-o);
		
		br=br+mn*k;
		mn=mn*10;
	}
		printf (""%d"", br);
	}
	
	else if (n>0 && n<10) printf (""0"");
	
	else {
		while (n>9) {
    	
      	a=n%10;
		n=n/10;
		o=n%10;
		k=abs(a-o);
		
		br=br+mn*k;
		mn=mn*10;
	}
	printf (""%d"", br);
	}

 
	return 0;
}
"
3228,16,16,0,3,A2016/Z4/Z1/student8755,A2016/Z4/Z1/student6029,"#include <stdio.h>

char* izbaci_najcescu(char* s)
{
	char *pok2, *pocetak, *niz[1000],*p, *q, *temp;
	int br=0, i, br2=0, max=0, br_temp=0, prvi_prolazi=1;
	pocetak=s;
	if(*s==NULL)
		return NULL;
	/*Trazi rijec koja se ponavlja najviše puta ~ pokazivac na tu rijec kod prvog pojavljivanja*/
	while(*s!='\0')
	{
		pok2=s+1;
		br=0;
		br2=0;
		temp=pok2;
		
		
		while(*temp!='\0')
		{
			p=s;
			q=temp;
			while(*p==*q || (*p>='A' && *p<='Z' && *q==*p+32) || (*p>='a' && *p<='z' && *q==*p-32))
			{
				p++;
				q++;
				if((s==pocetak || (*(s-1)<'A' || (*(s-1)>'Z' && *(s-1)<'a') || *(s-1)>'z')) && ((*p<'A' || (*p>'Z' && *p<'a') || *p>'z')) && ((*q<'A' || (*q>'Z' && *q<'a') || *q>'z')) && (*(temp-1)<'A' || (*(temp-1)>'Z' && *(temp-1)<'a') || *(temp-1)>'z'))
				{
					br2++;
					break;
				}
			}
			temp++;
		}
		
		
		if(br2>br_temp || prvi_prolazi)
		{
			br_temp=br2;
			while(*pok2!='\0')
			{
				p=s;
				q=pok2;
				
				while(*p==*q || (*p>='A' && *p<='Z' && *q==(*p)+32) || (*p>='a' && *p<='z' && *q==*p-32))
				{
					p++;
					q++;
					if((s==pocetak || (*(s-1)<'A' || (*(s-1)>'Z' && *(s-1)<'a') || *(s-1)>'z')) && ((*p<'A' || (*p>'Z' && *p<'a') || *p>'z')) && ((*q<'A' || (*q>'Z' && *q<'a') || *q>'z')) && (*(pok2-1)<'A' || (*(pok2-1)>'Z' && *(pok2-1)<'a') || *(pok2-1)>'z'))
					{
						br++;
						niz[br]=pok2;
						break;
					}
				}
				pok2++;
			}
			if(br>max || prvi_prolazi)
			{
				max=br;
				niz[0]=s;
			}
		}
		prvi_prolazi=0;
		s++;
	}
	/*izbacivanje rijeci koja se najvise puta ponavljaja od posljednje u recenici do prve*/ 
	for(i=max; i>=0; i--)
	{
		s=niz[i];
		while((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))
			s++;
		if(*s!='\0')
		{
			while(*s!='\0')
				*niz[i]++=*s++;
			*niz[i]='\0';
		}
		else if(*s=='\0')
			*niz[i]='\0';
	/*	s=niz[i];
		while(*s!='\0')
		{
			if(*s!=' ')
				s++;
			else
			{
				s++;
				while(*s!='\0')
					*niz[i]++=*s++;
				*niz[i]='\0';
			}
		}*/
		
	}
	
		
	return pocetak;
}

int main() 
{	
	char niz[]=""Test test abc test"";
	printf(""%s"", izbaci_najcescu(niz));
	return 0;
}
","#include <stdio.h>

char* izbaci_najcescu(char* s)
{
	char *p=s, *pt, *kt, *ptp, *ktr, *ptr, *r, *pp, *ktp;
	char pom[100]={""""};
	int br=0, max=0, pretp=0, br2=0;
	pp=pom;
	while(*s!='\0')
	{
		if((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))
			br++;
		if(*(s)<'A' || (*(s)>'Z' && *(s)<'a') || *(s)>'z') br2++;
		s++;
	}
	if(br==0)
		return p;
	if(br2==0)
	{
		s=p;
		*s='\0';
		return s;
	}
	br=1; s=p;
	while(*s!='\0')
	{
		while(*(s)<'A' || (*(s)>'Z' && *(s)<'a') || *(s)>'z') s++;
		if(((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')) && ((s==p) || *(s-1)<'A' || (*(s-1)>'Z' && *(s-1)<'a') || *(s-1)>'z'))
		{
			pt=s; ptp=s;
		}
		while((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))
			s++;
		if(*(s)<'A' || (*(s)>'Z' && *(s)<'a') || *(s)>'z')
			kt=s;
		r=s; br=1;
		while(*r!='\0')
		{
			while(*r<'A' || (*r>'Z' && *r<'a') || *r>'z') r++;
			if(((*r>='A' && *r<='Z') || (*r>='a' && *r<='z')) && (*(r-1)<'A' || (*(r-1)>'Z' && *(r-1)<'a') || *(r-1)>'z'))
			{
				ptr=r;
			}
			while((*r>='A' && *r<='Z') || (*r>='a' && *r<='z'))
				r++;
			if(*(r)<'A' || (*(r)>'Z' && *(r)<'a') || *(r)>'z')
				ktr=r; 
			pretp=1;
				while(ptp<kt)
				{
					if(*ptp!=*ptr && (*ptp-32)!=*ptr && (*ptp+32)!=*ptr )
						pretp=0;
					
					ptp++; ptr++;
				}
			ptp=pt;
			if(pretp)
				br++;
			r++;
		}
		if(br>max)
		{
			while(ptp!=kt)
			{
				*pp=*ptp;
				pp++; ptp++;
			}
			*pp='\0';
			max=br;
		}
		pp=pom;
		s++;
	}
	s=p; pp=pom;
	while(*s!='\0')
	{
		while((*(s)<'A' || (*(s)>'Z' && *(s)<'a') || *(s)>'z')) s++;
		if(((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')) && ((s==p) || *(s-1)<'A' || (*(s-1)>'Z' && *(s-1)<'a') || *(s-1)>'z'))
		{
			pt=s; ptp=s;
		}
		while((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))
			s++;
		if(*(s)<'A' || (*(s)>'Z' && *(s)<'a') || *(s)>'z')	
		{
			kt=s; ktp=s;
		}
		pretp=1;
		while(pt!=kt)
		{
			if(*pt!=*pp && (*pt-32)!=*pp && (*pt+32)!=*pp )
				pretp=0;
			pt++; pp++;
		}
		pt=ptp; kt=ktp; pp=pom;
		if(pretp)
		{
			while(*kt!='\0')
			{
				*pt=*kt;
				pt++; kt++;
			}
			*pt='\0';
			s-=kt-pt;
		}
	s++;
	}
	return p;
}

int main()
{
	char tekst[100]={""1PsT1 psT2 3Pst pstpst pst""};
	printf(""%s "", izbaci_najcescu(tekst));
	return 0;
}






/*











char* izbaci_najcescu (char* s) {
	char* p=s,*r;
	char *pt=s,*pt1=s,*kt=s,*kt1=s,*prvi=s,*drugi=s,*pm=s,*km=s;
	int br=0,pret=1,max=0;
	while(*p!='\0') {
		if (((*p>='A' && *p<='Z')||(*p>='a' && *p<='z')) && ((p==s)||((*(p-1)>=1 && *(p-1)<'A'))||(*(p-1)>'Z' && *(p-1)<'a')||(*(p-1)>'z'&& (*p-1)<=127) ))
			pt=p;
		while ((*p>='A' && *p<='Z') || (*p>='a' && *p<='z'))
			p++;
			if((*p>=0 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<=127)) {
				kt=p;
				br=0;
				
				r=p;
				while (*r!='\0') {
					if (((*r>='A' && *r<='Z')||(*r>='a' && *r<='z')) && ((r==s)||(*(r-1)>1 && *(r-1)<='A')||(*(r-1)>'Z' && *(r-1)<'a')||(*(r-1)>'z' && *(r-1)<=127) ))
						pt1=r;
						while ((*r>='A' && *r<='Z') || (*r>='a' && *r<='z'))
							r++;
							if ((*r>=0 && *r<'A') || (*r>'Z' && *r<'a') || (*r>'z' && *r<=127)) {
								kt1=r;
								
								pret=1;
								prvi=pt;
								drugi=pt1;
								while (drugi!=kt1)
									if (*prvi!=*drugi && (*(prvi)-32)!=*drugi && (*prvi)+32!=*drugi) {
										prvi++;
										drugi++;
										pret=0;
									}
								if (pret==1)
									br++;
							}
				if(br>max) {
					max=br;
					pm=pt;
					km=kt;
				}
				while(*kt1!='\0') {
					*pt1++=*kt1++;
					p-=kt1-pt1;
				}
		r++;}
	}
	p++;}
	return s;
}

int main() {
	char tekst[40]={""Primjer je ovo primjer primjer.""};
	printf(""%s"",izbaci_najcescu(tekst));
	return 0;
}
*/"
3233,75,75,0,36,A2016/Z2/Z3/student1845,A2016/Z2/Z3/student1772,"#include <stdio.h>

int main() {
	int i, j, n, x [10], y [10], k;
	char niz [20][20];
	
	for(i=0; i<20; i++) {
	for(j=0; j<20; j++) {
			
		 niz[i][j]=' ';
			
		}
		
	}
	
	do{
		
	printf(""\nUnesite broj tacaka: "");
	scanf(""%d"", &n);
    if(n>10 || n<=0) printf(""Pogresan unos"");
    
	}while(n>10 || n<=0);
    
    
    for(k=0; k<n; k++){
    	
        printf(""Unesite %d. tacku: "", k+1);
        scanf(""%d %d"",&x[k], &y[k] );
        
        if(x[k] < 0 || x[k] > 19 || y[k] < 0 || y[k] > 19){
        	printf(""Pogresan unos\n"");
        	k--;
        }
    }
	
	for(k=0; k<n; k++) {
	for(i=0; i<20; i++) {
		for(j=0; j<20; j++) {
			if(i==y[k] && j==x[k]){
			niz[i][j]='*';	
	     		} 
     		}
		}

	}
	
		for(i=0; i<20; i++) {
		for(j=0; j<20; j++) {
		printf(""%c"", niz[i][j]);
		  	}
		printf(""\n"");
	}
	
	return 0;
}
","#include <stdio.h>

int main() {
	char m[20][20];
	int i,l,j,n,k,prv[10],dru[10];
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			m[i][j]=' ';
		}
	}
     for(i=0;i<1;i++){
     	printf(""Unesite broj tacaka: "");
     	scanf(""%d"",&n);
     	if(n<1 || n>10){
     		printf(""Pogresan unos\n"");
     		i--;
     	}
     }
	for(i=0;i<n;i++){
	printf(""Unesite %d. tacku: "",i+1);
	scanf(""%d%d"",&prv[i],&dru[i]);
	if((prv[i]>19 || prv[i]<0) || (dru[i]>19 || dru[i]<0)){
		printf(""Pogresan unos\n"");
		i--;
	}
	}
	for(k=0;k<n;k++){
	  for(l=0;l<20;l++){
	  	for(j=0;j<20;j++){
	  		if(j==prv[k] && l==dru[k]){
	  			m[l][j]='*';
	  		}
	  	}
	  }	
	}
	for(i=0;i<20;i++){
		for(j=0;j<20;j++){
			printf(""%c"",m[i][j]);
		}
		printf(""\n"");
	}
	
	
	
	return 0;
}
"
3239,98,98,0,65,A2016/Z2/Z2/student9758,A2016/Z2/Z2/student5863,"#include <stdio.h>
#include<math.h>
#define PI 3.1415926

int main() {
	
	int n;
	float st,stepeni,minute,sekunde,y;
	float niz[500];
	int i,j;
	
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	printf(""Uglovi su:\n"");
	for(i=0;i<n;i++)
	{
		scanf(""%f"",&niz[i]);
	}
	
	for(i=0;i<n;i++)
	{
	st=niz[i]*180/PI;
	stepeni=(int)st;
	minute=(int)((st-stepeni)*60);
	sekunde=(st-stepeni-minute/60.)*3600;
		y=round(sekunde);
		
		if(y==60) {minute=minute+1; y==0;}
	if(minute==60){
		stepeni=stepeni+1;
		minute==0;
	}
	
	if(y==-60) {minute=minute-1; y==0;}
	if(minute==-60){
		stepeni=stepeni-1;
		minute==0;
	}
	
		
		
	
		if(y>30 ||y<-30)
{
		for(j=i;j<n-1;j++)
		{
			niz[j]=niz[j+1];
		}
		n--;
		i--;
			
	
	
		}}
		for( i=0; i<n;i++){
			
	st=niz[i]*180/PI;
	stepeni=(int)st;
	minute=(int)((st-stepeni)*60);
	sekunde=(st-stepeni-minute/60.)*3600;
	
	if(sekunde==60) {minute=minute+1; sekunde==0;}
	if(minute==60){
		stepeni=stepeni+1;
		minute==0;
	}
printf(""%.f stepeni "",stepeni);
printf(""%.f minuta "",fabs(minute));
printf(""%.f sekundi \n"",fabs(sekunde));
	}

	return 0;
}


","#include <stdio.h>
#include<math.h>
#define PI 3.1415926

int main() {
	
	int n;
	float st,stepeni,minute,sekunde,y;
	float niz[500];
	int i,j;
	
	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	printf(""Uglovi su:\n"");
	for(i=0;i<n;i++)
	{
		scanf(""%f"",&niz[i]);
	}
	
	for(i=0;i<n;i++)
	{
	st=niz[i]*180/PI;
	stepeni=(int)st;
	minute=(int)((st-stepeni)*60);
	sekunde=(st-stepeni-minute/60.)*3600;
		y=round(sekunde);
		
		if(y==60) {minute=minute+1; y==0;}
	if(minute==60){
		stepeni=stepeni+1;
		minute==0;
	}
	
	if(y==-60) {minute=minute-1; y==0;}
	if(minute==-60){
		stepeni=stepeni-1;
		minute==0;
	}
	
		
		
	
		if(y>30 ||y<-30)
{
		for(j=i;j<n-1;j++)
		{
			niz[j]=niz[j+1];
		}
		n--;
		i--;
			
	
	
		}}
		for( i=0; i<n;i++){
			
	st=niz[i]*180/PI;
	stepeni=(int)st;
	minute=(int)((st-stepeni)*60);
	sekunde=(st-stepeni-minute/60.)*3600;
	
	if(sekunde==60) {minute=minute+1; sekunde==0;}
	if(minute==60){
		stepeni=stepeni+1;
		minute==0;
	}
printf(""%.f stepeni "",stepeni);
printf(""%.f minuta "",fabs(minute));
printf(""%.f sekundi \n"",fabs(sekunde));
	}

	return 0;
}


"
3242,95,95,0,15,A2016/Z1/Z2/student8133,A2016/Z1/Z2/student3415,"#include <stdio.h>
#include <math.h>
#define E 0.00001

int main() {
	float a1, b1, a2, b2, x, y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a1,&b1,&a2,&b2);
	x=(b2-b1)*1./(a1-a2);
	y=(a1*((b2-b1)*1./(a1-a2)))+b1;
	if(fabs(a1-a2)<E && fabs(b1-b2)<E){
		printf(""Poklapaju se"");
		return 0;
	} else
	if(fabs(a1-a2)<E){
		printf(""Paralelne su"");
		return 0;
	} else
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x,y);
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define E 0.00001

int main() {
	float a1, b1, a2, b2, x, y;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"", &a1,&b1,&a2,&b2);
	x=(b2-b1)*1./(a1-a2);
	y=(a1*((b2-b1)*1./(a1-a2)))+b1;
	if(fabs(a1-a2)<E && fabs(b1-b2)<E){
		printf(""Poklapaju se"");
		return 0;
	} else
	if(fabs(a1-a2)<E){
		printf(""Paralelne su"");
		return 0;
	} else
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"", x,y);
	return 0;
}
"
3253,59,59,0,33,A2016/Z2/Z2/student5612,A2016/Z2/Z2/student5380,"#include <stdio.h>
#include <math.h>
#define PI 3.1415926
#include<stdlib.h>

int main() {
    double rad[500];
    double stepen;
    double minuta;
    double sekunda;
    double ugao;
    int x, i, j;
    printf(""Unesite broj uglova: "");
    scanf(""%d"", &x);
    for (i = 0; i < x; i++){
        scanf(""%lf"", &rad[i]);
    }
    for(i = 0; i < x; i++){
    ugao = fabs((rad[i]*180)/PI); minuta = (ugao - (int)ugao)*60;
    sekunda = round((minuta - (int)minuta)*60);
    /*Algoritam za izbacivanje clanove iz niza uz ocuvanje redoslijeda*/
    if (sekunda == 60){
        sekunda = 0;
        minuta++;
    }
    if (sekunda > 30){
        for(j = i; j < x - 1; j++){
            rad[j] = rad[j+1];
        }
        i--;
        x--;
    }
    }
    printf(""Uglovi su:\n"");
    for(i = 0; i < x; i++){
        ugao = (rad[i]*180)/PI;
        minuta = fabs((ugao - (int)ugao)*60);
        sekunda = round((minuta - (int)minuta)*60);
        stepen = (int)ugao;
        sekunda = round(sekunda);
        minuta = (int)minuta;
        if(stepen < 0){
            if(sekunda == 60){
                sekunda = 0;
                minuta++;
            }if (minuta == 60){
                minuta = 0;
                stepen--;
            }
        }
        if(stepen >= 0){
            if (sekunda == 60){
                sekunda = 0;
                minuta++;
            }if (minuta == 60){
                minuta = 0;
                stepen++;
            }
        }
        printf(""%.f stepeni %.f minuta %.f sekundi\n"", stepen, minuta, sekunda);
    }
    return 0;
}   

","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PI 3.1415926

int main () {
    
double niz [500];
double step,min,sec,x;
int i,j,n;

printf (""Unesite broj uglova: "");
scanf (""%d"", &n);

for (i=0; i<n; i++) {
    scanf (""%lf"", &niz[i]); 
    }

for (i=0; i<n; i++) {

x = fabs ((niz[i])*(180/PI));
min = ((x-(int)x)*60);
sec = (round ((min-(int)min)*60)); 
if(sec==60) { sec=0; min++;}

if (sec>30) {
    
for (j=i; j<n-1; j++) {
        niz [j]=niz [j+1]; 
    
    }
        n--;
        i--;
    } }


printf (""Uglovi su:\n"");
for (i=0; i<n; i++) {
    
    x= (niz[i]*(180/PI));
    min = fabs((x-(int)x)*60);
    sec = ((min-(int)min)*60);

    step=(int)x;
    min=(int) min;
    sec=round (sec);
    
if (step>=0) {
    if (sec==60){sec=0; min++;} 
    if (min==60){min=0; step++;}}
    
if (step<0) {
    if (sec==60){sec=0; min++;}
    if (min==60){min=0; step--;}}
    
printf(""%.f stepeni %.f minuta %.f sekundi\n"", step, min, sec);    
    
}

return 0;

}


    


"
3264,99,99,0,184,A2016/Z1/Z1/student9463,A2016/Z1/Z1/student4389,"#include <stdio.h>
#define E 0.0001

int main() {
	float s1p1, s1p2, s1pr, s1dz, s1zi, s2p1, s2p2, s2pr, s2dz, s2zi, s3p1, s3p2, s3pr, s3dz, s3zi, s1zb, s2zb, s3zb, s1oc, s2oc, s3oc;
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
		scanf(""%f"", &s1p1);
		if (s1p1<0||s1p1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
		scanf(""%f"", &s1p2);
		if (s1p2<0||s1p2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
		scanf(""%f"", &s1pr);
		if (s1pr<0||s1pr>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
		scanf(""%f"", &s1dz);
		if (s1dz<0||s1dz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
		scanf(""%f"", &s1zi);
		if (s1zi<0||s1zi>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
		scanf(""%f"", &s2p1);
		if (s2p1<0||s2p1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
		scanf(""%f"", &s2p2);
		if (s2p2<0||s2p2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
		scanf(""%f"", &s2pr);
		if (s2pr<0||s2pr>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
		scanf(""%f"", &s2dz);
		if (s2dz<0||s2dz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
		scanf(""%f"", &s2zi);
		if (s2zi<0||s2zi>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
		scanf(""%f"", &s3p1);
		if (s3p1<0||s3p1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
		scanf(""%f"", &s3p2);
		if (s3p2<0||s3p2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
		scanf(""%f"", &s3pr);
		if (s3pr<0||s3pr>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
		scanf(""%f"", &s3dz);
		if (s3dz<0||s3dz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
		scanf(""%f"", &s3zi);
		if (s3zi<0||s3zi>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	s1zb = s1p1 + s1p2 + s1dz + s1pr + s1zi;
	s2zb = s2p1 + s2p2 + s2dz + s2pr + s2zi;
	s3zb = s3p1 + s3p2 + s3dz + s3pr + s3zi;
	
	
				 if(s1zb>=55 && s1zb<65){
				s1oc = 6;
			}
			else if(s1zb>=65 && s1zb<75){
				s1oc = 7;
			}
			else if(s1zb>=75 && s1zb<85){
				s1oc = 8;
			}
			else if(s1zb>=85 && s1zb<92){
				s1oc = 9;
			}
			else if(s1zb>=92 && s1zb<=100){
				s1oc = 10;
			}
			else{
				s1oc = 1;
			}
	
				 if(s2zb>=55 && s2zb<65){
				s2oc = 6;
			}
			else if(s2zb>=65 && s2zb<75){
				s2oc = 7;
			}
			else if(s2zb>=75 && s2zb<85){
				s2oc = 8;
			}
			else if(s2zb>=85 && s2zb<92){
				s2oc = 9;
			}
			else if(s2zb>=92 && s2zb<=100){
				s2oc = 10;
			}
			else{
				s2oc = 1;
			}
	
				 if(s3zb>=55 && s3zb<65){
				s3oc = 6;
			}
			else if(s3zb>=65 && s3zb<75){
				s3oc = 7;
			}
			else if(s3zb>=75 && s3zb<85){
				s3oc = 8;
			}
			else if(s3zb>=85 && s3zb<92){
				s3oc = 9;
			}
			else if(s3zb>=92 && s3zb<=100){
				s3oc = 10;
			}
			else{
				s3oc = 1;
			}
			
			 	 if((s1zb+E)<55 && (s2zb+E)<55 && (s3zb+E)<55){
			 		printf(""Nijedan student nije polozio.\n"");
			 }
			else if((s1zb+E)>=55 && (s2zb+E)>=55 && (s3zb+E)>=55){
					printf(""Sva tri studenta su polozila.\n"");
			}
			else if((s1zb+E)>=55 && (s2zb+E)<55 && (s3zb+E)<55){
					printf(""Jedan student je polozio.\n"");
			}
			else if((s1zb+E)<55 && (s2zb+E)>=55 && (s3zb+E)<55){
					printf(""Jedan student je polozio.\n"");
			}
			else if((s1zb+E)<55 && (s2zb+E)<55 && (s3zb+E)>=55){
					printf(""Jedan student je polozio.\n"");
			}
			else {
				printf(""Dva studenta su polozila."");
			}
		if((s1zb+E)>=55 && (s2zb+E)>=55 && (s3zb+E)>=55){
				 if ((s1oc==s2oc)&&(s2oc==s3oc)&&(s3oc==s1oc)){
				printf(""Sva tri studenta imaju istu ocjenu."");	
			}
			else if((s1oc!=s2oc)&&(s2oc!=s3oc)&&(s3oc!=s1oc)){
				printf(""Svaki student ima razlicitu ocjenu."");
			}
			else {
				printf(""Dva od tri studenta imaju istu ocjenu."");
			}
		}
}","#include <stdio.h>
#define E 0.0001

int main() {
	float s1p1, s1p2, s1pr, s1dz, s1zi, s2p1, s2p2, s2pr, s2dz, s2zi, s3p1, s3p2, s3pr, s3dz, s3zi, s1zb, s2zb, s3zb, s1oc, s2oc, s3oc;
	printf(""Unesite bodove za Tarika: \n"");
	printf(""I parcijalni ispit: "");
		scanf(""%f"", &s1p1);
		if (s1p1<0||s1p1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
		scanf(""%f"", &s1p2);
		if (s1p2<0||s1p2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
		scanf(""%f"", &s1pr);
		if (s1pr<0||s1pr>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
		scanf(""%f"", &s1dz);
		if (s1dz<0||s1dz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
		scanf(""%f"", &s1zi);
		if (s1zi<0||s1zi>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Bojana: \n"");
	printf(""I parcijalni ispit: "");
		scanf(""%f"", &s2p1);
		if (s2p1<0||s2p1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
		scanf(""%f"", &s2p2);
		if (s2p2<0||s2p2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
		scanf(""%f"", &s2pr);
		if (s2pr<0||s2pr>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
		scanf(""%f"", &s2dz);
		if (s2dz<0||s2dz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
		scanf(""%f"", &s2zi);
		if (s2zi<0||s2zi>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Unesite bodove za Mirzu: \n"");
	printf(""I parcijalni ispit: "");
		scanf(""%f"", &s3p1);
		if (s3p1<0||s3p1>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""II parcijalni ispit: "");
		scanf(""%f"", &s3p2);
		if (s3p2<0||s3p2>20) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Prisustvo: "");
		scanf(""%f"", &s3pr);
		if (s3pr<0||s3pr>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zadace: "");
		scanf(""%f"", &s3dz);
		if (s3dz<0||s3dz>10) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	printf(""Zavrsni ispit: "");
		scanf(""%f"", &s3zi);
		if (s3zi<0||s3zi>40) {
		printf(""Neispravan broj bodova"");
		return 0;
	}
	s1zb = s1p1 + s1p2 + s1dz + s1pr + s1zi;
	s2zb = s2p1 + s2p2 + s2dz + s2pr + s2zi;
	s3zb = s3p1 + s3p2 + s3dz + s3pr + s3zi;
	
	
				 if(s1zb>=55 && s1zb<65){
				s1oc = 6;
			}
			else if(s1zb>=65 && s1zb<75){
				s1oc = 7;
			}
			else if(s1zb>=75 && s1zb<85){
				s1oc = 8;
			}
			else if(s1zb>=85 && s1zb<92){
				s1oc = 9;
			}
			else if(s1zb>=92 && s1zb<=100){
				s1oc = 10;
			}
			else{
				s1oc = 1;
			}
	
				 if(s2zb>=55 && s2zb<65){
				s2oc = 6;
			}
			else if(s2zb>=65 && s2zb<75){
				s2oc = 7;
			}
			else if(s2zb>=75 && s2zb<85){
				s2oc = 8;
			}
			else if(s2zb>=85 && s2zb<92){
				s2oc = 9;
			}
			else if(s2zb>=92 && s2zb<=100){
				s2oc = 10;
			}
			else{
				s2oc = 1;
			}
	
				 if(s3zb>=55 && s3zb<65){
				s3oc = 6;
			}
			else if(s3zb>=65 && s3zb<75){
				s3oc = 7;
			}
			else if(s3zb>=75 && s3zb<85){
				s3oc = 8;
			}
			else if(s3zb>=85 && s3zb<92){
				s3oc = 9;
			}
			else if(s3zb>=92 && s3zb<=100){
				s3oc = 10;
			}
			else{
				s3oc = 1;
			}
			
			 	 if((s1zb+E)<55 && (s2zb+E)<55 && (s3zb+E)<55){
			 		printf(""Nijedan student nije polozio.\n"");
			 }
			else if((s1zb+E)>=55 && (s2zb+E)>=55 && (s3zb+E)>=55){
					printf(""Sva tri studenta su polozila.\n"");
			}
			else if((s1zb+E)>=55 && (s2zb+E)<55 && (s3zb+E)<55){
					printf(""Jedan student je polozio.\n"");
			}
			else if((s1zb+E)<55 && (s2zb+E)>=55 && (s3zb+E)<55){
					printf(""Jedan student je polozio.\n"");
			}
			else if((s1zb+E)<55 && (s2zb+E)<55 && (s3zb+E)>=55){
					printf(""Jedan student je polozio.\n"");
			}
			else {
				printf(""Dva studenta su polozila."");
			}
		if((s1zb+E)>=55 && (s2zb+E)>=55 && (s3zb+E)>=55){
				 if ((s1oc==s2oc)&&(s2oc==s3oc)&&(s3oc==s1oc)){
				printf(""Sva tri studenta imaju istu ocjenu."");	
			}
			else if((s1oc!=s2oc)&&(s2oc!=s3oc)&&(s3oc!=s1oc)){
				printf(""Svaki student ima razlicitu ocjenu."");
			}
			else {
				printf(""Dva od tri studenta imaju istu ocjenu."");
			}
		}
}"
3265,82,82,0,106,A2016/Z4/Z1/student6877,A2016/Z4/Z1/student1453,"#include <stdio.h>
void unesi (char niz[] , int velicina){
	char znak;
	int i=0;
	znak = getchar();
	if (znak=='\n') znak= getchar();
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
int uporedi (char *string1, char *string2, int velicina1, int velicina2){
	char *p1=string1;
	char *p2=string2;
	int i;
	if (velicina1!=velicina2) return 0;
	else {
		for(i=0;i<velicina1-1;i++)
		{
			if(*(p1+i)>='A' && *(p1+i)<='Z'){
			if(*(p1+i)+32!=*(p2+i)) return 0;
		    continue;
			}
		    if(*(p2+i)>='A' && *(p2+i)<='Z'){
		    if(*(p2+i)!=*(p2+i)+32) return 0;
		    continue;
		    }
		if(*(p1+i)!=*(p2+i)) return 0;
		}
		
	}
	return 1;
}
char* izbaci_najcescu(char *s){
	char*p , *pokazivac[100];
	int i=0,j=0,brojac_slova[100]={0},brojac_rijeci=1,brojac_najcesce[100]={0};
	p=s;
	pokazivac[j]=p;
	if (*p!='\0') return NULL;
	while(*p!='\0'){
		if ((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127)){
			brojac_rijeci++;
			do{
				p++;
			}while((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127));
			i++;
			j++;
			pokazivac[j]=p;
			continue;
		}
		brojac_slova[i]++;
		p++;
	}
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(uporedi(pokazivac[i],pokazivac[j],brojac_slova[i],brojac_slova[j]))
			brojac_najcesce[i]++;
		}
	}
	int max;
	max=0;
	for(i=0;i<brojac_rijeci;i++){
		if(brojac_najcesce[i]>brojac_najcesce[max]) max=i; 
	}
	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(uporedi(pokazivac[max],pokazivac[i],brojac_slova[max],brojac_slova[i])){
			p=pokazivac[i];
			if(i==brojac_rijeci-1){
				*p='\0';
				break;
			}
			while(*p!='\0'){
				*p=*p(brojac_slova[i]);
				if(*p=='\0') break;
				p++;
			}
			do{
				pokazivac[i]++;
			}while((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pokazivac[j]-=brojac_slova[i];
			}
			
		}
	}
	p=pokazivac[max];
	while (*p!='\0') {
		*p=*p(brojac_slova[max]);
		if(*p=='\0') break;
		p++;
	}
		
	return s;	
	
	
}
	
	



int main() {
	char tekst[]=""asd ddd asd  ddd asd trzhrth"";
	printf(""%s"",izbaci_najcescu(tekst));
	
	return 0;
}
","#include <stdio.h>

void unesi(char niz[], int velicina){
	char znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\0'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}

int uporedi(char *rijec1, char *rijec2,int vel1,int vel2){
	int i;
	char*p1=rijec1, *p2=rijec2;
	if(vel1!=vel2)
		return 0;
	else{
		for(i=0;i<vel1-1;i++){
			if(*(p2+i)>='A'&&*(p2+i)<='Z'&&*(p1+i)>='A'&&*(p1+i)<='Z'){
				if(*(p1+i)+32!=*(p2+i)+32)
					return 0;
				continue;
			}
			if(*(p1+i)>='A'&&*(p1+i)<='Z'){
				if(*(p1+i)+32!=*(p2+i))
					return 0;
				continue;
			}
			
			
			if(*(p2+i)>='A'&&*(p2+i)<='Z'){
				if(*(p1+i)!=*(p2+i)+32)
					return 0;
				continue;
			}
			
			
			
			if(*(p1+i)!=*(p2+i))
					return 0;
			
			
			
			
		}
	}
	return 1;
}




char* izbaci_najcescu(char *s){
	char *p, *pok[500];
	int i=0, j=0,brojac_slova[500]={0}, brojac_rijeci=1, brojac_najcesce[500]={0};
	p=s;
	pok[j]=p;
	if(*p=='\0')
		return NULL;
	while(*p!='\0'){
		if((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127)){
			brojac_rijeci++;
			do{
				p++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			j++;
			i++;
			pok[j]=p;
			continue;
		}
		brojac_slova[i]++;
		p++;
	}
	// daje nam broj slova za svaku rijec i stavlja pokazivac na svaku rijec
	
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(uporedi(pok[i], pok[j],brojac_slova[i], brojac_slova[j]))
				brojac_najcesce[i]++;
		}
	}
	//do sad je u niz brojac_najcece[i] ubacilo vrijednosti koliko puta se ponavlja rijec na mijestu u stringu s
	
	int max;
	max=0;
	for(i=0;i<brojac_rijeci;i++){
		if(brojac_najcesce[i]>brojac_najcesce[max]) 	
			max=i;
	}
	// pronasli smo za sad clan najcesce rijeci

	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(uporedi(pok[max], pok[i], brojac_slova[max], brojac_slova[i])){
			p=pok[i];
			if(i==brojac_rijeci-1){
				*p='\0';
				break;
			}
			while(*p!='\0'){
				*p=*(p+brojac_slova[i]);	
				if(*p=='\0') break;
				p++;
			}
			do{
				pok[i]++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pok[j]-=brojac_slova[i];
				
			}
			
		}
		
	}
	//izbacene su sve rijeci koje se ponavljaju osim prve
	p=pok[max];
	while(*p!='\0'){
		*p=*(p+brojac_slova[max]);	
		if(*p=='\0') break;
		p++;
	}
	
	return s;
}	
	
int main() {
	char tekst[]=""1PsT1 psT2 3Pst pstpst pst"";
	printf(""%s"",izbaci_najcescu(tekst));
	return 0;
}
"
3275,98,98,0,80,A2016/Z3/Z2/student3978,A2016/Z3/Z2/student5829,"#include <stdio.h>
#include <stdlib.h>
int suma (int p1){
	int s=0;
	while (p1>0)
	{
		s=s+p1%10;
		p1=p1/10;
	}
	return s;
}

void ubaci(int niz[], int n){
	int *p, i, *q, p1;
	for (i=n-1; i>=0; i--)	{
		q=niz+i;
		p=niz+i*2;
		*p=(*q);
	}
	
	for (i=0; i<2*n; i=i+2){
		p=niz+i;
		q=p+1;
		p1=abs(*p);
		*q=suma(p1);}
	
}
int izbaci (int niz[], int n)
{
	int niz1[1111]={0}, MAX, i=0, j, k=2, w, z, m=niz[0];
	for (i=0; i<n; i++)	{
		if (m<niz[i]){
			m=niz[i];
		}
	}
	
	
	MAX=m;
	niz1[0]=1; niz1[1]=1;
	for (j=2; j<1111; j++){
		niz1[j]=niz1[j-2]+niz1[j-1];
		k++;
		if (niz1[j]>MAX){
			break;
		}
	}
		k--;
		w=n;
		i=0;
		for (i=0; i<w; i++){
			for (j=1; j<k; j++){
				if (niz[i]==niz1[j])	{
					for (z=i; z<w-1; z++)
					{
						niz[z]=niz[z+1];
					}
						w--;
						i--;
						break;
				}
			}
		}
			return w;
		
}

int main() {
	int niz[20], i, n=10, a, b;
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0; i<n; i++)
	{
		scanf (""%d"", &niz[i]);
	}
	ubaci (niz, n);
	a=2*n;
	b=izbaci (niz, a);
	printf (""Modificirani niz glasi: "");
	for (i=0; i<b-1; i++)
	{
		printf (""%d, "", niz[i]);
	}
	printf (""%d."", niz[i]);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
int suma (int p1){
	int s=0;
	while (p1>0)
	{
		s=s+p1%10;
		p1=p1/10;
	}
	return s;
}

void ubaci(int niz[], int n){
	int *p, i, *q, p1;
	for (i=n-1; i>=0; i--)	{
		q=niz+i;
		p=niz+i*2;
		*p=(*q);
	}
	
	for (i=0; i<2*n; i=i+2){
		p=niz+i;
		q=p+1;
		p1=abs(*p);
		*q=suma(p1);}
	
}
int izbaci (int niz[], int n)
{
	int niz1[1111]={0}, MAX, i=0, j, k=2, w, z, m=niz[0];
	for (i=0; i<n; i++)	{
		if (m<niz[i]){
			m=niz[i];
		}
	}
	
	
	MAX=m;
	niz1[0]=1; niz1[1]=1;
	for (j=2; j<1111; j++){
		niz1[j]=niz1[j-2]+niz1[j-1];
		k++;
		if (niz1[j]>MAX){
			break;
		}
	}
		k--;
		w=n;
		i=0;
		for (i=0; i<w; i++){
			for (j=1; j<k; j++){
				if (niz[i]==niz1[j])	{
					for (z=i; z<w-1; z++)
					{
						niz[z]=niz[z+1];
					}
						w--;
						i--;
						break;
				}
			}
		}
			return w;
		
}

int main() {
	int niz[20], i, n=10, a, b;
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0; i<n; i++)
	{
		scanf (""%d"", &niz[i]);
	}
	ubaci (niz, n);
	a=2*n;
	b=izbaci (niz, a);
	printf (""Modificirani niz glasi: "");
	for (i=0; i<b-1; i++)
	{
		printf (""%d, "", niz[i]);
	}
	printf (""%d."", niz[i]);
	return 0;
}"
3282,48,48,0,20,A2016/Z2/Z2/student5830,A2016/Z2/Z2/student2513,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define PI 3.1415926
int main() {
	double a[500],us;
	int n,i,j,step,min,sec;
	

	printf(""Unesite broj uglova: "");
	scanf(""%d"",&n);
	for(i=0;i<n;i++)
	{
		scanf(""%lf"",&a[i]);
	}
	printf(""Uglovi su:\n"");
	
	for(i=0;i<n;i++)
	{if(a[i]<0){us=-(((a[i]*180)/PI)*3600);}else{
			us=(((a[i]*180)/PI)*3600);}
	    us=(int)(us+0.5);
	    step=us/3600;
	    min=(us-step*3600)/60;
	    sec=(us-3600*step-60*min);
	    if(sec>=60){min++; sec=sec-60;}
	    if(min>=60){step++; min=min-60;}

		if(sec>30){
			for(j=i;j<n-1;j++)
			{
				a[j]=a[j+1];
			}
		n--;
		i--;
}
	}
	for(i=0;i<n;i++)
	{
if(a[i]<0){us=-(((a[i]*180)/PI)*3600);}else{
			us=(((a[i]*180)/PI)*3600);}

	    us=(int)(us+0.5);
	    step=us/3600;
	    min=(us-step*3600)/60;
	    sec=us-3600*step-60*min;
	    if(sec>=60){min++; sec=sec-60;}
	    if(min>=60){step++; min=min-60;}
	    if(a[i]<0){step=-step;}
			printf(""%d stepeni %d minuta %d sekundi\n"",step,min,sec);
	}

	return 0;
}
","#include <stdio.h>
#include <math.h>
#define PI 3.1415926
int main() {
    int a, deg, min, sec, j, i;
    double niz[500], tot=0;
    printf(""Unesite broj uglova: "");
    scanf(""%d"", &a);
    
    for(j=0;j<a;j++){
      scanf(""%lf"",&niz[j]);  
    }
    printf(""Uglovi su:\n"");
    for(j=0;j<a;j++){
        tot=fabs(niz[j])*(180/PI)*3600;
        tot=(int)(tot+0.5);
        deg=tot/3600;
        min=(tot-deg*3600)/60;
        sec=(tot-deg*3600-min*60);
    
        if(sec>=60){
            min++;
            sec=sec-60;}
        
        if(min>=60){
            deg++;
            min=min-60;
        }
        if(sec<=30){
            if(niz[j]<0) 
            printf(""-%d stepeni %d minuta %d sekundi\n"",deg, min, sec);
            else {
                printf(""%d stepeni %d minuta %d sekundi\n"",deg, min, sec);
            }
        } if(sec>30) {
            for(i=j; i<a-1; i++) {
                niz[i]=niz[i+1];
            } a--;
              j--;    
        }
}


	return 0;
}
"
3284,45,45,0,25,A2016/Z1/Z4/student7735,A2016/Z1/Z4/student8796,"#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50){
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1){
		printf(""***"");
		return 0;
	}
	for(i=1;i<n;i++){
		for(j=1;j<i;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*"");
		if(i<2){
				for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
		if(i>=2){
		for(j=1;j<=2*i-3;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<=((n-i)*2)-1;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	}
		if(i==n){
			for(j=1;j<n;j++){
				printf("" "");
			}
			printf(""*"");
		for(j=1;j<=2*n-3;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
	while(n<1 || n>50){
		printf(""Pogresan unos \n"");
		printf(""Unesite broj n: "");
		scanf(""%d"",&n);
	}
	if(n==1){
		printf(""***"");
		return 0;
	}
	for(i=1;i<=n-1;i++){
		for(j=1;j<=i-1;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<((n-i)*2);j++){
			printf("" "");
		}
		printf(""*"");
		if(i<2){
				for(j=1;j<((n-i)*2);j++){
			printf("" "");
		}
		printf(""*\n"");
		}
		if(i>=2){
		for(j=1;j<2*i-2;j++){
			printf("" "");
		}
		printf(""*"");
		for(j=1;j<((n-i)*2);j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	}
		if(i==n){
			for(j=1;j<=n-1;j++){
				printf("" "");
			}
			printf(""*"");
		for(j=1;j<2*n-2;j++){
			printf("" "");
		}
		printf(""*\n"");
		}
	return 0;
}
"
3285,82,82,0,97,A2016/Z4/Z2/student6877,A2016/Z4/Z2/student8540,"#include <stdio.h>
char* kodiraj(char *string,char tablica[96]){
	int znakovi[97]={0},i,max,*p,kraj=0,pozicija=97;
	char *temp=string,*temptab=tablica;
	p=znakovi;
	while(*string!='\0'){
		znakovi[*string-32]++;
		string++;
	}
	while(kraj==0){
		max=0;
		kraj=1;
		for(i=0;i<96;i++){
			if(znakovi[i]>max) {max=znakovi[i]; pozicija=i;}
			if(max!=0) kraj=0;
		}
		znakovi[pozicija]=-1;
		if(max!=0){
		*tablica=(char)(pozicija+32);
		tablica++;
		}
	}
		p=znakovi;
		for(i=0;i<95;i++){
			if(*p==0){
				*tablica=(char)(i+32);
				tablica++;
			}
		p++;
			
		}
		*tablica='\0';
		tablica=temptab;
		string=temp;
		pozicija=0;
		
		while(*string!='\0'){
			tablica=temptab;
			pozicija=0;
			while(*string!=*tablica && *tablica!='\0') {tablica++; pozicija++;}
			*string=(char)(126+pozicija);
			string++;
		}
		string=temp;
		return string;
	
}
char* dekodiraj(char *string, char *tablica){
	char *temp=string;
	char zamjeni=*string;
	int max=0,i;
	int tabela[96]={-1};
	int checked[96]={0};
	int x=1;
	
	while(*string!='\0'){
		checked[*string-32]++;
		string++;
	}
	max=0;
	do{
		max=0;
		for(i=0;i<96;i++){
			if(checked[i]>=max) max=checked[i];
		}
		for(i=95;i<=0;i--){
			if(checked[i]==max){
				zamjeni=i+32;
				break;
			}
		}
		tabela[zamjeni-32]=*tablica;
		checked[zamjeni-32]=0;
		tablica++;
		x=1;
		for(i=0;i<96;i++){
			if(checked[i]!=0) x=0;
		}
	}while(x==0);
	string=temp;
	while(*string!='\0'){
		*string=tabela[*string-32];
		string++;
	}
	return temp;
}
int main() {
	char string[]="""";
	char kodovi[100]="""";
	kodiraj(string,kodovi);
	printf(""%s"",string);
	printf(""\n"");
	printf(""%s"",kodovi);
	dekodiraj(string,kodovi);
	printf(""%s"",string);
	return 0;
}
","#include <stdio.h>
char* kodiraj(char* s,char tablica[96]){
int znakovi[97]={0},*d,end=0,poz=97, max,i=0;
char* temp=s;
char* tmptab=tablica;
d=znakovi;
while(*s!='\0'){
	znakovi[*s-32]++;
	s++;
}
while(end==0){
	max=0;
	end=1;
	for(i=0;i<96;i++){
		if(znakovi[i]>max){max=znakovi[i]; 
		poz=i;}
		if(max!=0){
		end=0;}
		} 
		znakovi[poz]=-1;
		if(max!=0){
			*tablica=(char)(poz+32);
			tablica++;
		}
	}
d=znakovi;
for(i=0;i<95;i++){
	if(*d==0){
		*tablica=(char)(i+32);
			tablica++;
		
	}
	d++;
}
*tablica='\0';
tablica=tmptab;
s=temp;
poz=0;

while(*s!='\0'){
	tablica=tmptab;
	poz=0;
	while(*s != *tablica  && *tablica!='\0'){
	tablica++;
	poz++;}
	*s=(char)(126-poz);
	s++;
}
s=temp;
return s;
	
}

char* dekodiraj(char*s, char* tablica){
	char* temp=s;
	char c=*s;
	int i, max=0, a=1; 
	int cd[96]={0}, tbl[96]={-1};
	
	while(*s!='\0'){
		cd[*s-32]++;
		s++;
	}
	max=0;
	do{
		max=0;
		for(i=0;i<96;i++){
			if(cd[i]>=max){
				max=cd[i];
			}
		}for(i=95;i>=0;i--){
			if(cd[i]==max){
				c=i+32;
				break;
			}
		}
		tbl[c-32]=*tablica;
		cd[c-32]=0;
		tablica++;
		a=1;
		for(i=0;i<96;i++){
			if(cd[i]!=0)a=0;
		}
		
	}while (a==0);
	s=temp;
	while(*s!='\0'){
		*s=tbl[*s-32];
		s++;
	}
	return temp;
}
int main() {
	char t[]=""LLMLNLNMONM"";
	char b[100]="""";
	
	kodiraj(t, b);
	printf(""%s"", t);
	printf(""\n"");
	printf(""%s\n"", b);
	
	dekodiraj(t, b);
	printf(""%s"", t);
	
	return 0;
}"
3287,11,11,0,15,A2016/Z4/Z3/student4575,A2016/Z4/Z3/student5581,"#include <stdio.h>

/* FUNKCIJA koja provjerava da li je slovo */

int da_li_je_slovo(char c){
	if((c>64 && c<91)||(c>96 && c<123)){
		return 1;
	}
	return 0;
}

/* FUNKCIJA koja provjerava da li treba mijenjati */

int da_li_treba_mijenjati(char *tekst, char *rijec){
	char *pocetak=tekst;
	char *pocetak_rijeci=rijec;
	int br=0;
	while(*tekst!='\0' && *rijec!='\0'){
		if(*tekst!=*rijec){
			br=0;
		}
		tekst++;
		rijec++;
	}
	if((*tekst!='\0' && *tekst!=' ')|| *rijec!='\0'){
		br=0;
	}
	tekst=pocetak;
	rijec=pocetak_rijeci;
	return br;
}

/* FUNKCIJA koja minenja */

void zamijeni(char* tekst, char* rijec, char* nova_rijec){
	char *temp=tekst, *rijec_temp=rijec, *nova_temp=nova_rijec, *x=tekst;
	int i, v=0, n=1;
	while(*tekst!='\0'){
		n=0;
		while(*tekst!=*rijec && *tekst!='\0'){
			tekst++;
		}
		if(*tekst!='\0' && (tekst==temp || *(tekst-1)==' ') && da_li_treba_mijenjati(tekst, rijec)){
			while(*nova_rijec!='\0'){
				if(*tekst==' ' || *tekst=='\0'){
					x=tekst;
					while(*tekst!='\0'){
						tekst++;
					}
					tekst++;
					while(tekst>x){
						*tekst=*(tekst-1);
						tekst--;
					}
				}
				*tekst=*nova_rijec;
				tekst++;
				nova_rijec++;
			}
			n=1;
		}
		if(*tekst!=' ' && *tekst!='\0' && n==1){
			x=tekst;
			while(*tekst!='\0' && *tekst!=' '){
				v++;
				tekst++;
			}
			tekst=x;
			for(i=0;i<v;i++){
				tekst=x;
				while(*tekst!='\0'){
					*tekst=*(tekst+1);
					tekst++;
				}
			}
			tekst=x;
		}
		if(*tekst!='\0' && *tekst!=' '){
			tekst++;
		}
		rijec=rijec_temp;
		nova_rijec=nova_temp;
	}
	tekst=temp;
	rijec=rijec_temp;
	nova_rijec=nova_temp;
}

/* FUNKCIJA koja mijenja rijeci */

char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	char *temp_tekst=tekst;
	int i;
	for(i=0;i<broj_rijeci;i++){
		tekst=temp_tekst;
		while(*tekst!='\0'){
			while(*tekst==' ' && *tekst!='\0'){
				tekst++;
			}
			if(da_li_treba_mijenjati(tekst, rijeci[i])){
				zamijeni(tekst, rijeci[i], zamjene[i]);
			}
			while(*tekst!='\0' && *tekst!=' '){
				tekst++;
			}
		}
	}
	return temp_tekst;
}

/* FUNKCIJA main */

int main() {
	char* rijeci[2]={ """", """" };
	char* zamjene[2]={ """", """" };
	char tekst[100]="""";
	printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

/*duzina stringa*/
int duzina_stringa (char *s) {
	
	int duzina=0;
	while (*s != '\0'){
		
		duzina++;
		s++;
	}
	
	return duzina;
}

/*funkcija koja pronalazi određenu riječ u stringu i vraća pokazivač na početak te riječi*/
char* trazi_rijec (char* s, char* rijec){
	
	while (*s != '\0'){
		while (*s == ' ') {
			s++;
		}
		char* p=s;
		char* a=s;
		char* q=rijec;
		
		while (*p++ == *q++) {
			if (*q == '\0' && (*p == ' ' || *p == '\0')) {
				return a;
			}
		}
		while (*s != '\0' && *s != ' '){
			s++;
		}
	}
	
	return NULL;
}

/*funkcija koja vraća broj riječi*/
int broj_rijeci1 (char* s)
{

	int neslovo=1, broj_rijeci1=0;

	while(*s != '\0') {

		if (!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))) {
			neslovo=1;
		} 
		else if (neslovo == 1) {

			neslovo=0;
			broj_rijeci1++;
		}
		s++;
	}

	return broj_rijeci1;
}

/*funkcija zamjena_rijeci*/
char* zamjena_rijeci (char* tekst, char** rijeci, char** zamjene, int broj_rijeci){
	
	int duzina;
	int i,j;
	
	if (duzina_stringa(tekst)==0 || broj_rijeci==0){
		return tekst;
	}
	
	
	for (j=0; j<broj_rijeci1(tekst); j++){
		for (i=0; i<broj_rijeci; i++){
			
			char* a;
			char* pok;
			a=trazi_rijec(tekst, rijeci[i]);
			
			if (a==NULL){
				continue;
			}
			
			duzina=duzina_stringa(zamjene[i])-duzina_stringa(rijeci[i]);
			
			/*slučaj kada je riječ koja se mijenja kraća od riječi sa kojom se mijenja*/
			if (duzina>=0) {
				
				char* kraj = a;
				while (*kraj != '\0') {
					kraj++;
				}
				
				/*ubacuje slobodna mjesta*/
				while (kraj>a) {
					*(kraj+duzina) = *kraj;
					kraj--;
				}
				/*prepisuje zamjenu preko riječi*/
				pok=zamjene[i];
				while (*pok != '\0') {
					*a=*pok;
					pok++;
					if (*pok != '\0') {
						a++;
					}
				}
			}
			
			/*slučaj kada je riječ koja se mijenja duža od riječi sa kojom se mijenja*/
			if(duzina<0){
				
				duzina=abs(duzina);
				
				/*izbacuje višak karaktera u riječi koja se mijenja*/
				char* pocetak=a;
				char* kraj=a+duzina;
				while (*pocetak++=*kraj++);
				
				/*prepisuje zamjenu preko riječi*/
				char* pocetak1=a;
				char* zamjena=zamjene[i];
				while (*zamjena != '\0'){
					*pocetak1=*zamjena;
					pocetak1++;
					zamjena++;
				}
			}
			
			a++;
		}
	}
	return tekst;
}
	
int main (){

char* rijeci[2] = { ""auto"", ""stop"" };
char* zamjene[2] = { ""vozilo"", ""start"" };
char tekst[100] = ""auto-stop auto. stop auto kj stop"";
printf (""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 2));

	return 0;
}
"
3297,84,84,0,55,A2016/Z2/Z4/student5789,A2016/Z2/Z4/student3671,"#include <stdio.h>
#include<stdlib.h>

int main() {
	int M,N;
	int i,j;
 	int cirkularna, teplicova;
 	cirkularna=1;
 	teplicova=1;
 	double m[100][100];

do
{
printf(""Unesite M i N: "");
scanf(""%d %d"" , &M, &N);
if(M>100 || N>100 || M<=0 || N<=0) { printf(""Pogresan unos!\n""); }
}while(M>100 || N>100 || M<=0 || N<=0);



printf(""Unesite elemente matrice: "");
	
for(i=0 ; i<M ; i++)
	{
	for(j=0 ; j<N ; j++)
	{
		scanf(""%lf"" , &m[i][j]);		
	}
	}
	
	
for(i=1 ; i<M ; i++)
	{
	for(j=1 ; j<N ; j++)
	{
	 if((m[i][j]!=m[i-1][j-1]))
	 {
	 	teplicova=0;
	
	 	}
	}	
}

for(i=1 ; i<M ; i++)
	{
	
	 if((m[i][0]!=m[i-1][N-1]))
	 {
	 	cirkularna=0;
	 	break;
	 	}
	
}


if(cirkularna && teplicova)
{
	printf(""Matrica je cirkularna\n"");
}

else if(teplicova && cirkularna==0)
{
	printf(""Matrica je Teplicova\n"");
}
	
else
{
	printf(""Matrica nije ni cirkularna ni Teplicova"");
}
	


	return 0;
}
","#include <stdio.h>

int main() {
	double matrica[100][100];
	int i,j,M,N,teplicova=1,cirkularna=1;
	do
	{
		printf(""Unesite M i N: "");
		scanf(""%d %d"", &M,&N);
		if(M<=0 || M>100 || N<=0 || N>100)
		{
			printf(""Pogresan unos!\n"");
		}
	}while(M<=0 || M>100 || N<=0 || N>100);
	
	printf(""Unesite elemente matrice: "");
	for(i=0;i<M;i++)
	{
		for(j=0;j<N;j++)
		{
		
			scanf(""%lf"", &matrica[i][j]);
		}
	}
	for(i=1;i<M;i++)
	{
		for(j=1;j<N;j++){
			if(matrica[i][j] != matrica[i-1][j-1])
			{
				teplicova=0;
			}
		}
	}
	
	for(i=1;i<M;i++)
	{
		if(matrica[i][0] != matrica[i-1][N-1])
		{
			cirkularna=0;
			break;
		}
	}
	if(cirkularna && teplicova)
	{printf(""Matrica je cirkularna"");}
	else if(teplicova && cirkularna==0)
	{printf(""Matrica je Teplicova"");}
	else {printf(""Matrica nije ni cirkularna ni Teplicova"");}
	return 0;
}
"
3300,99,99,0,78,A2016/Z3/Z2/student2142,A2016/Z3/Z2/student5961,"#include <stdio.h>

int fibonacci(int broj) {
	int i = 0, niz[20000], jeste =0;
	do {
		if (i == 0 || i == 1){
			niz[i] = 1;
		}
		else niz[i] = niz [i-1] + niz[i-2];
		if (broj == niz[i]){
			jeste = 1;
			break;
		}
	}while (niz[i++] < broj);
	return jeste;
}

void ubaci(int* p, int vel) {
    int var, djeljitelj, *q, *d, i = 0;
    q = p;
    while (q < p + 2*vel-1){
    	djeljitelj = 1;
    	d = q + vel-i-1;
    	while (d >= q){
    		*(d+1) = *d;
    		d--;
    	}
    	if (*q < 0) var = -*q;
    	else var = *q;
    	while (var >= 10){
    		var /= 10;
    		djeljitelj *= 10;
    	}
    	if (*q < 0) var = -*q;
    	else var = *q;
    	*(q+1) = 0;
    	while (djeljitelj >= 1){
    		*(q+1) += var/djeljitelj;
    		var = var-(var/djeljitelj)*djeljitelj;
    		djeljitelj /= 10;
    	}
        i++;
    	q += 2;
    }
}

int izbaci(int* p, int vel) {
	int *q, *d;
	q = p;
	while (q < p + vel){
		if (fibonacci(*q)){
			d = q;
			while (d < (p + vel - 1)){
				*d = *(d+1);
				d++;
			}
			q--;
			vel--;
		}
		q++;
	}
	return vel;
}

int main() {
	int niz[20000], i, j;
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0; i<10; i++){
	    scanf (""%d"", &niz[i]);
	}
	ubaci(niz, i);
	i = i*2;
	i = izbaci(niz, i);
	printf (""Modificirani niz glasi: "");
	for (j=0; j<i; j++){
		printf (""%d"", niz[j]);
		if (j != i-1) {
			printf ("", "");
		}
		if (j == i-1) printf (""."");
	}
	return 0;
}","#include <stdio.h>

int fibonacci(int broj) {
	int i = 0, niz[20000], jeste =0;
	do {
		if (i == 0 || i == 1){
			niz[i] = 1;
		}
		else niz[i] = niz [i-1] + niz[i-2];
		if (broj == niz[i]){
			jeste = 1;
			break;
		}
	}while (niz[i++] < broj);
	return jeste;
}

void ubaci(int* p, int vel) {
    int var, djeljitelj, *q, *d, i = 0;
    q = p;
    while (q < p + 2*vel-1){
    	djeljitelj = 1;
    	d = q + vel-i-1;
    	while (d >= q){
    		*(d+1) = *d;
    		d--;
    	}
    	if (*q < 0) var = -*q;
    	else var = *q;
    	while (var >= 10){
    		var /= 10;
    		djeljitelj *= 10;
    	}
    	if (*q < 0) var = -*q;
    	else var = *q;
    	*(q+1) = 0;
    	while (djeljitelj >= 1){
    		*(q+1) += var/djeljitelj;
    		var = var-(var/djeljitelj)*djeljitelj;
    		djeljitelj /= 10;
    	}
        i++;
    	q += 2;
    }
}

int izbaci(int* p, int vel) {
	int *q, *d;
	q = p;
	while (q < p + vel){
		if (fibonacci(*q)){
			d = q;
			while (d < (p + vel - 1)){
				*d = *(d+1);
				d++;
			}
			q--;
			vel--;
		}
		q++;
	}
	return vel;
}

int main() {
	int niz[20000], i, j;
	printf (""Unesite niz od 10 brojeva: "");
	for (i=0; i<10; i++){
	    scanf (""%d"", &niz[i]);
	}
	ubaci(niz, i);
	i = i*2;
	i = izbaci(niz, i);
	printf (""Modificirani niz glasi: "");
	for (j=0; j<i; j++){
		printf (""%d"", niz[j]);
		if (j != i-1) {
			printf ("", "");
		}
		if (j == i-1) printf (""."");
	}
	return 0;
}"
3307,99,99,0,82,A2016/Z3/Z3/student3301,A2016/Z3/Z3/student2526,"#include <stdio.h>

	
int main() {
	int matrica[200][200],j,M,N,i,k=0,m,n,temp;
	int brojac=0;
	
	/* Unos dimenzija matrice */ 
	
	do{
	printf (""Unesite brojeve M i N:"");
	scanf (""%d %d"",&M,&N);
	if (M<1||M>200||N<1||N>200) printf ("" Brojevi nisu u trazenom opsegu.\n"");
	}while(M<1||M>200||N<1||N>200);
	
	/* Unos elemenata matrice */ 
	
	printf ("" Unesite elemente matrice: "");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			scanf (""%d"",&matrica[i][j]);
		}
	}
	
	/* Poredenje i izbacivanje redova*/ 
	
	for (i=0;i<M;i++){
		for (j=i+1;j<M;j++)
		{
			brojac=0;
			for (k=0;k<N;k++){
				if(matrica[i][k]==matrica[j][k]){
					brojac++;
				}
				if(brojac==N){
					for (m=j+1;m<M;m++){ 
						for (n=0;n<N;n++){
							temp=matrica[m-1][n];
						    matrica[m-1][n]=matrica[m][n];
						    matrica[m][n]=temp;
						}
					}
					M--;
					j--;
				}
			}
		}
	}
	
	/* Poredenje i izbacivanje kolona*/ 
	
	for (i=0;i<N;i++){
		for (j=i+1;j<N;j++){
			brojac=0;
			for (k=0;k<M;k++){
				if(matrica[k][i]==matrica[k][j]){
					brojac++;
				}
				if(brojac==M){
					for (m=j+1;m<N;m++){ 
						for (n=0;n<M;n++){
							temp=matrica[n][m-1];
						    matrica[n][m-1]=matrica[n][m];
						    matrica[n][m]=temp;
						}
					}
					N--;
					j--;
				}
			}
		}
	}	
	
	/* Ispis matrice nakon izbacivanja  */ 
	
	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			printf (""%5d"",matrica[i][j]);
		}
		printf(""\n"");
	}
	

	return 0;
}
","#include <stdio.h>

	
int main() {
	int matrica[200][200],j,M,N,i,k=0,m,n,temp;
	int brojac=0;
	
	/* Unos dimenzija matrice */ 
	
	do{
	printf (""Unesite brojeve M i N:"");
	scanf (""%d %d"",&M,&N);
	if (M<1||M>200||N<1||N>200) printf ("" Brojevi nisu u trazenom opsegu.\n"");
	}while(M<1||M>200||N<1||N>200);
	
	/* Unos elemenata matrice */ 
	
	printf ("" Unesite elemente matrice: "");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			scanf (""%d"",&matrica[i][j]);
		}
	}
	
	/* Poredenje i izbacivanje redova*/ 
	
	for (i=0;i<M;i++){
		for (j=i+1;j<M;j++)
		{
			brojac=0;
			for (k=0;k<N;k++){
				if(matrica[i][k]==matrica[j][k]){
					brojac++;
				}
				if(brojac==N){
					for (m=j+1;m<M;m++){ 
						for (n=0;n<N;n++){
							temp=matrica[m-1][n];
						    matrica[m-1][n]=matrica[m][n];
						    matrica[m][n]=temp;
						}
					}
					M--;
					j--;
				}
			}
		}
	}
	
	/* Poredenje i izbacivanje kolona*/ 
	
	for (i=0;i<N;i++){
		for (j=i+1;j<N;j++){
			brojac=0;
			for (k=0;k<M;k++){
				if(matrica[k][i]==matrica[k][j]){
					brojac++;
				}
				if(brojac==M){
					for (m=j+1;m<N;m++){ 
						for (n=0;n<M;n++){
							temp=matrica[n][m-1];
						    matrica[n][m-1]=matrica[n][m];
						    matrica[n][m]=temp;
						}
					}
					N--;
					j--;
				}
			}
		}
	}	
	
	/* Ispis matrice nakon izbacivanja  */ 
	
	printf (""Nakon izbacivanja redova/kolona matrica glasi: \n"");
	for (i=0;i<M;i++){
		for (j=0;j<N;j++){
			printf (""%5d"",matrica[i][j]);
		}
		printf(""\n"");
	}
	

	return 0;
}
"
3336,99,99,0,99,A2016/Z3/Z2/student7823,A2016/Z3/Z2/student1639,"#include <stdio.h>
#include <stdlib.h>
int izbaci(int *niz, int duzinaNiza);
void ubaci(int *niz, int duzinaNiza);

int sumaCifara(int broj);
int pomjeriNiz(int *niz, int duzinaNiza, int pocetakPomjeranja);
int daLiJeFibonacijevBroj(int broj);
void zamijeniBrojeve (int *a, int *b);
void ispisiNiz(int *niz, int duzinaNiza);
void pomjeriNizNazad(int *niz, int duzina, int pocetakPomjeranja);

int main(){
	//printf(""Zadaća 3, Zadatak 2"");
	int broj,i,j;
	int niz[20];
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<10; i++)
		scanf(""%d"", niz+i);
	ubaci(niz, 10);
	broj= izbaci(niz, 20);
	printf(""Modificirani niz glasi: "");
	
	ispisiNiz(niz, broj);
	
	return 0;
}

int izbaci(int *niz, int duzinaNiza){
	int i;
	for(i=0; i<duzinaNiza; i++){
		if(daLiJeFibonacijevBroj(*(niz+i))==1){
			pomjeriNizNazad(niz, duzinaNiza, i);
			duzinaNiza--;
			i--;
		}
	}
	return duzinaNiza;
}
void ubaci(int *niz, int duzinaNiza){
	int i;
	for(i=0; i<duzinaNiza; i+=2) {
		duzinaNiza= pomjeriNiz(niz, duzinaNiza, i+1);
	}
	for(i=1; i<duzinaNiza; i+=2) {
		*(niz+i)=sumaCifara(*(niz+(i-1)));
	}
}

int sumaCifara(int broj){
	int suma=0;
	broj= abs(broj);
	while(broj!=0) {
		suma+=broj%10;
		broj/=10;
	}
	return suma;
}
int pomjeriNiz(int *niz, int duzinaNiza, int pocetakPomjeranja){
	//Pomjeri niz za ""1"" mjesta od ""pocetakPomjeranja"" gdje je niz ispunjen do ""duzinaNiza""
	int i;
	for(i=duzinaNiza+1; i>pocetakPomjeranja; i--)
		*(niz+i)= *(niz+i-1);
	*(niz+pocetakPomjeranja)= 0;
	return ++duzinaNiza;
}
int daLiJeFibonacijevBroj(int broj){
	int fibonacijev1= 1; 
	int fibonacijev2= 1;
	int temp;
	if(broj<1)
		return 0;
	while(broj>=fibonacijev2){
		if(broj== fibonacijev1 || broj== fibonacijev2)
			return 1;
		temp= fibonacijev1+fibonacijev2;
		fibonacijev1=fibonacijev2;
		fibonacijev2= temp;
	}
	return 0;
}
void zamijeniBrojeve (int *a, int *b){
	int temp;
	temp= *a;
	*a= *b;
	*b= temp;
}
void ispisiNiz(int *niz, int duzinaNiza){
	int i;
	for(i=0; i<duzinaNiza; i++){
		printf(""%d"", *(niz+i));
		if(i==duzinaNiza-1)
			break;
		printf("", "");
	}
	printf(""."");
}
void pomjeriNizNazad(int *niz, int duzina, int pocetakPomjeranja){
	int i;
	for(i=pocetakPomjeranja+1; i<duzina; i++){
		*(niz+(i-1))= *(niz+i);
	}
}
","#include <stdio.h>
#include <stdlib.h>
int izbaci(int *niz, int duzinaNiza);
void ubaci(int *niz, int duzinaNiza);

int sumaCifara(int broj);
int pomjeriNiz(int *niz, int duzinaNiza, int pocetakPomjeranja);
int daLiJeFibonacijevBroj(int broj);
void zamijeniBrojeve (int *a, int *b);
void ispisiNiz(int *niz, int duzinaNiza);
void pomjeriNizNazad(int *niz, int duzina, int pocetakPomjeranja);

int main(){
	int broj,i,j;
	int niz[20];
	printf(""Unesite niz od 10 brojeva: "");
	for(i=0; i<10; i++)
		scanf(""%d"", niz+i);
	ubaci(niz, 10);
	broj= izbaci(niz, 20);
	printf(""Modificirani niz glasi: "");
	
	ispisiNiz(niz, broj);
	
	return 0;
}

int izbaci(int *niz, int duzinaNiza){
	int i;
	for(i=0; i<duzinaNiza; i++){
		if(daLiJeFibonacijevBroj(*(niz+i))==1){
			pomjeriNizNazad(niz, duzinaNiza, i);
			duzinaNiza--;
			i--;
		}
	}
	return duzinaNiza;
}
void ubaci(int *niz, int duzinaNiza){
	int i;
	for(i=0; i<duzinaNiza; i+=2) {
		duzinaNiza= pomjeriNiz(niz, duzinaNiza, i+1);
	}
	for(i=1; i<duzinaNiza; i+=2) {
		*(niz+i)=sumaCifara(*(niz+(i-1)));
	}
}

int sumaCifara(int broj){
	int suma=0;
	broj= abs(broj);
	while(broj!=0) {
		suma+=broj%10;
		broj/=10;
	}
	return suma;
}
int pomjeriNiz(int *niz, int duzinaNiza, int pocetakPomjeranja){
	//Pomjeri niz za ""1"" mjesta od ""pocetakPomjeranja"" gdje je niz ispunjen do ""duzinaNiza""
	int i;
	for(i=duzinaNiza+1; i>pocetakPomjeranja; i--)
		*(niz+i)= *(niz+i-1);
	*(niz+pocetakPomjeranja)= 0;
	return ++duzinaNiza;
}
int daLiJeFibonacijevBroj(int broj){
	int fibonacijev1= 1; 
	int fibonacijev2= 1;
	int temp;
	if(broj<1)
		return 0;
	while(broj>=fibonacijev2){
		if(broj== fibonacijev1 || broj== fibonacijev2)
			return 1;
		temp= fibonacijev1+fibonacijev2;
		fibonacijev1=fibonacijev2;
		fibonacijev2= temp;
	}
	return 0;
}
void zamijeniBrojeve (int *a, int *b){
	int temp;
	temp= *a;
	*a= *b;
	*b= temp;
}
void ispisiNiz(int *niz, int duzinaNiza){
	int i;
	for(i=0; i<duzinaNiza; i++){
		printf(""%d"", *(niz+i));
		if(i==duzinaNiza-1)
			break;
		printf("", "");
	}
	printf(""."");
}
void pomjeriNizNazad(int *niz, int duzina, int pocetakPomjeranja){
	int i;
	for(i=pocetakPomjeranja+1; i<duzina; i++){
		*(niz+(i-1))= *(niz+i);
	}
}

"
3350,61,61,0,80,A2016/Z4/Z4/student3872,A2016/Z4/Z4/student8753,"#include <stdio.h>
void unesi(char niz[], int velicina)
{
	char znak=getchar();
	int i=0;
	if(znak=='\n') znak=getchar();
	while (i<velicina-1 && znak!='\n') {
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
void Broj(char *pok, char *kpok, float *x, float *y)
{
	char *s=pok;
	int negativni;
	double a,b;
	*x=0, *y=0;
	while(s!=kpok)
	{
		s++;
		negativni=0;
		if(*s=='-') {
			negativni=1;
			s++;
		}
		while(*s>='0' && *s<='9')
		{
			*x=*x*10+(*s-'0');
			s++;
		}
		if(*s=='.')
		{
			s++;
			a=0;
			while(*s>='0' && *s<='9')
			{
				a=a*10+(*s-'0');
				s++;
			}
			while(a>=1)
			a=a/10;
			*x+=a;
		}
		if(negativni) *x=*x*(-1);
		if(*s==',') s++;
		negativni=0;
		if(*s=='-') {
			negativni=1; s++;}
			while(*s>='0' && *s<='9')
			{
				*y=*y*10+(*s-'0');
				s++;
			}
			if(*s=='.')
			{
				s++;
				b=0;
				while(*s>='0' && *s<='9')
				{
					b=b*10+(*s-'0');
					s++;
				}
				while (b>=1) 
					b=b/10;
					*y+=b;
					
				}
				if(negativni) *y=*y*(-1);
			}
		}
		
		char *obuhvat(char *s, float x1, float y1, float x2, float y2)
		{
			char *p=s;
			char *pok, *kpok;
			char *izbaci;
			float x,y;
			while(*s!='\0')
			{
				if(*s=='(')
				{
					pok=s;
					while(*s!=')') s++;
					kpok=s;
					Broj(pok, kpok,&x,&y);
					if(x<x1 || x>x2 || y<y1 || y>y2)
					{
						s++;
						while(*s==',') s++;
						izbaci=s;
						while(*izbaci!='\0')
						{*pok++=*izbaci++;
					}
					*pok='\0';
					s=s-(izbaci-pok);
				}
			}
			else s++;
		}
		if(s!=p) s--;
		if(*s==',') *s='\0';
		return p;
		}
int main() {
	char text[100];
	printf(""Unesite neki text: "");
	unesi(text, 100);
	char *novi=text;
	novi=obuhvat(text, -10, -10, 5, 5);
	printf(""%s\n"", text);
	printf(""%s\n"", novi);
	return 0;
}
","#include <stdio.h>

void dbr(char *p,char *k,float *x,float *y)
{
        char *q=p;
        int min;
        float a,b;
        
      *x=0;*y=0;
        
                while (q!=k)
                {
                        q++;min=0;
                        
                        if(*q=='-'){min=1;q++;}
                
                        *x=0;
                        while(*q>='0' && *q<='9')
                        {
                                *x=*x*10+(*q-'0');
                                q++;
                        }
                        if(*q=='.')
                        {
                                q++;a=0;
                                while(*q>='0' && *q<='9')
                                {
                                        a=a*10+(*q-'0');
                                        q++;
                                }
                                while(a>=1)
                                 a/=10;
                                *x=*x+a;
                        }
                        if(min==1) *x*=-1;
                        if(*q==',')q++;
                        min=0;
                        if(*q=='-'){min=1;q++;}
                        *y=0;
                        while(*q>='0' && *q<='9')
                        {
                                *y=*y*10+(*q-'0');
                                q++;
                        }
                        if(*q=='.')
                        {
                                q++;b=0;
                                while(*q>='0' && *q<='9')
                                {
                                        b=b*10+(*q-'0');
                                        q++;
                                }
                                while(b>=1)
                                 b/=10;
                                *y=*y+b;
                        }
                        if(min==1) *y*=-1;
                        
                }
                
        
}


char* obuhvat(char *s,float x1,float y1,float x2,float y2)
{
        char* q=s;
        char *p,*k,*i;
        float x,y;
        while(*q!='\0')
                { 
                        
                    if(*q=='(')
                        {
                          p=q;
                            while(*q!=')')q++;
                          k=q;
                        
                     dbr(p,k,&x,&y);
                        
                
                 if(x<x1 || x>x2 || y<y1 || y>y2)
                        {   
                       q++;
                     while(*q==',')q++;
                               i=q;
                                while(*i!='\0')
                                {
                                  *p++=*i++;
                                }
                                *p='\0';
                                q=q-(i-p);
                        }
                    }else q++;
                                
                }
                
            if(q!=s) q--;
                if(*q==',') *q='\0';
        return s;        
}




int main() {
        
        char s[] = ""(0,-3.1),(-15.09,4),(2.,2),(-1.1,217)"";
        char* rez = obuhvat(s, -3, -3, 3, 3);
        printf(""%s %s\n"", rez, s);
        return 0;
}
"
3354,99,99,0,155,A2016/Z4/Z2/student9315,A2016/Z4/Z2/student4766,"#include <stdio.h>
#include <stdlib.h>

char *kodiraj(char *kodiraj, char *sifra);
char *dekodiraj(char *kodiraj, char *sifra);
void popuniSifru(char *kodiraj, char *sifra);
void swap(char a, char b, char *niz);
void izbaciIzNiza(char znak, char *niz);

void popuniSifru(char *kodiraj, char *sifra){
	char *startKod = kodiraj;
	char *startSifra = sifra;
	char *temp;
	char *max;
	int size = 1;// za \0
	int num = 0;
	int maxVal = 0;
	char *niz;
	char *startNiz;
	char *pokNiz;
	int i = 0,j;
	int min; 
	char trade;
	char location = ' ';
	while(*kodiraj++ != '\0'){
		size++;
	}
	kodiraj = startKod;
	//pravimo niz koji sigurno moze primiti sve znakove za sifru
	niz = (char*)malloc(size * sizeof(char));
	startNiz = niz;
	pokNiz = niz;
	while(*kodiraj != '\0'){
		niz[i++] = *kodiraj++;
	}
	niz[i] = '\0';
	kodiraj = startKod;
	
	for(i = 32; i <= 126; i++){
		*sifra++ = i;
	}
	*sifra = '\0';
	
	//popunjavamo niz po frekvenciji pojavljivanja
	while(*niz != '\0'){
		
	startNiz = niz;
	maxVal = 0;
		while(*startNiz != '\0'){
			
			temp = pokNiz;
			num = 0;
			while(*pokNiz != '\0'){
				
				if(*pokNiz == *startNiz){
					num++;
				}
				
				pokNiz++;
			}
			if(num >= maxVal){
				if(num > maxVal){
					maxVal = num;
					max = startNiz;
				}
				else if(num == maxVal && *startNiz < *max){
					max = startNiz;
				}
			}
			pokNiz = temp;
			
			startNiz++;
		}
		swap(location++, *max, startSifra);
		izbaciIzNiza(*max, niz);
	}	
	//selection sort
	for (i=location - ' '; i<95; i++) {
        min=i;
        for (j=i+1; j<95; j++) {
            if (startSifra[j] < startSifra[min])
                min = j;
        }
        trade = startSifra[i];
        startSifra[i] = startSifra[min];
        startSifra[min] = trade;
    }
    
	free(niz);
}

void izbaciIzNiza(char znak, char *niz){
	char *p = niz;
	char *temp;
	//funkcija izbacuje znak iz niza
	while(*p != '\0'){
		if(*p == znak){
			temp = p;
			while(*p != '\0'){
				*p = *(p+1);
				p++;
			}
			p = temp - 1;
		}
		p++;
	}
}
void swap(char a, char b, char *niz){
	char *p = niz;
	//funkcija mijenja mjesta dva chara u niz
	while(*p != '\0'){
		if(*p == a)
		*p = b;
		else if(*p == b)
		*p = a;
		p++;
	}	
	
}

char *kodiraj(char *kodiraj, char *sifra){
	char *ret = kodiraj;
	char *startSifra = sifra;
	int i = 0;
	//funkcija popunjava sifru za dati string
	popuniSifru(kodiraj, sifra);
	//kodiramo string kodiraj
	while(*kodiraj != '\0'){
		for(i = 0; i < 96; i++){
			if(*kodiraj == sifra[i]){
				*kodiraj = 126 - i;
				break;
			}
		}
		kodiraj++;
	}
	
	return ret;
}

char *dekodiraj(char *kodiraj, char *sifra){
	char *ret = kodiraj;
	int i = 0;
	//suprotno od kodiraj
	while(*kodiraj != '\0'){
		for(i = 0; i < 96; i++){
			if(*kodiraj == 126 - i){
				*kodiraj = sifra[i];
				break;
			}
		}
		kodiraj++;
	}
	
	return ret;
}

int main() {
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>

char *kodiraj(char *kodiraj, char *sifra);
char *dekodiraj(char *kodiraj, char *sifra);
void popuniSifru(char *kodiraj, char *sifra);
void swap(char a, char b, char *niz);
void izbaciIzNiza(char znak, char *niz);

void popuniSifru(char *kodiraj, char *sifra){
	char *startKod = kodiraj;
	char *startSifra = sifra;
	char *temp;
	char *max;
	int size = 1;// za \0
	int num = 0;
	int maxVal = 0;
	char *niz;
	char *startNiz;
	char *pokNiz;
	int i = 0,j;
	int min; 
	char trade;
	char location = ' ';
	while(*kodiraj++ != '\0'){
		size++;
	}
	kodiraj = startKod;
	//pravimo niz koji sigurno moze primiti sve znakove za sifru
	niz = (char*)malloc(size * sizeof(char));
	startNiz = niz;
	pokNiz = niz;
	while(*kodiraj != '\0'){
		niz[i++] = *kodiraj++;
	}
	niz[i] = '\0';
	kodiraj = startKod;
	
	for(i = 32; i <= 126; i++){
		*sifra++ = i;
	}
	*sifra = '\0';
	
	//popunjavamo niz po frekvenciji pojavljivanja
	while(*niz != '\0'){
		
	startNiz = niz;
	maxVal = 0;
		while(*startNiz != '\0'){
			
			temp = pokNiz;
			num = 0;
			while(*pokNiz != '\0'){
				
				if(*pokNiz == *startNiz){
					num++;
				}
				
				pokNiz++;
			}
			if(num >= maxVal){
				if(num > maxVal){
					maxVal = num;
					max = startNiz;
				}
				else if(num == maxVal && *startNiz < *max){
					max = startNiz;
				}
			}
			pokNiz = temp;
			
			startNiz++;
		}
		swap(location++, *max, startSifra);
		izbaciIzNiza(*max, niz);
	}	
	//selection sort
	for (i=location - ' '; i<95; i++) {
        min=i;
        for (j=i+1; j<95; j++) {
            if (startSifra[j] < startSifra[min])
                min = j;
        }
        trade = startSifra[i];
        startSifra[i] = startSifra[min];
        startSifra[min] = trade;
    }
    
	free(niz);
}

void izbaciIzNiza(char znak, char *niz){
	char *p = niz;
	char *temp;
	//funkcija izbacuje znak iz niza
	while(*p != '\0'){
		if(*p == znak){
			temp = p;
			while(*p != '\0'){
				*p = *(p+1);
				p++;
			}
			p = temp - 1;
		}
		p++;
	}
}
void swap(char a, char b, char *niz){
	char *p = niz;
	//funkcija mijenja mjesta dva chara u niz
	while(*p != '\0'){
		if(*p == a)
		*p = b;
		else if(*p == b)
		*p = a;
		p++;
	}	
	
}

char *kodiraj(char *kodiraj, char *sifra){
	char *ret = kodiraj;
	char *startSifra = sifra;
	int i = 0;
	//funkcija popunjava sifru za dati string
	popuniSifru(kodiraj, sifra);
	//kodiramo string kodiraj
	while(*kodiraj != '\0'){
		for(i = 0; i < 96; i++){
			if(*kodiraj == sifra[i]){
				*kodiraj = 126 - i;
				break;
			}
		}
		kodiraj++;
	}
	
	return ret;
}

char *dekodiraj(char *kodiraj, char *sifra){
	char *ret = kodiraj;
	int i = 0;
	//suprotno od kodiraj
	while(*kodiraj != '\0'){
		for(i = 0; i < 96; i++){
			if(*kodiraj == 126 - i){
				*kodiraj = sifra[i];
				break;
			}
		}
		kodiraj++;
	}
	
	return ret;
}

int main() {
	
	return 0;
}
"
3367,99,99,0,24,A2016/Z1/Z4/student8580,A2016/Z1/Z4/student4852,"#include <stdio.h>

int main() {
	int n,i,j;
	do{
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
		if(n<=0||n>50)
		printf(""Pogresan unos\n"");	}
	while(n<=0||n>50);
	if(n==1){
	printf(""***"");
	return 0;}
	
	
	for(i=0;i<n;i++){
		for(j=0;j<4*n-3;j++){
			if(i==j||2*n-2-i==j||2*n-2+i==j||4*n-4-i==j){
			printf(""*"");
			}
			else
			printf("" "");
		}printf(""\n"");
		}

	return 0;
}
","#include <stdio.h>

int main() {
	int n,i,j;
	do{
	printf(""Unesite broj n: "");
	scanf(""%d"",&n);
		if(n<=0||n>50)
		printf(""Pogresan unos\n"");	}
	while(n<=0||n>50);
	if(n==1){
	printf(""***"");
	return 0;}
	
	
	for(i=0;i<n;i++){
		for(j=0;j<4*n-3;j++){
			if(i==j||2*n-2-i==j||2*n-2+i==j||4*n-4-i==j){
			printf(""*"");
			}
			else
			printf("" "");
		}printf(""\n"");
		}

	return 0;
}
"
3370,81,81,0,40,A2016/Z1/Z3/student1278,A2016/Z1/Z3/student9498,"#include <stdio.h>

int main() {
	int c=0,p=0,b=0,s=0,v=0,uk=0;
	float pr;
	char boja=' ';
	printf(""Unesite vozila: "");
	while(boja!='k' || boja!='K'){
		scanf(""%c"",&boja);
			if(boja=='c' || boja=='C'){
				c=c+1;
				uk=uk+1;
			}
			if(boja=='b' || boja=='B'){
				b=b+1;
				uk=uk+1;
			}
			if(boja=='s' || boja=='S'){
				s=s+1;
				uk=uk+1;
			}
			if(boja=='v' || boja=='V'){
				v=v+1;
				uk=uk+1;
			}
			if(boja=='p' || boja=='P'){
				p=p+1;
				uk=uk+1;
			}
			if(boja!='c' && boja!='C' && boja!='b' && boja!='B' && boja!='s' && boja!='S' && boja!='v' && boja!='V' && boja!='p' && boja!='P' && boja!='k' && boja!='K'){
				printf(""Neispravan unos\n"");
			}
			if(boja=='k' || boja=='K'){
				goto l1;
			}
	}
l1:
printf(""Ukupno evidentirano %d vozila.\n"",uk);
if(uk==0){
		printf(""Najpopularnija boja je crna (0.00%%)."");
		return 0;
}
if(c>b  && c>s  && c>v  && c>p){
	pr=((float)c/uk)*100;
	printf(""Najpopularnija boja je crna (%.2f%%)."",pr);
}
if(c<b  && b>s  && b>v  && b>p){
	pr=((float)b/uk)*100;
	printf(""Najpopularnija boja je bijela (%.2f%%)."",pr);	
}
if(c<s  && b<s  && s>v  && s>p){
	pr=((float)s/uk)*100;
	printf(""Najpopularnija boja je siva (%.2f%%)."",pr);	
}
if(c<v  && b<v  && s<v  && v>p){
	pr=((float)v/uk)*100;
	printf(""Najpopularnija boja je crvena (%.2f%%)."",pr);	
}
if(c<p  && b<p  && s<p  && v<p){
	pr=((float)p/uk)*100;
	printf(""Najpopularnija boja je plava (%.2f%%)."",pr);	
}
	return 0;
}
","#include <stdio.h>

int main() {
	int c=0,p=0,b=0,s=0,v=0,uk=0;
	float procenat;
	char boja=' ';
	printf(""Unesite vozila: "");
	while(boja!='k' || boja!='K'){
		scanf(""%c"",&boja);
			if(boja=='c' || boja=='C'){
				c++;
				uk++;
			}
			if(boja=='b' || boja=='B'){
				b++;
				uk++;
			}
			if(boja=='s' || boja=='S'){
				s++;
				uk++;
			}
			if(boja=='v' || boja=='V'){
				v++;
				uk++;;
			}
			if(boja=='p' || boja=='P'){
				p++;
				uk++;
			}
			if(boja!='c' && boja!='C' && boja!='b' && boja!='B' && boja!='s' && boja!='S' && boja!='v' && boja!='V' && boja!='p' && boja!='P' && boja!='k' && boja!='K'){
				printf(""Neispravan unos\n"");
			}
			if(boja=='k' || boja=='K'){
				goto l1;
			}
	}
l1:
printf(""Ukupno evidentirano %d vozila.\n"",uk);
if(uk==0){
		printf(""Najpopularnija boja je crna (0.00%%)."");
		return 0;
}
if(c>=b  && c>=s  && c>=v  && c>=p){
	procenat=((float)c/uk)*100;
	printf(""Najpopularnija boja je crna (%.2f%%)."",procenat);
}
if(c<b  && b>=s  && b>=v  && b>=p){
	procenat=((float)b/uk)*100;
	printf(""Najpopularnija boja je bijela (%.2f%%)."",procenat);	
}
if(c<s  && b<s  && s>=v  && s>=p){
	procenat=((float)s/uk)*100;
	printf(""Najpopularnija boja je siva (%.2f%%)."",procenat);	
}
if(c<v  && b<v  && s<v  && v>=p){
	procenat=((float)v/uk)*100;
	printf(""Najpopularnija boja je crvena (%.2f%%)."",procenat);	
}
if(c<p  && b<p  && s<p  && v<p){
	procenat=((float)p/uk)*100;
	printf(""Najpopularnija boja je plava (%.2f%%)."",procenat);	
}
	return 0;
}"
3376,98,98,0,24,A2016/Z1/Z2/student5673,A2016/Z1/Z2/student2111,"#include <stdio.h>

int main() {
		float a,b,c,d,e,f;
		printf(""Unesite a1,b1,a2,b2: "");
		scanf(""%f,%f,%f,%f"",&a,&b,&c,&d);
		if((a==c) && (b==d)){
			printf(""Poklapaju se"");
			return 0;
		}
		if(a==c){
			printf(""Paralelne su"");
			return 0;
		}
		else{
			e=(d-b)/(a-c);
			f=a*e+b;
			if(f==0.0 && e==0.0){
				printf(""Prave se sijeku u tacci(0.00,0.00"");
				return 0;
			}
			printf(""Prave se sijeku u tacci (%.1f,%.1f)"",e,f);
		}
	return 0;
}
","#include <stdio.h>

int main() {
	float a,b,c,d,xp,yp;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a,&b,&c,&d);
	if((a==c) && (b==d)){
		printf(""Poklapaju se"");
		return 0;
	}
	if(a==c){
		printf(""Paralelne su"");
		return 0;
	}
	
	else {
	xp=(d-b)/(a-c);
	yp=a*xp + b;
	if(yp==0.0 && xp==0.0) {
		printf(""Prave se sijeku u tacci (0.00,0.00)"");
		return 0;
	}
	
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"",xp,yp);
	}
	return 0;

}
"
3380,98,98,0,76,A2016/Z4/Z2/student8085,A2016/Z4/Z2/student4526,"#include <stdio.h>
char* kodiraj(char* tekst, char* tabela)
{
	char *pomocni=tekst;
	char *pomocniTabela;
	int max,j,index;
	int i,temp,brojac=0;
	int pomocniNiz[127]={0};
	
	while(*pomocni!='\0')
	{
		temp=*pomocni;
		pomocniNiz[temp]++;
		pomocni++;
	}
	for(i=0;i<127;i++)
	{
		max=pomocniNiz[i];
		index=i;
		for(j=i;j<127;j++) if(pomocniNiz[j]>max){max=pomocniNiz[j];index=j;}
		if(max!=0)
		{
			tabela[brojac]=index;
			pomocniNiz[index]=-1;
			brojac++;
		}
	}
	
	for(i=32;i<127;i++)
	{
		if(pomocniNiz[i]==0)
		{
			tabela[brojac]=i;
			brojac++;
		}
	}
	tabela[brojac]='\0';
	pomocni=tekst;
	pomocniTabela=tabela;
	brojac=0;
	while(*pomocni!='\0')
	{
		pomocniTabela=tabela;
		brojac=0;
		while(*pomocniTabela!='\0')
		{
			if(*pomocniTabela==*pomocni) break; else brojac++;
			pomocniTabela++;
		}
		*pomocni=126-brojac;
		pomocni++;
	}
	pomocni='\0';
	return tekst;
}

char *dekodiraj(char* tekst,char* tabela)
{
	char* pomocni=tekst;
	while(*pomocni!='\0')
	{
		*pomocni=tabela[126-*pomocni];
		pomocni++;
	}
	return tekst;
}

int main() {
	char tekst[] = ""Ovo cemo sifrirati 2 puta"";
    char sifrarnik[100] = """";
    char sifrarnik2[100] = """";
    int i;
    kodiraj(tekst, sifrarnik);
    printf(""%s"", tekst);
    for (i=0; i<10; i++) printf(""%c"", sifrarnik[i]);
    kodiraj(tekst, sifrarnik2);
    printf(""%s"", tekst);

	return 0;
}
","#include <stdio.h>
char* kodiraj(char* tekst, char* tabela)
{
	char *pomocni=tekst;
	char *pomocniTabela;
	int max,j,index;
	int i,temp,brojac=0;
	int pomocniNiz[127]={0};
	
	while(*pomocni!='\0')
	{
		temp=*pomocni;
		pomocniNiz[temp]++;
		pomocni++;
	}
	for(i=0;i<127;i++)
	{
		max=pomocniNiz[i];
		index=i;
		for(j=i;j<127;j++) if(pomocniNiz[j]>max){max=pomocniNiz[j];index=j;}
		if(max!=0)
		{
			tabela[brojac]=index;
			pomocniNiz[index]=-1;
			brojac++;
		}
	}
	
	for(i=32;i<127;i++)
	{
		if(pomocniNiz[i]==0)
		{
			tabela[brojac]=i;
			brojac++;
		}
	}
	tabela[brojac]='\0';
	pomocni=tekst;
	pomocniTabela=tabela;
	brojac=0;
	while(*pomocni!='\0')
	{
		pomocniTabela=tabela;
		brojac=0;
		while(*pomocniTabela!='\0')
		{
			if(*pomocniTabela==*pomocni) break; else brojac++;
			pomocniTabela++;
		}
		*pomocni=126-brojac;
		pomocni++;
	}
	pomocni='\0';
	return tekst;
}

char *dekodiraj(char* tekst,char* tabela)
{
	char* pomocni=tekst;
	while(*pomocni!='\0')
	{
		*pomocni=tabela[126-*pomocni];
		pomocni++;
	}
	return tekst;
}

int main() {
	char tekst[] = ""Ovo cemo sifrirati 2 puta"";
    char sifrarnik[100] = """";
    char sifrarnik2[100] = """";
    int i;
    kodiraj(tekst, sifrarnik);
    printf(""%s"", tekst);
    for (i=0; i<10; i++) printf(""%c"", sifrarnik[i]);
    kodiraj(tekst, sifrarnik2);
    printf(""%s"", tekst);

	return 0;
}
"
3391,99,99,0,32,A2016/Z2/Z3/student1180,A2016/Z2/Z3/student4973,"#include <stdio.h>

int main() {
	int i,j,n,a,b;
	int mat[20][20]={{0}};
	
	do{
	    printf(""Unesite broj tacaka: "");
    	scanf(""%d"", &n);
    	if(n>10 || n<=0) printf(""Pogresan unos\n"");
	}while(n>10 || n<=0);

	
	for(i=0;i<n;i++){
	    printf(""Unesite %d. tacku: "", i+1);
	    scanf(""%d %d"", &a,&b);
	        if(a<0 || a>=20 || b<0 || b>=20) {
	            printf(""Pogresan unos\n"");
	            i--;
	        }
	        else mat[b][a]=1;
	        
	}
	   
	    for(i=0;i<20;i++){
			for(j=0;j<20;j++){
				if(mat[i][j]==1)  printf(""*"");
				else printf("" "");
			}
			printf(""\n"");
	    }
	
	
	return 0;
}
","#include <stdio.h>

int main()
{
	int a,b,c,i,j;
	int mat[20][20]= {0};
	do {
		printf(""Unesite broj tacaka: "");
		scanf(""%d"",&a);
		if(a<=0 || a>10) printf(""Pogresan unos\n"");
	} while(a<=0 || a>10);
	for(i=0; i<a; i++) {

		printf(""Unesite %d. tacku: "",i+1);
		scanf(""%d%d"",&b,&c);
		if(b<0 || b>=20 || c<0 || c>=20) {
			printf(""Pogresan unos\n"");
			i--;
		} else mat[c][b]=1;
	}

	for(i=0; i<20; i++) {
		for(j=0; j<20; j++) {
			if(mat[i][j]==1) printf(""*"");
			else printf("" "");
		}
		printf(""\n"");
	}
	return 0;
}
"
3393,85,85,0,15,A2016/Z1/Z2/student7085,A2016/Z1/Z2/student2210,"#include <stdio.h>
#include <math.h>
#define e 0.0001
int main() {
	float a1,b1,a2,b2,y,x;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);

	

	if(fabs(a1-a2)<e && fabs(b1-b2)<e){
		
		printf(""Poklapaju se"");
	}else
	if(fabs(a1-a2)<e && fabs(b1-b2)>e){
		printf(""Paralelne su"");
	}
	else {
	x=(b2-b1)/(a1-a2);
	y=a1*x+b1;
	printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y);
	}
	
	return 0;
}
","#include <stdio.h>
#include <math.h>
#define E 0.00001

int main() {
	float a1,b1,a2,b2,y1,x;
	printf(""Unesite a1,b1,a2,b2: "");
	scanf(""%f,%f,%f,%f"",&a1,&b1,&a2,&b2);

	if(fabs(a1-a2)<E && b1!=b2){
		printf(""Paralelne su"");
	
	}
	else if(fabs(a1-a2)<E && fabs(b1-b2)<E){
		printf(""Poklapaju se"");
	}
	else {
		
			x=((b2-b1)/(a1-a2));
		y1=(a1*x+b1);
		printf(""Prave se sijeku u tacci (%.1f,%.1f)"",x,y1);
	}

	
	

	
	return 0;
}
"
3398,99,99,0,52,A2016/Z2/Z2/student9524,A2016/Z2/Z2/student4644,"#include <stdio.h>
#define PI 3.1415926

int main() {

	int n , i , j;
	float sec , min , step ;
	float niz[500]={0} ;

	do{
		printf(""Unesite broj uglova: "");
		scanf(""%d"" , &n);

		if(n<1||n>500)
		printf(""Pogresan unos\n"");
	}
	while(n<1||n>500);

	for (i=0 ; i<n ; i++)
	{scanf(""%f"",&niz[i]);}

	for(i=0; i<n ; i++) {
		niz[i]=niz[i]*180./PI ;


	}

	for (i=0 ; i<n ; i++) {
		step=(int)niz[i];
		min=(niz[i]-(int)niz[i])*60 ;
		sec=(min-(int)min)*60 ;
		if(sec>30) {

			for(j=i ; j<n-1 ; j++) {
				niz[j]=niz[j+1];}


		i--;
		n--;
	}
	}

		printf (""Uglovi su: \n"") ;
		for(i=0 ; i<n ; i++) {

			step=(int)niz[i];
			min=(niz[i]-(int)niz[i])*60 ;
			sec=(min-(int)min)*60 ;
			if(sec+0.5>(int)sec+1) sec=(int)sec+1;

			printf(""%d stepeni %d minuta %d sekundi\n"", (int)step ,(int) min ,(int) sec);

		}

	return 0;
}","#include <stdio.h>
#define PI 3.1415926

int main() {

	int n , i , j;
	float sec , min , step ;
	float niz[500]={0} ;

	do{
		printf(""Unesite broj uglova: "");
		scanf(""%d"" , &n);

		if(n<1||n>500)
		printf(""Pogresan unos\n"");
	}
	while(n<1||n>500);

	for (i=0 ; i<n ; i++)
	{scanf(""%f"",&niz[i]);}

	for(i=0; i<n ; i++) {
		niz[i]=niz[i]*180./PI ;


	}

	for (i=0 ; i<n ; i++) {
		step=(int)niz[i];
		min=(niz[i]-(int)niz[i])*60 ;
		sec=(min-(int)min)*60 ;
		if(sec>30) {

			for(j=i ; j<n-1 ; j++) {
				niz[j]=niz[j+1];}


		i--;
		n--;
	}
	}

		printf (""Uglovi su: \n"") ;
		for(i=0 ; i<n ; i++) {

			step=(int)niz[i];
			min=(niz[i]-(int)niz[i])*60 ;
			sec=(min-(int)min)*60 ;
			if(sec+0.5>(int)sec+1) sec=(int)sec+1;

			printf(""%d stepeni %d minuta %d sekundi\n"", (int)step ,(int) min ,(int) sec);

		}

	return 0;
}"
3409,86,86,0,105,A2016/Z4/Z3/student3116,A2016/Z4/Z3/student8753,"#include <stdio.h>
#include <ctype.h>


int JesuIsti(char *p,char *temp)
{
	int	isti=1;

		while(*temp!='\0')
		{
			if(*temp++!=*p++){isti=0;break;}
			if(*temp=='\0' && (*p!=' ' && *p!='\0')){isti=0;break;}
		}
	return isti;
		
}

void ZamijeniRijeci(char *recenica,char *rijec)
{
	while(*rijec!='\0')
	{
		*recenica++=*rijec++;
	}
	recenica++;
}

int Rjecnik(char **rijeci,char **zamjene,int broj_rijeci)
{
	int i,isti=1;
	char *pom,*pom1;
	
		for(i=0;i<broj_rijeci;i++)
		{
			pom=rijeci[i];
			pom1=zamjene[i];
			while(*pom!='\0' || *pom1!='\0')
			{
				if(*pom++!=*pom1++)isti=0;
			}
			if (isti==0) break;
		}
		return isti;
}


char* zamjena_rijeci(char* tekst, char** rijeci,char** zamjene, int broj_rijeci)
{
	char *p=tekst;
	char *temp,*pt,*kt,*ht;
	int i,br;
	     
	     
	    if(Rjecnik(rijeci,zamjene,broj_rijeci)) return tekst;
	     
		while(*p!='\0')
		{
			if(p==tekst || *(p-1)==' ')
			{
				while(*p==' ') p++;
				pt=p;
				
				for(i=0;i<broj_rijeci;i++)
				{	
					br=0;
					p=pt;
					temp=rijeci[i];
					
					if(JesuIsti(p,temp))
					{	
						kt=pt;
						
						while(*p!='\0' && *p!=' ') p++;
						
						
						while(*p!='\0')
						{
							*kt++=*p++;
						}						
						*kt='\0';
						
						p=pt;
						temp=zamjene[i];
						while(*temp!='\0')
						{
							br++;
							temp++;
						}
					
						ht=kt+br;
						p--;
						
						while(kt!=p)
						{
							*ht--=*kt--;
						}
						
						temp=zamjene[i];
						ZamijeniRijeci(pt,temp);			
					}
				}
			}
			p++;
				
		}
	return tekst;
}


int main() {
	
	char* rijeci[3] = { ""proba"", ""Ovo"", ""je"" };
	char* zamjene[3] = { """", """", """" };
	char tekst[100] = ""Ovo je proba"";
	printf(""'%s'"", zamjena_rijeci(tekst, rijeci, zamjene, 3));
	
	return 0;
}
","#include <stdio.h>

int provjera(char* p,char* q){
    int jesu=1;
    while(*q!='\0'){
        if(*q++!=*p++){
            jesu=0;
            break;
        }
        if(*q=='\0' && (*p!=' ' && *p!='\0')){
            jesu=0;
            break;
        }
    }
    return jesu;
}

void zamjena(char* rec,char* rijec){
    while(*rijec!='\0'){
        *rec++=*rijec++;
    }
    rec++;
}

int dict(char** rijeci,char** zamjene,int broj_rijeci){
    int i=0,jesu=1;
    char* s,* s1;
    for(i=0;i<broj_rijeci;i++){
        s=rijeci[i];
        s1=zamjene[i];
        while(*s!='\0' || *s1!='\0'){
            if(*s++!=*s1)
            jesu=0;
        }
        if(jesu==0) break;
    }
    return jesu;
}
char* zamjena_rijeci(char* tekst,char** rijeci,char** zamjene,int broj_rijeci){
    char*p=tekst;
    char*s,*t,*k,*h;
    int i,brojac;
    if (dict(rijeci,zamjene,broj_rijeci))
    return tekst;
    while(*p!='\0'){
        if(p==tekst || *(p-1)==' '){
            while(*p==' ') p++;
            t=p;
            for(i=0;i<broj_rijeci;i++){
                brojac=0;
                p=t;
                s=rijeci[i];
                
                if (provjera(p,s)){
                    k=t;
                    while(*p!='\0' && *p!=' ')
                    p++;
                    
                    while(*p!='\0'){
                        *k++=*p++;
                    }
                    *k='\0';
                    p=t;
                    s=zamjene[i];
                    while(*s!='\0'){
                        brojac++;
                        s++;
                    }
                    h=k+brojac;
                    p--;
                    while(k!=p){
                        *h--=*k--;
                    }
                    s=zamjene[i];
                    zamjena(t,s);
                }
            }
        }
        p++;
    }
    return tekst;
}

int main() {
    char tekst[100]=""beli sneg je pokrio beli breg"";
    char* rijeci[2]={""beli"",""sneg""};
    char* zamjene[2]={""bijeli"",""snijeg""};
    printf(""%s"",zamjena_rijeci(tekst,rijeci,zamjene,2));
    return 0;
}
"
3410,98,98,0,47,A2016/Z2/Z4/student3301,A2016/Z2/Z4/student1976,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define Eps 0.000001
int main() {
	int m,n,i,j,t=0,c=0;
	double matrix[100][100];
	printf(""Unesite M i N: "");
	do{
		scanf(""%d %d"",&m,&n);
		if(m<1 || m>100 || n<1 || n>100) printf(""Pogresan unos!\nUnesite M i N: "");
		else if(m>0 || m<=100 || n>0 || n<=100) break;
	}while(1);
	printf(""Unesite elemente matrice: "");
	if(m==1){
		printf(""Matrica je cirkularna"");
		return 0;
	}
	if(n==1){
		printf(""Matrica je Teplicova"");
		return 0;
	}
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			scanf(""%lf"",&matrix[i][j]);
		}
	}
	for(i=1;i<m;i++){
		if(fabs(matrix[i][0]-matrix[i-1][j-1])>Eps) c=1;
		for(j=1;j<n;j++){
				if(fabs(matrix[i][j]-matrix[i-1][j-1])>Eps) c=1;
		
		}
	}
	for(i=0;i<m-1;i++){
		for(j=0;j<n-1;j++){
		if(fabs(matrix[i][j]-matrix[i+1][j+1])>Eps) t=0;
		else t=1;
		
		if(m>1 && n>1 && n-m<=1 && fabs(matrix[m-2][0]-matrix[0][n-2])>Eps) t=0;
		}
	}
	
	if(c==0){
		printf(""Matrica je cirkularna"");
	}
	else if(t==1){
		printf(""Matrica je Teplicova"");
	}
	else{
		printf(""Matrica nije ni cirkularna ni Teplicova"");
	}
	
	return 0;
}
","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define Eps 0.000001
int main() {
	int m,n,i,j,t=0,c=0;
	double matrix[100][100];
	printf(""Unesite M i N: "");
	do{
		scanf(""%d %d"",&m,&n);
		if(m<1 || m>100 || n<1 || n>100) printf(""Pogresan unos!\nUnesite M i N: "");
		else if(m>0 || m<=100 || n>0 || n<=100) break;
	}while(1);
	printf(""Unesite elemente matrice: "");
	if(m==1){
		printf(""Matrica je cirkularna"");
		return 0;
	}
	if(n==1){
		printf(""Matrica je Teplicova"");
		return 0;
	}
	for(i=0;i<m;i++){
		for(j=0;j<n;j++){
			scanf(""%lf"",&matrix[i][j]);
		}
	}
	for(i=1;i<m;i++){
		if(fabs(matrix[i][0]-matrix[i-1][j-1])>Eps) c=1;
		for(j=1;j<n;j++){
				if(fabs(matrix[i][j]-matrix[i-1][j-1])>Eps) c=1;
		
		}
	}
	for(i=0;i<m-1;i++){
		for(j=0;j<n-1;j++){
		if(fabs(matrix[i][j]-matrix[i+1][j+1])>Eps) t=0;
		else t=1;
		
		if(m>1 && n>1 && n-m<=1 && fabs(matrix[m-2][0]-matrix[0][n-2])>Eps) t=0;
		}
	}
	
	if(c==0){
		printf(""Matrica je cirkularna"");
	}
	else if(t==1){
		printf(""Matrica je Teplicova"");
	}
	else{
		printf(""Matrica nije ni cirkularna ni Teplicova"");
	}
	
	return 0;
}
"
3413,99,99,0,152,A2016/Z1/Z1/student2717,A2016/Z1/Z1/student8043,"#include <stdio.h>
#include <math.h>
#define e 0.01
int main() {
	float Itarik, Ibojan, Imirza, IItarik, IIbojan, IImirza, prisustvotarik, prisustvobojan, prisustvomirza, 
	zadacetarik, zadacebojan, zadacemirza, zavrsnitarik, zavrsnibojan, zavrsnimirza, ukupnotarik, ukupnobojan, ukupnomirza,
	ocjenatarik,ocjenabojan,ocjenamirza; 
	
	/*Unos podataka*/
	
	/*Tarik*/
	
	printf(""Unesite bodove za Tarika:"");
	printf(""\nI parcijalni ispit:"");
	scanf (""%f"", &Itarik);
	if (Itarik>=0 && Itarik<=20) {
	printf("" II parcijalni ispit:""); }
	else {printf("" Neispravan broj bodova"");
	return 0; }
	scanf (""%f"", &IItarik);
	if (IItarik>=0 && IItarik<=20) {
	printf("" Prisustvo:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &prisustvotarik);
	if (prisustvotarik>=0 && prisustvotarik<=10) {
	printf("" Zadace:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zadacetarik);
	if (zadacetarik>=0 && zadacetarik<=10) {
	printf("" Zavrsni ispit:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zavrsnitarik);
	if (zavrsnitarik>=0 && zavrsnitarik<=40) {
	
	/*Bojan*/
	
	printf("" Unesite bodove za Bojana:""); 
	printf(""\nI parcijalni ispit:""); }
	else {
	printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &Ibojan);
	if (Ibojan>=0 && Ibojan<=20) {
	printf("" II parcijalni ispit:""); }
	else {
	printf("" Neispravan broj bodova"");
	return 0; }
	scanf (""%f"", &IIbojan);
	if (IIbojan>=0 && IIbojan<=20) {
	printf("" Prisustvo:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &prisustvobojan);
	if (prisustvobojan>=0 && prisustvobojan<=10) {
	printf("" Zadace:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zadacebojan);
	if (zadacebojan>=0 && zadacebojan<=10) {
	printf("" Zavrsni ispit:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zavrsnibojan);
	if (zavrsnibojan>=0 && zavrsnibojan<=40) {
	
	/*Mirza*/
	
	printf("" Unesite bodove za Mirzu:""); 
	printf(""\nI parcijalni ispit:""); }
	else {
	printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &Imirza);
	if (Imirza>=0 && Imirza<=20) {
	printf("" II parcijalni ispit:""); }
	else {
	printf("" Neispravan broj bodova"");
	return 0; }
	scanf (""%f"", &IImirza);
	if (IImirza>=0 && IImirza<=20) {
	printf("" Prisustvo:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &prisustvomirza);
	if (prisustvomirza>=0 && prisustvomirza<=10) {
	printf("" Zadace:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zadacemirza);
	if (zadacemirza>=0 && zadacemirza<=10) {
	printf("" Zavrsni ispit:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zavrsnimirza);
	if (zavrsnimirza<0 && zavrsnimirza>40) {
	printf("" Neispravan broj bodova"");
	return 0;}
	
		/*racunanje*/
	
	ukupnotarik=(Itarik+IItarik+prisustvotarik+zadacetarik+zavrsnitarik);
	ukupnobojan=(Ibojan+IIbojan+prisustvobojan+zadacebojan+zavrsnibojan);
	ukupnomirza=(Imirza+IImirza+prisustvomirza+zadacemirza+zavrsnimirza);

	/* Ocjene za studente */

	if(ukupnotarik>=(55-e) && ukupnotarik<(65-e)) {ocjenatarik=6;}
	else if (ukupnotarik>=(65-e) && ukupnotarik<(75-e)) {ocjenatarik=7;}
	else if (ukupnotarik>=(75-e) && ukupnotarik<(85-e)) {ocjenatarik=8;}
	else if (ukupnotarik>=(85-e) && ukupnotarik<(92-e)) {ocjenatarik=9;}
	else if (ukupnotarik>=(92-e) && ukupnotarik<(100-e)) {ocjenatarik=10;}
	
	if(ukupnobojan>=(55-e) && ukupnobojan<(65-e)) {ocjenabojan=6;}
	else if (ukupnobojan>=(65-e) && ukupnobojan<(75-e)) {ocjenabojan=7;}
	else if (ukupnobojan>=(75-e) && ukupnobojan<(85-e)) {ocjenabojan=8;}
	else if (ukupnobojan>=(85-e) && ukupnobojan<(92-e)) {ocjenabojan=9;}
	else if (ukupnobojan>=(92-e) && ukupnobojan<(100-e)) {ocjenabojan=10;}
	
	if(ukupnomirza>=(55-e) && ukupnomirza<(65-e)) {ocjenamirza=6;}
	else if (ukupnomirza>=(65-e) && ukupnomirza<(75-e)) {ocjenamirza=7;}
	else if (ukupnomirza>=(75-e) && ukupnomirza<(85-e)) {ocjenamirza=8;}
	else if (ukupnomirza>=(85-e) && ukupnomirza<(92-e)) {ocjenamirza=9;}
	else if (ukupnomirza>=(92-e) && ukupnomirza<(100-e)) {ocjenamirza=10;}
	
	/*Uslov da nijedan nije polozio*/
	
	if ((ukupnotarik<55-e) && (ukupnobojan<55-e) && (ukupnomirza<55-e)) {
		printf("" Nijedan student nije polozio."");}
	
	/*Uslov da je bar jedan polozio*/
	
	else if (((ukupnotarik>=55-e)&&(ukupnobojan<55-e)&&(ukupnomirza<55-e))||((ukupnotarik<55-e)&&(ukupnobojan>=55-e)&&(ukupnomirza<55-e))||((ukupnotarik<55-e)&&(ukupnobojan<55-e)&&(ukupnomirza>=55-e))) {
	printf("" Jedan student je polozio."");}
	
		/*Uslov da su dva polozila*/
	
	else if (((ukupnotarik>=55-e)&&(ukupnomirza>=55-e)&&(ukupnobojan<55-e))||((ukupnotarik<55-e)&&(ukupnomirza>=55-e)&&(ukupnobojan>=55-e))||((ukupnotarik>=55-e)&&(ukupnomirza<55-e)&&(ukupnobojan>=55-e))) {
	printf("" Dva studenta su polozila."");}
	
	/*Sva tri polozila*/
	
	if ((ukupnotarik>=55-e) && (ukupnobojan>=55-e) && (ukupnomirza>=55-e)) {
	printf("" Sva tri studenta su polozila."");
	if ((fabs(ocjenatarik-ocjenamirza)<e)&&(fabs(ocjenatarik-ocjenabojan)<e)) 
	printf(""\nSva tri studenta imaju istu ocjenu.""); 
	else if ((ocjenabojan!=ocjenamirza)&&(ocjenatarik!=ocjenamirza)&&(ocjenabojan!=ocjenatarik))
	printf(""\nSvaki student ima razlicitu ocjenu."");
	if ((fabs(ocjenatarik-ocjenamirza)<e)||(fabs(ocjenatarik-ocjenabojan)<e)||(fabs(ocjenamirza-ocjenabojan<e)))
	printf(""\nDva od tri studenta imaju istu ocjenu.""); }
	

	return 0;
}


































","#include <stdio.h>
#include <math.h>
#define e 0.01
int main() {
	float Itarik, Ibojan, Imirza, IItarik, IIbojan, IImirza, prisustvotarik, prisustvobojan, prisustvomirza, 
	zadacetarik, zadacebojan, zadacemirza, zavrsnitarik, zavrsnibojan, zavrsnimirza, ukupnotarik, ukupnobojan, ukupnomirza,
	ocjenatarik,ocjenabojan,ocjenamirza; 
	
	/*Unos podataka*/
	
	/*Tarik*/
	
	printf(""Unesite bodove za Tarika:"");
	printf(""\nI parcijalni ispit:"");
	scanf (""%f"", &Itarik);
	if (Itarik>=0 && Itarik<=20) {
	printf("" II parcijalni ispit:""); }
	else {printf("" Neispravan broj bodova"");
	return 0; }
	scanf (""%f"", &IItarik);
	if (IItarik>=0 && IItarik<=20) {
	printf("" Prisustvo:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &prisustvotarik);
	if (prisustvotarik>=0 && prisustvotarik<=10) {
	printf("" Zadace:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zadacetarik);
	if (zadacetarik>=0 && zadacetarik<=10) {
	printf("" Zavrsni ispit:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zavrsnitarik);
	if (zavrsnitarik>=0 && zavrsnitarik<=40) {
	
	/*Bojan*/
	
	printf("" Unesite bodove za Bojana:""); 
	printf(""\nI parcijalni ispit:""); }
	else {
	printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &Ibojan);
	if (Ibojan>=0 && Ibojan<=20) {
	printf("" II parcijalni ispit:""); }
	else {
	printf("" Neispravan broj bodova"");
	return 0; }
	scanf (""%f"", &IIbojan);
	if (IIbojan>=0 && IIbojan<=20) {
	printf("" Prisustvo:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &prisustvobojan);
	if (prisustvobojan>=0 && prisustvobojan<=10) {
	printf("" Zadace:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zadacebojan);
	if (zadacebojan>=0 && zadacebojan<=10) {
	printf("" Zavrsni ispit:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zavrsnibojan);
	if (zavrsnibojan>=0 && zavrsnibojan<=40) {
	
	/*Mirza*/
	
	printf("" Unesite bodove za Mirzu:""); 
	printf(""\nI parcijalni ispit:""); }
	else {
	printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &Imirza);
	if (Imirza>=0 && Imirza<=20) {
	printf("" II parcijalni ispit:""); }
	else {
	printf("" Neispravan broj bodova"");
	return 0; }
	scanf (""%f"", &IImirza);
	if (IImirza>=0 && IImirza<=20) {
	printf("" Prisustvo:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &prisustvomirza);
	if (prisustvomirza>=0 && prisustvomirza<=10) {
	printf("" Zadace:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zadacemirza);
	if (zadacemirza>=0 && zadacemirza<=10) {
	printf("" Zavrsni ispit:""); }
	else {printf("" Neispravan broj bodova"");
	return 0;}
	scanf (""%f"", &zavrsnimirza);
	if (zavrsnimirza<0 && zavrsnimirza>40) {
	printf("" Neispravan broj bodova"");
	return 0;}
	
		/*racunanje*/
	
	ukupnotarik=(Itarik+IItarik+prisustvotarik+zadacetarik+zavrsnitarik);
	ukupnobojan=(Ibojan+IIbojan+prisustvobojan+zadacebojan+zavrsnibojan);
	ukupnomirza=(Imirza+IImirza+prisustvomirza+zadacemirza+zavrsnimirza);

	/* Ocjene za studente */

	if(ukupnotarik>=(55-e) && ukupnotarik<(65-e)) {ocjenatarik=6;}
	else if (ukupnotarik>=(65-e) && ukupnotarik<(75-e)) {ocjenatarik=7;}
	else if (ukupnotarik>=(75-e) && ukupnotarik<(85-e)) {ocjenatarik=8;}
	else if (ukupnotarik>=(85-e) && ukupnotarik<(92-e)) {ocjenatarik=9;}
	else if (ukupnotarik>=(92-e) && ukupnotarik<(100-e)) {ocjenatarik=10;}
	
	if(ukupnobojan>=(55-e) && ukupnobojan<(65-e)) {ocjenabojan=6;}
	else if (ukupnobojan>=(65-e) && ukupnobojan<(75-e)) {ocjenabojan=7;}
	else if (ukupnobojan>=(75-e) && ukupnobojan<(85-e)) {ocjenabojan=8;}
	else if (ukupnobojan>=(85-e) && ukupnobojan<(92-e)) {ocjenabojan=9;}
	else if (ukupnobojan>=(92-e) && ukupnobojan<(100-e)) {ocjenabojan=10;}
	
	if(ukupnomirza>=(55-e) && ukupnomirza<(65-e)) {ocjenamirza=6;}
	else if (ukupnomirza>=(65-e) && ukupnomirza<(75-e)) {ocjenamirza=7;}
	else if (ukupnomirza>=(75-e) && ukupnomirza<(85-e)) {ocjenamirza=8;}
	else if (ukupnomirza>=(85-e) && ukupnomirza<(92-e)) {ocjenamirza=9;}
	else if (ukupnomirza>=(92-e) && ukupnomirza<(100-e)) {ocjenamirza=10;}
	
	/*Uslov da nijedan nije polozio*/
	
	if ((ukupnotarik<55-e) && (ukupnobojan<55-e) && (ukupnomirza<55-e)) {
		printf("" Nijedan student nije polozio."");}
	
	/*Uslov da je bar jedan polozio*/
	
	else if (((ukupnotarik>=55-e)&&(ukupnobojan<55-e)&&(ukupnomirza<55-e))||((ukupnotarik<55-e)&&(ukupnobojan>=55-e)&&(ukupnomirza<55-e))||((ukupnotarik<55-e)&&(ukupnobojan<55-e)&&(ukupnomirza>=55-e))) {
	printf("" Jedan student je polozio."");}
	
		/*Uslov da su dva polozila*/
	
	else if (((ukupnotarik>=55-e)&&(ukupnomirza>=55-e)&&(ukupnobojan<55-e))||((ukupnotarik<55-e)&&(ukupnomirza>=55-e)&&(ukupnobojan>=55-e))||((ukupnotarik>=55-e)&&(ukupnomirza<55-e)&&(ukupnobojan>=55-e))) {
	printf("" Dva studenta su polozila."");}
	
	/*Sva tri polozila*/
	
	if ((ukupnotarik>=55-e) && (ukupnobojan>=55-e) && (ukupnomirza>=55-e)) {
	printf("" Sva tri studenta su polozila."");
	if ((fabs(ocjenatarik-ocjenamirza)<e)&&(fabs(ocjenatarik-ocjenabojan)<e)) 
	printf(""\nSva tri studenta imaju istu ocjenu.""); 
	else if ((ocjenabojan!=ocjenamirza)&&(ocjenatarik!=ocjenamirza)&&(ocjenabojan!=ocjenatarik))
	printf(""\nSvaki student ima razlicitu ocjenu."");
	if ((fabs(ocjenatarik-ocjenamirza)<e)||(fabs(ocjenatarik-ocjenabojan)<e)||(fabs(ocjenamirza-ocjenabojan<e)))
	printf(""\nDva od tri studenta imaju istu ocjenu.""); }
	

	return 0;
}


































"
3415,78,78,0,16,A2016/Z2/Z1/student9160,A2016/Z2/Z1/student5621,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main() {
	int c1,c2,broj,broj2=0,sum, stepen=0;
	printf(""Unesite broj: "");
	scanf(""%d"",&broj);
	broj=abs(broj);
	if(broj<10)
	{
		broj2=0;
		printf(""%d"",broj2);
	}else{
	do
	{
		c1=broj%10;
		broj/=10;
		if(broj!=0)
		{
		c2=broj%10;
		sum=abs(c2-c1);
		broj2=broj2+sum*pow(10,stepen);
		stepen++;
		}
	}while(broj!=0);
	printf(""%d"", broj2);
	}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main() {
	int a,b,p,p1=0,suma,n=0;
	printf(""Unesite broj: "");
	scanf(""%d"", &p);
	p=abs(p);
	if (p<10){
		p1=0;
		printf(""%d"", p1);
	} else {
	n=1;
	while(p>=10){
		a=p%10;
		p/=10;
		if(p!=0){
		b=p%10;
		suma=abs(b-a);
		p1=p1+suma*pow(10,n-1);
		n++;}
	}
	printf(""%d"", p1);
	}
	
	return 0;
}"
3418,99,99,0,62,A2016/Z2/Z2/student6720,A2016/Z2/Z2/student4628,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define Pi 3.1415926

int main() {
int n, i, j;
double niz[500], stepen[500], min[500], sec[500], usec[500]={0};
do{
    printf(""Unesite broj uglova: "");
    scanf(""%d"", &n);
}while(n<1 || n>500);

for(i=0; i<n; i++){
    scanf(""%lf"", &niz[i]);

   usec[i]=((niz[i]*180)/Pi)*3600;
   usec[i]=round(usec[i]);
   stepen[i]=usec[i]/3600;
   stepen[i]=(int)stepen[i];
   min[i]=(usec[i]-stepen[i]*3600)/60;
   min[i]=(int)min[i];
   sec[i]=(usec[i]-min[i]*60-stepen[i]*3600);
     
 
    if(sec[i]>=60){
       min[i]++;
       sec[i]-=60;
    }
    
    if(sec[i]<=-60){
       min[i]--;
       sec[i]+=60;
    }

    if(min[i]>=60){
       stepen[i]++;
       min[i]-=60;
    }
    
    if(min[i]<=-60){
       stepen[i]--;
       min[i]+=60;
    }
}
for(i=0; i<n; i++){
    if(fabs(sec[i])>30){
        for(j=i; j<n-1; j++){
            sec[j]=sec[j+1];
            min[j]=min[j+1];
            stepen[j]=stepen[j+1];
            niz[j]=niz[j+1];
        }
    n--;
    i--;
    }
}    
    

printf(""Uglovi su:\n"");

for(i=0; i<n; i++){
printf(""%g stepeni %g minuta %g sekundi\n"", stepen[i], fabs(min[i]), fabs(sec[i])); 

}

return 0;
	
}
","#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define Pi 3.1415926

int main() {
int n, i, j;
double niz[500], stepen[500], min[500], sec[500], usec[500]={0};
do{
    printf(""Unesite broj uglova: "");
    scanf(""%d"", &n);
}while(n<1 || n>500);

for(i=0; i<n; i++){
    scanf(""%lf"", &niz[i]);

   usec[i]=((niz[i]*180)/Pi)*3600;
   usec[i]=round(usec[i]);
   stepen[i]=usec[i]/3600;
   stepen[i]=(int)stepen[i];
   min[i]=(usec[i]-stepen[i]*3600)/60;
   min[i]=(int)min[i];
   sec[i]=(usec[i]-min[i]*60-stepen[i]*3600);
     
 
    if(sec[i]>=60){
       min[i]++;
       sec[i]-=60;
    }
    
    if(sec[i]<=-60){
       min[i]--;
       sec[i]+=60;
    }

    if(min[i]>=60){
       stepen[i]++;
       min[i]-=60;
    }
    
    if(min[i]<=-60){
       stepen[i]--;
       min[i]+=60;
    }
}
for(i=0; i<n; i++){
    if(fabs(sec[i])>30){
        for(j=i; j<n-1; j++){
            sec[j]=sec[j+1];
            min[j]=min[j+1];
            stepen[j]=stepen[j+1];
            niz[j]=niz[j+1];
        }
    n--;
    i--;
    }
}    
    

printf(""Uglovi su:\n"");

for(i=0; i<n; i++){
printf(""%g stepeni %g minuta %g sekundi\n"", stepen[i], fabs(min[i]), fabs(sec[i])); 

}

return 0;
	
}
"
3423,99,99,0,43,A2016/Z2/Z3/student4903,A2016/Z2/Z3/student5713,"#include <stdio.h>
int niz1[10]={0}, niz2[10]={0},  i, j, n, k, brojac, temp, isti_j=0, isti_i=0;

int main() {
	do {
	printf(""Unesite broj tacaka: "");
	scanf(""%i"", &n);
		if(n<=0 || n>10) printf(""Pogresan unos\n"");
	}while(n<=0 || n>10);
	
	for(i=0; i<n; i++){
	
			
			printf(""Unesite %i. tacku: "", i+1);
			scanf(""%d %d"", &niz1[i], &niz2[i]);
			
			
				if(niz1[i]>19 || niz1[i]<0 || niz2[i]>19 || niz2[i]<0) {printf(""Pogresan unos\n""); i--;}
		
		}

for(i=0; i<n; i++){
	for(j=i+1; j<n; j++){
		if(niz1[i]==niz1[j] && niz2[i]==niz2[j]){
			niz1[j]=niz1[n-1];
			niz2[j]=niz2[n-1];
			n--;
			j--;
		}
	}
}
	
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			k=1;
			
			for(brojac=0; brojac<n; brojac++){
				if(j== niz1[brojac] && i==niz2[brojac]){printf(""*""); k=0;}
			}
		 if(k != 0) printf("" "");
		 	} 
		 	printf(""\n"");
	}
	return 0;
}
	
","#include <stdio.h>
int niz1[10]={0}, niz2[10]={0},  i, j, n, k, brojac, temp, isti_j=0, isti_i=0;

int main() {
	do {
	printf(""Unesite broj tacaka: "");
	scanf(""%i"", &n);
		if(n<=0 || n>10) printf(""Pogresan unos\n"");
	}while(n<=0 || n>10);
	
	for(i=0; i<n; i++){
	
			
			printf(""Unesite %i. tacku: "", i+1);
			scanf(""%d %d"", &niz1[i], &niz2[i]);
			
			
				if(niz1[i]>19 || niz1[i]<0 || niz2[i]>19 || niz2[i]<0) {printf(""Pogresan unos\n""); i--;}
		
		}

for(i=0; i<n; i++){
	for(j=i+1; j<n; j++){
		if(niz1[i]==niz1[j] && niz2[i]==niz2[j]){
			niz1[j]=niz1[n-1];
			niz2[j]=niz2[n-1];
			n--;
			j--;
		}
	}
}
	
	for(i=0; i<20; i++){
		for(j=0; j<20; j++){
			k=1;
			
			for(brojac=0; brojac<n; brojac++){
				if(j== niz1[brojac] && i==niz2[brojac]){printf(""*""); k=0;}
			}
		 if(k != 0) printf("" "");
		 	} 
		 	printf(""\n"");
	}
	return 0;
}
	
"
3433,82,82,0,106,A2016/Z4/Z1/student4473,A2016/Z4/Z1/student6877,"#include <stdio.h>

void unesi(char niz[], int velicina){
	char znak=getchar();
	int i=0;
	while(i<velicina-1 && znak!='\0'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}

int uporedi(char *rijec1, char *rijec2,int vel1,int vel2){
	int i;
	char*p1=rijec1, *p2=rijec2;
	if(vel1!=vel2)
		return 0;
	else{
		for(i=0;i<vel1-1;i++){
			if(*(p2+i)>='A'&&*(p2+i)<='Z'&&*(p1+i)>='A'&&*(p1+i)<='Z'){
				if(*(p1+i)+32!=*(p2+i)+32)
					return 0;
				continue;
			}
			if(*(p1+i)>='A'&&*(p1+i)<='Z'){
				if(*(p1+i)+32!=*(p2+i))
					return 0;
				continue;
			}
			
			
			if(*(p2+i)>='A'&&*(p2+i)<='Z'){
				if(*(p1+i)!=*(p2+i)+32)
					return 0;
				continue;
			}
			
			
			
			if(*(p1+i)!=*(p2+i))
					return 0;
			
			
			
			
		}
	}
	return 1;
}




char* izbaci_najcescu(char *s){
	char *p, *pok[500];
	int i=0, j=0,brojac_slova[500]={0}, brojac_rijeci=1, brojac_najcesce[500]={0};
	p=s;
	pok[j]=p;
	if(*p=='\0')
		return NULL;
	while(*p!='\0'){
		if((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127)){
			brojac_rijeci++;
			do{
				p++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			j++;
			i++;
			pok[j]=p;
			continue;
		}
		brojac_slova[i]++;
		p++;
	}
	// daje nam broj slova za svaku rijec i stavlja pokazivac na svaku rijec
	
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(uporedi(pok[i], pok[j],brojac_slova[i], brojac_slova[j]))
				brojac_najcesce[i]++;
		}
	}
	//do sad je u niz brojac_najcece[i] ubacilo vrijednosti koliko puta se ponavlja rijec na mijestu u stringu s
	
	int max;
	max=0;
	for(i=0;i<brojac_rijeci;i++){
		if(brojac_najcesce[i]>brojac_najcesce[max]) 	
			max=i;
	}
	// pronasli smo za sad clan najcesce rijeci

	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(uporedi(pok[max], pok[i], brojac_slova[max], brojac_slova[i])){
			p=pok[i];
			if(i==brojac_rijeci-1){
				*p='\0';
				break;
			}
			while(*p!='\0'){
				*p=*(p+brojac_slova[i]);	
				if(*p=='\0') break;
				p++;
			}
			do{
				pok[i]++;
			}while((*p>31&&*p<'A')||(*p>'Z'&&*p<'a')||(*p>'z'&&*p<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pok[j]-=brojac_slova[i];
				
			}
			
		}
		
	}
	//izbacene su sve rijeci koje se ponavljaju osim prve
	p=pok[max];
	while(*p!='\0'){
		*p=*(p+brojac_slova[max]);	
		if(*p=='\0') break;
		p++;
	}
	
	return s;
}	
	
int main() {
	char tekst[]=""1PsT1 psT2 3Pst pstpst pst"";
	printf(""%s"",izbaci_najcescu(tekst));
	return 0;
}
","#include <stdio.h>
void unesi (char niz[] , int velicina){
	char znak;
	int i=0;
	znak = getchar();
	if (znak=='\n') znak= getchar();
	while(i<velicina-1 && znak!='\n'){
		niz[i]=znak;
		i++;
		znak=getchar();
	}
	niz[i]='\0';
}
int uporedi (char *string1, char *string2, int velicina1, int velicina2){
	char *p1=string1;
	char *p2=string2;
	int i;
	if (velicina1!=velicina2) return 0;
	else {
		for(i=0;i<velicina1-1;i++)
		{
			if(*(p1+i)>='A' && *(p1+i)<='Z'){
			if(*(p1+i)+32!=*(p2+i)) return 0;
		    continue;
			}
		    if(*(p2+i)>='A' && *(p2+i)<='Z'){
		    if(*(p2+i)!=*(p2+i)+32) return 0;
		    continue;
		    }
		if(*(p1+i)!=*(p2+i)) return 0;
		}
		
	}
	return 1;
}
char* izbaci_najcescu(char *s){
	char*p , *pokazivac[100];
	int i=0,j=0,brojac_slova[100]={0},brojac_rijeci=1,brojac_najcesce[100]={0};
	p=s;
	pokazivac[j]=p;
	if (*p!='\0') return NULL;
	while(*p!='\0'){
		if ((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127)){
			brojac_rijeci++;
			do{
				p++;
			}while((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127));
			i++;
			j++;
			pokazivac[j]=p;
			continue;
		}
		brojac_slova[i]++;
		p++;
	}
	for(i=0;i<brojac_rijeci-1;i++){
		for(j=i+1;j<brojac_rijeci;j++){
			if(uporedi(pokazivac[i],pokazivac[j],brojac_slova[i],brojac_slova[j]))
			brojac_najcesce[i]++;
		}
	}
	int max;
	max=0;
	for(i=0;i<brojac_rijeci;i++){
		if(brojac_najcesce[i]>brojac_najcesce[max]) max=i; 
	}
	for(i=0;i<brojac_rijeci;i++){
		if(max==i) i++;
		if(uporedi(pokazivac[max],pokazivac[i],brojac_slova[max],brojac_slova[i])){
			p=pokazivac[i];
			if(i==brojac_rijeci-1){
				*p='\0';
				break;
			}
			while(*p!='\0'){
				*p=*p(brojac_slova[i]);
				if(*p=='\0') break;
				p++;
			}
			do{
				pokazivac[i]++;
			}while((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127));
			for(j=i+1;j<brojac_rijeci;j++){
				pokazivac[j]-=brojac_slova[i];
			}
			
		}
	}
	p=pokazivac[max];
	while (*p!='\0') {
		*p=*p(brojac_slova[max]);
		if(*p=='\0') break;
		p++;
	}
		
	return s;	
	
	
}
	
	



int main() {
	char tekst[]=""asd ddd asd  ddd asd trzhrth"";
	printf(""%s"",izbaci_najcescu(tekst));
	
	return 0;
}
"
3440,99,99,0,123,A2016/Z4/Z1/student3756,A2016/Z4/Z1/student9175,"#include <stdio.h>

void izbacivanje(char* str1ng, int vel) {
	while(*(str1ng+vel)) {
		*str1ng=*(str1ng+vel);
		str1ng++;
	}
	*str1ng=*(str1ng+vel);
}
 
char* izbaci_najcescu(char* string) {
 
	char *max = string, *p = string, *pocetak, *kraj, *temp, *sljedeciPocetak, *sljedeciKraj, *temp1, *p2, *p3;
	int vel1, BrojRijeci=0, vel2, jednaka, vel3, maxBrojRijeci=0, maxVelicina=0, znak;
	char znak1,znak2;
 
 
	if (*p == '\0') return string;
	while(*p != '\0') {
		while((*p < 'A' || (*p > 'Z' && *p < 'a') || *p > 'z') && *(p+1) != '\0') p++;
			if(*p != '\0') {
				pocetak = p;
				kraj = p;
				vel1 = 1;
				while(((*(kraj+1) >= 'A' && *(kraj+1) <= 'Z') || (*(kraj+1) >= 'a' && *(kraj+1) <= 'z')) && *(kraj+1) != '\0') {
					vel1++;
					kraj++;
				}
				BrojRijeci=1;
				temp=kraj+1;
 
				while (*temp != '\0') {
					//Odredivanje prvog i posljednjeg slova sljedece rijeci
					sljedeciPocetak=temp;
 
					while ((*sljedeciPocetak < 'A' || (*sljedeciPocetak > 'Z' && *sljedeciPocetak < 'a') || *sljedeciPocetak > 'z') && *(sljedeciPocetak+1) != '\0') sljedeciPocetak++;
					sljedeciKraj = sljedeciPocetak;
					vel2=1;
 
					while(((*(sljedeciKraj+1) >= 'A' && *(sljedeciKraj+1) <= 'Z') || (*(sljedeciKraj+1) >= 'a' && *(sljedeciKraj+1) <= 'z')) && *(sljedeciKraj+1) != '\0') {
						vel2++;
						sljedeciKraj++;					
					}					
					jednaka=1; vel3=0;
 
					temp1=pocetak;
 
					if (vel1 != vel2 ) jednaka=0;
					else 
					while (vel3 < vel2) {
 
						if(*temp1 >= 'A' && *temp1 <= 'Z') znak1=(*temp1) + ('a' - 'A');
						else znak1=*temp1;
 
						if(*sljedeciPocetak >= 'A' && *sljedeciPocetak <= 'Z') znak2=(*sljedeciPocetak) + ('a' - 'A');
						else znak2=*sljedeciPocetak;
 
						if(znak1 != znak2) jednaka=0;
 
						temp1++; sljedeciPocetak++; vel3++;
 
					}
 
					if(jednaka) BrojRijeci++;
					temp=sljedeciKraj+1;
 
				}
 
				if(BrojRijeci>maxBrojRijeci ) {
				maxBrojRijeci=BrojRijeci;
				max=kraj;
				maxVelicina=vel1;
				}
			}
			p=kraj+1;
	}
	//izbacivanje najcesce rijeci
	p=temp-1;
	while (p>=string) {
		znak=0;
		if((*(p+1) < 'A' || (*(p+1)>'Z' && *(p+1)<'a') || *(p+1)>'z') || *(p+1)=='\0') znak=1;
 
		if(*p>='A' && *p<='Z') znak1=(*p)+('a'-'A'); 
		else znak1=*p;
 
		if(*max >= 'A' && *max <='Z') znak2=(*max)+('a'-'A'); else znak2=*max;
 
 
 
		if(znak1==znak2 && znak){
			p3=p;
			p2=max;
			vel2=0;
			jednaka=1;
 
			while(p3>=string && (( *p3>='A' && *p3  <= 'Z') || (*p3>= 'a' && *p3 <= 'z'))) {
				if(p2>=string) {
					if(*p2>='A' && *p2<= 'Z') znak1=(*p2)+('a'-'A'); 
					else znak1=*p2;
					if(*p2>='A' && *p2<= 'Z') znak2=(*p2)+('a'-'A'); 
					else znak2=*p2;
					if(znak1!=znak2) jednaka=0;
 
				}
				vel2++;
				p3--;
				p2--;
			}
			p3++;
			if(maxVelicina!=vel2) jednaka=0;
			if(jednaka==1) {
				izbacivanje(p3,vel2);
			}
		}
		p--;
	}
	return string;
}
 
int main() {
	char str1ng[400]="" Koristio sam auto-stop da dodjem do znaka stop ali prije stopa sam otvorio dekstop kompjutera stop"";
	printf(""%s"", izbaci_najcescu(str1ng));
	return 0;
 
}","#include <stdio.h>

//funkcija koja izbacuje rijec iz stringa 

void izbacivanje(char* str1ng, int vel) {
	while(*(str1ng+vel)) {
		*str1ng=*(str1ng+vel);
		str1ng++;
	}
	*str1ng=*(str1ng+vel);
}

char* izbaci_najcescu(char* str) {
	
	char *max = str, *p = str, *pocetak, *kraj, *temp, *sljpocetak, *sljkraj, *tempoc, *p2, *p3;
	int vel1, broj_rijeci=0, vel2, jednaka, vel3, max_broj_rijeci=0, maxvel=0, znak;
	char c1,c2;
	
	
	if (*p == '\0') return str;
	while(*p != '\0') {
		while((*p < 'A' || (*p > 'Z' && *p < 'a') || *p > 'z') && *(p+1) != '\0') p++;
			if(*p != '\0') {
				//Odredivanje prvog i posljednjeg slova trenutne rijeci
				pocetak = p;
				kraj = p;
				vel1 = 1;
				while(((*(kraj+1) >= 'A' && *(kraj+1) <= 'Z') || (*(kraj+1) >= 'a' && *(kraj+1) <= 'z')) && *(kraj+1) != '\0') {
					vel1++;
					kraj++;
				}
				broj_rijeci=1;
				temp=kraj+1;
				
				while (*temp != '\0') {
					//Odredivanje prvog i posljednjeg slova sljedece rijeci
					sljpocetak=temp;
					
					while ((*sljpocetak < 'A' || (*sljpocetak > 'Z' && *sljpocetak < 'a') || *sljpocetak > 'z') && *(sljpocetak+1) != '\0') sljpocetak++;
					sljkraj = sljpocetak;
					vel2=1;
					
					while(((*(sljkraj+1) >= 'A' && *(sljkraj+1) <= 'Z') || (*(sljkraj+1) >= 'a' && *(sljkraj+1) <= 'z')) && *(sljkraj+1) != '\0') {
						vel2++;
						sljkraj++;
					
					}
					
					jednaka=1; vel3=0;
					
					tempoc=pocetak;
					
					if (vel1 != vel2 ) jednaka=0;
					else 
					while (vel3 < vel2) {
						
						if(*tempoc >= 'A' && *tempoc <= 'Z') c1=(*tempoc) + ('a' - 'A');
						else c1=*tempoc;
						
						if(*sljpocetak >= 'A' && *sljpocetak <= 'Z') c2=(*sljpocetak) + ('a' - 'A');
						else c2=*sljpocetak;
						
						if(c1 != c2) jednaka=0;
						
						tempoc++; sljpocetak++; vel3++;
						
					}
					
					if(jednaka) broj_rijeci++;
					temp=sljkraj+1;
					
				}
				
				if(broj_rijeci>max_broj_rijeci ) {
				max_broj_rijeci=broj_rijeci;
				max=kraj;
				maxvel=vel1;
				}
			}
			p=kraj+1;
	}
	//izbacivanje najcesce rijeci
	p=temp-1;
	while (p>=str) {
		znak=0;
		if((*(p+1) < 'A' || (*(p+1)>'Z' && *(p+1)<'a') || *(p+1)>'z') || *(p+1)=='\0') znak=1;
		
		if(*p>='A' && *p<='Z') c1=(*p)+('a'-'A'); 
		else c1=*p;
		
		if(*max >= 'A' && *max <='Z') c2=(*max)+('a'-'A'); else c2=*max;
		
		
		
		if(c1==c2 && znak){
			p3=p;
			p2=max;
			vel2=0;
			jednaka=1;
			
			while(p3>=str && (( *p3>='A' && *p3  <= 'Z') || (*p3>= 'a' && *p3 <= 'z'))) {
				if(p2>=str) {
					if(*p2>='A' && *p2<= 'Z') c1=(*p2)+('a'-'A'); 
					else c1=*p2;
					if(*p2>='A' && *p2<= 'Z') c2=(*p2)+('a'-'A'); 
					else c2=*p2;
					if(c1!=c2) jednaka=0;
					
				}
				vel2++;
				p3--;
				p2--;
			}
			p3++;
			if(maxvel!=vel2) jednaka=0;
			if(jednaka==1) {
				izbacivanje(p3,vel2);
			}
		}
		p--;
	}
	return str;
}

int main() {
	char str1ng[400]="" zghklkvedza zvezda zdvdwa"";
	printf(""%s"", izbaci_najcescu(str1ng));
	return 0;
	
}
"
3446,98,98,0,46,A2016/Z3/Z1/student8561,A2016/Z3/Z1/student8419,"#include <stdio.h>

int IFPROST(int prost_br){
    int i,n,r;
    n=1;
    i=2;
    for(i=2;i<prost_br;i++){
        if(prost_br%i==0){
            n=0;
            break;
        }
    } 
    if(n==1) r=1;
    else r=0;
    return r;
}

int Daj_prost(){
    static int prost_br=2;
    while(IFPROST(prost_br)==0){
        prost_br++;
    }
    prost_br++;
    return prost_br-1;
}

int main() {
	int a,b,suma,prost,i;
	suma=0;
	
	do{
	    printf(""Unesite brojeve A i B: "");
	    scanf(""%d %d"",&a,&b);
	    if(a>=b) printf(""A nije manje od B.\n"");
	    else if(a<=1) printf(""A nije prirodan broj.\n"");
	    else if(b<=1) printf(""B nije prirodan broj.\n"");
	} while (a>=b || b<=1 || a<=1);
	
	while((prost=Daj_prost())<=a)
	suma=0;
	
	for(i=a+1;i<b;i++){
	    if(prost>=b) break;
	    suma+=prost;
	    prost=Daj_prost();
	}
	
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b,suma);
	
	return 0;
}
","#include <stdio.h>

int IFPROST(int prost_br){
    int i,n,r;
    n=1;
    i=2;
    for(i=2;i<prost_br;i++){
        if(prost_br%i==0){
            n=0;
            break;
        }
    } 
    if(n==1) r=1;
    else r=0;
    return r;
}

int Daj_prost(){
    static int prost_br=2;
    while(IFPROST(prost_br)==0){
        prost_br++;
    }
    prost_br++;
    return prost_br-1;
}

int main() {
	int a,b,suma,prost,i;
	suma=0;
	
	do{
	    printf(""Unesite brojeve A i B: "");
	    scanf(""%d %d"",&a,&b);
	    if(a>=b) printf(""A nije manje od B.\n"");
	    else if(a<=1) printf(""A nije prirodan broj.\n"");
	    else if(b<=1) printf(""B nije prirodan broj.\n"");
	} while (a>=b || b<=1 || a<=1);
	
	while((prost=Daj_prost())<=a)
	suma=0;
	
	for(i=a+1;i<b;i++){
	    if(prost>=b) break;
	    suma+=prost;
	    prost=Daj_prost();
	}
	
	printf(""Suma prostih brojeva izmedju %d i %d je %d."",a,b,suma);
	
	return 0;
}
"
3449,99,99,0,81,A2016/Z4/Z3/student2142,A2016/Z4/Z3/student5961,"#include <stdio.h>

int duzinaRijeci(char* rijec) {
    int duzina = 0;
    while (*rijec++ != '\0')  duzina++;
    return duzina;
}
// Funkcija koja izbacuje rijec sa lokacij
void izbaciRijecSaLokacije(char* tekst, int index){
    int i = index;
    while(tekst[i] != ' ' && tekst[i] != '\0'){
        int j = i+1;
        while (tekst[j-1] != '\0') tekst[j-1] = tekst[j++];
    }
}
// Funkcija koja uveca string ya potrebnu velicinu pa upise rijec iy yamjene
void ubaciRijecNaLokaciju(char* tekst, char *rijec, int index) {
    int i = 0;
    int duzina_rijeci = duzinaRijeci(rijec);
    while(tekst[i] != '\0') i++;
    int temp = i;
    while (duzina_rijeci-- > 0){
        i = temp++;
        while (i >= index) {
            tekst[i+1] = tekst[i];
            i--;
        }
    }
    i = 0;
    while(rijec[i] != '\0'){
        tekst[index+i] = rijec[i++];
    }
}

int porediRijeci(char* rijec1, char* rijec2) {
    // uporedi rijeci
    while((*(rijec1) != '\0' || *(rijec2) != '\0') && (*rijec1 == *rijec2)) {
        rijec1++;
        rijec2++;
    }
    if (*rijec1 == '\0' && *rijec2 == '\0') return 1;
    return 0;
}

char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci) {
    if (broj_rijeci == 0 || tekst[0] == '\0') return tekst;
    int i = 0;
    while (tekst[i] != '\0') {
        while (tekst[i] == ' ') i++;
        if (tekst[i] == '\0') break;
        int j = 0; // sluzi za prolazak kroz rijec
        char temp;
        // Uvecavamo brojac j do kraja trenutne rijeci
        while (tekst[i + j] != ' ' && tekst[i + j] != '\0') j++;
        // Privremeno postavimo oznaku za kraj stringa na kraj rijeci
        temp = tekst[i+j];
        tekst[i+j] = '\0';
        int indeksRijec = -1, brojac_rijeci = 0;
        // Pokusajmo naci rijeci u nizu rijeci za zamjeniti
        while (brojac_rijeci < broj_rijeci) {
            if (porediRijeci(tekst + i, rijeci[brojac_rijeci])) {
                indeksRijec = brojac_rijeci;
                break;
            }
            brojac_rijeci++;
        }
        tekst[i+j] = temp;
        // Ukoliko je indeks rijeci = -1, rijec nije nadjena u nizu rijeci za zamjeniti
        if (indeksRijec != -1) {
            izbaciRijecSaLokacije(tekst, i);
            ubaciRijecNaLokaciju(tekst, zamjene[indeksRijec], i);
            i += duzinaRijeci(zamjene[indeksRijec]);
        } else i+=j;
    }
    return tekst;
}

int main() {
    char* rijeci[2] = { ""Prijestolonasljednikovica"" };
    char* zamjene[2] = { ""c"" };
    char tekst[100] = ""Prijestolonasljednikovica"";
    printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 1));
    return 0;
}","#include <stdio.h>

int duzinaRijeci(char* rijec) {
    int duzina = 0;
    while (*rijec++ != '\0')  duzina++;
    return duzina;
}
// Funkcija koja izbacuje rijec sa lokacij
void izbaciRijecSaLokacije(char* tekst, int index){
    int i = index;
    while(tekst[i] != ' ' && tekst[i] != '\0'){
        int j = i+1;
        while (tekst[j-1] != '\0') tekst[j-1] = tekst[j++];
    }
}
// Funkcija koja uveca string ya potrebnu velicinu pa upise rijec iy yamjene
void ubaciRijecNaLokaciju(char* tekst, char *rijec, int index) {
    int i = 0;
    int duzina_rijeci = duzinaRijeci(rijec);
    while(tekst[i] != '\0') i++;
    int temp = i;
    while (duzina_rijeci-- > 0){
        i = temp++;
        while (i >= index) {
            tekst[i+1] = tekst[i];
            i--;
        }
    }
    i = 0;
    while(rijec[i] != '\0'){
        tekst[index+i] = rijec[i++];
    }
}

int porediRijeci(char* rijec1, char* rijec2) {
    // uporedi rijeci
    while((*(rijec1) != '\0' || *(rijec2) != '\0') && (*rijec1 == *rijec2)) {
        rijec1++;
        rijec2++;
    }
    if (*rijec1 == '\0' && *rijec2 == '\0') return 1;
    return 0;
}

char* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci) {
    if (broj_rijeci == 0 || tekst[0] == '\0') return tekst;
    int i = 0;
    while (tekst[i] != '\0') {
        while (tekst[i] == ' ') i++;
        if (tekst[i] == '\0') break;
        int j = 0; // sluzi za prolazak kroz rijec
        char temp;
        // Uvecavamo brojac j do kraja trenutne rijeci
        while (tekst[i + j] != ' ' && tekst[i + j] != '\0') j++;
        // Privremeno postavimo oznaku za kraj stringa na kraj rijeci
        temp = tekst[i+j];
        tekst[i+j] = '\0';
        int indeksRijec = -1, brojac_rijeci = 0;
        // Pokusajmo naci rijeci u nizu rijeci za zamjeniti
        while (brojac_rijeci < broj_rijeci) {
            if (porediRijeci(tekst + i, rijeci[brojac_rijeci])) {
                indeksRijec = brojac_rijeci;
                break;
            }
            brojac_rijeci++;
        }
        tekst[i+j] = temp;
        // Ukoliko je indeks rijeci = -1, rijec nije nadjena u nizu rijeci za zamjeniti
        if (indeksRijec != -1) {
            izbaciRijecSaLokacije(tekst, i);
            ubaciRijecNaLokaciju(tekst, zamjene[indeksRijec], i);
            i += duzinaRijeci(zamjene[indeksRijec]);
        } else i+=j;
    }
    return tekst;
}

int main() {
    char* rijeci[2] = { ""Prijestolonasljednikovica"" };
    char* zamjene[2] = { ""c"" };
    char tekst[100] = ""Prijestolonasljednikovica"";
    printf(""%s"", zamjena_rijeci(tekst, rijeci, zamjene, 1));
    return 0;
}"
