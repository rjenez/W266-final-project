{
    "0": {
        "label": "1",
        "student6931": "#include <stdio.h>\n\nint max(int matrica[100][100], int visina, int sirina)\n{\n\tint i=0, j=0, brojac=0, max_brojac=0, max_broj, pomocni_niz[10000];\n\tfor(i=0; i<visina; i++) {\n\t\tfor(j=0; j<sirina; j++) {\n\t\t\tpomocni_niz[j+i*sirina]=matrica[i][j];\n\t\t}\n\t}\n\tmax_broj=pomocni_niz[0];\n\tfor(i=0; i<sirina+sirina*(visina-1); i++) {\n\t\tbrojac=0;\n\t\tfor(j=i; j<sirina+sirina*(visina-1); j++) {\n\t\t\tif(pomocni_niz[i]==pomocni_niz[j]) brojac++;\n\t\t}\n\t\tif(brojac>max_brojac) {\n\t\t\tmax_brojac=brojac;\n\t\t\tmax_broj=pomocni_niz[i];\n\t\t} else if(brojac==max_brojac && pomocni_niz[i]<max_broj) {\n\t\t\tmax_broj=pomocni_niz[i];\n\t\t}\n\t}\n\treturn max_broj;\n}\n\nint izbaci_kolone(int matrica[100][100], int visina, int sirina, int n)\n{\n\tint i=0, j=0, flag=0, k=0, lokacija=0;\n\t/* Pregled po kolonama */\n\tfor(i=0; i<sirina; i++) {\n\t\tfor(j=0; j<visina; j++) {\n\t\t\tif(matrica[j][i]==n) {\n\t\t\t\tlokacija=i;\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==1) {\n\t\t\tfor(j=0; j<visina; j++) {\n\t\t\t\tfor(k=lokacija; k<sirina-1; k++) {\n\t\t\t\t\tmatrica[j][k]=matrica[j][k+1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tsirina--;\n\t\t\ti--;\n\t\t}\n\t\tflag=0;\n\t}\n\treturn sirina;\n}\n\nint main()\n{\n\tint matrix[100][100], sir=0, vis=0, i=0, j=0, brojac=1;\n\tprintf(\"Unesite sirinu i visinu matrice: \");\n\tscanf(\"%d %d\", &sir, &vis);\n\tfor(i=0; i<vis; i++) {\n\t\tprintf(\"Unesite elemente %d. reda: \", i+1);\n\t\tfor(j=0; j<sir; j++) {\n\t\t\tscanf(\"%d\", &matrix[i][j]);\n\t\t}\n\t}\n\tdo {\n\t\tsir=izbaci_kolone(matrix, vis, sir, max(matrix, vis, sir));\n\t\tif(sir==0) break;\n\t\tprintf(\"\\nNakon %d. prolaza matrica glasi:\\n\", brojac);\n\t\tfor(i=0; i<vis; i++) {\n\t\t\tfor(j=0; j<sir; j++) {\n\t\t\t\tprintf(\"%5d\", matrix[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\tbrojac++;\n\t} while(sir>0);\n\tprintf(\"\\nNakon %d. prolaza matrica je prazna!\", brojac);\n\treturn 0;\n}\n",
        "student7936": "#include <stdio.h>\n\nint max(int matrica[100][100], int visina, int sirina)\n{\n\tint i,j,niz[1000],x;\n\tint ponavljanje=0,maks=0,element;\n\tfor (i=0; i<visina; i++) {\n\t\tfor (j=0; j<sirina; j++) {\n\t\t\tniz [i*sirina+j]=matrica[i][j];\n\t\t}\n\t}\n\tx=niz[0];\n\tfor (i=0; i<=(visina-1)*sirina+sirina-1; i++) {\n\t\tponavljanje=0;\n\t\telement=niz[i];\n\t\tfor (j=i; j<=(visina-1)*sirina+sirina-1; j++) {\n\t\t\tif (element==niz[j]) {\n\t\t\t\tponavljanje++;\n\t\t\t}\n\t\t}\n\t\tif(ponavljanje>maks) {\n\t\t\tmaks=ponavljanje;\n\t\t\tx=element;\n\t\t} else if (ponavljanje==maks) {\n\t\t\tif (element<x)\n\t\t\t\tx=element;\n\t\t\telse continue;\n\t\t}\n\t}\n\treturn x;\n\n}\n\nint izbaci_kolone (int matrica[100][100], int visina, int sirina, int N)\n{\n\tint i,j,k;\n\tint pom=0;\n\tfor (i = 0; i<sirina; i++) {\n\t\tpom=0;\n\t\tfor (j=0; j<visina; j++) {\n\t\t\tif (matrica[j][i]==N) {\n\t\t\t\tpom=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (pom==1) {\n\t\t\tfor (j = 0; j <visina; j++) {\n\t\t\t\tfor (k=i; k <sirina-1; k++) {\n\t\t\t\t\tmatrica[j][k] = matrica[j][k+1];\n\t\t\t\t}\n\t\t\t}\n\t\t\ti--;\n\t\t\tsirina--;\n\t\t}\n\t}\n\treturn sirina;\n}\n\nint main ()\n{\n\tint i,j,X[100][100],vis,sir,clan,k=1;\n\tprintf (\"Unesite sirinu i visinu matrice: \");\n\tscanf (\"%d %d\", &sir, &vis);\n\tfor (i=0; i<vis; i++) {\n\t\tprintf (\"Unesite elemente %d. reda: \", i+1);\n\t\tfor (j=0; j<sir; j++) {\n\t\t\tscanf (\"%d\", &X[i][j]);\n\t\t}\n\t}\n\n\twhile (sir>0) {\n\t\tclan=max(X,vis,sir);\n\t\tsir=izbaci_kolone(X,vis,sir,clan);\n\t\tif (sir==0) break;\n\t\tprintf (\"\\nNakon %d. prolaza matrica glasi: \\n\",k++);\n\t\tfor (i=0; i<vis; i++) {\n\t\t\tfor (j=0; j<sir; j++) {\n\t\t\t\tprintf (\"%5d\", X[i][j]);\n\t\t\t}\n\t\t\tprintf (\"\\n\");\n\t\t}\n\t}\n\tprintf (\"\\nNakon %d. prolaza matrica je prazna!\", k);\n\n\treturn 0;\n}"
    },
    "1": {
        "label": "0",
        "student2111": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 1\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n#include <iostream>\n#include <vector> \n#include <limits>\n#include <cmath>\nstd::vector<int > pretvori_u_ternarni(int n)\n{\n\n\tstd::vector<int>vrati;\n\tint ostatak;\n\twhile (n!=0) {\n\t\tostatak=fabs(n%3);\n\t\tvrati.push_back(ostatak);\n\t\tn=n/3;\n\t}\n\treturn vrati;\n}\n\nstd::vector<int> broj_ponavljanja(int n)\n{\n\tint suma=0;\n\tint ponavlja;\n\tstd::vector<int>vrati ;\n\tauto ternarni(pretvori_u_ternarni(n));\n\tfor(int i=0;i<ternarni.size();i++)\n\t{\n\t\tponavlja=0;\n\t\tfor(int j=0;j<i;j++)\n\t\tif(ternarni[i]==ternarni[j])\n\t\tponavlja=1;\n\t\tif(ponavlja==0)\n\t\t{\tsuma=0;\n\t\t\tfor(int j=i;j<ternarni.size();j++)\n\t\t\tif(ternarni[i]==ternarni[j])\n\t\t\tsuma++;\n\t\t\tvrati.push_back(suma);\n\t\t}\n\t\t\n\t}\n\t\n\treturn vrati;\n}\n\n\nbool opaki(int n)\n{\n\n\tauto vrati=broj_ponavljanja(n);\n\tfor(int i=0;i<vrati.size();i++)\n\tif(vrati[i]%2!=0)\n\treturn false;\n\treturn true;\n\t\n}\n\nbool odvratni(int n)\n{\n\tauto vrati=broj_ponavljanja(n);\n\tfor(int i=0;i<vrati.size();i++)\n\tif(vrati[i]%2==0)\n\treturn false;\n\treturn true;\n\t\n}\n\n\nstd::vector<int> IzdvojiGadne (std::vector<int>v ,bool gadni)\n{\n\tstd::vector<int >vrati;\n\tint ponavlja=1;\n\t\n\tif(gadni==true)\n\t{\n\t\tfor(int i=0;i<v.size();i++)\n\t\t{\n\t\t\tif(opaki(v[i])==true)\n\t\t\t{\n\t\t\t\tponavlja=0;\n\t\t\t\tfor(int j=0;j<i;j++)\n\t\t\t\t{\n\t\t\t\t\tif(v[j]==v[i])\n\t\t\t        {\n\t\t\t        \tponavlja=1;\n\t\t\t        }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(ponavlja==0)\n\t\t\t\t{\n\t\t\t\t\tvrati.push_back(v[i]);\n\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\tponavlja=0;\n\tif(gadni==false)\n\t{\n\t\tfor(int i=0;i<v.size();i++)\n\t\t{\n\t\t\tif(odvratni(v[i])==true)\n\t\t\t{\n\t\t\t\tponavlja=0;\n\t\t\t\tfor(int j=0;j<i;j++)\n\t\t     \t{\n\t\t     \t\tif(v[i]==v[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tponavlja=1;\n\t\t\t\t\t}\n\t\t     \t}\n\t\t\t\tif(ponavlja==0)\n\t\t\t\t{\n\t\t\t\t\tvrati.push_back(v[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\treturn vrati;\n}\nint main ()\n{\n\tint broj;\n\tstd::cout<<\"Unesite brojeve (0 za prekid unosa): \";\n\tstd::cin>>broj;\n\tstd::vector<int>v ;\n\twhile (broj!=0) {\n\t\tv.push_back(broj);\n\t\tstd::cin>>broj;\n\t}\t\n\tstd::vector<int>ispis ;\n\t ispis=IzdvojiGadne(v,1);\n\t std::cout<<\"Opaki: \";\n\tfor(int i=0;i<ispis.size();i++)\n\tstd::cout<<ispis[i]<<\" \";\n\t ispis=IzdvojiGadne(v,0);\n\tstd::cout<<\"\\n\";\n\tstd::cout<<\"Odvratni: \";\n\tfor(int i=0;i<ispis.size();i++)\n\tstd::cout<<ispis[i]<<\" \";\n\treturn 0;\n}",
        "student3872": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 1\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n#include<vector> \n#include<iostream>\n#include<cmath>\nusing namespace std;\nvector<int> Duplikati(vector<int> A)\n{\n   for(int i = 0 ; i < A.size()-1 ; i++)\n   {\n      for(int j = i+1 ; j < A.size() ; j++)\n      {\n         if(A[j]==A[i])\n         {\n            A.erase(A.begin()+j);\n            j--;\n         }\n      }\n   } \n   vector<int> novi=A;\n   return novi;}\n\n\nint Konvertuj(int broj)\n{\n\t\n\t \n\tint Ternarni=0;\n\tint ostatak, brojac(1);\n\twhile(broj!=0)\n\t{\n\t\tostatak=broj%3;\n\t\tbroj/=3;\n\t\tTernarni+=ostatak*brojac;\n\t\tbrojac*=10;\n\t}\n\n\treturn Ternarni;\n}\nstd::vector<int>RastaviNaCifre(int broj)\n{\n\t\n\tstd::vector<int> Cifre;\n\twhile(broj!=0)\n\t{\n\t\tint pomocni=broj%10;\n\t\tbroj/=10;\n\t\tCifre.push_back(pomocni);\n}\nreturn Cifre;\n}\n\nbool DaLiSuParne(int broj)\n{\nstd::vector<int> Cifre=RastaviNaCifre(broj);\nint brojac_0(0), brojac_1(0), brojac_2(0);\nfor(int i=0;i<Cifre.size();i++)\n{\n\tif(Cifre[i]==0) brojac_0++;\n\telse if(Cifre[i]==1) brojac_1++;\n\telse if(Cifre[i]==2) brojac_2++;\n}\nif(brojac_0%2==0 && brojac_1%2==0 && brojac_2%2==0) return true;\nreturn false;\n\n}\nbool DaLiSuNeparne(int broj)\n{\n\tstd::vector<int> Cifre=RastaviNaCifre(broj);\n\tint brojac_0(0), brojac_1(0), brojac_2(0);\n\tfor(int i=0;i<Cifre.size();i++)\n\t{\n\t\tif(Cifre[i]==0) brojac_0++;\n\telse if(Cifre[i]==1) brojac_1++;\n\telse if(Cifre[i]==2) brojac_2++;\n\t}\nstd::vector<int> RazlicitiOdNule;\n\tif(brojac_0!=0) RazlicitiOdNule.push_back(brojac_0);\n\tif(brojac_1!=0) RazlicitiOdNule.push_back(brojac_1);\n\tif(brojac_2!=0) RazlicitiOdNule.push_back(brojac_2);\n\tfor(int i=0;i<RazlicitiOdNule.size();i++)\n    {\n        if(RazlicitiOdNule[i]%2==0) return false;\n    }\n    return true;\n}\n\n\nstd::vector<int>IzdvojiGadne( std::vector<int> v, bool parnost)\n{\n\tstd::vector<int> bez_duplih=Duplikati(v);\n\tstd::vector<int>novi;\n\tif(parnost==true)\n\t{\n\t\tfor(int i=0;i<bez_duplih.size();i++)\n\t\t{\n\t\t\t\n\t\t\tint negativni=0;\n\t\t    if(bez_duplih[i]<0) {bez_duplih[i]=fabs(bez_duplih[i]); negativni=1;}\n\t\t\tif(bez_duplih[i]>55000) continue;\n\t\t\tint test=Konvertuj(bez_duplih[i]);\n\t\t\tif(DaLiSuParne(test))  {\nif(negativni==1) bez_duplih[i]*=-1;\t\t\tnovi.push_back(bez_duplih[i]);\n\t\t} }\n\t\t\n\t}\n\telse if(parnost==false)\n\t{\n\t\tfor(int i=0;i<bez_duplih.size();i++)\n\t\t{\n\t\t\tif(bez_duplih[i]==-608) continue;\n\t\t\tint negativni=0;\n\t\t\tif(bez_duplih[i]>55000) continue;\n\t\t    if(bez_duplih[i]<0) {bez_duplih[i]=fabs(bez_duplih[i]); negativni=1;}\n\t\t\tint test=Konvertuj(bez_duplih[i]);\n\t\t\tif(DaLiSuNeparne(test)) \n\t\t\t{\n\t\t\t\tif(negativni==1) bez_duplih[i]*=-1;\n\t\t\t\tnovi.push_back(bez_duplih[i]);\n\t\t\n\t\t\t\t\n\t\t\t} }\n\t\n\t}\n\treturn novi;\n}\nint main ()\n{\n\tstd::vector<int>Vektor;\n\tstd::cout<<\"Unesite brojeve (0 za prekid unosa): \";\n\tfor(;;)\n\t{\n\t\tint broj;\n\t\tstd::cin>>broj;\n\t\tif(broj==0) break;\n\t\tVektor.push_back(broj);\n\t}\n\tauto Opaki=IzdvojiGadne(Vektor, true);\n    auto Odvratni=IzdvojiGadne(Vektor, false);\n    std::cout<<\"Opaki: \";\n    for(int i=0;i<Opaki.size();i++)\n    {\n    \tstd::cout<<Opaki[i]<<\" \";\n    }\n    std::cout<<std::endl;\n    std::cout<<\"Odvratni: \";\n    for(int i=0;i<Odvratni.size();i++)\n    {\n    \tstd::cout<<Odvratni[i]<<\" \";\n    }\n    std::cout<<std::endl;\n\treturn 0;\n}"
    },
    "2": {
        "label": "1",
        "student4280": "#include <iostream>\n#include <cmath>\n#include <vector> \n#include <stdexcept>\n#include <functional>\n\n\nstd::function<double(double)> PrvaSuma(double x1, double x2, double k)\n{\n    return[x1, x2, k](double y) {\n        if(y==x1) return x2;\n    };\n}\n\nstd::function<double(double)> DrugaSuma(double x1, double x2, double k) {\n        return[x1, x2, k](double y) {\n          return k/(y-x1);\n        };\n}\n        \nstd::function<double(double)> F() {\n    return [](double x) {\n        return x*x+sin(x);\n    };\n}\n\nstd::function<float(float)> BaricentricnaInterpolacija(std::vector<std::pair <double,double>> par, int d) {\n         \n\n            if(d<0 || d>par.size()) throw std::domain_error(\"Nedozvoljen red\");\n\n            for(int i=0; i<par.size()-1; i++) {\n                for(int j=i+1; j<par.size(); j++) {\n                    if(par[i].first==par[j].first) throw std::domain_error(\"Neispravni cvorovi\");\n                }\n            }\n\n            return [par, d](double x) {\n                double zbir1=0, zbir2=0, proz=1, wi=0;\n                int pocetak=1, kraj=1;\n\n                for(int i=1; i<=par.size(); i++) {\n                    pocetak=1, kraj=i, wi=0;\n                    if(i-d>pocetak) pocetak=i-d;\n                    if(par.size()-d<kraj) kraj=par.size()-d;\n\n                    for(int j=pocetak; j<=kraj; j++) {\n                        proz=1;\n\n                        for(int k=j; k<=j+d; k++) {\n                            if(i==k) continue;\n                            proz*=1./(par[i-1].first-par[k-1].first);\n\n                        }\n                        wi+=pow(-1,j-1)*proz;\n                    }\n                    if(x==par[i-1].first)\n                        return par[i-1].second;\n\n                    zbir1+=PrvaSuma(par[i-1].first, par[i-1].second, wi)(x);\n                    zbir2+=DrugaSuma(par[i-1].first, par[i-1].second, wi)(x);\n                }\n                return zbir1/zbir2;\n            };\n        }\n\n\n\nstd::function<double(double)>BaricentricnaInterpolacija(std::function<double(double)> F, double xmin, double xmax, double dx, int d) {\n    \n            if (xmin < xmax || dx<0) throw std::domain_error(\"Nekorektni parametri\");\n\n            return [F, xmin, xmax, dx, d](double x) \n            {\n                \n                std::vector<double> vtackica;\n                for(double i=xmin; i<=xmax; i+=dx) {\n                    vtackica.push_back(i);\n                }\n\n                std::vector<std::pair<double,double>> par(vtackica.size());\n                for(int i=0; i<par.size(); i++) {\n                    par[i].first=vtackica[i];\n                    par[i].second= F(vtackica[i]);\n\n                }\n\n                double zbir1=0, zbir2=0, wi=0, proz=1;\n                int pocetak=1, kraj=1;\n\n                for(int i=1; i<=par.size(); i++) {\n                    pocetak=1; kraj=i; wi=0;\n                    if(i-d>pocetak) pocetak=i-d;\n                    if(par.size()-d<kraj) kraj=par.size()-d;\n\n                    for(int j=pocetak; j<=kraj; j++) {\n                        proz=1;\n\n                        for(int k=j; k<=j+d; k++) {\n                            if(i==k) continue;\n                            proz*=1./(par[i-1].first-par[k-1].first);\n                        }\n                        \n                        wi+=pow(-1,j-1)*proz;\n                    }\n                    \n                if(x==par[i-1].first)\n                    return par[i-1].second;\n\n                zbir1+=PrvaSuma(par[i-1].first, par[i-1].second, wi)(x);\n                zbir2+=DrugaSuma(par[i-1].first, par[i-1].second, wi)(x);\n            }\n            return zbir1/zbir2;\n\n        };\n}\n\nint main ()\n{\n   \n    try {\n        int opc=0, br=0;\n        double x,y,red,unos=0;\n        \n        for(;;) {\n            std::cout<<\"Odaberite opciju (1 - unos cvorova, 2 - aproksimacija): \";\n            std::cin >> opc;\n\n            if(opc==1) {\n                std::cout << \"Unesite broj cvorova: \";\n                std::cin >> br;\n                \n                std::cout <<\"Unesite cvorove kao parove x y: \";\n                std::vector<std::pair <double,double>>par(br);\n                \n                for(int i; i<br; i++) {\n                    std::cin >> x;\n                    std::cin >> y;\n                    par[i].first=x;\n                    par[i].second=y;\n                }\n                \n                std::cout <<\"Unesite red interpolacije: \";\n                std::cin >> red;\n\n                while(1) {\n                    std::cout << \"Unesite argument (ili \\\"kraj\\\" za kraj): \";\n                    std::cin >> unos;\n\n                    if(std::cin.fail()) {\n                        return 0;\n                    }\n                    \n                    double R1=BaricentricnaInterpolacija(par,red)(unos);\n                    std::cout << \"f(\"<<unos<<\") = \" << R1 << std::endl;\n                }\n            } \n            \n            else if(opc==2) {\n                std::function<double(double)> helpf(F());\n                \n                std::cout << \"Unesite krajeve intervala i korak: \";\n                double korak, pocetak, kraj;\n                std::cin >> pocetak;\n                std::cin >> kraj;\n                std::cin >> korak;\n                \n                std::cout << \"Unesite red interpolacije: \";\n                std::cin >> red;\n                std::cin.clear();\n                std::cin.ignore(10000, '\\n');\n\n                while(1) {\n                    std::cout << \"Unesite argument(ili \\\"kraj\\\" za kraj): \";\n                    std::cin >> unos;\n\n                    if(std::cin.fail()) {\n                        \n                        return 0;\n                    }\n                    \n                    double R2=BaricentricnaInterpolacija(helpf,pocetak,kraj,korak,red)(unos);\n                    std::cout << \"f(\"<<unos<<\") = \" << helpf(unos) << \" fapprox(\"<<unos<<\") = \"<< R2 << std::endl;\n                }\n            }\n            \n            break;\n        }\n        \n        return 0;\n        \n        \n    } catch(std::domain_error greska) {\n        \n        std::cout<<greska.what();\n        \n    }\n}",
        "student6029": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 1\n//Autotestovi by Enil Pajic (epajic1@etf.unsa.ba)\n#include <iostream>\n#include <cmath>\n#include <functional>\n#include <vector>\n#include <stdexcept>\n\nusing namespace std;\nfunction<double(double)> suma11(double prvi, double drugi, double koef)\n         {\n              return [prvi, drugi, koef](double y){if(y==prvi) return drugi; return koef*drugi/(y-prvi);};\n         }\n         \nfunction<double(double)> suma22(double prvi, double drugi, double koef)\n         {\n              return [prvi, drugi, koef](double y){return koef/(y-prvi);};\n         }\n         \n         \nfunction<double(double)> fun(){return [](double x){return x*x+sin(x);};}\n         \nfunction<float(float)> BaricentricnaInterpolacija(vector<pair<double, double>> parovi, int d)\n{\n    if(d<0 || d>parovi.size()) throw domain_error(\"Nedozvoljen red\");\n    \n    for(int i=0; i<parovi.size()-1; i++)\n        for(int j=i+1; j<parovi.size(); j++)\n            if(parovi[i].first==parovi[j].first)\n                throw domain_error(\"Neispravni cvorovi\");\n         \n    return [parovi, d](double x)\n    {\n        double suma1=0, suma2=0, proizvod=1, wi=0;\n    int poc=1, end=1;\n        //suma za f(x)\n        for(int i=1; i<=parovi.size(); i++)\n        {\n          //ra\u010dunamo wi\n         //suma za wi\n         poc=1; end=i; wi=0;\n         if(i-d>poc) poc=i-d;\n         if(parovi.size()-d<end) end=parovi.size()-d;\n         \n         //cout<<endl<<\"i=\"<<i<<\"\\npoc=\"<<poc<<\"\\nend= \"<<end;\n         //cout<<endl<<\"j= \";\n         for(int j=poc; j<=end; j++)\n         { \n              //cout<<\" \"<<j<<\" \";\n              //proizvod za wi\n              \n              proizvod=1;\n              \n             //cout<<endl<<\"k= \";\n             \n               for(int k=j; k<=j+d; k++)\n              {\n                 if(i==k) continue;\n                 proizvod*=1./(parovi[i-1].first-parovi[k-1].first);\n                 \n                 //cout<<\" \"<<k<<\" \";\n             }\n             wi+=pow(-1,j-1)*proizvod;\n          }\n          if(x==parovi[i-1].first)\n            return parovi[i-1].second;\n          \n          suma1+=suma11(parovi[i-1].first, parovi[i-1].second, wi)(x);\n          suma2+=suma22(parovi[i-1].first, parovi[i-1].second, wi)(x);\n        }\n        return suma1/suma2;\n    };\n    \n}\n\n\nfunction<double(double)> BaricentricnaInterpolacija(function<double(double)> fun, double x_min, double x_max, double dx, int d)\n{\n    if(x_min>x_max || dx<0)\n        throw domain_error(\"Nekorektni parametri\");\n      \n    return [fun, x_min, x_max, dx, d](double x)\n    {\n        vector<double> tacke;\n        for(double i=x_min; i<=x_max; i+=dx)\n            tacke.push_back(i);\n            \n        \n        vector<pair<double, double>> parovi(tacke.size());\n        for(int i=0; i<parovi.size(); i++)\n        {\n            parovi[i].first=tacke[i];\n            parovi[i].second=fun(tacke[i]);\n        }\n            \n        double suma1=0, suma2=0, proizvod=1, wi=0;\n    int poc=1, end=1;\n        //suma za f(x)\n        for(int i=1; i<=parovi.size(); i++)\n        {\n          //ra\u010dunamo wi\n         //suma za wi\n         poc=1; end=i; wi=0;\n         if(i-d>poc) poc=i-d;\n         if(parovi.size()-d<end) end=parovi.size()-d;\n         \n         //cout<<endl<<\"i=\"<<i<<\"\\npoc=\"<<poc<<\"\\nend= \"<<end;\n         //cout<<endl<<\"j= \";\n         for(int j=poc; j<=end; j++)\n         { \n              //cout<<\" \"<<j<<\" \";\n              //proizvod za wi\n              \n              proizvod=1;\n              \n             //cout<<endl<<\"k= \";\n             \n               for(int k=j; k<=j+d; k++)\n              {\n                 if(i==k) continue;\n                 proizvod*=1./(parovi[i-1].first-parovi[k-1].first);\n                 \n                 //cout<<\" \"<<k<<\" \";\n             }\n             wi+=pow(-1,j-1)*proizvod;\n          }\n          if(x==parovi[i-1].first)\n            return parovi[i-1].second;\n          \n          suma1+=suma11(parovi[i-1].first, parovi[i-1].second, wi)(x);\n          suma2+=suma22(parovi[i-1].first, parovi[i-1].second, wi)(x);\n        }\n        return suma1/suma2;\n            \n    };\n    \n    \n}\n\n\nint main ()\n{\n    //auto f(BaricentricnaInterpolacija({{1, 3}, {2, 5}, {4, 4}, {5, 2}, {7, 1}},2));\n    //cout<<f(4);\n    try\n    {\n        int opcija=0, broj_cvorova=0;\n        double x, y, red, unos=0;\n        for(;;)\n        {\n            cout<<\"Odaberite opciju (1 - unos cvorova, 2 - aproksimacija): \";\n            cin>>opcija;\n            if(opcija==1)\n            {\n                cout<<\"Unesite broj cvorova: \";\n                cin>>broj_cvorova;\n                cout<<\"Unesite cvorove kao parove x y: \";\n                vector<pair<double, double>> parovi(broj_cvorova);\n                for(int i=0; i<broj_cvorova; i++)\n                {\n                    cin>>x; cin>>y;\n                    parovi[i].first=x;\n                    parovi[i].second=y;\n                }\n                cout<<\"Unesite red interpolacije: \";\n                cin>>red;\n                while(1)\n                {\n                    cout<<\"Unesite argument (ili \\\"kraj\\\" za kraj): \";\n                    cin>>unos;\n                    if(cin.fail())\n                    {\n                        return 0;\n                    }\n                    double rez=BaricentricnaInterpolacija(parovi,red)(unos);\n                    cout<<\"f(\"<<unos<<\") = \"<<rez<<endl;\n                }\n            }\n            \n            else if(opcija==2)\n            {\n                function<double(double)> pom(fun());\n                cout<<\"Unesite krajeve intervala i korak: \";\n                double korak, poc, end;\n                cin>>poc; cin>>end; cin>>korak; \n                cout<<\"Unesite red interpolacije: \";\n                cin>>red; cin.clear(); cin.ignore(10000, '\\n'); \n                 while(1)\n                {\n                    cout<<\"Unesite argument (ili \\\"kraj\\\" za kraj): \";\n                    cin>>unos; \n                    if(cin.fail())\n                    {\n                        return 0;\n                    }\n                    double re=BaricentricnaInterpolacija(pom, poc, end, korak, red)(unos);\n                    cout<<\"f(\"<<unos<<\") = \"<<pom(unos)<<\" fapprox(\"<<unos<<\") = \"<<re<<endl;\n                }\n            }\n            break;\n        }\n    \treturn 0;\n    }\n    catch(domain_error dom)\n    {\n        cout<<dom.what();\n    }\n}"
    },
    "3": {
        "label": "0",
        "student1624": "#include <stdio.h>\n#include <string.h>\n#define eps 0.0001\n\nstruct Student {\n\tchar ime[20],prezime[20];\n\tint ocjene[50];\n\tint br_ocjena;\n};\nint summa(int niz[],int vel){//funkcija primi niz i velicinu i izracuna sumu, a vrati negativan broj ako ima neka ocjena koaj je 5\n\tint i,suma=0;\n\tfor(i=0;i<vel;i++)\n\t\tif(niz[i]==5) return -100;\n\t\t\telse suma+=niz[i];\n\treturn suma;\n}\nint uporedi(char*s1,char*s2){\t\t//funkcija leksikografski poredi 2 stringa\n\tif(strcmp(s1,s2)<0) return 1;\n\tif(strcmp(s1,s2)>0) return 2;\n}\n\nfloat prosjek(int niz[],int vel){\t//funkcija primi niz i velicinu i vrati prosjek ocjena\n\tint i=0,suma;\n\tsuma=summa(niz,vel);\n\tif(vel==0 ||suma<0) return 5;\t\t//ako je suma negativna il ako je velicina niza0 treb vratit 5 tj da je pao\n\treturn (float)suma/vel;\n}\nint poredidouble(double d1,double d2){\t\t//funkcija poredi 2 doubla, ako su jednaki vrati 5\n\tif(d1>d2) return 1;\n\tif(d1<d2)return 0;\n\telse return 5;\n}\nint izbaci(struct Student niz[], int vel,double prosjekk){\t//funkcija vrati preostali broj clanova u nizu, nakon izbacivanja onih ispod prosjeka\n\tint i, j;\n\tfor(i=0;i<vel;i++){\n\t\tif(prosjekk-prosjek(niz[i].ocjene,niz[i].br_ocjena)>eps){\n\t\t\tfor(j=i;j<vel-1;j++)\n\t\t\t\tniz[j]=niz[j+1];\n\t\t\tvel--;\n\t\t\ti--;\n\t\t}\n\t}\n\treturn vel;\n}\nint dalijeveci(struct Student pr, struct Student dr){\t\t\t//funkcija vrati 1 il 0 s obzirom dali 1 student treba ici prije drugog\n\t//prvo se porede prosjeci, pa prezimena pa imena\n\tint vr=poredidouble(prosjek(pr.ocjene,pr.br_ocjena),prosjek(dr.ocjene,dr.br_ocjena));\n\tif(vr==1 ||vr==5 && uporedi(pr.prezime, dr.prezime)==1) return 1;\n\tif(vr==0 ||vr==5 && uporedi(pr.prezime,dr.prezime)==2) return 0;\n\tif(vr==5){\n\t\tif(uporedi(pr.ime,dr.ime)==1) return 1;\n\t\tif(uporedi(pr.ime,dr.ime)==2) return 0;}\n\t\treturn 1;\t//receno moze vratit funkcija bilo sta ako gore nije nista vratila\n\t}\nint vratimin(struct Student niz[],int vel,double prosjekk){\t//funnkcija primi niz, i velicinu i vrati onaj index elementa koji ima namanji prosjek\n\tint i,j;\n\tdouble min=10;\n\tint indexmin=0;\n\tfor(i=0;i<vel;i++){\n\t\tif(min-prosjek(niz[i].ocjene, niz[i].br_ocjena)>eps){\n\t\t\tmin=prosjek(niz[i].ocjene, niz[i].br_ocjena);\n\t\t\tindexmin=i;\n\t\t}\n\t}\n\treturn indexmin;\n\t\n}\nint genijalci(struct Student niz[],int vel,double prosjekk){\n\tint i,j,indexprvi,indexdrugi,indextreci;\n\tdouble min=10;\n\tvel=izbaci(niz,vel,prosjekk);\t//izbacimo one ispod prosjeka\n\tint indexmin=vratimin(niz,vel,prosjekk);\t//nadjemo index namjanjeg\n\tint bilo=0;\n\tswitch(vel){\n\t\tcase 1: \t\t//ako je ostao 1 element samo ga ispisemo jer je on najveci\n\t\t\tindexprvi=indexmin;\n\t\t\tprintf(\"\\n%s %s\",niz[indexprvi].prezime,niz[indexprvi].ime);\n\t\t\treturn vel;\n\t\tcase 0: \t//ako je velicina 0 vrati 0\n\t\t\treturn 0;\n\t\tcase 2: //ako je velicina 2 printamo 2 najbolja\n\t\n\t\t\tindexprvi=indexmin;\n\t\tfor(i=0;i<vel;i++){\n\t\t\tif(dalijeveci(niz[i],niz[indexprvi])==1)\t//nadjemo najboljeg studenta\n\t\t\tindexprvi=i;\n\t\t}\n\t\tindexdrugi=indexmin;\n\t\tfor(i=0;i<vel;i++){\n\t\t\tif(dalijeveci(niz[i],niz[indexdrugi])==1 && i!=indexprvi){\t//nadjemo drugog najboljeg kojem je index razlicit od onog najboljeg\n\t\t\t\tindexdrugi=i;\n\t\t\t}\n\t\t}\n\t\t\n\tprintf(\"%s %s\\n%s %s\\n\",niz[indexprvi].prezime,niz[indexprvi].ime,niz[indexdrugi].prezime,niz[indexdrugi].ime);\n\t\n\treturn 2;\n\t\t\n\tdefault: \n\tindexprvi=indexmin; indexdrugi=indexmin; indextreci=indexmin;\n\tfor(i=0;i<vel;i++){\n\t\tif(dalijeveci(niz[i],niz[indexprvi])==1)\n\t\tindexprvi=i;\n\t}\n\tfor(i=0;i<vel;i++){\n\t\tif(i==indexprvi) continue;\n\t\tif(dalijeveci(niz[i],niz[indexdrugi])==1) {\n\t\t\tindexdrugi=i;\n\t\t}\n\t}\n\tfor(i=0;i<vel;i++){\n\t\tif(i==indexdrugi || i== indexdrugi) continue;\t//preskacemo ona 2 najbolj sto smo ih ispisali\n\t\tif(dalijeveci(niz[i],niz[indextreci])==1 && i!=indexprvi)\n\t\tindextreci=i;\n\t}\n\t\tprintf(\"%s %s\\n\",niz[indexprvi].prezime, niz[indexprvi].ime);\n\t\tprintf(\"%s %s\\n\",niz[indexdrugi].prezime, niz[indexdrugi].ime );\n\t\tprintf(\"%s %s\\n\",niz[indextreci].prezime,niz[indextreci].ime);\n\treturn vel;\n\t\n}\n}\nint main() {\n\t\n\tstruct Student studenti[5]={\n\t\t{\"Amra\",\"Djelmo\",{7,10,10,10,10},5},\n\t\t{\"Aske\",\"Askelov\",{10,10,10,10,10},5},\n\t};\n\tgenijalci(studenti,2,6.5);\n\n\treturn 0;\n}\n",
        "student8288": "#include <stdio.h>\n\nstruct Student {\n\tchar ime[20], prezime[20];\n\tint ocjene[50];\n\tint br_ocjena;\n};\n\nint daLiImaPet(struct Student s)\n{\n\tint i; \n\t\n\tfor(i=0;i<s.br_ocjena;i++)\n\t{\n\t\tif(s.ocjene[i] == 5)\n\t\treturn 1;\n\t}\n\t\n\t\n\treturn 0;\n\n}\n\nint imaOcjenu(struct Student s)\n{\n\tif(s.br_ocjena == 0)\n\t\treturn 0;\n\t\t\n\treturn 1; \t\n}\n\nfloat ukProsjek(struct Student s)\n{\n\tint i;\n\tfloat suma = 0;\n\tfloat br_ocjena;\n\t\n\tif(s.br_ocjena==0)\n\t\treturn 5;\n\t\n\tfor(i=0;i<s.br_ocjena;i++)\n\t{\n\t\tsuma+=s.ocjene[i];\n\t\t\n\t}\n\tbr_ocjena=s.br_ocjena;\n\tsuma=suma/br_ocjena;\n\treturn suma;\n}\n\nvoid kopirajRijec(char* ulaz,char* izlaz)\n{\n\twhile(*ulaz != '\\0' && *ulaz !='\\n')\n\t*izlaz++=*ulaz++;\n\t*izlaz='\\0';\n\t\n}\n\nint jednakeRijeci(char* prva, char* druga)\n{\n\tint jednake = 1;\n\twhile((*prva != '\\n' && *prva != '\\0')&&(*druga != '\\n' && *druga != '\\0'))\n\t{\n\t\tif(*prva != *druga) jednake = 0;\n\t\tprva++;\n\t\tdruga++;\n\t}\n\t\n\tif(*prva != *druga) jednake = 0;\n\t\n\treturn jednake;\n\t\n}\n\nint vecaRijec(char* r1,char* r2)\n{\n\tchar prva[100];\n\tchar druga[100];\n\tkopirajRijec(r1,prva);\n\tkopirajRijec(r2,druga);\n\tint clan = 0;\n\t\n\twhile((prva[clan] != '\\n' && prva[clan] != '\\0')&&(druga[clan] != '\\n' && druga[clan] != '\\0'))\n\t{\n\t\tif(prva[clan] > druga[clan]) return 1;\n\t\telse if(prva[clan] < druga[clan]) return 0;\n\t\tclan++;\n\t}\n\tif(prva[clan] == '\\n' || prva[clan] == '\\0') return 1;\n\t\n\telse return 0;\n}\n\nint daLiJeVeci(struct Student s1, struct Student s2)\n{\n\tif(ukProsjek(s1)>ukProsjek(s2))\n\t{\n\t\treturn 1;\n\t}\n\telse if(ukProsjek(s1)<ukProsjek(s2))\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\telse\n\t{\n\t\tif(!jednakeRijeci(s1.prezime,s2.prezime) && vecaRijec(s1.prezime,s2.prezime))\n\t\t\treturn 1;\n\t\t\n\t\telse if(!jednakeRijeci(s1.prezime,s2.prezime) && vecaRijec(s1.prezime,s2.prezime))\n\t\t\treturn 0;\n\t\t\n\t\telse\n\t\t \t{\n\t\t \t\tif(!jednakeRijeci(s1.ime,s2.ime) && vecaRijec(s1.ime,s2.ime))\n\t\t \t\t\treturn 0;\n\t\t \t\t\n\t\t \t\telse if(!jednakeRijeci(s1.ime,s2.ime) && vecaRijec(s1.ime,s2.ime))\n\t\t \t\t\treturn 1;\n\t\t \t\t\t\n\t\t \t\telse return 1;\n\t\t \t}\n\t}\n\t\n}\n\nvoid ispisStudent(struct Student s)\n\t{\n\t\tprintf(\"%s %s\\n\",s.prezime,s.ime);\n\t\t\n\t}\n\n\n\nint genijalci(struct Student *niz, int vel,float prosjek )\n{\n\tint i,j;\n    int  nizN[100];\n\t\n\tint temp;\n\t\n\tfor(i=0;i<vel;i++)\n\t{\n\t\tif(imaOcjenu(niz[i]) == 0 || daLiImaPet(niz[i]) == 1 || ukProsjek(niz[i]) < prosjek)\n\t\t{\n\t\t\tfor(j=i;j<vel-1;j++)\n\t\t\t{\n\t\t\t\tniz[j]=niz[j+1];\n\t\t\t\t\n\t\t\t}\n\t\t\tvel--;\n\t\t\ti--;\n\t\t}\n\t}\n\t\n\t\n\t\n\tfor(i=0;i<vel;i++)\n\t{\n\t\tnizN[i] = i;\n\t}\n\t\n\tfor(i=0;i<vel;i++)\n\t{\n\t\tfor(j=i;j<vel;j++)\n\t\t{\n\t\t\tif(daLiJeVeci(niz[nizN[j]],niz[nizN[i]]))\n\t\t\t{\n\t\t\t\ttemp = nizN[j];\n\t\t\t\tnizN[j] = nizN[i];\n\t\t\t\tnizN[i] = temp;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\n\t}\n\t\n\tfor(i=0;i<3 && i<vel;i++)\n\t{\n\t \tispisStudent(niz[nizN[i]]);\n\t}\n\t\n\treturn vel;\n}\n\n\n\n\nint main() {\n\t\treturn 0;\n}\n"
    },
    "4": {
        "label": "1",
        "student4860": "#include <stdio.h>\n\n\n\n\tint DaLiJeProst(int n){\n\tint i;\n\tfor(i=2;i<n;i++){\n\t\tif (n%i==0){\n\t\t\tn=0; \n\t\t\tbreak;\n\t\t}\n\t}\n\treturn n;\n\n}\n\nint daj_prost(){\n\tstatic int a=1;\n\twhile(1){\n\t\tif(DaLiJeProst(++a))\n\t\treturn a;\n\t}\n}\n\nint main(){\n\tint m,n,s=0,br,c,d,i;\n\tdo{\n\t\tprintf(\"Unesite brojeve A i B:\");\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tif(n<=0)\n\t\tprintf(\" A nije prirodan broj.\\n\");\n\t\telse if (n>=m)\n\t\tprintf(\" A nije manje od B.\\n\");\n\t\n\t}\n\twhile (n<=0 || n>=m);\n\t\n\tc=n;\n\td=m;\n\t\n\tfor(;;){\n\t\tbr=daj_prost();\n\t\tif (br>=d) break;\n\t\telse if (br>c)\n\t\ts=s+br;\n\t}\n\t\n\tprintf(\" Suma prostih brojeva izmedju %d i %d je %d.\",n,m,s);\n\treturn 0;\n}\n",
        "student9923": "#include <stdio.h>\nint dalijeprosT(int t){\n\tint a=1,i;\n\tfor(i=2;i<t;i++){ \n\tif(t%i==0){\n\tt=0;\n\tbreak;\n\t}\n\t}\n\treturn t;\n}\nint daj_prost () {\n\tstatic int x=1;\n\twhile(1) {\n\t\tif(dalijeprosT(++x)) return x;\n\t}\n\t}\n\nint main() {\n\tint t,a,e,r,suma=0,br;\n\tdo {\n\t\tprintf(\"Unesite brojeve A i B:\");\n\t\tscanf(\"%d%d\", &t,&a);\n\t\tif(t<=0)\n\t\tprintf(\" A nije prirodan broj.\\n\");\n\t\telse if(t>=a)\n\t\tprintf(\" A nije manje od B.\\n\");\n\t\t\n\t} while (t<=0 || t>=a);\n\te=t;\n\tr=a;\n\tfor(;;){\n\t\tbr= daj_prost();\n\t\tif(br>=r) break;\n\t\telse if(br>e)\n\t\tsuma+=br;\n\t}\nprintf(\" Suma prostih brojeva izmedju %d i %d je %d.\",t,a,suma);\n\treturn 0;\n}\n"
    },
    "5": {
        "label": "0",
        "student1828": "#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    double P1,P2,P3,Z1,Z2,Z3,PP1,PP2,PP3,DP1,DP2,DP3,ZI1,ZI2,ZI3,BB1,BB2,BB3;\n    int O6=0,O7=0,O8=0,O9=0,O10=0;\n    //tare\n    printf (\"Unesite bodove za Tarika: \\n\");\n    printf (\"I parcijalni ispit: \" );\n    scanf (\"%lf\",&PP1);\n    if (PP1<0 || PP1>20) {\n        printf (\"Neispravan broj bodova\");\n    return 0;\n    }\n    printf (\"II parcijalni ispit: \");\n    scanf (\"%lf\",&DP1);\n    if (DP1<0 || DP1>20){\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Prisustvo: \");\n    scanf (\"%lf\",&P1);\n    if (P1<0 || P1>10){\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Zadace: \");\n    scanf (\"%lf\",&Z1);\n    if (Z1<0 || Z1>10) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zavrsni ispit: \");\n    scanf (\"%lf\", &ZI1);\n    if (ZI1<0 || ZI1>40) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    //Bojka\n    printf (\"Unesite bodove za Bojana: \\n\");\n    printf (\"I parcijalni ispit: \");\n    scanf (\"%lf\", &PP2);\n    if (PP2<0 || PP2>20) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"II parcijalni ispit: \");\n    scanf (\"%lf\",&DP2);\n    if (DP2<0 || DP2>20){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Prisustvo: \"); \n    scanf (\"%lf\",&P2);\n    if (P2<0 || P2>10) { \n        printf (\"Neispravan broj bodova\");\n        return 0; }\n    printf (\"Zadace: \");\n    scanf (\"%lf\",&Z2);\n    if (Z2<0 || Z2>20){\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Zavrsni ispit: \");\n    scanf (\"%lf\", &ZI2);\n    if (ZI2<0 || ZI2>40) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    //mirzibad\n    printf (\"Unesite bodove za Mirzu: \\n\");\n    printf (\"I parcijalni ispit: \");\n    scanf (\"%lf\",&PP3);\n    if (PP3<0 || PP3>20) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"II parcijalni ispit: \");\n    scanf (\"%lf\",&DP3);\n    if (DP3<0 || DP3>20){\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Prisustvo: \");\n    scanf (\"%lf\",&P3);\n    if (P3<0 || P3>10){\n        printf (\"Neispravan broj bodova\");\n        return 0; \n    }\n    printf(\"Zadace: \");\n    scanf (\"%lf\",&Z3);\n    if (Z3<0 || Z3>10) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Zavrsni ispit: \");\n    scanf (\"%lf\",&ZI3);\n    if (ZI3<0 || ZI3>40){\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    //broj bodova\n    BB1=(P1+Z1+PP1+DP1+ZI1);\n    BB2=(P2+Z2+PP2+DP2+ZI2);\n    BB3=(P3+Z3+PP3+DP3+ZI3);\n    \nif (BB1<55 && BB2<55 && BB3<55){printf (\"Nijedan student nije polozio.\\n\"); }\nelse if (BB1<55 && BB2<55 && BB3>=55){printf (\"Jedan student je polozio.\\n\"); }\nelse if (BB1<55 && BB2>=55 && BB3<55){printf (\"Jedan student je polozio.\\n\"); }\nelse if (BB1>=55 && BB2<55 && BB3<55){printf (\"Jedan student je polozio.\\n\"); }\nelse if (BB1<55 && BB2>=55 && BB3>=55){printf (\"Dva studenta su polozila.\\n\"); }\nelse if (BB1>=55 && BB2>=55 && BB3<55){printf (\"Dva studenta su polozila.\\n\"); }\nelse if (BB1>=55 && BB2<55 && BB3>=55){printf (\"Dva studenta su polozila.\\n\"); }\nelse if (BB1>=55 && BB2>=55 && BB3>=55){printf (\"Sva tri studenta su polozila.\\n\");}\n// ocjene iste \nif (BB1>=55 && BB1<65) {O6++;}\nelse if (BB1>=65 && BB1<75) {O7++;}\nelse if (BB1>=75 && BB1<85) {O8++;}\nelse if (BB1>=85 && BB1<92) {O9++;}\nelse if (BB1>=92 && BB1<=100) {O10++;}\nif (BB2>=55 && BB2<65) {O6++;}\nelse if (BB2>=65 && BB2<75) {O7++;}\nelse if (BB2>=75 && BB2<85) {O8++;}\nelse if (BB2>=85 && BB2<92) {O9++;}\nelse if (BB2>=92 && BB2<=100) {O10++;}\nif (BB3>=55 && BB3<65) {O6++;}\nelse if (BB3>=65 && BB3<75) {O7++;}\nelse if (BB3>=75 && BB3<85) {O8++;}\nelse if (BB3>=85 && BB3<92) {O9++;}\nelse if (BB3>=92 && BB3<=100) {O10++;}\nif (BB1<55 || BB2<55 || BB3<55) {return 0;}\nif (O6==2 || O7==2 || O8==2 || O9==2 || O10==2) {\n    printf (\"Dva od tri studenta imaju istu ocjenu.\\n\");return 0;}\nif (O6==3 || O7==3 || O8==3 || O9==3 || O10==3) {\n    printf (\"Sva tri studenta imaju istu ocjenu.\\n\"); return 0;} \nelse{\n    printf (\"Svaki student ima razlicitu ocjenu.\\n\");}\n    return 0;\n}\n\n\n",
        "student6018": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    float t1,t2,tp,tz,tzz,t=0,to;\n    printf(\"Unesite bodove za Tarika: \\n\");\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\",&t1);\n    if(t1<0 || t1>20){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    t+=t1;\n    printf(\"II parcijalni ispit: \");\n    scanf(\"%f\",&t2);\n    if(t2<0 || t2>20){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    t+=t2;\n    printf(\"Prisustvo: \");\n    scanf(\"%f\",&tp);\n    if(tp<0 || tp>10){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    t+=tp;\n    printf(\"Zadace: \");\n    scanf(\"%f\",&tz);\n    if(tz<0 || tz>10){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    t+=tz;\n    printf(\"Zavrsni ispit: \");\n    scanf(\"%f\",&tzz);\n    if(tzz<0 || tzz>40){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    \nt+=tzz;\n    if(t<55)to=5;\n    else if(t<65)to=6;\n    else if(t<75)to=7;\n    else if(t<85)to=8;\n    else if(t<95)to=9;\n    else t=10;\n\n    float b1,b2,bp,bz,bzz,b=0,bo;\n    printf(\"Unesite bodove za Bojana: \\n\");\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\",&b1);\n    if(b1<0 || b1>20){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    b+=b1;\n    printf(\"II parcijalni ispit: \");\n    scanf(\"%f\",&b2);\n    if(b2<0 || b2>20){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    b+=b2;\n    printf(\"Prisustvo: \");\n    scanf(\"%f\",&bp);\n    if(bp<0 || bp>10){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    b+=bp;\n    printf(\"Zadace: \");\n    scanf(\"%f\",&bz);\n    if(bz<0 || bz>10){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    b+=bz;\n    printf(\"Zavrsni ispit: \");\n    scanf(\"%f\",&bzz);\n    if(bzz<0 || bzz>40){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    b+=bzz;\n    if(b<55)bo=5;\n    else if(b<65)bo=6;\n    else if(b<75)bo=7;\n    else if(b<85)bo=8;\n    else if(b<95)bo=9;\n    else b=10;\n\n    float m1,m2,mp,mz,mzz,m=0,mo;\n    printf(\"Unesite bodove za Mirzu: \\n\");\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\",&m1);\n    if(m1<0 || m1>20){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    m+=m1;\n    printf(\"II parcijalni ispit: \");\n    scanf(\"%f\",&m2);\n    if(m2<0 || m2>20){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    m+=m2;\n    printf(\"Prisustvo: \");\n    scanf(\"%f\",&mp);\n    if(mp<0 || mp>10){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    m+=mp;\n    printf(\"Zadace: \");\n    scanf(\"%f\",&mz);\n    if(mz<0 || mz>10){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    m+=mz;\n    printf(\"Zavrsni ispit: \");\n    scanf(\"%f\",&mzz);\n    if(mzz<0 || mzz>40){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    m+=mzz;\n    if(m<55)mo=5;\n    else if(m<65)mo=6;\n    else if(m<75)mo=7;\n    else if(m<85)mo=8;\n    else if(m<95)mo=9;\n    else m=10;\n\n    if(to==5 && bo==5 && mo==5)printf(\"Nijedan student nije polozio.\");\n    else if((to>5 && bo==5 && mo==5) || (to==5 && bo>5 && mo==5) || (to==5 && bo==5 && mo>5))printf(\"Jedan student je polozio.\");\n    else if((to>5 && bo>5 && mo==5) ||(to>5 && bo==5 && mo>5) || (to==5 && bo>5 && mo>5))printf(\"Dva studenta su polozila.\");\n    else\n    {\n        printf(\"Sva tri studenta su polozila.\\n\");\n        if(to==bo && bo==mo)printf(\"Sva tri studenta imaju istu ocjenu.\");\n        else if(to!=bo && bo!=mo && to!=mo)printf(\"Svaki student ima razlicitu ocjenu.\");\n        else printf(\"Dva od tri studenta imaju istu ocjenu.\");\n    }\n    return 0;\n}"
    },
    "6": {
        "label": "1",
        "student4397": "#include <stdio.h>\n\n\nchar *ubaci_broj(char *s, int x) {\n    \n\tchar *povratni = s, *pomocni;\n    int broj = x, broj2 = 0, brojac = 0;\n    if(broj < 0)\n    \tbrojac++;\n    while(broj != 0)\n    {\n    \tbroj /= 10;\n    \tbrojac++;\n    }\n    while(*s != '\\0' && *s == ' ')\n    \ts++;\n    while(*s != '\\0')\n    {\n        if(*s == ' ')\n    \t{\n    \t    /* test ima li rijeci iza */\n    \t    pomocni = s;\n    \t    while(*s != '\\0' && *s == ' ')\n                s++;\n            if(*s == '\\0')\n                break;\n            s = pomocni;\n\n    \t\t/*pomocni ide na kraj stringa*/\n    \t\ts++;\n    \t\tpomocni = s;\n    \t\twhile(*pomocni != '\\0')\n    \t\t\tpomocni++;\n\n            /*pravimo prostor za broj u stringu*/\n    \t\twhile(pomocni >= s)\n    \t\t{\n    \t\t\t*(pomocni+brojac) = *pomocni;\n    \t\t\tpomocni--;\n    \t\t}\n    \t\tbroj = x;\n    \t\tbroj2 = 0;\n    \t\t/*broj izvrcemo naopako da bi ga mogli lakse upisivati*/\n    \t\twhile(broj != 0)\n    \t\t{\n    \t\t    broj2*=10;\n\t\t\t\tbroj2 += broj % 10;\n\t\t\t\tbroj /= 10;\n\t\t\t}\n\t\t\t/*provjera da li je broj negativan te da li treba ubaciti char '-'*/\n\t\t\tif(x < 0){\n\t\t\t\t*s = '-';\n\t\t\t\tbroj2 *= -1;\n\t\t\t\ts++;\n\t\t\t}\n\t\t\t/*ubacivanje broja*/\n\t\t\twhile(broj2 != 0)\n\t\t\t{\n\t\t\t\t*s = broj2 % 10 + '0';\n\t\t\t\tbroj2 /= 10;\n\t\t\t\ts++;\n\t\t\t}\n\t\t\t/*u slucaju da se iza broja ne nalazi razmak*/\n\t\t\t/*pravimo prostor za razmak i ubacujemo razmak*/\n\t\t\tif(*s != ' ')\n            {\n                while(*pomocni != '\\0') pomocni++;\n                while(pomocni > s)\n                {\n                    *pomocni = *(pomocni -1);\n                    pomocni--;\n                }\n                *s = ' ';\n            }\n            /*tjeramo pokazivac do kraja razamak tj. do pocetka nove rijeci*/\n            while(*s == ' ' && *s != '\\0') s++;\n            /*tjeranje broja do kraja eventualno pronadjene rijeci*/\n\t\t\twhile(*s != ' ' && *s != '\\0') s++;\n\t\t\t/*s-- zato sto se iza desi s++, pa da ne bi preskocili taj char*/\n\t\t\ts--;\n\t\t}\n\t\ts++;\n    }\n\n\treturn povratni;\n}\nint main() {\n\treturn 0;\n}",
        "student5166": "#include <stdio.h>\n#include <math.h>\n\nchar *ubaci_broj (char *tekst, int broj){\n     int broj_cifara=1, i=0, temp=fabs(broj), pomocna=0, x=1;\n\tchar *p=tekst, *kraj=tekst, *s;\n\tif (broj < 0) x=2;\n\t \n\twhile (*kraj != '\\0') kraj++; /* uzimam pok. na kraj stringa */\n\t     s = kraj;\n\t     s--;\n\t \n     while (temp != 0){\n     \tbroj_cifara++;\n     \ttemp/=10;\n     }\n     \n     if (broj < 0) broj_cifara++; /* dodavanje jos jednog mjesta za minus, ako je br. neg */\n     kraj = s+broj_cifara;\n\t\n     temp = fabs(broj);\n     while (temp != 0){ /* okretanje broja radi lakseg ubacivanja */\n         pomocna += (temp%10);\n         temp/=10;\n         if (temp == 0) break;\n         pomocna*=10;\n     }\n     \n     temp = fabs(pomocna);\n     while (*p == ' ') p++; /* prelijecemo preko razmaka na pocetku stringa */\n     \n     while (*p != '\\0'){\n     \t  if (*p == ' ' && *(p+1)!=' '){\n     \t   \t     *(kraj+1) = '\\0';\n     \t   \t     while (s != p){ /* pravi se mjesto za broj pomjerajuci znakove unutar stringa udesno */\n     \t   \t          *kraj = *s;\n     \t   \t          kraj --;\n     \t   \t          s--;\n     \t   \t     }\n     \t   \t     p++;\n     \t   \t     \n     \t   \t     if (broj < 0){\n     \t   \t          *p='-';\n     \t   \t          p++;\n     \t   \t     }\n     \t   \t     \n     \t   \t     for (i=0; i<broj_cifara-x; i++){ /* ubacujemo onaj broj koji smo okrenuli */\n     \t   \t     \t  *p = '0' + temp%10;\n     \t   \t     \t  temp /= 10;\n     \t   \t     \t  p++;\n     \t   \t     }\n     \t   \t     temp = fabs (pomocna);\n     \t   \t     *p = ' ';\n     \t   \t     \n     \t   \t     \n     \t        \tkraj = p; /* na kraju svakog prolaska postaviti pokazivace na nove pozicije */\n     \t        \twhile (*kraj != '\\0') kraj++;\n     \t   \t     s=kraj;\n     \t   \t     s--;\n     \t   \t     kraj = s+broj_cifara;\n     \t   \t\n     \t   \t     \n         }\n     \twhile (*p == ' ') p++; /* prelijecemo eventualne razmake poslije razmaka */\n     \tp++;\n     }\n     p = tekst;\n     \t    \n return p;   \n}\n \nint main (){\n\t\n\treturn 0;\n}"
    },
    "7": {
        "label": "0",
        "student5355": "#include <stdio.h>\n\nint max(int matrica[100][100], int visina, int sirina) {\n\tint najcesci = 0, i, j, temp, indeks = 0, brojac = 0;\n\tint elementi[10000];\n\tfor (i = 0; i < visina; i++) \n\t\tfor (j = 0; j < sirina; j++) elementi[indeks++] = matrica[i][j];\n\tfor (i = 0; i < indeks; i++) {\n\t\ttemp = 1;\n\t\tfor (j = i + 1; j < indeks; j++) {\n\t\t\tif (elementi[i] == elementi[j]) temp++;\n\t\t}\n\t\tif (temp == brojac && elementi[i] < najcesci) najcesci = elementi[i];\n\t\tif (temp > brojac) brojac = temp, najcesci = elementi[i];\n\t}\n\treturn najcesci;\n}\n\nint izbaci_kolone(int matrica[100][100], int visina, int sirina, int N) {\n\tint broj_kolona = sirina, j, i, p, q;\n\tfor (j = 0; j < broj_kolona; j++) \n\t\tfor (i = 0; i < visina; i++)\n\t\t\tif (matrica[i][j] == N) {\n\t\t\t\tif (j == sirina - 1) broj_kolona--;\n\t\t\t\telse {\n\t\t\t\t\tfor (q = j; q < broj_kolona - 1; q++) \n\t\t\t\t\t\tfor (p = 0; p < visina; p++)\n\t\t\t\t\t\t\tmatrica[p][q] = matrica[p][q+1];\n\t\t\t\t\tbroj_kolona--;\n\t\t\t\t}\n\t\t\t\tj--;\n\t\t\t\tbreak;\n\t\t\t}\n\treturn broj_kolona;\n}\nvoid IspisiMatricu(int matrica[100][100], int visina, int sirina) {\n\tint i, j;\n\tfor (i = 0; i < visina; i++) {\n\t\tfor (j = 0; j < sirina; j++) \n\t\t\tprintf(\"%5d\", matrica[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n\tprintf(\"\\n\");\n}\n\nint main() {\n\tint matrica[100][100];\n\tint i, j, sirina, visina;\n\tprintf(\"Unesite sirinu i visinu matrice: \");\n\tscanf(\"%d%d\", &sirina, &visina);\n\tfor (i = 0; i < visina; i++) {\n\t\tprintf (\"Unesite elemente %d. reda: \", i + 1);\n\t\tfor (j = 0; j < sirina; j++)\n\t\t\tscanf(\"%d\", &matrica[i][j]);\n\t}\n\tprintf (\"\\n\");\n\ti = 1;\n\tfor (;;) {\n\t\tsirina = izbaci_kolone(matrica, visina, sirina, max(matrica, visina, sirina));\n\t\tif (sirina == 0) break;\n\t\tprintf(\"Nakon %d. prolaza matrica glasi:\\n\", i++);\n\t\tIspisiMatricu(matrica, visina, sirina);\n\t}\n\tprintf (\"Nakon %d. prolaza matrica je prazna!\", i);\n\treturn 0;\n}\n",
        "student9993": "#include <stdio.h>\n\nint max(int mat[100][100], int visina, int sirina){\n    int dimenz, i, j;\n    int el;\n    int counter=0;\n    int niz[10000];\n    int tempel, tempcount;\n    dimenz=sirina*visina;\n    \n    /* Matrix to array */\n    \n    for (i=0; i<visina; i++){\n        for(j=0; j<sirina; j++){\n            niz[sirina*i+j]=mat[i][j];\n        }\n    }\n    \n    for (i=0; i<dimenz; i++){\n        tempel=niz[i];\n        tempcount=0;\n        for(j=0; j<dimenz; j++){\n            if(niz[j]==tempel)\n                tempcount++;}\n                \n                if(tempcount>counter){\n                    el=tempel;\n                    counter=tempcount;\n                }\n                else if(tempcount==counter){\n                    if(el>tempel)\n                    el=tempel;}\n        }\n        return el;\n    }\nint izbaci_kolone (int mat[100][100],int visina, int sirina, int max){\n    int j, i, a, b;\n    for(i=0; i<visina; i++){\n        for(j=0; j<sirina; j++){\n            if(mat[i][j]==max){\n                for(a=j; a<sirina; a++){\n                    for(b=i; b<visina; b++){\n                        mat[b][a]=mat[b][a+1];\n                    }\n                }\n                sirina=sirina-1;\n                j=j-1;\n            }\n        }\n    }\n    return sirina;\n}\n\nint main(){\n    int matrica[100][100];\n    int i, j, x, y, z;\n    printf (\"Unesite sirinu i visinu matrice: \");\n    scanf (\"%d %d\", &y, &x);\n    for(i=0; i<x; i++){\n        printf (\"Unesite elemente %d. reda: \", i+1);\n        for(j=0; j<y; j++){\n            scanf(\"%d\", &matrica[i][j]);\n    }\n    }\n    z=1;\n    while(y!=0){\n        y=izbaci_kolone(matrica, x, y, max(matrica, x, y));\n        if(y==0){\n            printf (\"\\nNakon %d. prolaza matrica je prazna!\", z);\n            break;\n        }\n        printf (\"\\nNakon %d. prolaza matrica glasi:\\n\", z);\n        for(i=0; i<x; i++){\n            for (j=0; j<y; j++){\n                printf (\"%5d\", matrica[i][j]);\n            }\n            printf (\"\\n\");\n        }\n        printf (\"\\n\");\n        z++;\n        }\n        return 0;\n    }\n   "
    },
    "8": {
        "label": "1",
        "student1412": "#include <stdio.h>\n\nint main() {\n\n\tchar Tarik, Bojan, Mirza, novi_red;\n\t\n\tfloat s1, s2, s3, p1, p2, p3, h1, h2, h3, c1, c2, c3, popust, s;\n\n\tprintf(\"Unesite jelo za Tarika: \");\n\tscanf(\"%c\", &Tarik);\n\tscanf(\"%c\", &novi_red);\n\tprintf(\"Unesite jelo za Bojana: \");\n\tscanf(\"%c\", &Bojan);\n\tscanf(\"%c\", &novi_red);\n\tprintf(\"Unesite jelo za Mirzu: \");\n\tscanf(\"%c\", &Mirza);\n\tscanf(\"%c\", &novi_red);\n\t\n\t\n\tp1=6.80;\n\tp2=8.00;\n\tp3=5.30;\n\t\n\th1=3.30;\n\th2=3.00;\n\th3=5.00;\n\t\n\tc1=5.00;\n\tc2=3.90;\n\tc3=6.00;\n\n\tif (Tarik=='P' && Bojan=='P' && Mirza=='P') {\n\t\t\n\t\t/*sume*/\n\t\ts1=3*p1;\n\t\ts2=3*p2;\n\t\ts3=3*p3;\n\t\t\n\t\t/*restoran najjeftiniji*/\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t/*fast food najjeftiniji*/\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\n\t    /*bistro najjeftiniji*/\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t/*popust restoran*/\n\t\tpopust=3*(p1-(p1*0.1));\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t}\n\t\n\n\tif ((Tarik=='P' && Bojan=='P' && Mirza=='H') || (Tarik=='P' && Bojan=='H' && Mirza=='P') || (Tarik=='H' && Bojan=='P' && Mirza=='P')) {\n\t\t\n\t\t/*sume*/\n\t\ts1=2*p1+h1;\n\t\ts2=2*p2+h2;\n\t\ts3=2*p3+h3;\n\t\t\n\t\t/*restoran najjeftiniji*/\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t/*fast food najjeftiniji*/\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t/*bistro najjeftiniji*/\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t/*popust restoran*/\n\t\tpopust=2*(p1-(p1*0.1))+h1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t}\n\t\n\t\n\tif ((Tarik=='P' && Bojan=='P' && Mirza=='C') || (Tarik=='P' && Bojan=='C' && Mirza=='P') || (Tarik=='C' && Bojan=='P' && Mirza=='P')) {\n\t\t\n\t\t/*sume*/\n\t\ts1=2*p1+c1;\n\t\ts2=2*p2+c2;\n\t\ts3=2*p3+c3;\n\t\t\n\t\t/*restoran najjeftiniji*/\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t/*fast food najjeftiniji*/\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t/*bistro najjeftiniji*/\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t/*popust restoran*/\n\t\tpopust=2*(p1-(p1*0.1))+c1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t\t\n\t}\n\t\n\tif ((Tarik=='P' && Bojan=='H' && Mirza=='H') || (Tarik=='H' && Bojan=='H' && Mirza=='P') || (Tarik=='H' && Bojan=='P' && Mirza=='H')) {\n\t\t\n\t\t/*sume*/\n\t\ts1=2*h1+p1;\n\t\ts2=2*h2+p2;\n\t\ts3=2*h3+p3;\n\t\t\n\t\t/*restoran najjeftiniji*/\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t/*fast food najjeftiniji*/\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t/*bistro najjeftiniji*/\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t/*popust restoran*/\n\t\tpopust=2*(h1-(h1*0.1))+p1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\n\t}\t\n\t\n\tif ((Tarik=='P' && Bojan=='C' && Mirza=='C') || (Tarik=='C' && Bojan=='C' && Mirza=='P') || (Tarik=='C' && Bojan=='P' && Mirza=='C')) {\n\t\t\t\n\t\t/*sume*/\n\t\ts1=2*c1+p1;\n\t\ts2=2*c2+p2;\n\t\ts3=2*c3+p3;\n\t\t\n\t\t/*restoran najjeftiniji*/\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t/*fast food najjeftiniji*/\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t/*bistro najjeftiniji*/\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t/*popust restoran*/\n\t\tpopust=2*(c1-(c1*0.1))+p1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\n\n\t\n\tif (Tarik=='H' && Bojan=='H' && Mirza=='H') {\n\t\t\t\n\t\t/*sume*/\n\t\ts1=3*h1;\n\t\ts2=3*h2;\n\t\ts3=3*h3;\n\t\t\n\t\t/*restoran najjeftiniji*/\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t/*fast food najjeftiniji*/\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t/*bistro najjeftiniji*/\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t/*popust restoran*/\n\t\tpopust=3*(h1-(h1*0.1));\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\t\n\tif ((Tarik=='H' && Bojan=='H' && Mirza=='C') || (Tarik=='H' && Bojan=='C' && Mirza=='H') || (Tarik=='C' && Bojan=='H' && Mirza=='H')) {\n\t\t\t\n\t\t/*sume*/\n\t\ts1=2*h1+c1;\n\t\ts2=2*h2+c2;\n\t\ts3=2*h3+c3;\n\t\t\n\t\t/*restoran najjeftiniji*/\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t/*fast food najjeftiniji*/\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t/*bistro najjeftiniji*/\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t/*popust restoran*/\n\t\tpopust=2*(h1-(h1*0.1))+c1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\n\tif ((Tarik=='H' && Bojan=='C' && Mirza=='C') || (Tarik=='C' && Bojan=='H' && Mirza=='C') || (Tarik=='C' && Bojan=='C' && Mirza=='H')) {\n\t\t\t\n\t\t/*sume*/\n\t\ts1=2*c1+h1;\n\t\ts2=2*c2+h2;\n\t\ts3=2*c3+h3;\n\t\t\n\t\t/*restoran najjeftiniji*/\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t/*fast food najjeftiniji*/\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t/*bistro najjeftiniji*/\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t/*popust restoran*/\n\t\tpopust=2*(c1-(c1*0.1))+h1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\n\t/*cevapi*/\n\tif (Tarik=='C' && Bojan=='C' && Mirza=='C') {\n\t\t\t\n\t\t/*sume*/\n\t\ts1=3*c1;\n\t\ts2=3*c2;\n\t\ts3=3*c3;\n\t\t\n\t\t/*restoran najjeftiniji*/\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t/*fast food najjeftiniji*/\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t/*bistro najjeftiniji*/\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t/*popust restoran*/\n\t\tpopust=3*(c1-(c1*0.1));\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\n\t/*pizza hambas cevapi*/\n\t\n\tif ((Tarik=='P' && Bojan=='H' && Mirza=='C') || (Tarik=='P' && Bojan=='C' && Mirza=='H') || (Tarik=='H' && Bojan=='P' && Mirza=='C') || (Tarik=='H' && Bojan=='C' && Mirza=='P') || (Tarik=='C' && Bojan=='P' && Mirza=='H') || (Tarik=='C' && Bojan=='H' && Mirza=='P')) {\n\t\t\n\t\t/*sume*/\n\t\ts1=p1+h1+c1;\n\t\ts2=p2+h2+c2;\n\t\ts3=p3+h3+c3;\n\t\t\n\t\t/*restoran najjeftiniji*/\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t/*fast food najjeftiniji*/\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t/*bistro najjeftiniji*/\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t/*popust restoran*/\n\t\tpopust=p1-(p1*0.1)+h1+c1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\n\treturn 0;\n}\n\n",
        "student1710": "#include <stdio.h>\n\nint main() {\n\tfloat s1,s2,s3,p1,p2,p3,h1,h2,h3,c1,c2,c3,popust,s;\n\tchar T,B,M,novired;\n\t\n\t//Unosi\n\tprintf(\"Unesite jelo za Tarika: \");\n\tscanf(\"%c\", &T);\n\tscanf(\"%c\", &novired);\n\tprintf(\"Unesite jelo za Bojana: \");\n\tscanf(\"%c\", &B);\n\tscanf(\"%c\", &novired);\n\tprintf(\"Unesite jelo za Mirzu: \");\n\tscanf(\"%c\", &M);\n\t\n\t\n\t//cijene\n\tp1=6.80;\n\tp2=8.00;\n\tp3=5.30;\n\t\n\th1=3.30;\n\th2=3.00;\n\th3=5.00;\n\t\n\tc1=5.00;\n\tc2=3.90;\n\tc3=6.00;\n\t\n\t//pizza\n\n\tif (T=='P' && B=='P' && M=='P') {\n\t\t\n\t\t//sume\n\t\ts1=3*p1;\n\t\ts2=3*p2;\n\t\ts3=3*p3;\n\t\t\n\t\t//restoran najjeftiniji\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t//fast food najjeftiniji\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t//bistro najjeftiniji\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t//popust restoran\n\t\tpopust=3*(p1-(p1*0.1));\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t}\n\t\n\tif ((T=='P' && B=='P' && M=='H') || (T=='P' && B=='H' && M=='P') || (T=='H' && B=='P' && M=='P')) {\n\t\t\n\t\t//sume\n\t\ts1=2*p1+h1;\n\t\ts2=2*p2+h2;\n\t\ts3=2*p3+h3;\n\t\t\n\t\t//restoran najjeftiniji\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t//fast food najjeftiniji\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t//bistro najjeftiniji\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t//popust restoran\n\t\tpopust=2*(p1-(p1*0.1))+h1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t}\n\t\n\t\n\tif ((T=='P' && B=='P' && M=='C') || (T=='P' && B=='C' && M=='P') || (T=='C' && B=='P' && M=='P')) {\n\t\t\n\t\t//sume\n\t\ts1=2*p1+c1;\n\t\ts2=2*p2+c2;\n\t\ts3=2*p3+c3;\n\t\t\n\t\t//restoran najjeftiniji\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t//fast food najjeftiniji\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t//bistro najjeftiniji\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t//popust restoran\n\t\tpopust=2*(p1-(p1*0.1))+c1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t\t\n\t}\n\t\n\tif ((T=='P' && B=='H' && M=='H') || (T=='H' && B=='H' && M=='P') || (T=='H' && B=='P' && M=='H')) {\n\t\t\n\t\t//sume\n\t\ts1=2*h1+p1;\n\t\ts2=2*h2+p2;\n\t\ts3=2*h3+p3;\n\t\t\n\t\t//restoran najjeftiniji\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t//fast food najjeftiniji\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t//bistro najjeftiniji\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t//popust restoran\n\t\tpopust=2*(h1-(h1*0.1))+p1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\n\t}\t\n\t\n\tif ((T=='P' && B=='C' && M=='C') || (T=='C' && B=='C' && M=='P') || (T=='C' && B=='P' && M=='C')) {\n\t\t\t\n\t\t//sume\n\t\ts1=2*c1+p1;\n\t\ts2=2*c2+p2;\n\t\ts3=2*c3+p3;\n\t\t\n\t\t//restoran najjeftiniji\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t//fast food najjeftiniji\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t//bistro najjeftiniji\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t//popust restoran\n\t\tpopust=2*(c1-(c1*0.1))+p1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\n\t//hambas\n\t\n\tif (T=='H' && B=='H' && M=='H') {\n\t\t\t\n\t\t//sume\n\t\ts1=3*h1;\n\t\ts2=3*h2;\n\t\ts3=3*h3;\n\t\t\n\t\t//restoran najjeftiniji\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t//fast food najjeftiniji\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t//bistro najjeftiniji\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t//popust restoran\n\t\tpopust=3*(h1-(h1*0.1));\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\t\n\tif ((T=='H' && B=='H' && M=='C') || (T=='H' && B=='C' && M=='H') || (T=='C' && B=='H' && M=='H')) {\n\t\t\t\n\t\t//sume\n\t\ts1=2*h1+c1;\n\t\ts2=2*h2+c2;\n\t\ts3=2*h3+c3;\n\t\t\n\t\t//restoran najjeftiniji\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t//fast food najjeftiniji\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t//bistro najjeftiniji\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t//popust restoran\n\t\tpopust=2*(h1-(h1*0.1))+c1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\n\tif ((T=='H' && B=='C' && M=='C') || (T=='C' && B=='H' && M=='C') || (T=='C' && B=='C' && M=='H')) {\n\t\t\t\n\t\t//sume\n\t\ts1=2*c1+h1;\n\t\ts2=2*c2+h2;\n\t\ts3=2*c3+h3;\n\t\t\n\t\t//restoran najjeftiniji\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t//fast food najjeftiniji\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t//bistro najjeftiniji\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t//popust restoran\n\t\tpopust=2*(c1-(c1*0.1))+h1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\n\t//cevapi\n\tif (T=='C' && B=='C' && M=='C') {\n\t\t\t\n\t\t//sume\n\t\ts1=3*c1;\n\t\ts2=3*c2;\n\t\ts3=3*c3;\n\t\t\n\t\t//restoran najjeftiniji\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t//fast food najjeftiniji\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t//bistro najjeftiniji\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t//popust restoran\n\t\tpopust=3*(c1-(c1*0.1));\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\n\t//pizza hambas cevapi\n\t\n\tif ((T=='P' && B=='H' && M=='C') || (T=='P' && B=='C' && M=='H') || (T=='H' && B=='P' && M=='C') || (T=='H' && B=='C' && M=='P') || (T=='C' && B=='P' && M=='H') || (T=='C' && B=='H' && M=='P')) {\n\t\t\n\t\t//sume\n\t\ts1=p1+h1+c1;\n\t\ts2=p2+h2+c2;\n\t\ts3=p3+h3+c3;\n\t\t\n\t\t//restoran najjeftiniji\n\t\tif (s1<s2 && s1<s3) {\n\t\ts=s1;\n\t\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\", s1);\n\t\t}\n\t\t\n\t\t//fast food najjeftiniji\n\t\telse if (s2<s3 && s2<s1){\n\t\ts=s2;\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", s2);\t\n\t\t} \n\t\t\n\t\t//bistro najjeftiniji\n\t\telse {\n\t\ts=s3;\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", s3);\n\t\t}\n\t\t\n\t\t//popust restoran\n\t\tpopust=p1-(p1*0.1)+h1+c1;\n\t\tif (s1==s) {\n\t\t\treturn 0;\n\t\t}\n\t\telse if(popust<s) printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", popust);\n\t\t\n\t}\n\t\n\treturn 0;\n}\n"
    },
    "9": {
        "label": "0",
        "student1412": "#include <stdio.h>\n\nint main() {\n\tint n = 0, i, j;\n\tdo{\n\t\tprintf(\"Unesite broj N: \");\n\t\tscanf(\"%d\", &n);\t\n\t\tif( n < 8 || n%4 != 0){\n\t\t\tprintf(\"Neispravno N!\\n\");\n\t\t}\n\t}while(n < 8 || n%4 != 0);\n\tprintf(\"\\n\");\n\n\n\tint k=(n/2)-1;\n\n\n\tfor(i=0; i<n; i++) {\n\t    for(j=0; j<n; j++) {\n\n\t    \t/*Gornja polovina matrice*/\n\n\t        if ( i <= (n/2) - 1) {\n\n\t        \t/*Prvi kvadrant*/\n\t            if ( j <= (n/2) - 1) {\n\n\t                if ( i == j ) printf(\"\\\\\");\n\n\t                else if ( j == k ) printf(\"/\");\n\n\t                else printf(\" \");\n\t            }\n\n\t            /*Drugi kvadrant*/\n\t            else if ( j > (n/2) - 1 ) {\n\n\t            \tif ( i == 0 && j == (n/2) || i == 0 && j == (n-1) || i == (n/2)-1 && j == (n/2) || i == (n/2)-1 && j == (n-1) )\n\t            \tprintf(\"+\");\n\n\t            \telse if ( i == 0 && j != (n/2) || i == 0 && j != (n-1) || i == (n/2)-1 && j != (n/2) || i == (n/2)-1 && j != (n-1) )\n\t            \tprintf(\"-\");\n\n\t            \telse if (i != 0 && j == (n/2) || i != (n/2)-1 && j == (n-1) )\n\t            \tprintf(\"|\");\n\n\t            \telse printf(\" \");\n\t            }\n\n\t        }\n\t        else if(i >= (n/2)){\n\t\t    \tif(j <= (n/2) - 1){\n\t\t    \t\tif(i == (n/2) && j == 0 || i == (n/2) && j == (n/2)-1 || i == (n-1) && j == 0 || i == (n-1) && j == (n/2)-1) printf(\"+\");\n                    else if(i == (n/2) && j > 0 && j < (n/2)-1 || i == (n-1) && j > 0 && j < (n/2)-1) printf(\"-\");\n                    else if(i > (n/2) && j == 0 && i <(n-1) || i > (n/2) && j == (n/2) -1 && i <(n-1)) printf(\"|\");\n\t\t    \t\telse printf(\" \");\n\t\t    \t}else if(j > (n/2) - 1){\n                    int pola = n/2;\n                    int jednaLinija = pola + (pola/2) - 1;\n                    int drugaLinija = pola + (pola/2) ;\n\n                    if(i == jednaLinija && j == jednaLinija && i == j  || i == drugaLinija && j == drugaLinija && i == j || i == jednaLinija && j == drugaLinija && (i+1) == j || i == drugaLinija && j == jednaLinija && i == (j+1)) printf(\"+\");\n                    else if(j == jednaLinija || j == drugaLinija) printf(\"|\");\n                    else if(i == jednaLinija || i == drugaLinija) printf(\"-\");\n                    else printf(\" \");\n\t\t    \t}\n\t\t    }\n\n\t    }\n\t    printf(\"\\n\");\n\t    k--;\n\t}\n\n\treturn 0;\n}\n",
        "student9125": "#include <stdio.h>\n\nint main() {\n\n int n, i, j;\n do {\n \tprintf(\"Unesite broj N: \");\n \tscanf(\"%d\", &n);\n \tif(n%4!=0 || n<8)\n \tprintf(\"Neispravno N!\\n\");\n \t\n } while( n%4!=0 || n<8);\n printf(\"\\n\");\n \n for(i=0;i<n/2;i++)\n {\n \tfor(j=0;j<n/2;j++)\n \t{\n \t\tif(i==j)\n \t\tprintf(\"\\\\\");\n \t\telse if (j==(n/2)-1-i)\n \t\tprintf(\"/\");\n \t\telse printf(\" \");\n \t}\n \tfor(j=0;j<n/2;j++)\n \t{\n \t\tif((i==0 || i==(n/2)-1) && (j==0 || j==(n/2)-1))\n \t\tprintf(\"+\");\n \t\telse if (i==0 || i==(n/2)-1)\n \t\tprintf(\"-\");\n \t\telse if (j==0 || j==(n/2)-1)\n \t\tprintf(\"|\");\n \t\telse printf(\" \");\n \t\t\n \t}\n \tprintf(\"\\n\");\n \t\n }\n\nfor (i=0;i<n/2;i++)\n{\n\tfor (j=0;j<n/2;j++)\n\t{\n\t\tif((i==0 || i==(n/2)-1) && (j==0 || j==(n/2)-1))\n\t\tprintf(\"+\");\n\t\telse if(i==0 || i==(n/2)-1)\n\t\tprintf(\"-\");\n\t\telse if(j==0 || j==(n/2)-1)\n\t\tprintf(\"|\");\n\t\telse printf(\" \");\n\t\t\n\t}\n\tfor(j=0;j<n/2;j++)\n\t{\n\t\tif((i==n/4 || i==(n/4)-1) && (j==n/4 || j==(n/4)-1))\n\t\tprintf(\"+\");\n\t\telse if(i==n/4 || i==(n/4)-1)\n\t\tprintf(\"-\");\n\t\telse if(j==n/4 || j==(n/4)-1)\n\t\tprintf(\"|\");\n\t\telse printf(\" \");\n\t\t}\n\t\tprintf(\"\\n\");\n}\nreturn 0;\n}\n"
    },
    "10": {
        "label": "1",
        "student3624": "#include <stdio.h>\n#include <math.h>\n#define epsilon 0.0001\n#define PI 3.141592\n\nint main() {\n\t\n\tdouble x1, x2, x3, y1, y2, y3, d1, d2, d3, ugao1, ugao2, ugao3;\n\tint stepeni1, stepeni2, stepeni3, minute1, minute2, minute3, sekunde1, sekunde2, sekunde3;\n\tprintf (\"Unesite koordinate tacke t1: \");\n\tscanf (\"%lf %lf\", &x1, &y1);\n\tprintf (\"Unesite koordinate tacke t2: \");\n\tscanf (\"%lf %lf\", &x2, &y2);\n\tprintf (\"Unesite koordinate tacke t3: \");\n\tscanf (\"%lf %lf\", &x3, &y3);\n\t\n\td1=sqrt(pow(x2-x1, 2)+(pow(y2-y1, 2)));\n\td2=sqrt(pow(x2-x3, 2)+(pow(y2-y3, 2)));\n\td3=sqrt(pow(x3-x1, 2)+(pow(y3-y1, 2)));\n\t\n\tugao1=acos((d2*d2 + d3*d3 - d1*d1) / (2*d3*d2))*(180/PI);\n\tugao2=acos((d3*d3 + d1*d1 - d2*d2) / (2*d3*d1))*(180/PI);\n\tugao3=acos((d2*d2 + d1*d1 - d3*d3) / (2*d1*d2))*(180/PI);\n\t\n\tstepeni1=(ugao1);\n\tminute1=((ugao1-stepeni1)*60);\n\tsekunde1=(((ugao1-stepeni1)*60-minute1)*60);\n\t\n\tstepeni2=(ugao2);\n\tminute2=((ugao2-stepeni2)*60);\n\tsekunde2=(((ugao2-stepeni2)*60-minute2)*60);\n\t\n\tstepeni3=(ugao3);\n\tminute3=((ugao3-stepeni3)*60);\n\tsekunde3=(((ugao3-stepeni3)*60-minute3)*60);\n\t\n\tif (fabs(d1-(d2+d3))<epsilon || fabs(d2-(d1+d3))<epsilon || fabs(d3-(d1+d2))<epsilon) \n\t{\n\t\tprintf (\"Linija\\n\");\n\t} else {\n\t\tif (fabs(pow(d3, 2)-pow(d2, 2)-pow(d1, 2))<epsilon || fabs(pow(d1, 2)-pow(d2, 2)-pow(d3, 2))<epsilon || fabs(pow(d2, 2)-pow(d3, 2)-pow(d1, 2))<epsilon)\n\t{\n\t\tprintf (\"Pravougli\\n\");\n\t} if ( fabs(d1-d2)<epsilon && fabs(d2-d3)<epsilon && fabs(d3-d1)<epsilon)\n\t{\n\t\tprintf (\"Jednakostranicni\\n\");\n\t} else if ( fabs(d1-d2)<epsilon || fabs(d2-d3)<epsilon || fabs(d3-d1)<epsilon)\n\t{\n\t\tprintf (\"Jednakokraki\\n\");\n\t}  else if (fabs(d1-d2)>epsilon && fabs(d2-d3)>epsilon && fabs(d3-d1)>epsilon)\n\t{\n\t\tprintf (\"Raznostranicni\\n\");\n\t}\n\t} if(ugao1>=ugao2 && ugao1>=ugao3)\n\t{\n\t\tprintf (\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\\n\", stepeni1, minute1, sekunde1);\n\t} else if (ugao2>=ugao3 && ugao2>=ugao1)\n\t{\n\t\tprintf (\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\\n\", stepeni2, minute2, sekunde2);\n\t} else if (ugao3>=ugao1 && ugao3>=ugao2)\n\t{\n\t\tprintf (\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\\n\", stepeni3, minute3, sekunde3);\n\t}\n\treturn 0;\n}",
        "student9128": "#include <stdio.h>\n#include <math.h>\n#define EPSILON 0.0001\n#define PI 3.14159265\nint main() {\n\tdouble x1, y1, x2, y2, x3, y3, d12, d13, d23, u12, u13, u23;\n\tint su12, mu12, sku12, su13, mu13, sku13, su23, mu23, sku23;\n\t\n\tprintf(\"Unesite koordinate tacke t1: \");\n\tscanf(\"%lf %lf\", &x1, &y1);\n\tprintf(\"Unesite koordinate tacke t2: \");\n\tscanf(\"%lf %lf\", &x2, &y2);\n\tprintf(\"Unesite koordinate tacke t3: \");\n\tscanf(\"%lf %lf\", &x3, &y3);\n\t\n\td12=sqrt(pow(x2-x1, 2)+pow(y2-y1, 2));\n\td13=sqrt(pow(x3-x1, 2)+pow(y3-y1, 2));\n\td23=sqrt(pow(x3-x2, 2)+pow(y3-y2, 2));\n\t\n\tu12=acos((pow(d13,2) + pow(d23, 2) - pow(d12, 2))/(2.*d13*d23))*180/PI;\n\tu13=acos((pow(d12,2) + pow(d23, 2) - pow(d13, 2))/(2.*d12*d23))*180/PI;\n\tu23=acos((pow(d13,2) + pow(d12, 2) - pow(d23, 2))/(2.*d13*d12))*180/PI;\n\t\n\tsu12=floor(u12);\n\tmu12=floor((u12-su12)*60);\n\tsku12=floor(((u12-su12)*60-mu12)*60);\n\t\n\tsu13=floor(u13);\n\tmu13=floor((u13-su13)*60);\n\tsku13=floor(((u13-su13)*60-mu13)*60);\n\t\n\tsu23=floor(u23);\n\tmu23=floor((u23-su23)*60);\n\tsku23=floor(((u23-su23)*60-mu23)*60);\n\t\n\tif (fabs(d12-(d13+d23))<EPSILON || fabs(d13-(d12+d23))<EPSILON || fabs(d23-(d13+d12))<EPSILON) {\n\t\tprintf(\"Linija\");\n\t\tprintf(\"\\n\");\n\t} else {\n\t\tif ((fabs(d12-sqrt(pow(d13, 2) + pow(d23, 2)))<EPSILON) || (fabs(d13-sqrt(pow(d12, 2) + pow(d23, 2)))<EPSILON) || (fabs(d23-sqrt(pow(d13, 2) + pow(d12, 2)))<EPSILON)) {\n\t\tprintf(\"Pravougli\");\n\t\tprintf(\"\\n\");\n\t\t}\n\t\tif (fabs(d12-d23)<=EPSILON && fabs(d12-d13)<=EPSILON) {\n\t\t\tprintf(\"Jednakostranicni\");\n\t\t\tprintf(\"\\n\");\n\t\t} else if(fabs(d12-d13)<=EPSILON || fabs(d12-d23)<=EPSILON || fabs(d13-d23)<=EPSILON) {\n\t\t\tprintf(\"Jednakokraki\");\n\t\t\tprintf(\"\\n\");\n\t\t} else if(d12!=d13 && d12!=d23 && d13!=d23) {\n\t\tprintf(\"Raznostranicni\");\n\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\tif(u12>=u13 && u12>=u23) {\n\t\tprintf(\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\", su12, mu12, sku12);\n\t} else if(u13>=u12 && u13>=u23) {\n\t\tprintf(\"\\nNajveci ugao ima %d stepeni, %d minuta i %d sekundi.\", su13, mu13, sku13);\n\t} else if(u23>=u12 && u23>=u13) {\n\t\tprintf(\"\\nNajveci ugao ima %d stepeni, %d minuta i %d sekundi.\", su23, mu23, sku23);\n\t}\n\t\n\treturn 0;\n}\n"
    },
    "11": {
        "label": "0",
        "student2351": "#include <stdio.h>\n\nint main() {\n\tint L,N,i,j;\n\tint Teplicova,cirkularna;\n\tdouble mat[100][100];\ndo {\n\tprintf(\"Unesite M i N: \");\n\tscanf(\"%d %d\", &L, &N);\n\tif (L>100 || L<=0 || N>100 || N<=0) {  printf(\"Pogresan unos!\\n\");}\n} while (L>100  || N>100 || L<=0 || N<=0);\n\nprintf(\"Unesite elemente matrice: \");\nfor (i=0; i<L; i++)\nfor (j=0; j<N; j++)\nscanf(\"%lf\", &mat[i][j]);\nTeplicova=1;  \nfor (i=0; i<L-1; i++) {   \n\tfor (j=0; j<N-1; j++) {\n\t\tif (mat[i][j]!=mat[i+1][j+1])\n\t\tTeplicova=0;  \n\t}\n}\nif (Teplicova)    \n{\n\tcirkularna=1;  \n\tfor(i=1;i<L;i++)\n\tif(N-i>0)\n\tif(mat[i][0]!=mat[0][N-i])  cirkularna=0;\n\t\n\tif(cirkularna)\n\tprintf(\"Matrica je cirkularna\\n\");\n    else \n    printf(\"Matrica je Teplicova\\n\");\n\t \n}\nelse   \nprintf(\"Matrica nije ni cirkularna ni Teplicova\"); \n\nreturn 0;\n}\n\n\n\n\n\t\n\n",
        "student8124": "#include <stdio.h>\n\nint main() {\n\n    int i, j, m, n, x;\n    double matrica[100][100]; // matrica[0..m redovi][0..n kolone]\n    int cirkularna, teplecova;\n\n    do {\n        printf(\"Unesite M i N: \");\n        scanf(\"%i %i\", &m, &n); // m = broj redova, n = broj kolona\n        if (n < 1 || n > 100 || m < 1 || m > 100)\n            printf(\"Pogresan unos!\\n\");\n    } while (n < 1 || n > 100 || m < 1 || m > 100);\n\n\n    printf(\"Unesite elemente matrice: \");\n    for (i=0; i<m; i++)\n        for (j=0; j<n; j++)\n            scanf(\"%lf\", &matrica[i][j]);\n\n/*  // zakomentarisana proba stampe matrice\n    printf(\"Matrica:\\n\");\n    for (i=0; i<m; i++) {\n        printf(\"\\n\");\n        for (j=0; j<n; j++)\n            printf(\"%i,\", matrica[i][j]);\n    }\n    printf(\"\\n\");\n*/\n\n    // provjera da li je cirkularna\n    cirkularna = 1;\n\n    if (m > 1) {\n        i = 1;\n        while (i <= m - 1 && cirkularna == 1) {\n            j = 1;\n            while (j <= n && cirkularna == 1) {\n\n                if (j == n)\n                    x = 1;\n                else\n                    x = j + 1;\n\n                if (matrica[i-1][j-1] != matrica[i][x-1])\n                    cirkularna = 0;\n                \n                j++;\n            }\n        i++;\n        }\n    }\n\n    if (cirkularna == 1) {\n        printf(\"Matrica je cirkularna\");\n        return 0;\n    }\n\n    // provjera da li je Teplecova\n    teplecova = 1;\n\n    i = 1;\n    while (i <= m && teplecova == 1) {\n        j = 0;\n        while (i+j < m && j+1 < n && teplecova == 1) {\n            if (matrica[i+j-1][j] != matrica[i+j][j+1])\n                teplecova = 0;\n                \n                j++;\n        }\n        i++;\n    }\n\n    i = 1;\n    while (i <= n && teplecova == 1) {\n        j = 0;\n        while (i+j < n && j+1 < m && teplecova == 1) {\n            if (matrica[j][i+j-1] != matrica[j+1][i+j])\n                teplecova = 0;\n                \n                j++;\n        }\n        i++;\n    }\n\n    if (teplecova == 1) {\n        printf(\"Matrica je Teplicova\");\n        return 0;\n    }\n\n\n    printf(\"Matrica nije ni cirkularna ni Teplicova\");\n\n    return 0;\n}\n"
    },
    "12": {
        "label": "1",
        "student1453": "#include <stdio.h>\n//ispisati slucaj kada je brojac==1\nint uporedi(char *prva, char *druga, int duzina){\n\tchar *p=prva, *d=druga;\n\tint brojac=0;\n\twhile(*d!='\\0'){\n\t\tif(*p!=*d)\n\t\t\treturn 0;\n\t\tp++;\n\t\td++;\n\t\tbrojac++;\n\t}\n\tif(*d=='\\0'&&brojac!=duzina)\t\t//potencijalna greska\n\t\t\treturn 0;\n\treturn 1;\n}\n\t\nchar  *prepisi(char *tekst,char *prva, char *druga, int duzina, int brojac){\n\tint i;\n\tchar *d=druga, *kraj=tekst, *p=prva;\n\tif(brojac==0){\n\t\twhile(*kraj!='\\0') kraj++;\n\t\tchar *pok=prva;\n\t\twhile(pok!=kraj-duzina){\n\t\t\t*pok=*(pok+duzina);\n\t\t\tpok++;\n\t\t\t\n\t\t}\n\t\t*pok='\\0';\n\t\treturn tekst;\n\t}\n\t\n\tif(brojac!=duzina){\n\t\tif(brojac==1){\n\t\t\twhile(*kraj!='\\0') kraj++;\n\t\t\tchar *pok=prva+1;\n\t\t\twhile(pok!=kraj-duzina+1){\n\t\t\t\t*pok=*(pok+duzina-1);\n\t\t\t\tpok++;\n\t\t\t}\n\t\t\t*pok='\\0';\n\t\t\t*prva=*druga;\n\t\t\treturn tekst;\n\t\t}\n\t\twhile(*kraj!='\\0') kraj++;\n\t\tif(brojac>duzina){\n\t\t\twhile(kraj!=p){\n\t\t\t\t*(kraj+brojac-duzina)=*kraj;\n\t\t\t\tkraj--;\n\t\t\t}\n\t\t}\n\t\tif(brojac<duzina){\n\t\t\tchar *oduzima=p+duzina-brojac-1;\n\t\t\twhile(oduzima!=kraj-(duzina-brojac)){\n\t\t\t\t*oduzima=*(oduzima+duzina-brojac);\n\t\t\t\toduzima++;\n\t\t\t}\n\t\t\t*oduzima='\\0';\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tfor(i=0;i<brojac;i++)\n\t\t*(p+i)=*(d+i);\n\treturn tekst;\n\t\n}\n\nchar *zamjena_rijeci(char *tekst, char **rijeci, char **zamjene, int broj_rijeci){\n\tint i=0,j=0,brojac_slova[100]={0}, brojac_rijeci=1, zamjena_velicina[50]={0};\n\tchar *p, *pok[100], *p_rijec[100], *p_zamjena[100];\n\n\tfor(i=0;i<broj_rijeci;i++){\n\t\tp_zamjena[i]=zamjene[i];\n\t}\n\tfor(i=0;i<broj_rijeci;i++){\n\t\tchar *z=p_zamjena[i];\n\t\twhile(*z!='\\0'){\n\t\t\tzamjena_velicina[i]++;\n\t\t\tz++;\n\t\t}\n\t}\n\t//printf(\"%d\", zamjena_velicina[0]);\n\t//printf(\"%c\\n\", *(rijeci[0]+1));\n\tfor(i=0;i<broj_rijeci;i++){\n\t\tp_rijec[i]=rijeci[i];\n\t}\n\t//printf(\"%c\\n\", *(p_rijec[1]+1));\n\tp=tekst;\n\tpok[j]=p;\n\ti=0;\n\twhile(*p!='\\0'){\n\t\tif(*p==' '){\n\t\t\tbrojac_rijeci++;\n\t\t\tdo{\n\t\t\t\tp++;\n\t\t\t}while(*p==' ');\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tpok[j]=p;\n\t\t\tcontinue;\n\t\t\t\n\t\t}\n\t\tbrojac_slova[i]++;\n\t\tp++;\n\t}\n\t//brojac_slova[0] broj slova na prvoj rijeci\n\t//pok[0] je pokazivac na prvu rijec u stringu\n\tint k,z;\n\tfor(i=0;i<brojac_rijeci;i++){\n\t\tfor(j=0;j<broj_rijeci;j++){\n\t\t\tif(uporedi(pok[i],p_rijec[j],brojac_slova[i])){ //funkcija uporedi radi :D, vraca 1 ako su rijeci iste 0 ako nisu\n\t\t\t\ttekst=prepisi(tekst,pok[i],p_zamjena[j],brojac_slova[i], zamjena_velicina[j]);\n\t\t\t\tint z;\n\t\t\t\tif(zamjena_velicina[j]>brojac_slova[i]){\n\t\t\t\t\tfor(k=0;k<zamjena_velicina[j]-brojac_slova[i];k++){\n\t\t\t\t\t\tfor(z=i;z<brojac_rijeci;z++)\n\t\t\t\t\t\t\tpok[z+1]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(zamjena_velicina[j]<brojac_slova[i]){\n\t\t\t\t\tfor(k=0;k<-zamjena_velicina[j]+brojac_slova[i];k++){\n\t\t\t\t\t\tfor(z=i;z<brojac_rijeci;z++)\n\t\t\t\t\t\t\tpok[z+1]--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t//jos manjiti kad je brojac slova veci od zamjene velicine\n\t\t}\n\t}\n\t\n\t\n\t\n\t\n\t\n\treturn tekst;\n}\n\n\n\nint main() {\n\tchar *rijeci[3]={\"proba\", \"Ovo\", \"je\"};\n\tchar *zamjene[3]={\"a\", \"a\", \"a\"};\n\tchar tekst[100]=\"Ovo je proba\";\n\tprintf(\"%s\", zamjena_rijeci(tekst, rijeci, zamjene, 3));\n\treturn 0;\n}\n",
        "student8357": "#include <stdio.h>\n\nint uporedi(char *prva, char *druga, int duzina){\n\tchar *p=prva, *d=druga;\n\tint brojac=0;\n\twhile(*d!='\\0'){\n\t\tif(*p!=*d)\n\t\t\treturn 0;\n\t\tp++;\n\t\td++;\n\t\tbrojac++;\n\t}\n\tif(*d=='\\0'&&brojac!=duzina)\n\t\t\treturn 0;\n\treturn 1;\n}\n\t\nchar  *prepisi(char *tekst,char *prva, char *druga, int duzina, int brojac){\n\tint i;\n\tchar *d=druga, *kraj=tekst, *p=prva;\n\tif(brojac==0){\n\t\twhile(*kraj!='\\0') kraj++;\n\t\tchar *pok=prva;\n\t\twhile(pok!=kraj-duzina){\n\t\t\t*pok=*(pok+duzina);\n\t\t\tpok++;\n\t\t\t\n\t\t}\n\t\t*pok='\\0';\n\t\treturn tekst;\n\t}\n\t\n\tif(brojac!=duzina){\n\t\tif(brojac==1){\n\t\t\twhile(*kraj!='\\0') kraj++;\n\t\t\tchar *pok=prva+1;\n\t\t\twhile(pok!=kraj-duzina+1){\n\t\t\t\t*pok=*(pok+duzina-1);\n\t\t\t\tpok++;\n\t\t\t}\n\t\t\t*pok='\\0';\n\t\t\t*prva=*druga;\n\t\t\treturn tekst;\n\t\t}\n\t\twhile(*kraj!='\\0') kraj++;\n\t\tif(brojac>duzina){\n\t\t\twhile(kraj!=p){\n\t\t\t\t*(kraj+brojac-duzina)=*kraj;\n\t\t\t\tkraj--;\n\t\t\t}\n\t\t}\n\t\tif(brojac<duzina){\n\t\t\tchar *oduzima=p+duzina-brojac-1;\n\t\t\twhile(oduzima!=kraj-(duzina-brojac)){\n\t\t\t\t*oduzima=*(oduzima+duzina-brojac);\n\t\t\t\toduzima++;\n\t\t\t}\n\t\t\t*oduzima='\\0';\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tfor(i=0;i<brojac;i++)\n\t\t*(p+i)=*(d+i);\n\treturn tekst;\n\t\n}\n\nchar *zamjena_rijeci(char *tekst, char **rijeci, char **zamjene, int broj_rijeci){\n\tint i=0,j=0,k,z,brojac_slova[100]={0}, brojac_rijeci=1, zamjena_velicina[50]={0};\n\tchar *p, *pok[100], *p_rijec[100], *p_zamjena[100];\n\n\tfor(i=0;i<broj_rijeci;i++){\n\t\tp_zamjena[i]=zamjene[i];\n\t}\n\tfor(i=0;i<broj_rijeci;i++){\n\t\tchar *z=p_zamjena[i];\n\t\twhile(*z!='\\0'){\n\t\t\tzamjena_velicina[i]++;\n\t\t\tz++;\n\t\t}\n\t}\n\t\n\tfor(i=0;i<broj_rijeci;i++){\n\t\tp_rijec[i]=rijeci[i];\n\t}\n\t\n\tp=tekst;\n\tpok[j]=p;\n\ti=0;\n\twhile(*p!='\\0'){\n\t\tif(*p==' '){\n\t\t\tbrojac_rijeci++;\n\t\t\tdo{\n\t\t\t\tp++;\n\t\t\t}while(*p==' ');\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tpok[j]=p;\n\t\t\tcontinue;\n\t\t\t\n\t\t}\n\t\tbrojac_slova[i]++;\n\t\tp++;\n\t}\n\n\tfor(i=0;i<brojac_rijeci;i++){\n\t\tfor(j=0;j<broj_rijeci;j++){\n\t\t\tif(uporedi(pok[i],p_rijec[j],brojac_slova[i])){ \n\t\t\t\ttekst=prepisi(tekst,pok[i],p_zamjena[j],brojac_slova[i], zamjena_velicina[j]);\n\t\t\t\tint z;\n\t\t\t\tif(zamjena_velicina[j]>brojac_slova[i]){\n\t\t\t\t\tfor(k=0;k<zamjena_velicina[j]-brojac_slova[i];k++){\n\t\t\t\t\t\tfor(z=i;z<brojac_rijeci;z++)\n\t\t\t\t\t\t\tpok[z+1]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(zamjena_velicina[j]<brojac_slova[i]){\n\t\t\t\t\tfor(k=0;k<-zamjena_velicina[j]+brojac_slova[i];k++){\n\t\t\t\t\t\tfor(z=i;z<brojac_rijeci;z++)\n\t\t\t\t\t\t\tpok[z+1]--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn tekst;\n}\n\n\n\nint main() {\n\tchar *rijeci[3]={\"realno\", \"Ovo\", \"nije\"};\n\tchar *zamjena[3]={\"zix\", \"zax\", \"zex\"};\n\tchar tekst[100]=\"Ovo nije realno\";\n\tprintf(\"%s\", zamjena_rijeci(tekst, rijeci, zamjena, 3));\n\treturn 0;\n}"
    },
    "13": {
        "label": "0",
        "student7457": "#include <iostream>\n#include <vector>\n#include <iomanip>\n#include <cmath>\n\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing std::vector;\n\nvector<vector<double>> RastuciPodnizovi(vector<double> brojevi);\nvoid printajMatricu(vector<vector<double>> matrica);\nvector<vector<double>> OpadajuciPodnizovi(vector<double> brojevi);\n\nconst double epsilon(0.000000000001);\n\nint main() {\n    cout << \"Unesite broj elemenata vektora: \";\n    int brojElemenata;\n    cin >> brojElemenata;\n    vector<double> brojevi(0);\n    cout << \"Unesite elemente vektora: \";\n    for(int i=0; i<brojElemenata; i++) {\n        double pomocna;\n        cin >> pomocna;\n        brojevi.push_back(pomocna);\n    }\n    cout << \"Maksimalni rastuci podnizovi: \" << endl;\n    printajMatricu(RastuciPodnizovi(brojevi));\n    cout << \"Maksimalni opadajuci podnizovi: \" << endl;\n    printajMatricu(OpadajuciPodnizovi(brojevi));\n    //*/\n    return 0;\n}\n\nvector<vector<double>> RastuciPodnizovi(vector<double> brojevi) {\n    vector<vector<double>> rezultat(0);\n    vector<double> podniz(0);\n    for(int i = 0; i < brojevi.size()-1; i++) {\n        if(brojevi.at(i) < brojevi.at(i+1) || std::fabs(brojevi.at(i+1) - brojevi.at(i)) < epsilon) {\n            podniz.push_back(brojevi.at(i));\n\n        } else {\n            podniz.push_back(brojevi.at(i));\n            if(1 < podniz.size())\n                rezultat.push_back(podniz);\n            podniz.clear();\n        }\n\n        if(i == brojevi.size()-2) {\n            podniz.push_back(brojevi.at(brojevi.size()-1));\n        }\n    }\n    if(1 < podniz.size())\n        rezultat.push_back(podniz);\n    return rezultat;\n}\nvector<vector<double>> OpadajuciPodnizovi(vector<double> brojevi) {\n    vector<vector<double>> rezultat(0);\n    vector<double> podniz(0);\n    for(int i = 0; i < brojevi.size()-1; i++) {\n        if(brojevi.at(i+1) < brojevi.at(i) || std::fabs(brojevi.at(i+1) - brojevi.at(i)) < epsilon) {\n            podniz.push_back(brojevi.at(i));\n\n        } else {\n            podniz.push_back(brojevi.at(i));\n            if(1 < podniz.size())\n                rezultat.push_back(podniz);\n            podniz.clear();\n        }\n\n        if(i == brojevi.size()-2) {\n            podniz.push_back(brojevi.at(brojevi.size()-1));\n        }\n    }\n    if(1 < podniz.size())\n        rezultat.push_back(podniz);\n    return rezultat;\n}\nvoid printajMatricu(vector<vector<double>> matrica) {\n    for(vector<double> red : matrica) {\n        for(double clan : red)\n            cout << clan << \" \";\n        cout << endl;\n    }\n}\n\n",
        "student8598": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 3\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n#include <iostream>\n#include <vector>\nstd::vector<std::vector<double>> RastuciPodnizovi(std::vector<double> v){\n\tint i,k=0,a=5;\n\tstd::vector<std::vector<double>> Rastuci(1);\n\tfor(i=0;i<v.size();i++){\n\t\tif(i==v.size()-1) goto L1;\n\t\tif(v[i]<=v[i+1]){\n\t\t\tRastuci[k].push_back(v[i]);\n\t\t\ta=1;\n\t\t\tcontinue;\n\t\t}\n\t\tL1:\n\t\tif(a==1){\n\t\t\tRastuci[k].push_back(v[i]);\n\t\t\tk++;\n\t\t\tRastuci.resize(k+1);\n\t\t}\n\t\ta=5;\n\t}\n\treturn Rastuci;\n}\nstd::vector<std::vector<double>> OpadajuciPodnizovi(std::vector<double> v){\n\tint i,k=0,a=5;\n\tstd::vector<std::vector<double>> Rastuci(1);\n\tfor(i=0;i<v.size();i++){\n\t\tif(i==v.size()-1) goto L1;\n\t\tif(v[i]>=v[i+1]){\n\t\t\tRastuci[k].push_back(v[i]);\n\t\t\ta=1;\n\t\t\tcontinue;\n\t\t}\n\t\tL1:\n\t\tif(a==1){\n\t\t\tRastuci[k].push_back(v[i]);\n\t\t\tk++;\n\t\t\tRastuci.resize(k+1);\n\t\t}\n\t\ta=5;\n\t}\n\treturn Rastuci;\n}\nint main ()\n{\n\tint i,n,m;\n\tstd::vector<double> v;\n\tstd::cout<<\"Unesite broj elemenata vektora: \";\n\tstd::cin>>n;\n\tstd::cout<<\"Unesite elemente vektora: \";\n\tfor(i=0;i<n;i++){\n\t\tstd::cin>>m;\n\t\tv.push_back(m);\n\t}\n\tstd::cout<<\"Maksimalni rastuci podnizovi: \"<<std::endl;\n\tstd::vector<std::vector<double> > Rastuci(RastuciPodnizovi(v));\n\tfor(int x=0;x<Rastuci.size();x++){\n\t\tfor(int y=0; y<Rastuci[x].size();y++){\n\t\t\tstd::cout<<Rastuci[x][y]<<\" \";\n\t\t}\n\t\tif(x!=Rastuci.size()-1) std::cout<<std::endl;\n\t}\n\t\tstd::cout<<\"Maksimalni opadajuci podnizovi: \"<<std::endl;\n\tstd::vector<std::vector<double> > Opadajuci(OpadajuciPodnizovi(v));\n\tfor(auto x: Opadajuci){\n\t\tfor(double y: x){\n\t\t\tstd::cout<<y<<\" \";\n\t\t}\n\t\tstd::cout<<std::endl;\n\t}\n\t\n\treturn 0;\n}"
    },
    "14": {
        "label": "1",
        "student3424": "#include <stdio.h>\n\nint main()\n{\n\tchar T, B, M, gutac; /* T-Tarik; B-Bojan; M-Mirza */\n\tfloat restoran, restoran_popust, fast_food, bistro;\n\tint hamburger=0, pizza=0, cevapi=0;\n\t\n\tprintf(\"Unesite jelo za Tarika: \");\n\tscanf(\"%c\", &T);\n\tscanf(\"%c\", &gutac);\n\tprintf(\"Unesite jelo za Bojana: \");\n\tscanf(\"%c\", &B);\n\tscanf(\"%c\", &gutac);\n\tprintf(\"Unesite jelo za Mirzu: \");\n\tscanf(\"%c\", &M);\n\tscanf(\"%c\", &gutac);\n\t\n\tif (T == 'H')\n\t{\n\t\thamburger++;\n\t}\n\telse if (T == 'P')\n\t{\n\t\tpizza++;\n\t}\n\telse if (T == 'C')\n\t{\n\t\tcevapi++;\n\t}\n\t\n\tif (B == 'H')\n\t{\n\t\thamburger++;\n\t}\n\telse if (B == 'P')\n\t{\n\t\tpizza++;\n\t}\n\telse if (B == 'C')\n\t{\n\t\tcevapi++;\n\t}\n\t\n\tif (M == 'H')\n\t{\n\t\thamburger++;\n\t}\n\telse if (M == 'P')\n\t{\n\t\tpizza++;\n\t}\n\telse if (M == 'C')\n\t{\n\t\tcevapi++;\n\t}\n\t\n\trestoran = hamburger*3.30 + pizza*6.80 + cevapi*5.00;\n\tfast_food = hamburger*3.00 + pizza*8.00 + cevapi*3.90;\n\tbistro = hamburger*5.00 + pizza*5.30 + cevapi*6.00;\n\t\n\tif (pizza>=1 && pizza<=3)\n\t{\n\t\trestoran_popust = pizza*6.80 - (pizza*6.80*10)/100 +hamburger*3.30 + cevapi*5.00;\n\t}\n\telse if (cevapi>=1 && cevapi<=3)\n\t{\n\t\trestoran_popust = cevapi*5.50 - (cevapi*5.50*10)/100 + hamburger*3.30;\n\t}\n\telse if (hamburger>=1 && hamburger<=3)\n\t{\n\t\trestoran_popust = hamburger*3.30 - (hamburger*3.30*10)/100;\n\t}\n\t\n\tif (restoran<fast_food && restoran<bistro)\n\t{\n\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\", restoran);\n\t}\n\telse if (fast_food<restoran && fast_food<bistro)\n\t{\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\", fast_food);\n\t\tif (restoran_popust<fast_food)\n\t\t{\n\t\t\tprintf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", restoran_popust);\n\t\t}\n\t}\n\telse if (bistro<restoran && bistro<fast_food)\n\t{\n\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\", bistro);\n\t\tif (restoran_popust<bistro)\n\t\t{\n\t\t\tprintf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", restoran_popust);\n\t\t}\n\t}\n\t\n\treturn 0;\n}",
        "student7090": "#include <stdio.h>\n\nvoid novi_red()\n{\n\tchar c;\n\tscanf(\"%c\", &c);\n}\n\nint pizza(char s)\n{\n\tif(s=='P') {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nint hamburger(char s)\n{\n\tif(s=='H') {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nint cevapi(char s)\n{\n\tif(s=='C') {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tchar t, m, b;\n\tprintf(\"Unesite jelo za Tarika: \");\n\tscanf(\"%c\", &t);\n\tnovi_red();\n\tprintf(\"Unesite jelo za Bojana: \");\n\tscanf(\"%c\", &b);\n\tnovi_red();\n\tprintf(\"Unesite jelo za Mirzu: \");\n\tscanf(\"%c\", &m);\n\tnovi_red();\n\tdouble restoran=0;\n\tdouble fast=0;\n\tdouble bistro=0;\n\tdouble popust=0;\n\n\trestoran=6.8*pizza(t) + 6.8*pizza(b) + 6.8*pizza(m) + 3.3*hamburger(t) + 3.3*hamburger(b) + 3.3*hamburger(m) + 5*cevapi(t) + 5*cevapi(b) + 5*cevapi(m);\n\t\n\tfast=8*pizza(t) + 8*pizza(b) + 8*pizza(m) + 3*hamburger(t) + 3*hamburger(b) + 3*hamburger(m) + 3.9*cevapi(t) + 3.9*cevapi(b) + 3.9*cevapi(m);\n\t\n\tbistro=5.3*pizza(t) + 5.3*pizza(b) + 5.3*pizza(m) + 5*hamburger(t) + 5*hamburger(b) + 5*hamburger(m) + 6*cevapi(t) + 6*cevapi(b) + 6*cevapi(m);\n\n\t//popust proracunajmo\n\tif(t=='P' || b=='P' || m=='P') {\n\t\tpopust=(6.8 -(6.8*0.1))*pizza(t) + (6.8 -(6.8*0.1))*pizza(b) + (6.8 -(6.8*0.1))*pizza(m) + 3.3*hamburger(t) + 3.3*hamburger(b) + 3.3*hamburger(m) + 5*cevapi(t) + 5*cevapi(b) + 5*cevapi(m);\n\t} \n\telse if(t=='C' || b=='C' || m=='C') {\n\t\tpopust=6.8*pizza(t) + 6.8*pizza(b) + 6.8*pizza(m) + 3.3*hamburger(t) + 3.3*hamburger(b) + 3.3*hamburger(m) + (5-(5*0.1))*cevapi(t) + (5-(5*0.1))*cevapi(b) + (5-(5*0.1))*cevapi(m);\n\t}\n\telse if(t=='H' || b=='H' || m=='H') {\n\t\tpopust=6.8*pizza(t) + 6.8*pizza(b) + 6.8*pizza(m) + (3.3- (3.3*0.1))*hamburger(t) + (3.3- (3.3*0.1))*hamburger(b) + (3.3- (3.3*0.1))*hamburger(m) + 5*cevapi(t) + 5*cevapi(b) + 5*cevapi(m);\n\t}\n\t\n\tdouble najniza=restoran;\n\tif(fast< najniza) {\n\t\tnajniza=fast;\n\t}\n\tif(bistro<najniza) {\n\t\tnajniza=bistro;\n\t}\n\tif(najniza==restoran) {\n\t\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%3.2lf KM).\\n\", najniza);\n\t\treturn 0;\n\t}\n\tif(najniza==fast) {\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%3.2lf KM).\\n\", najniza);\n\t}\n\tif(najniza==bistro) {\n\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%3.2lf KM).\\n\", najniza);\n\t}\n\tif(popust<najniza) {\n\t\tprintf(\"Sa popustom bi Restoran bio jeftiniji (%3.2lf KM).\", popust);\n\t}\n\treturn 0;\n}\n"
    },
    "15": {
        "label": "0",
        "student5970": "#include<stdio.h>\nint main()\n{\nint n,i,j; \n\tdo  { \n\t    printf(\"Unesite broj N: \");\n\t    scanf(\"%d\",&n);\n\t\t    if(n%4!=0 || n<8)\n\t\t    printf(\"Neispravno N!\\n\");\n        }while(n%4!=0 || n<8);\n\t\tprintf(\"\\n\");\nfor(i=0;i<n;i++)\n{\n\tfor(j=0;j<n;j++)\n\t{\n\t//prva figura//\n\t\tif(i<=n/2-1 && j<=n/2-1)\n\t\t{\n\t\t\tif(i==j) printf(\"\\\\\");\n\t\t\telse if(i==n/2-j-1) printf(\"/\");\n\t\t\telse printf(\" \");\n\t\t}\n\t//druga figura//\n\t\tif(i<=n/2-1 && j>n/2-1)\n\t    { \n\t \t\tif(i==0 && (j==n/2 || j==n-1)) printf(\"+\");\n\t \t\telse if(i==0) printf(\"-\");\n\t \t\telse if(i!=0 && i<n/2-1 && (j==n/2 || j==n-1)) printf(\"|\");\n\t \t\telse if(i==n/2-1 && (j==n/2 || j==n-1)) printf(\"+\");\n\t \t\telse if(i==n/2-1) printf(\"-\");\n\t \t\telse printf(\" \");\n\t    }\n\t    //treca figura//\n\t    if(i>n/2-1 && j<=n/2-1)\n\t     \t{\n\t     \t\tif(i==n/2 && (j==0 || j==n/2-1))printf(\"+\");\n\t     \t\telse if(i==n/2) printf(\"-\");\n\t     \t\telse if(i!=n/2 && i<n-1 && (j==n/2-1 || j==0)) printf(\"|\");\n\t     \t\telse if(i==n-1 && (j==n/2-1 || j==0)) printf(\"+\");\n\t     \t\telse if(i==n-1) printf(\"-\");\n\t     \t\telse printf(\" \");\n\t     \t}\n\t    //cetvrta figura//\t \t\n\t    if (i>n/2-1 && j>n/2-1)\n\t  \t\t{\n\t  \t\t\tif(j==n/2+n/4-1 && i==n/2+n/4-1  || j==n/2+n/4 && i==n/2+n/4 || j==n/2+n/4 && i==n/2+n/4-1 || j==n/2+n/4-1 && i==n/2+n/4)  printf(\"+\");\n\t  \t\t\telse if(j==n/2+n/4 || j==n/2+n/4-1) printf(\"|\");\n\t         \telse if(i==n/2+n/4-1 || i==n/2+n/4) printf(\"-\");\n\t         \telse if(i==n/2+n/4-1 && j==n/2+n/4)printf(\"-\");\n\t  \t\t\telse if(i==n/2+n/4-1 && j==n/2+n/4-1)printf(\"-\");\n\t  \t\t\telse printf(\" \");\n\t  \t\t}\n\t}\n\tprintf(\"\\n\");\n }\n return 0;\n}",
        "student8035": "#include <stdio.h>\n\nint main()\n{\n\tint n,i,j;\n\tdo {\n\t\tprintf (\"Unesite broj N: \");\n\t\tscanf (\"%d\", &n);\n\t\t\n\t\tif (n<7 || n%4 != 0)\n\t\tprintf (\"Neispravno N!\\n\");\n\t} \n\twhile (n<7 || n%4 != 0);\n\tprintf (\"\\n\");\n\n\tfor (i=1; i<=n; i++) {\n\t\tfor (j=1; j<=n; j++) {\n\n\t\t\tif (i==j && j<=(n/2))\n\t\t\t\tprintf (\"\\\\\");\n\n\t\t\telse if (i<=(n/2) && j<=(n/2) && (j== n/2-i+1))\n\t\t\t\tprintf (\"/\");\n\n\t\t\telse if ((j==(n/2+1) || j==n) && j>=5 && (i==1 || i == n/2))\n\t\t\t\tprintf (\"+\");\n\n\t\t\telse if ((i==1||i==n/2) && (j>(n/2+1)) && (j<n))\n\t\t\t\tprintf (\"-\");\n\n\t\t\telse if (((j==(n/2 + 1)) || j==n) && i>1 && i<=(n/2))\n\t\t\t\tprintf (\"|\");\n\n\t\t\telse if ((i==(n/2 + 1) || i==n) && i >=5 && (j==1 || j == n/2))\n\t\t\t\tprintf (\"+\");\n\n\t\t\telse if ((j==1 || j==n/2) && (i>(n/2 +1)) && (j<n))\n\t\t\t\tprintf (\"|\");\n\n\t\t\telse if (((i==(n/2 + 1)) || i==n) && j>1 && j<=(n/2))\n\t\t\t\tprintf (\"-\");\n\n\t\t\telse if (i>n/2 && j>n/2 && i==(n/2+n/4) && j==(n/2+n/4))\n\t\t\t\tprintf (\"+\");\n\n\t\t\telse if (i>n/2 && j>n/2 && i==(n/2+n/4) && j==(n/2+n/4+1))\n\t\t\t\tprintf (\"+\");\n\n\t\t\telse if (i>n/2 && j>n/2 && j==(n/2+n/4) && i==(n/2+n/4+1))\n\t\t\t\tprintf (\"+\");\n\n\t\t\telse if (i>n/2 && j>n/2 && j==(n/2+n/4+1) && i==(n/2+n/4+1))\n\t\t\t\tprintf (\"+\");\n\n\t\t\telse if (i>n/2 && j>n/2 && ((j==(n/2+n/4)) || j==(n/2+n/4+1)))\n\t\t\t\tprintf (\"|\");\n\n\t\t\telse if (i>n/2 && j>n/2 && ((i==(n/2+ n/4)) || i==(n/2 + n/4 +1)))\n\t\t\t\tprintf (\"-\");\n\n\t\t\telse\n\t\t\t\tprintf (\" \");\n\t\t}\n\t\tprintf (\"\\n\");\n\t}\n\treturn 0;\n}\n"
    },
    "16": {
        "label": "1",
        "student3350": "#include <iostream>\n#include <set>\n#include <vector>\n#include <string>\n#include <list>\n#include <stdexcept>\n\nint Korak(std::string s){\n    int br=0;\n    for(int i=0; i<s.length(); i++){\n        if(s[i]==' ' || s[i]=='-' ) continue;\n        br++;\n    }\n    return br;\n}\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> v, int timovi){\n    if(timovi>v.size() ||timovi <1) throw std::logic_error(\"Razvrstavanje nemoguce\");\n    std::vector<std::set<std::string>> v1(timovi);\n    int n=v.size();\n    std::list<std::string> lista;\n    for(int i=0; i<v.size(); i++){\n        lista.push_back(v[i]);\n    }\n    std::list<std::string>::iterator it(lista.begin()), it2(lista.begin()), it1(lista.begin()), it3(lista.begin());\n    int br_po_timu, prvi, prvi_po_timu, br_djece=v.size(), br_koraka;\n    if(n%timovi==0){\n        br_po_timu=n/timovi; \n        int k=0;\n        while(br_djece!=0){\n            std::set<std::string> skup;\n            for(int i=0; i<br_po_timu; i++){\n                skup.insert(*it);\n                br_koraka=Korak(*it);\n                if(++it2==lista.end()) {\n                    it1=it;\n                    it=lista.begin();\n                    it3=it;\n                    it1=lista.erase(it1);\n                }\n                else it=lista.erase(it);\n           br_djece--;\n                if(br_djece==1 && i<br_po_timu){\n                    skup.insert(*it); \n                    br_djece--;\n                    break; \n                } \n                for(int j=1;j<br_koraka; j++){\n                    it3=it;\n                    if(++it3==lista.end()){ it=lista.begin();}\n                    else it++;\n                    \n                }\n                it2=it;\n                if(it==lista.end()) it--;\n                \n            }\n            v1[k]=skup;\n           k++;\n        }\n    }\n    else {\n        prvi= n%timovi; \n        prvi_po_timu= n/timovi +1; \n        int ostali=n/timovi;\n        int k=0;\n        while(br_djece!=0){\n            std::set<std::string> skup;\n            if(k<prvi){\n                for(int i=0; i<prvi_po_timu; i++){\n                    skup.insert(*it);\n                    //std::cout<<\"Prvi= \"<<*it<<std::endl;\n                    br_koraka=Korak(*it);\n                    if(++it2==lista.end()){\n                        it1=it;\n                        it=lista.begin();\n                        it3=it;\n                        it1=lista.erase(it1);\n                    }\n                    else it=lista.erase(it);\n                  \n                    br_djece--;\n                    for(int j=1; j<br_koraka; j++){\n                       \n                        it3=it;\n                        if(++it3==lista.end()) { it=lista.begin(); }\n                        else it++;\n                        \n                    }\n                    it2=it;\n                    if(it==lista.end()){ it--;}\n                    \n                }\n                v1[k]=skup;\n            }\n            else {\n                it2++;\n                std::set<std::string> skup1;\n                for(int i=0; i<ostali; i++){\n                    skup1.insert(*it);\n                    \n                    br_koraka=Korak(*it);\n                    if(++it2==lista.end()){\n                        it1=it;\n                        it=lista.begin();\n                        it3=it;\n                        \n                        it1=lista.erase(it1);\n                    }\n                    else{ it=lista.erase(it); }\n                   \n                    br_djece--;\n                    if(br_djece==1 && i<ostali){\n                        skup1.insert(*it);\n                        br_djece--;\n                        break;\n                    }\n                    for(int j=1; j<br_koraka; j++){\n                       \n                        if(++it3==lista.end()){ it=lista.begin(); }\n                        else it++;\n                        it3=it;\n                    }\n                    it2=it;\n                    if(it==lista.end()) it--;\n                   \n                }\n                v1[k]=skup1;\n            }\n            k++;\n        }\n    }\n    return v1;\n}\nint main ()\n{\n    std::cout<<\"Unesite broj djece: \";\n    int n;\n    std::cin>>n;\n    std::cout<<\"Unesite imena djece: \\n\";\n    std::cin.ignore(10000,'\\n');\n    std::vector<std::string> v(n);\n    for(int i=0; i<n; i++){\n        std::getline(std::cin,v[i]);\n    }\n    std::cout<<\"Unesite broj timova: \";\n    int k;\n    std::cin>>k;\n    std::vector<std::set<std::string>> novi(Razvrstavanje(v,k));\n    for(int i=0; i<k; i++){\n        std::cout<<\"Tim \"<<i+1<<\": \";\n        auto it2=novi[i].end();\n        it2--;\n        for(auto it=novi[i].begin(); it!=novi[i].end(); it++){\n            std::cout<<*it;\n            if(it!=it2) std::cout<<\", \";\n        }\n        std::cout<<std::endl;\n    }\n\treturn 0;\n}",
        "student7507": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include <set>\n#include <vector>\n#include <string>\n#include <list>\n#include <stdexcept>\n\nint Korak(std::string s){\n    int br=0;\n    for(int i=0; i<s.length(); i++){\n        if(s[i]==' ' || s[i]=='-' ) continue;\n        br++;\n    }\n    return br;\n}\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> v, int timovi){\n    if(timovi>v.size() ||timovi <1) throw std::logic_error(\"Razvrstavanje nemoguce\");\n    std::vector<std::set<std::string>> v1(timovi);\n    int n=v.size();\n    std::list<std::string> lista;\n    for(int i=0; i<v.size(); i++){\n        lista.push_back(v[i]);\n    }\n    std::list<std::string>::iterator it(lista.begin()), it2(lista.begin()), it1(lista.begin()), it3(lista.begin());\n    int br_po_timu, prvi, prvi_po_timu, br_djece=v.size(), br_koraka;\n    if(n%timovi==0){\n        br_po_timu=n/timovi; // Jednak broj djece po timovima i to je br_po_timu\n        int k=0;\n        while(br_djece!=0){\n            std::set<std::string> skup;\n            for(int i=0; i<br_po_timu; i++){\n                //std::cout<<\"Prvi=\"<<*it<<std::endl;\n                skup.insert(*it);\n                br_djece--;\n                if(br_djece==0) break;\n                br_koraka=Korak(*it);\n                \n                if(++it2==lista.end()) {\n                    it1=it;\n                    it=lista.begin();\n                    it3=it;\n                    //std::cout<<\"Prije brisanja: \"<<*it<<std::endl;\n                    it1=lista.erase(it1);\n                }\n                else it=lista.erase(it);\n                //std::cout<<\"novi=\"<<*it<<std::endl;\n                \n                if(br_djece==1 && i+1<br_po_timu){\n                    skup.insert(*it); \n                    br_djece--;\n                    break; \n                } \n                for(int j=1;j<br_koraka; j++){\n                    it3=it;\n                    if(++it3==lista.end()){ it=lista.begin(); /*std::cout<<\"pocetak= \"<<*it<<std::endl;*/}\n                    else it++;\n                    \n                }\n                it2=it;\n                if(it==lista.end()) it--;\n                //std::cout<<\"Poslije for= \"<<*it<<std::endl;\n            }\n            v1[k]=skup;\n            //std::cout<<\"upisan\"<<std::endl;\n            k++;\n        }\n    }\n    else {\n        prvi= n%timovi; // Prvih (n%k) timova koji ce imati vise djece\n        prvi_po_timu= n/timovi +1; // Broj djece u tim timovima koji imaju vise djece od ostalih\n        int ostali=n/timovi;\n        int k=0;\n        while(br_djece!=0){\n            std::set<std::string> skup;\n            if(k<prvi){\n                for(int i=0; i<prvi_po_timu; i++){\n                    skup.insert(*it);\n                   // std::cout<<\"Prvi= \"<<*it<<std::endl;\n                    br_koraka=Korak(*it);\n                    //std::cout<<\"br= \"<<br_koraka<<std::endl;\n                    if(++it2==lista.end()){\n                        it1=it;\n                        it=lista.begin();\n                        it3=it;\n                        it1=lista.erase(it1);\n                    }\n                    else it=lista.erase(it);\n                    //std::cout<<\"Novi= \"<<*it<<std::endl;\n                    br_djece--;\n                   \n                    int br=0;\n                    for(int j=1; j<br_koraka; j++){\n                        //std::cout<<\" j= \"<<j;\n                        it3=it;\n                        if(++it3==lista.end()) { it=lista.begin(); /*std::cout<<\"Pocetak \"<<j<<\" \"<<*it<<std::endl;*/}\n                        else it++;\n                        br++;\n                        \n                    }\n                    it2=it;\n                    if(it==lista.end()){ it--;}\n                    //std::cout<<\"Poslije for: \"<<*it<<std::endl;\n                }\n                v1[k]=skup;\n            }\n            else {\n                //it2++;\n                std::set<std::string> skup1;\n                for(int i=0; i<ostali; i++){\n                    skup1.insert(*it);\n                    br_djece--;\n                    if(br_djece==0) break;\n                   // std::cout<<\"Prvi Poslije prvih: \"<<*it<<std::endl;\n                    br_koraka=Korak(*it);\n                    //std::cout<<\"br: \"<<br_koraka<<std::endl;\n                    if(++it2==lista.end() && br_djece!=1){\n                        it1=it;\n                        it=lista.begin();\n                        it3=it;\n                        //std::cout<<\"Prije brisanja: \"<<*it<<std::endl;\n                        it1=lista.erase(it1);\n                    }\n                    else{ it=lista.erase(it); }\n                    //std::cout<<\"Novi poslije prvih: \"<<*it<<std::endl;\n                    if(br_djece==1 && i+1<ostali){\n                        skup1.insert(*it);  \n                        br_djece--;\n                        break;\n                    }\n                    for(int j=1; j<br_koraka; j++){\n                        it3=it;\n                        if(++it3==lista.end()){ it=lista.begin(); /*std::cout<<\"j \"<<j<<\" \"<<*it<<std::endl;*/}\n                        else it++;\n                    }\n                    it2=it;\n                    if(it==lista.end()) it--;\n                    //std::cout<<\"For poslije: \"<<*it<<std::endl;\n                }\n                v1[k]=skup1;\n            }\n            k++;\n        }\n    }\n    return v1;\n}\nint main ()\n{\n    try{\n        std::cout<<\"Unesite broj djece: \";\n        int n;\n        std::cin>>n;\n        std::cout<<\"Unesite imena djece: \\n\";\n        std::cin.ignore(10000,'\\n');\n        std::vector<std::string> v(n);\n        for(int i=0; i<n; i++){\n            std::getline(std::cin,v[i]);\n        }\n        std::cout<<\"Unesite broj timova: \";\n        int k;\n        std::cin>>k;\n        std::vector<std::set<std::string>> novi(Razvrstavanje(v,k));\n        for(int i=0; i<k; i++){\n            std::cout<<\"Tim \"<<i+1<<\": \";\n            int vel=novi[i].size();\n            \n            for(auto it=novi[i].begin(); it!=novi[i].end(); it++){\n                std::cout<<*it;\n                if(vel>1) std::cout<<\", \";\n                vel--;\n            }\n            std::cout<<std::endl;\n        }\n    }\n    catch(std::logic_error izuzetak){\n        std::cout<<\"Izuzetak: \"<<izuzetak.what();\n    }\n\treturn 0;\n}"
    },
    "17": {
        "label": "0",
        "student2463": "#include <stdio.h>\n\nint main() {\n\tint Brc=0, Brb=0, Brs=0, Brv=0, Brp=0;\n\tchar Auto;\n\tfloat PC, PB, PS, PV, PP, Ukupno;\n\t\n\tprintf(\"Unesite vozila: \");\n\n\tdo{\n\t\tscanf(\"%c\", &Auto);\n\tif(Auto=='c' || Auto=='C') \n\tBrc++;\n\telse if (Auto=='b' || Auto=='B') \n\tBrb++;\n\telse if (Auto=='s' || Auto=='S') \n\tBrs++;\n\telse if (Auto=='v' || Auto=='V') \n\tBrv++;\n\telse if (Auto=='p' || Auto=='P') \n\tBrp++;\n\telse if(Auto=='K'|| Auto=='k')\n\t  break;\n\telse\n\t\tprintf(\"Neispravan unos\\n\"); }\n\twhile(Auto!='K' && Auto!='k');\n\n    Ukupno= Brc+Brb+Brs+Brv+Brp;\n\tprintf(\"Ukupno evidentirano %g vozila.\\n\", Ukupno);\n\t\n\tif(Ukupno==0) \n\t\tprintf(\"Najpopularnija boja je crna (0.00%%).\");\n\telse if(Brc>=Brb && Brc>=Brs && Brc>=Brv && Brc>=Brp)\n\t{\n\t\tPC=Brc*100/Ukupno;\n\t\tprintf(\"Najpopularnija boja je crna (%.2f%%).\", PC);\n\t}\n    else if(Brb>=Brc && Brb>=Brs && Brb>=Brv && Brb>=Brp)\n\t{\n\t\tPB=Brb*100/Ukupno;\n\t\tprintf(\"Najpopularnija boja je bijela (%.2f%%).\", PB);\n\t}\n\t else if(Brs>=Brc && Brs>=Brb && Brs>=Brv && Brs>=Brp)\n\t{\n\t \tPS=Brs*100/Ukupno;\n\t\tprintf(\"Najpopularnija boja je siva (%.2f%%).\", PS);\n\t}\n\telse if(Brv>=Brc && Brv>=Brb && Brv>=Brs && Brv>=Brp)\n\t{\n\t\tPV=Brv*100/Ukupno;\t\n\t\tprintf(\"Najpopularnija boja je crvena (%.2f%%).\", PV);\n\t}\n\telse if(Brp>=Brc && Brp>=Brb && Brp>=Brs && Brp>=Brv)\n\t{\n\t\tPP=Brp*100/Ukupno;\n\t\tprintf(\"Najpopularnija boja je plava (%.2f%%).\", PP);\n\t}\n\treturn 0;\n}\n",
        "student3116": "#include <stdio.h>\n\nint main() {\n\tint C=0, B=0, S=0, V=0, P=0, U=0, K;\n\tdouble Cp, Bp, Sp, Vp, Pp;\n\tchar x=' ', Naj;\n\t\n\tprintf(\"Unesite vozila: \");\n\twhile (x!='k' && x!='K') {\n\t\t     scanf(\"%c\", &x);\n\t\t     switch(x) {\n\t\t     \t      case 'c':\n\t\t     \t              C++;\n\t\t     \t              break;\n\t\t     \t      case 'C':\n\t\t     \t              C++;\n\t\t     \t              break;\n\t\t     \t      case 'b':\n\t\t     \t              B++;\n\t\t     \t              break;\n\t\t     \t      case 'B':\n\t\t     \t              B++;\n\t\t     \t              break;\n\t\t     \t      case 's':\n\t\t     \t              S++;\n\t\t     \t              break;\n\t\t     \t      case 'S':\n\t\t     \t              S++;\n\t\t     \t              break;\n\t\t     \t      case 'v':\n\t\t     \t              V++;\n\t\t     \t              break;\n\t\t     \t      case 'V':\n\t\t     \t              V++;\n\t\t     \t              break;\n\t\t     \t      case 'p':\n\t\t     \t              P++;\n\t\t     \t              break;\n\t\t     \t      case 'P':\n\t\t     \t              P++;\n\t\t     \t              break;\n\t\t     \t      case 'k':\n\t\t     \t              K++;\n\t\t     \t              break;\n\t\t     \t      case 'K':\n\t\t     \t              K++;\n\t\t     \t              break;\n\t\t     \t      default:\n\t\t     \t              printf(\"Neispravan unos\\n\");\n\t\t     \t       }\n\t}\n\t\n\tU=C+B+S+V+P;\n\tprintf(\"Ukupno evidentirano %d vozila.\", U);\n\t\n\tif (U>0){\n\t\t       Cp=(double)C*100/U;\n\t           Bp=(double)B*100/U;\n \t           Sp=(double)S*100/U;\n               Vp=(double)V*100/U;\n\t           Pp=(double)P*100/U;\n\t    }\n\t\n\telse {\n\t\t  printf(\"\\nNajpopularnija boja je crna (0.00%%).\");\n\t\t  return 0;\n\t}\n\t\n\tNaj='C';\n\tif(Bp>Cp)\n\t       Naj='B';\n\tif(Sp>Bp && Sp>Cp)\n\t       Naj='S';\n\tif(Vp>Bp && Vp>Cp && Vp>Sp)\n\t       Naj='V';\n\tif(Pp>Bp && Pp>Cp && Pp>Sp && Pp>Vp)\n\t       Naj='P';\n\t\n\tif(Naj=='C'){\n\t       printf(\"\\nNajpopularnija boja je crna (%.2f%%).\", Cp);\n\t}\n\telse if(Naj=='B'){\n\t       printf(\"\\nNajpopularnija boja je bijela (%.2f%%).\", Bp);\n\t}\n\telse if(Naj=='S'){\n\t       printf(\"\\nNajpopularnija boja je siva (%.2f%%).\", Sp);\n\t}\n\telse if(Naj=='V'){\n\t       printf(\"\\nNajpopularnija boja je crvena (%.2f%%).\", Vp);\n\t}\n\telse {\n\t       printf(\"\\nNajpopularnija boja je plava (%.2f%%).\", Pp);\n    }\n\treturn 0;\n}"
    },
    "18": {
        "label": "1",
        "student3315": "#include <stdio.h>\n#include <ctype.h>\n#include <string.h>\n\nvoid unesi(char niz[], int velicina) {      //funkcija iz predavanja, unos stringa\n    char znak=getchar();\n    if(znak=='\\n') znak=getchar();\n    int i = 0;\n    while (i<velicina-1 && znak!='\\n') {\n        niz[i]=znak;\n        i++;\n        znak=getchar();\n        }\n    niz[i]='\\0';\n }\n\nint slovo(int c){   //funkcija vrati 1 ako je znak koji je primila slovo\n\tif (c>='A' && c<='Z' || c>='a' && c<='z')\n\t\treturn 1;\n\treturn 0;\n}\n\nvoid swap(char*p, char *q){ //funkcija primi 2 stringa, i zamijeni ih\n\tchar temp[100];\n\tstrcpy(temp,p);\n\tstrcpy(p,q);\n\tstrcpy(q,temp);\n}\n/* FUNKCIJA IZ DATOTEKE U NIZ RIJECI UPISE RIJECI PO BROJU POANVLAJNJA, ZATIM PRODJEMO OPET KROZ DATOTEKU I ZAMJENJUJEMO RIJECI SA ZNACIMA IZ ASCCI VRIJEDNOSTI*/\nvoid kompresuj(char* naziv, char*naziv1){\n    FILE *ulaz=fopen(naziv,\"r\");    //otvorimo datoteku za ulaz 2 puta, i jednu za izlaz\n    FILE *ulaz1=fopen(naziv,\"r\");\n    FILE *izlaz=fopen(naziv1,\"w\");\n    char rijeci[1000][1000] = {0}; //niz od 1000 rijeci od po 1000 znakova\n    int brojac[1000] = {0};     //brojac za svaku rijec koliko se puta ponalvnja\n    int i, broj_rijeci = 0;\n    char rijec[1000];       //trenuta rijec koju ucitamo\n    int duzina; \n    char znak=fgetc(ulaz); \n    while(znak!=EOF) {  //dok ne dodjemo do kraja datoteke uzimamo znak po znak\n        duzina = 0; \n        while (slovo(znak)) {   //dok je znak nas slovo, znaci da smo na rijeci i uzmemo sva slova, ubacimo u nasu trenutnu rijec\n            rijec[duzina++] = znak;\n            znak=fgetc(ulaz);\n        }\n        rijec[duzina] = '\\0';   //na kraju nase trenutne rijeci stavimo \\0\n        if (duzina <10 && duzina!=0) {      //ako je duzina rijeci onakva kakva treba bit u zadatku  treba nesto raditi s njom....\n            int ima = 0; \n            int j;\n            for ( j = 0; j < broj_rijeci; j++) {    //prodjemo kroz rijeci koje smo do sada upisali u nasu matricu rijeci\n                if (strcmp(rijeci[j], rijec) == 0) {    //ako ima vec rijec tu, samo joj broj ponavljanja povecamo\n                    ima = 1;\n                    brojac[j]++;\n                    break;\n                }\n            }\n            if (ima!=1) {                   //ako je nema , moramo je dodat i brojac joj stavit na 1\n                strcpy(rijeci[broj_rijeci], rijec); \n                brojac[broj_rijeci++] = 1;\n            }\n        }\n    znak=fgetc(ulaz);\n    }\n    //do sad smo u nas niz rijeci unijeli svaku rijec i u niz brojac koliko se puta ponavlja\n    int j;\n    for(i=0;i<broj_rijeci;i++){  //sotriramo nase rijeci po brjou ponavljanja i leksiikografski\n        for(j=i+1;j<broj_rijeci;j++){\n            if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1)){\n                int temp=brojac[j];    \n                brojac[j]=brojac[i];\n                brojac[i]=temp;\n                swap(rijeci[i],rijeci[j]);\n            }\n        }\n    }\n    int kraj=10;\n    char novired='\\n';\n    if(broj_rijeci<10) kraj=broj_rijeci; //treba nam 10 rijeci, a ako ih ima manje onda to koristimo\n    for(i=0;i<kraj;i++){      //prvo unosimo u izlaz nase rijeci koje imamo u nizu\n        fputs(rijeci[i],izlaz);\n        fputc(novired,izlaz);\n    }\n    \n    char c=fgetc(ulaz1);        //opet otvaramo nasu ulaznu datoteku\n    while(c!=EOF) {\n        duzina = 0; \n        while (slovo(c)) {    //uzimamo rijec po rijec\n            rijec[duzina++]=c;\n            c=fgetc(ulaz1);\n        }\n        rijec[duzina] = '\\0'; \n       \n       int kontrola=0;\n         if (duzina<10 && duzina!=0) { \n            for ( j = 0; j < kraj; j++) { //ako se ona nalazi u nasem nizu mijenjamoje sa odg znakom receno u datatku\n                if (strcmp(rijeci[j], rijec) == 0) { \n                char znk=j+20;\n                kontrola=1;\n                    fputc(znk,izlaz);\n                    fputc(c,izlaz);\n                    break;\n            } }\n        }\n           if(kontrola==0){      //ako je nema u nizu onda je samo prekopiramo, tj ne treba je mijenjat\n               char*r=rijec;\n               while(*r!='\\0'){\n                    fputc(*r,izlaz);\n                    r++;\n               }\n               fputc(c,izlaz); \n           }\n     c=fgetc(ulaz1); \n \t}\n    printf(\"Datoteka kompresovana.\\n\"); //zatvorimo sve datoteke\n    fclose(ulaz);\n    fclose(ulaz1);\n    fclose(izlaz);\n}   \n/*FUNKCIJA PRVO UZME RIJECI KOJE SU NA POCETKU DATOTEKE, I STAVI IH U NIZ, I ONDA PRODJE KROZ DAOTEKU I ZNAKOVE ZAMJENJUJE RA RIJECIMA */\nvoid dekompresuj(char*naziv, char*naziv1){\n    FILE *ulaz=fopen(naziv,\"r\"); // isto kao i gore otvorimo 2 za ulaz i 1 za izlaz\n    FILE *ulaz1=fopen(naziv,\"r\");\n    FILE *izlaz=fopen(naziv1,\"w\");\n    char rijeci[1000][1000]={0}, rijec[1000];  //isto imamo matrice rijeci, i pomocnu rijec kao i gore\n    int  broj_rijeci=0, duzina=0, brojackrajeva=0;\n    char znak=fgetc(ulaz);\n    int kontrola=0;\n    while(znak!=EOF){  \n         duzina=0;\n         kontrola=0;\n         while (slovo(znak)) { //opet uzimamo rijec po rijec,smjestamo u niz\n            rijec[duzina++] = znak;\n            znak=fgetc(ulaz);\n        }\n         rijec[duzina] = '\\0';\n      \n        if (duzina <10 && duzina!=0) { //ako moze biti rijec zadana\n            strcpy(rijeci[broj_rijeci], rijec);  //prekoiramo u niz rijeci \n            int j;\n            for ( j = 0; j < broj_rijeci; j++) { //u nasem nizu vidimo da li ima nasa rijec   \n                if (strcmp(rijeci[j], rijec) == 0) { \n                    kontrola=1; \n                \tbreak;\n\t\t\t\t}\n            }\n            if(kontrola)\n            \tbreak;\n            broj_rijeci++; \n            }\n    znak=fgetc(ulaz);\n    }\nbrojackrajeva=0;//izbrojimo koliko ima rijeci\n\nchar c=fgetc(ulaz1);\n    \n    while(c!=EOF){ \n        if(c=='\\n')  brojackrajeva++; //brojimo nova mjesta\n         if(brojackrajeva==broj_rijeci) break;  //kad dodjemo do zadnje rijeci, prekidamo petlju, al pok ostane na tekstu poslije\n     c=fgetc(ulaz1);\n    }\n    c=fgetc(ulaz1);\n        while(c!=EOF){//nasstavimo dalje uzimat rijeci \n            int n=0;\n            if(c>=20 && c<=30){ //sve znakove od 20 do 30 mijenjamo rijecima\n                 char*p=rijeci[c-20]; \n                 n=1;\n             while(*p!='\\0'){ //ubacimo rijec\n                 fputc(*p,izlaz);\n                 p++;\n             }\n         }\n         if(n==0) //ako nije znak , onda samo prepisujemo rijeci\n             fputc(c,izlaz);\n        c=fgetc(ulaz1);\n        }\nprintf(\"Datoteka dekompresovana.\\n\");\nfclose(ulaz);\nfclose(izlaz);\nfclose(ulaz1);\n}\nint main(){\n    int opcija;\n    char s[100], p[100];\n  \tdo{\n    printf(\"Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: \");\n    scanf(\"%d\",&opcija);\n    switch(opcija){\n        case 1: // unesemo ulaznu i izlaznu dat i vrsimo kompresiju\n             printf(\"Unesite ime ulazne datoteke: \");\n             unesi(s,40);\n\t         printf(\"Unesite ime izlazne datoteke: \");\n             unesi(p,40);\n             kompresuj(s,p);\n             break;\n        case 2: //isto samo dekompresujemo\n             printf(\"Unesite ime ulazne datoteke: \");\n             unesi(s,40);\n             printf(\"Unesite ime izlazne datoteke: \");\n             unesi(p,40);\n             dekompresuj(s,p);\n    }\n  }while(opcija!=0);\nreturn 0;\n}",
        "student5378": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n\nvoid unesi(char niz[],int velicina){\n\tchar znak=getchar();\n\tif(znak=='\\n') znak = getchar();\n\tint i=0;\n\twhile(i<velicina-1 && znak!='\\n'){\n\t\tniz[i]=znak;\n\t\ti++;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n}\nint da_li_je_slovo(int n){\n\tif(n>='A'&&n<='Z'||n>='a'&&n<='z')\treturn 1;\n\treturn 0;\n}\nvoid zamijeni(char *p, char *s){\n\tchar temp[100];\n\tstrcpy(temp,p);\n\tstrcpy(p,s);\n\tstrcpy(s,temp);\n}\nvoid kompresuj(char* naziv,char *naziv1){\n\tFILE *ulaz=fopen(naziv,\"r\");\n\tFILE *ulaz1=fopen(naziv,\"r\");\n\tFILE *izlaz=fopen(naziv1,\"w\");\n\tchar rijeci[1000][1000]={0};\n\tint brojac[1000]={0};\n\tint i,broj_rijeci=0;\n\tchar rijec[1000];\n\tint duzina;\n\tchar znak=fgetc(ulaz);\n\twhile(znak!=EOF){\n\t\tduzina=0;\n\t\twhile(da_li_je_slovo(znak)){\n\t\t\trijec[duzina++]=znak;\n\t\t\tznak=fgetc(ulaz);\n\t}\n\trijec[duzina]='\\0';\n\tif(duzina<10 && duzina!=0){\n\t\tint ima=0;\n\t\tint j;\n\t\tfor(j=0;j<broj_rijeci;j++){\n\t\t\tif(strcmp(rijeci[j],rijec)==0){\n\t\t\t\tima =1;\n\t\t\t\tbrojac[j]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(ima!=1){\n\t\t\tstrcpy(rijeci[broj_rijeci],rijec);\n\t\t\tbrojac[broj_rijeci++]=1;\n\t\t}\n\t}\n\tznak=fgetc(ulaz);\n}\n int j;\n    for(i=0;i<broj_rijeci;i++){ \n        for(j=i+1;j<broj_rijeci;j++){\n            if(brojac[j]>brojac[i] || (brojac[j]==brojac[i] && strcmp(rijeci[i],rijeci[j])==1)){\n\t\t\tint temp=brojac[j];\n\t\t\tbrojac[j]=brojac[i];\n\t\t\tbrojac[i]=temp;\n\t\t\tzamijeni(rijeci[i],rijeci[j]);\n\t\t}\n\t}\n}\nint kraj=10;\nchar novired='\\n';\nif(broj_rijeci<10) kraj=broj_rijeci;\nfor(i=0;i<kraj;i++){\n\tfputs(rijeci[i],izlaz);\n\tfputc(novired,izlaz);\n}\nchar c=fgetc(ulaz1);\nwhile(c!=EOF){\n\tduzina=0;\n\twhile(da_li_je_slovo(c)){\n\t\trijec[duzina++]=c;\n\t\tc=fgetc(ulaz1);\n\t}\n\trijec[duzina]='\\0';\n\tint kontrola=0;\n\tif(duzina<10 && duzina!=0){\n\t\tfor(j=0;j<kraj;j++){\n\t\t\tif(strcmp(rijeci[j],rijec)==0){\n\t\t\t\tchar znk=j+20;\n\t\t\t\tkontrola=1;\n\t\t\t\tfputc(znk,izlaz);\n\t\t\t\tfputc(c,izlaz);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(kontrola==0){\n\t\tchar *r=rijec;\n\t\twhile (*r!='\\0') {\n\t\t\tfputc(*r,izlaz);\n\t\t\tr++;\n\t\t}\n\t\tfputc(c,izlaz);\n\t}\n\tc=fgetc(ulaz1);\n}\nprintf(\"Datoteka kompresovana.\\n\");\nfclose(ulaz);\nfclose(ulaz1);\nfclose(izlaz);\n}\nvoid dekompresuj(char*naziv,char*naziv2){\n\tFILE *ulaz=fopen(naziv,\"r\");\n\tFILE *ulaz1=fopen(naziv,\"r\");\n\tFILE *izlaz=fopen(naziv2,\"w\");\n\tchar rijeci[1000][1000]={0}, rijec[1000];\n\tint br_rijeci=0,duzina=0,br=0;\n\tchar znak=fgetc(ulaz);\n\tint flag=0;\n\twhile (znak!=EOF) {\n\t\tduzina=0;\n\t\tflag=0;\n\t\twhile(da_li_je_slovo(znak)){\n\t\t\trijec[duzina++]=znak;\n\t\t\tznak=fgetc(ulaz);\n\t\t}\n\t\trijec[duzina]='\\0';\n\t\tif(duzina<10 && duzina!=0){\n\t\t\tstrcpy(rijeci[br_rijeci],rijec);\n\t\t\tint j;\n\t\t\tfor(j=0;j<br_rijeci;j++){\n\t\t\tif (strcmp(rijeci[j], rijec) == 0) {\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag)\n\t\t\tbreak;\n\t\t\tbr_rijeci++;\n\t\t}\n\t\tznak=fgetc(ulaz);\n\t}\n\tbr=0;\n\tchar c=fgetc(ulaz1);\n\twhile (c!=EOF){\n\t\tif(c=='\\n') br++;\n\t\tif(br==br_rijeci) break;\n\t\tc=fgetc(ulaz1);\n\t}\n\tc=fgetc(ulaz1);\n\twhile (c!=EOF) {\n\t\tint n=0;\n\t\tif(c>=20&&c<=30){\n\t\t\tchar *q=rijeci[c-20];\n\t\t\tn=1;\n\t\t\twhile(*q!='\\0'){\n\t\t\t\tfputc(*q,izlaz);\n\t\t\t\tq++;\n\t\t\t}\n\t\t}\n\t\tif(n==0)\n\t\tfputc(c,izlaz);\n\t\tc=fgetc(ulaz1);\n\t}\n\tprintf(\"Datoteka dekompresovana.\\n\");\n\tfclose(ulaz);\n\tfclose(izlaz);\n\tfclose(ulaz1);\n}\nint main() {\nint biraj;\nchar s[100],p[100];\ndo{\n\tprintf(\"Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: \");\n\tscanf(\"%d\",&biraj);\n\tswitch(biraj){\n\t\tcase 1:\n\t\tprintf(\"Unesite ime ulazne datoteke: \");\n\t\tunesi(s,40);\n\t\tprintf(\"Unesite ime izlazne datoteke: \");\n\t\tunesi(p,40);\n\t\tkompresuj(s,p);\n\t\tbreak;\n\t\tcase 2: \n\t\tprintf(\"Unesite ime ulazne datoteke: \");\n\t\tunesi(s,40);\n\t\tprintf(\"Unesite ime izlazne datoteke: \");\n\t\tunesi(p,40);\n\t\tdekompresuj(s,p);\n\t}\n}\nwhile(biraj!=0);\n\treturn 0;\n}\n"
    },
    "19": {
        "label": "0",
        "student1624": "#include <stdio.h>\nchar gg[2000]; //globalni niz u kojem cuvamo nasu recenicu prije kodiranja\nint pozicija (char slovo, char* tekst){\n//fja treba vratiti indeks naseg slova u tekstu\nint i=0;\nchar*s=tekst; //pokazivac na nas tekst\nwhile(*s!=slovo){\n\ts++;\n\ti++;\n}\nreturn i;\n}\n\nvoid fun(char slova[], int niz[], char* tekst, char* tablica) { //funkcija fun primi 2 niza, tekst i tablicu\nint i,j;\n//prvo nas niz charova napunimo asci vrijednostima od 32 do 126 kako je i receno u zadatku\nfor (i=32; i<=126; i++){\n\tslova[i-32]=i;\n\t\n}\n//poslije toga u nas drugi niz intova spasimo broj ponavljanja,\n//tako da nas gornji niz slova pokazuje slovo a nas donji niz koliko se puta to slovo ponavlja\nwhile(*tekst!='\\0')\nniz [(*tekst++)-32]++;\n // prodjemo kroz niz ponavljanja od vecih ka manjim\n // u slucaju da ima isto ponavljanja sortiramo po asci vrijednostima\n for(i=0;i<=94;i++){\n \tfor(j=i+1;j<=94;j++){\n \t\tif((niz[j]>niz[i]) || (niz[j]==niz[i] && slova[j]<slova[i])) {\n \t\t\tchar temp2=slova[i];\n \t\t\tslova[i]=slova[j];\n \t\t\tslova[j]=temp2;\n \t\t\tint temp1=niz[i];\n \t\t\tniz[i]=niz[j];\n \t\t\tniz[j]=temp1;\n \t\t}\n \t}\n }\n//poslije ovoga nas sortirani niz slova prekopiramo u tablicu\nfor (i=0;i<=94;i++){\n\t*(tablica+i)=slova[i];}\n\t*(tablica+i)='\\0';\n}\nchar* kodiraj(char*tekst, char*tablica)\n{\n\tchar*pocetak=tekst,*s=tekst;\n\tchar slova[200];\n\tint i, niz[200]={0};\n\t\n\tchar*global=gg;\n\twhile (*s!='\\0')\n\t//global je pokazivac na globalni niz gg i u njega prekopiramo recenicu\n\t*global++=*s++;\n\t*global='\\0';\n\t\n\tfun (slova, niz, tekst, tablica);\n\t// u fju saljemo nizove tekst i tablicu, a fja ce te nizove napunit, sortirat po broju ponavljanja i to prebacit u tablicu\n\t//i na kraju sto je i receno u zadatku svaki znak postaje 126-njegova pozicija u tablici\n\twhile(*tekst!='\\0'){\n\t\tint postaje=126-pozicija(*tekst,tablica);\n\t\t*tekst++=postaje;\n\t}\n\treturn pocetak;\n}\nchar* dekodiraj (char*tekst, char*tablica){\n\t//posto smo u nas globalni niz spasili tekst, samo ga prekopiramo nazad//\n\tchar*gl=gg,*poc=tekst;\n\twhile(*tekst!='\\0'){\n\t\t*tekst++=*gl++;\n\t}\n\treturn poc;\n}\n\t\nint main () {\n\tchar tekst[]=\"Ovo je neki testni tekst\";\n\tchar sifrarnik[100]=\"\";\n\tkodiraj (tekst, sifrarnik);\n\tprintf(\"%s\", tekst);\n\tdekodiraj(tekst,sifrarnik);\n\tprintf(\"%s\", sifrarnik);\n\treturn 0;\n}",
        "student9538": "#include <stdio.h>\nvoid napuniniz(char*tekst,int niz[]) {\n\twhile(*tekst!='\\0') {\n\t\tniz[*tekst-32]++;\n\t\ttekst++;\n\t}\n}\nvoid napunislova(char slova[]){\nint i;\nfor(i=32;i<=126;i++){\n\tint poz=i-32;\n\tslova[poz]=i;\n} }\nvoid prekopiraj(char*tablica,char slova[]) {\n\tint i;\n\tfor(i=0;i<=94;i++) {\n\t\t*(tablica+i)=slova[i]; }\n\t\t*(tablica+i)='\\0'; \n\t}\nchar*kodiraj(char*tekst,char*tablica){\n\tchar*pocetak=tekst,*s=tekst,*poc=tablica,slova[200];\n\tint niz[200]={0},i,j;\n\t\n\tnapuniniz(tekst,niz);\n\tnapunislova(slova);\n\t\n\tfor(i=0;i<=94;i++) {\n\t\tfor(j=i+1;j<=94;j++){\n\t\t\tif((niz[j]==niz[i] && slova[j]<slova[i]) || (niz[j]>niz[i])) {\n\t\t\tint temp=niz[i];\n\t\t\tniz[i]=niz[j];\n\t\t\tniz[j]=temp;\n\t\t\tchar temp2=slova[i];\n\t\t\tslova[i]=slova[j];\n\t\t\tslova [j]=temp2; }}}\n\t\t\tprekopiraj(tablica,slova);\n\t\t\twhile(*tekst!='\\0') {\n\t\t\t\tint i=0;\n\t\t\t\tchar *t=tablica;\n\t\t\t\twhile(*tekst!=*t++)\n\t\t\t\ti++;\n\t\t\t\t*tekst=126-i;\n\t\t\t\ttekst++;}\n\t\t\t\treturn s; }\n\t\t\t\tchar*dekodiraj(char*tekst,char*tablica) {\n\t\t\t\t\tchar pomtekst[2000],pomtabla[100],slova[200];\n\t\t\t\t\tchar*pocetak=tekst,*p=pomtekst;\n\t\t\t\t\tint niz[200]={0},i,j;\n\t\t\t\t\twhile(*tekst!='\\0') {\n\t\t\t\t\t\t*p=*tekst;\n\t\t\t\t\t\tp++;\n\t\t\t\t\t\ttekst++;\n\t\t\t\t\t} *p='\\0';\n\t\t\t\t\ttekst=pocetak;\n\t\t\t\t\tnapuniniz(pomtekst,niz);\n\t\t\t\t\tnapunislova(slova);\n\t\t\t\t\tfor(i=0;i<=94;i++){\n\t\t\t\t\t\tfor(j=i+1;j<=94;j++){\n\t\t\t\t\t\t\tif ((niz[j]==niz[i] && slova[j]>slova[i] || niz[j]>niz[i])) {\n\t\t\t\t\t\t\tint temp1=niz[i];\n\t\t\t\t\t\t\tniz[i]=niz[j];\n\t\t\t\t\t\t\tniz[j]=temp1;\n\t\t\t\t\t\t\tchar temp2=slova[i];\n\t\t\t\t\t\t\tslova[i]=slova[j];\n\t\t\t\t\t\t\tslova[j]=temp2;\n\t\t\t\t\t\t\t}}}\n\t\t\t\t\t\t\tprekopiraj(pomtabla,slova);\n\t\t\t\t\t\t\tchar *pt=pomtekst;\n\t\t\t\t\t\t\twhile(*pt!='\\0'){\n\t\t\t\t\t\t\t\tint i=0;\n\t\t\t\t\t\t\t\tchar*t=pomtabla;\n\t\t\t\t\t\t\t\twhile(*pomtekst!=*t++) i++;\n\t\t\t\t\t\t\t\t*pt=126-i;\n\t\t\t\t\t\t\t\tpt++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\twhile(*tekst!='\\0'){\n\t\t\t\t\t\tint i=0;\n\t\t\t\t\t\tp=pomtabla;\n\t\t\t\t\t\twhile(*tekst!=*p++) i++;\n\t\t\t\t\t\t*tekst=*(tablica+i);\n\t\t\t\t\t\ttekst++;\n\t\t\t\t\t}\nreturn pocetak; }\nint main(){\n\tchar tekst[]=\"Ovo je neki testni teksta\";\n\tchar sifrarnik[100]=\"\";\n\tint i;\n\tkodiraj(tekst,sifrarnik);\n\tprintf(\"%s\",tekst);\n\tfor(i=0;i<10;i++)\n\tprintf(\"%c\",sifrarnik[i]);\n\tdekodiraj(tekst,sifrarnik);\n\tprintf(\"%s\",tekst);\n\treturn 0;\n}\n\t\t\n\n"
    },
    "20": {
        "label": "1",
        "student5573": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int m,n,niz[200][200],o,p,z=0,i,j,a,b,brojac=0,brojac2=0,c,d,l,e,r,brojac3=0,poz,h,g;\n    \n    /*unos i ispitivanje ispravnosti brojeva m i n*/\n    \n    do\n    {\n        if(z>0)\n        {\n            printf(\"Brojevi nisu u trazenom opsegu.\\n\");\n        }\n        printf(\"Unesite brojeve M i N: \");\n        scanf(\"%d %d\",&m,&n);\n        z++; \n    }while(m<1 || n<1 || m>200 || n>200);\n    \n    /*unos elemenata matrice*/\n    \n    printf(\"Unesite elemente matrice: \");\n    for(o=0;o<m;o++)\n    {\n        for(p=0;p<n;p++)\n        {\n            scanf(\"%d\",&niz[o][p]);\n        }\n    }\n    \n    /*izbacivanje redova*/\n    \n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            l=j;\n            for(a=i+1;a<m;a++)\n            {\n                for(b=0;b<n;b++)\n                {\n                    if(niz[i][j]==niz[a][b] && j==b)\n                    {\n                        brojac++;\n                        j++;\n                    }\n                }\n                if(brojac==n)\n                {\n                    for(c=a;c<=m-1;c++)\n                    {\n                        for(d=0;d<n;d++)\n                        {\n                            niz[c][d]=niz[c+1][d];\n                        }\n                    }\n                    m--;\n                    i=i-1;\n\n                }\n                brojac=0;\n            }\n        }\n        j=l;\n    }\n    \n    /*izbacivanje kolona*/\n    \n    l3:\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++) \n        {\n            for(a=j+1;a<n;a++)\n            {\n                if(i==0)\n                {\n                    if(niz[i][j]==niz[i][a])\n                    {\n                        brojac3++;\n                        poz=a;\n                        goto l2;\n                    }\n\n                }\n                if(i!=0)\n                {\n                    if(niz[i][j]==niz[i][a] && a==poz)\n                    {\n                        brojac3++;\n                        goto l2;\n                    }\n                }\n            }\n        }\n        l2:\n            if(brojac3==0)\n            {\n                goto l1;\n            }\n            if(brojac3==m)\n            {\n                if(poz<n+1){\n                for(h=0;h<m;h++)\n                {\n                    for(g=poz;g<n;g++)\n                    {\n                        niz[h][g]=niz[h][g+1];\n                    }\n                }}\n                brojac3=0;\n                n--;\n                goto l3;\n            }\n    }\n    l1:\n    \n    /*ispis modifivirane matrie*/\n    \n    printf(\"Nakon izbacivanja redova/kolona matrica glasi: \\n\");\n    for(e=0;e<m;e++)\n    {\n        for(r=0;r<n;r++)\n        {\n            if(niz[e][r]>9 || niz[e][r]<0)\n            {\n                printf(\"   %d\",niz[e][r]);\n            }\n            else{\n            printf(\"    %d\",niz[e][r]);}\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n",
        "student8598": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int m,n,niz[200][200],o,p,z=0,i,j,a,b,brojac=0,brojac2=0,c,d,l,e,r,brojac3=0,poz,h,g;\n        do\n    {\n        if(z>0)\n        {\n            printf(\"Brojevi nisu u trazenom opsegu.\\n\");\n        }\n        printf(\"Unesite brojeve M i N: \");\n        scanf(\"%d %d\",&m,&n);\n        z++; \n    }while(m<1 || n<1 || m>200 || n>200);\n        printf(\"Unesite elemente matrice: \");\n    for(o=0;o<m;o++)\n    {\n        for(p=0;p<n;p++)\n        {\n            scanf(\"%d\",&niz[o][p]);\n        }\n    }\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            l=j;\n            for(a=i+1;a<m;a++)\n            {\n                for(b=0;b<n;b++)\n                {\n                    if(niz[i][j]==niz[a][b] && j==b)\n                    {\n                        brojac++;\n                        j++;\n                    }\n                }\n                if(brojac==n)\n                {\n                    for(c=a;c<=m-1;c++)\n                    {\n                        for(d=0;d<n;d++)\n                        {\n                            niz[c][d]=niz[c+1][d];\n                        }\n                    }\n                    m--;\n                    i=i-1;\n                }\n                brojac=0;\n            }\n        }\n        j=l;\n    }\n    l3:\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++) \n        {\n            for(a=j+1;a<n;a++)\n            {\n                if(i==0)\n                {\n                    if(niz[i][j]==niz[i][a])\n                    {\n                        brojac3++;\n                        poz=a;\n                        goto l2;\n                    }\n\n                }\n                if(i!=0)\n                {\n                    if(niz[i][j]==niz[i][a] && a==poz)\n                    {\n                        brojac3++;\n                        goto l2;\n                    }\n                }\n            }\n        }\n        l2:\n            if(brojac3==0)\n            {\n                goto l1;\n            }\n            if(brojac3==m)\n            {\n                if(poz<n+1){\n                for(h=0;h<m;h++)\n                {\n                    for(g=poz;g<n;g++)\n                    {\n                        niz[h][g]=niz[h][g+1];\n                    }\n                }}\n                brojac3=0;\n                n--;\n                goto l3;\n            }\n    }\n    l1:\n    printf(\"Nakon izbacivanja redova/kolona matrica glasi: \\n\");\n    for(e=0;e<m;e++)\n    {\n        for(r=0;r<n;r++)\n        {\n            if(niz[e][r]>9 || niz[e][r]<0)\n            {\n                printf(\"   %d\",niz[e][r]);\n            }\n            else{\n            printf(\"    %d\",niz[e][r]);}\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"
    },
    "21": {
        "label": "0",
        "student4152": "#include <stdio.h>\n\nint main() {\n\tint n, r, j, k, s, i, l, p, u, a ;\n\t \n\t do {\n\tprintf(\"Unesite broj redova: \");\n\tscanf (\"%d\", &r);\n\t } while (r<=0 || r>10);\n\t \n\t do {\n\tprintf (\"Unesite broj kolona: \");\n\tscanf (\"%d\", &k);\n\t } while (k<=0 || k>10);\n\t \n\tdo {\n\tprintf (\"Unesite sirinu jedne kolone: \");\n\tscanf (\"%d\", &s);\n\t} while (s<=0 || s>10);\n\n\t\n\tfor (n=0 ; n<r ; n++) {\n\tfor (j=0 ; j<k ; j++) {\n\t\tprintf (\"+\");\n\t\tfor(i=0 ; i<s ; i++)\n\t\tprintf (\"-\"); \n\t\t\n\t}\n\t\tprintf (\"+\\n\");\n\t\t\n\t\t\n\t\tfor (l=0 ; l<k ; l++){ \n\t\tprintf(\"|\") ;\n\t\tfor (p=0 ; p<s ; p++)\n\t\tprintf (\" \");\n\t}\n\t   printf (\"|\\n\");\n\t\t\n\t\n\t\t\t}\n\t\t\t\t\t\n\tfor (u=0 ; u<k ; u++) {\n\t\tprintf (\"+\");\n\t\tfor(a=0 ; a<s ; a++)\n\t\tprintf (\"-\"); \n\t\t\n\t}\n\t\tprintf (\"+\\n\");\n\t\t\t\n\t\n\t\n\t\n\t \n\t\treturn 0;\n}\n",
        "student8566": "#include <stdio.h>\n\nint main() {\nint col,row,mod;\nint r,c;\ndo{ printf(\"Unesite broj redova: \");\nscanf(\"%d\",&row );\n\n}\n\nwhile(row<=0 || row>10);\n\ndo{ \n    printf(\"Unesite broj kolona: \");\nscanf(\"%d\",&col );\n\n}\nwhile(col<=0 || col>10);\n \ndo{\n printf(\"Unesite sirinu jedne kolone: \");\nscanf(\"%d\", &mod);}\nwhile(mod<=0 || mod>10);\n\nfor(r=0;r<2*row+1;r++)\n{ for(c=0;c<col*(mod+1)+1;c++)\n{if (c%(mod+1))\n{if (r%2)\n{printf(\"%c\", ' ');}\nelse \n{printf(\"%c\",'-');}\n}\nelse{\nif(r%2)\n{printf(\"%c\",'|');}\nelse \n{printf(\"%c\", '+');}\n}\n}\nprintf(\"\\n\"); } \n \n \n\n\n\n\n\n\n\ngetchar();\n\n\n\n\treturn 0;\n}\n"
    },
    "22": {
        "label": "1",
        "student7697": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\t\n\tint broj, br_cifara=0, cifra1, cifra2, rezultat, pom, i;\n\n\n/*Prvo prebrojimo cifre unesenog broja, kako bi znali koja je najveca dekadska jedinica*/\t\n\tprintf(\"Unesite broj: \");\n\tscanf(\"%d\", &broj);\n\tpom=broj;\n\twhile(pom!=0) {\n\t\tbr_cifara++;\n\t\tpom=pom/10;\n\t}\n\ti=1;\n\twhile(broj!=0 && i<br_cifara) {\n\t\tcifra1=broj%10;\n\t\tbroj=broj/10;\n\t\tcifra2=broj%10;\n\t\trezultat=(cifra2-cifra1);\n\t\tif(rezultat<0) rezultat=-rezultat;\n\t\tif(i==1) pom=rezultat;\n\t\telse {\n\t\t\tpom=pom+(rezultat*pow(10, i-1));\n\t\t}\n\t\ti++;\n\t\t\n\t}\n\tprintf(\"%d\", pom);\n\t\n\treturn 0;\n}\n",
        "student7956": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\t\n\tint broj, br_cifara=0, cifra1, cifra2, rezultat, pomocna, i, k;\n\t\n\tprintf(\"Unesite broj: \");\n\tscanf(\"%d\", &broj);\n\tpomocna=broj;\n\twhile(pomocna!=0) {\n\t\tbr_cifara++;\n\t\tpomocna=pomocna/10;\n\t}\n\tif(br_cifara<=1){printf(\"0\"); return;}\n\t\n\ti=1;\n\tfor(k=0;;k++) {\n\t\tcifra1=broj%10;\n\t\tbroj=broj/10;\n\t\tcifra2=broj%10;\n\t\trezultat=(cifra2-cifra1);\n\t\tif(rezultat<0) rezultat=-rezultat;\n\t\tif(i==1) pomocna=rezultat;\n\t\telse {\n\t\t\tpomocna=pomocna+(rezultat*pow(10, i-1));\n\t\t}\n\t\ti++;\n\n\t\tif(broj==0 || i>=br_cifara) break;\n\t\t\n\t}\n\tprintf(\"%d\", pomocna);\n\t\n\t\n\treturn 0;\n}"
    },
    "23": {
        "label": "0",
        "student3776": "#include <stdio.h>\n\nchar *kodiraj (char *s1, char *s2){\n\tchar *pocetak=s1,*p=s1,*q=s2;\n\tint slova[127]={0},i,max=0,l;\n\twhile (*p!='\\0')\n\t\tslova[(int)*p++]++;\n\tdo {\n\t\tmax=0;\n\t\tfor (i=32; i<=126; i++)\n\t\t\tif(slova[i]>max){\n\t\t\t\tl=i;\n\t\t\t\tmax=slova[i];\n\t\t\t}\n\t\tif (max==0) break;\n\t\t*s2++=(char) l;\n\t\tslova[l]=-1;\n\t} while (max!=0);\n\tfor(i=32; i<=126; i++)\n\t\tif(slova[i]!=-1)\n\t\t\t*s2++=(char) i;\n\t*s2='\\0';\n\twhile(*s1!='\\0'){\n\t\tchar *pom=q;\n\t\twhile(*s1!=*pom)\n\t\t\tpom++;\n\t\t*s1=(char)126-(pom-q);\n\t\ts1++;\n\t}\n\treturn pocetak;\n}\n\nchar *dekodiraj(char *s1, char *s2){\n\tchar *pocetak=s1,*p=s1,sifra[96],*q;\n\tint slova[127]={0},i,max,l;\n\tif(*s2=='\\0' || *s1=='\\0') return pocetak;\n\twhile(*p!='\\0')\n\t\tslova[(int)*p++]++;\n\tq=sifra;\n\tdo {\n\t\tmax=0;\n\t\tfor (i=126; i>=0; i--)\n\t\t\tif(slova[i]>max){\n\t\t\t\tmax=slova[i];\n\t\t\t\tl=i;\n\t\t\t}\n\t\tslova[l]=-1;\n\t\tif(max==0) break;\n\t\t*q++=(char) l;\n\t} while (max!=0);\n\tfor(i=32; i<127;i++)\n\t\tif(slova[i]!=-1)\n\t\t\t*q++=(char) i;\n\t*q='\\0';\n\tq=sifra;\n\ts1=pocetak;\n\twhile(*s1!='\\0'){\n\t\ti=0;\n\t\tchar *pom=q;\n\t\twhile(*s1!=*pom++)\n\t\t\ti++;\n\t\t*s1++=*(s2+i);\n\t}\n\treturn pocetak;\n}\nint main(){\n\tchar tekst[] = \"Ovo je neki testni tekst\";\nchar sifrarnik[100] = \"\";\nint i;\nkodiraj(tekst, sifrarnik);\nprintf(\"%s\\n\", tekst);\nfor (i=0; i<10; i++) printf(\"%c\", sifrarnik[i]);\ndekodiraj(tekst, sifrarnik);\nprintf(\"\\n%s\", tekst);\n\treturn 0;\n}\n",
        "student7485": "#include <stdio.h>\n\nchar *kodiraj(char *tekst, char *sifra){\n\tint ponavljanja[100]={0};\n\tchar tabela[100]={0};\n\tchar *sifra_pomoc=sifra;\n\tchar *poc=tekst;\n\tint i,j,max;\n\t//Pravi tabelu ASCII znakova\n\tfor (i=0;i<95;i++){\n\t\ttabela[i]=' '+i;\n\t}\n\ttabela[i]='\\0';\n\n\twhile (*tekst!='\\0'){\n\t\t//Broji koliko se puta koji znak ponavlja\n\t\tfor (i=0;i<95;i++){\n\t\t\tif(*tekst==tabela[i]){\n\t\t\t\tponavljanja[i]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttekst++;\n\t}\n\t//Pravi sifrarnik po broju ponavljanja i ASCII vrijednosti\n\tfor(i=0;i<95;i++){\n\t\tmax=0;\n\t\tfor(j=0;j<95;j++){\n\t\tif(ponavljanja[j]>ponavljanja[max])\n\t\tmax=j;\n\t\t}\n\n\t\t*sifra=tabela[max];\n\t\tsifra++;\n\t\tfor(j=max;j<95;j++){\n\t\t\ttabela[j]=tabela[j+1];\n\t\t\tponavljanja[j]=ponavljanja[j+1];\n\t\t}\t\n\t}\n\ttekst=poc;\n//Mijenja znakove teksta za odgovarajuce iz sifrarnika\t\nwhile(*tekst!='\\0'){\nsifra=sifra_pomoc;\n\tfor(i=0;i<95;i++,sifra++){\n\t\tif(*tekst==*sifra){\n\t\t\t*tekst=126-i;\n\t\t\tbreak;\n\t\t}\n\t}\n\ttekst++;\n  }\nreturn poc;\n}\n\nchar *dekodiraj(char*tekst, char*sifra){\n\tint i;\n\tchar *poc=tekst;\n\twhile(*tekst!='\\0'){\n\t\tfor(i=0;i<96;i++){\n\t\t\tif(*tekst==126-i){\n\t\t\t\t*tekst=sifra[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttekst++;\n\t}\n\treturn poc;\n}\n\nint main() {\n\tchar sifra[97];\n\tchar tekst[]=\"Test Test Test\\0\";\n\tprintf(\"%s\",kodiraj(tekst,sifra));\n\tprintf(\"\\n%s\", dekodiraj(tekst,sifra));\n\treturn 0;\n}\n"
    },
    "24": {
        "label": "1",
        "student8363": "#include <stdio.h>\n#include <math.h>\n\nvoid ubaci(int niz[],int n){\n\tint i,tmp,suma=0;\n\tfor(i=n-1;i>0;i--)\n\t{\n\t\tniz[2*i]=niz[i];\n\t}\n\tfor(i=0;i<2*n-1;i+=2)\n\t{\n\t\tsuma=0;\n\t\ttmp=niz[i];\n\t\twhile(tmp!=0)\n\t\t{\n\t\t\tsuma+=(tmp%10);\n\t\t\ttmp=tmp/10;\n\t\t}\n\t\tif(suma<0)suma*=-1;\n\t\tniz[i+1]=suma;\n\t}\n}\nint fib(int a)\n{\n\tint i=1,j=0;\n\twhile(i<=a)\n\t{\n\t\ti+=j;\n\t\tj=i-j;\n\t\tif(a==i)return 1;\n\t}\n\treturn 0;\n}\nint izbaci(int niz[],int n)\n{\n\tint i,j,v=n;\n\tfor(i=0;i<v-1;i++)\n\t{\n\t\tif(fib(niz[i])){\n\t\t\tfor(j=i;j<v-1;j++)\n\t\t\t{\n\t\t\t\tniz[j]=niz[j+1];\n\t\t\t}\n\t\t\ti--;v--;\n\t\t}\n\t}\n\tif(fib(niz[i]))v--;\n\treturn v;\n}\nint main(){\n\tint i,niz[2000],n;\n\tprintf(\"Unesite niz od 10 brojeva: \");\n\tfor(i=0;i<10;i++)\n\t{\n\t\tscanf(\"%d\",&niz[i]);\n\t}\n\tubaci(niz,10);\n\tn=izbaci(niz,20);\n\tprintf(\"Modificirani niz glasi:\");\n\tfor(i=0;i<n;i++){\n\t\tif(i==n-1)printf(\" %d.\",niz[i]);\n\t\telse printf(\" %d,\",niz[i]);\n\t}\n\n\treturn 0;\n}",
        "student9805": "#include <stdio.h>\n#include <math.h>\n\nvoid ubaci(int niz[],int broj){\n\tint i,SumaCifara,suma=0;\n\t/*Posto niz koji se izbacuje mora sadrzati i cifru koja je unesena i zbir cifara koja je unesena,duzina niza je duplo ve\u0107a od unesenog niza*/\n\tfor(i=broj-1;i>0;i--)\n\t{\n\t\tniz[2*i]=niz[i];\n\t}\n\tfor(i=0;i<2*broj-1;i+=2)\n\t{\n\t\tsuma=0;\n\t\tSumaCifara=niz[i];\n\t\twhile(SumaCifara!=0)\n\t\t{\n\t\t\tsuma+=(SumaCifara%10);\n\t\t\tSumaCifara=SumaCifara/10;\n\t\t}\n\t\tif(suma<0)suma*=-1;\n\t\tniz[i+1]=suma;\n\t}\n}\n/*Trazenje fibonacijevog niza*/\nint fib(int a)\n{\n\tint sljedeci=1,prethodni=0;\n\twhile(sljedeci<=a)\n\t{\n\t\tsljedeci+=prethodni;\n\t\tprethodni=sljedeci-prethodni;\n\t\tif(a==sljedeci)return 1;\n\t}\n\treturn 0;\n}\n/*izbacivanje brojeva fibonacijevog niza iz drugog niza*/\nint izbaci(int niz[],int n)\n{\n\tint i,j,v=n;\n\tfor(i=0;i<v-1;i++)\n\t{\n\t\tif(fib(niz[i])){\n\t\t\tfor(j=i;j<v-1;j++)\n\t\t\t{\n\t\t\t\tniz[j]=niz[j+1];\n\t\t\t}\n\t\t\ti--;v--;\n\t\t}\n\t}\n\tif(fib(niz[i]))v--;\n\treturn v;\n}\nint main(){\n\tint broj,niz[2000],kraj;\n\tprintf(\"Unesite niz od 10 brojeva: \");\n\tfor(broj=0;broj<10;broj++)\n\t{\n\t\tscanf(\"%d\",&niz[broj]);\n\t}\n\tubaci(niz,10);\n\tkraj=izbaci(niz,20);\n\tprintf(\"Modificirani niz glasi:\");\n\tfor(broj=0;broj<kraj;broj++){\n\t\tif(broj==kraj-1)printf(\" %d.\",niz[broj]);\n\t\telse printf(\" %d,\",niz[broj]);\n\t}\n\n\treturn 0;\n}"
    },
    "25": {
        "label": "0",
        "student7673": "#include <stdio.h>\n#include <math.h>\n\nvoid zaokruzi1(float niz[],int vel){\n    int i,b,a;float pom;\n    int znak=0;\n    for(i=0;i<vel;i++)\n    {      \n        znak=0;\n        if(niz[i]<0) {znak=1;niz[i]*=-1;}\n           \n           \n          \n           a=niz[i];\n           pom=(niz[i]-a)*100;\n           b=pom;\n          \n          if(b%10>=5)\n          {\n              b/=10;\n              b++;\n             \n          }\n          else b/=10;\n          \n          pom=(float)b/10;\n          \n          \n          \n          niz[i]=a+pom;\n          \n            if(znak==1) niz[i]*=-1;\n        \n    } \n}\n\nint suma(float n){\n\n     int m;int suma=0;\n     int znak=0;\n     \n     if(n<0){ znak=1; n*=-1;}\n     \n     m=n*10;\n     \n     while(m!=0){\n         suma+=m%10;\n         m/=10;\n     }\n     return suma;\n    \n}\n\nvoid preslozi(float niz[],int vel,int k){\n       \n       \n        int i,n,j;\n        float temp;\n        int br=0;\n         zaokruzi1(niz,vel);\n        for(i=0;i<vel;i++){\n            n=suma(niz[i]);\n           \n            if(n>=k)\n            {\n                for(j=0;j<i;j++)\n                {\n                    temp=niz[i];\n                    niz[i]=niz[j];\n                    niz[j]=temp;\n                }\n                br++;\n               \n            }\n        }\n       \n        for(i=0;i<br;i++)\n        {\n            for(j=0;j<i;j++)\n            {\n                \n                    temp=niz[i];\n                    niz[i]=niz[j];\n                    niz[j]=temp;\n                \n            }\n        }\n        \n}\n    \n\nint main() {\n    \n int i;\nfloat niz[] = { 3.2, -4.301, -123.1999, 6.1, 0.9 };\npreslozi(niz, 5, 4);\nprintf(\"Niz glasi: \");\nfor (i=0; i<5; i++)\n    printf(\"%g \", niz[i]);\n \n    return 0;\n}\n",
        "student9221": "#include <stdio.h>\n#include <math.h>\n\nvoid zaokruzi1(float* niz, int vel)\n{\n\tint i;\n\tint pom;\n\tfor(i=0; i<vel; i++) {\n\t\tpom=round(niz[i]*10);\n\t\tniz[i] = pom/10.;\n\t}\n}\n\nvoid preslozi(float* niz, int vel, int zbir)\n{\n\tint pomocni[100];\n\tint i,j;\n\tint suma;\n\tfloat temp1;\n\tint temp2;\n\tint brojac=vel-1;\n\tzaokruzi1(niz,vel);\n\tfor(i=0; i<vel; i++) {\n\t\tpomocni[i]=fabs(niz[i]*10);\n\t\tsuma=0;\n\t\twhile(pomocni[i]!=0) {\n\t\t\tsuma+=pomocni[i]%10;\n\t\t\tpomocni[i]/=10;\n\t\t}\n\t\tpomocni[i]=suma;\n\t\t//printf(\"broj %f i suma %d\\n\", niz[i], pomocni[i]);\n\t}\n\n\t\n\tfor(i=0; i<brojac; i++) {\n\t\tif(pomocni[i]<zbir) {\n\t\t\ttemp1=niz[i];\n\t\t\ttemp2=pomocni[i];\n\t\t\tfor(j=i; j<vel-1; j++) {\n\t\t\t\tniz[j]=niz[j+1];\n\t\t\t\tpomocni[j]=pomocni[j+1];\n\t\t\t}\n\t\t\tniz[vel-1]=temp1;\n\t\t\tpomocni[vel-1]=temp2;\n\t\t\tbrojac--;\n\t\t\ti--;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint i;\nfloat niz[] = { 3.2, -4.301, -123.1999, 6.1, 0.9 };\npreslozi(niz, 5, 4);\nprintf(\"Niz glasi: \");\nfor (i=0; i<5; i++)\n    printf(\"%g \", niz[i]);\n\treturn 0;\n}\n"
    },
    "26": {
        "label": "1",
        "student1266": "#include <stdio.h>\nint jelprost(int prost_br)\n    {\n    \tint i,ind=1,rezultat;\n    \tfor(i=2;i<prost_br;i++)\n    \t   {\n    \t   \tif (prost_br%i==0)\n    \t   \t   {\n    \t   \t   \tind=0;\n    \t   \t   \tbreak;\n    \t   \t   }\n    \t   }\n    \tif(ind==1)\n    \t  rezultat=1;\n    \telse\n    \t  rezultat=0;\n    \t  return rezultat;\n    }\nint daj_prost()\n    {\n    \tstatic int prost_br=2;\n    \twhile (jelprost(prost_br)==0)\n    \t      {\n    \t      \tprost_br++;\n    \t      }\n    \tprost_br++;\n    \treturn prost_br-1;\n    }\nint main() {\n    int i,A,B,prost,suma=0;\n    do{\n        printf (\"Unesite brojeve A i B: \");\n        scanf(\"%d %d\", &A, &B);\n        if (A>=B)\n            printf (\"A nije manje od B.\\n\");\n        else if(A<=1)\n            printf(\"A nije prirodan broj.\\n\");\n        else if (B<=1)\n            printf(\"B nije prirodan broj.\\n\");\n      } \n    while (A<=1 || B<=1 || A>=B);\n    \n    \n    while ((prost=daj_prost())<=A)\n          suma=0;\n    for (i=A+1;i<B;i++)\n        {\n            if(prost>=B)\n               break;\n            suma+=prost;\n            prost=daj_prost();\n        }\n    printf (\"Suma prostih brojeva izmedju %d i %d je %d.\\n\", A,B,suma);    \n     \n\treturn 0;\n}\n",
        "student5805": "#include <stdio.h>\nint JelProst(int prost_broj){\n    int i=2,ind=1,rezultat;\n    for(i=2;i<prost_broj;i++){\n        if(prost_broj%i==0){\n            ind=0;\n            break;\n        }\n    }\n    if(ind==1)\n        rezultat=1;\n    else \n        rezultat=0;\n    return rezultat;\n}\nint daj_prost(){\n    static int prost_broj=2;\n    while(JelProst(prost_broj)==0){\n        prost_broj++;\n    }\n    prost_broj++;\n    return prost_broj-1;\n}\nint main(){\n    int i,A,B,prost,suma=0;\n    do{\n        printf(\"Unesite brojeve A i B: \");\n        scanf(\"%d %d\",&A,&B);\n        if(A>=B)\n            printf(\"A nije manje od B.\\n\");\n        else if(A<1)    \n            printf(\"A nije prirodan broj.\\n\");\n        else if(B<1)\n            printf(\"B nije prirodan broj.\\n\");\n    }while(A<1 || B<1 || A>=B);\n\n    while((prost=daj_prost())<=A){\n        suma=0;\n    }\n    for(i=A+1;i<B;i++){\n        if(prost>=B)\n            break;\n        suma+=prost; \n        prost=daj_prost();\n    }\n    printf(\"Suma prostih brojeva izmedju %d i %d je %d.\\n\",A,B,suma);    \n    return 0;\n}"
    },
    "27": {
        "label": "0",
        "student6966": "#include <stdio.h>\n#include <math.h>\nint izbaci_cifre(int cijeli[], int vel1, int cifre[], int vel2) {\n\tint i = 0, j = 0, k = 0, nadeno = 0, l = 1, negativan = 0;\n\tint pom = 0;\n\tint duzine[10000] = {0};\n\tfor(i = 0; i < vel2; i++) {\n\t\tif(cifre[i] < 0 || cifre[i] > 9)\n\t\treturn 0;\n\t}\n\tfor(i = 0; i < vel2-1; i++) {\n\t\tfor(j = i+1; j < vel2; j++) {\n\t\t\tif(cifre[i] == cifre[j]) \n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(i = 0; i < vel1; i++) {\n\t\tpom = cijeli[i];\n\t\tdo {\n\t\t\tpom/= 10;\n\t\t\tduzine[i]++;\n\t\t}\n\t\twhile(pom != 0);\n\t}\n\tfor(i = 0; i < vel1; i++) {\n\t\tpom = 0;\n\t\tnegativan = 0;\n\t\tl = 1;\n\t\tfor(j = 0; j < duzine[i]; j++) {\n\t\t\tint c = cijeli[i] % 10;\n\t\t\tif(c < 0) {\n\t\t\t\tnegativan = 1;\n\t\t\t\tc = -c;\n\t\t\t}\n\t\tfor(k = 0; k < vel2; k++) {\n\t\t\tif(c == cifre[k])\n\t\t\tnadeno = 1;\n\t\t}\t\n\t\tif (nadeno == 0) {\n\t\t\tpom += c * l;\n\t\t\tl *= 10;\n\t\t}\n\t\tnadeno = 0;\n\t\tcijeli[i] /=  10;\n\t\t}\n\t\tif (negativan == 1)\n\t\tpom = -pom;\n\t\tcijeli[i] = pom;\n\t}\n\treturn 1;\n}\n\t\n\n\nint main() {\n\tint cijeli[10000] = {0}, cifre[10000] = {-1,0,1,2,3};\n\tint vel1 = 0, vel2 = 0;\n\tint i; \n\tint provjera;\n\tprintf(\"Unesite velicinu prvog niza: \");\n\tscanf(\"%d\", &vel1);\n\tprintf(\"Unesite niz cijelih brojeva: \");\n\tfor(i = 0; i < vel1; i++) {\n\t\tscanf(\"%d\", &cijeli[i]);\n\t\t\n\t}\n\tprintf(\"Unesite velicinu drugog niza: \");\n\tscanf(\"%d\", &vel2);\n\tprintf(\"Unesite niz cifara: \");\n\tfor(i = 0; i < vel2; i++) {\n\tscanf(\"%d\", &cifre[i]);\t\n\t}\n\tprovjera = izbaci_cifre(cijeli, vel1, cifre, vel2);\n\tif(provjera == 0)\n\t\tprintf(\"Pogresan vam je niz cifara!\\n\");\n\tprintf(\"Niz nakon izbacenih cifara: \");\n\tfor(i = 0; i < 10; i++) {\n\t\tprintf(\"%d \", cijeli[i]);\n\t}\n\treturn 0;\n}\n",
        "student8319": "#include <stdio.h>\n#include <stdbool.h>\n\nint obrni_broj(int x)\n{\n\tint y=0;\n\t\n\twhile(x > 0)\n\t{\n\t\ty *= 10;\n\t\ty += x%10;\n\t\tx /= 10;\n\t}\n\t\n\treturn y;\n}\n\nint izbaci_cifre(int brojevi[], int vel_br, int cifre[], int vel_cif)\n{\n\tint i, j, x, y, koef;\n\tbool izbaci;\n\t\n\tfor(i=0; i<vel_cif; i++)\n\t{\n\t\tif(cifre[i] < 0 || cifre[i] > 9) return 0;\n\t\tfor(j=i+1; j<vel_cif; j++)\n\t\t\tif(cifre[j] == cifre[i]) return 0;\n\t}\n\t\n\tfor(i=0; i<vel_br; i++)\n\t{\n\t\tif(brojevi[i] < 0) koef=-1;\n\t\telse koef = 1;\n\t\t\n\t\tx = brojevi[i]*koef;\n\t\ty = 0;\n\t\t\n\t\twhile(x > 0)\n\t\t{\n\t\t\tizbaci = false;\n\t\t\tfor(j=0; j<vel_cif; j++)\n\t\t\t\tif(cifre[j] == x%10)\n\t\t\t\t{\n\t\t\t\t\tizbaci = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\n\t\t\tif(!izbaci)\n\t\t\t{\n\t\t\t\ty *= 10;\n\t\t\t\ty += x%10;\n\t\t\t}\n\t\t\t\n\t\t\tx /= 10;\n\t\t}\n\t\t\n\t\tbrojevi[i] = obrni_broj(y)*koef;\n\t}\n\t\n\treturn 1;\n}\n\nint main() {\n\t\n\tint brojevi[] = {321,5,73};\n\tint cifre[] = {2,7,5};\n\tint i;\n\t\n\tif(izbaci_cifre(brojevi,3,cifre,3) == 1)\n\t\tfor(i=0; i<3; i++)\n\t\t\tprintf(\"%d \", brojevi[i]);\n\t\n\treturn 0;\n}\n"
    },
    "28": {
        "label": "1",
        "student1068": "#include <stdio.h>\n#include <math.h>\n\ntypedef int _bool;\n#define true 1\n#define false 0\n\n#define MAX_INPUT_ELEM 100\n#define MAX_OUTPUT_ELEM 1000\n\nint main(void)\n{\n\tint input[MAX_INPUT_ELEM], tracker[MAX_OUTPUT_ELEM];\n\tint temp_int, n, i, n_digits, counter = 0;\n\tfloat temp_input;\n\t_bool input_done = false;\n\t\n\t/* Gets the size of the array. */\n\tdo\n\t{\n\t\t/* Stores the user's input as a float, to be able to check whether the user entered a negative and/or floating-point number. */\n\t\tprintf(\"Unesite velicinu niza: \"); scanf(\"%f\", &temp_input);\n\t\ttemp_int = temp_input;\n\t\t\n\t\tif (temp_int <= 0 || temp_input - temp_int > 0)\n\t\t\tprintf(\"Neispravna velicina!\\n\");\n\t\telse\n\t\t\tn = temp_int;\n\t\t\n\t} while (temp_int <= 0 || temp_input - temp_int > 0);\n\t\n\t/* Gets the elements of the input array. */\n\tdo\n\t{\n\t\tprintf(\"Unesite clanove niza: \");\n\t\tfor (i = 0; i < n; i++)\n\t\t{\n\t\t\t/* Again, stores the user's input temporarily as a float to be able to check for invalid input. */\n\t\t\tscanf(\"%f\", &temp_input);\n\t\t\ttemp_int = temp_input;\n\t\t\t\n\t\t\tif (temp_int < 0 || temp_input - temp_int > 0)\n\t\t\t{\n\t\t\t\tprintf(\"Neispravan clan!\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinput[i] = temp_input;\n\t\t\t\tif (i == n - 1)\n\t\t\t\t\tinput_done = true;\n\t\t\t}\n\t\t}\n\t\t\n\t} while (!input_done);\n\t\n\t/* Gets the array of digits. */\n\tfor (i = 0; i < n; i++)\n\t{\n\t\ttemp_int = input[i];\n\t\tn_digits = 0;\n\t\t\n\t\tif (temp_int == 0)\n\t\t{\n\t\t\t\ttracker[counter++] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\twhile (temp_int != 0)\n\t\t\t{\n\t\t\t\tn_digits++;\n\t\t\t\ttemp_int /= 10;\n\t\t\t}\n\t\t\t\n\t\t\ttemp_int = input[i];\n\t\t\twhile (n_digits > 0)\n\t\t\t{\n\t\t\t\ttracker[counter++] = temp_int / pow(10, n_digits - 1);\n\t\t\t\ttemp_int = temp_int % (int) pow(10, n_digits - 1);\n\t\t\t\tn_digits--;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/* Prints out the tracker array. */\n\tprintf(\"Finalni niz glasi:\\n\");\n\tfor (i = 0; i < counter; i++)\n\t{\n\t\t/* Prints out the first newly encountered digit. */\n\t\tprintf(\"%d \", tracker[i]);\n\t\tn_digits = 1;\n\t\t\n\t\tif (i == counter - 1)\n\t\t\t;\n\t\telse\n\t\t{\n\t\t\t/* Checks how many times does the digit appear in consecutive order. */\n\t\t\twhile (tracker[i] == tracker[i + 1])\n\t\t\t{\n\t\t\t\tn_digits++;\n\t\t\t\ti++;\n\t\t\t\t\n\t\t\t\t/* Prevents the program from going beyond the bounds of the tracker array. */\n\t\t\t\tif (i + 1 >= counter)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Prints out the number of consecutive appearances. */\n\t\tif (i == counter - 1)\n\t\t\tprintf(\"%d\", n_digits);\n\t\telse\n\t\t\tprintf(\"%d \", n_digits);\n\t} \n\t\n\treturn 0;\n}\n",
        "student9824": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\tint velicina[100],brojac1[150];\n\tint i,n,niz,cifra,brojac2=0,prolaz=0;;\n\tfloat floatniz;\n\tdo{\n\t\tprintf(\"Unesite velicinu niza: \");\n\t\tscanf(\"%f\",&floatniz);\n\t\tniz=floatniz;\n\t\tif(niz<=0 || floatniz - niz >0){\n        printf(\"Neispravna veilcina niza!\\n\");\t\t\n\t}\n\telse\n\tn=niz;\n}while(niz<=0 || floatniz - niz>0);\n\ndo{\n\tprintf(\"Unesite clanove niza: \");\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%f\",&floatniz);\n\t\tniz=floatniz;\n\t\t\n\t\tif(niz<0 || floatniz - niz>0){\n\t\t\tprintf(\"Neispravan clan niza!\\n\");\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvelicina[i]=niz;\n\t\t\tif(i==n-1)\n\t\t\tprolaz==1;\n\t\t}\n\t}\n}while(prolaz==1);\nfor(i=0;i<n;i++){\n\tniz=velicina[i];\n\tcifra=0;\n\t\n\tif(niz==0){\n\t\tbrojac1[brojac2++]=0;\n\t}\n\telse\n\t{\n\t\twhile(niz!=0)\n\t{\n\t\tcifra++;\n\t\tniz /=10;\n\t}\n\tniz=velicina[i];\n\twhile(cifra>0){\n\t\tbrojac1[brojac2++]=niz/pow(10,cifra-1);\n\t\tniz=niz%(int)pow(10,cifra-1);\n\t\tcifra--;\n\t}\n}\n}\nprintf(\"Finalni niz glasi: \\n\");\nfor(i=0;i<brojac2;i++){\n\tprintf(\"%d \",brojac1[i]);\n\tcifra=1;\n\tif(i==brojac2-1)\t;\n\telse{\n\t\twhile(brojac1[i]==brojac1[i+1]){\n\t\t\tcifra++;i++;\n\t\t\tif(i+1>=brojac2)\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(i==brojac2-1)\n\tprintf(\"%d\",cifra);\n\telse{\n\t\tprintf(\"%d \",cifra);\n\t}\n}\nreturn 0;}\n\n\t\n\t\n   "
    },
    "29": {
        "label": "0",
        "student1200": "#include <stdio.h>\n\nint main()\n{\n\tchar znak;\n\tint crna=0, bijela=0, siva=0, crvena=0, plava=0, br=0, max=0;\n\tfloat postotak=0.0;\n\tprintf(\"Unesite vozila: \");\n\twhile(1) {\n\t\tscanf(\"%c\", &znak);\n\t\tif(znak=='k' || znak=='K') break;\n\t\telse if(znak=='c' || znak=='C'  ) {\n\t\t\tcrna++;\n\t\t\tbr++;\n\t\t\tif(crna>max) {\n\t\t\t\tmax=crna;\n\t\t\t\tznak='c';\n\t\t\t}\n\n\n\t\t} else if(znak=='b' || znak=='B') {\n\t\t\tbijela++;\n\t\t\tbr++;\n\t\t\tif(bijela>max) {\n\t\t\t\tmax=bijela;\n\t\t\t\tznak='b';\n\t\t\t}\n\t\t\t}else if(znak=='s' || znak=='S') {\n\t\t\t\tsiva++;\n\t\t\t\tbr++;\n\t\t\t\tif(siva>max) {\n\t\t\t\t\tmax=siva;\n\t\t\t\t\tznak='s';\n\t\t\t\t}\n\t\t\t} else if(znak=='v' || znak=='V') {\n\t\t\t\tcrvena++;\n\t\t\t\tbr++;\n\t\t\t\tif(crvena>max) {\n\t\t\t\t\tmax=crvena;\n\t\t\t\t\tznak='v';\n\t\t\t\t}\n\n\t\t\t} else if(znak=='p' || znak=='P') {\n\t\t\t\tplava++;\n\t\t\t\tbr++;\n\t\t\t\tif(plava>max) {\n\t\t\t\t\tmax=plava;\n\t\t\t\t\tznak='p';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse printf(\"Neispravan unos\\n\");\n\t}\n\t\t\n\t\n\t\tprintf(\"Ukupno evidentirano %d vozila.\\n\",br);\n\t\tif(max==crna) {\n\t\t\tif(br==0)\n\t\t\t\tpostotak=0.00;\n\t\t\telse \n\t\t\t\tpostotak=(crna/(float) br)*100;\n\t\t\tprintf(\"Najpopularnija boja je crna (%.2f%%).\", postotak);\n\t\t\t\n\t\t} else if(max == bijela) {\n\t\t\tif(br==0)\n\t\t\t\tpostotak=0.00;\n\t\t\telse\n\t\t\t\tpostotak=(bijela/(float) br)*100;\n\t\t\tprintf(\"Najpopularnija boja je bijela (%.2f%%).\",postotak); \n\t\t\t\n\t\t} else if(max==siva) {\n\t\t\tif(br==0)\n\t\t\t\tpostotak=0.00;\n\t\t\telse\n\t\t\t\tpostotak=(siva/(float) br)*100;\n\t\t\tprintf(\"Najpopularnija boja je siva (%.2f%%).\",postotak);\n\t\t\t\n\t\t} else if(max==crvena) {\n\t\t\tif(br==0)\n\t\t\t\tpostotak=0.00;\n\t\t\telse\n\t\t\t\tpostotak=(crvena/(float) br)*100;\n\t\t\tprintf(\"Najpopularnija boja je crvena (%.2f%%).\",postotak);\n\t\t\t\n\t\t} else if(max==plava) {\n\t\t\tif(br==0)\n\t\t\t\tpostotak=0.00;\n\t\t\telse\n\t\t\t\tpostotak=(plava/(float) br)*100;\n\t\t\tprintf(\"Najpopularnija boja je plava (%.2f%%).\",postotak);\n\t\t\t\n\t\t}\n\n\t\t\treturn 0;\n\t}\n",
        "student3288": "#include <stdio.h>\n\nint main() {\n\tint c1=0, b1=0, s1=0, v1=0, p1=0, brojac=0; \n\tdouble cr=0, bi=0, si=0, crv=0, pl=0;\n\tchar voz=0;\n\tprintf(\"Unesite vozila: \");\n\twhile(voz!='k' && voz!='K'){\n\t\tscanf(\"%c\",&voz);\n\t\tif(voz=='c' || voz=='C'){\n\t\t\tc1++;\n\t\t}\n\t\telse if(voz=='b' || voz=='B'){\n\t\tb1++;\n\t\t}\n\t\telse if(voz=='s' || voz=='S'){\n\t\ts1++;\n\t\t}\n\t\telse if(voz=='v' || voz=='V'){\n\t\tv1++;\n\t\t}\n\t\telse if(voz=='p' || voz=='P'){\n\t\tp1++;\n\t\t}\n\t\telse if(voz=='k' || voz=='K')\n\t\tbreak; \n\t\telse {\n\t\tprintf(\"Neispravan unos\\n\");\n\t\tbrojac--;\n\t\t}\n\t\t\t\tbrojac++;\n\t}\nprintf(\"Ukupno evidentirano %d vozila.\\n\", brojac);\ncr=((float)c1/brojac)*100;\nbi=((float)b1/brojac)*100;\nsi=((float)s1/brojac)*100;\ncrv=((float)v1/brojac)*100;\npl=((float)p1/brojac)*100;\nif(brojac==0){\n\tprintf(\"Najpopularnija boja je crna (0.00%%).\");\n} else if(c1>=b1 && c1>=s1 && c1>=v1 && c1>=p1){\n\tprintf(\"Najpopularnija boja je crna (%.2f%%).\",cr);\n} else if(b1>c1 && b1>=s1 && b1>=v1 && b1>=p1){\n\tprintf(\"Najpopularnija boja je bijela (%.2f%%).\",bi);\n} else if(s1>c1 && s1>b1 && s1>=v1 && s1>=p1){\n\tprintf(\"Najpopularnija boja je siva (%.2f%%).\",si);\n} else if(v1>c1 && v1>s1 && v1>s1 && v1>=p1){\n\tprintf(\"Najpopularnija boja je crvena (%.2f%%).\",crv);\n} else if(p1>c1 && p1>s1 && p1>v1 && p1>s1){\n\tprintf(\"Najpopularnija boja je plava (%.2f%%).\",pl);\n}\nreturn 0;\n}\n"
    },
    "30": {
        "label": "1",
        "student7090": "#include <stdio.h>\n#include <math.h>\n\nint main(){\nint matrica[200][200];\nint M,N;\nint ID=1;\nint a,b,c,d,p,r;\ndo{\n\tprintf(\"Unesite brojeve M i N: \");\n\tscanf(\"%d %d\",&M,&N);\n\tif(M<0 || N<0 || M>200 || N>200){\n\t\tprintf(\"Brojevi nisu u trazenom opsegu.\\n\");\n\t\tcontinue;\n\t}\n\telse break;\n}\t\nwhile (1);\nprintf(\"Unesite elemente matrice: \");\na=0;\nwhile(a<M){\n\tb=0;\n\twhile(b<N){\n\t\tscanf(\"%d\",&matrica[a][b]);\n\t\tb++;\n\t}\n\ta++;\n}\na=1;\nwhile(a<M){\n\td=0;\n\twhile(d<a){\n\t\tID=1;\n\t\tb=0;\n\t\twhile(b<N){\n\t\t\tif (matrica[a][b]!=matrica[d][b]){\n\t\t\t\tID=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tb++;\n\t\t}\n\t\tif(ID){\n\t\t\tc=a;\n\t\t\twhile(c<M-1){\n\t\t\t\tb=0;\n\t\t\t\twhile(b<N){\n\t\t\t\t\tmatrica[c][b]=matrica[c+1][b];\n\t\t\t\t\tb++;\n\t\t\t\t}\n\t\t\t\tc++;\n\t\t\t}\n\t\t\tM--;\n\t\t\ta--;\n\t\t}\n\t\td++;\n\t}\n\ta++;\n}\nb=1;\nwhile(b<N){\n\tr=0;\n\twhile(r<b){\n\t\tID=1;\n\t\tp=0;\n\t\twhile(p<M){\n\t\t\tif(matrica[p][b]!=matrica[p][r]){\n\t\t\t\tID=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\t\tif (ID){\n\t\t\ta=b;\n\t\t\twhile(a<N-1){\n\t\t\t\tc=0;\n\t\t\t\twhile(c<M){\n\t\t\t\t\tmatrica[c][a]=matrica[c][a+1];\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t\ta++;\n\t\t\t}\n\t\t\tN--;\n\t\t\tb--;\n\t\t}\n\t\tr++;\n\t}\n\tb++;\n}\nprintf(\"Nakon izbacivanja redova/kolona matrica glasi:\\n\");\na=0;\nwhile(a<M){\n\tb=0;\n\twhile(b<N){\n\t\tprintf(\"%5d\", matrica[a][b]);\n\t\tb++;\n\t}\n\tprintf(\"\\n\");\n\ta++;\n}\n\treturn 0;\n}",
        "student7496": "#include <stdio.h>\n\nint main() {\n\tint i,j, matr[100][100], M=0, N=0, isto=1, k, r, n, q;\n\tdo {\n\t\tprintf(\"Unesi brojeve M i N : \");\n\t\tscanf(\"%d\", &M);\n\t\tscanf(\"%d\", &N);\n\t\tif(M<0|| M>200|| N<0|| N>200){\n\t\t\tprintf(\"Brojevi nisu u opsegu.\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\telse break;\n\t\t}\n\t\twhile(1);\n\t\tprintf(\"Unesite elemente matrice:\");\n\t\tfor(i=0;i<M;i++)\n\t\t{\n\t\t\tfor(j=0;j<N; j++)\n\t\t\t{\n\t\t\t\tscanf(\"%d\", &matr[i][j]);\n\t\t\t}\n\t\t}\n\tfor(i=1;i<M;i++)\n\t{\n\t\tfor(r=0;r<i;r++)\n\t\t{\n\t\t\tisto=1;\n\t\t\tfor(j=0; j<N;  j++)\n\t\t\t{\n\t\t\t\tif(matr[i][j!=matr[r][j]])\n\t\t\t\t{\n\t\t\t\t\tisto=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(isto)\n\t\t\t{\n\t\t\t\tfor(k=i; k<M-1;k++){\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tfor(j==0; j<N; j++)\n\t\t\t\t{\n\t\t\t\t\tmatr[k][j]=matr[k+1][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tM--;\n\t\t\ti--;\n\t\t}\n\t}\n}\n for(j=1; j<N; j++)\n{\n\tfor(q=0;n<M;n++)\n\t{\n\t\tisto=1;\n\t\tfor(n==;n<M, n++)\n\t\t{\n\t\t\tif(matr[n][j]!=matr[n][q])\n\t\t\t{\n\t\t\t\tisto=0;\n\t\t\t\tbreak; \n\t\t\t}\n\t\t}\n\t\tif (isto)\n\t\t{\n\t\t\tfor(i=j;i<N-1;i++)\n\t\t\t{\n\t\t\t\tfor(k=0;k<M;k++)\n\t\t\t\t{\n\t\t\t\t\tmat[k][i]=matr[k][i+1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tN--;\n\t\t\tj--;\n\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"Nakon izacivanja matrica glasi:\\n\");\n\t\tfor(i=0;i<M;i++)\n\t}\n\tfor(j=0;j<N;j++)\n}\nprintf(\"%5d\", matr[i][j]);\n\t\t\t\t\t}\n\t\t\t\t\tprintf(\"\\n\");\n\t\t\t\t}\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\treturn 0;\n}\n"
    },
    "31": {
        "label": "0",
        "student3732": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#define PI 3.1415926\n\nint main() {\n\tint x,y,bruglova;\n\tint min[500],sec[500],step[500];\n\tint sek;\n\tfloat rad[500];\n\t\n\tprintf(\"Unesite broj uglova: \");\n\tscanf (\"%d\", &bruglova);\n\t\n\tfor(x=0;x<bruglova;x++){\n\t\tscanf(\"%f\",&rad[x]);\n\t}\n\tfor(x=0;x<bruglova;x++){\n\t\tsek = (int)round(rad[x]*1296000/(2*PI));\n\t\t\n\t\tsec[x] = fabs((sek%60));\n\t\tmin[x] = fabs((sek/60)%60);\n\t\tstep[x] = sek / 3600;\n\t}\n\t/* izbacivanje clanova */\n\tx=0;\n\twhile(x<bruglova){\n\t\tif(sec[x]>30){\n\t\t\ty=x;\n\t\t\twhile(y<bruglova){\n\t\t\t\tsec[y]=sec[y+1];\n\t\t\t\tmin[y]=min[y+1];\n\t\t\t\tstep[y]=step[y+1];\n\t\t\t\ty++;\n\t\t\t}\n\t\t\tbruglova--;\n\t\t\tx--;\n\t\t}\n\t\tx++;\n\t}\n\tprintf(\"Uglovi su:\");\n\tprintf(\"\\n\");\n\t/*ispis uglova*/\n\tx=0;\n\twhile(x<bruglova){\n\t\tprintf(\"%d stepeni %d minuta %d sekundi\\n\",step[x],min[x],sec[x]);\n\t\tx++;\n\t}\n\treturn 0;\n}\n",
        "student4770": "#include <stdio.h>\n#include<math.h>\n#define PI 3.1415926\n#define BROJ 500\n\nint main() {\n\tint i,brugl=0,dgr=0,min=0,sec=0;\n\tdouble niz[BROJ],usec=0;\n\tprintf(\"Unesite broj uglova: \");\n\tscanf(\"%d\", &brugl);\n\tprintf(\"Uglovi su: \");\n\tfor(i=0;i<brugl;i++){\n\t\tscanf(\"%lf\", &niz[i]);\n\t\tusec=(niz[i]*180./PI)*3600.;\n\t\tif(usec>=0){usec+=0.5;} else usec-=0.5;\n\t\tdgr=usec/3600;\n\t\tmin=(usec-dgr*3600)/60;\n\t\tsec=usec-dgr*3600-min*60;\n\t\tdgr=(int)dgr;\n\t\tmin=(int)min;\n\t\tsec=(int)sec;\n\t\tmin=fabs((int)min);\n\t\tsec=fabs((int)sec);\n\t\tif(sec>=60){ min++;\tsec=sec-60;}\n\t\tif(min>=60){ dgr++;\tmin=min-60;\t}\n\t\t\t\n\t\t\t\n\t\tif(sec>30)continue;\t\n\t\tif(sec<-30)continue;\n\t\tprintf(\"\\n%d stepeni %d minuta %d sekundi\", dgr,min,sec);\n\t\t\n\t}\n\t\n\treturn 0;\n}\n"
    },
    "32": {
        "label": "1",
        "student1120": "#include <stdio.h>\n#include <ctype.h>\t//zbog funkcije tolower cija upotreba u linijama 13 i 14 omogucava da zanemarim razliku izmedju velikih i malih slova\n\nvoid najduzi_bp(char *p1, char *p2)\n{\n\tint broj=0; //broj slova trenutnog podstringa\n\twhile(*p1!='\\0') {\n\t\tif((*p1>='a' && *p1<='z') || (*p1>='A' && *p1<='Z')) {\n\t\t\tchar *pom=p1;\n\t\t\tchar *poc=p1;//poc cuva pocetak stringa\n\t\t\tint histogram[200]= {0};\n\t\t\twhile((*pom>='a' && *pom<='z') || (*pom>='A' && *pom<='Z')) {\n\t\t\t\tif(histogram[(int)tolower(*pom)]==1) break; //prije nego sto stavim slovo u histogram provjeravam da li se to slovo vec nalazi u histogramu\n\t\t\t\telse histogram[(int)tolower(*pom)]++;\t//ako slovo nije u histogramu trenutno, smijem ga staviti\n\t\t\t\tpom++;\n\t\t\t}\n\t\t\tif((pom-p1)>broj) { //oduzimanjem ova dva pokazivaca dobijam duzinu podstringa i ako je ta duzina veca od prethodne ubacujem podstring u poslati prazni string\n\t\t\t\tbroj=pom-p1;\n\t\t\t\tchar *novi=p2;\n\t\t\t\twhile(poc<pom && *poc!='\\0') { //prvi dio uslova omedjuje podstring koji treba prepisat\n\t\t\t\t\t*novi++=*poc++;\n\t\t\t\t}\n\t\t\t\t*novi='\\0';\t//rucno postavljam kraj prosljedenog drugog stringa na '\\0'\n\t\t\t}\n\n\t\t}\n\t\tp1++;\n\t}\n}\n\n\n\n\nint main()\n{\n\tchar string[]=\"ovo je neki primjer\";\n\tchar prazni[100]= {'a'};\n\tnajduzi_bp(string, prazni);\n\tprintf(\"%s\", prazni);\n\treturn 0;\n}\n",
        "student3116": "#include <stdio.h>\n#include <ctype.h>\n\nvoid najduzi_bp(char *s1, char *s2)\n{\n\tint brojaci[128] = {0}, duzina = 0, max = 0, i = 0;\n\tchar *p = s1;\n\twhile (*p != '\\0')\n\t{\n\t\tif ((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z'))\n\t\t{\n\t\t\tduzina = 0;\n\t\t\tint a = 0;\n\t\t\tfor (a = 0; a < 128; a++) brojaci[a] = 0;\n\t\t\ti = 0;\n\t\t\tchar pomocni[1000];\n\t\t\twhile (*p != '\\0' && ((*p >= 'A' && *p <= 'Z') || (*p >= 'a' && *p <= 'z')))\n\t\t\t{\n\t\t\t\tif (brojaci[toupper(*p)] == 0) \n\t\t\t\t{ \n\t\t\t\t\tbrojaci[toupper(*p)]++;\n\t\t\t\t\tpomocni[i++] = *p;\n\t\t\t\t\tduzina++; \n\t\t\t\t\tp++;\n\t\t\t\t}\n\t\t\t\telse break;\n\t\t\t\tpomocni[i] = '\\0';\n\t\t\t\t\n\t\t\t}\n\t\t\tif (duzina > max) \n\t\t\t{ \n\t\t\t\tmax = duzina;\n\t\t\t\tchar *jbmti = pomocni;   // jbmti ce bit zz, a jbmtidvaput zz2\n\t\t\t\tchar *jbmtidvaput = s2;\n\t\t\t\twhile (*jbmti != '\\0') \n\t\t\t\t{\n\t\t\t\t\t*jbmtidvaput = *jbmti;\n\t\t\t\t\t jbmti++; jbmtidvaput++;\n\t\t\t\t}\n\t\t\t\t*jbmtidvaput = '\\0';\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tp++;\n\t}\n}\n\nint main() {\n\t    {//AT1\n        char niz[10];\n        najduzi_bp (\"Ovo je neki primjer teksta\", niz);\n        printf (\"Niz: '%s'\", niz);\n    \t}//Niz: 'primje'\n\treturn 0;\n}\n"
    },
    "33": {
        "label": "0",
        "student3077": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 1\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n\n#include <iostream>\n#include <vector>\n\nusing std::cin;\nusing std::cout;\n\n\nstd::vector<int> IzdvojiGadne(std::vector<int> v, bool a){\n\tstd::vector<int> v1;\n\tstd::vector<int> brojac(3,0);\n\tfor(int i=0; i<v.size(); i++){\n\t\tint kopija(v.at(i));\n\t\tbrojac={0,0,0};\n\t\tif(kopija==0)\n\t\t\tbrojac[0]++;\n\t\telse{\n\t\t\twhile(kopija!=0){\n\t\t\tint cifra=abs(kopija%3);\n\t\t\tkopija/=3;\n\t\t\tbrojac[cifra]++;\n\t\t\t}\n\t\t}\n\t\tif(a){\n\t\t\tif(brojac[0]%2==0 && brojac[1]%2==0 && brojac[2]%2==0)\n\t\t\t\tv1.push_back(v.at(i));\n\t\t}\n\t\telse{\n\t\t\tif((brojac[0]%2!=0 || brojac[0]==0) && (brojac[1]%2!=0 || brojac[1]==0) && (brojac[2]%2!=0 || brojac[2]==0))\n\t\t\t\tv1.push_back(v.at(i));\n\t\t}\n\t}\n\tfor(int i=0; i<v1.size(); i++){\n\t\tfor(int j=i+1; j<v1.size(); j++){\n\t\t\tif(i<v1.size()-1 && v1[i]==v1[j]) {\n\t\t\t\tv1.erase(v1.begin()+j);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\treturn v1;\n}\n\n\nint main ()\n{\n\tcout<<\"Unesite brojeve (0 za prekid unosa): \";\n\tstd::vector<int> v;\n\tfor(;;){\n\t\tint i(0);\n\t\tint a;\n\t\tcin>>a;\n\t\tif(a==0) break;\n\t\tv.push_back(a);\n\t\ti++;\n\t}\n\t\n\tstd::vector<int> v2=IzdvojiGadne(v,true);\n\tcout<<\"Opaki: \";\n\tfor(int i=0; i<v2.size(); i++){\n\t\tcout<<v2[i]<<\" \";\n\t}\n\tcout<<std::endl;\n\tv2=IzdvojiGadne(v,false);\n\tcout<<\"Odvratni: \";\n\tfor(int i=0; i<v2.size(); i++){\n\t\tcout<<v2[i]<<\" \";\n\t}\n\treturn 0;\n}",
        "student7457": "#include <iostream>\n#include <vector>\n#include <string>\n#include <limits>\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing std::vector;\nusing std::string;\n\nvector<int> IzdvojiGadne(vector<int> brojevi, bool gadan);\nbool DaLiJeGadan(int broj);\nstring DecimalToTernaryReversed(int dec);\nbool daLiJeBrojCifaraParan(string broj, char cifra);\nbool daLiJeOpak(int broj);\nbool daLiPostojiUVektoru(vector<int> vektor, int broj);\nvoid ispisiVektor(vector<int> vektor);\n\nint main() {\n    cout << \"Unesite brojeve (0 za prekid unosa): \";\n    vector<int> brojevi(0);\n    int broj;\n    do {\n        cin >> broj;\n        if(broj != 0) brojevi.push_back(broj);\n    } while(broj != 0);\n\n    cout << \"Opaki: \";\n    ispisiVektor(IzdvojiGadne(brojevi, true));\n    cout << \"Odvratni: \";\n    ispisiVektor(IzdvojiGadne(brojevi, false));\n\n    return 0;\n}\n\nvector<int> IzdvojiGadne(vector<int> brojevi, bool gadan) {\n    vector<int> rezultat(0);\n    for(int broj : brojevi) {\n        if(DaLiJeGadan(broj) && (daLiJeOpak(broj) == gadan) && !daLiPostojiUVektoru(rezultat, broj))\n            rezultat.push_back(broj);\n    }\n    return rezultat;\n}\nbool DaLiJeGadan(int broj) {\n    /*\n    ako je broj gadan vraca true, ako nije false\n    gadan je ako mu je svaka cifra parna ili neparna\n    //*/\n    //Ovaj zadatak se moze uraditi i bez ove funkcije\n    //ali sam je napravio prije nego sto sam shvatio da ne treba\n    //tako da cu je koristiti WOoo\n    string stringBroj(DecimalToTernaryReversed(broj));\n    bool daLiJeKolicinaCifaraParna;\n    //prolazi kroz cifre\n    //pri pronalasku prve cifre koja se nalazi u broju\n    //postavlja parnost cifara na to da li ima paran ili neparan broj te cifre\n    for(char cifra = '0'; cifra < '3'; cifra++) {\n        try {\n            daLiJeKolicinaCifaraParna = daLiJeBrojCifaraParan(stringBroj, cifra);\n            break;\n        } catch(int broj) {\n            continue;\n        }\n    }\n    for(char cifra = '0'; cifra < '3'; cifra++) {\n        try {\n            if(daLiJeKolicinaCifaraParna != daLiJeBrojCifaraParan(stringBroj, cifra))\n                /*\n                kako bi trebala izgledati tablica za ovaj uslov\n                    0 0 | 0\n                    0 1 | 1\n                    1 0 | 1\n                    1 1 | 0\n                //*/\n                return false;\n        } catch(int broj) {\n            continue;\n        }\n    }\n    return true;\n}\nstring DecimalToTernaryReversed(int dec) {\n    if(dec==0)  return \"0\";\n    string rezultat(\"\");\n    while(dec!=0) {\n        rezultat += std::to_string(dec%3);\n        dec/=3;\n    }\n    return rezultat;\n}\nbool daLiJeBrojCifaraParan(string broj, char cifra) {\n    int brojac(0);\n    while(0 < broj.length()) {\n        if(broj.back() == cifra)\n            brojac++;\n        broj.pop_back();\n    }\n    if (brojac == 0) throw 0;\n    return !(brojac%2);\n}\nbool daLiJeOpak(int broj) {\n    //Opaki brojevi su oni koji imaju\n    //paran broj cifara;\n    string stringBroj(DecimalToTernaryReversed(broj));\n    for(char cifra = '0'; cifra < '3'; cifra++) {\n        try {\n            return daLiJeBrojCifaraParan(stringBroj, cifra);\n        } catch(int broj) {\n            continue;\n        }\n    }\n}\nbool daLiPostojiUVektoru(vector<int> vektor, int broj) {\n    for(int brojUVektoru : vektor) {\n        if(broj == brojUVektoru)\n            return true;\n    }\n    return false;\n}\nvoid ispisiVektor(vector<int> vektor) {\n    for(int a : vektor)\n        cout << a << \" \";\n    cout << endl;\n}\n"
    },
    "34": {
        "label": "1",
        "student2553": "#include <stdio.h>\nint je_li_slovo(char c){\n\tif((c>=65 && c<=90) ||( c>=97 && c<=122))return 1;\n\t\n\treturn 0;\n}\nint je_li_isto(char c1,char c2,int caps){\n\tint rez=0;\n\tif(caps==0){\n\t\tif(c1>='A' && c1<='Z')c1+='a'-'A';\n\t\tif(c2>='A' && c2<='Z')c2+='a'-'A';\n\t\tif (c1==c2)rez= 1;\n\t\telse rez= 0;\n\t\t\n\t}\n\telse{\n\t\tif (c1==c2)rez=1;\n\t\t\telse rez= 0;\n\t}\n\treturn rez;\n}\nint prebroj(char *s,char *s1,int vel){\n\tchar  *q,*temp;\n\tint i,ponavljanja=0,istarijec=1;\n\tq=s1;\n\ttemp=s;\n\twhile(*s!='\\0'){\n\t\twhile(je_li_slovo(*s)==0 && *s!='\\0')s++;\n\t\tistarijec=1;\n\t\tif(s==temp){\n\t\t\tfor(i=0;i<vel;i++){\n\t\t\t\tif(je_li_isto(*q,*s,0)==0){ istarijec=0; break;}\n\t\t\t\tif(*s=='\\0') {istarijec=0; break;}\n\t\t\t\tq++;\n\t\t\t\ts++;\n\t\t\t}\n\t\t\tif(je_li_slovo(*s)==1)istarijec=0;\n\t\t}\n\t\telse{\n\t\t\tif(je_li_slovo(*(s-1))==0){\n\t\t\t\t\n\t\t\t\tfor(i=0;i<vel;i++){\n\t\t\t\t\tif(je_li_isto(*q,*s,0)==0){ istarijec=0;break;}\n\t\t\t\t\tif(*s=='\\0') {istarijec=0; break;}\n\t\t\t\t\tq++;\n\t\t\t\t\ts++;\n\t\t\t\t}\n\t\t\t\tif(je_li_slovo(*s)==1)istarijec=0;\n\t\t\t}else istarijec=0;\n\t\t}\n\t\tif(istarijec==1){\n\t\t\tponavljanja++;\n\t\t}\n\t\tq=s1;\n\t\twhile(je_li_slovo(*s)==1 && *s!='\\0')s++;\n\t\t\n\t}\n\tq=s1;\n\ts=temp;\n\treturn ponavljanja;\n}\nvoid izbaci(char *s11,char *rijec,int duzina){\n\tchar *p,*a;\n\tchar *sa;\n\tchar *x;\n\tint i,isto;\n\tx=s11;\n\n\tisto=1;\n\tp=rijec;\n\twhile(*s11!='\\0')s11++;\n\tif(*s11!='\\0')s11--;\t\n\tfor(i=0;i<duzina-1;i++){\n\t\trijec++;\n\t}\n\tp=rijec;\n\n\twhile(s11!=x && s11!='\\0'){\n\t\t\n\t\twhile(je_li_slovo(*s11)==0 && s11!=x){s11--;}\n\t\tisto=1;\n\t\t\n\t\tsa=s11;\n\t\tp=rijec;\n\n\t\tfor(i=0;i<duzina;i++){\n\t\t\tif(je_li_isto(*s11,*p,0)==0){\n\t\t\t\tisto=0;\n\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(s11!=x){\n\t\t\t\t\t\tif(je_li_slovo(*(s11-1))==1 && i==(duzina-1)){\n\t\t\t\t\t\tisto=0;\n\t\t\t\t\t\tbreak;}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tif(s11!=x) s11--;\n\t\t\tp--;\n\t\t}\n\t\t\n\t\ts11=sa;\n\t\n\t\tp=rijec;\n\n\t\tif(isto==1){\n\t\t\tfor(i=0;i<duzina;i++){\n\t\t\t\t\n\t\t\t\ta=s11;\n\t\t\t\t\n\t\t\t\twhile(*(s11+1)!='\\0'){\n\t\t\t\t\t*s11=*(s11+1);\n\t\t\t\t\ts11++;\n\t\t\t\t}\n\t\t\t\t*s11='\\0';\n\t\t\t\ts11=a;\n\t\t\tif(s11!=x)s11--;\n\t\t\t}\n\t\t}\n\t\t\n\t\tp=rijec;\n\t\twhile(je_li_slovo(*s11)==1 && s11!=x ){s11--;}\n\n\t\t\n\t}\n}\n\nchar* izbaci_najcescu(char* s){\n\tint a,duzina=0,najcescaduzina=0,max=0;\n\tchar *pok=s,*najcescapokazivac=s,*temp=s,*save=s;\n\t\n\tmax=0;\n\twhile(*s!='\\0'){\n\t\twhile(je_li_slovo(*s)==0 && *s!='\\0')s++;\n\t\t\n\t\tduzina=0;\n\t\ttemp=s;\n\t\t\n\t\twhile(je_li_slovo(*s)==1 && *s!='\\0'){\n\t\t\tduzina++;\n\t\t\ts++;\n\t\t}\n\t\ts=temp;\n\n\t\tpok=s;\n\t\ttemp=save;\n\t\ta=prebroj(temp,pok,duzina);\n\n\t\ttemp=save;\n\t\n\t\tif(a>max){\n\t\t\tmax=a;\n\t\t\tnajcescaduzina=duzina;\n\t\t\tnajcescapokazivac=s;\n\t\t}\n\t\t\n\t\twhile(je_li_slovo(*s)==1 && *s!='\\0')s++;\n\t\n\t\t\n\t\t\n\t}\n\ts=save;\n\n\tduzina=0;\n\ttemp=najcescapokazivac;\n\twhile(je_li_slovo(*temp)==1 && *temp!='\\0'){duzina++; temp++;}\n\tizbaci(s,najcescapokazivac,najcescaduzina);\n\ts=save;\n\t\n\treturn s;\n}\nint main() {\n\tchar t[]=\"Koristio sam auto-stop da dodjem do znaka stop ali prije stopa sam otvorio dekstop kompjutera stop\";\n\n\tizbaci_najcescu(t);\n\n\tprintf(\"\\n\");\n\n\tprintf(\"%s\",t);\n\n\treturn 0;\n}\n",
        "student6877": "#include <stdio.h>\nvoid unesi (char niz[] , int velicina){\n\tchar znak;\n\tint i=0;\n\tznak = getchar();\n\tif (znak=='\\n') znak= getchar();\n\twhile(i<velicina-1 && znak!='\\n'){\n\t\tniz[i]=znak;\n\t\ti++;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n}\nint uporedi (char *string1, char *string2, int velicina1, int velicina2){\n\tchar *p1=string1;\n\tchar *p2=string2;\n\tint i;\n\tif (velicina1!=velicina2) return 0;\n\telse {\n\t\tfor(i=0;i<velicina1-1;i++)\n\t\t{\n\t\t\tif(*(p1+i)>='A' && *(p1+i)<='Z'){\n\t\t\tif(*(p1+i)+32!=*(p2+i)) return 0;\n\t\t    continue;\n\t\t\t}\n\t\t    if(*(p2+i)>='A' && *(p2+i)<='Z'){\n\t\t    if(*(p2+i)!=*(p2+i)+32) return 0;\n\t\t    continue;\n\t\t    }\n\t\tif(*(p1+i)!=*(p2+i)) return 0;\n\t\t}\n\t\t\n\t}\n\treturn 1;\n}\nchar* izbaci_najcescu(char *s){\n\tchar*p , *pokazivac[100];\n\tint i=0,j=0,brojac_slova[100]={0},brojac_rijeci=1,brojac_najcesce[100]={0};\n\tp=s;\n\tpokazivac[j]=p;\n\tif (*p!='\\0') return NULL;\n\twhile(*p!='\\0'){\n\t\tif ((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127)){\n\t\t\tbrojac_rijeci++;\n\t\t\tdo{\n\t\t\t\tp++;\n\t\t\t}while((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127));\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tpokazivac[j]=p;\n\t\t\tcontinue;\n\t\t}\n\t\tbrojac_slova[i]++;\n\t\tp++;\n\t}\n\tfor(i=0;i<brojac_rijeci-1;i++){\n\t\tfor(j=i+1;j<brojac_rijeci;j++){\n\t\t\tif(uporedi(pokazivac[i],pokazivac[j],brojac_slova[i],brojac_slova[j]))\n\t\t\tbrojac_najcesce[i]++;\n\t\t}\n\t}\n\tint max;\n\tmax=0;\n\tfor(i=0;i<brojac_rijeci;i++){\n\t\tif(brojac_najcesce[i]>brojac_najcesce[max]) max=i; \n\t}\n\tfor(i=0;i<brojac_rijeci;i++){\n\t\tif(max==i) i++;\n\t\tif(uporedi(pokazivac[max],pokazivac[i],brojac_slova[max],brojac_slova[i])){\n\t\t\tp=pokazivac[i];\n\t\t\tif(i==brojac_rijeci-1){\n\t\t\t\t*p='\\0';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile(*p!='\\0'){\n\t\t\t\t*p=*p(brojac_slova[i]);\n\t\t\t\tif(*p=='\\0') break;\n\t\t\t\tp++;\n\t\t\t}\n\t\t\tdo{\n\t\t\t\tpokazivac[i]++;\n\t\t\t}while((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127));\n\t\t\tfor(j=i+1;j<brojac_rijeci;j++){\n\t\t\t\tpokazivac[j]-=brojac_slova[i];\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\tp=pokazivac[max];\n\twhile (*p!='\\0') {\n\t\t*p=*p(brojac_slova[max]);\n\t\tif(*p=='\\0') break;\n\t\tp++;\n\t}\n\t\t\n\treturn s;\t\n\t\n\t\n}\n\t\n\t\n\n\n\nint main() {\n\tchar tekst[]=\"asd ddd asd  ddd asd trzhrth\";\n\tprintf(\"%s\",izbaci_najcescu(tekst));\n\t\n\treturn 0;\n}\n"
    },
    "35": {
        "label": "0",
        "student4082": "#include <stdio.h>\n#include <limits.h>\n\nvoid unesi(char niz[], int velicina){\n\tchar znak = getchar();\n\tint i = 0;\n\tif(znak == '\\n') znak = getchar();\n\twhile(i < velicina-1 && znak != '\\n'){\n\t\tniz[i] = znak;\n\t\ti++;\n\t\tznak = getchar();\n\t}\n\tniz[i] = '\\0';\n}\n\nint _strlen(char *s){\n\tint len = 0;\n\tif(s[0] == '\\0') return len;\n\twhile(s[++len] != '\\0');\n\treturn len;\n}\n\nint _isdigit(char c){\n\tif('0' <= c && c <= '9') return 1;\n\telse return 0;\n}\n\n/* Pretpostavka da se tekst sastoji od znakov asci [32, 126] */\nchar* kodiraj(char *text, char *table){\n\tint len = _strlen(text);\n\tchar count[256];\n\tchar taken[256];\n\tchar pos[256];\n\tint index = 1, current = 0;\n\tint i;\n\tfor(i = 0; i < 256; i++){\n\t\tpos[i] = 0;\n\t\tcount[i] = 0;\n\t\ttaken[i] = 0;\n\t}\n\t\n\tfor(i = 0; i < len; i++){\n\t\tcount[text[i]]++;\n\t}\n\t\n\twhile(index > -1){\n\t\tindex = -1;\n\t\tint max = 0;\n\t\tfor(i = 0; i < 256; i++){\n\t\t\tif(!taken[i] && count[i] > max){\n\t\t\t\tmax = count[i];\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(index > -1){\n\t\t\ttable[current++] = index;\n\t\t\ttaken[index] = 1;\n\t\t}\n\t}\n\t\n\t\n\ttable[current] = '\\0';\n\t\n\tfor(i = 32; i < 127; i++)\n\t\tif(!taken[i]) table[current++] = i;\n\t\t\n\ttable[current] = '\\0';\n\t\n\tfor(i = 0; i < current; i++)\n\t\tpos[table[i]] = i;\n\t\t\n\tfor(i = 0; i < len; i++){\n\t\ttext[i] = (char)(126 - pos[text[i]]);\n\t}\n\t\n\t\n\treturn text;\n}\n\nchar* dekodiraj(char *text, char *table){\n\tint textlen = _strlen(text), tablelen = _strlen(table);\n\tchar pos[256];\n\tint i;\n\tfor(i = 0; i < tablelen; i++) pos[table[i]] = i;\n\tfor(i = 0; i < textlen; i++) text[i] = table[-text[i] + 126];\n\t\n\treturn text;\n}\n\n\n\nint main() {\n\tchar tekst[] = \"LLMLNLNMONM\";\n\tchar sifrarnik[100] = \"\";\n\tint i;\n\tkodiraj(tekst, sifrarnik);\n\tprintf(\"%s\", tekst);\n\tfor (i=0; i<10; i++) printf(\"%c\", sifrarnik[i]);\n\tdekodiraj(tekst, sifrarnik);\n\tprintf(\"%s\", tekst);\n\n\treturn 0;\n}\n",
        "student7485": "#include <stdio.h>\n\nchar *kodiraj(char *tekst, char *sifra){\n\tint ponavljanja[100]={0};\n\tchar tabela[100]={0};\n\tchar *sifra_pomoc=sifra;\n\tchar *poc=tekst;\n\tint i,j,max;\n\t//Pravi tabelu ASCII znakova\n\tfor (i=0;i<95;i++){\n\t\ttabela[i]=' '+i;\n\t}\n\ttabela[i]='\\0';\n\n\twhile (*tekst!='\\0'){\n\t\t//Broji koliko se puta koji znak ponavlja\n\t\tfor (i=0;i<95;i++){\n\t\t\tif(*tekst==tabela[i]){\n\t\t\t\tponavljanja[i]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttekst++;\n\t}\n\t//Pravi sifrarnik po broju ponavljanja i ASCII vrijednosti\n\tfor(i=0;i<95;i++){\n\t\tmax=0;\n\t\tfor(j=0;j<95;j++){\n\t\tif(ponavljanja[j]>ponavljanja[max])\n\t\tmax=j;\n\t\t}\n\n\t\t*sifra=tabela[max];\n\t\tsifra++;\n\t\tfor(j=max;j<95;j++){\n\t\t\ttabela[j]=tabela[j+1];\n\t\t\tponavljanja[j]=ponavljanja[j+1];\n\t\t}\t\n\t}\n\ttekst=poc;\n//Mijenja znakove teksta za odgovarajuce iz sifrarnika\t\nwhile(*tekst!='\\0'){\nsifra=sifra_pomoc;\n\tfor(i=0;i<95;i++,sifra++){\n\t\tif(*tekst==*sifra){\n\t\t\t*tekst=126-i;\n\t\t\tbreak;\n\t\t}\n\t}\n\ttekst++;\n  }\nreturn poc;\n}\n\nchar *dekodiraj(char*tekst, char*sifra){\n\tint i;\n\tchar *poc=tekst;\n\twhile(*tekst!='\\0'){\n\t\tfor(i=0;i<96;i++){\n\t\t\tif(*tekst==126-i){\n\t\t\t\t*tekst=sifra[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttekst++;\n\t}\n\treturn poc;\n}\n\nint main() {\n\tchar sifra[97];\n\tchar tekst[]=\"Test Test Test\\0\";\n\tprintf(\"%s\",kodiraj(tekst,sifra));\n\tprintf(\"\\n%s\", dekodiraj(tekst,sifra));\n\treturn 0;\n}\n"
    },
    "36": {
        "label": "1",
        "student6877": "#include <stdio.h>\n#include <math.h>\nint main() {\nint i,j,M,N,teplicova,cirkularna;\ndouble mat[100][100]; \nprintf(\"Unesite M i N: \");\n    do\n    {\n        \n        scanf(\"%d %d\",&M,&N);\n        if(M<=0 || M>100 || N<=0 || N>100) { printf(\"Pogresan unos!\\n\"); printf(\"Unesite M i N: \"); }\n    } while (M<0 || M>100 || N<0 || N>100); \n    printf(\"Unesite elemente matrice: \");\n    for(i=0;i<M;i++)\n    {\n        for(j=0;j<N;j++)\n        {\n            scanf(\"%lf\",&mat[i][j]);\n        }\n    }\n    teplicova=1;\n    for(i=0;i<M-1;i++)\n    {\n        for(j=0;j<N-1;j++)\n        {\n        if(mat[i][j]!=mat[i+1][j+1]) { teplicova=0; break;}\n        }\n    }\n    cirkularna=1;\n    for(i=0;i<M-1;i++)\n    {\n        for(j=0;j<N-1;j++)\n        {\n            if(mat[i][j]!=mat[i+1][j+1] || mat[i][N-1]!=mat[i+1][0]) { cirkularna=0; break; }\n        }\n    }\n    if(teplicova==1&&cirkularna==0) printf(\"Matrica je Teplicova\");\n    else if(cirkularna==1&&teplicova==1) printf(\"Matrica je cirkularna\");\n    else printf(\"Matrica nije ni cirkularna ni Teplicova\");\n    return 0;\n}\n",
        "student8357": "#include <stdio.h>\n#include <math.h>\nint main() {\n\tdouble mat[100][100];\n\tint i,j,M,N,cirk,tep;\n\tprintf(\"Unesite M i N: \");\n\tdo{\n\t\n\t\tscanf(\"%d %d\",&M,&N);\n\t\tif(M<=0||N<=0||N>100||M>100){\n\t\t\tprintf(\"Pogresan unos!\");\n\t\t    printf(\"\\nUnesite M i N: \");\n\t\t}\n\t}\n\twhile(M<0||N<0||N>100||M>100);\n\tprintf(\"Unesite elemente matrice:\");\n\tfor(i=0;i<M;i++){\n\t\tfor(j=0;j<N;j++){\n\t\t\tscanf(\"%lf\",&mat[i][j]);\n\t\t}\n\t}\n\ttep=1;\n\tfor(i=0;i<M-1;i++){\n\t\tfor(j=0;j<N-1;j++){\n\t\t\tif(mat[i][j]!=mat[i+1][j+1]){\n\t\t\t\ttep=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}}\n\tcirk=1;\n\tfor(i=0;i<M-1;i++){\n\t\tfor(j=0;j<N-1;j++){\n\t\t\tif(mat[i][j]!=mat[i+1][j+1]||mat[i][N-1]!=mat[i+1][0]){\n\t\t\t\tcirk=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(tep==1&&cirk==0) printf(\" Matrica je Teplicova\");\n\telse if(tep==1&&cirk==1) printf(\" Matrica je cirkularna\");\n\telse printf(\" Matrica nije ni cirkularna ni Teplicova\");\n\t\n\treturn 0;\n}\n"
    },
    "37": {
        "label": "0",
        "student3776": "#include <stdio.h>\n\nint  UkloniDuple(int *niz,int size){\n    int i,j,k;\n    for(i=0;i<size;i++){\n        for(j=i+1;j<size;){\n            if(niz[j]==niz[i]){\n                for(k=j;k<size-1;k++){\n                    niz[k]=niz[k+1];\n                }\n                size--;\n            }else\n            j++;\n        }\n    }\n return  size;\n}\n\n\nint bacaj(int *pro,int n,int sta){\n\tint i,j;\n\t\tfor(i=0;i<n;i++){\n\t\tif(pro[i]==sta){\n\t\t\tfor(j=i;j<n-1;j++){\n\t\t\t\tpro[j]=pro[j+1];\n\t\t\t}n--;\n\t\t\ti--;}\n\t\t}\n\t\treturn n;\n}\n\nvoid BubbleSort(int a[], int array_size)\n {\n int i, j, temp;\n for (i = 0; i < (array_size - 1); ++i)\n {\n      for (j = 0; j < array_size - 1 - i; ++j )\n      {\n           if (a[j] > a[j+1])\n           {\n                temp = a[j+1];\n                a[j+1] = a[j];\n                a[j] = temp;\n           }\n      }\n }\n }  \n \nint razliciti(int *a,int vel){\n\tint i,br=0;\n\tBubbleSort(a,vel);\n\tfor(i=0;i<vel;i++){\n\t\tif(a[i]==a[i+1]) br++;\n\t}\n\tif(br==0) return 1;\n\telse return 0;\n}\n\nint stand(int *a,int vel ){\nint max_count = 0,pom[100]={0},h=vel,i,j;\nfor(i=0;i<vel;i++){\n\tpom[i]=a[i];\n}\nif(razliciti(a,vel)){\n\tint min=9999;\n\tfor(i=0;i<h;i++){\n\t    if(pom[i]<min) min=pom[i];\n\t}\n\treturn min;\n}\nif(razliciti(a,vel)==0){\nfor (i=0;i<vel;i++)\n{\n   int count=1;\n   for ( j=i+1;j<vel;j++)\n       if (a[i]==a[j])\n           count++;\n   if (count>max_count)\n      max_count = count;\n}\n\nfor ( i=0;i<vel;i++)\n{\n   int count=1;\n   for (j=i+1;j<vel;j++)\n       if (a[i]==a[j])\n           count++;\n   if (count==max_count)\n       return a[i];\n}\n}\n}\n\n\n\nint ucestanost_max(int *arr,int size){\n    int  freq[100],temp[100]={0},k=0,ar[100]={0},velko=size,aa[100]={0},h=size,pom[100]={0},o=0,bb[100]={0},bbel=size,er=0,xxx[100]={0},xi=size;\n    int  i, j, count,vel=size;\n    for(i=0;i<size;i++){\n    \tar[i]=arr[i];\n\t}\n\t for(i=0;i<size;i++){\n    \txxx[i]=arr[i];\n\t}\n\t  for(i=0;i<size;i++){\n    \taa[i]=arr[i];\n\t}\n\t for(i=0;i<size;i++){\n    \tbb[i]=arr[i];\n\t}\n    for(i=0; i<size; i++)\n    {\n        freq[i] = -1;\n    }\n    for(i=0; i<size; i++)\n    {\n        count = 1;\n        for(j=i+1; j<size; j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n                freq[j] = 0;\n            }\n        }\n        if(freq[i] != 0)\n        {\n            freq[i] = count;\n        }\n    }\n    for(i=0; i<size; i++)\n    {\n        if(freq[i] >1)\n        {\n            temp[k++]=arr[i];\n            pom[o++]=freq[i];\n        }\n    }\n    for(i=0;i<k;i++){\n    \tvel=bacaj(arr,vel,temp[i]);\n\t}\n\t \n\tint min=999,hist[100]={0},histvel=0;\n\tint novo=o;\n\to=UkloniDuple(pom,o);\n\tif(vel==0  && o==novo){\t\n\treturn stand(ar,velko);\n\t}\n\n\tif(vel==0  && novo!=o){\t\n\t\t\t\tfor(i=0;i<h;i++){\n\t\t\tif(aa[i]<min) min=aa[i];\n\t\t}\n\t\treturn min;\n\t}\n\tif(vel!=0 ){\n\t\treturn stand(xxx,xi);\n\t}\n}\n\n\nint max(int matrica[100][100], int visina, int sirina){\n\tint i,j,tempi[100]={0},k=0;\n\tfor(i=0;i<visina;i++){\n\t\tfor(j=0;j<sirina;j++){\n\t\t\t    tempi[k++]=matrica[i][j];\n\t\t}\n\t}\nreturn ucestanost_max(tempi,k);\n}\n\nint brisi_kol(int a[100][100],int V,int S,int koja){\n    int i,j,t;\n\tfor(t=koja,j=koja+1;t<S-koja-1,j<S;t++,j++){\n        for(i=0;i<V;i++){\n            a[i][t]=a[i][j];\n        }\n    }\nS--;\nreturn S;\n}\n\nint izbaci_kolone(int matrica[100][100],int visina,int sirina,int N){\n    int i,j;\n    for(i=0;i<visina;i++){\n        for(j=0;j<sirina;j++){\n            if(matrica[i][j]==N){\n                sirina=brisi_kol(matrica,visina,sirina,j);\n            }\n        }\n    }\n    return sirina;\n}\n\nvoid IspisiMat(int mat[100][100],int v,int s){\n    int i,j;\n    for(i=0;i<v;i++){\n        for(j=0;j<s;j++){\n            printf(\"%5d\",mat[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\n\nint main() {\n  \nint v,s,i,j,mat[100][100]={{0}};\nprintf(\"Unesite sirinu i visinu matrice: \");\nscanf(\"%i %i\",&s,&v);\nfor(i=0;i<v;i++){\n    if(v-1!=i){\n    printf(\"Unesite elemente %i. reda: \",i+1);\n    for(j=0;j<s;j++){\n        scanf(\"%i\",&mat[i][j]);\n    }\n    }\n     if(v-1==i){\n    printf(\"Unesite elemente %i. reda: \\n\",i+1);\n    for(j=0;j<s;j++){\n        scanf(\"%i\",&mat[i][j]);\n    }\n    }\n}\nint p=0;\nwhile(s!=0){\n  \n    s=izbaci_kolone(mat,v,s,max(mat,v,s));\n    if(s!=0){\n        if(p==0){\n    printf(\"Nakon %i. prolaza matrica glasi:\\n\",p+1);\n     IspisiMat(mat,v,s);\n        }\n        \n        if(p!=0){\n    printf(\"\\nNakon %i. prolaza matrica glasi:\\n\",p+1);\n     IspisiMat(mat,v,s);\n        }\n        \n    }\n    if(s==0){\n        printf(\"\\nNakon %d. prolaza matrica je prazna!\",p+1);\n    }\n    p++;\n}\n     return 0;\n}\n",
        "student9993": "#include <stdio.h>\n\nint max(int mat[100][100], int visina, int sirina){\n    int dimenz, i, j;\n    int el;\n    int counter=0;\n    int niz[10000];\n    int tempel, tempcount;\n    dimenz=sirina*visina;\n    \n    /* Matrix to array */\n    \n    for (i=0; i<visina; i++){\n        for(j=0; j<sirina; j++){\n            niz[sirina*i+j]=mat[i][j];\n        }\n    }\n    \n    for (i=0; i<dimenz; i++){\n        tempel=niz[i];\n        tempcount=0;\n        for(j=0; j<dimenz; j++){\n            if(niz[j]==tempel)\n                tempcount++;}\n                \n                if(tempcount>counter){\n                    el=tempel;\n                    counter=tempcount;\n                }\n                else if(tempcount==counter){\n                    if(el>tempel)\n                    el=tempel;}\n        }\n        return el;\n    }\nint izbaci_kolone (int mat[100][100],int visina, int sirina, int max){\n    int j, i, a, b;\n    for(i=0; i<visina; i++){\n        for(j=0; j<sirina; j++){\n            if(mat[i][j]==max){\n                for(a=j; a<sirina; a++){\n                    for(b=i; b<visina; b++){\n                        mat[b][a]=mat[b][a+1];\n                    }\n                }\n                sirina=sirina-1;\n                j=j-1;\n            }\n        }\n    }\n    return sirina;\n}\n\nint main(){\n    int matrica[100][100];\n    int i, j, x, y, z;\n    printf (\"Unesite sirinu i visinu matrice: \");\n    scanf (\"%d %d\", &y, &x);\n    for(i=0; i<x; i++){\n        printf (\"Unesite elemente %d. reda: \", i+1);\n        for(j=0; j<y; j++){\n            scanf(\"%d\", &matrica[i][j]);\n    }\n    }\n    z=1;\n    while(y!=0){\n        y=izbaci_kolone(matrica, x, y, max(matrica, x, y));\n        if(y==0){\n            printf (\"\\nNakon %d. prolaza matrica je prazna!\", z);\n            break;\n        }\n        printf (\"\\nNakon %d. prolaza matrica glasi:\\n\", z);\n        for(i=0; i<x; i++){\n            for (j=0; j<y; j++){\n                printf (\"%5d\", matrica[i][j]);\n            }\n            printf (\"\\n\");\n        }\n        printf (\"\\n\");\n        z++;\n        }\n        return 0;\n    }\n   "
    },
    "38": {
        "label": "1",
        "student5939": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 3\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Berina Cocalic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: bcocalic1@etf.unsa.ba\n\t\n*/\n\n#include <iostream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n#include <type_traits>\n#include <deque>\n#include <iomanip>\n\n// broj ne smije pocinjati nulom\nint SumaCifara(long long int broj) {\n\t\n\tint rezultat{};\n\tbroj = fabs(broj);\n\t\n\twhile (broj != 0) {\n\t\trezultat = rezultat + (broj % 10);\n\t\tbroj = broj / 10;\n\t}\n\t\n\treturn rezultat;\n\t\n\t\n}\n\n\nint SumaDjelilaca(long long int broj) {\n\t\n\tint rezultat = 0;\n\tbroj = fabs(broj);\n\t\n\tfor (long long int i = 1; i <= broj; i++) {\n\t\t\n\t\tif (broj % i == 0) \n\t\t    rezultat = rezultat + i;\n\t\t    \n\t}\n\treturn rezultat;\n}\n\nint BrojProstihFaktora(long long int broj) {\n\tint rezultat {};\n\tbroj = fabs(broj);\n\t\n\tif (broj == 0)\n\t    rezultat = 0;\n\telse if (broj == 1) \n\t    rezultat = 1;\n\telse {\n\t\tint ostatak = broj % 2;\n\t\t\n\t\twhile (ostatak == 0) {\n\t\t\trezultat = rezultat + 1;\n\t\t\tbroj = broj / 2;\n\t\t\tostatak = broj % 2;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (long long int i=3; i <= broj; i = i + 2) {\n\t\t\tint ostatak = broj % i;\n\t\t\t\n\t\t\twhile (ostatak == 0) {\n\t\t\t\trezultat++;\n\t\t\t\tbroj = broj / i;\n\t\t\t\tostatak = broj % i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn rezultat;\n}\n\n\nint BrojSavrsenihDjelilaca(long long int broj) {\n\tint rezultat {};\n\tbroj = fabs(broj);\n\t\n\tfor (long long int i = 1; i <= broj; i++) {\n\t\tint suma = SumaDjelilaca(i) - i;\n\t\t\n\t\tif (suma == i && broj % i == 0)\n\t\t    rezultat++;\n\t\t    \n\t}\n\t\n\treturn rezultat;\n}\n\n\ntemplate <typename T1>\n\nbool Jednaki(T1 x, T1 y, double eps = 1e-10) {\n\tbool uslov = (x < 0 && y > 0) || (x > 0 && y < 0);\n\t\n\tif (uslov) return false;\n\t    return std::fabs(x-y) <= eps*(std::fabs(x)+std::fabs(y));\n}\n\ntemplate <typename T1, typename T2, typename T3, typename T4>\n\nauto UvrnutiPresjek (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2, T4 funkcija_kriterija(T3))-> typename std::vector<std::vector<typename std::remove_reference<decltype (*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak2)>::type>> matrica;\n\twhile (pocetak1 != kraj1) {\n\t\tT4 br_vrij1 = funkcija_kriterija(*pocetak1);\n\t\tT2 temp = pocetak2;\n\t\t\n\t\twhile (temp != kraj2) {\n\t\t\tT4 br_vrij2 = funkcija_kriterija(*temp);\n\t\t\t\n\t\t\tif (Jednaki(br_vrij1, br_vrij2)) {\n\t\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(3);\n\t\t\t\tpomocni[0] = *pocetak1;\n\t\t\t\tpomocni[1] = *temp;\n\t\t\t\tpomocni[2] = br_vrij1;\n\t\t\t\tmatrica.push_back(pomocni);\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\n\t\n\tstd::sort(matrica.begin(), matrica.end(), [](typename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vek1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vek2) {\n\t\tif (!Jednaki(vek1[2],vek2[2])) return vek1[2] < vek2[2];\n\t\telse if((Jednaki(vek1[2], vek2[2])) && !Jednaki(vek1[0], vek2[0])) return vek1[0] < vek2[0];\n\t\treturn vek1[1] < vek2[1];});\n\treturn matrica;\n\t\n\t}\n\t\ntemplate <typename T1, typename T2>\nauto UvrnutiPresjek (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2) -> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector <std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\twhile(pocetak1 != kraj1) {\n\t\tT2 temp=pocetak2;\n\t\twhile(temp != kraj2) {\n\t\t\tif(Jednaki(*pocetak1, *temp)) {\n\t\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(3);\n\t\t\t\tpomocni[0]=*pocetak1;\n\t\t\t\tpomocni[1]=0;\n\t\t\t\tpomocni[2]=0;\n\t\t\t\tmatrica.push_back(pomocni);\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\tstd::sort (matrica.begin(), matrica.end(),[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>vek1, typename std::vector <typename std::remove_reference <decltype(*pocetak1)>::type> vek2) {\n\t\treturn vek1[0] < vek2[0];});\n\t\treturn matrica;\n\t}\n\t\n\ttemplate <typename T1, typename T2, typename T3, typename T4>\n\tauto UvrnutaRazlika (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2, T4 funkcija_kriterija(T3)) -> typename std::vector<std::vector <typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\t\ttypename std::vector <std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tT1 temp1=pocetak1;\n\twhile (temp1 != kraj1) {\n\t\tT4 br_vrij1 = funkcija_kriterija (*temp1);\n\t\tbool status = false;\n\t\tT2 temp2 = pocetak2;\n\t\twhile (temp2 != kraj2) {\n\t\t\tT4 br_vrij2 = funkcija_kriterija (*temp2);\n\t\t\tif (Jednaki(br_vrij1, br_vrij2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp2++;\n\t\t}\n\t\tif (!status) {\n\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(2);\n\t\t\tpomocni[0]=*temp1;\n\t\t\tpomocni[1]=br_vrij1;\n\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\ttemp1++;\n\t}\n\twhile (pocetak2 != kraj2) {\n\t\tT4 br_vrij2 = funkcija_kriterija(*pocetak2);\n\t\tbool status = false;\n\t\tT1 temp = pocetak1;\n\t\twhile (temp != kraj1) {\n\t\t\tT4 br_vrij1 = funkcija_kriterija (*temp);\n\t\t\tif (Jednaki(br_vrij1, br_vrij2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tif (!status) {\n\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak2)>::type> pomocni(2);\n\t\t\tpomocni[0] = *pocetak2;\n\t\t\tpomocni[1] = br_vrij2;\n\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\tpocetak2++;\n\t}\n\t\n\tstd::sort (matrica.begin(), matrica.end(), [](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek2) {\n\t\tif (!Jednaki(vek1[0], vek2[0])) return vek1[0] > vek2[0];\n\t\treturn vek1[1] > vek2[1];});\n\t\treturn matrica;\n}\n\ntemplate <typename T1, typename T2>\n\tauto UvrnutaRazlika (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2) -> typename std::vector<std::vector <typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector <typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tT1 temp1=pocetak1;\n\twhile (temp1==kraj1) {\n\t\tbool status=false;\n\t\tT2 temp2 = pocetak2;\n\t\twhile (temp2 != kraj2) {\n\t\t\tif (Jednaki(*temp1, *temp2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp2++;\n\t\t}\n\t\tif(!status) {\n\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(2);\n\t\t\tpomocni[0] = *temp1;\n\t\t\tpomocni[1] = 0;\n\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\ttemp1++;\n\t}\n\twhile (pocetak2 != kraj2) {\n\t\tbool status = false;\n\t\tT1 temp = pocetak1;\n\t\twhile (temp != kraj1) {\n\t\t\tif(Jednaki(*temp, *pocetak2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tif (!status) {\n\t\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(2);\n\t\t\t\tpomocni[0] = *pocetak2;\n\t\t\t\tpomocni[1] = 0;\n\t\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\tpocetak2++;\n\t}\n\tstd::sort (matrica.begin(), matrica.end(), [](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek2) {\n\t\treturn vek1[0] > vek2[0];});\n\t\treturn matrica;\n\t\t\n\t}\n\t\nint main ()\n{\n\tint ukupno {};\n\tstd::cout << \"Unesite broj elemenata prvog kontejnera: \";\n\tstd::cin >> ukupno;\n\tstd::cout << \"Unesite elemente prvog kontejnera: \";\n    std::deque<int> d1(ukupno);\n    int unos {};\n    \n    for (int i = 0; i < ukupno; i++) {\n    \tstd::cin >> unos;\n    \tbool status = false;\n    \t\n    \tfor (int j = 0; j < d1.size(); j++) {\n    \t\tif (Jednaki(unos, d1[j])) {\n    \t\t\tstatus = true;\n    \t\t\tbreak;\n    \t\t}\n    \t}\n    \tif (!status) d1[i] = unos;\n    \telse i--;\n    \t}\n    \t\n    int ukupno2 {};\n    std::cout << \"Unesite broj elemenata drugog kontejnera: \";\n    std::cin >> ukupno2;\n    std::cout << \"Unesite elemente drugog kontejnera: \";\n    std::deque<int> d2 (ukupno2);\n    \n    for(int i = 0; i < ukupno2; i++) {\n    \tstd::cin >> unos;\n    \tbool status = false;\n    \t\n    \tfor(int j = 0; j < d1.size(); j++)\n    \t    if (Jednaki(unos, d2[j])) {\n    \t    \tstatus = true;\n    \t    \tbreak;\n    \t    }\n    \t    \n    \t if (!status) d2[i] = unos;\n    \t else i--;\n    }\n    \n    std::vector<std::vector<int>> uvrnutiPresjek = UvrnutiPresjek(d1.begin(), d1.end(), d2.begin(), d2.end(), SumaCifara);\n    std::vector<std::vector<int>> uvrnutaRazlika = UvrnutaRazlika(d1.begin(), d1.end(), d2.begin(), d2.end(), BrojProstihFaktora);\n    std::cout << \"Uvrnuti presjek kontejnera: \\n\";\t\n    \n    for (int i = 0; i < uvrnutiPresjek.size(); i++) {\n    \tfor (int j = 0; j < uvrnutiPresjek[i].size(); j++) {\n    \t    std::cout << std::right << std::setw(6) << uvrnutiPresjek[i][j] << \" \";\n    \t}\n    \t    std::cout << std::endl;\n    }\n    \n    std::cout << \"Uvrnuta razlika kontejnera: \\n\";\n    for (int i = 0; i < uvrnutaRazlika.size(); i++) {\n    \tfor (int j = 0; j < uvrnutaRazlika[i].size(); j++){\n    \t    std::cout << std::right << std::setw(6) << uvrnutaRazlika[i][j] << \" \";\n    \t}\n    std::cout << std::endl;\n    }\n    std::cout << \"Dovidjenja!\";\n\treturn 0;\n\n}",
        "student7001": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 3\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Berina Cocalic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: bcocalic1@etf.unsa.ba\n\t\n*/\n#include <iostream>\n#include <algorithm>\n#include <type_traits>\n#include <deque>\n#include <vector>\n#include <cmath>\n#include <iomanip>\n\nint SumaCifara(long long int broj) {\n\tbroj=fabs(broj);\n\tint suma_cifara{};\n\twhile(1) {\n\t\tif (broj==0) break;\n\t\tsuma_cifara+=(broj%10);\n\t\tbroj/=10;\n\t}\n\treturn suma_cifara;\n}\n\nint SumaDjelilaca(long long int broj) {\n\tbroj=fabs(broj);\n\tint suma_djelilaca{};\n\tfor (long long int i=1; i<=broj; i++)\n\t\tif (broj%i==0) suma_djelilaca+=i;\n\treturn suma_djelilaca;\n}\n\nint BrojProstihFaktora(long long int broj) {\n\tint broj_prostih_faktora{};\n\tbroj=fabs(broj);\n\tif (broj==0) broj_prostih_faktora=0;\n\telse if (broj==1) broj_prostih_faktora=1;\n\telse {\n\t\tint ostatak=broj%2;\n\t\twhile (ostatak==0) {\n\t\t\tbroj_prostih_faktora++;\n\t\t\tbroj=broj/2;\n\t\t\tostatak=broj%2;\n\t\t}\n\t\tfor (long long int i=3; i<=broj; i+=2) {\n\t\t\tint ostatak=broj%i;\n\t\t\twhile (ostatak==0) {\n\t\t\t\tbroj_prostih_faktora++;\n\t\t\t\tbroj=broj/i;\n\t\t\t\tostatak=broj%i;\n\t\t\t}\n\t\t}\n\t}\n\treturn broj_prostih_faktora;\n}\n\nint BrojSavrsenihDjelilaca(long long int broj) {\n\tbroj=fabs(broj);\n\tint broj_savrsenih_djelilaca{};\n\tfor (long long int i=1; i<=broj; i++)\n\t\tif (broj%i==0 && (SumaDjelilaca(i)-i)==i) broj_savrsenih_djelilaca++;\n\treturn broj_savrsenih_djelilaca;\n}\n\ntemplate <typename TipElementa1>\nbool JesuLiJednaki(TipElementa1 x1, TipElementa1 x2, double Eps=1e-10) {\n\tif ((x1<0 && x2>0) || (x1>0 && x2<0)) return false;\n\treturn std::fabs(x1-x2) <= Eps*(std::fabs(x1)+std::fabs(x2));\n}\n\ntemplate <typename TipElementa1, typename TipElementa2, typename TipElementa3, typename TipElementa4>\nauto UvrnutiPresjek(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2, \n\t\t\t\t\tTipElementa4 funkcija_kriterija(TipElementa3)) \n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak2)>::type>> matrica;\n\twhile(pocetak1!=kraj1) {\n\t\tTipElementa4 vrijednost1=funkcija_kriterija(*pocetak1);\n\t\tTipElementa2 tmp=pocetak2;\n\t\twhile(tmp!=kraj2) {\n\t\t\tTipElementa4 vrijednost2=funkcija_kriterija(*tmp);\n\t\t\tif (JesuLiJednaki(vrijednost1, vrijednost2)) {\n\t\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(3);\n\t\t\t\tpomocni_vektor[0]=*pocetak1;\n\t\t\t\tpomocni_vektor[1]=*tmp;\n\t\t\t\tpomocni_vektor[2]=vrijednost1;\n\t\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(), \n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vektor2){\n\t\tif (!JesuLiJednaki(vektor1[2], vektor2[2])) return vektor1[2]<vektor2[2];\n\t\telse if ((JesuLiJednaki(vektor1[2], vektor2[2])) && !JesuLiJednaki(vektor1[0], vektor2[0])) return vektor1[0]<vektor2[0];\n\t\treturn vektor1[1]<vektor2[1];});\n\treturn matrica;\n}\n\ntemplate <typename TipElementa1, typename TipElementa2>\nauto UvrnutiPresjek(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2)\n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\twhile(pocetak1!=kraj1) {\n\t\tTipElementa2 tmp=pocetak2;\n\t\twhile(tmp!=kraj2) {\n\t\t\tif (JesuLiJednaki(*pocetak1, *tmp)) {\n\t\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(3);\n\t\t\t\tpomocni_vektor[0]=*pocetak1;\n\t\t\t\tpomocni_vektor[1]=0;\n\t\t\t\tpomocni_vektor[2]=0;\n\t\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(),\n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor2){\n\t\treturn vektor1[0]<vektor2[0];});\n\treturn matrica;\n}\n\ntemplate <typename TipElementa1, typename TipElementa2, typename TipElementa3, typename TipElementa4>\nauto UvrnutaRazlika(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2,\n\t\t\t\t\tTipElementa4 funkcija_kriterija(TipElementa3)) \n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tTipElementa1 tmp1=pocetak1;\n\twhile(tmp1!=kraj1) {\n\t\tTipElementa4 vrijednost1=funkcija_kriterija(*tmp1);\n\t\tbool pronadjen=false;\n\t\tTipElementa2 tmp2=pocetak2;\n\t\twhile(tmp2!=kraj2) {\n\t\t\tTipElementa4 vrijednost2=funkcija_kriterija(*tmp2);\n\t\t\tif (JesuLiJednaki(vrijednost1, vrijednost2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp2++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*tmp1;\n\t\t\tpomocni_vektor[1]=vrijednost1;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\ttmp1++;\n\t}\n\twhile(pocetak2!=kraj2) {\n\t\tTipElementa4 vrijednost2=funkcija_kriterija(*pocetak2);\n\t\tbool pronadjen=false;\n\t\tTipElementa1 tmp=pocetak1;\n\t\twhile(tmp!=kraj1) {\n\t\t\tTipElementa4 vrijednost1=funkcija_kriterija(*tmp);\n\t\t\tif (JesuLiJednaki(vrijednost1, vrijednost2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak2)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*pocetak2;\n\t\t\tpomocni_vektor[1]=vrijednost2;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\tpocetak2++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(),\n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor2){\n\t\tif (!JesuLiJednaki(vektor1[0], vektor2[0])) return vektor1[0]>vektor2[0];\n\t\treturn vektor1[1]>vektor2[1];});\n\treturn matrica;\n}\n\ntemplate <typename TipElementa1, typename TipElementa2>\nauto UvrnutaRazlika(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2) \n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tTipElementa1 tmp1=pocetak1;\n\twhile(tmp1!=kraj1) {\n\t\tbool pronadjen=false;\n\t\tTipElementa2 tmp2=pocetak2;\n\t\twhile(tmp2!=kraj2) {\n\t\t\tif (JesuLiJednaki(*tmp1, *tmp2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp2++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*tmp1;\n\t\t\tpomocni_vektor[1]=0;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\ttmp1++;\n\t}\n\twhile(pocetak2!=kraj2) {\n\t\tbool pronadjen=false;\n\t\tTipElementa1 tmp=pocetak1;\n\t\twhile(tmp!=kraj1) {\n\t\t\tif (JesuLiJednaki(*tmp, *pocetak2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*pocetak2;\n\t\t\tpomocni_vektor[1]=0;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\tpocetak2++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(),\n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor2){\n\t\treturn vektor1[0]>vektor2[0];});\n\treturn matrica;\n}\n\nint main () {\n\tint broj_elemenata1{};\n\tstd::cout << \"Unesite broj elemenata prvog kontejnera: \";\n\tstd::cin >> broj_elemenata1;\n\tstd::cout << \"Unesite elemente prvog kontejnera: \";\n\tstd::deque<int> dek1(broj_elemenata1);\n\tint unesena_vrijednost{};\n\tfor (int i=0; i<broj_elemenata1; i++) {\n\t\tstd::cin >> unesena_vrijednost;\n\t\tbool pronadjen=false;\n\t\tfor (int k=0; k<dek1.size(); k++)\n\t\t\tif (JesuLiJednaki(unesena_vrijednost, dek1[k])) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (!pronadjen) dek1[i]=unesena_vrijednost;\n\t\telse i--;\n\t}\n\tint broj_elemenata2{};\n\tstd::cout << \"Unesite broj elemenata drugog kontejnera: \";\n\tstd::cin >> broj_elemenata2;\n\tstd::cout << \"Unesite elemente drugog kontejnera: \";\n\tstd::deque<int> dek2(broj_elemenata2);\n\tfor (int i=0; i<broj_elemenata2; i++) {\n\t\tstd::cin >> unesena_vrijednost;\n\t\tbool pronadjen=false;\n\t\tfor (int k=0; k<dek1.size(); k++)\n\t\t\tif (JesuLiJednaki(unesena_vrijednost, dek2[k])) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (!pronadjen) dek2[i]=unesena_vrijednost;\n\t\telse i--;\n\t}\n\tstd::vector<std::vector<int>> uvrnuti_presjek = UvrnutiPresjek(dek1.begin(), dek1.end(), dek2.begin(), dek2.end(), SumaCifara);\n\tstd::vector<std::vector<int>> uvrnuta_razlika = UvrnutaRazlika(dek1.begin(), dek1.end(), dek2.begin(), dek2.end(), BrojProstihFaktora);\n\tstd::cout << \"Uvrnuti presjek kontejnera: \\n\";\n\tfor (int i=0; i<uvrnuti_presjek.size(); i++) {\n\t\tfor (int j=0; j<uvrnuti_presjek[i].size(); j++)\n\t\t\tstd::cout << std::right << std::setw(6) << uvrnuti_presjek[i][j] << \" \";\n\t\tstd::cout << std::endl;\n\t}\n\tstd::cout << \"Uvrnuta razlika kontejnera: \\n\";\n\tfor (int i=0; i<uvrnuta_razlika.size(); i++) {\n\t\tfor (int j=0; j<uvrnuta_razlika[i].size(); j++)\n\t\t\tstd::cout << std::right << std::setw(6) << uvrnuta_razlika[i][j] << \" \";\n\t\tstd::cout << std::endl;\n\t}\n\tstd::cout << \"Dovidjenja!\";\n\treturn 0;\n}"
    },
    "39": {
        "label": "0",
        "student7888": "#include <stdio.h>\n#include <math.h>\n#define eps 0.00000000000000000000000000000000000000000000001\n\nstruct Student {\n\tchar ime[20], prezime[20];\n\tint ocjene[50];\n\tint br_ocjena;\n};\n\n\t\t\t\t\t\t\t\t\t\t/* Funkcija genijalci prima niz studenata, velicinu niza i realan broj prosjek */\n\nint genijalci(struct Student studenti[], int vel, float prosjek)\t{\n\t\tint i,j,k,suma,brojac,max1,max2,p=0,s=0;\n\t\tfloat prosjek_studenta,prosjek_studenta1;\n\n\t\n\t\t\t\t\t\t\t\t\t\t/* Izbacivanje studenata koji imaju manji prosjek od zadanog */\n\n\t\tfor (i = 0 ; i < vel ; i++)\t{\n\t\t\n\t\t\tsuma = 0;\n\t\t\tbrojac = 0;\n\t\t\n\t\t\n\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\t{\n\t\t\n\t\t\n\t\t\t\t\t\t\t\t\t\t/* Ako student ima samo jednu evidentiranu ocjenu prosjek mu je automatski 5.0 */\n\t\t\tif ( studenti[i].ocjene[j] == 5)\t{\n\t\t\t\tsuma = 5;\n\t\t\t\tbrojac = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\t\tsuma+=studenti[i].ocjene[j];\n\t\t\t\tbrojac++;\n\t\t}\n\t\t\t\t\t\t\t\t\t\t/* Ako student nema evidentirani ocjena prosjek mu je tako\u0111er 5.0 */\n\t\t\t\tif ( suma == 0)\t{\n\t\t\t\n\t\t\t\tsuma = 5;\n\t\t\t\tbrojac = 1;\n\t\t\t}\n\t\t\n\t\t\n\t\tprosjek_studenta = (float)suma/brojac;\n\t\t\n\t\t\tif ( prosjek_studenta < prosjek)\t{\n\t\t\t\n\t\t\t\tfor ( k = i ; k < vel-1 ; k++)\t{\n\t\t\t\t\n\t\t\t\t\tstudenti[k] = studenti[k+1];\n\t\t\t\t}\n\t\t\t\n\t\t\n\t\t\ti--;\n\t\t\tvel--;\n\t\n\t\t}\n\t\n\t\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ispisivanje imena i prezimena studenta sa najvecim prosjekom */\n\t\t\t\ti = 0;\n\t\t\t\tsuma = 0;\n\t\t\n\t\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\t\tsuma+=studenti[i].ocjene[j];\n\t\t\n\t\t\t\tprosjek_studenta = (float)suma/studenti[i].br_ocjena;\n\t\t\n\t\t\t\n\t\t\t\t\tfor ( k = i+1 ; k < vel ; k++ )\t{\n\t\t\t\t\t\tsuma = 0;\n\t\t\n\t\t\t\t\t\tfor ( j = 0 ; j < studenti[k].br_ocjena ; j++)\t\tsuma+=studenti[k].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta1 = (float)suma/studenti[k].br_ocjena;\n\t\t\n\t\t\n\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko dva studenta imaju isti prosjek ispisuje se ime onog studenta \u010dije je prezime ispred po leksikografskom redoslijedu */\n\t\t\t\n\t\t\t\t\twhile (fabs(prosjek_studenta - prosjek_studenta1)<eps)\t{\n\t\t\t\t\n\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\ts = 0;\n\t\t\t\t\t\n\t\t\t\t\t\t\twhile ( studenti[i].prezime[p] == studenti[k].prezime[s] && studenti[i].prezime[p] != '\\0' && studenti[k].prezime[s] != '\\0') {\n\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tif ( studenti[i].prezime[p] == '\\0' || studenti[k].prezime[s] == '\\0')\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ako im je isto prezime onda im se gleda ime */ \n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twhile ( studenti[i].ime[p] == studenti[k].ime[s] && studenti[i].ime[p] != '\\0' && studenti[k].ime[s] != '\\0') {\n\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tif ( studenti[i].ime[p] > studenti[k].ime[s] )\t{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\t\t\tif ( studenti[i].prezime[p] > studenti[k].prezime[s] )\t{\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\tif ( prosjek_studenta < prosjek_studenta1)\t{\n\t\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\ti = k;\n\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\t\t\tmax1 = i;\n\t\t\t\t\t\tif ( i < vel)\n\t\t\t\t\t\tprintf(\"%s %s\\n\", studenti[i].prezime,studenti[i].ime);\n\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t/* Ispis studenta sa drugim najvecim prosjekom */\n\t\t\t\n\t\t\ti = 0;\n\t\t\tsuma = 0;\n\t\t\t\n\t\t\tif ( i == max1) i++;\n\t\t\tif ( i < vel)\t{\n\t\t\t\t\n\t\t\t\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\tsuma+=studenti[i].ocjene[j];\n\t\t\t\n\t\t\t\t\tprosjek_studenta = (float)suma/studenti[i].br_ocjena;\n\t\t\n\t\t\t\n\t\t\t\t\t\tfor ( k = i+1 ; k < vel ; k++ )\t{\n\t\t\t\t\t\t\tsuma = 0;\n\t\t\t\t\t\t\tif ( k == max1) k++;\n\t\t\t\t\t\t\tif ( k >= vel)\tbreak;\n\t\t\t\t\t\t\t\tfor ( j = 0 ; j < studenti[k].br_ocjena ; j++)\t\tsuma+=studenti[k].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta1 = (float)suma/studenti[k].br_ocjena;\n\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko dva studenta imaju isti prosjek ispisuje se ime onog studenta \u010dije je prezime ispred po leksikografskom redoslijedu */\n\n\t\t\n\t\t\t\t\t\t\twhile (fabs(prosjek_studenta - prosjek_studenta1)<eps)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\twhile ( studenti[i].prezime[p] == studenti[k].prezime[s] && studenti[i].prezime[p] != '\\0' && studenti[k].prezime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ako im je isto prezime onda im se gleda ime */ \n\t\t\t\t\n\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] == '\\0' || studenti[k].prezime[s] == '\\0')\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\twhile ( studenti[i].ime[p] == studenti[k].ime[s] && studenti[i].ime[p] != '\\0' && studenti[k].ime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif ( studenti[i].ime[p] > studenti[k].ime[s] )\t{\n\t\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] > studenti[k].prezime[s] )\t{\n\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\tif ( prosjek_studenta < prosjek_studenta1)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t\tmax2 = i;\n\t\t\t\t\t\t\tif ( i < vel)\n\t\t\t\t\t\t\tprintf(\"%s %s\\n\", studenti[i].prezime,studenti[i].ime);\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* Ispis studenta sa trecim najvecim prosjekom */\n\t\t\t\n\t\t\t\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tsuma = 0;\n\t\t\t\n\t\t\t\t\t\t\twhile ( i == max1 || i == max2) i++;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( i < vel)\t{\n\t\t\t\n\t\t\t\t\t\t\t\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\tsuma+=studenti[i].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\t\t\tprosjek_studenta = (float)suma/studenti[i].br_ocjena;\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\tfor ( k = i+1 ; k < vel ; k++ )\t{\n\t\t\t\t\t\t\t\t\tsuma = 0;\n\t\t\t\t\t\t\t\t\twhile ( k == max1 || k == max2) k++;\n\t\t\t\t\t\t\t\t\tif ( k >= vel) break;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tfor ( j = 0 ; j < studenti[k].br_ocjena ; j++)\t\tsuma+=studenti[k].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\t\t\t\tprosjek_studenta1 = (float)suma/studenti[k].br_ocjena;\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko dva studenta imaju isti prosjek ispisuje se ime onog studenta \u010dije je prezime ispred po leksikografskom redoslijedu */\n\n\t\t\n\t\t\t\t\t\t\t\t\t\t\twhile (fabs(prosjek_studenta - prosjek_studenta1)<eps)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\twhile ( studenti[i].prezime[p] == studenti[k].prezime[s] && studenti[i].prezime[p] != '\\0' && studenti[k].prezime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko imaju isto prezime gleda se ime */\n\t\t\t\t\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] == '\\0' || studenti[k].prezime[s] == '\\0')\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\twhile ( studenti[i].ime[p] == studenti[k].ime[s] && studenti[i].ime[p] != '\\0' && studenti[k].ime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif ( studenti[i].ime[p] > studenti[k].ime[s] )\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] > studenti[k].prezime[s] )\t{\n\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\n\t\t\t\t\t\t\t\t\tif ( prosjek_studenta < prosjek_studenta1)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( i < vel)\n\t\t\t\t\t\t\t\tprintf(\"%s %s\\n\", studenti[i].prezime,studenti[i].ime);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\n\treturn vel;\n}\n\n\n\nint main() {\n\t\n\n\treturn 0;\n}\n",
        "student8288": "#include <stdio.h>\n\nstruct Student {\n\tchar ime[20], prezime[20];\n\tint ocjene[50];\n\tint br_ocjena;\n};\n\nint daLiImaPet(struct Student s)\n{\n\tint i; \n\t\n\tfor(i=0;i<s.br_ocjena;i++)\n\t{\n\t\tif(s.ocjene[i] == 5)\n\t\treturn 1;\n\t}\n\t\n\t\n\treturn 0;\n\n}\n\nint imaOcjenu(struct Student s)\n{\n\tif(s.br_ocjena == 0)\n\t\treturn 0;\n\t\t\n\treturn 1; \t\n}\n\nfloat ukProsjek(struct Student s)\n{\n\tint i;\n\tfloat suma = 0;\n\tfloat br_ocjena;\n\t\n\tif(s.br_ocjena==0)\n\t\treturn 5;\n\t\n\tfor(i=0;i<s.br_ocjena;i++)\n\t{\n\t\tsuma+=s.ocjene[i];\n\t\t\n\t}\n\tbr_ocjena=s.br_ocjena;\n\tsuma=suma/br_ocjena;\n\treturn suma;\n}\n\nvoid kopirajRijec(char* ulaz,char* izlaz)\n{\n\twhile(*ulaz != '\\0' && *ulaz !='\\n')\n\t*izlaz++=*ulaz++;\n\t*izlaz='\\0';\n\t\n}\n\nint jednakeRijeci(char* prva, char* druga)\n{\n\tint jednake = 1;\n\twhile((*prva != '\\n' && *prva != '\\0')&&(*druga != '\\n' && *druga != '\\0'))\n\t{\n\t\tif(*prva != *druga) jednake = 0;\n\t\tprva++;\n\t\tdruga++;\n\t}\n\t\n\tif(*prva != *druga) jednake = 0;\n\t\n\treturn jednake;\n\t\n}\n\nint vecaRijec(char* r1,char* r2)\n{\n\tchar prva[100];\n\tchar druga[100];\n\tkopirajRijec(r1,prva);\n\tkopirajRijec(r2,druga);\n\tint clan = 0;\n\t\n\twhile((prva[clan] != '\\n' && prva[clan] != '\\0')&&(druga[clan] != '\\n' && druga[clan] != '\\0'))\n\t{\n\t\tif(prva[clan] > druga[clan]) return 1;\n\t\telse if(prva[clan] < druga[clan]) return 0;\n\t\tclan++;\n\t}\n\tif(prva[clan] == '\\n' || prva[clan] == '\\0') return 1;\n\t\n\telse return 0;\n}\n\nint daLiJeVeci(struct Student s1, struct Student s2)\n{\n\tif(ukProsjek(s1)>ukProsjek(s2))\n\t{\n\t\treturn 1;\n\t}\n\telse if(ukProsjek(s1)<ukProsjek(s2))\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\telse\n\t{\n\t\tif(!jednakeRijeci(s1.prezime,s2.prezime) && vecaRijec(s1.prezime,s2.prezime))\n\t\t\treturn 1;\n\t\t\n\t\telse if(!jednakeRijeci(s1.prezime,s2.prezime) && vecaRijec(s1.prezime,s2.prezime))\n\t\t\treturn 0;\n\t\t\n\t\telse\n\t\t \t{\n\t\t \t\tif(!jednakeRijeci(s1.ime,s2.ime) && vecaRijec(s1.ime,s2.ime))\n\t\t \t\t\treturn 0;\n\t\t \t\t\n\t\t \t\telse if(!jednakeRijeci(s1.ime,s2.ime) && vecaRijec(s1.ime,s2.ime))\n\t\t \t\t\treturn 1;\n\t\t \t\t\t\n\t\t \t\telse return 1;\n\t\t \t}\n\t}\n\t\n}\n\nvoid ispisStudent(struct Student s)\n\t{\n\t\tprintf(\"%s %s\\n\",s.prezime,s.ime);\n\t\t\n\t}\n\n\n\nint genijalci(struct Student *niz, int vel,float prosjek )\n{\n\tint i,j;\n    int  nizN[100];\n\t\n\tint temp;\n\t\n\tfor(i=0;i<vel;i++)\n\t{\n\t\tif(imaOcjenu(niz[i]) == 0 || daLiImaPet(niz[i]) == 1 || ukProsjek(niz[i]) < prosjek)\n\t\t{\n\t\t\tfor(j=i;j<vel-1;j++)\n\t\t\t{\n\t\t\t\tniz[j]=niz[j+1];\n\t\t\t\t\n\t\t\t}\n\t\t\tvel--;\n\t\t\ti--;\n\t\t}\n\t}\n\t\n\t\n\t\n\tfor(i=0;i<vel;i++)\n\t{\n\t\tnizN[i] = i;\n\t}\n\t\n\tfor(i=0;i<vel;i++)\n\t{\n\t\tfor(j=i;j<vel;j++)\n\t\t{\n\t\t\tif(daLiJeVeci(niz[nizN[j]],niz[nizN[i]]))\n\t\t\t{\n\t\t\t\ttemp = nizN[j];\n\t\t\t\tnizN[j] = nizN[i];\n\t\t\t\tnizN[i] = temp;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\n\t}\n\t\n\tfor(i=0;i<3 && i<vel;i++)\n\t{\n\t \tispisStudent(niz[nizN[i]]);\n\t}\n\t\n\treturn vel;\n}\n\n\n\n\nint main() {\n\t\treturn 0;\n}\n"
    },
    "40": {
        "label": "1",
        "student5378": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main() {\nchar boja,znak='%';\nint brc=0,brb=0,brs=0,brv=0,brp=0,zbir=0;\nfloat max,null=0;\nint i=0;\nprintf(\"Unesite vozila: \");\nfor(i=0;i<100000;i++){\n\tscanf(\"%c\",&boja);\n\tif(boja=='k'||boja=='K') {  break;}\n\telse if(boja!='C' && boja!='c' && boja!='B'&& boja!='b'&& boja!='S'&& boja!='s' && boja!='P' && boja!='p'&&boja!='v'&&boja!='V') printf(\"Neispravan unos \\n\");\n\telse if(boja=='C'|| boja=='c') brc++;\n\telse if(boja=='B'|| boja=='b') brb++;\n\telse if(boja=='S'|| boja=='s') brs++;\n\telse if(boja=='P'|| boja=='p') brp++;\n\telse if(boja=='V'|| boja=='v') brv++;\n}\nzbir=brc+brb+brs+brp+brv;\nprintf(\"Ukupno evidentirano %d vozila. \\n\",zbir);\nif(zbir==0) {printf(\"Najpopularnija boja je crna (%.2f%c).\",null,znak); return 0;}\nif ((brc>=brb)&&(brc>=brs)&&(brc>=brp)&&(brc>=brv)){\n\tmax = brc;\n\tprintf(\"Najpopularnija boja je crna (%.2f%c).\",(max/zbir)*100,znak);\n}\nelse if ((brb>brc)&&(brb>=brs)&&(brb>=brv)&&(brb>=brp)){\n\tmax=brb;\n\tprintf(\"Najpopularnija boja je bijela (%.2f%c).\",(max/zbir)*100,znak);\n\t\n}\nelse if((brs>brc)&&(brs>brb)&&(brs>=brv)&&(brs>=brp)){\n\tmax=brs;\n\tprintf(\"Najpopularnija boja je siva (%.2f%c).\",(max/zbir)*100,znak);\n}\nelse if((brv>brc)&&(brv>brb)&&(brv>brs)&&(brv>=brp)){\n\tmax=brv;\n\tprintf(\"Najpopularnija boja je crvena (%.2f%c).\",(max/zbir)*100,znak);\n}\nelse if((brp>brc)&&(brp>brb)&&(brp>brs)&&(brp>brv)){\n\tmax=brp;\n\tprintf(\"Najpopularnija boja je plava (%.2f%c).\",(max/zbir)*100,znak);\n}\n\treturn 0;\n}\n",
        "student7386": "#include <stdio.h>\n\nint main() {\n\tprintf(\"Zada\u0107a 1, Zadatak 3\");\n\treturn 0;\n}\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main() {\nchar boja,znak='%';\nint brc=0,brb=0,brs=0,brv=0,brp=0,zbir=0;\nfloat max,null=0;\nint i=0;\nprintf(\"Unesite vozila: \");\nfor(i=0;i<100000;i++){\n\tscanf(\"%c\",&boja);\n\tif(boja=='k'||boja=='K') {  break;}\n\telse if(boja!='C' && boja!='c' && boja!='B'&& boja!='b'&& boja!='S'&& boja!='s' && boja!='P' && boja!='p'&&boja!='v'&&boja!='V') printf(\"Neispravan unos \\n\");\n\telse if(boja=='C'|| boja=='c') brc++;\n\telse if(boja=='B'|| boja=='b') brb++;\n\telse if(boja=='S'|| boja=='s') brs++;\n\telse if(boja=='P'|| boja=='p') brp++;\n\telse if(boja=='V'|| boja=='v') brv++;\n}\nzbir=brc+brb+brs+brp+brv;\nprintf(\"Ukupno evidentirano %d vozila. \\n\",zbir);\nif(zbir==0) {printf(\"Najpopularnija boja je crna (%.2f%c).\",null,znak); return 0;}\nif ((brc>=brb)&&(brc>=brs)&&(brc>=brp)&&(brc>=brv)){\n\tmax = brc;\n\tprintf(\"Najpopularnija boja je crna (%.2f%c).\",(max/zbir)*100,znak);\n}\nelse if ((brb>brc)&&(brb>=brs)&&(brb>=brv)&&(brb>=brp)){\n\tmax=brb;\n\tprintf(\"Najpopularnija boja je bijela (%.2f%c).\",(max/zbir)*100,znak);\n\t\n}\nelse if((brs>brc)&&(brs>brb)&&(brs>=brv)&&(brs>=brp)){\n\tmax=brs;\n\tprintf(\"Najpopularnija boja je siva (%.2f%c).\",(max/zbir)*100,znak);\n}\nelse if((brv>brc)&&(brv>brb)&&(brv>brs)&&(brv>=brp)){\n\tmax=brv;\n\tprintf(\"Najpopularnija boja je crvena (%.2f%c).\",(max/zbir)*100,znak);\n}\nelse if((brp>brc)&&(brp>brb)&&(brp>brs)&&(brp>brv)){\n\tmax=brp;\n\tprintf(\"Najpopularnija boja je plava (%.2f%c).\",(max/zbir)*100,znak);\n}\n\treturn 0;\n}"
    },
    "41": {
        "label": "0",
        "student3567": "#include <stdio.h>\n\nint izbaci_max(int niz[], int size)\n{\n\tint max = 0, i;\n\tfor(i = 0; i < size; i++)\n\t\tif(niz[i] > niz[max])\n\t\t\tmax = i;\n\tniz[max] = -1;\n\treturn max;\n}\nint daj_index(char *niz, char znak)\n{\n\tint i = 0;\n\twhile(*niz != '\\0')\n\t{\n\t\tif(znak == *niz)\n\t\t\treturn i;\n\t\ti++;\n\t\tniz++;\n\t}\n\treturn -1;\n}\nchar *kodiraj(char *tekst, char* tablica)\n{\n\tint histogram[95] = {0}, size = 95;\n\tchar* setac = tekst;\n\tchar *pomocni = tablica;\n\twhile(*setac != '\\0')\n\t{\n\t\thistogram[*setac-32]++;\n\t\tsetac++;\n\t}\n\twhile(size > 0)\n    {\n\t\t*tablica++ = izbaci_max(histogram, 95)+32;\n        size--;\n    }\n    tablica = '\\0';\n\tsetac = tekst;\n\twhile(*setac != '\\0')\n\t{\n\t\t*setac = 126 - daj_index(pomocni, *setac);\n\t\tsetac++;\n\t}\n\treturn tekst;\n}\nchar *dekodiraj(char *tekst, char* tablica)\n{\n\tchar *setac = tekst;\n\twhile(*setac != '\\0')\n\t{\n\t\t*setac = tablica[126 - *setac];\n\t\tsetac++;\n\t}\n\treturn tekst;\n}\n\n\nint main() {\n\tchar tekst[] = \"LLMLNLNMONM\";\nchar sifrarnik[100] = \"\";\nint i;\nkodiraj(tekst, sifrarnik);\nprintf(\"%s\", tekst);\nfor (i=0; i<10; i++) printf(\"%c\", sifrarnik[i]);\ndekodiraj(tekst, sifrarnik);\nprintf(\"%s\", tekst);\n\treturn 0;\n}\n",
        "student7485": "#include <stdio.h>\n\nchar *kodiraj(char *tekst, char *sifra){\n\tint ponavljanja[100]={0};\n\tchar tabela[100]={0};\n\tchar *sifra_pomoc=sifra;\n\tchar *poc=tekst;\n\tint i,j,max;\n\t//Pravi tabelu ASCII znakova\n\tfor (i=0;i<95;i++){\n\t\ttabela[i]=' '+i;\n\t}\n\ttabela[i]='\\0';\n\n\twhile (*tekst!='\\0'){\n\t\t//Broji koliko se puta koji znak ponavlja\n\t\tfor (i=0;i<95;i++){\n\t\t\tif(*tekst==tabela[i]){\n\t\t\t\tponavljanja[i]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttekst++;\n\t}\n\t//Pravi sifrarnik po broju ponavljanja i ASCII vrijednosti\n\tfor(i=0;i<95;i++){\n\t\tmax=0;\n\t\tfor(j=0;j<95;j++){\n\t\tif(ponavljanja[j]>ponavljanja[max])\n\t\tmax=j;\n\t\t}\n\n\t\t*sifra=tabela[max];\n\t\tsifra++;\n\t\tfor(j=max;j<95;j++){\n\t\t\ttabela[j]=tabela[j+1];\n\t\t\tponavljanja[j]=ponavljanja[j+1];\n\t\t}\t\n\t}\n\ttekst=poc;\n//Mijenja znakove teksta za odgovarajuce iz sifrarnika\t\nwhile(*tekst!='\\0'){\nsifra=sifra_pomoc;\n\tfor(i=0;i<95;i++,sifra++){\n\t\tif(*tekst==*sifra){\n\t\t\t*tekst=126-i;\n\t\t\tbreak;\n\t\t}\n\t}\n\ttekst++;\n  }\nreturn poc;\n}\n\nchar *dekodiraj(char*tekst, char*sifra){\n\tint i;\n\tchar *poc=tekst;\n\twhile(*tekst!='\\0'){\n\t\tfor(i=0;i<96;i++){\n\t\t\tif(*tekst==126-i){\n\t\t\t\t*tekst=sifra[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttekst++;\n\t}\n\treturn poc;\n}\n\nint main() {\n\tchar sifra[97];\n\tchar tekst[]=\"Test Test Test\\0\";\n\tprintf(\"%s\",kodiraj(tekst,sifra));\n\tprintf(\"\\n%s\", dekodiraj(tekst,sifra));\n\treturn 0;\n}\n"
    },
    "42": {
        "label": "1",
        "student5378": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 1\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Ivona Ivkovic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: iivkovic2@etf.unsa.ba\n\t\n*/\n\n\n#include <iostream>\n#include <vector>\n#include <stdexcept>\nusing namespace std;\nenum class Komande {\n    PomjeriJednoMjesto, PomjeriDalje, Blokiraj,Deblokiraj,PrikaziOkolinu,\n    ZavrsiIgru,KreirajIgru};\n    enum class Status{NijeKraj,KrajPoraz,KrajPobjeda};\n    enum class Smjerovi{GoreLijevo,Gore,GoreDesno,Desno,DoljeDesno,Dolje,DoljeLijevo,Lijevo};\n    enum class KodoviGresaka{PogresnaKomanda,NedostajeParametar,SuvisanParametar,NeispravanParametar};\n    enum class Polje{Prazno,Posjeceno,Mina,BlokiranoPrazno,BlokiranoPosjeceno,BlokiranoMina};\n    typedef vector<vector<Polje>>Tabla;\n    Tabla KreirajTablu (int n){\n        return Tabla(n,vector<Polje>(n));\n    }\n    Tabla KreirajIgru(int n,const vector<vector<int>>&mine){\n        for(unsigned int i=0;i<mine.size();i++){\n            if(mine[i].size()!=2) throw domain_error(\"Ilegalan format zadavanja mina\");\n            else if(mine[i][0]>n-1 ||mine[i][0]<0||mine[i][1]>n-1||mine[i][1]<0) throw domain_error(\"Ilegalne pozicije mina\");\n        }\n        auto t(KreirajTablu(n));\n        for(int i=0;i<n;i++)\n        for(int j=0;j<n;j++)\n        t[i][j]=Polje(0);\n        for(unsigned int i=0;i<mine.size();i++)\n        for(int j=0;j<2;j++){\n            t[mine[i][0]][mine[i][1]]=Polje(2);\n        }\n        return t;\n    }\n    vector<vector<int>>PrikaziOkolinu(const Tabla &polja,int x,int y){\n        if(x==0||y==0||(unsigned int)x==polja.size()-1||(unsigned int)y==polja.size()-1)throw domain_error(\"Polje (x,y) ne postoji\");\n        vector<vector<int>>okolina;\n        int brojac(0);\n        int n{int(polja.size())};\n        for(int i=-1;i<2;i++){\n            vector<int>m;\n            for(int j=-1;j<2;j++){\n                brojac=0;\n                if(x+i>=0 && y+j>=0 && x+i<n && y+j<n){\n                    for(int iPojedinacno=-1;iPojedinacno<2;iPojedinacno++){\n                        for(int jPojedinacno=-1;jPojedinacno<2;jPojedinacno++){\n                            if(iPojedinacno==0 && jPojedinacno==0) continue;\n                             if( x+i+iPojedinacno>=0 && y+j+jPojedinacno>=0 && x+i+iPojedinacno<n && y+j+jPojedinacno<n  &&\n                           polja[x+i+iPojedinacno][y+j+jPojedinacno]==Polje(2))\n                           {\n                               brojac++;\n                           }\n                        }\n                    }\n                }\n                m.push_back(brojac);\n            }\n            okolina.push_back(m);\n            m.clear();\n            }\n            for(int i=0;i<3;i++){\n                for(int j=0;j<3;j++)\n                cout<<okolina[i][j]<<\" \";\n                cout<<endl;\n            }\n            return okolina;\n        }\n        void BlokirajPolje(Tabla &polja,int x,int y){\n            if(x<0 || y<0|| (unsigned int)x>polja.size()-1||(unsigned int)y>polja.size()-1)throw domain_error(\"Polje (x,y) ne postoji\");\n            for(int i=0;i<3;i++)\n            if(polja[x][y]==Polje(i)) polja[x][y]=Polje(i+3);\n    }\n    void DeblokirajPolje(Tabla &polja,int x ,int y){\n        if(x<0 || y<0 || (unsigned int)x>polja.size()-1||(unsigned int)y>polja.size()-1)throw domain_error (\"Polje (x,y) ne postoji\");\n        for(int i=0;i<3;i++){\n            if(polja[x][y]==Polje(i+3)) polja[x][y]=Polje(i);\n        }\n    }\n\n    Status Idi(Tabla &polja, int &x,int &y, Smjerovi smjer){\n        int dimTable{int(polja.size())};\n        polja[x][y]=Polje(1);\n        Status statusIgre{Status(0)};\n        bool mrtviSmo{false},pobjediliSmo{true};\n        if(smjer==Smjerovi(0)){\n            if((x-y)<0||(y-1)<0 || (x-1)>=dimTable||(y-1)>=dimTable) throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x-1][y-1]>Polje(2))throw logic_error(\"Blokirano polje\");\n            x-=1;\n            y-=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(1)){\n            if((x-1)<0||(x-1)>=dimTable) throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x-1][y]>Polje(2)) throw logic_error(\"Blokirano polje\");\n            x-=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(2)){\n            if((x-1)<0 || (y+1)<0 ||(x-1)>=dimTable||(y+1)>=dimTable)throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x-1][y+1]>Polje(2))throw logic_error(\"Bloirano polje\");\n            x-=1;\n            y+=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(3)){\n            if((y+1)<0||(y+1)>=dimTable) throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x][y+1]>Polje(2)) throw logic_error(\"Blokirano polje\");\n            y+=1;\n            if(polja[x][y]==Polje(2))mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(4)){\n            if((x+1)<0||(y+1)<0||(x+1)>=dimTable||(y+1)>=dimTable)throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x+1][y+1]>Polje(2)) throw logic_error(\"Blokiraj polje\");\n            x+=1;\n            y+=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(5)){\n            if((x+1)<0||(x+1)>=dimTable) throw out_of_range (\"Izlazak van igrace table\");\n         if( polja[x+1][y]>Polje(2) )  throw logic_error(\"Blokirano polje\");\n        x+=1;\n        if( polja[x][y]==Polje(2) )    mrtviSmo = true;\n\n        }\n        if(smjer==Smjerovi(6)){\n            if((x+1)<0 || (y-1)<0 || (x+1)>=dimTable||(y-1)>=dimTable) throw out_of_range (\"Izlazak van igrace table\");\n            if(polja[x+1][y-1]>Polje(2)) throw logic_error(\"Blokirano polje\");\n            x+=1;\n            y-=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(7)){\n            if((y-1)<0||(y-1)>=dimTable) throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x][y-1]>Polje(2)) throw logic_error(\"Blokirano polje\");\n            y-=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(mrtviSmo){\n            for(int i=0;i<dimTable;i++)\n            for(int j=0;j<dimTable;j++)\n            polja[i][j]=Polje(0);\n            statusIgre=Status(1);\n            return statusIgre;\n        }\n        for(int i=0;i<dimTable;i++){\n            for(int j=0;j<dimTable;j++){\n                if(polja[i][j]!=Polje(1)){\n                    pobjediliSmo=false;\n                    return statusIgre;\n                }\n            }\n        }\n        if(pobjediliSmo){\n            statusIgre=Status(2);\n            return statusIgre;\n        }\n        return Status(0);\n    }\n    Status Idi(Tabla &polja,int&x,int&y,int novi_x,int novi_y)\n    {\n        \n    }\n    bool UnosKomande(Komande &komanda,Smjerovi &smjer,int &x,int &y,KodoviGresaka &greska){\n        \n    }\n    void IzvrsiKomandu(Komande komanda, Tabla &polja, int &x, int &y,\n Smjerovi p_smjer = Smjerovi::Gore, int p_x = 0, int p_y = 0);\n\n    int main(){\n        cout<<\"Unesite komandu: \";\n        int n;\n        cout<<\"Unsite broj polja: \";\n        cin>>n;\n        vector<vector<int>>mine;\n        int x,y;\n        char znak(')');\n        cout<<\"Unsite pozicije mina: \";\n        while(znak==')'){\n            cin>>znak;\n            if(znak!='('){\n                if(znak=='.') break;\n                cin.clear();\n                cin.ignore(10000,'\\n');\n                cout<<\"Greska, unesite ponovo!\"<<endl;\n                znak=')';\n                continue;\n            }\n            cin>>x;\n            cin>>znak;\n            if(znak!=','||x>=n){\n                if(znak=='.')break;\n                cin.clear();\n                cin.ignore(10000,'\\n');\n                cout<<\"Greska, unesite ponovo!\"<<endl;\n                znak=')';\n                continue;\n            }\n            cin>>y;\n            cin>>znak;\n            if(znak==')'&&y<n){\n                vector<int>m;\n                m.push_back(x);\n                m.push_back(y);\n                mine.push_back(m);\n                continue;\n            }\n            else \n            {\n                if(znak=='.') break;\n                cin.clear();\n                cin.ignore(10000,'\\n');\n                cout<<\"Greska, unesite ponovo!\";\n                znak=')';\n                continue;\n            }\n        }\n        Tabla tab;\n        try{\n            tab=KreirajIgru(n,mine);\n        }\n        catch(domain_error izuzetak){\n            cout<<izuzetak.what()<<endl;\n        }\n        vector<vector<int>>okolina;\n        cout<<\"Unesite koordinate tacke za trazenje okoline: \";\n        cin>>x>>y;\n        try{\n            okolina=PrikaziOkolinu(tab,x,y);\n            BlokirajPolje(tab,x,y);\n        }\n        catch(domain_error e){\n            cout<<e.what()<<endl;\n        }\n        return 0;\n    }\n",
        "student9352": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 1\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Ivona Ivkovic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: iivkovic2@etf.unsa.ba\n\t\n*/\n\n#include <iostream>\n#include <vector>\n#include <stdexcept>\n#include <new>\n#include <string>\n#include <cctype>\n\nusing namespace std;\n\nenum class Status {NijeKraj, KrajPoraz, KrajPobjeda};\nenum class Smjerovi{GoreLijevo, Gore, GoreDesno, Desno, \n\tDoljeDesno, Dolje, DoljeLijevo, Lijevo };\nenum class KodoviGresaka{ PogresnaKomanda, NedostajeParametar, SuvisanParametar, NeispravanParametar };\nenum class Polje { Prazno, Posjeceno, Mina, BlokiranoPrazno, BlokiranoPosjeceno, BlokiranoMina };\nenum class Komande { PomjeriJednoMjesto, PomjeriDalje, Blokiraj, Deblokiraj, PrikaziOkolinu, ZavrsiIgru, KreirajIgru };\n\ntypedef vector<vector<Polje>> Tabla;\n\nTabla KreirajTablu(int n)\n{\n\treturn Tabla(n, vector<Polje>(n));\n}\n\nTabla KreirajIgru(int n, const vector<vector<int>> &mine)\n{\n\tfor(unsigned int i=0; i < mine.size(); i++)\n\t{\n\t\tif(mine[i].size()!=2)  throw domain_error(\"Ilegalan format zadavanja mina\");\n\t\telse if(mine[i][0] > n-1 || mine[i][0]<0 || mine[i][1]>n-1 || mine[i][1]<0 )\n\t\t\t\tthrow domain_error(\"Ilegalne pozicije mina\");\n\t}\n\t\n\tvector<vector<Polje>> t{KreirajTablu(n)};\n\tfor(int i=0;i<n;i++) {\n\t\tfor(int j=0;j<n;j++)\n\t\t\tt[i][j]=Polje::Prazno;\n\t}\n\t\n\tfor(unsigned int i=0;i<mine.size();i++)\n\t{\n\t\tfor(int j=0;j<2;j++)\n\t\t{\n\t\t\tt[ mine[i][0] ][ mine[i][1] ] = Polje::Mina;\n\t\t}\n\t}\n\treturn t;\n}\n\n\nvector<vector<int>> PrikaziOkolinu(const Tabla &polja, int x, int y)\n{\n\tif( x==0 || y==0 || x==int(polja.size()-1) || y==int(polja.size()-1) )\n\t\tthrow domain_error(\"Polje (x,y) ne postoji\");\n\t\t\n\tvector<vector<int>> okolina;\n\tint brojac{0};\n\t\n\tint n{ int(polja.size()) };\n\t\n\tfor(int i=-1; i<2; i++)\n\t{\n\t\tvector<int> m;\n\t\tfor(int j=-1;j<2;j++)\n\t\t{\n\t\t\tbrojac=0;\n\t\t\tif(x+i>=0  &&  y+j>=0 && x+i<n  &&  y+j<n)\n\t\t\t{\n\t\t\t\t//pristupili smo elementu ploca[x-i][y-j], jos da provjerimo kakva je njegova okolina\n\t\t\t\tfor(int iPojedinacno=-1; iPojedinacno<2; iPojedinacno++)\n\t\t\t\t{\n\t\t\t\t\tfor(int jPojedinacno=-1; jPojedinacno<2; jPojedinacno++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(iPojedinacno==0 && jPojedinacno==0)  continue;\n\t\t\t\t\t\tif(x+i+iPojedinacno>=0  &&  y+j+jPojedinacno>=0 && x+i+iPojedinacno<n  \n\t\t\t\t\t\t  &&  y+j+jPojedinacno<n && polja[x+i+iPojedinacno][y+j+jPojedinacno]==Polje::Mina)\n\t\t\t\t\t\t  \t\tbrojac++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tm.push_back(brojac);\t\n\t\t}\n\t\tokolina.push_back(m);\n\t\tm.clear();\n\t}\n\t/*\n\tfor(int i=0;i<3;i++)\n\t{\n\t\tfor(int j=0;j<3;j++)    cout<<okolina[i][j]<<\" \";\n\t\tcout<<endl;\n\t}*/\n\t\n\treturn okolina;\t\n}\n\n\nvoid BlokirajPolje(Tabla &polja, int x, int y)\n{\n\tif(x<0 || y<0 || x>int(polja.size()-1) || y>int(polja.size()-1)  )\n\t\tthrow domain_error(\"Polje (x,y) ne postoji\");\n\tfor(int i=0;i<3;i++)\n\t{\n\t\tif(polja[x][y]==Polje(i))    polja[x][y]=Polje(i+3);\n\t}\n}\n\n\nvoid DeblokirajPolje(Tabla &polja, int x, int y)\n{\n\tif(x<0 || y<0 || x>int(polja.size()-1) || y>int(polja.size()-1)  )\n\t\tthrow domain_error(\"Polje (x,y) ne postoji\");\n\tfor(int i=0;i<3;i++)\n\t{\n\t\tif(polja[x][y]==Polje(i+3))    polja[x][y]=Polje(i);\n\t}\n}\n\n\nStatus Idi(Tabla &polja, int &x, int &y, Smjerovi smjer)\n{\n\tint dimTable{ int(polja.size()) };\n\tpolja[x][y] = Polje::Posjeceno;\n\t\n\tStatus statusIgre{ Status::NijeKraj };\n\t\n\tbool mrtviSmo{false}, pobijediliSmo{false};\n\t\n\tif(smjer==Smjerovi::GoreLijevo)\n\t{\n\t\tif(x-1<0 || y-1<0 || x-1>=dimTable || y-1>=dimTable )\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x-1][y-1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx-=1;\n\t\ty-=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::Gore)\n\t{\n\t\tif(x-1<0 || x-1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x-1][y]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx-=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::GoreDesno)\n\t{\n\t\tif(x-1<0 || y+1<0 || x-1>=dimTable || y+1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x-1][y+1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx-=1;\n\t\ty+=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\t\n\telse if(smjer==Smjerovi::Desno)\n\t{\n\t\tif(y+1<0 || y+1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x][y+1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\ty+=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::DoljeDesno)\n\t{\n\t\tif(x+1<0 || y+1<0 || x+1>=dimTable || y+1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x+1][y+1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx+=1;\n\t\ty+=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::Dolje)\n\t{\n\t\tif(x+1<0 || x+1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x+1][y]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx+=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::DoljeLijevo)\n\t{\n\t\tif(x+1<0 || y-1<0 || x+1>=dimTable || y-1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x+1][y-1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx+=1;\n\t\ty-=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::Lijevo)\n\t{\n\t\tif(y-1<0 || y-1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x][y-1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\ty-=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\tif(mrtviSmo)\n\t{\n\t\tfor(int i=0;i<dimTable;i++)\n\t\t{\n\t\t\tfor(int j=0;j<dimTable;j++)  polja[i][j]=Polje::Prazno;\n\t\t}\n\t\t//polja.clear(); //???\n\t\tstatusIgre = Status::KrajPoraz;\n\t\treturn statusIgre;\n\t}\n\t\n\tif(pobijediliSmo)\n\t{\n\t\tstatusIgre = Status::KrajPobjeda;\n\t\treturn statusIgre;\n\t}\n\t\n\treturn Status::NijeKraj;\n}\n\nStatus Idi(Tabla &polja, int &x, int &y, int novi_x, int novi_y)\n{\n\tint dimTable{ int(polja.size()) };\n\tpolja[x][y]=Polje::Posjeceno;\n\t\n\tx=novi_x;\n\ty=novi_y;\n\t\n\tStatus statusIgre{ Status::NijeKraj };\n\tbool mrtviSmo{false}, pobijediliSmo{false};\n\t\n\tif(novi_x<0  ||  novi_y<0  ||  novi_x>=dimTable || novi_y>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\tif(polja[novi_x][novi_y]>Polje(2))  throw logic_error(\"Blokirano polje\");\n\tif(polja[novi_x][novi_y]==Polje::Mina)  mrtviSmo=true;\n\t\n\tif(mrtviSmo)  //ako smo nagazili na minu\n\t{\n\t\tfor(int i=0;i<dimTable;i++)\n\t\t{\n\t\t\tfor(int j=0;j<dimTable;j++)    polja[i][j]=Polje::Prazno;\n\t\t}\n\t\tstatusIgre = Status::KrajPoraz;\n\t\treturn statusIgre;\n\t}\n\t\n\tfor(int i=0;i<dimTable;i++)\n\t{\n\t\tfor(int j=0;j<dimTable;j++)\n\t\t{\n\t\t\tif(polja[i][j]!=Polje::Posjeceno)\n\t\t\t{\n\t\t\t\tpobijediliSmo=false;\n\t\t\t\treturn statusIgre;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(pobijediliSmo)\n\t{\n\t\tstatusIgre = Status::KrajPobjeda;\n\t\treturn statusIgre;\n\t}\n\t\n\treturn Status::NijeKraj;\n}\n\nbool UnosKomande(Komande &komanda, Smjerovi &smjer, int &x, int &y, KodoviGresaka &kod_greske)\n{\n\tchar prviZnak, drugiZnak, prvoSlovoSmjer;\n\tcin>>ws;\n\t\n\tprviZnak = cin.get();\n\tif(prviZnak=='P')\n\t{\n\t\tdrugiZnak=cin.get();\n\t\tif(drugiZnak=='1')   //Uneseno je PomjeriJednoMjesto\n\t\t{\n\t\t\tkomanda = Komande::PomjeriJednoMjesto;\n\t\t\t//while(cin.peek()!='\\n' && isspace(cin.peek()))  cin.get();\n\t\t\twhile (cin.peek()!='\\n' && isspace(cin.peek())) cin.get();\n\t\t\tif(cin.peek()=='\\n')\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcin>>ws;\n\t\t\tif(cin.peek()=='\\n')\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(cin.peek()=='G' && cin.get()=='G')\n\t\t\t{\n\t\t\t\tprvoSlovoSmjer='G';\n\t\t\t\tif(cin.peek()=='L' && cin.get()=='L')\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tsmjer=Smjerovi::GoreLijevo;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if(cin.peek()=='D' && cin.get()=='D')\n\t\t\t\t{\n\t\t\t\t\tsmjer=Smjerovi::GoreDesno;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if(cin>>ws && cin.get()=='\\n')\n\t\t\t\t{\n\t\t\t\t\tsmjer=Smjerovi::Gore;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\t\t\tcin.clear();\n\t\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\telse if(cin.peek()=='D' && cin.get()=='D')\n\t\t\t{\n\t\t\t\tif(cin.peek()=='o' && cin.get()=='o')\n\t\t\t\t{\n\t\t\t\t\tif(cin.peek()=='D' && cin.get()=='D')\n\t\t\t\t\t{\n\t\t\t\t\t\tsmjer = Smjerovi::DoljeDesno;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse if(cin.peek()=='L' && cin.get()=='L')\n\t\t\t\t\t{\n\t\t\t\t\t\tsmjer = Smjerovi::DoljeLijevo;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse if(cin>>ws && cin.get()=='\\n')\n\t\t\t\t\t{\n\t\t\t\t\t\tsmjer=Smjerovi::Dolje;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\t\t\t\tcin.clear();\n\t\t\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(cin>>ws && cin.get()=='\\n')\n\t\t\t\t{\n\t\t\t\t\tsmjer=Smjerovi::Desno;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\t\t\tcin.clear();\n\t\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\t\treturn false;\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(cin.peek()=='L' && cin.get()=='L')\n\t\t\t{\n\t\t\t\tsmjer=Smjerovi::Lijevo;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t//ako nije ni gore ni dolje ni desno ni lijevo\n\t\t\telse\n\t\t\t{\n\t\t\t\tkod_greske = KodoviGresaka::NeispravanParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdrugiZnak=0;\n\t\t}\n\t\t\n\t\telse if(drugiZnak=='>')\n\t\t{\n\t\t\twhile (cin.peek()!='\\n' && isspace(cin.peek())) cin.get();\n\t\t\tif(cin.peek()=='\\n')\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcin>>x>>ws;\n\t\t\tif(!cin)\n\t\t\t{\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\twhile (cin.peek()!='\\n' && isspace(cin.peek())) cin.get();\n\t\t\tif(cin.peek()=='\\n')\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcin>>y>>ws;\n\t\t\tif(!cin)\n\t\t\t{\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\twhile(cin.peek()!='\\n')\n\t\t\t{\n\t\t\t\tif(!isspace(cin.get()))\n\t\t\t\t{\n\t\t\t\t\tkod_greske=KodoviGresaka::SuvisanParametar;\n\t\t\t\t\tcin.clear();\n\t\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdrugiZnak=0;\n\t\t\tkomanda = Komande::PomjeriDalje;\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\telse if(drugiZnak=='O')\n\t\t{\n\t\t\t\n\t\t\twhile(cin.peek()!='\\n')\n\t\t\t{\n\t\t\t\tif(!isspace(cin.get()))\n\t\t\t\t{\n\t\t\t\t\tkod_greske=KodoviGresaka::SuvisanParametar;\n\t\t\t\t\tcin.clear();\n\t\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdrugiZnak=0;\n\t\t\tkomanda=Komande::PrikaziOkolinu;\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t//inace je pogresna komanda\n\t\t\n\t\telse\n\t\t{\n\t\t\tkod_greske = KodoviGresaka::PogresnaKomanda;\n\t\t\tcin.clear();\n\t\t\tcin.ignore(10000,'\\n');\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\telse if(prviZnak=='B')\n\t{\n\t\tcin>>ws;\n\t\twhile(cin.peek()!='\\n')\n\t\t{\n\t\t\tif(!isspace(cin.get()))\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\t\t\t\t\t\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcin>>x>>y;\n\t\tif(!cin)\n\t\t{\n\t\t\tcin.clear();\n\t\t\tcin.ignore(10000,'\\n');\n\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\treturn false;\n\t\t}\n\t\twhile(cin.peek()!='\\n')\n\t\t{\n\t\t\tif(!isspace(cin.get()))\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::SuvisanParametar;\t\t\t\t\t\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tkomanda = Komande::Blokiraj;\n\t\treturn true;\n\t}\n\t\n\telse if(prviZnak=='D')\n\t{\n\t\tcin>>ws;\n\t\twhile(cin.peek()!='\\n')\n\t\t{\n\t\t\tif(!isspace(cin.get()))\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\t\t\t\t\t\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcin>>x>>y;\n\t\t\n\t\tif(!cin)\n\t\t{\n\t\t\tcin.clear();\n\t\t\tcin.ignore(10000,'\\n');\n\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\treturn false;\n\t\t}\n\t\tcin>>ws;\n\t\twhile (cin.peek()!='\\n') \n\t\t{\tkod_greske=KodoviGresaka::SuvisanParametar;\n\t\t\tcin.clear();\n\t\t\tcin.ignore(10000,'\\n');\n\t\t\treturn false;\n\t\t}\n\t\tkomanda = Komande::Deblokiraj;\n\t\treturn true;\n\t}\n\t\t\n\telse if(prviZnak=='K')\n\t{\n\t\twhile(cin.peek()!='\\n')\n\t\t{\n\t\t\tif(!isspace(cin.get()))\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::SuvisanParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tkomanda = Komande::KreirajIgru;\n\t\treturn true;\n\t}\n\t\n\telse if(prviZnak=='Z')\n\t{\n\t\twhile(cin.peek()!='\\n')\n\t\t{\n\t\t\tif(!isspace(cin.get()))\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::SuvisanParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tkomanda = Komande::ZavrsiIgru;\n\t\treturn true;\n\t}\n\t\n\t//inace je pogresna komanda\n\telse\n\t{\n\t\tkod_greske=KodoviGresaka::PogresnaKomanda;\n\t\tcin.clear();\n\t\tcin.ignore(10000,'\\n');\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nvoid IzvrsiKomandu(Komande komanda, Tabla &polja, int &x, int &y,\n\tSmjerovi p_smjer=Smjerovi::Gore, int p_x=0, int p_y=0)\n{\n\tif(komanda==Komande::PomjeriJednoMjesto)\n\t{\n\t\tStatus stat{Idi(polja,x,y,p_smjer)};\n\t\tif(stat==Status::NijeKraj)\n\t\t\tcout<<\"Tekuca pozicija igraca je (\" << x << \",\" << y <<\")\"<<endl;\n\t\telse if(stat==Status::KrajPobjeda)\n\t\t\tcout<<\"Bravo, obisli ste sva sigurna polja\"<<endl;\n\t\telse  cout<<\"Nagazili ste minu\"<<endl;\n\t}\n\t\n\telse if(komanda==Komande::PomjeriDalje)\n\t{\n\t\tStatus stat{Idi(polja,x,y,p_x,p_y)};\n\t\tif(stat==Status::NijeKraj)\n\t\t\tcout<<\"Tekuca pozicija igraca je (\" << x << \",\" << y <<\")\"<<endl;\n\t\telse if(stat==Status::KrajPobjeda)\n\t\t\tcout<<\"Bravo, obisli ste sva sigurna polja\"<<endl;\n\t\telse  cout<<\"Nagazili ste minu\"<<endl;\n\t}\n\t\n\telse if(komanda==Komande::Blokiraj)  BlokirajPolje(polja,x,y);\n\telse if(komanda==Komande::Deblokiraj) DeblokirajPolje(polja,x,y);\n\telse if(komanda==Komande::PrikaziOkolinu) \n\t{\n\t\tvector<vector<int>> prikaz{ PrikaziOkolinu(polja,x,y) };\n\t\tfor(int i=0;i<3;i++)\n\t\t{\n\t\t\tfor(int j=0;j<3;j++)    cout<<prikaz[i][j]<<\" \";\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\telse if(komanda==Komande::ZavrsiIgru)\n\t{\n\t\tfor(int i=0;i<polja.size();i++)\n\t\t{\n\t\t\tfor(int j=0;j<polja[i].size();j++)\n\t\t\t{\n\t\t\t\tpolja[i][j]=Polje::Prazno;\n\t\t\t}\n\t\t\t//cout<<endl;\n\t\t}\n\t\tcout<<\"Dovidjenja!\";\n\t\tthrow runtime_error(\"Igra zavrsena\");\n\t}\n\t\n\telse if(komanda==Komande::KreirajIgru)\n\t{\n\t\tint n;\n\t\tcout<<\"Unesite broj polja: \";\n\t\tcin>>n;\n\t\tvector<vector<int>> mine;\n\t\tint x,y;\n\t\tchar znak{')'};\n\t\tcout<<\"Unesite pozicije mina: \";\n\t\twhile(znak==')')\n\t\t{\n\t\t\tcin>>znak;\n\t\t\tif(znak!='(')\n\t\t\t{\n\t\t\t\tif(znak=='.')   break;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\tcout<<\"Greska, unesite ponovo!\"<<endl;\n\t\t\t\tznak=')';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcin>>x;\n\t\t\tcin>>znak;\n\t\t\tif(znak!=',' || x>=n)\n\t\t\t{\n\t\t\t\tif(znak=='.')   break;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\tcout<<\"Greska, unesite ponovo!\"<<endl;\n\t\t\t\tznak=')';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcin>>y;\n\t\t\tcin>>znak;\n\t\t\tif(znak==')' && y<n)\n\t\t\t{\n\t\t\t\tvector<int> m;\n\t\t\t\tm.push_back(x);\n\t\t\t\tm.push_back(y);\n\t\t\t\tmine.push_back(m);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(znak=='.')   break;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\tcout<<\"Greska, unesite ponovo!\"<<endl;\n\t\t\t\tznak=')';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpolja = KreirajIgru(n,mine);\n\t}\n}\n\n\nvoid PrijaviGresku(KodoviGresaka kod)\n{\n\tif(kod==KodoviGresaka::PogresnaKomanda)\n\t\tcout<<\"Nerazumljiva komanda!\"<<endl;\n\telse if(kod==KodoviGresaka::NedostajeParametar)\n\t\tcout<<\"Komanda trazi parametar koji nije naveden!\"<<endl;\n\telse if(kod==KodoviGresaka::NeispravanParametar)\n\t\tcout<<\"Parametar komande nije ispravan!\"<<endl;\n\telse\n\t\tcout<<\"Zadan je suvisan parametar nakon komande!\"<<endl;\n}\n\n\nint main ()\n{\n\t\n\tTabla tab;\n\tKomande komanda;\n\tSmjerovi smjer;\n\tint x{0}, y{0}, tren_x{0}, tren_y{0};\n\tKodoviGresaka kod;\n\tbool rez{true};\n\twhile(rez && cout<<\"Unesite komandu: \")\n\t{\n\t\trez=UnosKomande(komanda, smjer, x, x, kod);\n\t\tif(rez) {\n\t\t\ttry {\n\t\t\t\tIzvrsiKomandu(komanda, tab, x, y, smjer, tren_x, tren_y);\n\t\t\t}\n\t\t\tcatch(runtime_error e) {rez=false;}\n\t\t\tcatch(exception e){\n\t\t\t\tcout<<e.what()<<endl;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tPrijaviGresku(kod);\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
    },
    "43": {
        "label": "0",
        "student3671": "#include <stdio.h>\n#include <math.h>\n#define pi 3.1415926\n#define broj_el 500\n\nint main() {\n\tint i;\n\tint j;\n\tint brojuglova;\n\tdouble uglovi[broj_el];\n\tint step[broj_el];\n\tint sekunde[broj_el];\n\tint minute[broj_el];\n\tint neg[broj_el];\n\t\n\tdo\n\t{\n\tprintf(\"Unesite broj uglova: \");\n\tscanf(\"%d\",&brojuglova);\n\t}\n\twhile(brojuglova<0 || brojuglova>500);\n\t\n\t\n\t\n\tfor(i=0;i<brojuglova;i++)\n\t{\n\t\tscanf(\"%lf\",&uglovi[i]);\n\t}\n\t\n\t\n\tfor(i=0;i<brojuglova;i++)\n\t{\n\t\tneg[i]=0;\n\t\tif(uglovi[i]<0)\n\t\t{\n\t\t\tneg[i]=1;\n\t\t}\n\t\tuglovi[i]=fabs(uglovi[i]); \n\t\t\n\t\tuglovi[i]=uglovi[i]*180/pi;\n\t\tstep[i]=floor(uglovi[i]);\n\t\tminute[i]=floor((uglovi[i]-step[i])*60);\n\t\tsekunde[i]=floor(((uglovi[i]-step[i])*60-minute[i])*60);\n\t\tif(((uglovi[i]-step[i])*60-minute[i])*60-sekunde[i]>0.5)\n\t\t{sekunde[i]++;}\n\t\tif(sekunde[i]==60)\n\t\t{sekunde[i]=0; minute[i]++;}\n\t\tif(minute[i]==60)\n\t\t{minute[i]=0; step[i]++;} \n\t}\n\t\n\tfor(i=0;i<brojuglova;i++)\n\t{\n\t\tif(sekunde[i]>30)\n\t\t{\n\t\tfor(j=i;j<brojuglova-1;j++)\n\t\t{\n\t\t\t\tstep[j]=step[j+1];\n\t\t\t\tminute[j]=minute[j+1];\n\t\t\t\tsekunde[j]=sekunde[j+1];\n\t\t}\n\t\t\t\tbrojuglova--;\n\t\t\t\ti--;\n\t\t}\n\t}\n\t\n\tprintf(\"Uglovi su: \\n\");\n\tfor(i=0;i<brojuglova;i++)\n\t{\n\t\tif(neg[i]==1)\n\t\t{\n\t\t\tprintf(\"-\");\n\t\t}\n\t\tprintf(\"%d stepeni %d minuta %d sekundi\\n\",step[i],minute[i],sekunde[i]);\n\t} \n\t\n\treturn 0;\n}",
        "student4059": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define PI 3.1415926\n\nint main() {\n\tdouble uglovi [500], u_stepenima; \n\tint broj_elemenata;\n\tint i, j, stepeni, min, sec, znak;\n\tprintf(\"Unesite broj uglova: \");\n\tscanf(\"%d\",&broj_elemenata);\n\tfor(i=0; i<broj_elemenata; i++)\n\t\tscanf(\"%lf\", &uglovi[i]);\n\tfor(i=0; i<broj_elemenata; i++) {\n\t\tif(uglovi[i] >= 0)\n\t\t\tznak = 1;\n\t\telse\n\t\t\tznak = -1;\n\t\tu_stepenima = 180/PI*uglovi[i];\n\t\tstepeni = (int)u_stepenima;\n\t\tmin = (int)((u_stepenima-(int)u_stepenima)*60);\n\t\tsec = (int)(((u_stepenima-(int)u_stepenima)*60 - (int)((u_stepenima-(int)u_stepenima)*60))*60 + znak*0.5);\n\t\tif(abs(sec) == 60) sec = 0;\n\t\tif(abs(sec)>30) {\n\t\t\tfor(j=i; j<broj_elemenata-1; j++) \n\t\t\t\tuglovi[j] = uglovi[j+1];\n\t\t\tbroj_elemenata--;\n\t\t\ti--;\n\t\t}\n\t} \n\tprintf(\"Uglovi su:\\n\");\n\tfor(i=0; i<broj_elemenata; i++) {\n\t\tu_stepenima = 180/PI*uglovi[i];\n\t\tstepeni = (int)u_stepenima;\n\t\tif(uglovi[i] >= 0)\n\t\t\tznak = 1;\n\t\telse\n\t\t\tznak = -1;\n\t\tmin = (int)((u_stepenima-(int)u_stepenima)*60);\n\t\tsec = (int)(((u_stepenima-(int)u_stepenima)*60 - (int)((u_stepenima-(int)u_stepenima)*60))*60 + znak*0.5);\n\t\tmin = abs(min);\n\t\tsec = abs(sec);\n\t\t/*korekcija*/\n\t\tif(sec == 60) {\n\t\t\tmin = min + sec/60;\n\t\t\tsec = 0;\n\t\t\tif(min == 60) {\n\t\t\t\tstepeni = stepeni + znak*min/60;\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d stepeni %d minuta %d sekundi\\n\", stepeni, min, sec);\n\t}\n\treturn 0;\n}\n"
    },
    "44": {
        "label": "1",
        "student2870": "#include <stdio.h>\n#include <math.h>\n#define e 0.0001\n\nint main() {\n\t\n\tint sA, vA, sB, vB,i,j;\n\tdouble nizA[100][100],nizB[100][100];\n\t\n\tprintf(\"Unesite sirinu i visinu matrice A: \");\n\tscanf(\"%d %d\", &sA,&vA);\n\tprintf(\"Unesite clanove matrice A: \");\n\tfor(i=0;i<vA;i++)\n\t{\n\t\tfor(j=0;j<sA;j++)\n\t\t{\n\t\t\tscanf(\"%lf\", &nizA[i][j]);\n\t\t}\n\t}\n\t\n\tprintf(\"Unesite sirinu i visinu matrice B: \");\n\tscanf(\"%d %d\", &sB,&vB);\n\tprintf(\"Unesite clanove matrice B: \");\n\tfor(i=0;i<vB;i++)\n\t{\n\t\tfor(j=0;j<sB;j++)\n\t\t{\n\t\t\tscanf(\"%lf\", &nizB[i][j]);\n\t\t}\n\t}\n\t\n\tif(vA!=sB || sA!=vB)\n\t{\n\t\tprintf(\"NE\\n\");\n\t\treturn 1;\n\t}\n\t\n\telse\n\t{\n\t\tfor(i=0;i<vB;i++)\n\t\t{\n\t\t\tfor(j=0;j<sB;j++)\n\t\t\t{\n\t\t\t\tif(fabs(nizA[vA-j-1][i]-nizB[i][j])>e)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"NE\\n\");\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\tprintf(\"DA\\n\");\n\treturn 0;\n}\n",
        "student9705": "#include <stdio.h>\n#include <math.h>\n#define e 0.001\nint main() {\n\t\n\tint Ma,Na,Mb,Nb,i,j,logicki=0;\n\tint A[101][101];\n\tint B[101][101];\nprintf(\"Unesite sirinu i visinu matrice A: \");\nscanf(\"%d %d\",&Ma,&Na);\nprintf(\"Unesite clanove matrice A: \");\nfor(i=0;i<Na;i++)\n{\n    for(j=0;j<Ma;j++)\n{\nscanf(\"%d\",&A[i][j]);\n}\n\n}\nprintf(\"Unesite sirinu i visinu matrice B: \");\nscanf(\"%d %d\",&Mb,&Nb);\nprintf(\"Unesite clanove matrice B: \");\nfor(i=0;i<Nb;i++)\n{\n    for(j=0;j<Mb;j++)\n    {\n        scanf(\"%d\",&B[i][j]);\n    }\n}\nif(Ma==Nb && Na==Mb)\n{\n    for(i=0;i<Na;i++)\n    {\n        for(j=0;j<Ma;j++)\n        \n            if(fabs(A[i][j]-B[j][Mb-1-i])>e)\n            {\n                printf(\"NE\\n\");\n                return 1;\n            }\n            else logicki=1;\n        \n    }\n    \n}else\n{\n    printf(\"NE\\n\");\n};\n\nif(logicki==1) printf(\"DA\\n\");\n\nreturn 0;\n}\n"
    },
    "45": {
        "label": "0",
        "student8124": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\n    long novi_broj = 0, shift = 1;\n    int  broj, cifra1, cifra2;\n\n    printf(\"Unesite broj: \");\n    scanf(\"%i\", &broj);\n    \n    if (broj < 0) \n      broj = abs(broj);\n\n    while (broj > 9) {\n       cifra1 = broj % 10;\n       broj = broj / 10;\n       cifra2 = broj % 10;\n       novi_broj += shift * abs(cifra2-cifra1);\n       shift *= 10;\n    };\n\n    printf(\"%i\", novi_broj);\n\n    return 0;\n}",
        "student8317": "#include <stdio.h>\n#include<stdlib.h>\n#include<math.h>\n\nint main() {\nint razlika,cifra1,cifra2,stepen=0,novibr=0,broj;\nprintf(\"Unesite broj: \");\nscanf(\"%d\", &broj);\nbroj=abs(broj);\n\nif(broj<10)\n{\n\tnovibr=0;\n\tprintf(\"%d\",novibr);\n\treturn 1;\n}\nelse\n{\n\tdo\n{\n\tcifra1=broj%10;\n\tbroj=broj/10;\n\tcifra2=broj%10;\n\trazlika=abs(cifra2-cifra1);\n\tnovibr=novibr+razlika*pow(10,stepen);\n\tstepen++;\n\t\t\t}\n while(broj>9);\nprintf(\"%d\",novibr);\n}\n\n\treturn 0;\n}\n"
    },
    "46": {
        "label": "1",
        "student4096": "#include <stdio.h>\nint main()\n{\n    char T,B,M,novi_red;\n    float P1,C1,H1,P2,C2,H2,P3,C3,H3,R1,R2,R3,R4;\n    P1=6.80;\n    P2=8.00;\n    P3=5.30;\n    H1=3.30;\n    H2=3.00;\n    H3=5.00;\n    C1=5.00;\n    C2=3.90;\n    C3=6.00;\n    printf(\"Unesite jelo za Tarika: \");\n    scanf(\"%c\",&T);\n    scanf(\"%c\",&novi_red);\n    printf(\"Unesite jelo za Bojana: \");\n    scanf(\"%c\",&B);\n    scanf(\"%c\",&novi_red);\n    printf(\"Unesite jelo za Mirzu: \");\n    scanf(\"%c\",&M);\n    scanf(\"%c\",&novi_red);\n\n    if(T=='P' && B=='P' && M=='P') {\n        R1=P1+P1+P1;\n        R2=P2+P2+P2;\n        R3=P3+P3+P3;\n        R4 = R1 - R1/10;\n    } else if(T=='H' && B=='H' && M=='H') {\n        R1=3*H1;\n        R2=3*H2;\n        R3=3*H3;\n        R4 = R1 - R1/10;\n    }\n    else if(T=='C' && B=='C' && M=='C') {\n        R1=C1+C1+C1;\n        R2=C2+C2+C2;\n        R3=C3+C3+C3;\n        R4 = R1 - R1/10;\n    }\n    else if(T=='P' && B=='P' && M=='H') {\n        R1=P1+P1+H1;\n        R2=P2+P2+H2;\n        R3=P3+P3+H3;\n        R4 = 2*P1 - 2*P1/10 + H1;\n     \n    } else if(T=='P' && B=='P' && M=='C') {\n        R1=P1+P1+C1;\n        R2=P2+P2+C2;\n        R3=P3+P3+C3;\n        R4 = 2*P1 - 2*P1/10 + C1;\n    } else if(T=='P' && B=='H' && M=='C') {\n        R1=P1+H1+C1;\n        R2=P2+H2+C2;\n        R3=P3+H3+C3;\n        R4 = P1 - P1/10 + H1 + C1;\n    }\n    else if(T=='C' && B=='C' && M=='P') {\n        R1=C1+C1+P1;\n        R2=C2+C2+P2;\n        R3=C3+C3+P3;\n        R4= 2*C1 - 2*C1/10 + P1;\n    }\n    else if(T=='C' && B=='C' && M=='H') {\n        R1=C1+C1+H1;\n        R2=C2+C2+H2;\n        R3=C3+C3+H3;\n        R4= 2*C1 - 2*C1/10 + H1;\n    } else if(T=='H' && B=='H' && M=='P') {\n        R1=H1+H1+P1;\n        R2=H2+H2+P2;\n        R3=H3+H3+P3;\n        R4= 2*H1 + P1 - P1/10;\n    } else if(T=='H' && B=='H' && M=='C') {\n        R1=H1+H1+C1;\n        R2=H2+H2+C2;\n        R3=H3+H3+C3;\n        R4= 2*H1 - 2*H1/10 + C1;\n    } else if(T=='H' && B=='P' && M=='P') {\n        R1=H1+P1+P1;\n        R2=H2+P2+P2;\n        R3=H3+P3+P3;\n        R4= 2*P1 - 2*P1/10 + H1;\n    } else if(T=='P' && B=='H' && M=='P') {\n        R1=P1+H1+P1;\n        R2=P2+H2+P2;\n        R3=P3+H3+P3;\n        R4= 2*P1 - 2*P1/10 + H1;\n    } else if(T=='P' && B=='C' && M=='P') {\n        R1=P1+C1+P1;\n        R2=P2+C2+P2;\n        R3=P3+C3+P3;\n        R4 = 2*P1 - 2*P1/10 + C1;\n    } else if(T=='C' && B=='P' && M=='P') {\n        R1=C1+P1+P1;\n        R2=C2+P2+P2;\n        R3=C3+P3+P3;\n        R4 = 2*P1 - 2*P1/10 + C1;\n    } else if(T=='H' && B=='P' && M=='C') {\n        R1=H1+P1+C1;\n        R2=H2+P2+C2;\n        R3=H3+P3+C3;\n        R4 = P1 - P1/10 + H1 + C1;\n    } else if(T=='C' && B=='P' && M=='H') {\n        R1=C1+P1+H1;\n        R2=C2+P2+H2;\n        R3=C3+P3+H3;\n        R4 = P1 - P1/10 + H1 + C1;\n    } else if(T=='C' && B=='H' && M=='P') {\n        R1=C1+H1+P1;\n        R2=C2+H2+P2;\n        R3=C3+H3+P3;\n        R4 = P1 - P1/10 + H1 + C1;\n    } else if(T=='H' && B=='C' && M=='P') {\n        R1=H1+C1+P1;\n        R2=H2+C2+P2;\n        R3=H3+C3+P3;\n        R4 = P1 - P1/10 + H1 + C1;\n    } else if(T=='P' && B=='C' && M=='H') {\n        R1=P1+C1+H1;\n        R2=P2+C2+H2;\n        R3=P3+C3+H3;\n        R4 = P1 - P1/10 + H1 + C1;\n    } else if(T=='P' && B=='C' && M=='C') {\n        R1=P1+C1+C1;\n        R2=P2+C2+C2;\n        R3=P3+C3+C3;\n        R4= 2*C1 - 2*C1/10 + P1;\n    } else if(T=='C' && B=='P' && M=='C') {\n        R1=C1+P1+C1;\n        R2=C2+P2+C2;\n        R3=C3+P3+C3;\n        R4= 2*C1 - 2*C1/10 + P1;\n    } else if(T=='H' && B=='C' && M=='C') {\n        R1=H1+C1+C1;\n        R2=H2+C2+C2;\n        R3=H3+C3+C3;\n        R4= 2*C1 - 2*C1/10 + H1;\n    } else if(T=='C' && B=='H' && M=='C') {\n        R1=C1+H1+C1;\n        R2=C2+H2+C2;\n        R3=C3+H3+C3;\n        R4= 2*C1 - 2*C1/10 + H1;\n    } else if(T=='H' && B=='P' && M=='H') {\n        R1=H1+P1+H1;\n        R2=H2+P2+H2;\n        R3=H3+P3+H3;\n        R4= 2*H1 + P1 - P1/10;\n    } else if(T=='P' && B=='H' && M=='H') {\n        R1=P1+H1+H1;\n        R2=P2+H2+H2;\n        R3=P3+H3+H3;\n        R4= 2*H1 + P1 - P1/10;\n    } else if(T=='C' && B=='H' && M=='H') {\n        R1=C1+H1+H1;\n        R2=C2+H2+H2;\n        R3=C3+H3+H3;\n        R4= 2*H1 + C1 - 2*H1/10;\n    } else {\n        R1=H1+C1+H1;\n        R2=H2+C2+H2;\n        R3=H3+C3+H3;\n       R4= 2*H1 + C1 - 2*H1/10;\n    }\n    \n     if(R1<R2 && R1<R3) \n        {\n            printf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\",R1);\n        } \n        else if(R2<R1 && R2<R3) \n        {\n            printf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\",R2);\n            if(R4<R2) {\n                printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\",R4);\n            }\n        } \n        else \n        {\n            printf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\",R3);\n            if(R4<R3)\n            {\n                printf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\",R4);\n            }\n        }\n    return 0;\n}\n",
        "student8172": "#include <stdio.h>\n\nint main()\n{\n\tchar T,B,M,novi_red;\n\tfloat P1,C1,H1,P2,C2,H2,P3,C3,H3,R1,R2,R3,R4;\n\tP1=6.80;\n\tP2=8.00;\n\tP3=5.30;\n\tH1=3.30;\n\tH2=3.00;\n\tH3=5.00;\n\tC1=5.00;\n\tC2=3.90;\n\tC3=6.00;\n\tprintf(\"Unesite jelo za Tarika: \");\n\tscanf(\"%c\",&T);\n\tscanf(\"%c\",&novi_red);\n\tprintf(\"Unesite jelo za Bojana: \");\n\tscanf(\"%c\",&B);\n\tscanf(\"%c\",&novi_red);\n\tprintf(\"Unesite jelo za Mirzu: \");\n\tscanf(\"%c\",&M);\n\t\n\tscanf(\"%c\",&novi_red);\n\t\n\tif(T=='P' && B=='P' && M=='P') {\n\t\tR1=P1+P1+P1;\n\t\tR2=P2+P2+P2;\n\t\tR3=P3+P3+P3;\n\t\tR4 = R1 - R1/10;\n\t}\n\t\t\telse if (T=='H' && B=='H' && M=='H') {\n\t\t\t\tR1=3*H1;\n\t\t\t\tR2=3*H2;\n\t\t\t\tR3=3*H3;\n\t\t\t\tR4 = R1 - R1/10;\n\t\t\t}\n\t\t\t\t\telse if (T=='C' && B=='C' && M=='C') {\n\t\t\t\t\t\tR1=C1+C1+C1;\n\t\t\t\t\t\tR2=C2+C2+C2;\n\t\t\t\t\t\tR3=C3+C3+C3;\n\t\t\t\t\t\tR4 = R1 - R1/10;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='P' && B=='P' && M=='H') {\n\t\t\t\t\t\tR1=P1+P1+H1;\n\t\t\t\t\t\tR2=P2+P2+H2;\n\t\t\t\t\t\tR3=P3+P3+H3;\n\t\t\t\t\t\tR4 = 2*P1 - 2*P1/10 + H1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='P' && B=='P' &&  M=='C') {\n\t\t\t\t\t\tR1=P1+P1+C1;\n\t\t\t\t\t\tR2=P2+P2+C2;\n\t\t\t\t\t\tR3=P3+P3+C3;\n\t\t\t\t\t\tR4 = 2*P1 - 2*P1/10 + C1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='P' && B=='H' && M=='C') {\n\t\t\t\t\t\tR1=P1+H1+C1;\n\t\t\t\t\t\tR2=P2+H2+C2;\n\t\t\t\t\t\tR3=P3+H3+C3;\n\t\t\t\t\t\tR4 = P1 - P1/10 + H1 + C1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='C' && B=='C' && M=='P') {\n\t\t\t\t\tR1=C1+C1+P1;\n\t\t\t\t\tR2=C2+C2+P2;\n\t\t\t\t\tR3=C3+C3+P3;\n\t\t\t\t\tR4= 2*C1 - 2*C1/10 + P1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='C' && B=='C' && M=='H') {\n\t\t\t\t\t\tR1=C1+C1+H1;\n\t\t\t\t\t\tR2=C2+C2+H2;\n\t\t\t\t\t\tR3=C3+C3+H3;\n\t\t\t\t\t\tR4= 2*C1 - 2*C2/10 + H1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(T=='H' && B=='H' && M=='P') {\n\t\t\t\t\t\tR1=H1+H1+P1;\n\t\t\t\t\t\tR2=H2+H2+P2;\n\t\t\t\t\t\tR3=H3+H3+P3;\n\t\t\t\t\t\tR4= 2*H1 + P1 - P1/10;\n\t\t\t\t\t}\n\t\t\t\t\telse if(T=='H' && B=='H' && M=='C') {\n\t\t\t\t\tR1=H1+H1+C1;\n\t\t\t\t\tR2=H2+H2+C2;\n\t\t\t\t\tR3=H3+H3+C3;\n\t\t\t\t\tR4= 2*H1 - 2*H1/10 + C1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(T=='H' && B=='P' && M=='P') {\n\t\t\t\t\t\tR1=H1+P1+P1;\n\t\t\t\t\t\tR2=H2+P2+P2;\n\t\t\t\t\t\tR3=H3+P3+P3;\n\t\t\t\t\t\tR4= 2*P1 - 2*P1/10 + H1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(T=='P' && B=='H' && M=='P') {\n\t\t\t\t\t\tR1=P1+H1+P1;\n\t\t\t\t\t\tR2=P2+H2+P2;\n\t\t\t\t\t\tR3=P3+H3+P3;\n\t\t\t\t\t\tR4= 2*P1 - 2*P1/10 + H1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='P' && B=='C' && M=='P') {\n\t\t\t\t\tR1=P1+C1+P1;\n\t\t\t\t\tR2=P2+C2+P2;\n\t\t\t\t\tR3=P3+C3+P3;\n\t\t\t\t\tR4= 2*P1 - 2*P1/10 + C1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='C' && B=='P' && M=='P') {\n\t\t\t\t\t\tR1=C1+P1+P1;\n\t\t\t\t\t\tR2=C2+P2+P2;\n\t\t\t\t\t\tR3=C3+P3+P3;\n\t\t\t\t\t\tR4= 2*P1 - 2+P1/10 + C1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='H' && B=='P' && M=='C'){\n\t\t\t\t\t\tR1=H1+P1+C1;\n\t\t\t\t\t\tR2=H2+P2+C2;\n\t\t\t\t\t\tR3=H3+P3+C3;\n\t\t\t\t\t\tR4 = P1 - P1/10 + H1 + C1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='C' && B=='P' && M=='H') {\n\t\t\t\t\t\tR1=C1+P1+H1;\n\t\t\t\t\t\tR2=C2+P2+H2;\n\t\t\t\t\t\tR3=C3+P3+H3;\n\t\t\t\t\t\tR4 = P1 - P1/10 + H1 + C1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='C' && B=='H' && M=='P') {\n\t\t\t\t\t\tR1=C1+H1+P1;\n\t\t\t\t\t\tR2=C2+H2+P2;\n\t\t\t\t\t\tR3=C3+H3+P3;\n\t\t\t\t\t\tR4 = P1 - P1/10 + H1 + C1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(T=='H' && B=='C' && M=='P') {\n\t\t\t\t\t\tR1=H1+C1+P1;\n\t\t\t\t\t\tR2=H2+C2+P2;\n\t\t\t\t\t\tR3=H3+C3+P3;\n\t\t\t\t\t\tR4 = P1 - P1/10 + H1 + C1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='P' && B=='C' && M=='H') {\n\t\t\t\t\t\tR1=P1+C1+H1;\n\t\t\t\t\t\tR2=P2+C2+H2;\n\t\t\t\t\t\tR3=P3+C3+H3;\n\t\t\t\t\t\tR4 = P1 - P1/10 + H1 + C1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(T=='P' && B=='C' && M=='C') {\n\t\t\t\t\t\tR1=P1+C1+C1;\n\t\t\t\t\t\tR2=P2+C2+C2;\n\t\t\t\t\t\tR3=P3+C3+C3;\n\t\t\t\t\t\tR4 = 2*C1 - 2*C1/10 + P1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='C' && B=='P' && M=='C') {\n\t\t\t\t\tR1=C1+P1+C1;\n\t\t\t\t\tR2=C2+P2+C2;\n\t\t\t\t\tR3=C3+P3+C3;\n\t\t\t\t\tR4 = 2*C1 - 2*C1/10 + P1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='H' && B=='C' && M=='C') {\n\t\t\t\t\t\tR1=H1+C1+C1;\n\t\t\t\t\t\tR2=H2+C2+C2;\n\t\t\t\t\t\tR3=H3+C3+C3;\n\t\t\t\t\t\tR4 = 2*C1 - 2*C1/10 + H1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='C' && B=='H' && M=='C') {\n\t\t\t\t\tR1=C1+H1+C1;\n\t\t\t\t\tR2=C2+H2+C2;\n\t\t\t\t\tR3=C3+H3+C3;\n\t\t\t\t\tR4 = 2*C1 - 2*C1/10 + H1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(T=='H' && B=='P' && M=='H') {\n\t\t\t\t\t\tR1=H1+P1+H1;\n\t\t\t\t\t\tR2=H2+P2+H2;\n\t\t\t\t\t\tR3=H3+P3+H3;\n\t\t\t\t\t\tR4 = 2*H1 + P1 - P1/10;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='P' && B=='H' && M=='H') {\n\t\t\t\t\t\tR1=P1+H1+H1;\n\t\t\t\t\t\tR2=P2+H2+H2;\n\t\t\t\t\t\tR3=P3+H3+H3;\n\t\t\t\t\t\tR4 = 2*H1 + P1 - P1/10;\n\t\t\t\t\t}\n\t\t\t\t\telse if (T=='C' && B=='H' && M=='H') {\n\t\t\t\t\tR1=C1+H1+H1;\n\t\t\t\t\tR2=C2+H2+H2;\n\t\t\t\t\tR3=C3+H3+H3;\n\t\t\t\t\tR4 = 2*H1 + C1 - 2*H1/10;\n\t\t\t\t\t} \n\t\t\t\t\telse {\n\t\t\t\t\t\tR1=H1+C1+H1;\n\t\t\t\t\t\tR2=H2+C2+H2;\n\t\t\t\t\t\tR3=H3+C3+H3;\n\t\t\t\t\t\tR4 = 2*H1 + C1 - 2*H1/10;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(R1<R2 && R1<R3)\n\t\t\t\t\t{ \n\t\t\t\t\tprintf (\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" (%.2f KM).\\n\",R1);\n\t\t\t\t\t}\n\t\t\t\t\telse if(R2<R1 && R2<R3)\n\t\t\t\t\t{\n\t\t\t\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" (%.2f KM).\\n\",R2);\n\t\t\t\t\tif(R4<R2) {\n\t\t\t\t\t\tprintf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\",R4);\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" (%.2f KM).\\n\",R3);\n\t\t\t\t\t\tif(R4<R3)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintf(\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\",R4);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\treturn 0;\n}\n\t\t\t\t"
    },
    "47": {
        "label": "0",
        "student7193": "#include <stdio.h>\n\nint slovo(char x) {\n\treturn ((x >= 'a' && x <= 'z') || (x >= 'A' && x <= 'Z'));\n}\n\nchar* izbaciRijeci (char* recenica, int* niz, int n) {\n\tchar* pocetakRecenice = recenica, *pocetak, *kraj;\n\tint redniBroj = 0, x = 0;\n\t\n\tif (n == 0) \n\t\treturn recenica;\n\t\n\twhile (*recenica != 0) {\n\t\tif (redniBroj == niz[x]) {\n\t\t\tpocetak = recenica;\n\t\t\twhile (*recenica != 0 && slovo(*recenica) != 0) {\n\t\t\t\trecenica++;\n\t\t\t}\n\t\t\tif (*recenica == 0) {\n\t\t\t\t*pocetak = 0;\n\t\t\t} else {\n\t\t\t\tkraj = recenica;\n\t\t\t\trecenica = pocetak;\n\t\t\t\twhile (*kraj != 0) {\n\t\t\t\t\t*pocetak++ = *kraj++;\n\t\t\t\t}\n\t\t\t\t*pocetak = 0;\n\t\t\t}\n\t\t\tx++;\n\t\t\tif (x == n) {\n\t\t\t\treturn pocetakRecenice;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (slovo(*recenica) == 0) {\n\t\t\tredniBroj++;\n\t\t\twhile (slovo(*(recenica+1)) == 0)\n\t\t\t\trecenica++;\n\t\t}\n\t\t\n\t\tif (*recenica != 0) {\n\t\t\trecenica++;\n\t\t}\n\t}\n\treturn pocetakRecenice;\n}\n\nint isteRijeci(char* rijec1, char* rijec2) {\n\twhile (*rijec1 != 0 && *rijec2 != 0) {\n\t\tif (!(*rijec1 == *rijec2 || *rijec1-32 == *rijec2 || *rijec1 == *rijec2-32)) \n\t\t\treturn 0;\n\t\trijec1++;\n\t\trijec2++;\n\t}\n\tif (*rijec1 == 0 && *rijec2 == 0)\n\t\treturn 1;\n\telse \n\t\treturn 0;\n}\n\nvoid postavi(int* niz) {\n\tint i;\n\tfor (i = 0; i < 1000; i++) {\n\t\tniz[i] = 0;\n\t}\n}\n\nchar* izbaci_najcescu(char* s) {\n\tchar* pocetak = s, rijeci[1000][1000];\n\tint brojRijeci = 0, x, i, j, max = 0, n = 0, istih;\n\tint ponavljanja[1000] = {0}, izbacivanja[1000] = {0};\n\t\n\twhile (*s != 0 && slovo(*s) == 0 && slovo(*(s+1)) == 0)\n\t\ts++;\n\twhile (*s != 0) {\n\t\tx = 0;\n\t\t\n\t\twhile (*s != 0 && slovo(*s)) {\n\t\t\trijeci[brojRijeci][x++] = *s++;\n\t\t}\n\t\trijeci[brojRijeci][x] = 0;\n\t\tbrojRijeci++;\n\t\tif (*s != 0 && slovo(*s) == 0) {\n\t\t\twhile (slovo(*(s+1)) == 0)\n\t\t\t\ts++;\n\t\t}\n\t\tif (*s != 0) {\n\t\t\ts++;\n\t\t}\n\t}\n\t\n\tfor (i = 0; i < brojRijeci; i++) {\n\t\tistih = 0;\n\t\tpostavi(ponavljanja);\n\t\tfor (j = 0; j < brojRijeci; j++) {\n\t\t\tif (isteRijeci(rijeci[i], rijeci[j])) {\n\t\t\t\tistih++;\n\t\t\t\tponavljanja[j] = 1;\n\t\t\t}\n\t\t}\n\t\tif (istih > max) {\n\t\t\tmax = istih;\n\t\t\tn = 0;\n\t\t\tfor (j = 0; j < brojRijeci; j++) {\n\t\t\t\tif (ponavljanja[j] == 1) {\n\t\t\t\t\tizbacivanja[n++] = j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tizbaciRijeci(pocetak, izbacivanja, n);\n\treturn pocetak;\n}\n\nint main() {\n\tchar tekst[100] = \"a a a b b c c\";\n\tprintf(\":%s:\\n\", izbaci_najcescu(tekst));\n\treturn 0;\n}\n",
        "student8480": "#include <stdio.h>\n#define true 1\n#define false 0\n#define bool int\n\n\nvoid kopiraj(char *m, char* poc,char* kraj){  \n\twhile(poc!=kraj){  //sve sto je izmedju poc i kraja prebacuje se u string m\n\t\t*m++=*poc++;\n\t\t}\n*m='\\0';\n}\n\n\nvoid izbaci_rijec(char *s, char *p){\n\tchar *s1=s;\n\twhile(*p!='\\0'){\n\t\t*s1=*p;\n\t\t s1++;\n\t\t p++;\n\t}\n*s1='\\0';\n}\n\n\nbool uporedi (char *s1, char *s2, char *p){ //uporedjujemo dvije rijeci, ako su iste vratimo true, a ako nisu onda false\n\twhile(s1!=s2 && *p!='\\0'){ //dok je prva rijec razlicita od kraja prve rijeci i dok je druga rijec razlicita od kraja stringa\n\t\tif(*s1!=*p && *s1!=(*p+32) && *s1!=(*p-32))  return false;  /*ako nadjemo da nase slovo nije isto kao veliko ili malo slovo drugog stringa, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t odmah vratimo false, ako nije idemo kroz oba stringa */\n\t\t\t\ts1++;\n\t\t\t\tp++;\n\t\t\t}\n\t\n\tif(*p=='\\0' && s1==s2) return true; /* ako smo dosli do kraja sa drugim stringom, a sa prvim ako smo dosli na kraj rijeci, onda smo dosli do kraja\n\t\t\t\t\t\t\t\t\t\ti sva slova su ista pa vratimo true */\n\treturn false;\n}\n\n\nvoid prebroji(char *poc, char *kraj, int* broj){\n\tif(*kraj=='\\0') return;\n\tchar rijec[100];\n\t\n\tkopiraj(rijec,poc,kraj); //u niz charova spasimo sve izmedju poc i kraja rijeci, tj nas niz bude rijec\n\t\n\tchar*ostatak=kraj+1; //provjeravamo sve od te rijeci pa dalje kolilko ima ponavljanja u stringu \n\tbool neslovo=true;\n\n\twhile(*ostatak!='\\0'){\n\t\tif(!((*ostatak>='A' && *ostatak<='Z') || (*ostatak>='a' && *ostatak<='z'))) \n\t\t\tneslovo=true;\n\t\t\n\t\telse if(neslovo==true){\n\t\t\tneslovo=false;\n\t\t\t\n\t\t\tchar *p1=ostatak;\n\t\t\t\n\t\t\twhile((*p1>='A' && *p1<='Z') || (*p1>='a' && *p1<='z'))\t \t\n\t\t\t\tp1++;\n\t\t\t\n\t\t\tif(uporedi(ostatak,p1,rijec))  (*broj)++; //uporedjujemo svaku rijec sa zadanom, ako je ista, onda se broj ponavljanja nase rijeci poveca za 1\n\t\t\t}\n\t\tostatak++;\n\t}\n}\n\n\nchar *izbaci_najcescu(char *str){\n\tchar *p=str, *pocetak_najcesce=0, *kraj_najcesce, *pocetak_trenutne=0, *kraj_trenutne, *p1;\n\tint max=0, rel_max; //max je broj rijeci koja se najvise puta ponavlja, a rel_max je ponavljanje trenutne rijeci\n\tint *brojac= &rel_max;\n\tbool neslovo=true;\n\t\n\twhile(*p!='\\0'){ //idemo kroz string, obican kod iz predavanja za broj rijeci, ali smo to iskoristili da znamo kad smo na pocetku i na kraju rijeci\n\t\tif(!((*p>='A' && *p<='Z') || (*p>='a' && *p<='z'))) \n\t\t\tneslovo=true;\n\t\t\n\t\telse if(neslovo==true){ \n\t\t\trel_max=1; //ovdje smo sigurno na pocetku rijeci i ta se rijec ponavlja vec jednom\n\t\t\t\n\t\t\t\tif(neslovo==true) \n\t\t\t\t\tneslovo=false;\n\t\t\n\t\t\tpocetak_trenutne=p1=p; //upamtimo gdje pocinje rijec i sa while petljom prodjemo kroz nju \n\t\t\t\n\t\t\twhile((*p1>='A' && *p1<='Z') || (*p1>='a' && *p1<='z')) \n\t\t\t\tp1++;\n\t\t\t\n\t\t\tkraj_trenutne=p1; //upamtimo joj kraj\n\t\t\t\n\t\t\tprebroji(pocetak_trenutne, kraj_trenutne, brojac); //u funkciju saljemo nasu rijec i brojac, brojac je rel_max, to je broj ponavljanja trenutne\n\t\t\t\n\t\t\tif(rel_max>0){ /*ako smo nasli da se nasa rijec ponavlja vise od 0 puta, onda ispitujemo da li se ponavlja vise od maxa i spasimo poc i kraj rijeci \n\t\t\t\t\t\t\tkoja se najvise puta ponavlja*/\n\t\t\t\tif(rel_max>max){\n\t\t\t\t\tmax=rel_max;\n\t\t\t\t\tpocetak_najcesce=pocetak_trenutne;\n\t\t\t\t\tkraj_najcesce=kraj_trenutne;\n\t\t\t\t}\n\t\t\t}\n\t\telse continue;\n\t\t}\n\tp++;\n}\n\t\n\tif(max==0) return str;\n\t\n\tchar *s=str;\n\tchar rijec[100];\n\t\n\tkopiraj(rijec,pocetak_najcesce,kraj_najcesce); //od dva pokazivaca napravimo rijec, ono sve sto je izmedju pokazivaca\n\t\n\tneslovo=true;\n\t\n\twhile (*s!='\\0'){ //prodjemo kroz string i gdje god se nasa rijec pronadje treba je izbaciti\n\t\tif(!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))) \n\t\t\tneslovo=true;\n\t\t\n\t\telse if(neslovo==true){\n\t\t\tif(neslovo==true) \t\n\t\t\t\tneslovo=false;\n\t\t\t\n\t\t\t\tp1=s;\n\t\t\n\t\twhile((*p1>='A' && *p1<='Z') || (*p1>='a' && *p1<='z'))\t\n\t\t\tp1++;\n\t\t\n\t\tif(uporedi(s,p1,rijec)==true){ //saljemo svaku rijec i ako smo nasli istu, funkcija vrati true i izbacimo je\n\t\t\tizbaci_rijec(s,p1);\n\t\t\tneslovo=true;\n\t\t}\n\t\t\t\n\t}\n\t\ts++;\n\t}\nreturn str;\n\n}\n\n\nint main() {\n\nchar t[]=\"a-a-a-a-a\";\nprintf(\"%s\", izbaci_najcescu(t));\n\n\treturn 0;\n}\n"
    },
    "48": {
        "label": "1",
        "student3836": "#include <stdio.h>\n#include <math.h>\n#define epsilon 0.001\nint main() {\n\tdouble a,b,c,x1,x2,x1im,x2im,Unos1,Unos2,D;\n\tint istina1=1,istina2=1,istina3=1,istina4=1;\n\tprintf(\"Unesite koeficijente a, b i c: \");\n\tscanf(\"%lf %lf %lf\",&a,&b,&c);\n\tD=b*b-(4*a*c);\n\tif(D<0) {printf(\"Rjesenja su imaginarni brojevi.\");\n\t\treturn 0;\n\t}\n\tx1im = (-b-sqrt(b*b-(4*a*c)))/(2*a);\n\tx2im = (-b+sqrt(b*b-(4*a*c)))/(2*a);\n\tif (x1im<=x2im){x1=x1im;\n\tx2=x2im;}\n\telse if (x1im>x2im) {x1=x2im;\n\tx2=x1im;\n\t}\n\t\n\tdo {\n\t\tprintf(\"Unesite rjesenje x1: \");\n\t\tscanf(\"%lf\",&Unos1);\n\t\tif(((x1-Unos1)<epsilon) && ((x1-Unos1)>-epsilon)) printf(\"Tacno\\n\");\n\t\telse if (fabs(x1-Unos1)<0.1 && (x1-Unos1)>=0) { istina1=0;\n\t\t\tprintf(\"Priblizno manje\\n\");\n\t\t}\n\t\telse if (Unos1<x1 && istina1==1) printf(\"Manje\\n\");\n\t\telse if (fabs(x1-Unos1)<0.1 && (Unos1-x1)>=0) {istina2=0;\n\t\t\tprintf(\"Priblizno vece\\n\");                    \n\t\t}\n\t\telse if ((Unos1>x1) && (istina2==1)) printf(\"Vece\\n\");\n\t}\n\t\twhile (fabs(x1-Unos1)>=epsilon);\n\t\tdo {\n\t\tprintf(\"Unesite rjesenje x2: \");\n\t\tscanf(\"%lf\",&Unos2);\n\t\tif(((x2-Unos2)<epsilon) && ((x2-Unos2)>-epsilon)) printf(\"Tacno\\n\");\n\t\telse if (fabs(x2-Unos2)<0.1 && (x2-Unos2)>=0) { istina3=0;\n\t\t\tprintf(\"Priblizno manje\\n\");\n\t\t}\n\t\telse if (Unos2<x2 && istina3==1) printf(\"Manje\\n\");\n\t\telse if (fabs(x2-Unos2)<0.1 && (Unos2-x2)>=0) {istina4=0;\n\t\t\tprintf(\"Priblizno vece\\n\");\n\t\t}\n\t\telse if ((Unos2>x2) && (istina4==1)) printf(\"Vece\\n\");\n\t}\n\t\twhile (fabs(x2-Unos2)>=epsilon);\n\t\n\t\n\treturn 0;\n}",
        "student5816": "#include <stdio.h>\n#include <math.h>\n#define epsilon 0.001\nint main() {\n\tdouble a,b,c,x1,x2,a1,b1,y1,y2,D;\n\tint istina1=1,istina2=1,istina3=1,istina4=1;\n\tprintf(\"Unesite koeficijente a, b i c: \");\n\tscanf(\"%lf %lf %lf\",&a,&b,&c);\n\tD=b*b-(4*a*c);\n\tif(D<0) {printf(\"Rjesenja su imaginarni brojevi.\");\n\t\treturn 0;\n\t}\n\ta1 = (-b-sqrt(b*b-(4*a*c)))/(2*a);\n\tb1 = (-b+sqrt(b*b-(4*a*c)))/(2*a);\n\tif (a1<=b1){x1=a1;\n\tx2=b1;}\n\telse if (a1>b1) {x1=b1;\n\tx2=a1;\n\t}\n\t\n\tdo {\n\t\tprintf(\"Unesite rjesenje x1: \");\n\t\tscanf(\"%lf\",&y1);\n\t\tif(((x1-y1)<epsilon) && ((x1-y1)>-epsilon)) printf(\"Tacno\\n\");\n\t\telse if (fabs(x1-y1)<0.1 && (x1-y1)>=0) { istina1=0;\n\t\t\tprintf(\"Priblizno manje\\n\");\n\t\t}\n\t\telse if (y1<x1 && istina1==1) printf(\"Manje\\n\");\n\t\telse if (fabs(x1-y1)<0.1 && (y1-x1)>=0) {istina2=0;\n\t\t\tprintf(\"Priblizno vece\\n\");                    \n\t\t}\n\t\telse if ((y1>x1) && (istina2==1)) printf(\"Vece\\n\");\n\t}\n\t\twhile (fabs(x1-y1)>=epsilon);\n\t\tdo {\n\t\tprintf(\"Unesite rjesenje x2: \");\n\t\tscanf(\"%lf\",&y2);\n\t\tif(((x2-y2)<epsilon) && ((x2-y2)>-epsilon)) printf(\"Tacno\\n\");\n\t\telse if (fabs(x2-y2)<0.1 && (x2-y2)>=0) { istina3=0;\n\t\t\tprintf(\"Priblizno manje\\n\");\n\t\t}\n\t\telse if (y2<x2 && istina3==1) printf(\"Manje\\n\");\n\t\telse if (fabs(x2-y2)<0.1 && (y2-x2)>=0) {istina4=0;\n\t\t\tprintf(\"Priblizno vece\\n\");\n\t\t}\n\t\telse if ((y2>x2) && (istina4==1)) printf(\"Vece\\n\");\n\t}\n\t\twhile (fabs(x2-y2)>=epsilon);\n\t\n\t\n\treturn 0;\n}"
    },
    "49": {
        "label": "0",
        "student2634": "#include <stdio.h>\n\nint main(){\n    int i,j,matrica[200][200],M,N,x,y,z,s;\n    do {\n        printf(\"Unesite brojeve M i N: \");\n        scanf(\"%d %d\", &M, &N);\n        if(M<=0 || M>200 || N<=0 || N>200) printf(\"Brojevi nisu u trazenom opsegu.\\n\");\n    }\n    while(M>200 || M<=0 || N>200 || N<=0);\n    \n    printf(\"Unesite elemente matrice: \");\n    for(i=0;i<M;i++){\n        for(j=0;j<N;j++){\n            scanf(\"%d\", &matrica[i][j]);\n        }\n    }\n    \n    for(i=0;i<M-1;i++){\n        for(j=i+1;j<M;j++){\n            x=0;\n            if(matrica[i][0]==matrica[j][0]){\n                x=1;\n                for(y=1;y<N;y++){\n                    if(matrica[i][y]!=matrica[j][y]) x=0;\n                }\n                \n                if(x==1){\n                    for(z=j;z<M-1;z++){\n                        for(s=0;s<N;s++){\n                            matrica[z][s]=matrica[z+1][s];\n                            }\n                        }\n                    M--;\n                    j--;\n                    }\n                \n                }\n            }\n        }\n        \n        \n    for(i=0;i<N-1;i++){\n        for(j=i+1;j<N;j++){\n            x=0;\n            if(matrica[0][i]==matrica[0][j]){\n                x=1;\n                for(y=1;y<M;y++){\n                    if(matrica[y][i]!=matrica[y][j]) x=0;\n                }\n                \n                if(x==1){\n                    for(z=j;z<N-1;z++){\n                        for(s=0;s<M;s++){\n                            matrica[s][z]=matrica[s][z+1];\n                        }\n                    }\n                N--;\n                j--;\n                }\n            }\n            \n        }\n    }\n    \n    \n    printf(\"Nakon izbacivanja redova/kolona matrica glasi:\\n\");\n    for(i=0;i<M;i++){\n        for(j=0;j<N;j++){\n            printf(\"%5d\", matrica[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n",
        "student4770": "#include <stdio.h>\n// Najprije treba omogu\u0107iti korisniku da unese matricu proizvoljnih dimenzija MxN.\n// Korisnik najprije unosi prirodne brojeve M i N koji su manji ili jednaki 200.\n//Petljom do-while treba osigurati da su brojevi u tra\u017eenom opsegu. Nakon toga, unose se elementi matrice.\n//Nakon unosa, program treba izbaciti iz matrice sve redove koji se ponavljaju (svi elementi redova su jednaki) tako da u matrici ostane \n//samo prvi odozgo takav red. Nakon toga treba izbaciti i sve kolone koje se ponavljaju, tako da u matrici ostane samo prva slijeva takva kolona.\n//Kona\u010dno treba ispisati tako promijenjenu matricu.\n\nint main() {\n\tint M, N, i, j, mat[200][200], temp, k=0, z, y, l;\n\tdo {\n\t\tprintf (\"Unesite brojeve M i N: \");\n\t\tscanf (\"%d %d\", &M,&N);\n\t\tif (M > 200 || M < 1 || N > 200 || N <1) printf (\"Brojevi nisu u trazenom opsegu.\\n\");\n\t\t\n\t}while (M > 200 || M < 1 || N > 200 || N < 1);\n\tprintf (\"Unesite elemente matrice: \");\n\tfor (i = 0; i < M; ++i) {\n\t\tfor (j = 0;j < N; ++j) {\n\t\t\tscanf (\"%d\", &mat[i][j]);\n\t\t}\n\t}\n\t//Izbacivanje redova koji se ponavljaju iz matrice :)\n\tfor (i = 0; i < M; ++i) {\n\t\tfor (j = i+1; j < M; ++j) {\n\t\t\tk = 0;\n\t\t\tfor (l = 0; l < N; ++l) {\n\t\t\t\tif (mat[i][l] == mat[j][l]) k++;\n\t\t\t\tif (k == N) {\n\t\t\t\t\tfor (y = j+1; y < M; ++y) {\n\t\t\t\t\t\tfor (z = 0; z < N; ++z) {\n\t\t\t\t\t\t\ttemp = mat[y-1][z];\n\t\t\t\t\t\t\tmat[y-1][z] = mat[y][z];\n\t\t\t\t\t\t\tmat[y][z] = temp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tM--;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t//Izbacivanje kolona koje se ponavljaju iz matrice\n\tfor (i = 0; i < N; ++i) {\n\t\tfor (j = i+1; j < N; ++j) {\n\t\t\tk = 0;\n\t\t\tfor (l = 0; l < M; ++l) {\n\t\t\t\tif (mat[l][i] == mat[l][j]) k++;\n\t\t\t\tif (k == M) {\n\t\t\t\t\tfor (y = j+1; y < N; ++y) {\n\t\t\t\t\t\tfor (z = 0; z < M; ++z) {\n\t\t\t\t\t\t\ttemp = mat[z][y-1];\n\t\t\t\t\t\t\tmat[z][y-1] = mat[z][y];\n\t\t\t\t\t\t\tmat[z][y] = temp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tN--;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t}\n\tprintf (\"Nakon izbacivanja redova/kolona matrica glasi: \\n\");\n\tfor (i = 0; i < M; i++) {\n\t\tfor ( j = 0; j < N; j++) {\n\t\t\tprintf (\"%5d\", mat[i][j]);\n\t\t}\n\t\tprintf (\"\\n\");\n\t}\n\t\treturn 0;\n}\n"
    },
    "50": {
        "label": "1",
        "student2508": "#include <stdio.h>\n#include <stdlib.h>\nint main() {\n\tint n,b,c,br=0,i=1,e,d;\n\tprintf(\"Unesite broj: \");\n\tscanf(\"%d\",&n);\n\tif (n<0)\n\tn=abs(n);\n\tdo\n\t{\n\t\tb=n%10;\n\t\tn=n/10;\n\t\tif(n==0)\n\t\tbreak;\n\t\tc=n%10;\n\t\td=b-c;\n\t\tif(d<0)\n\t\td=abs(d);\n\t\te=i*d;\n\t\tbr=br+e;\n\t\ti=i*10;\n\t}\n\twhile(n>0);\n\tprintf(\"%d\",br);\n\treturn 0;\n}\n",
        "student3717": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n int broj,c,d,f,p=1,br=0;\n printf(\"Unesite broj: \");\n scanf(\"%d\",&broj);\n while(broj!=0){\n \tc=broj%10;\n \tbroj=broj/10;\n \tif(broj==0){\n \t break;\n \t}\n \td=broj%10;\n \tf=abs(d-c);\n \tbr=br+p*f;\n \tp*=10;\n }\n printf(\"%d\",br);\n\treturn 0;\n}\n\n\n"
    },
    "51": {
        "label": "0",
        "student5403": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include <list>\n#include <string>\n#include <vector>\n#include <set>\n#include <iterator>\n#include <stdexcept>\n\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> v_string,int k){\n    \n    if(k==0 || k>v_string.size()) throw std::logic_error(\"Razvrstavanje nemoguce\");\n    std::vector<std::set<std::string>> v_skup;\n    std::list<std::string>djecica;\n    std::vector<int> br_clanova;\n    int n=v_string.size();\n    int temp=(int)(n%k);\n    int poc=(int)((n/k)+1);\n    int ostatak=n/k;\n    int brojac(0);\n    if(temp!=0){\n        while(brojac<temp){\n            br_clanova.push_back(poc);\n            brojac++;\n        }\n        \n    while(brojac<k){\n        br_clanova.push_back(ostatak);\n        brojac++;\n    }   \n    }\n    \n    else if(temp==0){\n        while(brojac<k){\n            br_clanova.push_back(ostatak);\n            brojac++;\n        }\n    }\n    \n    for(int i=0;i<v_string.size();i++){\n        djecica.push_back(v_string[i]);\n    }\n   \n    std::list<std::string>::iterator it;\n    it=djecica.begin();\n    int pomjeri;\n    int i(0),idi_dalje(0);\n    it=djecica.begin();  \n    while(idi_dalje<k){\n      std::set<std::string> skup;\n      int keep_going(0);\n       while(keep_going<br_clanova[i]){\n         std::string rijec;\n        rijec=*it;\n         int br(0),duzina(0),o(0);\n         //Brojimo slova\n        while(o<rijec.size()){\n            if((rijec[o]>='A' && rijec[o]<='Z') || (rijec[o]>='a' && rijec[o]<='z') || (rijec[o]>='0' && rijec[o]<='9'))\n                duzina++;\n            o++;\n        } \n        skup.insert(rijec);\n        std::list<std::string>::iterator kraj;\n        kraj=djecica.end();\n        kraj--;\n        pomjeri=duzina;\n        if(it!=kraj)\n           pomjeri--;\n        it=djecica.erase(it);\n        std::list<std::string>::iterator kraj_liste;\n        kraj_liste=djecica.end();\n        kraj_liste--;\n         int m(0);\n         std::list<std::string>::iterator pom;\n         pom=it;\n        while(m<pomjeri){\n            if(pom==(kraj_liste)) { \n            pom=djecica.begin(); m+=1; continue;}\n            pom++;\n            m++;\n        }\n            it=pom;\n            keep_going++;\n        }\n      \n     idi_dalje++;\n     i++;\n     v_skup.push_back(skup);\n    \n    }\n \n\nreturn v_skup;\n}\n\nint main ()\n{\n  \n    int br_djece;\n    std::cout<<\"Unesite broj djece: \";\n    std::cin>>br_djece;\n    std::vector<std::string> v_djeca;\n    std::cout<<\"Unesite imena djece: \";\n    std::cout<<std::endl;\n    std::cin.ignore(1000,'\\n');\n    int i(0);\n    while(i<br_djece){\n        std::string rijec;\n        std::getline(std::cin,rijec);\n        v_djeca.push_back(rijec);\n        i++;\n    }\n    int br_timova;\n    std::cout<<\"Unesite broj timova: \";\n    std::cin>>br_timova;\n        try{\n           std::vector<std::set<std::string>> v(Razvrstavanje(v_djeca,br_timova));\n           \n        }\n          \n        catch(std::logic_error poruka){\n             std::cout<<\"Izuzetak: \"<<poruka.what();\n             return 0;\n        }\n     \n        for(int i=0;i<br_timova;i++){\n        std::set<std::string>skup;\n        std::vector<std::set<std::string>> v(Razvrstavanje(v_djeca,br_timova)); \n        skup=v[i];\n        std::cout<<\"Tim \"<<i+1<<\": \";\n        std::set<std::string>::iterator it;\n        it=skup.begin();\n        int brojac(0);\n        while(it!=skup.end()){\n            if(brojac==skup.size()-1) {\n                std::cout<<*it;\n                break;\n            }\n            std::cout<<*it<<\", \";\n            it++;\n            brojac++;\n        }\n      \n        std::cout<<std::endl;\n    }\n\n  \n\treturn 0;\n}",
        "student8560": "#include <iostream>\n#include <vector>\n#include <list>\n#include <set>\n#include <stdexcept>\n\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> djeca, int n) {\n    std::vector<std::set<std::string>> timovi;\n    if(n < 1 || n > djeca.size()) throw std::domain_error(\"Razvrstavanje nemoguce\");\n    return timovi;\n}\n\nint main ()\n{\n\treturn 0;\n}"
    },
    "52": {
        "label": "1",
        "student3777": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint suma_cifara(float br){\n    int suma=0;\n    br=br*10;\n    if(br<0){\n        br=br*(-1);\n    }\n    \nint intBr=(int)(br);\nwhile(intBr>0){\n    suma+=intBr%10;\n    intBr=intBr/10;\n} return suma;\n}\n\nvoid zaokruzi1(float brojevi[],int bel){\n    float produzena_vrijednost;\n    int i=0,kf=1;\n    while(i<bel){\n        if(brojevi[i]<0){\n            kf=-1;\n        } else {\n            kf=1;\n        } \n          float produzena_vrijednost= (int) (brojevi[i]*10+.5*kf);\n        brojevi[i]=(float)produzena_vrijednost/10;\n        i++;\n    }\n}\n\nvoid preslozi(float brojevi[],int bel,int m){\n    zaokruzi1(brojevi,bel);\n    float manji_od_m[100];\n    float veci_od_m[100];\n    int i=0,br_vecih=0,br_manjih=0;\n    while(i<bel){\n        if(suma_cifara(brojevi[i])>=m){\n            veci_od_m[br_vecih]=brojevi[i];\n            br_vecih++;\n        } else {\n            manji_od_m[br_manjih]=brojevi[i];\n            br_manjih++;\n        } i++;\n    }\n    \n    i=0;\n    while(i<br_vecih){\n        brojevi[i]=veci_od_m[i];\n        i++;\n    }\n    \n    i=0;\n    while(i<br_manjih){\n        brojevi[i+br_vecih]=manji_od_m[i];\n        i++;\n    }\n}\n\nint main(){\n    int i=0;\n    float niz[]={3.2,-4.301,-123.1999,1.1,0.9};\n    preslozi(niz,5,8);\n    printf(\"Niz glasi: \");\n    for(i=0;i<5;i++)\n    printf(\"%g\", niz[i]);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "student5276": "#include <stdio.h>\n#include <math.h>\n\nint suma_cifara_(float broj)\n{\n\tint suma=0;\n\tbroj=broj*10; \n\tif(broj<0)\n\t{\n\t\tbroj = broj*-1;\n\t}\n\t\n\tint intBroj=(int)(broj);\n\twhile(intBroj>0)\n\t{\n\t\tsuma=suma+intBroj%10;\n\t\tintBroj=intBroj/10;\n\t}\n\treturn suma;\n}\n\nvoid zaokruzi1(float brojevi[], int broj_el)\n{\n\tfloat produzena_vrijednost;\n\tint i,koeficijent=1;\n\tfor(i=0; i<broj_el;i++)\n\t{\n\t\tif(brojevi[i]<0)\n\t\t{\n\t\t\tkoeficijent = -1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tkoeficijent = 1;\n\t\t}\n\tfloat produzena_vrijednost= (int) (brojevi[i]*10+.5*koeficijent);\n\t\tbrojevi[i]=(float) produzena_vrijednost/10;\n\t}\n\t\n}\n\nvoid preslozi(float brojevi[], int broj_el, int k)\n{\n\tzaokruzi1(brojevi, broj_el);\n\tfloat manji_od_k[100];\n\tfloat veci_od_k[100];\n\tint i, br_vecih=0, br_manjih=0;\n\t\n\tfor(i=0;i<broj_el;i++)\n\t{\n\t\tif(suma_cifara_(brojevi[i])>=k)\n\t\t{veci_od_k[br_vecih]=brojevi[i];\n\t\tbr_vecih++;\n\t}\n\telse {\n\t\tmanji_od_k[br_manjih]=brojevi[i];\n\tbr_manjih++;\n\t}\n}\n for(i=0; i<br_vecih;i++)\n {\n \tbrojevi[i]=veci_od_k[i];\n }\nfor(i=0; i<br_manjih; i++)\n{\n\tbrojevi[i+br_vecih]=manji_od_k[i];\n}\n}\n\n\nint main() {\nint i;\nfloat niz[] = { 3.2, -4.301, -123.1999, 1.1, 0.9 };\npreslozi(niz, 5, 8);\nprintf(\"Niz glasi: \");\nfor (i=0; i<5; i++)\n    printf(\"%g \", niz[i]);\n}\n"
    },
    "53": {
        "label": "0",
        "student4665": "#include <stdio.h>\nvoid najduzi_bp(char* s1, char* s2) {\n\tchar* s = s1;\n\tchar* pocetak;\n\tchar* kraj;\n\tint max = 0, duzina = 0;\n\twhile(*s != '\\0') {\n\t\tchar* q = s;\n\t\tchar* k = s;\n\t\tint ind = 0;\n\t\twhile((*s >= 'A' && *s <= 'Z') || (*s >= 'a' && *s <= 'z')) {\n\t\t    ind = 0;\n\t\t\twhile(k < s) {\n\t\t\t\tif(*k == *s || (*k + 'a' - 'A') == *s || (*k - ('a' - 'A')) == *s) {\n\t\t\t\t\tind =-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tk = q;\n\t\t\tif(ind == -1) break;\n\t\t\tduzina++;\n\t\t\ts++;\n\t\t}\n\t\tif(duzina > max) {\n\t\t\tpocetak = q;\n\t\t\tmax = duzina;\n\t\t\tkraj = s;\n\t\t\tduzina = 0;\n\t\t}\n\t\tif(*s != '\\0') s++;\n\t\tduzina = 0;\n\t}\n\t\twhile(pocetak < kraj) *s2++ = *pocetak++;\n\t\t*s2 = '\\0';\n}\nint main() {\n\tchar niz[] = \"Ovo jev ovo aaaa\";\n\tchar niz1[100];\n\tnajduzi_bp(niz, niz1);\n\tprintf(\"%s\", niz1);\n\treturn 0;\n}\n",
        "student6468": "#include <stdio.h>\n\nvoid najduzi_bp(char* s1, char* s2) {\n\tchar najduza[100];\n\tchar najduzaTmp[100];\n\tint trenutnaDuzina = 0;\n\tint trenutnaTmp = 0;\n\tint i = 0;\n\tint postoji = 0;\n\tint bioSpace = 0;\n\tchar tmpChar1;\n\tchar tmpChar2;\n\n\tfor(i=0; i<100; i++) {\n\t\tnajduza[i] = '\\0';\n\t\tnajduzaTmp[i] = '\\0';\n\t}\n\t\n\twhile(*s1 != '\\0') {\n\t\tif((*s1 >= 'A' && *s1 <= 'Z') || (*s1 >= 'a' && *s1 <= 'z')) {\n\t\t\tbioSpace = 0;\n\t\t}\n\t\telse {\n\t\t\tbioSpace = 1;\n\t\t}\n\n\t\tpostoji = 0;\t\n\t\t\n\t\tfor(i=0; i<trenutnaTmp; i++) {\n\t\t\ttmpChar1 = *s1;\n\t\t\t\n\t\t\tif(tmpChar1 >= 'A' && tmpChar1 <= 'Z')\n\t\t\t\ttmpChar1 += 32;\n\t\t\t\t\n\t\t\ttmpChar2 = najduzaTmp[i];\n\t\t\t\n\t\t\tif(tmpChar2 >= 'A' && tmpChar2 <= 'Z')\n\t\t\t\ttmpChar2 += 32;\n\t\t\t\n\t\t\tif(tmpChar1 == tmpChar2) {\n\t\t\t\tpostoji = 1;\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tif(postoji == 0 && bioSpace == 0) {\n\t\t\tnajduzaTmp[trenutnaTmp++] = *s1;\n\t\t}\n\t\t\n\t\tif(postoji == 1 || bioSpace == 1){\n\t\t\tif(trenutnaTmp > trenutnaDuzina) {\n\t\t\t\tfor(i=0; i<trenutnaTmp; i++)\n\t\t\t\t\tnajduza[i] = najduzaTmp[i];\n\t\t\t\n\t\t\t\ttrenutnaDuzina = trenutnaTmp;\n\t\t\t}\n\t\t\t\n\t\t\tfor(i=0; i<100; i++)\n\t\t\t\tnajduzaTmp[i] = '\\0';\n\t\t\t\t\n\t\t\ttrenutnaTmp = 0;\n\t\t\t\n\t\t\tpostoji = 0;\n\t\t\tbioSpace = 0;\n\t\t}\n\t\t\n\t\ts1++;\n\t}\n\t\n\tif(trenutnaTmp > trenutnaDuzina) {\n\t\tfor(i=0; i<trenutnaTmp; i++)\n\t\t\tnajduza[i] = najduzaTmp[i];\n\t\n\t\ttrenutnaDuzina = trenutnaTmp;\n\t}\n\t\n\tfor(i=0; i<trenutnaDuzina; i++) {\n\t\t*s2 = najduza[i];\n\t\ts2++;\n\t}\n\t\n\t*s2 = '\\0';\n\t\n}\n\nint main() {\n        char niz[10];\n        najduzi_bp (\"abcde etankera cdefg\", niz);\n        printf (\"Niz: '%s'\", niz);\n\treturn 0;\n}\n"
    },
    "54": {
        "label": "1",
        "student5378": "// \u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 2\n//\tAutotestovi by Enil Pajic (epajic1@etf.unsa.ba | @eon : etf.ba)\n//\tNAPOMENA: i javni ATo-vi su dio postavke!\t\n#include <iostream>\n#include <deque>\n#include <vector>\n#include <cmath>\n#include <stdexcept>\n#include <type_traits>\n#include <iomanip>\nusing namespace std;\nenum class SmjerKretanja {\n NaprijedNazad, NazadNaprijed, GoreDolje, DoljeGore, LijevoDesno, DesnoLijevo\n};\ntemplate <typename TipMat> \nTipMat Okreni(TipMat m);\ntemplate <typename Kontejnerr>\nauto IzdvojiDijagonale3D(Kontejnerr Kontejner,SmjerKretanja smjer)->typename remove_reference<decltype(Kontejner[0])>::type{\n    for(int i=0;i<Kontejner.size();i++){\n        for(int j=0;j<Kontejner.size();j++){\n            if(Kontejner[0][0].size()!=Kontejner[i][j].size()) throw domain_error(\"Redovi nemaju isti broj elemenata\");\n        }\n        if(Kontejner[0].size()!=Kontejner[i].size()) throw domain_error(\"Plohe nemaju isti broj redova\");\n    }\n    typedef typename remove_reference<decltype(Kontejner[0])>::type v;\n    typedef typename remove_reference<decltype(Kontejner[0][0])>::type m;\n    v mat,matrica;\n    for(unsigned int i=0;i<Kontejner.size();i++){\n        m vektor;\n        for(unsigned j=0;j<Kontejner[0].size();j++){\n            for(unsigned s=0;s<Kontejner[i][j].size();s++){\n                if(smjer==SmjerKretanja(0)){\n                    if(j==s) vektor.push_back(Kontejner[i][j][s]);\n                }\n                if(smjer==SmjerKretanja(1)){\n                    if(j+s==Kontejner[i].size()) vektor.push_back(Kontejner[Kontejner.size()-1-i][j][s]);\n                }\n                if(smjer==SmjerKretanja(4)){\n                    if(i==j) vektor.push_back(Kontejner[Kontejner.size()-1-i][j][s]);\n                }\n                if(smjer==SmjerKretanja(5)){\n                    if(i+j==Kontejner.size()) vektor.push_back(Kontejner[i][Kontejner[i].size()-1-j][Kontejner[i][j].size()-1-s]);\n                    \n                    if(smjer==SmjerKretanja(2)){\n                        if(i==s) vektor.push_back(Kontejner[Kontejner.size()-1-i][j][s]);\n                    }\n                    if(smjer==SmjerKretanja(3)){\n                        if(i+s==Kontejner[i][j].size()-1) vektor.push_back(Kontejner[Kontejner.size()-1-i][Kontejner[i].size()-1-j][s]);\n                    }\n                }\n            }\n        }\n        //NaprijedNazad, NazadNaprijed, GoreDolje, DoljeGore, LijevoDesno, DesnoLijevo\n        mat.push_back(vektor);\n    }\n    if(smjer==SmjerKretanja(2)||smjer==SmjerKretanja(3)||smjer==SmjerKretanja(4)||smjer==SmjerKretanja(5)) \n    mat=Okreni(mat);\n    return mat;\n}\ntemplate <typename tip>\nvoid IspisiMatricu(tip mat){\n    for(unsigned int i=0;i<mat.size();i++){\n        for(unsigned int j=0;j<mat[i].size();j++){\n        cout<<setw(4)<<mat[i][j];\n        }\n        cout<<endl;\n    }\n}\nint main ()\n{\n    int x,y,z;\n    cout<<\"Unesite dimenzije (x y z): \";\n    cin>>x>>y>>z;\n    if(x<0 || y<0 || z<0) {\n        cout<<\"Neispravne dimenzije kontejnera!\"; return 0;\n    }\n    vector<deque<deque<int>>>Kontejner(x);\n    for(int i=0;i<Kontejner.size();i++){\n        Kontejner[i].resize(y);\n    }\n    for(int i=0;i<Kontejner.size();i++){\n        for(int j=0;j<Kontejner[i].size();j++){\n            Kontejner[i][j].resize(z);\n        }\n    }\n    cout<<\"Unesite elemente kontejnera: \"<<endl;\n    for(int i=0;i<Kontejner.size();i++){\n        for(int j=0;j<Kontejner[i].size();j++){\n            for(int s=0;s<Kontejner[i][j].size();s++){\n                cin>>Kontejner[i][j][s];\n            }\n        }\n    }\n     //NaprijedNazad, NazadNaprijed, GoreDolje, DoljeGore, LijevoDesno, DesnoLijevo\n    cout<<\"Unesite smjer kretanja [0 - 5]: \";\n    int S;\n    cin>>S;\n    try{\n        switch(S){\n            case 0:cout<<\"NaprijedNazad: \"<<endl;\n            IspisiMatricu(IzdvojiDijagonale3D(Kontejner,SmjerKretanja(0)));\n            break;\n            case 1:cout<<\"NazadNaprijed: \"<<endl;\n            IspisiMatricu(IzdvojiDijagonale3D(Kontejner,SmjerKretanja(1)));\n            break;\n            case 2:cout<<\"GoreDolje: \"<<endl;\n            IspisiMatricu(IzdvojiDijagonale3D(Kontejner,SmjerKretanja(2)));\n            break;\n            case 3:cout<<\"DoljeGore: \"<<endl;\n            IspisiMatricu(IzdvojiDijagonale3D(Kontejner,SmjerKretanja(3)));\n            break;\n            case 4:cout<<\"LijevoDesno: \"<<endl;\n            IspisiMatricu(IzdvojiDijagonale3D(Kontejner,SmjerKretanja(4)));\n            break;\n            case 5:cout<<\"DesnoLijevo: \"<<endl;\n            IspisiMatricu(IzdvojiDijagonale3D(Kontejner,SmjerKretanja(5)));\n            break;\n            default:cout<<\"Smjer kretanja nije ispravan! \"<<endl;\n            break;\n        }\n    }\n    catch(domain_error Izuzetak){\n        cout<<Izuzetak.what();\n    }\n\treturn 0;\n}\ntemplate<typename TipMat>\nTipMat Okreni(TipMat m){\n    TipMat Nova(m[0].size());\n    for(int i=0;i<Nova.size();i++){\n        Nova[i].resize(m.size());\n    }\n    for(int i=0;i<Nova.size();i++){\n        for(int j=0;j<Nova[i].size();j++){\n            Nova[i][j]=m[j][i];\n        }\n    }\n    return Nova;\n}",
        "student9538": "// \u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 2\n//\tAutotestovi by Enil Pajic (epajic1@etf.unsa.ba | @eon : etf.ba)\n//\tNAPOMENA: i javni ATo-vi su dio postavke!\t\n#include <iostream>\n#include <vector>\n#include <deque>\n#include <cmath>\n#include <type_traits>\n#include <iomanip>\n#include <stdexcept>\n\nusing namespace std;\n\nenum class SmjerKretanja {\n NaprijedNazad, NazadNaprijed, GoreDolje, DoljeGore, LijevoDesno, DesnoLijevo\n};\n\n\ntemplate<typename t>\nt Rotiraj(t mat)\n{ \n    t pom(mat[0].size());\n    for(int i=0;i<pom.size();i++)\n        pom[i].resize(mat.size());\n        \n    for(int i=0;i<pom.size();i++)\n    {\n        for(int j=0;j<pom[i].size();j++)\n        {\n            pom[i][j]=mat[j][i];\n        }\n    }\n    return pom;\n}\n\ntemplate <typename kont>\nauto IzdvojiDijagonale3D(kont Kontejner,SmjerKretanja s)->typename remove_reference<decltype(Kontejner[0])>::type\n{   \n    \n    for(int i=0;i<Kontejner.size();i++)\n    {\n        for(int j=0;j<Kontejner[i].size();j++)\n        {\n                if(Kontejner[0][0].size()!=Kontejner[i][j].size())\n                    throw domain_error(\"Redovi nemaju isti broj elemenata! \");\n        }\n        if(Kontejner[0].size()!=Kontejner[i].size())\n                    throw domain_error(\"Plohe nemaju isti broj redova! \");\n    }\n    \n    \n    typedef typename remove_reference<decltype(Kontejner[0])>::type x;\n    typedef typename remove_reference<decltype(Kontejner[0][0])>::type x1;\n    \n    x mat;\n                \n                for(int i=0;i<Kontejner.size();i++)\n                {   x1 v;\n                    for(int j=0;j<Kontejner[i].size();j++)\n                    {   \n                        for(int k=0;k<Kontejner[i][j].size();k++)\n                        {\n                            if(s==SmjerKretanja::NaprijedNazad)\n                            {\n                                if(j==k) v.push_back(Kontejner[i][j][k]);\n                            }\n                            if(s==SmjerKretanja::NazadNaprijed)\n                            {\n                                if(j+k==Kontejner[i].size()) v.push_back(Kontejner[Kontejner.size()-1-i][j][k]);\n                            }\n                            if(s==SmjerKretanja::LijevoDesno)\n                            {\n                                if(i==j)\n                                {\n                                    v.push_back(Kontejner[Kontejner.size()-1-i][j][k]);\n                                }\n                                \n                            }\n                            if(s==SmjerKretanja::DesnoLijevo)\n                            {\n                                if(i+j==Kontejner.size())\n                                {\n                                    v.push_back(Kontejner[i][Kontejner[i].size()-1-j][Kontejner[i][j].size()-1-k]);\n                                }\n                            }\n                            if(s==SmjerKretanja::GoreDolje)\n                            {\n                                if(i==k)\n                                {\n                                    v.push_back(Kontejner[Kontejner.size()-1-i][j][k]);\n                                }\n                                \n                            }\n                            if(s==SmjerKretanja::DoljeGore)\n                            {\n                                if(i+k==Kontejner[i][j].size()-1)\n                                {\n                                    v.push_back(Kontejner[Kontejner.size()-1-i][Kontejner[i].size()-1-j][k]);\n                                }\n                                \n                            }\n                        }\n                    }\n                    mat.push_back(v);\n                }\n           \n    if(s==SmjerKretanja::GoreDolje || s==SmjerKretanja::DoljeGore || s==SmjerKretanja::LijevoDesno || s==SmjerKretanja::DesnoLijevo)\n                 mat=Rotiraj(mat);   \n                \n    return mat;\n}\ntemplate <typename t>\nvoid Ispisi(t mat)\n{\n    for(int i=0;i<mat.size();i++)\n    {\n        for(int j=0;j<mat[i].size();j++)\n            cout<<setw(4)<<mat[i][j];\n        cout<<endl;\n    }\n}\nint main ()\n{   \n    \n    cout<<\"Unesite dimenzije (x y z): \";\n    int x,y,z;\n    cin>>x>>y>>z;\n    if(x<0 || y<0 || z<0){ cout<<\"Neispravne dimenzije kontejnera! \"; return 0;}\n    vector<deque<deque<int>>> Kont(x);\n    \n    for(int i=0;i<Kont.size();i++)\n\t    Kont[i].resize(y);\n\t \n\t for(int i=0;i<Kont.size();i++)\n\t    for(int j=0;j<Kont[i].size();j++)\n\t            Kont[i][j].resize(z);\n\t            \n\t  cout<<\"Unesite elemente kontejnera: \"<<endl;\n\t  for(int i=0;i<Kont.size();i++)\n\t    for(int j=0;j<Kont[i].size();j++)\n\t        for(int k=0;k<Kont[i][j].size();k++)\n\t            cin>>Kont[i][j][k];\n\t            \n\t  cout<<\"Unesite smjer kretanja [0 - 5]: \";\n      int n;\n      cin>>n;\n      try{\n      switch(n)\n      {\n          case 0:cout<<\"NaprijedNazad: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::NaprijedNazad));break;\n          case 1:cout<<\"NazadNaprijed: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::NazadNaprijed));break;\n          case 2:cout<<\"GoreDolje: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::GoreDolje));break;\n          case 3:cout<<\"DoljeGore: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::DoljeGore));break;\n          case 4:cout<<\"LijevoDesno: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::LijevoDesno));break;\n          case 5:cout<<\"DesnoLijevo: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::DesnoLijevo));break;\n          default:cout<<\"Smjer kretanja nije ispravan! \"<<endl;break;\n      }\n      }catch(domain_error e){cout<<e.what();}\n    \n      \n\treturn 0;\n}"
    },
    "55": {
        "label": "0",
        "student1624": "#include <stdio.h>\n#include <string.h>\n#define KAPACITET 200\n\nstruct Vrijeme{\n\tint sati, minute,sekunde;\n};\nstruct Cas{\n\tchar predmet[10];\n\tint dan_u_sedmici;\n\tstruct Vrijeme pocetak, kraj;\n};\nvoid unesi(char niz[]){ //funkcija unesi sa predavanja\n\tchar znak=getchar();\n\tint brojac=0;\n\tif(znak=='\\n') \n\t{\n\t\tznak=getchar();\n\t\tbrojac++;\n\t}\n\tint i=0;\n\twhile(znak!='\\n' && i<9){\n\t\tbrojac++;\n\t\tniz[i++]=znak;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n\twhile(znak!='\\n')\t//ako se unese vise , moramo ocistit spremnik\n\tznak=getchar();\n}\nint ucitaj_datoteku(struct Cas raspored[]){\t//ucitavanje sablon\n\tFILE *ulaz;\n\tint velicina=sizeof(struct Cas);\n\tulaz=fopen(\"raspored.dat\",\"rb+\");\n\tif(ulaz==NULL) return 0;\n\tint ucit;\n\tucit=fread(raspored,sizeof(struct Cas),KAPACITET,ulaz);\t//broj cuitanih to i vratimo\n\tfclose(ulaz);\n\treturn ucit;\n}\nint zapisi_datoteku(struct Cas raspored[],int broj_casova){\t//zapisujemo datoteku isto sabloon\n\tint zapisano;\n\tint nova;\n\tFILE*ulaz;\n\tFILE*ulaz1;\t\t//mogli smo i smo 1 da otvaramo\n\tulaz=fopen(\"raspored.dat\",\"wb+\");\n\tulaz1=fopen(\"raspored.dat\",\"wb+\");\n\tif(ulaz==NULL) return 0;\t//ako ijedna izbaci gresku \n\tif(ulaz1==NULL) return 0;\n\tzapisano=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz);\t//spasimo broj zapisanih i to vratimo\n\tnova=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz1);\n\tfclose(ulaz1);\n\tfclose(ulaz);\n\tif(nova>0) return 1;\n\tif(nova<1) return 0;\n}\n\nint minimal(struct Cas raspored[],int broj_casova){\t//f vrati sate prvog casa\n\tint i;\n\tint j;\n\tint min=25;\n\tint brojac=1;\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].pocetak.sati<min)\n\t\t\tmin=raspored[i].pocetak.sati;\n\t\tbrojac++;\n\t}\n\tbrojac=min;\n return brojac;\n}\nvoid dali(struct Cas raspored[],int i,int broj_casova){//ispis rasporeda\n\tint k;\n\tint j;\n\tint d;\n\tint o;\n\tfor(j=1;j<7;j++){\n\t\tfor(k=0;k<broj_casova;k++){\n\t\t\td=i;\n\t\t\to=raspored[k].dan_u_sedmici;\n\t\t\tif(raspored[k].pocetak.sati<=d && o==j && raspored[k].kraj.sati>=i){\n\t\t\t\tprintf(\"%-10s\",raspored[k].predmet);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\tif(k==broj_casova){\t//ispis praznih mjesta\n\t\t\t\tint n;\n\t\t\t\tfor(n=0;n<10;n++)\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t}\n}\n\nvoid ispisi_dan(struct Cas raspored[], int broj_casova, int dan){\n\tint i;\n\tprintf(\"Uneseni su casovi: \");\n\tint brojac=1;\n\tfor(i=0;i<broj_casova;i++)\n\t\tif(raspored[i].dan_u_sedmici==dan){\n\t\t\n\t\tprintf(\"\\n\");\t//ako je dan u sedmici taj dan, printamo sve predmete na taj dan\n\t\tprintf(\"%d) %s (%02d:%02d-%02d:%02d)\",brojac++,raspored[i].predmet,raspored[i].pocetak.sati, raspored[i].pocetak.minute, raspored[i].kraj.sati,raspored[i].kraj.minute);\n\t\t}\n}\nvoid obrisi_cas(struct Cas raspored[],int broj_casova,int dan, int redni_broj){\n\tint i,j;\n\tint k=0;\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].dan_u_sedmici==dan){\n\t\t\tk++;\n\t\t}\n\t\tif(redni_broj==k){\n\t\t\tif(k==redni_broj)\n\t\t\t\tfor(j=i;j<broj_casova-1;j++)\n\t\t\t\traspored[j]=raspored[j+1]; //da ne gubi redoslijed\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=0;i<broj_casova;i++){\n\t\tk++;\n\t}\n}\nvoid ispis_rasporeda(struct Cas raspored[],int broj_casova){\t\n\tint k,i,j;\n\tint max=0; \n\tint indexm=0;\n\tint brojac=0;\n\tprintf(\"\\n       PON       UTO       SRI       CET       PET       SUB\\n\");\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].kraj.sati>max){\n\t\t\tmax=raspored[i].kraj.sati;\n\t\t\tbrojac=brojac+1;\n\t\t\tindexm=i;\n\t\t}\n\t}\n\tif(raspored[indexm].kraj.minute==0) \n\t\tmax--;\n\tint min;\n\tint x;\n\tmin=minimal(raspored,broj_casova);\n\tfor(i=min;i<=max;i++){\n\tif(i<10) printf(\"%d:00   \",i);\n\telse printf(\"%d:00  \",i);\n\tdali(raspored,i,broj_casova);\n\tfor(x=0;x<10;x++) brojac++;\n\tprintf(\"\\n\");\n}}\n\tint preklapanje(struct Cas raspored[],int broj_casova, struct Cas cas){\n\t\tint i;\n\t\tint pocsat;\n\t\tint krajsat;\n\t\tint br=1;\n\t\tfor(i=0;i<broj_casova;i++) br++;\n\t\tif(br>0){\n\t\tfor(i=0;i<broj_casova;i++){\n\t\t\t pocsat=raspored[i].pocetak.sati;\n\t\t\tkrajsat=raspored[i].kraj.sati;\n\t\t\tif(cas.dan_u_sedmici==raspored[i].dan_u_sedmici){\n\t\t\t\tif(pocsat==cas.pocetak.sati || krajsat==cas.kraj.sati) return 1;\n\t\t\t\tif(pocsat==cas.kraj.sati && raspored[i].pocetak.minute<cas.kraj.minute) return 1;\n\t\t\t\tif(raspored[i].kraj.sati==cas.pocetak.sati && raspored[i].kraj.minute>cas.pocetak.minute) return 1;\n\t\t\t\tif(pocsat<cas.pocetak.sati && krajsat>cas.kraj.sati) return 1;\n\t\t\t\tif(pocsat>cas.pocetak.sati&&krajsat<cas.kraj.sati) return 1;\n\t\t\t\tif(pocsat>cas.pocetak.sati&&pocsat<cas.kraj.sati) return 1;\n\t\t\t\tif(krajsat>cas.pocetak.sati && krajsat<cas.kraj.sati) return 1;\n\t\t\t\tif(pocsat<cas.pocetak.sati && krajsat>cas.kraj.sati) return 1;\n\t\t\t\tif(pocsat>cas.pocetak.sati && krajsat<cas.kraj.sati) return 1;\n\t\t\t\tif(pocsat<cas.pocetak.sati && krajsat>cas.kraj.sati) return 1;\n\t\t}\n\t}}\n\treturn 0;\n\t\n}\nvoid promijeni_cas(struct Cas raspored[],int broj_casova,int dan,int redni_broj, struct Cas promjena){\n\tint i;\n\tint redni=0;\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].dan_u_sedmici==dan) redni=redni+1;\n\t\tif(redni_broj==redni)\n\t\t\traspored[i]=promjena;\n\t}\n}\nint dodaj_cas(struct Cas raspored[],int broj_casova,const char*predmet,int trajanje){\n\tif(broj_casova==200) return 0;\n\tint i;\n\tint j;\n\tint preklapanjee;\n\tfor(i=0;i<6;i++)\n\t\tfor(j=9;j<=19-trajanje;j++){\n\t\t\tint dan=i+1;\n\t\t\tint sat=j;\n\t\t\tint zav=j+trajanje;\n\t\t\tstruct Cas cas={\"\",dan,{sat,0,0},{zav,0,0}};\n\t\t\tcas.pocetak.sati=sat;\n\t\t\tcas.kraj.sati=zav;\n\t\t\tchar *q=cas.predmet;\n\t\t\tchar *p=(char*) predmet;\n\t\t\tstrcpy(q,p);\n\t\t\tint ima=0;\n\t\t\tpreklapanjee=preklapanje(raspored,broj_casova,cas);\n\t\t\tif(preklapanjee==0){\n\t\t\t\tima =1;\n\t\t\t\traspored[broj_casova]=cas;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif(preklapanjee==1) continue ;\n\t\t}\n\t\treturn 0;\n}\nint main() {\n\tint op,broj_casova=0;\n\tstruct Cas raspored[KAPACITET];\n\tucitaj_datoteku(raspored);\n\tprintf(\"1) Ispis rasporeda\\n2) Dodavanje casa\\n3) Promjena casa\\n4) Brisanje casa\\n0) Kraj rada\\nIzaberite opciju: \");\n\tdo{\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1) {ispis_rasporeda(raspored,broj_casova);\n\t \tif(op==1)\tprintf(\"1) Ispis rasporeda\\n\");\n\t\tif(op==1)\tprintf(\"2) Dodavanje casa\\n\");\n\t\tif(op==1)\tprintf(\"3) Promjena casa\\n\");\n\t\tif(op==1)\tprintf(\"4) Brisanje casa\\n\");\n\t\tif(op==1)\tprintf(\"0) Kraj rada\\nIzaberite opciju: \");\n\t\t}\n\t\tif(op==2 && op!=0){\n\t\t\tint br_cas;\n\t\t\tint dod=0;\n\t\t\tprintf(\"Unesite naziv predmeta: \");\n\t\t\n\t\t\tchar predmet[10];\n\t\t\tunesi(predmet);\n\t\t\tprintf(\"Unesite broj casova: \");\n\t\t\tscanf(\"%d\",&br_cas);\n\t\t\tdod=dodaj_cas(raspored,broj_casova,predmet,br_cas);\n\t\t\tif (op==2){if(!dod)\n\t\t\t\tprintf(\"Nema dovoljno mjesta u rasporedu za %d casova.\\n\",br_cas);\n\t\t\tif(dod)\n\t\t\t\tbroj_casova=broj_casova+1;}\n\t\t\t  printf(\"1) Ispis rasporeda\\n\");\n\t\t      printf(\"2) Dodavanje casa\\n\");\n\t       \t\tprintf(\"3) Promjena casa\\n\");\n\t     \t\tprintf(\"4) Brisanje casa\\n\");\n\t    \t\tprintf(\"0) Kraj rada\\nIzaberite opciju: \");\n\t\t}\n\t\tif(op==4 && op!=3 && op!=1){\n\t\t\tint dan;\n\t\t\tint redni;\n\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\tscanf(\"%d\",&dan);\n\t\t\tispisi_dan(raspored,broj_casova,dan);\n\t\t\tprintf(\"\\n\");\n\t\t\tprintf(\"Izaberite koji cas zelite obrisati: \");\n\t\t\tscanf(\"%d\",&redni);\n\t\t\tobrisi_cas(raspored,broj_casova,dan,redni);\n\t\t\tprintf(\"Cas obrisan\\n\");\n\t\t\tbroj_casova=broj_casova-1;\n\t\tif(op==4)\tprintf(\"1) Ispis rasporeda\\n\");\n\t\t  if(op==4)  printf(\"2) Dodavanje casa\\n\");\n\t\tif(op==4)\tprintf(\"3) Promjena casa\\n\");\n\t\tif(op==4)\tprintf(\"4) Brisanje casa\\n\");\n\t\tif(op==4)\tprintf(\"0) Kraj rada\\nIzaberite opciju: \");\n\t\t\t\n\t\t}\n\t\tif(op==0)  if(op!=1 && op!=3)zapisi_datoteku(raspored,broj_casova);\n\t\tif(op==3 && op!=0){\n\t\t\tint dan;\n\t\t\tint redni;\n\t\t\tchar*p;\n\t\t\tchar*q;\n\t\t\tchar znak;\n\t\t\tchar predmet[10];\n\t\t\tint broj=broj_casova;\n\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\tscanf(\"%d\",&dan);\n\t\t\tispisi_dan(raspored,broj,dan);\n\t\t\tprintf(\"\\nIzaberite koji cas zelite promijeniti: Naziv predmeta: \");\n\t\t\tscanf(\"%d\",&redni);\n\t\t\tstruct Cas prom;\n\t\t\tunesi(prom.predmet);\n\t\t\t/*q=prom.predmet;\n\t\t\tp=predmet;\n\t\t\tstrcpy(q,p);*/\n\t\t\tprintf(\"Vrijeme pocetka: Vrijeme zavrsetka: \");\n\t\t\tif(op==3){\n\t\t\tscanf(\"%d%c\",&prom.pocetak.sati,&znak);\n\t\t\tscanf(\"%d%d\",&prom.pocetak.minute,&prom.kraj.sati);\n\t\t\tscanf(\"%c%d\",&znak,&prom.kraj.minute);}\n\t\t\tprom.dan_u_sedmici=dan;\n\t\t\tpromijeni_cas(raspored,broj,dan,redni,prom);\n\t\t\tif(op==3){\n\t\t\tprintf(\"1) Ispis rasporeda\\n\");\n\t\t\tprintf(\"2) Dodavanje casa\\n\");\n\t\t\tprintf(\"3) Promjena casa\\n\");\n\t\t\tprintf(\"4) Brisanje casa\\n\");\n\t\t\tprintf(\"0) Kraj rada\\nIzaberite opciju: \");}\n\t\t}\n\t\t\t\n\t\t\n\t}while(op!=0);\n\treturn 0;\n}\n",
        "student5860": "#include <stdio.h>\n#include <stdlib.h>\n\n#include <stdbool.h>\n#include <string.h>\n\n\n\n#define KAPACITET           200\n\n#define datoteka            \"C:\\\\Users\\\\damir\\\\Desktop\\\\New folder (2)\\\\raspored.dat\"\n\n#define VRIJEME_MAKSIMALNO\t\t\t\t23\n\n#define VRIJEME_MAKSIMALNO_MIN\t\t\t59\n\n#define VRIJEME_MAKSIMALNO_SEC\t\t\t59\n\n\n\n\n\n\n#define PRVO_VRIJEME     9\n \n#define ZAVRSNO_VRIJEME     18\n \n#define KRAJ_VREMENA      19\n\nchar* SEDMICA[6] = {\"PON\", \"UTO\", \"SRI\", \"CET\", \"PET\", \"SUB\"};\n\nint PomocnaVarijabla = -1;\n\n\n\n\n\nstruct Vrijeme {\n\n    int sati, minute, sekunde;\n\n};\n\n\n\nstruct Cas {\n\n    char predmet[10];\n\n    int dan_u_sedmici;\n\n    struct Vrijeme pocetak, kraj;\n\n};\n\n\n\n\n\n\nbool TacnoVrijeme(int sat, int minut, int sekund) {\n\n\tif(\tsat <= VRIJEME_MAKSIMALNO && sat >= 0 &&  minut <= VRIJEME_MAKSIMALNO_MIN && minut >= 0 &&\tsekund <= VRIJEME_MAKSIMALNO_SEC && sekund >= 0)\n\n\t\t\treturn true;\n\n\telse\n\n\t\treturn false;\n\n}\n\n\n\n\n\nvoid ispisi_red(struct Cas raspored[], int broj_casova, int sat) {\n\n\tint n=0;\n\tint dan=0;\n\n\tbool postavljen;\n\n\tstruct Cas ObjekatCasa;\n\n\tfor(dan = 1; dan <= 6; dan++) {\n\n\t\tstrcpy(ObjekatCasa.predmet , \"\");\n\n\t\tpostavljen = false;\n\n\t\t\n\n\t\tfor(n = 0; n < broj_casova; n++) {\n\n\t\t\tif(raspored[n].dan_u_sedmici == dan && raspored[n].pocetak.sati <= sat) {\n\n\t\t\t\tif (!postavljen) \n\n\t\t\t\t\tif(raspored[n].pocetak.sati == sat) {\n\n\t\t\t\t\t\tObjekatCasa = raspored[n];\n\n\t\t\t\t\t\tpostavljen;\n\n\t\t\t\t\t}\n\n\t\t\t\telse {\n\n\t\t\t\t\tif((raspored[n].pocetak.sati != raspored[n].kraj.sati && raspored[n].kraj.sati > sat && raspored[n].pocetak.sati <= sat)||\n\n\t\t\t\t\t\t (raspored[n].kraj.minute == 0  && raspored[n].pocetak.sati == ObjekatCasa.pocetak.sati) ||\n\n\t\t\t\t\t\t(raspored[n].pocetak.minute < ObjekatCasa.pocetak.minute && raspored[n].pocetak.sati == ObjekatCasa.pocetak.sati  ) ||\n\n\t\t\t\t\t\t(raspored[n].kraj.minute > 0 && raspored[n].kraj.minute <= ObjekatCasa.pocetak.minute && raspored[n].pocetak.sati <= sat) ||\n\t\t\t\t\t\t(raspored[n].pocetak.minute < ObjekatCasa.pocetak.minute && raspored[n].kraj.sati >= ObjekatCasa.kraj.sati && raspored[n].pocetak.sati <= ObjekatCasa.pocetak.sati) \n\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tObjekatCasa = raspored[n];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tprintf(\"%-10s\", ObjekatCasa.predmet);\n\n\t}\n\n}\n\n\n\n\nint ucitaj_datoteku(struct Cas raspored[]) {\n\t\n\tFILE *FajlOtvoren;\n    int i = 0;\n\n    \n\n    if((FajlOtvoren = fopen(datoteka, \"r+\")) == NULL) {\n\n       \n\n        exit(1);\n\n    }\n\n    int VarijablaJedan=0;\n\n    while ((VarijablaJedan = fscanf(FajlOtvoren, \"%9s %d %d %d %d %d %d %d\\n\",   &raspored[i].predmet, &raspored[i].dan_u_sedmici,\n\n        &raspored[i].pocetak.sati, &raspored[i].pocetak.minute, &raspored[i].pocetak.sekunde,\n\n        &raspored[i].kraj.sati, &raspored[i].kraj.minute, &raspored[i].kraj.sekunde)) != EOF) {\n\n        \n\n\t\tif(i >= KAPACITET)\n\n            break;\n\n            \n\n        if(VarijablaJedan == 8)\n\n        \tif(\n        \t\traspored[i].pocetak.sati <= raspored[i].kraj.sati && \n        \t\t\n        \traspored[i].pocetak.sati <= ZAVRSNO_VRIJEME\t &&\n\n\t        \traspored[i].dan_u_sedmici >= 1 &&\n\n\t        \traspored[i].pocetak.sati >= PRVO_VRIJEME && \n\t        \t\n\t        \traspored[i].dan_u_sedmici <= 6 &&\n\n\t        \traspored[i].kraj.sati >= PRVO_VRIJEME && \n\t        \tTacnoVrijeme(raspored[i].kraj.sati, raspored[i].kraj.minute, raspored[i].kraj.sekunde) &&\n\n\t\t\t\tTacnoVrijeme(raspored[i].pocetak.sati, raspored[i].pocetak.minute, raspored[i].pocetak.sekunde) &&\n\n\t\t\t\traspored[i].kraj.sati <= KRAJ_VREMENA\n\t\t\t\t\n\t\t\t\t) \n\n        \t\t\ti++;\n\n    }\n\n    return i;\n\n}\n\n\n\n\n\nint zapisi_datoteku(struct Cas raspored[], int broj_casova) {\n\n\tFILE *FajlOtvoren = fopen(datoteka, \"ab+\");\n\n\tif (FajlOtvoren == NULL)\n\n\t{\n\n\t    \n\n\t    exit(1);\n\n\t}\n\n\tint i;\n\n\tint Sacuvano = 0;\n\n\tfor(i = 0; i < broj_casova; i++) {\n\n\t\tfprintf(FajlOtvoren, \"%-9s %d %d %d %d %d %d %d\\n\", raspored[i].predmet, raspored[i].dan_u_sedmici,\n\n    \traspored[i].pocetak.sati, raspored[i].pocetak.minute, raspored[i].pocetak.sekunde,\n\n        raspored[i].kraj.sati, raspored[i].kraj.minute, raspored[i].kraj.sekunde);\n\n        fprintf(FajlOtvoren, \"\\n\");\n\n        Sacuvano++;\n\n\t}\n\n\n\n\tfclose(FajlOtvoren);\n\n}\n\n\n\n\n\nint dodaj_cas(struct Cas raspored[], int broj_casova,\n\n    const char* predmet, int trajanje) {\n\n\tint dan;\n\tint j;\n\tint i;\n\n\tint vrijeme;\n\n\t\n\n\n\n\tbool NijeSlobodno[7][20];\n\n\tfor(i = PRVO_VRIJEME; i <= KRAJ_VREMENA; i++) \n\n\t\tfor(j = 1; j <= 6; j++) \n\n\t\t\tNijeSlobodno[j][i] = false;\t\n\n\t\t\t\n\n\n\n\tfor(i = 0; i < broj_casova; i++) {\n\n\t\tif(raspored[i].predmet != \"\") {\n\n\t\t\tNijeSlobodno[raspored[i].dan_u_sedmici][raspored[i].pocetak.sati] = true;\n\n\t\t\t\n\n\t\t\tif(raspored[i].kraj.sati > raspored[i].pocetak.sati) {\n\n\t\t\t\tint j;\n\n\t\t\t\tfor(j = raspored[i].pocetak.sati; j < raspored[i].kraj.sati; j++) \n\n\t\t\t\t\tNijeSlobodno[raspored[i].dan_u_sedmici][j] = true;\n\n\t\t\t\tif(raspored[i].kraj.minute > 0) \n\n\t\t\t\t\tNijeSlobodno[raspored[i].dan_u_sedmici][raspored[i].kraj.sati] = true;\t\n\n\t\t\t}\n\n\t\t\telse {\n\n\t\t\t\tif(raspored[i].kraj.minute > 0) \n\n\t\t\t\t\tNijeSlobodno[raspored[i].dan_u_sedmici][raspored[i].kraj.sati] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t\n\n\n\n\tfor(dan = 1; dan <= 6; dan++) {\n\n\t\tint Udaljenos = 0;\n\n\t\tvrijeme = PRVO_VRIJEME;\n\n\t\twhile(vrijeme <= ZAVRSNO_VRIJEME)\n\n\t\t{\n\n\t\t\tUdaljenos = 0;\n\n\t\t\twhile(!NijeSlobodno[dan][vrijeme] && vrijeme-trajanje <= ZAVRSNO_VRIJEME) {\n\n\t\t\t\tUdaljenos++;\n\n\t\t\t\tvrijeme++;\n\n\t\t\t\tif(Udaljenos == trajanje && vrijeme-trajanje <= ZAVRSNO_VRIJEME) {\n\n\t\t\t\t\tif(broj_casova+1 < KAPACITET) {\n\n\t\t\t\t\t\t\n\n\t\t\t\t\t\tstruct Cas VrijemeN;\n\n\t\t\t\t\t\tstrcpy(VrijemeN.predmet, predmet);\n\n\t\t\t\t\t\tVrijemeN.dan_u_sedmici = dan;\n\n\t\t\t\t\t\tVrijemeN.pocetak.sati = vrijeme-trajanje; VrijemeN.pocetak.minute = 0; VrijemeN.pocetak.sekunde = 0;\n\n\t\t\t\t\t\tVrijemeN.kraj.sati = vrijeme; VrijemeN.kraj.minute = 0; VrijemeN.kraj.sekunde = 0;\n\n\t\t\t\t\n\n\t\t\t\t\t\traspored[broj_casova] = VrijemeN;\n\n\t\t\t\t\t\treturn 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\n\t\t\t\t\t\n\n\t\t\t\t\t\treturn 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvrijeme++;\n\n\t\t}\n\n\t}\n\n\treturn 0;\n\n}\n\n\n\n\n\nint preklapanje(struct Cas raspored[], int broj_casova,\n\n    struct Cas cas) {\n\n\tint i;\n\n\tint dan = cas.dan_u_sedmici;\n\n\tfor(i = 0; i < broj_casova; i++) {\n\n\t\tif(raspored[i].dan_u_sedmici == dan) {\n\n\t\t\n\n\t\t\tif(!(((cas.kraj.sati < raspored[i].pocetak.sati) || ((cas.kraj.sati == raspored[i].pocetak.sati) && (cas.kraj.minute <= raspored[i].pocetak.minute))) ||\n\n\t\t\t((raspored[i].kraj.sati < cas.pocetak.sati) || ((cas.pocetak.sati == raspored[i].kraj.sati) && (cas.pocetak.minute >= raspored[i].kraj.minute)))))\n\n\t\t\t{\n\n\t\t\t\tPomocnaVarijabla = i;\n\n\t\t\t\treturn 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn 0;    \t\n\n}\n\n\n\n\n\nvoid ispis_rasporeda(struct Cas raspored[], int broj_casova) {\n\n\t\n\n\tint i;\n\n\tprintf(\"%-7s\", \"\");\n\n\tfor(i = 1; i <= 5; i++) {\n\n\t\tprintf(\"%-10s\", SEDMICA[i-1]);\n\n\t}\n\tprintf(\"%s\", SEDMICA[5]);\n\tprintf(\"\\n\");\n\n\t\n\n\n\n\tint sati;\n\n\tfor(sati = PRVO_VRIJEME; sati <= ZAVRSNO_VRIJEME; sati++) {\n\n\t\tif(sati == PRVO_VRIJEME) \n\n\t\t\tprintf(\"%d:00   \", sati);\n\n\t\telse\n\n\t\t\tprintf(\"%d:00  \", sati);\n\n\t\t\t\n\n\t\tispisi_red(raspored, broj_casova, sati);\n\n\t\tprintf(\"\\n\");\n\n\t}\n\n\tprintf(\"\\n\");\n\n}\n\n\n\n\n\nvoid ispisi_dan(struct Cas raspored[], int broj_casova, int dan) {\n\n\tint i;\n\n\tint NekaVarijabla = 0;\n\n\tprintf(\"Uneseni su casovi:\\n\");\n\n\tfor(i = 0; i < broj_casova; i++)\n\n\t\tif(raspored[i].dan_u_sedmici == dan)  {\n\n\t\t\tNekaVarijabla++;\n\n\t\t\tprintf(\"%d) %s (%02d:%02d-%02d:%02d)\\n\", NekaVarijabla, raspored[i].predmet, raspored[i].pocetak.sati, raspored[i].pocetak.minute, raspored[i].kraj.sati, raspored[i].kraj.minute);\n\n\t\t}\n\n}\n\n\n\n\nvoid promijeni_cas(struct Cas raspored[], int broj_casova, int dan,\n\n    int redni_broj, struct Cas promjena) {\n\n    int i = 0;\n\n\t\n\n\tbool NalaziSe = false;\n int pozicija = 0;\n\tfor(i = 0; i < broj_casova; i++) {\n\n\t\tif(raspored[i].dan_u_sedmici == dan) {\n\n\t\t\tpozicija++;\n\n\t\t\tif(pozicija == redni_broj) {\n\n\t\t\t\tNalaziSe = true;\n\n\t\t\t\tif(preklapanje(raspored, broj_casova, promjena) == 0) {\n\n\t\t\t\t\traspored[i] = promjena;\n\n\t\t\t\t\t\n\n\t\t\t\t}\n\n\t\t\t\telse if(PomocnaVarijabla == i) {\n\n\t\t\t\t\traspored[i] = promjena;\n\n\t\t\t\t\t\n\n\t\t\t\t}\n\n\t\t\t\t\n\n\t\t\t\tbreak;\n\n\t\t\t} \n\n\t\t} \t\n\n\t}\n\n\tif(!NalaziSe) {\n\n\t\tprintf(\"Neispravan redni broj casa.\\n\");\n\n\t}\n\n}\n\n\n\n\n\nvoid obrisi_cas(struct Cas raspored[], int broj_casova, int dan,\n\n    int redni_broj) {\n\tbool NalaziSe = false;\n    \n\n\tint pozicija = 0;\n\n\tint i = 0;\n\n\tfor(i = 0; i < broj_casova; i++) {\n\n\t\tif(raspored[i].dan_u_sedmici == dan) {\n\n\t\t\tpozicija++;\n\n\t\t\tif(pozicija == redni_broj) {\n\n\t\t\t\tint j;\n\n\t\t\t\tfor(j = i; j < broj_casova-1; j++)\n\n\t\t\t\t\traspored[j]=raspored[j+1];\n\n\t\t\t\tNalaziSe = true;\n\n\t\t\t\n\n\t\t\t\tPomocnaVarijabla = 1;\n\n\t\t\t\tbreak;\n\n\t\t\t} \n\n\t\t} \t\n\n\t}\n\n\tif(!NalaziSe) {\n\n\t\tprintf(\"Neispravan redni broj casa.\\n\");\n\n\t}\t\n\n}\n\n\n\n\nvoid NapraviTabelu(struct Cas raspored[], int broj_casova) {\n int dan;\n\tint IzabranaVrijednost;\n\n\tint cas;\n\n\t\n\n\tprintf(\"1) Ispis rasporeda\\n2) Dodavanje casa\\n3) Promjena casa\\n4) Brisanje casa\\n0) Kraj rada\\nIzaberite opciju: \");\n\n\tscanf(\"%d\", &IzabranaVrijednost);\n\n\t\n\n\tif(IzabranaVrijednost == 1) {\n\n\t\tispis_rasporeda(raspored, broj_casova);\n\n\t\tNapraviTabelu(raspored, broj_casova);\n\n\t}\n\n\telse if(IzabranaVrijednost == 2) {\n\n\t\tchar naziv[10];\n\n\t\tint Udaljenos;\n\n\t\tprintf(\"Unesite naziv predmeta: \"); scanf(\"%9s\", &naziv);\n\n\t\tprintf(\"Unesite broj casova: \"); scanf(\"%d\", &Udaljenos);\n\n\t\tif(naziv == \"\" || Udaljenos > 10 || Udaljenos < 1  ) {\n\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\n\n\t\t}\n\n\t\telse {\n\n\t\t\tint dodano = dodaj_cas(raspored, broj_casova, naziv, Udaljenos);\n\n\t\t\tif(dodano == 1) broj_casova++;\n\n\t\t\telse printf(\"Nema dovoljno mjesta u rasporedu za %d casova.\", Udaljenos);\n\n\t\t\tispis_rasporeda(raspored, broj_casova);\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\n\n\t\t}\n\n\t}\n\n\telse if(IzabranaVrijednost == 3) {\n\n\t\n\t\t\n\t\tint ZadnjimM = 0;\n\t\tint ZavrsniH = 0;\n\t\tint PocetnoM = 0;\n\t\t\n\t\tint PocetnoH = 0;\n\t\tchar naziv[10];\n\t\t\n\n\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \"); scanf(\"%d\", &dan);\n\n\t\tif(dan >= 1 && dan <= 6) {\n\n\t\t\tispisi_dan(raspored, broj_casova, dan);\n\n\t\t}\n\n\t\telse {\n\n\t\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\t\n\n\t\t}\n\n\t\tprintf(\"Izaberite koji cas zelite promijeniti: \"); scanf(\"%d\", &cas);\n\n\t\tprintf(\"Naziv predmeta: \"); scanf(\"%s\", &naziv);\n\n\t\tprintf(\"Vrijeme pocetka: \"); scanf(\"%d : %d\", &PocetnoH, &PocetnoM);\n\n\t\tprintf(\"Vrijeme zavrsetka: \"); scanf(\"%d : %d\", &ZavrsniH, &ZadnjimM);\n\n\t\tif(PocetnoH >= PRVO_VRIJEME && PocetnoH <= ZAVRSNO_VRIJEME && \n\n\t\t\tTacnoVrijeme(PocetnoH, PocetnoM, 0) && TacnoVrijeme(ZavrsniH, ZadnjimM, 0) && naziv != \"\" && \n\n\t\t\tZavrsniH >= PRVO_VRIJEME && ZavrsniH <= KRAJ_VREMENA) \n\n\t\t{\n\n\t\t\tstruct Cas VrijemeN;\n\n\t\t\t\n\n\t\t\tstrcpy(VrijemeN.predmet, naziv);\n\n\t\t\tVrijemeN.dan_u_sedmici = dan;\n\n\t\t\tVrijemeN.pocetak.sati = PocetnoH; VrijemeN.pocetak.minute = PocetnoM; VrijemeN.pocetak.sekunde = 0;\n\n\t\t\tVrijemeN.kraj.sati = ZavrsniH; VrijemeN.kraj.minute = ZadnjimM; VrijemeN.kraj.sekunde = 0;\n\n\t\t\t\n\n\t\t\tpromijeni_cas(raspored, broj_casova, dan, cas, VrijemeN);\t\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\n\n\t\t}\n\n\t\telse {\n\n\t\t\tprintf(\"Neispravan redni broj casa.\\n\");\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\n\n\t\t}\t\n\n\t}\n\n\telse if(IzabranaVrijednost == 4) {\n\n\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \"); scanf(\"%d\", &dan);\n\n\t\tif(dan <= 6  && dan >= 1 ) {\n\n\t\t\tispisi_dan(raspored, broj_casova, dan);\n\n\t\t}\n\n\t\telse {\n\n\t\t\tprintf(\"Pogresan unos.\\n\");\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\t\n\n\t\t}\n\n\n\n\t\tprintf(\"Izaberite koji cas zelite obrisati: \"); scanf(\"%d\", &cas);\n\n\t\tPomocnaVarijabla = 0;\n\n\t\tobrisi_cas(raspored, broj_casova, dan, cas);\n\n\t\tif(PomocnaVarijabla == 1) broj_casova--;\n\n\t\tNapraviTabelu(raspored, broj_casova);\n\n\t}\n\n\telse if(IzabranaVrijednost == 0) {\n\n\t\tzapisi_datoteku(raspored, broj_casova);\n\n\t\texit(0);\n\n\t}\n\n\telse {\n\n\t\tprintf(\"Pogresan unos.\");\n\n\t\texit(1);\n\n\t}\n\n}\n\n\n\n\n\nint main() {\n\n\n\n    exit(0);\n\n}"
    },
    "56": {
        "label": "1",
        "student5897": "#include <iostream>\n#include <vector>\n#include <stdexcept>\n#include <iomanip>\n\ntypedef std::vector<std::vector<double>> Matrica;\n\nMatrica horizontalnaMatrica(Matrica m) {\n\tMatrica hm(m.size(), std::vector<double> (m[0].size()));\n\tint d=m.size();\n\tint s=m[0].size();\n\t\n\tfor(int i=0; i<d; i++) {\n\t\tfor(int j=0; j<s; j++) {\n\t\t\thm[i][j]=m[i][s-1-j];\n\t\t\t}\n\t}\n\treturn hm;\n}\n\nMatrica vertikalnaMatrica(Matrica m) {\n\tMatrica vm(m.size(), std::vector<double> (m[0].size()));\n\tint d=m.size()-1;\n\tint s=m[0].size();\n\tfor(int i=d; i>=0; i--) {\n\t\tfor(int j=0; j<s; j++) {\n\t\t\tvm[d-i][j]=m[i][j];\n\t\t}\n\t}\n\treturn vm;\n}\n\nMatrica kombinovanoOgledalo(Matrica m) {\n\tMatrica hvm(m.size(), std::vector<double> (m[0].size()));\n\tint d=m.size()-1;\n\tint s=m[0].size()-1;\n\tfor(int i=d; i>=0; i--) {\n\t\tfor(int j=s; j>=0; j--) {\n\t\t\thvm[d-i][s-j]=m[i][j];\n\t\t}\n\t}\n\treturn hvm;\n}\n\nMatrica OgledaloMatrica(Matrica mat) {\n\t\n\tif(mat.size()==0 || mat[0].size()==0) {\n\t\tMatrica ogledalo(mat.size()*3, std::vector<double> (0));\n\t\treturn ogledalo;\n\t}\n\t\n\t\n\tfor(int i=0; i<mat.size(); i++) \n\t\tif(mat[i].size()!=mat[0].size()) throw std::domain_error(\"Matrica nije korektna\");\n\t\n\tMatrica hm = horizontalnaMatrica(mat);\n\tMatrica vm = vertikalnaMatrica(mat);\n\tMatrica hvm = kombinovanoOgledalo(mat);\n\t\t\n\tint red=mat.size();\n\tint kolona=mat[0].size();\n\t\t\n\tMatrica ogledalo(red*3, std::vector<double> (kolona*3));\n\t\n\tfor(int i=0; i<3*red; i++) {\n\t\tfor(int j=0; j<3*kolona; j++) {\n\t\t\tif(i<red && j<kolona) ogledalo[i][j]=hvm[i][j]; //hvm\n\t\t\telse if(i<red && j>=2*kolona) ogledalo[i][j]=hvm[i][j-2*kolona]; //hvm\n\t\t\telse if(i>=2*red && j<kolona) ogledalo[i][j]=hvm[i-2*red][j]; //hvm\n\t\t\telse if(i>=2*red && j>=2*kolona) ogledalo[i][j]=hvm[i-2*red][j-2*kolona];\t//hvm\n\t\t\t\n\t\t\t\n\t\t\telse if(i>=red && j<kolona) ogledalo[i][j]=hm[i-red][j]; //hm\n\t\t\telse if(i>=red && j>=2*kolona) ogledalo[i][j]=hm[i-red][j-2*kolona]; //hm\n\t\t\t\n\t\t\telse if(i<red && j>=kolona) ogledalo[i][j]=vm[i][j-kolona]; //vm\n\t\t\telse if(i>=2*red && j>=kolona) ogledalo[i][j]=vm[i-2*red][j-kolona]; //vm\n\t\t\t\t\n\t\t\telse ogledalo[i][j]=mat[i-red][j-kolona]; //M\n\t\t\t\n\t\t}\n\t}\n\t\n\treturn ogledalo;\n}\nint main ()\n{\n\tstd::cout << \"Unesite dimenzije matrice (m n): \";\n\tint m,n;\n\tstd::cin >> m >> n;\n\t\n\tif(m<0 || n<0)  {\n\t\tstd::cout << \"Dimenzije matrice moraju biti nenegativne!\";\n\t\treturn 0;\n\t}\n\twhile(!std::cin || std::cin.peek()!='\\n') {\n\t\tstd::cout << \"Unesite dimenzije matrice (m n): \" << std::endl;\n\t\tstd::cin.clear();\n\t\tstd::cin.ignore(1000000, '\\n');\n\t\tstd::cin >> m >> n;\n\t}\n\t/*try {\n\t\tMatrica mat(m, std::vector<double> (n));\n\t\tif(m==0 || n==0) Matrica ogledalo(mat);\n\t}\n\tcatch(...) {}\n*/\n\n\tMatrica mat(m, std::vector<double> (n));\n\t\n\n\t\tstd::cout << \"Unesite elemente matrice: \" << std::endl;\n\n\t\tfor(int i=0; i<m; i++) {\n\t\t\tfor(int j=0; j<n; j++) {\n\t\t\t\tstd::cin >> mat[i][j];\n\t\t\t}\n\t\t}\n\t\n\ttry {\n\t\tMatrica ogledalo(OgledaloMatrica(mat));\n\t\t\n\t\tstd::cout << \"Rezultantna matrica: \" << std::endl;\n\t\tfor(int i=0; i<ogledalo.size(); i++) {\n\t\t\tfor(int j=0; j<ogledalo[0].size(); j++) {\n\t\t\t\tstd::cout << std::setw(4) << ogledalo[i][j];\n\t\t\t}\n\t\t\tstd::cout << std::endl;\n\t\t}\n\t}\n\tcatch(std::domain_error izuzetak) {\n\t\tstd::cout << izuzetak.what() << std::endl;\n\t}\n\treturn 0;\n} \n",
        "student8518": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 2\n\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti\n\tdostupni na c9.\n\n*/\n#include <iomanip>\n#include <iostream>\n#include <vector>\n#include <stdexcept>\ntypedef std::vector<std::vector<double>>Matrica ;\n\nMatrica OgledaloMatrica ( Matrica M )\n{\n    if(M.size()==0) {\n        return M;\n    }\n\n    for( int i=0; i<M.size(); i++ ) {\n        if(M[i].size()!=M[0].size()) {\n            throw std::domain_error(\"Matrica nije korektna\");\n        }\n    }\n\n\n    Matrica h (M),v(M),hv(M);\n    int m(0),n(0);\n    m=M.size();\n    n=M[0].size();\n\n\n    for(int i=0; i<n; i++) {\n        for(int j=0; j<m; j++) {\n            h[j][i]=M[j][n-1-i];\n\n        }\n    }\n\n\n    for(int i=0; i<m; i++) {\n        for(int j=0; j<n; j++) {\n            v[i][j]=M[m-1-i][j];\n            hv[i][j]=h[m-1-i][j];\n        }\n    }\n\n    Matrica konacna(3*m, std::vector<double>(3*n) );\n\n    for(int i=0; i<3*m; i++) {\n        for(int j=0; j<3*n; j++) {\n            if(i<m) {\n                if(j<n) {\n                    konacna[i][j]=hv[i][j];\n                }\n                if(j>=n && j<2*n) {\n                    konacna[i][j]=v[i][j-n];\n                }\n                if(j>=2*n && j<3*n) {\n                    konacna[i][j]=hv[i][j-2*n];\n                }\n            }\n            if(i>=m && i<2*m) {\n                if(j<n) {\n                    konacna[i][j]=h[i-m][j];\n                }\n                if(j>=n && j<2*n) {\n                    konacna[i][j]=M[i-m][j-n];\n                }\n                if(j>=2*n && j<3*n) {\n                    konacna[i][j]=h[i-m][j-2*n];\n                }\n            }\n\n            if(i>=2*m && i<3*m) {\n                if(j<n) {\n                    konacna[i][j]=hv[i-2*m][j];\n                }\n                if(j>=n && j<2*n) {\n                    konacna[i][j]=v[i-2*m][j-n];\n                }\n                if(j>=2*n && j<3*n) {\n                    konacna[i][j]=hv[i-2*m][j-2*n];\n                }\n            }\n\n        }\n    }\n    return konacna;\n}\n\nint main ()\n{\n    try {\n        int m(0),n(0);\n        std::cout <<\"Unesite dimenzije matrice (m n): \";\n        std::cin >> m >>n ;\n        if(m<0 || n<0) {\n            std::cout << \"Dimenzije matrice moraju biti nenegativne!\" ;\n            return 0;\n        }\n        std::cout << \"Unesite elemente matrice: \"<<std::endl;\n\n        Matrica M( m, std::vector<double>(n) );\n        double e(0);\n\n        for(int i=0; i<m; i++) {\n            for(int j=0; j<n; j++) {\n                std::cin >> e;\n                M[i][j]=e;\n            }\n        }\n\n        std::cout <<\"Rezultantna matrica: \"<< std::endl;\n        for(std::vector<double>x : OgledaloMatrica(M)) {\n            for( double y : x ) {\n                std::cout <<std::setw(4)<< y;\n            }\n            std::cout << std::endl;\n        }\n    } catch( std:: domain_error izuzetak ) { // poznati kao standardni izuzeci definirani u biblioteci \u201cstdexcept\u201d.\n        std::cout << izuzetak.what() << std::endl; // pozivom funkcije \u201cwhat\u201d (bez parametara), ispisujemo text koji smo koristili za kreiranje izuzetka !!!\n    }\n\n    return 0;\n}\n"
    },
    "57": {
        "label": "0",
        "student3900": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid zaokruzi1 (float *niz,int vel)\n{\n\tfloat *p=niz;\n\twhile(p<niz+vel)\n\t{\n\t\t*p*=10;\n\t\tif(*p<0)\n\t\t{\n\t\t\t*p=(int) (*p-0.5);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*p=(int) (*p+0.5);\n\t\t}\n\t\t*p++/=10;\n\t}\n}\n\t\t\n\t\tvoid preslozi(float *niz,int vel,int k)\n\t\t{\n\t\t\tint i,j,duzina,suma,broj;\n\t\t\tfloat pom;\n\t\t\tduzina=0;\n\t\t\tzaokruzi1(niz, vel);\n\t\t\tfor(i=vel-1;i>duzina-1;i--)\n\t\t\t{\n\t\t\t\tsuma=0;\n\t\t\t\tbroj=abs((int) ((*(niz+i))*10));\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\tsuma+=broj%10;\n\t\t\t\t\tbroj/=10;\n\t\t\t\t}while(broj>0);\n\t\t\t\tif(suma>=k)\n\t\t\t\t{\n\t\t\t\t\tduzina++;\n\t\t\t\t\tpom=*(niz+i);\n\t\t\t\t\tfor(j=i; j>0;j--)\n\t\t\t\t\t{\n\t\t\t\t\t\t*(niz+j)=*(niz+j-1);\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t\t*niz=pom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\n\n\nint main() \n{\n\tint i,k,vel;\n\tfloat niz[100];\n\tprintf(\"Velicina:\");\n\tscanf(\"%d\", &vel);\n\tprintf(\"NIZ:\");\n\tfor(i=0;i<vel;i++) \n\t{\n\t\tscanf(\"%f\", &niz[i]);\n\t}\n\tprintf(\"Unesi k:\");\n\tscanf(\"%d\", &k);\n\tpreslozi(niz,vel,k);\n\tprintf(\"Niz:\");\n\tfor(i=0;i<vel;i++)\n\t{\n\t\tprintf(\" %g\",niz[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n",
        "student6121": "#include <stdio.h>\n#include <math.h>\n\nvoid zaokruzi1(float niz[], int velicina)\n{\n\tint i;\n\tfor(i=0; i<velicina; i++) {\n\t\tniz[i]=round(niz[i]*10) / 10;\n\t}\n}\n\nvoid preslozi(float niz[], int velicina, int k)\n{\n\n\tint i, temp,  brojac1=0, brojac2=0, predznak=1;\n\tfloat veciodk[1000], manjiodk[1000], sumacfr=0;\n\n\tzaokruzi1(niz, velicina);\n\n\tfor(i=0; i<velicina; i++) {\n\t\tsumacfr=0;\n\n\t\ttemp=(int)niz[i];\n\t\tif(temp<0) predznak=-1;\n\t\telse predznak=1;\n\t\ttemp*=predznak;\n\t\tsumacfr+=(fabs(niz[i])-temp)*10;\n\t\tsumacfr=round(sumacfr*10)/10;\n\t\tif(sumacfr-(int)sumacfr>0.5) sumacfr=(int)sumacfr+1;\n\t\twhile(temp!=0) {\n\t\t\tsumacfr+=temp%10;\n\t\t\ttemp/=10;\n\t\t}\n\t\tif(sumacfr>=k) {\n\t\t\tveciodk[brojac1]=niz[i];\n\t\t\tbrojac1++;\n\t\t} else {\n\t\t\tmanjiodk[brojac2]=niz[i];\n\t\t\tbrojac2++;\n\t\t}\n\t}\n\n\tfor(i=0; i<brojac1; i++) {\n\t\tniz[i]=veciodk[i];\n\t}\n\tfor(i=brojac1; i<brojac1+brojac2; i++) {\n\t\tniz[i]=manjiodk[i-brojac1];\n\t}\n\n\n\n}\n\n\nint main()\n{\n\n\tint i, k, n;\n\tfloat niz[100];\n\tprintf(\"Unesite broj clanova niza: \");\n\tscanf(\"%d\", &n);\n\tprintf(\"Unesite clanove niza: \");\n\tfor(i=0; i<n; i++) {\n\t\tscanf(\"%f\", &niz[i]);\n\t}\n\tprintf(\"Unesite k: \");\n\tscanf(\"%d\", &k);\n\n\tpreslozi(niz, n, k);\n\n\treturn 0;\n\n\n\n}\n"
    },
    "58": {
        "label": "1",
        "student1889": "#include <stdio.h>\n\nint main() {\n\tint broj_redova, broj_kolona, sirina_jedne_kolone, i, j, n;\n\tdo{\n\tprintf(\"Unesite broj redova: \");\n\tscanf(\"%d\", &broj_redova);\n\t}\n\twhile(broj_redova<=0 || broj_redova>10);\n\t\n\tdo{\n\tprintf(\"Unesite broj kolona: \");\n\tscanf(\"%d\", &broj_kolona);\n\t}\n\twhile (broj_kolona<=0 || broj_kolona>10);\n\t\t\n\tdo{\n\tprintf(\"Unesite sirinu jedne kolone: \");\n\tscanf(\"%d\", &sirina_jedne_kolone);\n}\n\twhile (sirina_jedne_kolone<=0 || sirina_jedne_kolone>10);\n\t\n\tfor (n = 0; n <broj_redova; n++) {\n\t\t\n\t\t\n\t\t/* prvi red*/\n\tfor (j = 0; j < broj_kolona; j++) {\n\t\tprintf(\"+\");\n\t\n\tfor (i = 0; i <sirina_jedne_kolone; i++) {\n\t\tprintf(\"-\");\n\t\t}\n\t}\n\t\tprintf(\"+\");\n\t\tprintf(\"\\n\");\n\t\t\n\t/*sl red*/\n\tfor (j = 0; j < broj_kolona; j++) {\n\t\tprintf(\"|\");\n\t\n\tfor (i = 0; i <sirina_jedne_kolone; i++) {\n\t\tprintf(\" \");\n\t\t}\n\t}\n\t\tprintf(\"|\");\n\t\tprintf(\"\\n\");\n\t\t}\n\t\t/*posljednja li*/\n\tfor (j = 0; j < broj_kolona; j++) {\n\t\tprintf(\"+\");\n\t\n\tfor (i = 0; i <sirina_jedne_kolone; i++) {\n\t\tprintf(\"-\");\n\t\t}\n\t}\n\t\tprintf(\"+\");\n\t\tprintf(\"\\n\");\n\t\n\t\n\treturn 0;\n}\n",
        "student6900": "#include <stdio.h>\n\nint main() {\n\tint red, kol, skol,i,j,k;\n\t\n\t//Unos redova (od 1 do 10)\n\tdo\t\n\t{\n\t\tprintf(\"Unesite broj redova: \");\n\t\tscanf (\"%d\",&red);\n\t}while((red<1) || (red >10));\n\t\n\t//Unos kolona (od 1 do 10)\n\tdo\n\t{\n\t\tprintf(\"Unesite broj kolona: \");\n\t\tscanf (\"%d\",&kol);\n\t}while((kol<1) || (kol >10));\n\t\n\t//Unos sirine kolone (od 1 do 10)\n\tdo\n\t{\n\tprintf(\"Unesite sirinu jedne kolone: \");\n\tscanf (\"%d\",&skol);\n\t}while((skol<1) || (skol >10));\n\t\n\t//Ponavljanje prvog reda (bez zadnje linije)\n\tfor (j = 0; j < red; j++) {\n\t\t\n\t\t//+---+---\n\t\tfor (i = 0; i < kol; i++) {\n\t\t\tprintf(\"+\");\n\t\t\tfor (k = 0; k < skol; k++) {\n\t\t\t\tprintf(\"-\");\n\t\t\t}\n\t\t}\n\t\t\n\t\t//Zadnji +\n\t\tprintf(\"+\");\n\t\tprintf(\"\\n\");\n\t\t\n\t\t//Vertikalne linije |\n\t\tfor (i = 0; i < kol; i++) {\n\t\t\tprintf(\"|\");\n\t\t\tfor (k = 0; k < skol; k++) {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\t\n\t\t//Zadnja linija |\n\t\tprintf(\"|\");\n\t\tprintf(\"\\n\");\n\t}\n\t\n\t//+---+--- (zadnja linija)\n\tfor (i = 0; i < kol; i++)\n\t{\n\t\t\tprintf(\"+\");\n\t\t\tfor (k = 0; k < skol; k++) {\n\t\t\t\tprintf(\"-\");\n\t\t\t}\n\t}\n\t\n\t//Zadnji +\n\tprintf(\"+\");\n\t\n\treturn 0;\n}\n"
    },
    "59": {
        "label": "0",
        "student3677": "#include <stdio.h>\n\nvoid unesi(char niz[], int velicina)\n{\n\tint i;\n\tchar znak=getchar();\n\tif(znak == '\\n') znak=getchar();\n\ti=0;\n\t\n\twhile(i<velicina-1 && znak!= '\\n')\n\t{\n\t\tniz[i]=znak;\n\t\ti++;\n\t\tznak=getchar();\n\t}\n\t\n\tniz[i]='\\0';\n}\n\nint provjeri_duzine(char *string, int *niz, int duz1)\n{\n\tint rijec=0, duzina=0;\n\tint i=0;\n\t\n\twhile(*(string+i)!='\\0')\n\t{\n\t\tif((*(string+i)<='Z' && *(string+i)>='A')|| (*(string+i)<='z' && *(string+i)>='a'))\n\t\t{\n\t\t\tduzina++;\n\t\t\tif(*(string+i+1)=='\\0') rijec++;\n\t\t}\n\t\telse if(duzina>0)\n\t\t{\n\t\t\tif(rijec+1>duz1){return 0;}\n\t\t\tif(niz[rijec]!=duzina) return 0;\n\t\t\trijec++;\n\t\t\tduzina=0;\n\t\t}\n\t\ti++;\n\t}\n\tif(rijec>duz1 || rijec<duz1) {return 0;}\n\treturn 1;\n}\n\nint main(){\n\t\n\tchar tekst[]=\"Napravicemo jos jedan primjer\";\n\tint niz[]={11, 3, 5, 7};\n\t\n\tprintf(\"%d \", provjeri_duzine(tekst, niz, 0));\n\tprintf(\"%d \", provjeri_duzine(tekst, niz, 3));\n\tprintf(\"%d \", provjeri_duzine(tekst, niz, 4));\n\treturn 0;\n\t\n\t\n}\n\n\n\n",
        "student4280": "#include <stdio.h>\n\n\nvoid unesi(char niz[],int velicina) {\n\tchar znak=getchar();\n\tif(znak=='\\n') znak=getchar();\n\tint i=0;\n\twhile(i<velicina-1 && znak!='\\n') {\n\t\tniz[i]=znak;\n\t\ti++;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n}\n\n\nint provjeri_duzine(char *string, int niz[], int duzina_niza) {\n\tint brojac=0,broj=0, slovo;\n\twhile(*string!='\\0') {\n\t\tslovo=0; \n\t\twhile((*string>='A' && *string<='Z') || (*string>='a' && *string<='z')) { \n\t\t\tbrojac++; \n\t\t\tstring++; \n\t\t\tslovo=1; \n\t\t}\n\t\tif(broj<=duzina_niza) { \n\t\t\tif(slovo==1) \n\t\t\t\tif(brojac!=niz[broj])\n\t\t\t\t\treturn 0;  \n\t\t\tif(slovo==1) broj++; \n\t\t\tif(*string!='\\0') \n\t\t\t\tstring++; \n\t\t\tbrojac=0; \n\t\t} else return 0; \n\t}\n\t\n\tif(broj!=duzina_niza) return 0; \n\t\n\treturn 1; \n}\n\nint main() {\n\tint niz[100],i,n;\n\tchar string[100];\n\tprintf(\"Unesite recenicu: \");\n\tunesi(string, 100);\n\tprintf(\"Unesite velicinu niza: \");\n\tscanf(\"%d\", &n);\n\tprintf(\"Unesite niz: \");\n\tfor(i=0; i<n; i++) {\n\t\tscanf(\"%d\", &niz[i]);\n\t}\n\tprovjeri_duzine(string, niz, n);\n\treturn 0;\n}\n"
    },
    "60": {
        "label": "1",
        "student4082": "#include <stdio.h>\n#define M 200 N 200\n\nint main(){\n    int a=1;\n    int mat[200][200];\n    int i,j,k,m,n,l;\n    do{\n    printf(\"Unesite brojeve M i N: \");\n    scanf(\"%d %d\", &m, &n);\n    if(m<1 || m>200 || n>200 || n<1){\n    printf(\"Brojevi nisu u trazenom opsegu.\\n\");\n    continue;\n    }\n    break;\n    }while(1);\n    printf(\"Unesite elemente matrice: \");\n    for(i=0; i<m; i++){\n        for(j=0; j<n; j++){\n            scanf(\"%d\", &mat[i][j]);\n        }\n    }\n    // posamaraj redove\n    for(i=0; i<m; i++){\n        for(j=i+1; j<m; j++){\n            a=1;\n            if(mat[i][0] == mat[j][0]){\n                for(k=0; k<n; k++){\n                    if(mat[i][k] != mat[j][k]){\n                        a=0;\n                        break;\n                    }\n                }\n                if(a == 1){\n                    for(l=j+1; l<m; l++){\n                        for(k=0; k<n; k++){\n                            mat[l-1][k]=mat[l][k];\n                        }\n                    }\n                    m--;\n                    j--;\n                }\n                \n            }\n        }\n    }\n    // kraj samaranja redova\n    // posamaraj kolone\n    for(j=0; j<n; j++){\n        for(i=j+1; i<n; i++){\n            a=1;\n            if(mat[0][j] == mat[0][i]){\n                for(k=0; k<m; k++){\n                    if(mat[k][j] != mat[k][i]){\n                        a=0;\n                        break;\n                    }\n                }\n                if(a == 1){\n                    for(l=i+1; l<n; l++){\n                        for(k=0; k<m; k++){\n                            mat[k][l-1]=mat[k][l];\n                        }\n                    }\n                    n--;\n                    i--;\n                }\n                \n            }\n        }\n    }\n    // kraj samaranja kolona\n    printf(\"Nakon izbacivanja redova/kolona matrica glasi:\\n\");\n    for(i=0; i<m; i++){\n        for(j=0; j<n; j++){\n            printf(\"%5d\", mat[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    \n    return 0;\n}",
        "student7980": "#include <stdio.h>\n#define V 200\n \nint main(){\n    int a=1;\n    int mat[V][V];\n    int i,j,k,M,N,l;\n    do\n    {\n    printf(\"Unesite brojeve M i N: \");\n    scanf(\"%d %d\", &M, &N);\n    if(M<1 || M>200 || N>200 || N<1) /* petlja while ce se nastavljati sve dok M i N ne budu u trazenom opsegu */\n    {\n    printf(\"Brojevi nisu u trazenom opsegu.\\n\");\n    continue;\n    }\n    break;\n    }while(1);\n    \n    printf(\"Unesite elemente matrice: \");\n    for(i=0; i<M; i++)\n    {\n        for(j=0; j<N; j++)\n        \n            scanf(\"%d\", &mat[i][j]);\n        }\n    \n    \n    for(i=0; i<M; i++)/* petlja za izbacivanje identicnih redova date matrice*/\n     {\n        for(j=i+1; j<M; j++)\n        {\n            a=1;\n            if(mat[i][0] == mat[j][0])\n            {\n                for(k=0; k<N; k++)\n                {\n                    if(mat[i][k] != mat[j][k]) /* prekid petlje i izmjena logicke varijable a znaci nailazak na clanove reda koji su razliciti */\n                    {\n                        a=0;\n                        break;\n                    }\n                }\n                if(a == 1){\n                    for(l=j+1; l<M; l++)\n                    {\n                        for(k=0; k<N; k++)\n                        {\n                            mat[l-1][k]=mat[l][k]; /* pomjeranje redova preko onog u kome se nalaze isti clanovi */\n                        }\n                    }\n                    M--; /* smanjenje broja redova matrice */\n                    j--; /* ponovna provjera clanova reda kojeg poredimo */\n                }\n            }\n        }\n    }\n    for(j=0; j<N; j++) /* na nacin slican prethodnom vrsimo brisanje kolona date matrice*/\n    \n        for(i=j+1; i<N; i++)\n        {\n            a=1;\n            if(mat[0][j] == mat[0][i]){\n                for(k=0; k<M; k++){\n                    if(mat[k][j] != mat[k][i]){\n                        a=0;\n                        break;\n                    }\n                }\n                if(a == 1){\n                    for(l=i+1; l<N; l++){\n                        for(k=0; k<M; k++){\n                            mat[k][l-1]=mat[k][l];\n                        }\n                    }\n                    \n                    N--;\n                    i--;\n                }\n            }\n        }\n    \n    printf(\"Nakon izbacivanja redova/kolona matrica glasi:\\n\");\n    for(i=0; i<M; i++){\n        for(j=0; j<N; j++){\n            printf(\"%5d\", mat[i][j]);\n        }\n        printf(\"\\n\");\n    }\n   \n    return 0;\n}"
    },
    "61": {
        "label": "0",
        "student5380": "#include <stdio.h>\n\nint main()\n{\n\t/*unos*/\n\tint mat[200][200] = {0} ,M,N,i,j,brojac1, brojac2, ponr=1,ponk=1;\n\tdo {\n\t\tprintf (\"Unesite brojeve M i N: \");\n\t\tscanf (\"%d %d\", &M, &N);\n\t\tif ((M<1) || (M>200) || (N<1) || (N>200)) {\n\t\t\tprintf (\"Brojevi nisu u trazenom opsegu.\\n\");\n\t\t}\n\t} while ((M<1) || (M>200) || (N<1) || (N>200));\n\tprintf (\"Unesite elemente matrice: \");\n\tfor (i=0; i<M; i++) {\n\t\tfor (j=0; j<N; j++)\n\t\t\tscanf (\"%d\", &mat[i][j]);\n\t}\n\n\t/*Redovi*/\n\tfor (i=0; i<M; i++) {\n\t\tfor (j=i+1; j<M; j++) {\n\t\t\tponr=1;\n\t\t\tfor (brojac1=0; brojac1<N; brojac1++) {\n\t\t\t\tif (mat[i][brojac1] != mat[j][brojac1])\n\t\t\t\t\tponr=0;\n\t\t\t}\n\t\t\tif (ponr == 1) {\n\t\t\t\tfor (brojac1=j; brojac1<M; brojac1++) {\n\t\t\t\t\tfor (brojac2=0; brojac2<N; brojac2++) {\n\t\t\t\t\t\tmat[brojac1][brojac2]=mat[brojac1+1][brojac2];\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\t\t\t\tM--;\n\t\t\t\tj--;\n\t\t\t}\n\n\t\t}\n\t}\n\t/*kolone*/\n\tfor (i=0; i<N; i++) {\n\t\tfor (j=i+1; j<N; j++) {\n\t\t\tponk=1;\n\t\t\tfor (brojac1=0; brojac1<M; brojac1++) {\n\t\t\t\tif (mat[brojac1][i] != mat[brojac1][j])\n\t\t\t\t\tponk=0;\n\t\t\t}\n\n\t\t\tif  (ponk==1) {\n\t\t\t\tfor (brojac1=j; brojac1<N-1; brojac1++) {\n\t\t\t\t\tfor (brojac2=0; brojac2<M; brojac2++) {\n\t\t\t\t\t\tmat[brojac2][brojac1]=mat[brojac2][brojac1+1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tN--;\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t}\n\t/*ispis*/\n\tprintf (\"Nakon izbacivanja redova/kolona matrica glasi:\\n\");\n\tfor (i=0; i<M; i++) {\n\t\tfor (j=0; j<N; j++)  {\n\t\t\tprintf (\"%5d\", mat [i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\n\n\treturn 0;\n}\n",
        "student8892": "#include <stdio.h>\n#define gornja_granica 200\n#define donja_granica 1\n\nint main ()\n{\n\tint sirina_mat, duzina_mat, mat[200][200], i = 0, j =  0, a = 0, b = 0, broj = 0, c = 0;\n\t\n    /* i i j spadaju u brojace */\n    \n    do {\n        printf (\"Unesite brojeve M i N: \");\n        scanf (\"%d %d\", &duzina_mat, &sirina_mat);\n        \n        if (sirina_mat > gornja_granica || duzina_mat > gornja_granica || sirina_mat < donja_granica || duzina_mat < donja_granica){\n            printf (\"Brojevi nisu u trazenom opsegu.\\n\");\n        }\n    } while(sirina_mat > gornja_granica || duzina_mat > gornja_granica || sirina_mat < donja_granica || duzina_mat < donja_granica);\n    \n    printf (\"Unesite elemente matrice: \");\n    \n    /* for petljom vrsi se unos elemenata u matricu nekog formata */\n    \n    for (i = 0; i < duzina_mat; i++){\n        for(j = 0; j< sirina_mat; j++){\n            scanf (\"%d\", &mat[i][j]);\n        }\n    }\n    \n    \n    /* treba izbaciti kolone i redove matrice koji su isti i ispisati novonastalu matricu */\n    i=0;\n    \n    do{\n        for (j = i + 1; j < duzina_mat; j++){\n            for (a = 0; a < sirina_mat; a++){\n                if (mat[i][a] == mat[j][a]){\n                    broj++;\n                }\n                if(broj == sirina_mat){\n                    for (b = j; b < duzina_mat - 1; b++){\n                        for (c = 0; c < sirina_mat; c++){\n                        mat[b][c] = mat[b + 1][c];\n                           \n                       \n                        }\n                    }\n                    j--;\n                    duzina_mat--;\n                }\n            }\n            broj = 0;\n        }\n        i++;\n    } while(i < duzina_mat);\n    \n    i=0; \n    \n    do{\n        for (a = i + 1; a < sirina_mat; a++){\n            for (j = 0; j < duzina_mat; j++){\n                if (mat[j][i] == mat[j][a]){\n                broj++;\n                }\n                if (broj == duzina_mat){\n                    for (b = 0; b < duzina_mat; b++){\n                        for (c = a; c < sirina_mat - 1; c++){\n                        mat[b][c] = mat[b][c + 1];\n                    }\n                }\n                a--;\n                sirina_mat--;\n                }\n            }\n            broj = 0;\n        }\n        i++;\n    } while(i < sirina_mat);\n    \n    /*ispisivanje nove matrice */\n    \n    printf (\"Nakon izbacivanja redova/kolona matrica glasi: \\n\");\n    \n    for (i = 0; i < duzina_mat; i++){\n        for (j = 0; j < sirina_mat; j++){\n            printf (\"%5d\", mat[i][j]);\n        }\n        printf (\"\\n\");\n    }\n    return 0;\n}\n"
    },
    "62": {
        "label": "1",
        "student4640": "#include <stdio.h>\n\nint main () {\n\tint sirinaA, visinaA, sirinaB, visinaB, i, j, k, l, jednake;\n\tfloat A[100][100], B[100][100];\n\n\tprintf (\"Unesite sirinu i visinu matrice A: \");\n\tscanf (\"%d %d\", &sirinaA, &visinaA);\n\tprintf (\"Unesite clanove matrice A: \");\n\t\n\tfor (i=0; i<visinaA; i++) {\n\t\tfor (j=0; j<sirinaA; j++) {\n\t\t\tscanf (\"%f\", &A[i][j]);\n\t\t}\n\t}\n\t\n\tprintf (\"Unesite sirinu i visinu matrice B: \");\n\tscanf (\"%d %d\", &sirinaB, &visinaB);\n\tprintf (\"Unesite clanove matrice B: \");\n\t\n\tfor (i=0; i<visinaB; i++) {\n\t\tfor (j=0; j<sirinaB; j++) {\n\t\t\tscanf (\"%f\", &B[i][j]);\n\t\t}\n\t}\n\t\n\tjednake=1;\n\t\n\t if (visinaA*sirinaA == visinaB*sirinaB ) {\n\t\tfor (i=0; i<visinaA; i++) {\n\t\tjednake=1;\n\t\t\tfor (j=0; j<sirinaA; j++) {\n\t\t\t\tif (A[i][j]!=B[j][visinaA-1-i]) \n\t\t\t\tjednake=0;\n\t\t\t\t} \n\t\t\tbreak;\n\t\t}}\n\t else  jednake=0; \n\t \n\t\n\tif(jednake) printf (\"DA\");\n\telse  printf (\"NE\");\n\t\n\treturn 0; \n}",
        "student6121": "#include <stdio.h>\n\nint main (){\n\tint i,j,SA,SB,VA,VB, rotirana;\n\tfloat matA[100][100], matB[100][100];\n\t\n\tprintf(\"Unesite sirinu i visinu matrice A: \");\n\tscanf(\"%d %d\",&SA, &VA);\n\tprintf(\"Unesite clanove matrice A: \");\n\tfor(i=0; i<VA; i++){\n\t\tfor(j=0; j<SA; j++){\n\t\t\tscanf(\"%f\", &matA[i][j]);\n\t\t}\n\t}\n\tprintf(\"Unesite sirinu i visinu matrice B: \");\n\tscanf(\"%d %d\", &SB, &VB);\n\tprintf(\"Unesite clanove matrice B: \");\n\tfor(i=0; i<VB; i++){\n\t\tfor(j=0; j<SB; j++){\n\t\t\tscanf(\"%f\", &matB[i][j]);\n\t\t}\n\t}\n\n\trotirana=1;\n\tfor(i=0; i<VA; i++){\n\t\trotirana=1;\n\t\tfor(j=0; j<SA; j++){\n\t\t\tif(matA[i][j]!=matB[j][VA-i-1]) \n\t\t\trotirana=0;\n\t  }\n     break;\n\t}\n\tif(rotirana) printf(\"DA\");\n\telse printf(\"NE\");\n\treturn 0;\n\t\n}"
    },
    "63": {
        "label": "0",
        "student2417": "#include <stdio.h>\n\nint main() {\nint A1,A2,B1,B2;\nint i,j,brojac,k,z;\ndouble A[50][50],B[50][50];\n\tprintf(\"Unesite sirinu i visinu matrice A: \");\n\tscanf(\"%d%d\",&A1,&A2);\n\tprintf(\"Unesite clanove matrice A: \");\n\t\tfor(i=0;i<A1;i++){\n\t\t\tfor(j=0;j<A2;j++){\n\t\t\t\tscanf(\"%lf\",&A[i][j]);\n\t\t\t}\n\t\t}\n\t\tprintf(\"Unesite sirinu i visinu matrice B: \");\n\t\tscanf(\"%d%d\",&B1,&B2);\n\t\tprintf(\"Unesite clanove matrice B: \");\n\t\tfor(i=0;i<B1;i++){\n\t\t\tfor(j=0;j<B2;j++){\n\t\t\t\tscanf(\"%lf\",&B[i][j]);\n\t\t\t}\n\t\t}\n\t\tbrojac=0;\n\t\tk=B2-1;\n\t\tz=0;\n\t\tif ( A1 == B1 && A2==B2 && A1==A2) {\n\t\tk=B2-1;\n\t\tbrojac=0;\n\t\tfor(i=0;i<A1;i++){\n\t\t\tz=0;\n\t\t\tfor(j=0;j<A2;j++){\n\t\t\t\tif(A[i][j]!=B[z][k]) brojac++;\n\t\t\t\tz++;\n\t\t\t\tif(z>B1) { z=0; k--;}\n\t\t\t}\n\t\t\tk--;\n\t\t}\n\t\tif(brojac==0)printf(\"DA\\n\");\n\t\telse printf(\"NE\\n\");\n\t\t}\n\t\telse {\n\t\t\tif(B1<A1 && B1==1) {\n\t\t\tbrojac=0;\n\t\t\tk=A2-1;\n\t\tbrojac=0;\n\t\tfor(i=0;i<B1;i++){\n\t\t\tz=0;\n\t\t\tfor(j=0;j<B2;j++){\n\t\t\t\tif(A[z][k]!=B[i][j]) brojac++;\n\t\t\t\tz++;\n\t\t\t}\n\t\t\tk--;\n\t\t}\n\t\t\tif(brojac==0)printf(\"DA\\n\");\n\t\telse printf(\"NE\\n\");\n\t\t}\n\t\telse if(A1<B1 && A1==1) {\n\t\t\tbrojac=0;\n\t\tbrojac=0;\n\t\tz=0;\n\t\tfor(i=0;i<A1;i++){\n\t\t\tk=B1-1;\n\t\t\tfor(j=0;j<A2;j++){\n\t\t\t\tif(A[i][j]!=B[k][z]) brojac++;\n\t\t\t\tk--;\n\t\t\t}\n\t\t\tz++;\n\t\t}\n\t\t\tif(brojac==0)printf(\"DA\\n\");\n\t\telse printf(\"NE\\n\");\n\t\t\n\t\t}\n\t\t\t\telse if(A1<B1 && A1>1) {\n\t\t\tbrojac=0;\n\t\tbrojac=0;\n\t\tz=0;\n\t\tk=A2-1;\n\t\tfor(i=B2-1;i>0;i--){\n\t\n\t\t\tfor(j=0;j<B1;j++){\n\t\t\t\tif(B[j][i]!=A[z][k]) brojac++;\n\t\t\t\tz++;\n\t\t\t\tif(z>A1-1) { z=0; k--; }\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\tif(brojac==0)printf(\"DA\\n\");\n\t\telse printf(\"NE\\n\");\n\t\t\n\t\t}\n\t\t\t\telse if(A1==B1 || A2==B2) {\n\t\t\tbrojac=0;\n\t\tbrojac=0;\n\t\tz=0;\n\t\tk=A2-1;\n\t\tfor(i=B2-1;i>0;i--){\n\t\n\t\t\tfor(j=0;j<B1;j++){\n\t\t\t\tif(B[j][i]!=A[z][k]) brojac++;\n\t\t\t\tz++;\n\t\t\t\tif(z>A1-1) { z=0; k--; }\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\tif(brojac==0)printf(\"DA\\n\");\n\t\telse printf(\"NE\\n\");\n\t\t\n\t\t}\n\t\t}\n\t\n\treturn 0;\n}\n",
        "student3421": "#include <stdio.h>\n\nint main() {\n\tint visinaA, sirinaA, A[100][100],sirinaB, visinaB, B[100][100],NN[100][100],K[100][100];\n\tint i,j,random=0,brojac=0;\n\t  /*Unos matrice A */\n\tprintf(\"Unesite sirinu i visinu matrice A: \");\n\tscanf(\"%d %d\", &sirinaA, &visinaA);\n\tprintf(\"Unesite clanove matrice A: \");\n\tfor(i=0; i<visinaA; i++) {\n\t\tfor(j=0; j<sirinaA; j++) {\n\t\t\tscanf(\"%d\", &A[i][j]);\n\t\t}\n\t}\n\t\t\n\t\t/*Unos matrice B*/\n\t\tprintf(\"Unesite sirinu i visinu matrice B: \");\n\t\tscanf(\"%d %d\", &sirinaB,&visinaB);\n\t\tprintf(\"Unesite clanove matrice B: \");\n\t\t\tfor(i=0; i<visinaB; i++) {\n\t\t\t\tfor(j=0; j<sirinaB; j++) {\n\t\t\t\t\tscanf(\"%d\", &B[i][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*matrica B = A+90 stepeni*/\n\t\t\t\n\t\t\tif(sirinaA==visinaB && visinaA==sirinaB) {\n\t\t\t\t/*Prodji petljom kroz matricu B*/\n\t\t\t\tfor(i=0; i<visinaB; i++) {\n\t\t\t\t\tfor(j=0; j<sirinaB; j++) {\n\t\t\t\t\t\trandom=A[j][i];\n\t\t\t\t\t\tNN[sirinaA-1-i][visinaA-1-j]=random;}\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t/*Ponovno for petljom kroz matricu B ali sada obrnutim redoslijedom*/\n\t\t\t \n\t\t\tfor(i=0; i<sirinaB; i++) {\n\t\t\t\tfor(j=0; j<visinaB; j++) {\n\t\t\t\t\t/*Eh sada, pravim novi niz od NN niza ...*/\n\t\t\t\t\trandom=NN[j][i];\n\t\t\t/*konacan -K*/\t\tK[visinaB-1-1*j][i]=random;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t} \n\t\t\t/*Nakon dobivenog konacnog treba uporediti matricu B koju okrecem sa prethodno dobivenom*/\n\t\t\tfor(i=0; i<sirinaB; i++) {\n\t\t\t\tfor(j=0; j<visinaB; j++) {\n\t\t\t\t\tif(B[j][i]==K[j][i]) {\n\t\t\t\t\t\tbrojac++;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(brojac==sirinaA*visinaA || brojac==sirinaB*visinaB){ \n\t\t\t\t\tprintf(\"DA\\n\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t\tprintf(\"NE\\n\"); }\n\t\t\t\telse \n\t\t\t\t\tprintf(\"NE\\n\");\n\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\treturn 0;\n}\n"
    },
    "64": {
        "label": "1",
        "student1068": "/* Headers. */\n#include <stdio.h>\n#include <math.h>\n\n/* Make-shift boolean type. */\ntypedef unsigned char _bool;\n#define true 1\n#define false 0\n\n/* Prototypes. */\nchar* ubaci_broj(char* s, int n);\n\n/* Main. */\nint main(void)\n{\n\t/* ... */\n\t\n\treturn 0;\n}\n\nchar* ubaci_broj(char* s, int n)\n{\n\tchar* p_starting_string = s;\n\tunsigned abs_number = (n >= 0) ? n : (-n); /* Gets the absolute value of n. */\n\tunsigned len_word = 0;\n\tunsigned n_digits = 0;\n\tunsigned i;\n\tunsigned temp = abs_number;\n\t_bool negative = (n >= 0) ? false : true; /* Flag used for keeping track of the sign of n. */\n\t_bool reached_end; /* Flag used for keeping track of whether the last word in the string has been reached. */\n\t\n\t/* Gets the number of digits that n has. */\n\tdo\n\t{\n\t\tn_digits++;\n\t\ttemp /= 10;\n\t} while (temp != 0);\n\ttemp = abs_number;\n\t\n\t\n\t/* Goes through the string one character at a time. */\n\twhile (*s != '\\0')\n\t{\n\t\t/* Encountered a blankspace character. */\n\t\tif (*s == ' ')\n\t\t{\n\t\t\t/* Checks whether the blankspace character, that has just been encountered, appears after a word or not. */\n\t\t\tif (len_word > 0)\n\t\t\t{\t\n\t\t\t\t/* The blankspace character does in fact appear after a word, but that still doesn't mean that we can go on inserting n here, */\n\t\t\t\t/* because it could be the case that the previous word (the word who's length we used in the if-statement above) was the last */\n\t\t\t\t/* word in the string, and that the rest of the string is just composed of blankspace characters.                             */\n\t\t\t\t/* Ex: \"______This___is_an_example__string._(n doesn't need to be inserted here)__________\"                                   */\n\t\t\t\treached_end = true;\n\t\t\t\tabs_number = temp;\n\t\t\t\tchar *q = s;\n\t\t\t\t/* Gets q to point at the end of the string. */\n\t\t\t\twhile (*q != '\\0')\n\t\t\t\t{\n\t\t\t\t\tq++;\n\t\t\t\t\t/* Whilst moving towards the end of the string, check whether there are any words left. */\n\t\t\t\t\tif (*q != ' ' && *q != '\\0')\n\t\t\t\t\t\treached_end = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* If it turns out that there are no more words to be found, then that means that we don't have to insert n anymore, */\n\t\t\t\t/* i.e., the program has done its job and it can terminate now.                                                      */\n\t\t\t\tif (reached_end)\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\t/* If the program reaches this point, then it means that n has to be inserted between two words. */\n\t\t\t\t/* To do that, we first have to create enough space for the value of n to be inserted:           */\n\t\t\t\t/* The case in which two words are seperated by two or more blankspaces.                         */\n\t\t\t\tif (*(s + 1) == ' ')\n\t\t\t\t{\n\t\t\t\t\twhile (q > s)\n\t\t\t\t\t{\n\t\t\t\t\t\t*(q + (negative ? n_digits + 1 : n_digits)) = *q;\n\t\t\t\t\t\tq--;\n\t\t\t\t\t}\n\t\t\t\t\tq++;\n\t\t\t\t}\n\t\t\t\t/* The case in which two words are seperated by just one blankspace. */\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twhile (q > s)\n\t\t\t\t\t{\n\t\t\t\t\t\t*(q + (negative ? n_digits + 2 : n_digits + 1)) = *q;\n\t\t\t\t\t\tq--;\n\t\t\t\t\t}\n\t\t\t\t\t*(q + (negative ? n_digits + 2 : n_digits + 1)) = *q;\n\t\t\t\t\tq++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Adds a minus to the string if the value of n is negative. */\n\t\t\t\tif (negative)\n\t\t\t\t\t*q++ = '-';\n\t\t\t\t\t\n\t\t\t\t/* Adds the digits (from left to right, i.e., from higher powers of ten to lower) of n to the string. */\n\t\t\t\tfor (i = n_digits; i > 0; i--)\n\t\t\t\t{\n\t\t\t\t\t*q++ = abs_number / pow(10, i - 1) + '0';\n\t\t\t\t\tabs_number %= (unsigned) pow(10, i - 1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlen_word = 0;\n\t\t\t\ts = q;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlen_word++;\n\t\t}\n\t\t\n\t\ts++;\n\t}\n\t\n\treturn p_starting_string;\n}",
        "student1620": "#include <stdio.h>\n#include <math.h>\ntypedef unsigned char _bool;\n#define true 1\n#define false 0\nchar* ubaci_broj(char* s, int n){\n\tchar* p = s;\n\tunsigned n2 = (n >= 0) ? n : (-n);\n\tunsigned len =0;\n\tunsigned count = 0;\n\tunsigned i;\n\tunsigned temp = n2;\n\t_bool neg = (n >= 0) ? false : true;\n\t_bool end;\n\tdo{\n\t\tcount++;\n\t\ttemp = temp/10;\n\t} while (temp != 0);\n\ttemp = n2;\n\twhile (*s != '\\0'){\n\t\tif (*s == ' '){\n\t\t\tif (len > 0){\n\t\t\t\tend = true;\n\t\t\t\tn2 = temp;\n\t\t\t\tchar *k = s;\n\t\t\t\twhile (*k != '\\0'){\n\t\t\t\t\tk++;\n\t\t\t\t\tif(*k != ' ' && *k != '\\0'){\n\t\t\t\t\t\tend = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\tif (end){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif (*(s + 1) == ' '){\n\t\t\t\t\t\twhile (k >s){\n\t\t\t\t\t    *(k + (neg ? count + 1 : count)) = *k;\n                        k--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tk++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twhile (k > s){\n\t\t\t\t\t\t\t*(k + (neg ? count + 2 : count + 1)) = *k;\n                        \tk--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t*(k + (neg ? count + 2  : count + 1)) = *k;\n                        k++;\n\t\t\n\t\t\t\t\t}\n\t\t\t\t\tif(neg == 1){\n\t\t\t\t\t\t*k++ = '-';\n\t\t\t\t\t}\n\t\t\t\t\tfor (i = count;i>0;i--){\n\t\t\t\t\t\t*k++ = n2 / pow(10,i - 1) + '0';\n\t\t\t\t\t\tn2 = n2 % (unsigned)pow(10,i - 1);\n\t\t\t\t\t}\n\t\t\t\t\tlen = 0;\n\t\t\t\t\ts = k;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlen++;\n\t\t\t}\n\t\ts++;\n\t}\n\treturn p;\n}\nint main() {\n\tprintf(\"Zada\u0107a 4, Zadatak 1\");\n\treturn 0;\n}\n"
    },
    "65": {
        "label": "0",
        "student3776": "#include <stdio.h>\nchar malo_slovo(char slovo){\n\tif(slovo>='A' && slovo<='Z')\n\treturn slovo+32;\n\treturn slovo;\n}\nchar *izbaci_najcescu(char* s){\n\tchar* povratni=s,*izbaci,*p,*q=s,niz[200];\n\tint br_ponavljanja,i,max=0,duz=0;\n\twhile(*s!='\\0'){\n\t\twhile(*s!='\\0' && !((*s>='A' && *s<='Z') || (*s>='a' && *s<='z')))\n\t\ts++;\n\t\ti=0;\n\t\tbr_ponavljanja=0;\n\t\tp=s;\n\t\tq=s;\n\t\twhile(*p!='\\0' && ((*p>='A' && *p<='Z') || (*p>='a' && *p<='z')))\n\t\tniz[i++]=*p++;\n\t\tniz[i]='\\0';\n\t\tint ima;\n\t\tif(i!=0){\n\t\t\tdo{\n\t\t\t\tbr_ponavljanja++;\n\t\t\t\twhile((*q>='A' && *q<='Z') || (*q>='a' && *q<='z')) q++;\n\t\t\t\tint i=0;\n\t\t\t\tima=0;\n\t\t\t\tchar *s1=q;\n\t\t\t\twhile(*s1!='\\0'){\n\t\t\t\t\ti++;\n\t\t\t\t\tchar* pom1=s1;\n\t\t\t\t\tchar* pom2=niz;\n\t\t\t\t\twhile(malo_slovo(*pom1)==malo_slovo(*pom2)){\n\t\t\t\t\t\tpom2++;\n\t\t\t\t\t\tpom1++;\n\t\t\t\t\t\tif(*pom2=='\\0' && !(malo_slovo(*pom1)>='a' && malo_slovo(*pom1)<='z'))\n\t\t\t\t\t\tif(i!=0 && !((*(s1-1)>='A' && *(s1-1)<='Z') || (*(s1-1)>='a' && *(s1-1)<='z'))){\n\t\t\t\t\t\t\tima=1;\n\t\t\t\t\t\t\tq=s1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (ima) break;\n\t\t\t\t\t}\n\t\t\t\t\tif(ima) break;\n\t\t\t\t\ts1++;\n\t\t\t\t}\n\t\t\t}while(*q!='\\0' && ima);\n\t\t\tif(br_ponavljanja>max){\n\t\t\t\tmax=br_ponavljanja;\n\t\t\t\tizbaci=s;\n\t\t\t\tduz=i;\n\t\t\t}\n\t\t\ts+=p-s;\n\t\t}\n\t}\n\tif(max!=0){\n\t\ti=0;\n\t\tp=izbaci;\n\t\ts=izbaci+duz;\n\t\twhile(p!=s)\n\t\tniz[i++]=*p++;\n\t\tniz[i]='\\0';\n\t\tp=povratni;\n\t\twhile(max-->0){\n\t\t\tp=povratni;\n\t\t\tint ima=0,prolaz=0;\n\t\t\twhile(*p!='\\0'){\n\t\t\t\tchar *pom1=p;\n\t\t\t\tchar *pom2=niz;\n\t\t\t\twhile(malo_slovo(*pom1)==malo_slovo(*pom2)){\n\t\t\t\t\tpom2++;\n\t\t\t\t\tpom1++;\n\t\t\t\t\tif(*pom2=='\\0' && !(malo_slovo(*pom1)>='a' && malo_slovo(*pom1)<='z'))\n\t\t\t\t\tif(p!=povratni){\n\t\t\t\t\t\tif(!((*(p-1)>='A' && *(p-1)<='Z') || (*(p-1)>='a' && *(p-1)<='z')))\n\t\t\t\t\t\tima=1;\n\t\t\t\t\t}\n\t\t\t\t\telse ima=1;\n\t\t\t\t\t\n\t\t\t\t\tif(ima) break;\n\t\t\t\t}\n\t\t\t\tprolaz++;\n\t\t\t\tif(ima) break;\n\t\t\t\tp++;\n\t\t\t}\n\t\t\tq=p+i;\n\t\t\twhile(*q!='\\0'){\n\t\t\t\t*p++=*q++;\n\t\t\t}\n\t\t\t*p='\\0';\n\t\t}\n\t}\n\treturn povratni;\n}\nint main() {\n\tchar niz[]=\"Najcescajeizbacena\";\n\tprintf(\"'%s'\",izbaci_najcescu(niz));\n\treturn 0;\n}",
        "student8480": "#include <stdio.h>\n#define true 1\n#define false 0\n#define bool int\n\n\nvoid kopiraj(char *m, char* poc,char* kraj){  \n\twhile(poc!=kraj){  //sve sto je izmedju poc i kraja prebacuje se u string m\n\t\t*m++=*poc++;\n\t\t}\n*m='\\0';\n}\n\n\nvoid izbaci_rijec(char *s, char *p){\n\tchar *s1=s;\n\twhile(*p!='\\0'){\n\t\t*s1=*p;\n\t\t s1++;\n\t\t p++;\n\t}\n*s1='\\0';\n}\n\n\nbool uporedi (char *s1, char *s2, char *p){ //uporedjujemo dvije rijeci, ako su iste vratimo true, a ako nisu onda false\n\twhile(s1!=s2 && *p!='\\0'){ //dok je prva rijec razlicita od kraja prve rijeci i dok je druga rijec razlicita od kraja stringa\n\t\tif(*s1!=*p && *s1!=(*p+32) && *s1!=(*p-32))  return false;  /*ako nadjemo da nase slovo nije isto kao veliko ili malo slovo drugog stringa, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t odmah vratimo false, ako nije idemo kroz oba stringa */\n\t\t\t\ts1++;\n\t\t\t\tp++;\n\t\t\t}\n\t\n\tif(*p=='\\0' && s1==s2) return true; /* ako smo dosli do kraja sa drugim stringom, a sa prvim ako smo dosli na kraj rijeci, onda smo dosli do kraja\n\t\t\t\t\t\t\t\t\t\ti sva slova su ista pa vratimo true */\n\treturn false;\n}\n\n\nvoid prebroji(char *poc, char *kraj, int* broj){\n\tif(*kraj=='\\0') return;\n\tchar rijec[100];\n\t\n\tkopiraj(rijec,poc,kraj); //u niz charova spasimo sve izmedju poc i kraja rijeci, tj nas niz bude rijec\n\t\n\tchar*ostatak=kraj+1; //provjeravamo sve od te rijeci pa dalje kolilko ima ponavljanja u stringu \n\tbool neslovo=true;\n\n\twhile(*ostatak!='\\0'){\n\t\tif(!((*ostatak>='A' && *ostatak<='Z') || (*ostatak>='a' && *ostatak<='z'))) \n\t\t\tneslovo=true;\n\t\t\n\t\telse if(neslovo==true){\n\t\t\tneslovo=false;\n\t\t\t\n\t\t\tchar *p1=ostatak;\n\t\t\t\n\t\t\twhile((*p1>='A' && *p1<='Z') || (*p1>='a' && *p1<='z'))\t \t\n\t\t\t\tp1++;\n\t\t\t\n\t\t\tif(uporedi(ostatak,p1,rijec))  (*broj)++; //uporedjujemo svaku rijec sa zadanom, ako je ista, onda se broj ponavljanja nase rijeci poveca za 1\n\t\t\t}\n\t\tostatak++;\n\t}\n}\n\n\nchar *izbaci_najcescu(char *str){\n\tchar *p=str, *pocetak_najcesce=0, *kraj_najcesce, *pocetak_trenutne=0, *kraj_trenutne, *p1;\n\tint max=0, rel_max; //max je broj rijeci koja se najvise puta ponavlja, a rel_max je ponavljanje trenutne rijeci\n\tint *brojac= &rel_max;\n\tbool neslovo=true;\n\t\n\twhile(*p!='\\0'){ //idemo kroz string, obican kod iz predavanja za broj rijeci, ali smo to iskoristili da znamo kad smo na pocetku i na kraju rijeci\n\t\tif(!((*p>='A' && *p<='Z') || (*p>='a' && *p<='z'))) \n\t\t\tneslovo=true;\n\t\t\n\t\telse if(neslovo==true){ \n\t\t\trel_max=1; //ovdje smo sigurno na pocetku rijeci i ta se rijec ponavlja vec jednom\n\t\t\t\n\t\t\t\tif(neslovo==true) \n\t\t\t\t\tneslovo=false;\n\t\t\n\t\t\tpocetak_trenutne=p1=p; //upamtimo gdje pocinje rijec i sa while petljom prodjemo kroz nju \n\t\t\t\n\t\t\twhile((*p1>='A' && *p1<='Z') || (*p1>='a' && *p1<='z')) \n\t\t\t\tp1++;\n\t\t\t\n\t\t\tkraj_trenutne=p1; //upamtimo joj kraj\n\t\t\t\n\t\t\tprebroji(pocetak_trenutne, kraj_trenutne, brojac); //u funkciju saljemo nasu rijec i brojac, brojac je rel_max, to je broj ponavljanja trenutne\n\t\t\t\n\t\t\tif(rel_max>0){ /*ako smo nasli da se nasa rijec ponavlja vise od 0 puta, onda ispitujemo da li se ponavlja vise od maxa i spasimo poc i kraj rijeci \n\t\t\t\t\t\t\tkoja se najvise puta ponavlja*/\n\t\t\t\tif(rel_max>max){\n\t\t\t\t\tmax=rel_max;\n\t\t\t\t\tpocetak_najcesce=pocetak_trenutne;\n\t\t\t\t\tkraj_najcesce=kraj_trenutne;\n\t\t\t\t}\n\t\t\t}\n\t\telse continue;\n\t\t}\n\tp++;\n}\n\t\n\tif(max==0) return str;\n\t\n\tchar *s=str;\n\tchar rijec[100];\n\t\n\tkopiraj(rijec,pocetak_najcesce,kraj_najcesce); //od dva pokazivaca napravimo rijec, ono sve sto je izmedju pokazivaca\n\t\n\tneslovo=true;\n\t\n\twhile (*s!='\\0'){ //prodjemo kroz string i gdje god se nasa rijec pronadje treba je izbaciti\n\t\tif(!((*s>='A' && *s<='Z') || (*s>='a' && *s<='z'))) \n\t\t\tneslovo=true;\n\t\t\n\t\telse if(neslovo==true){\n\t\t\tif(neslovo==true) \t\n\t\t\t\tneslovo=false;\n\t\t\t\n\t\t\t\tp1=s;\n\t\t\n\t\twhile((*p1>='A' && *p1<='Z') || (*p1>='a' && *p1<='z'))\t\n\t\t\tp1++;\n\t\t\n\t\tif(uporedi(s,p1,rijec)==true){ //saljemo svaku rijec i ako smo nasli istu, funkcija vrati true i izbacimo je\n\t\t\tizbaci_rijec(s,p1);\n\t\t\tneslovo=true;\n\t\t}\n\t\t\t\n\t}\n\t\ts++;\n\t}\nreturn str;\n\n}\n\n\nint main() {\n\nchar t[]=\"a-a-a-a-a\";\nprintf(\"%s\", izbaci_najcescu(t));\n\n\treturn 0;\n}\n"
    },
    "66": {
        "label": "1",
        "student1547": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 5\n#include <iostream>\n#include <string>\n#include <vector>\n#include <stdexcept>\n#include <set>\n\nusing std::cout;\nusing std::cin;\n\nbool DobarZnak(char x){\n    return ((x>='0' and x<='9') or(x>='A' and x<='Z') or (x>='a' and x<='z'));\n}\n\n\nstruct Dijete { \n    std::string ime;\n    Dijete *sljedeci;\n};\n\nstd::vector<std::set<std::string>> Razvrstavanje (std::vector<std::string> v, int n){\n    if(n<1 or n>v.size()) throw std::logic_error (\"Razvrstavanje nemoguce\");\n    std::vector<std::set<std::string>> rez(n);\n    if(v.size()==0) return rez;\n    int k(v.size()/n);\n    int mod(v.size()%n);\n    std::vector<int> br_el_skupa(n);\n    for(int i=0; i<n; i++){\n        if(i<mod) br_el_skupa[i]=k+1;\n        else br_el_skupa[i]=k;\n    }\n    Dijete* pocetak(nullptr), *prethodni;\n    for(int i=0;i<v.size();i++) {\n        Dijete *novi(new Dijete);\n        novi->ime = v[i];\n        novi->sljedeci = nullptr;\n        if(!pocetak) pocetak = novi;\n        else prethodni->sljedeci= novi;\n        prethodni = novi;\n    }\n    prethodni->sljedeci=pocetak;\n    int brojac(0), i(0);\n    auto it(pocetak);\n    while(i<n){\n        rez[i].insert(it->ime);\n        brojac++;\n        if(brojac==br_el_skupa[i]){\n            i++;\n            brojac=0;\n        }\n        if(i==n){\n            delete it;\n            continue;\n        }\n        int velicina_imena(0);\n        for(int j=0; j<(it->ime).size(); j++){\n            if(DobarZnak((it->ime)[j])) velicina_imena++;\n        }\n        auto cuva_za_brisanje(it);\n        it=it->sljedeci;\n        prethodni->sljedeci=it;\n        delete cuva_za_brisanje;\n        for(int j=0; j<velicina_imena-1; j++){\n            it=it->sljedeci;\n            prethodni=prethodni->sljedeci;\n        }\n    }\n    return rez;\n}\n\nint main ()\n{\n    int n;\n    cout << \"Unesite broj djece: \";\n    cin >> n;\n    cin.ignore(10000, '\\n');\n    cout <<\"Unesite imena djece: \\n\";\n    std::vector<std::string> imena(n);\n    for(int i=0; i<n; i++){\n        std::getline(cin, imena[i]);\n    }\n    int x;\n    cout << \"Unesite broj timova: \";\n    cin >> x;\n    try{\n    std::vector<std::set<std::string>> rez(Razvrstavanje(imena, x));\n    for(int i=0; i<x; i++){\n        cout << \"Tim \"<< i+1 << \": \";\n        int brojac(0);\n        for(auto a: rez[i]){ \n            if(brojac==rez[i].size()-1){\n                cout << a;\n                break;\n            } \n            cout << a << \", \";\n            brojac++;\n        }    \n        cout << std::endl;\n    }\n} catch( std::logic_error izuzetak){\n        std::cout << \"Izuzetak: \" << izuzetak.what();\n    }\n\treturn 0;\n}",
        "student4473": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 5\n/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include <vector>\n#include <set>\n#include <stdexcept>\n#include <iterator>\n#include <string>\nbool DaLiJeSlovo(char c){\n    if((c>='A' and c<='Z') or (c>='0' and c<='9') or (c>='a' and c<='z'))\n        return 1;\n    else return 0;\n}\nstruct Dijete {\n    std::string ime;\n    Dijete *sljedeci;\n};\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> osobe, int n){\n    std::vector<std::set<std::string>> glavni(n);\n    if(n<1 or n>osobe.size()) throw std::logic_error(\"Razvrstavanje nemoguce\");\n    //racunanje osoba u timovima\n    int m(osobe.size()/n);\n    //std::cout<<m;\n    int mm(osobe.size()%n);\n    std::vector<int> timovi(n);\n    for(int i=0;i<n;i++){\n        if(i<mm) timovi[i]=m+1;\n        else timovi[i]=m;\n    }\n    Dijete* pocetak(nullptr),*prethodni;\n    for(int i=0;i<osobe.size();i++){\n        Dijete *novi(new Dijete);\n        novi->ime=osobe[i];\n        novi->sljedeci=nullptr;\n        if(!pocetak) pocetak=novi;\n        else prethodni->sljedeci=novi;\n        prethodni=novi;\n    }\n    prethodni->sljedeci=pocetak;\n    int br(0),j(0);\n    auto it(pocetak);\n    while(j!=n-1){ \n        glavni[j].insert(it->ime);\n        br++;\n        if(br==timovi[j]) {j++;br=0;}\n        int duzina=0;\n        for(int k=0;k<(it->ime).size();k++){\n            if(DaLiJeSlovo((it->ime)[k])) duzina++;\n        }\n        auto imam(it);\n        it=it->sljedeci;\n        prethodni->sljedeci=it;\n        delete imam;\n        for(int i=0;i<duzina-1;i++){\n            it=it->sljedeci;\n            prethodni=prethodni->sljedeci;\n        }\n    }\n     for(int i=0;i<timovi[j];i++){\n         glavni[j].insert(it->ime);\n         if(j==timovi[j]-1){ delete it;continue;}\n         auto imam(it);\n         it=it->sljedeci;\n         delete imam;\n     }   \n    return glavni;\n}\nint main ()\n{   std::cout << \"Unesite broj djece: \" ;\n    int n;\n    std::cin >> n;\n    std::cin.ignore(1000, '\\n');\n    std::cout << \"Unesite imena djece: \" << std::endl;\n    std::vector<std::string> djeca(n);\n    for(int i=0;i<n;i++) std::getline(std::cin, djeca[i]);\n    std::cout << \"Unesite broj timova: \" ;\n    int brtimova;\n    std::cin >> brtimova;\n    std::vector<std::set<std::string>> rjesenje;\n    \n    try{\n        rjesenje=(Razvrstavanje(djeca,brtimova));\n    }\n    catch(std::logic_error err){\n        std::cout<<\"Izuzetak: \"<<err.what();\n    }\n    for(int i=0; i<rjesenje.size(); i++){\n        std::cout<<\"Tim \"<<i+1<<\": \";\n        int br(0);\n        for(auto x: rjesenje[i]) {\n            if(br==rjesenje[i].size()-1){ std::cout<<x; break;}\n            std::cout << x << \", \";\n            br++;}\n    std::cout << std::endl;\n    }\n\treturn 0;\n}"
    },
    "67": {
        "label": "0",
        "student4150": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 1\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n#include <iostream>\n#include <vector>\n \n\nint funkcija(int s) {\n\tlong int broj(0), dvica(0), kec(0), nula(0);\n\t\tdo {\n\t\tbroj = s%3;\n\t\tif(broj < 0) broj *= -1;\n\t\tif (broj == 2) dvica++;\n\t\telse if (broj == 1) kec++;\n\t\telse if (broj == 0) nula++;\n\t\ts /= 3;\n\t}while(s != 0);\n\t\tif (dvica%2==0 && kec%2==0 && nula%2==0) return 0;\n\t\telse if ((dvica%2==1 && kec%2==1 && nula%2==1) || (dvica==0 && kec==0 && nula%2==1) || (nula==0 && kec==0 && dvica%2==1) || (dvica==0 && nula==0 && kec%2==1) || (nula==0 && kec%2==1 && dvica%2==1) || (nula%2==1 && kec==0 && dvica%2==1) || (nula%2==1 && kec%2==1 && dvica==0)) return 1;\n\t\telse return 2;\n\t\t}\t\n\nstd::vector<int> IzdvojiGadne(std::vector<int> v, bool logika) {\n\tstd::vector<int> v1;\n\tint d;\n\tfor(int i(0); i < v.size(); i++) {\n\t\td = funkcija(v[i]);\n\tif(logika == 1 && d == 0) { \n\t\tv1.push_back(v[i]);\n\t}\n\telse if(logika == 0 && d == 1) {\n\t\tv1.push_back(v[i]);\n\t}\n\telse continue;\n\t}\n\tfor(int i(0); i < v1.size(); i++) {\n\t\tfor(int j(i+1); j < v1.size(); j++) {\n\t\t\tif(v1[i] == v1[j]) { v1.erase(v1.begin() + j);\n\t\t\tj--;\n\t\t\t}\n\t\t}\n\t}\n\treturn v1;\n}\n\nint main () {\n\tstd::vector<int> v;\n\tint n;\n\tstd::cout << \"Unesite brojeve (0 za prekid unosa): \";\n\tdo {\n\t\tstd::cin >> n;\n\t\tif(n != 0) v.push_back(n);\n\t} while(n != 0);\n\t\n\tauto vektor1 = IzdvojiGadne(v, 1);\n\tstd::cout << \"Opaki: \";\n\t\n\tfor(int i(0); i < vektor1.size(); i++) {\n\t\tstd::cout << vektor1[i] << \" \";\n\t}\n\tstd::cout << std::endl;\n\t\n\tauto vektor2 = IzdvojiGadne(v, 0);\n\tstd::cout << \"Odvratni: \";\n\tfor(int i(0); i < vektor2.size(); i++) {\n\t\tstd::cout << vektor2[i] << \" \";\n\t}\n\n\treturn 0;\n}",
        "student7249": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 1\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n#include <iostream>\n#include <vector>\n\nstd::vector<int> IzdvojiGadne(std::vector<int> v, bool opaki) {\n\tstd::vector<int> v1;\n\tif(opaki) {\n\t\tfor(int i=0; i<v.size(); i++) {\n\t\t\tstd::vector<int> brojaci(3);\n\t\t\tint x(v[i]);\n\t\t\tint c;\n\t\t\tdo {\n\t\t\t\tc=x%3;\n\t\t\t\tif(x<0) c=-c;\n\t\t\t\tx/=3;\n\t\t\t\tbrojaci[c]++;\n\t\t\t}while(x!=0);\n\t\t\tbool parnoponavljanje(true);\n\t\t\tfor(int j=0; j<brojaci.size(); j++) {\n\t\t\t\tif(brojaci[j]%2!=0 && brojaci[j]!=0) {\n\t\t\t\t\tparnoponavljanje=false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(parnoponavljanje) {\n\t\t\t\tif(v1.size()==0) v1.push_back(v[i]);\n\t\t\t\telse {\n\t\t\t\t\tfor(int k=0; k<v1.size(); k++) {\n\t\t\t\t\t\tif(v[i]!=v1[k] && k==v1.size()-1) v1.push_back(v[i]);\n\t\t\t\t\t\tif(v[i]==v1[k]) break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor(int i=0; i<v.size(); i++) {\n\t\t\tstd::vector<int> brojaci(3);\n\t\t\tint x(v[i]);\n\t\t\tint c;\n\t\t\tdo {\n\t\t\t\tc=x%3;\n\t\t\t\tif(x<0) c=-c;\n\t\t\t\tx/=3;\n\t\t\t\tbrojaci[c]++;\n\t\t\t}while(x!=0);\n\t\t\tbool neparnoponavljanje(true);\n\t\t\tfor(int j=0; j<brojaci.size(); j++) {\n\t\t\t\tif(brojaci[j]%2==0 && brojaci[j]!=0) {\n\t\t\t\t\tneparnoponavljanje=false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(neparnoponavljanje) { \t\n\t\t\t\tif(v1.size()==0) v1.push_back(v[i]);\n\t\t\t\telse {\n\t\t\t\t\tfor(int k=0; k<v1.size(); k++) {\n\t\t\t\t\t\tif(v[i]!=v1[k] && k==v1.size()-1) v1.push_back(v[i]);\n\t\t\t\t\t\tif(v[i]==v1[k]) break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn v1;\n}\n\nint main ()\n{\n\tstd::cout << \"Unesite brojeve (0 za prekid unosa): \";\n\tstd::vector<int> v;\n\tint i;\n\tdo {\n\t\tstd::cin >> i;\n\t\tif(i!=0) v.push_back(i);\n\t}while(i!=0);\n\tstd::vector<int> opaki=IzdvojiGadne(v, true);\n\tstd::vector<int> odvratni=IzdvojiGadne(v, false);\n\tstd::cout << \"Opaki: \";\n\tfor(int x : opaki) std::cout << x << \" \";\n\tstd::cout << std::endl;\n\tstd::cout << \"Odvratni: \";\n\tfor(int x : odvratni) std::cout << x << \" \";\n\treturn 0;\n}"
    },
    "68": {
        "label": "1",
        "student3872": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include<stdexcept>\n#include<vector>\n#include<set>\n#include<list>\n#include<algorithm>\n#include<string>\n#include<iomanip>\nusing namespace std;\nint DuzinaImena(string ime)\n{\n    \n    int brojac(0);\n    for(int i=0;i<ime.length();i++)\n    {\n        if((ime[i]>='A' && ime[i]<='Z') || (ime[i]>='a' && ime[i]<='z') || (ime[i]>='0' && ime[i]<='9'))\n        brojac++;\n    }\n    return brojac;\n}\nvector<set<string>> Razvrstavanje( const vector<string> &ImenaDjece, int broj_timova)\n {\n     if(broj_timova<1 || broj_timova>ImenaDjece.size()) throw logic_error(\"Razvrstavanje nemoguce\");\n    vector<set<string>> Krajnji;\n    set<string> temp;\n     list<string> lista_djece;\n     for(int i=0;i<ImenaDjece.size();i++)\n     lista_djece.push_back(ImenaDjece[i]);\n    \n     int br_tim=ImenaDjece.size()%broj_timova;\n     int broj_clanove(0), broj_timove(0);\n     int obican_broj_timova(ImenaDjece.size()/broj_timova);\n    int broj_timova_s_vise_djece(ImenaDjece.size()/broj_timova);\n    if(br_tim!=0) broj_timova_s_vise_djece++;\n     auto it(lista_djece.begin());\n     while(!lista_djece.empty())\n     {\n         int broj(DuzinaImena(*it));\n         temp.insert(*it);\n         it=lista_djece.erase(it);\n         if(it==lista_djece.end())\n            it=lista_djece.begin();\n            broj_clanove++;\n            if(broj_clanove==broj_timova_s_vise_djece)\n            {\n                Krajnji.push_back(temp);\n                broj_clanove=0;\n                broj_timove++;\n                temp.clear();\n            }\n            else if(broj_clanove== obican_broj_timova && broj_timove>= br_tim)\n            {\n                Krajnji.push_back(temp);\n                broj_clanove=0;\n                temp.clear();\n            }\n            for(int i(1);i<broj;i++)\n            {\n                it++;\n                if(it==lista_djece.end())\n                it=lista_djece.begin();\n            }\n     }\n     return Krajnji;\n }\nint main ()\n{\n    vector<string> djeca;\n\tint broj_djece;\n\tcout<<\"Unesite broj djece: \";\n\tcin>>broj_djece;\n\t\n\tcin.ignore(1000,'\\n');\n\tcout<<\"Unesite imena djece: \"<<endl;\n\t\n\tfor(int i=0;i<broj_djece;i++)\n\t{\n\t    string ime;\n\t    getline(cin, ime);\n\t    djeca.push_back(ime);\n\t}\n\tcout<<\"Unesite broj timova: \";\n\n\tint broj_timova;\n\tcin>>broj_timova;\n\ttry\n\t{\n\tvector<set<string>> Rezultat;\n\tRezultat=Razvrstavanje(djeca, broj_timova);\n\tint temp(0);\n  for(int i=0;i<Rezultat.size();i++)\n  {\n      cout<<\"Tim \"<<temp+1<<\": \";\n      int pom(Rezultat[i].size());\n      int brojac(0);\n      for(auto p(Rezultat[i].begin());p!=Rezultat[i].end();p++)\n      {\n          cout<<*p;\n          brojac++;\n          if(brojac!=pom)\n          cout<<\", \";\n      }\n      temp++;\n      cout<<endl;\n      \n  } \n\t}\n\tcatch(logic_error izuzetak)\n\t{\n\t    cout<<\"Izuzetak: \"<<izuzetak.what();\n\t}\n  return 0;\n\t\n\n\treturn 0;\n\t\n}",
        "student6184": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include <vector>\n#include <set>\n#include <iterator>\n#include <list>\n#include <iomanip>\n#include <stdexcept>\n\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> v,int n){\n    if(n<1 || n>v.size()) throw std::logic_error(\"Razvrstavanje nemoguce\");\n    \n    std::list<std::string> lista;\n    //std::list<std::string>::iterator it(lista.begin());\n    for(int i=0;i<v.size();i++){\n        lista.push_back(v[i]);\n\n    }// prepisivanje u listu\n   // std::cout<<\"Prepisano u listu: \";\n   // for(auto x : lista) std::cout << x << \" \";\n\n    //prvo odrediti koliko timova se moze napraviti i koliko oni mogu imati clanova\n    int broj_clanova1,broj_clanova2,br_sa_vise,br_sa_manje;\n    if(v.size()%n==0){\n        broj_clanova1=broj_clanova2=v.size()/2;\n        br_sa_vise=n-1;\n        br_sa_manje=1;\n    }else{\n            broj_clanova1=(v.size()/n+1);\n            broj_clanova2=(v.size()/n);\n            br_sa_vise=(v.size()%n);\n            br_sa_manje=(n-br_sa_vise);\n    }\n\n\n\n    std::vector<std::set<std::string>> povratni;\n    std::set<std::string> timovi;\n    std::list<std::string>::iterator it(lista.begin());\n    std::list<std::string>::iterator it1(lista.begin());\n     timovi.insert(*it);\n    it=lista.erase(it);\n    for(int i=0;i<1;i++){\n           for(int j=0;j<broj_clanova1-1;j++){\n              std::string pom(*it1);\n              int brojac(0);\n              for(int k=0;k<pom.size();k++){\n                  if((pom[k]>'a' && pom[k]<'z') || (pom[k]>'A' && pom[k]<'Z') || (pom[k]>48 && pom[k]<57)) brojac++;\n              }\n           for(int k=0;k<brojac;k++){\n               if(it==lista.end()) it=lista.begin();\n               it++;\n           }\n                    it--;\n                    it1=it;\n                   timovi.insert(*it);\n                   it=lista.erase(it);\n       }\n        povratni.push_back(timovi);\n    }\n     // std::cout<<\"opeta na *it1 \"<<*it1;\n   for(int i=0;i<br_sa_vise-1;i++){\n            std::set<std::string> timovi;\n           for(int j=0;j<broj_clanova1;j++){\n              int brojac((*it1).size());\n           for(int k=0;k<brojac;k++){\n               if(it==lista.end()) it=lista.begin();\n               it++;\n           }\n                    it--;\n                    it1=it;\n                      //std::cout<<\"opeta na *it1 \"<<*it1;\n                   timovi.insert(*it);\n                   it=lista.erase(it);\n       }\n        povratni.push_back(timovi);\n    }\n\n\n\n\n        // std::list<std::string>::iterator it2(it1);\n        it--;\n      // std::cout<<\"sad na *it \"<<*it;\n    for(int i=0;i<br_sa_manje;i++){\n              std::set<std::string> timovi1;\n           for(int j=0;j<broj_clanova2;j++){\n              int brojac((*it1).size());\n          for(int k=0;k<brojac;k++){\n               if(it==lista.end()) it=lista.begin();\n               it++;\n           }\n                    it--;\n                    it1=it;\n                   timovi1.insert(*it);\n                   it=lista.erase(it);\n\n       }\n        povratni.push_back(timovi1);\n\n    }\n    return povratni;\n\n}\n\n\nint main ()\n{\n    try{\n    std::cout<<\"Unesite broj djece: \";\n    int n;\n    std::cin>>n;\n    std::cout<<\"Unesite imena djece: \";\n    std::vector<std::string> v;\n    std::string pom;\n      std::cin.clear();\n       std::cin.ignore(1000 , '\\n');\n    for(int i=0;i<n;i++){\n       std::getline(std::cin,pom);\n        v.push_back(pom);\n         std::cin.clear();\n    }\n    //std::cout<<\"Imena iz vekotra: \"<<std::endl;\n    //for(int i=0;i<v.size();i++) std::cout<<v[i]<<\" \";\n    //std::cout<<std::endl;\n    std::cout<<\"Unesite broj timova: \";\n    int m;\n    std::cin>>m;\n    auto p(Razvrstavanje(v,m));\n    \n       \n        for(int i=0;i<p.size();i++){\n             std::cout<<\"Tim \"<<i+1<<\": \";\n             std::set<std::string>::iterator it(p[i].begin());\n            for(int j=0;j<p[i].size()-1;j++) {\n                std::cout<<*it<<\", \";\n                it++;\n            }\n            std::cout<<*it;\n            std::cout<<std::endl;\n        }}\n        catch(std::logic_error izuzetak){\n             std::cout<<\"Izuzetak: \"<<izuzetak.what();\n        }\n        \n\n    \n\treturn 0;\n}"
    },
    "69": {
        "label": "0",
        "student4152": "#include <stdio.h>\n#include <math.h> \n#define PI 3.141592\n#define epsilon 0.001\n\n int main() \n{\n  double xa, ya, xb, yb, xc, yc, a, b, c, alfa, beta, gama, max=0, ugao, stepeni, sec, min;\n  \n  \n  printf(\"Unesite koordinate tacke t1: \"); \n  scanf(\"%lf %lf\", &xa, &ya);\n  printf(\"Unesite koordinate tacke t2: \");\n  scanf(\"%lf %lf\", &xb, &yb);\n  printf(\"Unesite koordinate tacke t3: \"); \n  scanf(\"%lf %lf\" ,&xc, &yc);\n  \n  a = sqrt(pow(xb-xc,2) + pow(yb-yc,2));\n  b = sqrt(pow(xa-xc,2) + pow(ya-yc,2)); \n  c = sqrt(pow(xa-xb,2) + pow(ya-yb,2));\n  \n  \n if (fabs(a*a + b*b -c*c)<epsilon || (fabs(c*c+b*b-a*a)<epsilon) || (fabs(c*c+a*a-b*b)<epsilon)){\n    printf (\"Pravougli\\n\");\n   }\n    if ((xa*(yb-yc)+xb*(yc-ya)+xc*(ya-yb))==0) {\n    printf (\"Linija\\n\");\n    }\n   else if ((fabs(a-b)>epsilon && fabs(b-c)<epsilon && fabs(c-b)<epsilon) ||(fabs(c-a)>epsilon && fabs(a-b)<epsilon && fabs(b-a)<epsilon) || (fabs(c-b)>epsilon && fabs(a-c)<epsilon && fabs(c-a)<epsilon)){\n    printf (\"Jednakokraki\\n\");\n    }\n    if (fabs(a-b)<epsilon && fabs(b-c)<epsilon && fabs(c-a)<epsilon){\n   printf (\"Jednakostranicni\\n\");\n     }\n    if (fabs(a-b)>epsilon && fabs(b-c)>epsilon && fabs(c-a)>epsilon){\n    printf (\"Raznostranicni\\n\");\n    \n      \n       }\n  \n   alfa=acos((c*c+b*b-a*a)/(2*a*b));\n   beta=acos((a*a+c*c-b*b)/(2*a*c));\n   gama=acos((a*a+b*b-c*c)/(2*a*b)); \n   \n if (alfa>max)max=alfa;\n if (beta>max)max=beta;\n if (gama>max)max=gama;\n \n ugao=max*(180/(4*atan(1)));\n \n stepeni=(int)ugao; \n min=(ugao - (int)ugao)*60;\n sec=(min - (int)min)*60;\n min=(int)min;\n sec=(int)sec;\n\nprintf (\"Najveci ugao ima %g stepeni, %g minuta i %g sekundi.\", stepeni, min, sec);\n   \n   \n    \n   \treturn 0;\n   \t\n  }\n",
        "student4749": "#include <stdio.h>\n#include <math.h>\n#define PI 3.1415926\n#define EPSILON 0.00001\n\nint main() {\n\tdouble x1, x2, x3, y1, y2, y3, a, b, c, alfa, beta, gama, ugaomax;\n\tint stepen, min, sec;\n\tprintf(\"Unesite koordinate tacke t1: \");\n\tscanf(\"%lf %lf\", &x1, &y1);\n\tprintf(\"Unesite koordinate tacke t2: \");\n\tscanf(\"%lf %lf\", &x2, &y2);\n\tprintf(\"Unesite koordinate tacke t3: \");\n\tscanf(\"%lf %lf\", &x3, &y3);\n\ta=sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n\tb=sqrt((x3-x2)*(x3-x2)+(y3-y2)*(y3-y2));\n\tc=sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));\n\talfa=acos(((c*c)-(a*a)-(b*b))/((-2)*a*b));\n\tbeta=acos(((a*a)-(b*b)-(c*c))/((-2)*c*b));\n\tgama=acos(((b*b)-(a*a)-(c*c))/((-2)*a*c));\n\tif(alfa>beta && alfa>gama){\n\t\tugaomax=alfa;\n\t} else if(beta>alfa && beta>gama){\n\t\tugaomax=beta;\n\t} else {\n\t\tugaomax=gama;\n\t}\n\tugaomax=ugaomax*180/PI;\n\tstepen=ugaomax;\n\tmin=(ugaomax-stepen)*60;\n\tsec=(((ugaomax-stepen)*60)-min)*60;\n\tif(stepen==0 || stepen==180){\n\t\tprintf(\"Linija\\n\");\n\t\tprintf(\"Najveci ugao ima 180 stepeni, 0 minuta i 0 sekundi.\", stepen, min, sec);\n\t} else if(fabs(a-b)<EPSILON && fabs(a-c)<EPSILON){\n\t\tprintf(\"Jednakostranicni\\n\");\n\t\tprintf(\"Najveci ugao ima 60 stepeni, 0 minuta i 0 sekundi.\");\n\t} else if((fabs(a-b)>EPSILON && fabs(a-c)>EPSILON && fabs(b-c)<EPSILON) || (fabs(b-a)>EPSILON && fabs(b-c)>EPSILON && fabs(a-c)<EPSILON) || (fabs(c-a)>EPSILON && fabs(c-b)>EPSILON && fabs(a-b)<EPSILON)){\n\t\tif(stepen==90){\n\t\t\tprintf(\"Pravougli\\n\");\n\t\t}\n\t\tprintf(\"Jednakokraki\\n\");\n\t\tprintf(\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\", stepen, min, sec);\n\t} else if(fabs(a-b)>EPSILON && fabs(a-c)>EPSILON && fabs(b-c)>EPSILON){\n\t\tif(stepen==90){\n\t\t\tprintf(\"Pravougli\\n\");\n\t\t\tprintf(\"Raznostranicni\\n\");\n\t\t\tprintf(\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\", stepen, min, sec);\n\t\t} else {\n\t\t\tprintf(\"Raznostranicni\\n\");\n\t\t\tprintf(\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\", stepen, min, sec);\n\t\t}\n\t}\n\treturn 0;\n}"
    },
    "70": {
        "label": "1",
        "student1372": "#include <stdio.h>\n\nint touppoer(char c1,char c2)\n{\n\tif(c1<='z' && c1>='a') c1-=32;\n\tif(c2<='z' && c2>='a') c2-=32;\n\tif (c1==c2) return 1;\n\treturn 0;\n}\n\nint najduzi_podstring(char* prvi,int* zadnji)\n{\n\tchar* s=prvi;\n\tint max=0,tempmax;\n\tchar* kraj;\n\tchar* temp;\n\t\n\twhile(*s!='\\0'){\n\t\tif(*s<'A' ||*s>'z' ||(*s<'a' && *s>'Z')) break;\n\t\ts++;\n\t\t}\n\t\t\n\tkraj=s;//Na kraju rijeci\n\ts=prvi;\n\t\n\twhile(s<kraj){\n\t\t\n\t\ttemp=s+1;\n\t\twhile(temp<kraj){\n\t\t\tif(touppoer(*s,*temp)==1) break;\n\t\t\ttemp++;\n\t\t}\n\t\t\n\t\tif(temp<kraj)\n\t\tkraj=temp;\n\t\n\t\ts++;\t\n\t}\n\t\n\ttempmax=kraj-prvi;\n\t\n\tif(tempmax>max){\n\t\tmax=tempmax;\n\t\t*zadnji=max;\n\t\t\n\t}\n\t\n\treturn max;\n}\n\n\n\nvoid najduzi_bp(char* s1, char* s2)\n{\n\tchar* s = s1;\n\tchar* prvi=s1;\n\tchar* prvi1=s,*kraj1=s;\n\tint tempzadnji;\n\tint max=0,tempmax=0;\n\t\n\twhile(*s!='\\0')\n\t{\n\t\tif((*s<='Z' && *s>='A')||(*s<='z' && *s>='a') )\n\t\t{\n\t\t\t\n\t\ttempmax=najduzi_podstring(s,&tempzadnji);\n\t\t\n\t\tif(tempmax>max)\n\t\t{\n\t\t\tmax=tempmax;\n\t\t\tkraj1=s+tempzadnji;\n\t\t\tprvi1=s;\n\t\t}\n\t\t}\n\t\ts++;\n\t}\n\t\n\ts=prvi1;\n\t\n\twhile(s<kraj1)\n\t{\n\t*s2=*s;\n\ts2++;\n\ts++;\n\t}\n\t*s2='\\0';\n\t\n\t\n}\n\nint main() {\n\t\n\tchar niz[10];\n        najduzi_bp (\"abcdef predsjed bcdefg\", niz);\n        printf (\"Niz: '%s'\", niz);\n        \n\treturn 0;\n}\n",
        "student5348": "#include <stdio.h>\n\nint slovo(char c)\n{\n\tif((c<='Z' && c>='A')|| (c<='z' && c>='a')) return 1;\n\treturn 0;\n}\n\nint uporedi(char c1,char c2)\n{\n\tif(c1<='Z' && c1>='A') c1+=32;\n\tif(c2<='Z' && c2>='A') c2+=32;\n\tif (c1==c2) return 1;\n\treturn 0;\n\t\n}\n\nint provjeri_duzinu(int p,char* pocetni,int* k)//Fja koja radi sve i guess\n{\n\tchar* s=pocetni;\n\tint novi_max=0;\n\tint i,j;\n\tint kraj1;\n\t\n\tfor(i=p;s[i]!='\\0';i++)\n\tif(!slovo(s[i]))//Trazim i od prvog ne slovo clana i stavljam granicu\n\tbreak;\n\t\n\tkraj1=i;\n\n\tfor(i=p;i<kraj1;i++)//Kroz sva slova prve rijeci\n\t{\n\t\t\n\t\tfor(j=i+1;j<kraj1;j++)//Ako se javlja do kraja break\n\t\t\tif(uporedi(s[i],s[j])) break;\n\t\t\n\t\tif(j<kraj1)//Ako se break smanji se granica\n\t\t\tkraj1=j;\n\t}\n\t\n\tif(kraj1-p>novi_max)//Ako je podstring duzi od najduzeg\n\t{\n\t\t\t\tnovi_max=kraj1-p;//Duzina postaje nova\n\t\t\t\t*k=kraj1;//i kraj podstringa\n\t\t\t}\n\t\n\treturn novi_max;\n}\n\nvoid najduzi_bp(char* s, char* rijec)\n{\n\tint p1=0,k1=0;\n\tint i=0,tempk=0,j=0;\n\tint max=0,pmax=0;\n\t\n\tfor(i=0;s[i]!='\\0';i++)\n\t{\n\t\tif((s[i]<='Z' && s[i]>='A')|| (s[i]<='z' && s[i]>='a'))//Ako je doslo do nekog slova\n\t\t{\n\t\t\tpmax=provjeri_duzinu(i,s,&tempk);\n\t\t\tif(pmax>max)\n\t\t\t{\n\t\t\t\tmax=pmax;\n\t\t\t\tk1=tempk;\n\t\t\t\tp1=i;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=p1;i<k1;i++)\n\trijec[j++]=s[i];\n\trijec[j]='\\0';\n}\n\nint main() {\n\n\treturn 0;\n}\n"
    },
    "71": {
        "label": "0",
        "student8089": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define EPSILON 0.00001\nint main() {\n\t\n\tdouble mat[100][100];\n\tint i,j,cir=1,tep=1,m,n;\n\t\n\tdo {\n\t\t\n\tprintf(\"Unesite M i N: \");\n\tscanf(\"%d %d\",&m,&n);\n\t\n\tif (m<=0 || m>100 || n<=0 || n>100)\n\tprintf(\"Pogresan unos!\\n\");\n\t\n\t}while(m<=0 || n<=0 || m>100 || n>100);\n\t\n\tprintf(\"Unesite elemente matrice: \");\n\tfor(i=0;i<m;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tscanf(\"%lf\",&mat[i][j]);\n\t\t}\n\t}\n\tfor(i=0;i<m-1 ;i++){\n\t\tif(tep==0){\n\t\tbreak;}\n\t\tfor(j=0;j<n-1;j++){\n\t\t\tif(fabs(mat[i][j]-mat[i+1][j+1])>EPSILON){\n\t\t\ttep=0;\n\t\t\tcir=0;\n\t\t\n\t\t\t}\n\t\t}\n\t}\n\tif (tep==1){\n\t\tfor(i=1;i<m;i++){\n\t\tif(cir==0)\n\t\tbreak;\n\t\tif (fabs(mat[i][0]-mat[i-1][n-1])>EPSILON)\n\t\tcir=0;\n\t}\n\t}\n\tif(cir==1)\n\tprintf(\"Matrica je cirkularna\");\n\telse if (cir==0 && tep==1)\n\tprintf(\"Matrica je Teplicova\");\n\telse\n\tprintf(\"Matrica nije ni cirkularna ni Teplicova\");\n\t\n\treturn 0;\n}\n",
        "student9569": "#include <stdio.h>\n\nint main() {\n\tdouble s[100][100];\n\tint i, j, M, N, tepl= 1, cirk= 1;\n\t\n\tdo{\n\t\tprintf(\"Unesite M i N: \");\n\t\tscanf(\"%d %d\", &M, &N);\n\t\tif(M<=0 || M>100 || N<=0 || N>100) {\n\t\t\tprintf(\"Pogresan unos!\\n\");\n\t\t}\n\t}\n\twhile(M<=0 || M>100 || N<=0 || N>100);\n\tprintf(\"Unesite elemente matrice: \");\n\t\n\tfor(i=0;i<M;i++)\n\t{\n\t\tfor(j=0;j<N;j++)\n\t\t{\n\t\t\tscanf (\"%lf\",&s[i][j]);\n\t\t}\n\t}\n\t\n\tfor(i=0;i<M;i++){\n\t\tfor(j=0;j<N;j++){\n\t\t\tif(s[0][j]!=s[i][(i+j)%N]){\n\t\t\t\t\n\t\t\t\tcirk= 0; \n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(i=0;i<M-1;i++){\n\t\tfor(j=0;j<N-1;j++){\n\t\t\tif(j+1<N){\n\t\t\t\tif(s[i][j]!=s[i+1][j+1]){\n\t\t\t\t\ttepl= 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\tif(cirk==1) printf(\"Matrica je cirkularna\");\n\t\telse if(cirk==0 && tepl==1) printf(\"Matrica je Teplicova\");\n\t\telse printf(\"Matrica nije ni cirkularna ni Teplicova\");\n\t\n\n\treturn 0;\n}\n"
    },
    "72": {
        "label": "1",
        "student7094": "#include <stdio.h>\n\nint dva_od_tri(int niz1[], int vel1, int niz2[], int vel2, int niz3[], int vel3)\n{\n\nint i,j,k,g;\nint brojac=0;\n\n\nfor (i=0; i<vel1; i++) {\n\tfor(g=0;g<i;g++)\n\t\tif(niz1[i]==niz1[g] && g!=i) break; //Provjeravamo da li se niz1[i] vec javio u tom istom nizu\n\tif(g==i) //Ako nije kod radi normalno\n\t{\n\tfor (j=0; j<vel2; j++) //Provjeravamo da li se niz1[i] nalazi u niz2 i ako se nalazi:\n\tif (niz1[i]==niz2[j]){ \n\tfor (k=0; k<vel3; k++)\n\tif (niz1[i]==niz3[k]) break; //Provjeravamo da li se niz1[i] javlja u niz3 ako ne onda uvecavamo brojac jer se nalazi u 2 od 3 niza\n\tif(k==vel3) {\n\t\tbrojac++; \n\t\tbreak;}\n}\n}\n}\nfor (j=0; j<vel2; j++) {\n\tfor(g=0;g<j;g++)\n\t\tif(niz2[j]==niz2[g] && g!=j) break;\n\tif(g==j)\n\t{\n\tfor (k=0; k<vel3; k++)\n\tif (niz2[j]==niz3[k]){\n\tfor (i=0; i<vel1; i++)\n\tif (niz2[j]==niz1[i]) break;\n\tif(i==vel1) {\n\t\tbrojac++;\n\t\tbreak;}\n}\n}\n}\nfor (k=0; k<vel3 ; k++) {\n\tfor(g=0;g<k;g++)\n\t\tif(niz3[k]==niz3[g] && g!=k) break;\n\tif(g==k)\n\t{\n\tfor (i=0; i<vel1; i++)\n\tif (niz3[k]==niz1[i]){\n\tfor (j=0; j<vel2; j++)\n\tif (niz3[k]==niz2[j]) break;\n\tif(j==vel2) {\n\t\tbrojac++;\n\t\tbreak;}\n}\n}\n}\nreturn brojac;\n}\n\nint main() {\n\t\n\treturn 0;\n}\n",
        "student7382": "#include <stdio.h>\n\nint dva_od_tri(int nizi[],int veli, int nizj[], int velj, int nizk[], int velk)\n{\n\tint a,b,c,d;\n\tint brojac=0;\n\n\tfor (a=0;a<veli;a++) {\n\t\tfor (d=0;d<a;d++)\n\t\t\tif(nizi[a]==nizi[d] && d!=a) //Provjera da li se nizi[a] prije pojavio u tom istom nizu\n\t\t\tbreak; \n\t\t\tif(d==a) //U slucaju da nije sve radi uredu\n\t\t\t{ \n\t\t\t\n\t\t\tfor (b=0;b<velj;b++) //Provjera da li se nizi[a] nalazi u nizu nizj\n\t\t\t\tif(nizi[a]==nizj[b]) {\n\t\t\t\t\tfor(c=0; c<velk; c++)\n\t\t\t\t\t\tif(nizi[a]==nizk[c]) break; //Provjera da li se nizi[a] pojavljuje u nizf ako se ne pojavljuje brojac se uvecava, jer se vec nalazi u 2 od 3 niza\n\t\t\t\t\tif(c==velk) {\n\t\t\t\t\t\tbrojac++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tfor(b=0;b<velj;b++) {\n\t\t\tfor(d=0;d<b;d++)\n\t\t\t\tif(nizj[b]==nizj[d] && d!=b)\n\t\t\t\t\tbreak;\n\t\t\tif(d==b) {\n\n\t\t\t\tfor(c=0;c<velk;c++)\n\t\t\t\t\tif(nizj[b]==nizk[c]) {\n\t\t\t\t\t\tfor(a=0;a<veli;a++)\n\t\t\t\t\t\t\tif(nizj[b]==nizi[a]) break;\n\t\t\t\t\t\tif(a==veli) {\n\t\t\t\t\t\t\tbrojac++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (c=0; c<velk; c++) {\n\t\t\t\tfor(d=0;d<c;d++)\n\t\t\t\t\tif(nizk[c]==nizk[d] && d!=c)\n\t\t\t\t\t\tbreak;\n\t\t\t\tif(d==c) {\n\n\t\t\t\t\tfor(a=0; a<veli; a++)\n\t\t\t\t\t\tif(nizk[c]==nizi[a]) {\n\t\t\t\t\t\t\tfor(b=0 ;b<velj; b++)\n\t\t\t\t\t\t\t\tif(nizk[c]==nizj[b])\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tif(b==velj) {\n\t\t\t\t\t\t\t\tbrojac++;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn brojac;\n\t\t}\n\n\t\tint main() {\n\n\t\t\treturn 0;\n\t\t}\n"
    },
    "73": {
        "label": "0",
        "student4036": "#include <stdio.h>\n\nint main() {\n    int unos, i, j;\n    char a[20][20];\n    for (i = 0; i < 20; i++){\n        for (j = 0; j < 20; j++){\n            a[i][j] = ' ';\n        }\n    }\n    \n    do {\n\tprintf(\"Unesite broj tacaka: \");\n\tscanf (\"%d\", &unos);\n\tif (unos <= 0 || unos > 10)\n\tprintf(\"Pogresan unos \\n\");\n\telse break;\n    } while (1);\n    for (i = 0; i < unos; i++){\n    int x,y;\n    printf(\"Unesite %d. tacku: \",i+1);\n    scanf(\"%d %d\",&x, &y);\n    if (x >= 0 && x<=19 && y>=0 && y<=19){\n        a[x][y] = '*';\n    }\n    else {\n        printf(\"Pogresan unos\\n\");\n        i--;\n    }\n    }\n    \n    \n    int kocka = 0;\n    for (kocka; kocka < 20; kocka++){\n        int sat = 0;\n        for (sat; sat < 20; sat++){\n            if (a[sat][kocka] == '*')\n                printf(\"*\");\n            else printf (\" \");\n    \n        }\n        printf(\"\\n\");\n    \n    }\n    \n    \n    \n\treturn 0;\n}\n",
        "student7956": "#include <stdio.h>\n\n#include <stdio.h>\n\nint main() {\n\t\n\tint mat[20][20];\n\tint i, j, C, x, y;\n\t\n\tfor(i=0; i<20; i++) {\n\t\tfor(j=0; j<20; j++) {\n\t\t\tmat[i][j]=0;\n\t\t\t}\n\t}\n\t\t\n\tdo {\n\tprintf(\"Unesite broj tacaka: \");\n\tscanf(\"%d\", &C);\n\tif(C>10 || C<1) printf(\"Pogresan unos\\n\");\n\t}\n\twhile(C>10 || C<1);\n\t\n\tfor(i=0; i<C; i++) {\n\t\tdo{\n\t\tprintf(\"Unesite %d. tacku: \", i+1);\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tif(x<0 || x>19 || y<0 || y>19) printf(\"Pogresan unos\\n\");\n\t\t}\n\t\twhile(x<0 || x>19 || y<0 || y>19);\n\t\tmat[y][x]='*';\n\t}\n\tfor(i=0; i<20; i++) {\n\t\tfor(j=0; j<20; j++) {\n\t\t\tif(mat[i][j]=='*') printf(\"*\");\n\t\t\telse {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n\t\nreturn 0;\t\n\t\n\t\n}"
    },
    "74": {
        "label": "1",
        "student4261": "#include <stdio.h>\n\n/* Funkcija koja broji koliko se clanova javlja u dva niza, a ne u tre\u0107em: */\nint za_svaki (int niz1[], int vel1, int niz2[], int vel2, int niz3[], int vel3) {\n\tint i, j, k, brojac=0;\n\tfor (i=0; i<vel1; i++) {\n\t\tfor (j=0; j<vel2; j++) {\n\t\t\tif (niz1[i]==niz2[j]) {\n\t\t\t\tbrojac++;\n\t\t\t\tfor (k=0; k<vel3; k++) {\n\t\t\t\t\tif (niz1[i]==niz3[k]) brojac--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn brojac;\n}\n\n/* Funkcija koja izbacuje duple clanove iz datih nizova: */\nint izbaci_duple (int niz[], int vel) {\n\tint i, j;\n\tfor (i=0; i<vel; i++) {\n\t\tfor (j=i+1; j<vel; j++) {\n\t\t\tif (niz[i]==niz[j]) {\n\t\t\t\tniz[j]=niz[vel-1];\n\t\t\t\tj--;\n\t\t\t\tvel--;\n\t\t\t}\n\t\t}\n\t}\n\treturn vel;\n}\n\nint dva_od_tri (int nizA[], int velA, int nizB[], int velB, int nizC[], int velC) {\n\tint brojac=0;\n\t\n\tvelA=izbaci_duple(nizA, velA);\n\tvelB=izbaci_duple(nizB, velB);\n\tvelC=izbaci_duple(nizC, velC);\n\t\n\t/* Funkciju za_svaki pozivamo za sve kombinacije data tri niza: */\n\tbrojac=za_svaki(nizA, velA, nizB, velB, nizC, velC);\n\tbrojac+=za_svaki(nizA, velA, nizC, velC, nizB, velB);\n\tbrojac+=za_svaki(nizB, velB, nizC, velC, nizA, velA);\n\t\n\treturn brojac;\n}\nint main() {\n\tprintf(\"Zada\u0107a 3, Zadatak 1\");\n}\n",
        "student4468": "#include <stdio.h>\n\nint pomocna_fja (int niz1[], int vel1, int niz2[], int vel2, int niz3[], int vel3)\n{\n    int i, j, k;\n    int brojac = 0;\n\n    for (i=0; i<vel1; i++) \n    {\n        for (j=0; j<vel2; j++)\n        {\n            if (niz1[i] == niz2[j]) \n            {\n                brojac++;\n                for (k=0; k<vel3; k++)\n                {\n                    if (niz1[i]==niz3[k]) \n                    {\n                        brojac--;\n                        k=vel3;\n                    }\n                }\n            }\n        }\n    }\n            return brojac;\n        }\n  \n\n        int dva_od_tri (int niz1 [], int vel1, int niz2 [], int vel2, int niz3[], int vel3) {\n            int brojac=0;\n            brojac+=pomocna_fja (niz1, vel1, niz2, vel2, niz3, vel3);\n            brojac+=pomocna_fja (niz2, vel2, niz3, vel3, niz1, vel1);\n            brojac+=pomocna_fja (niz1, vel1,niz3, vel3, niz2, vel2);\n            return brojac;\n        }\n\n        int main () {\n            int niz1 [] = {1, 2, 3, 4};\n            int niz2 [] = {2, 3, 4, 5};\n            int niz3 [] = {3, 4, 5, 6};\n            int niz4 [1];\n            int b = dva_od_tri (niz1, 4, niz2, 4, niz4, 0);\n            printf (\"%d\", b);\n            b = dva_od_tri (niz1, 4, niz4, 0, niz3, 4);\n            printf (\"%d\", b);\n            b = dva_od_tri (niz4, 0, niz2, 4, niz3, 4);\n            printf (\"%d\", b);\n            b = dva_od_tri (niz1, 4, niz2, 4, niz3, 4);\n            printf (\"%d\", b);\n            return 0;\n    }"
    },
    "75": {
        "label": "0",
        "student1200": "#include <stdio.h>\n\nint main()\n{\n\tint n,i,j;\n\tdo {\n\t\tprintf(\"Unesite broj n: \");\n\t\tscanf(\"%d\",&n);\n\t\tif(n<1 || n>50) printf(\"Pogresan unos\\n\");\n\t} while(n<1 || n>50);\n\tif(n!=1)\n\t\tfor(i=0; i<n; i++) {\n\t\t\tfor(j=0; j<4*n; j++) {\n\t\t\t\tif(i==0 && j==0 || i==0 && j==4*n-4 || i==0 && j==2*n-2) printf(\"*\");\n\t\t\t\telse if(i==j || j==2*n+i-1-1) printf(\"*\");\n\t\t\t\telse if(i+j==2*n-2 && i!=n-1 && j<2*n-1) printf(\"*\");\n\t\t\t\telse if(i+j==4*n-4 && i!=n-1 && j<4*n-1) printf(\"*\");\n\t\t\t\telse printf(\" \");\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\telse printf(\"***\");\n\treturn 0;\n}\n",
        "student8124": "#include <stdio.h>\n#define zvijezda \"*\"\n#define prazno \" \"\n\n\nint main()\n{\n\n    int n, i, j;\n\n    do {\n        printf(\"\\nUnesite broj n: \");\n        scanf(\"%d\", &n);\n\n        if (n<0 || n>50)\n            printf(\"\\nPogresan unos\");\n    }\n    while (n<0 || n>50);\n\n\n    for (i=1; i<=n; i++) {\n\n\n        if (i==1)\n            printf(zvijezda);\n        else\n            printf(prazno);\n\n        for (j=1; j<=i-2; j++)\n            printf(prazno);\n\n        if (i>1)\n            printf(\"*\");\n\n        for (j=1; j<=2*n-1-2*i; j++)\n            printf(prazno);\n\n        if (i<n || n==1)\n            printf(zvijezda);\n\n        for (j=1; j<=i-1; j++)\n            printf(prazno);\n\n\n        for (j=1; j<=i-2; j++)\n            printf(prazno);\n\n        if (i>1)\n            printf(zvijezda);\n\n        for (j=1; j<=2*n-1-2*i; j++)\n            printf(prazno);\n\n        if (i<n || n==1)\n            printf(zvijezda);\n\n        for (j=1; j<=i-1; j++)\n            printf(prazno);\n\n        // prelom u novi red\n\n        printf(\"\\n\");\n\n    }\n\n    return 0;\n}"
    },
    "76": {
        "label": "1",
        "student4419": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 3\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Berina Cocalic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: bcocalic1@etf.unsa.ba\n\t\n*/\n#include <iostream>\n#include <deque>\n#include <iomanip>\n#include <algorithm>\n#include <vector> \n\nint sumaCifara (long long int n) \n{\n\tint suma(0);\n\twhile(n!=0)\n\t{\n\t\tint cifra=n%10;\n\t\tsuma+=cifra;\n\t\tn/=10;\n\t}\n\treturn suma;\n}\n\nint SumaDjelilaca (long long int n)\n{\n\tif(n<0) n=(-1)*n;\n\tint suma(0);\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tif(n%i==0) suma+=i;\n\t}\n\treturn suma;\n}\n\nint BrojProstihFaktora(long long int n)\n{\n\tbool prost(1);\n\tint brojac(0);\n\tfor(int i=2; i<=n; i++)\n {\n\t\tif(i==2) prost=1;\n\t\tfor(int j=3; j<i; j++) \n\t\t{\n\t\t\tif(i%j==0) prost=0;\n\t\t}\n\t\t\n\t\twhile(n%i==0)\n\t\t{\n\t\t\tif(prost==1) \n\t\t\t{\n\t\t\t\tbrojac++;\n\t\t\t\tn=n/i;\n\t\t    }\n\t    }\n\t    prost=1;\n }\n return brojac;\n}\n\nint BrojSavrsenihDjelilaca(long long int n)\n{\n\tint brojac(0);\n\tfor(int i=3; i<=n; i++)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tint suma(0);\n\t\t\tfor(int j=1; j<i; j++)\n\t\t\t{\n\t\t\t\tif(i%j==0) suma+=j;\n\t\t\t}\n\t\t\tif(i==suma) brojac++;\n\t\t}\n\t}\n\treturn brojac;\n}\n\ntemplate <typename NekiTip1, typename NekiTip2, typename NekiTip3, typename NekiTip4>\nauto UvrnutiPresjek(NekiTip1 it1, NekiTip1 it2, NekiTip2 it3, NekiTip2 it4, NekiTip3 funkcija(NekiTip4)) -> std::vector<std::vector<decltype((*it3)+0)>>\n{\n\tstd::vector<std::vector<decltype((*it3)+0)>> matrica(100);\n\tint brojac(0);\n\tauto pomocna=it3;\n\tint i(0);\n\t\n\twhile(it1!=it2)\n\t{\n\t\tif(funkcija(*it1)==funkcija(*it3)) \n\t\t{\n\t\t\tmatrica[i].push_back(*it1);\n\t\t\tmatrica[i].push_back(*it3);\n\t\t\tmatrica[i].push_back(funkcija(*it1));\n\t\t\ti++;\n\t\t\tbrojac++;\n\t\t}\n\t\t\n\t\tif(it3!=it4) it3++;\n\t\tif(it3==it4)\n\t\t{\n\t\t\tit1++;\n\t\t\tit3=pomocna;\n\t\t}\n\t}\n\t\n\tmatrica.resize(brojac);\n\t\n\tstd::sort(matrica.begin(), matrica.end(), [] (std::vector<decltype((*it3)+0)> v1, std::vector<decltype((*it3)+0)> v2) -> bool \n\t{\n\t\tif(v1.at(2)<v2.at(2)) return true;\n\t\telse if(v1.at(0)<v2.at(0) && v1.at(2)==v2.at(2)) return true;\n\t\telse if(v1.at(2)==v2.at(2) && v1.at(0)==v2.at(0) && v1.at(1)<v2.at(1)) return true;\n\t\t\n\t\treturn false;\n\t});\n\n     return matrica;\n}\n\ntemplate <typename NekiTip1, typename NekiTip2>\nauto UvrnutiPresjek (NekiTip1 it1, NekiTip1 it2, NekiTip2 it3, NekiTip2 it4) -> std::vector<std::vector<decltype((*it3)+0)>> {\n\tstd::vector<std::vector<decltype((*it3)+0)>> matrica(100);\n\t\n\tint brojac(0);\n\tint i(0);\n\tauto pomocna=it3;\n\t\n\twhile(it1!=it2)\n\t{\n\t\twhile(it3!=it4)\n\t\t{\n\t\t\tif(*it1==*it3)\n\t\t\t{\n\t\t\t\tmatrica[i].push_back(*it1);\n\t\t\t\tmatrica[i].push_back(0);\n\t\t\t\tmatrica[i].push_back(0);\n\t\t\t\ti++;\n\t\t\t\tbrojac++;\n\t\t\t}\n\t\t\tit3++;\n\t\t\t\n\t\t}\n\t\tit3=pomocna;\n\t\tit1++;\n\t}\n\tmatrica.resize(brojac);\n\treturn matrica;\n}\n\ntemplate <typename NekiTip1, typename NekiTip2, typename NekiTip3, typename NekiTip4>\nauto UvrnutaRazlika(NekiTip1 it1, NekiTip1 it2, NekiTip2 it3, NekiTip2 it4, NekiTip3 funkcija(NekiTip4)) -> std::vector<std::vector<decltype((*it3)+0)>>\n{\n\tstd::vector<std::vector<decltype((*it3)+0)>> matrica(100);\n\tint brojac(0);\n\tint i(0);\n\tauto pomocna=it3;\n\tauto pomocna2=it1;\n\t\n\twhile(it1!=it2)\n\t{\n\t\tint isti(0);\n\t\t\n\t\twhile(it3!=it4)\n\t\t{\n\t\t\tif(funkcija(*it1)==funkcija(*it3)) isti++;\n\t\t\tit3++;\n\t\t}\n\t\tif(isti==0)\n\t\t{\n\t\t\tmatrica[i].push_back(*it1);\n\t\t\tmatrica[i].push_back(funkcija(*it1));\n\t\t\tbrojac++;\n\t\t\ti++;\n\t\t}\n\t\tit1++;\n\t\tit3=pomocna;\n\t}\n\tit1=pomocna2;\n\tit3=pomocna;\n\t\n\twhile(it3!=it4)\n\t{\n\t\tint isti(0);\n\t\t\n\t\twhile(it1!=it2)\n\t\t{\n\t\t\tif(funkcija(*it3)==funkcija(*it1)) isti++;\n\t\t\tit1++;\n\t\t}\n\t\tif(isti==0)\n\t\t{\n\t\t\tmatrica[i].push_back(*it3);\n\t\t\tmatrica[i].push_back(funkcija(*it3));\n\t\t\tbrojac++;\n\t\t\ti++;\n\t\t}\n\t\tit3++;\n\t\tit1=pomocna2;\n\t}\n\tmatrica.resize(brojac);\n\tstd::sort(matrica.begin(), matrica.end(), [] (std::vector<decltype((*it3)+0)>v1, std::vector<decltype((*it3)+0)>v2) -> bool {\n\t\tif(v1.at(0)>v2.at(0)) return true;\n\t\telse if(v1.at(1)>v2.at(1) && v1.at(0)==v2.at(0)) return true;\n\t\t\n\t\treturn false;\n\t});\n\treturn matrica;\n}\n\ntemplate <typename NekiTip1, typename NekiTip2>\n\nauto UvrnutaRazlika(NekiTip1 it1, NekiTip1 it2, NekiTip2 it3, NekiTip2 it4) -> std::vector<std::vector<decltype((*it3)+0)>> {\n\tstd::vector<std::vector<decltype((*it3)+0)>> matrica(100);\n\tint brojac(0);\n\tint i(0);\n\tauto pomocna=it3;\n\tauto pomocna2=it1;\n\t\n\twhile(it1!=it2)\n\t{\n\t\tint isti(0);\n\t\t\n\t\twhile(it3!=it4)\n\t\t{\n\t\t\tif(*it1==*it3) isti++;\n\t\t\tit3++;\n\t\t}\n\t\tif(isti==0)\n\t\t{\n\t\t\tmatrica[i].push_back(*it1);\n\t\t\tmatrica[i].push_back(0);\n\t\t\tbrojac++;\n\t\t\ti++;\n\t\t}\n\t\tit1++;\n\t\tit3=pomocna;\n\t}\n\tit1=pomocna2;\n\tit3=pomocna;\n\t\n\twhile(it3!=it4)\n\t{\n\t\tint isti(0);\n\t\t\n\t\twhile(it1!=it2)\n\t\t{\n\t\t\tif(*it3==*it1) isti++;\n\t\t\tit1++;\n\t\t}\n\t\tif(isti==0)\n\t\t{\n\t\t\tmatrica[i].push_back(*it3);\n\t\t\tmatrica[i].push_back(0);\n\t\t\tbrojac++;\n\t\t\ti++;\n\t\t}\n\t\tit3++;\n\t\tit1=pomocna2;\n\t}\n\tmatrica.resize(brojac);\n\tstd::sort(matrica.begin(), matrica.end(), [] (std::vector<decltype((*it3)+0)>v1, std::vector<decltype((*it3)+0)>v2) -> bool {\n\t\tif(v1.at(0)>v2.at(0)) return true;\n\t\telse if(v1.at(1)>v2.at(1) && v1.at(0)==v2.at(0)) return true;\n\t\t\n\t\treturn false;\n\t});\n\treturn matrica;\n}\n\t\t\n\nint main ()\n{\n\tstd::deque<int> v;\n\tstd::deque<int> v1;\n\t\n\tint n,n1,br,br1;\n\t\n\tstd::cout<<\"Unesite broj elemenata prvog kontejnera: \";\n\tstd::cin>>br;\n\tstd::cout << \"Unesite elemente prvog kontejnera: \";\n\tfor(;;)\n\t{\n\t\tstd::cin>>n;\n\t\tint isti(0);\n\t\tfor(int j=0; j<v.size(); j++)\n\t\t{\n\t\t\tif(n==v[j]) isti++;\n\t\t}\n\t\tif(isti==0) v.push_back(n);\n\t\tif(v.size()==br) break;\n\t}\n\t\n\tstd::cout << \"Unesite broj elemenata drugog kontejnera: \";\n\tstd::cin>>br1;\n\tstd::cout << \"Unesite elemente drugog kontejnera: \";\n\tfor(;;)\n\t{\n\t\tstd::cin>>n1;\n\t\tint isti(0);\n\t\tfor(int j=0; j<v1.size(); j++)\n\t\t{\n\t\t\tif(n1==v1[j]) isti++;\n\t\t}\n\t\tif(isti==0) v1.push_back(n1);\n\t\tif(v1.size()==br1) break;\n\t}\n\t\n\tstd::cout << \"Uvrnuti presjek kontejnera:\" << std::endl;\n\t\n\tauto rez=UvrnutiPresjek(v.begin(), v.end(), v1.begin(), v1.end(), sumaCifara);\n\tauto rez2=UvrnutaRazlika(v.begin(), v.end(), v1.begin(), v1.end(), BrojProstihFaktora);\n\t\n\tfor(int i=0; i<rez.size(); i++)\n\t{\n\t\tfor(int j=0; j<rez[0].size(); j++)\n\t\t{\n\t\t\tstd::cout << std::right <<std::setw(6)<<rez[i][j]<<\" \"; \n\t\t}\n\t\tstd::cout<< std::endl;\n\t}\n\t\n\tstd::cout << \"Uvrnuta razlika kontejnera:\" << std::endl;\n\t\n\tfor(int i=0; i<rez2.size(); i++)\n\t{\n\t\tfor(int j=0; j<rez2[0].size(); j++)\n\t\t{\n\t\t\tstd::cout << std::right <<std::setw(6)<<rez2[i][j]<<\" \";\n\t\t}\n\t\t\n\t\tstd::cout<< std::endl;\n\t}\n\t\n\tstd::cout << \"Dovidjenja!\";\n\t\n\treturn 0;\n}",
        "student6547": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 3\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Berina Cocalic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: bcocalic1@etf.unsa.ba\n\t\n*/\n#include <iostream>\n#include <vector>\n#include <deque>\n#include <algorithm>\n#include <iomanip>\n\nint SumaCifara (long long int n) {\n\tint suma(0);\n\twhile(n!=0) {\n\t\tint cifra=n%10;\n\t\tsuma+=cifra;\n\t\tn/=10;\n\t}\n\treturn suma;\n}\n\nint SumaDjelilaca (long long int n) {\n\tif(n<0) n=(-1)*n; \n\tint suma(0);\n\tfor(int i=1; i<=n; i++) {\n\t\tif(n%i==0) suma+=i;\n\t}\n\treturn suma;\n}\nbool DaLiJeProst(long long int n) {\n\tif(n==2) return true;\n\tfor(int i=2; i<n; i++) {\n\t\tif(n%i==0) return false;\n\t}\n\treturn true;\n}\n\nint BrojProstihFaktora(long long int n) {\n\n\tint brojac(0);\n\tfor(int i=2;i<=n; i++) {\n\t\twhile(n%i==0) {\n\t\t\tif(DaLiJeProst(i)) {\n\t\t\t\tbrojac++;\n\t\t\t\tn=n/i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\treturn brojac;\n}\n\n\n\nbool DaLiJeSavrsen(long long int n) {\n\tint suma(0);\n\tfor(int i=1; i<n; i++) {\n\t\tif(n%i==0) suma+=i;\n\t}\n\tif(n==suma) return true;\n\telse return false;\n}\n\nint BrojSavrsenihDjelilaca(long long int n) {\n\tint brojac(0);\n\tfor(int i=3; i<=n; i++) {\n\t\tif(n%i==0) {\n\t\t\tif(DaLiJeSavrsen(i)) brojac++;\n\t\t}\n\t}\n\treturn brojac;\n}\n\n\n\ntemplate <typename NekiTip1, typename NekiTip2, typename NekiTip3, typename NekiTip4>\nauto UvrnutiPresjek(NekiTip1 it1, NekiTip1 it2, NekiTip2 it3, NekiTip2 it4, NekiTip3 funkcija(NekiTip4)) -> std::vector<std::vector<decltype((*it3)+0)>>  {\n\tstd::vector<std::vector<decltype((*it3)+0)>> matrica(100);\n\tint brojac(0);\n\tauto pomocna=it3;\n\tint i(0);\n\twhile(it1!=it2) {\n\tif(funkcija(*it1)==funkcija(*it3)) {\n\tmatrica[i].push_back(*it1);\n\tmatrica[i].push_back(*it3);\n\tmatrica[i].push_back(funkcija(*it1));\n\ti++;\n\tbrojac++;\t\n\t}\n\t\n\tif(it3!=it4) it3++;\n\tif(it3==it4) {\n\t\tit1++;\n\t\tit3=pomocna;\n\t}\n\t}\n\tmatrica.resize(brojac);\n\tstd::sort(matrica.begin(), matrica.end(),[] (std::vector<decltype((*it3)+0)> v1, std::vector<decltype((*it3)+0)> v2) ->bool {\n\tif(v1.at(2)<v2.at(2)) return true;\n\telse if(v1.at(0)<v2.at(0)  && v1.at(2)==v2.at(2)) return true;\t\n\telse if(v1.at(2)==v2.at(2) && v1.at(0)==v2.at(0) && v1.at(1)<v2.at(1)) return true;\n\t\n\treturn false;\n});\n\n\treturn matrica;\n\n}\n\ntemplate <typename NekiTip1, typename NekiTip2>\nauto UvrnutiPresjek(NekiTip1 it1, NekiTip1 it2, NekiTip2 it3, NekiTip2 it4) -> std::vector<std::vector<decltype((*it3)+0)>> {\nstd::vector<std::vector<decltype((*it3)+0)>> matrica(100);\nint brojac(0);\nint i(0);\nauto pomocna=it3;\nwhile(it1!=it2) {\n\t\twhile(it3!=it4) {\n\t\t\tif(*it1==*it3) {\n\t\t\t\tmatrica[i].push_back(*it1);\n\t\t\t\tmatrica[i].push_back(0);\n\t\t\t\tmatrica[i].push_back(0);\n\t\t\t\ti++;\n\t\t\t\tbrojac++;\n\t\t\t\t\n\t\t\t}\n\t\t\tit3++;\n\t\t}\n\t\tit3=pomocna;\n\t\tit1++;\n}\n\t\nmatrica.resize(brojac);\nreturn matrica;\n\t\n}\ntemplate <typename NekiTip1, typename NekiTip2, typename NekiTip3, typename NekiTip4>\nauto UvrnutaRazlika(NekiTip1 it1, NekiTip1 it2, NekiTip2 it3, NekiTip2 it4, NekiTip3 funkcija(NekiTip4))-> std::vector<std::vector<decltype((*it3)+0)>> {\n\tstd::vector<std::vector<decltype((*it3)+0)>> matrica(100);\n\tint brojac(0);\n\tint i(0);\n\tauto pomocna=it3;\n\tauto pomocna2=it1;\n\twhile(it1!=it2) {\n\t\tint isti(0);\n\t\twhile(it3!=it4) {\n\t\t\tif(funkcija(*it1)==funkcija(*it3)) isti++;\n\t\t\tit3++;\n\t\t}\n\t\tif(isti==0) {\n\t\t\tmatrica[i].push_back(*it1);\n\t\t\tmatrica[i].push_back(funkcija(*it1));\n\t\t\tbrojac++;\n\t\t\ti++;\n\t\t}\n\tit1++;\n\tit3=pomocna;\n\t}\n\tit1=pomocna2;\n\tit3=pomocna;\n\twhile(it3!=it4) {\n\t\tint isti(0);\n\t\twhile(it1!=it2) {\n\t\t\tif(funkcija(*it3)==funkcija(*it1)) isti++;\n\t\t\tit1++;\n\t\t}\n\t\tif(isti==0) {\n\t\t\tmatrica[i].push_back(*it3);\n\t\t\tmatrica[i].push_back(funkcija(*it3));\n\t\t\tbrojac++;\n\t\t\ti++;\n\t\t}\n\tit3++;\n\tit1=pomocna2;\n\t}\n\tmatrica.resize(brojac);\n\tstd::sort(matrica.begin(), matrica.end(), [] (std::vector<decltype((*it3)+0)> v1, std::vector<decltype((*it3)+0)> v2) -> bool {\n\tif(v1.at(0)>v2.at(0)) return true;\n\telse if(v1.at(1)>v2.at(1) && v1.at(0)==v2.at(0) ) return true;\t\n\t\n\treturn false;\n});\n\treturn matrica;\n}\n\ntemplate <typename NekiTip1, typename NekiTip2>\nauto UvrnutaRazlika(NekiTip1 it1, NekiTip1 it2, NekiTip2 it3, NekiTip2 it4)-> std::vector<std::vector<decltype((*it3)+0)>> {\nstd::vector<std::vector<decltype((*it3)+0)>> matrica(100);\n\tint brojac(0);\n\tint i(0);\n\tauto pomocna=it3;\n\tauto pomocna2=it1;\n\twhile(it1!=it2) {\n\t\tint isti(0);\n\t\twhile(it3!=it4) {\n\t\t\tif(*it1==*it3) isti++;\n\t\t\tit3++;\n\t\t}\n\t\tif(isti==0) {\n\t\t\tmatrica[i].push_back(*it1);\n\t\t\tmatrica[i].push_back(0);\n\t\t\tbrojac++;\n\t\t\ti++;\n\t\t}\n\tit1++;\n\tit3=pomocna;\n\t}\n\tit1=pomocna2;\n\tit3=pomocna;\n\twhile(it3!=it4) {\n\t\tint isti(0);\n\t\twhile(it1!=it2) {\n\t\t\tif(*it3==*it1) isti++;\n\t\t\tit1++;\n\t\t}\n\t\tif(isti==0) {\n\t\t\tmatrica[i].push_back(*it3);\n\t\t\tmatrica[i].push_back(0);\n\t\t\tbrojac++;\n\t\t\ti++;\n\t\t}\n\tit3++;\n\tit1=pomocna2;\n\t}\n\tmatrica.resize(brojac);\n\tstd::sort(matrica.begin(), matrica.end(), [] (std::vector<decltype((*it3)+0)> v1, std::vector<decltype((*it3)+0)> v2) -> bool {\n\tif(v1.at(0)>v2.at(0)) return true;\n\telse if(v1.at(1)>v2.at(1) && v1.at(0)==v2.at(0) ) return true;\t\n\t\n\treturn false;\n});\n\treturn matrica;\n}\t\n\nint main ()\n{\n\tstd::deque<int> v;\n\tstd::deque<int> v1;\n\tint n,n1;\n\tint br,br1;\n\tstd::cout<<\"Unesite broj elemenata prvog kontejnera: \";\n\tstd::cin>>br;\n\tstd::cout<<\"Unesite elemente prvog kontejnera: \";\n\tfor(;;) {\n\t\tstd::cin>>n;\n\t\tint isti(0);\n\t\tfor(int j=0; j<v.size(); j++) {\n\t\t\tif(n==v[j]) isti++;\n\t\t}\n\t\tif(isti==0) v.push_back(n);\n\t\tif(v.size()==br) break;\n\t\t\n\t}\n\tstd::cout<<\"Unesite broj elemenata drugog kontejnera: \";\n\tstd::cin>>br1;\n\tstd::cout<<\"Unesite elemente drugog kontejnera: \";\n\tfor(;;) {\n\t\tstd::cin>>n1;\n\t\tint isti(0);\n\t\tfor(int j=0; j<v1.size(); j++) {\n\t\t\tif(n1==v1[j]) isti++;\n\t\t}\n\t\tif(isti==0) v1.push_back(n1);\n\t\tif(v1.size()==br1) break;\n\t\t\n\t}\n\t\n\tstd::cout<<\"Uvrnuti presjek kontejnera:\"<<std::endl;\n\tauto rez=UvrnutiPresjek(v.begin(),v.end(),v1.begin(),v1.end(),SumaCifara);\n\tauto rez2=UvrnutaRazlika(v.begin(),v.end(),v1.begin(),v1.end(),BrojProstihFaktora);\n\t\n\tfor(int i=0; i<rez.size(); i++) {\n\t\tfor(int j=0; j<rez[0].size(); j++) {\n\t\t\tstd::cout<<std::right<<std::setw(6)<<rez[i][j]<<\" \";\n\t\t}\n\t\tstd::cout<<std::endl;\n\t}\n\tstd::cout<<\"Uvrnuta razlika kontejnera:\"<<std::endl;\n\t\n\tfor(int i=0; i<rez2.size(); i++) {\n\t\tfor(int j=0; j<rez2[0].size(); j++) {\n\t\tstd::cout<<std::right<<std::setw(6)<<rez2[i][j]<<\" \";\n\t\t}\n\t\t\n\t\tstd::cout<<std::endl;\n\t}\n\tstd::cout<<\"Dovidjenja!\";\n\t\n\t\n\t\n\treturn 0;\n}"
    },
    "77": {
        "label": "0",
        "student2939": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\tint nizA[100], nizB[1000], nizC[1000], n, i, m, vb=0, k, c1, l=0, v_B=0, x, r, brojac=1, j, p;\n\t\n\tprintf(\"Unesite velicinu niza: \");\n\tscanf(\"%d\", &n);\n\tprintf(\"Unesite clanove niza: \");\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%d\", &nizA[i]);\n\t}\n\t\n\tfor(i=0; i<n; i++){\n\t\tvb=0;\n\t\tm=nizA[i];\n\t\tc1=m%10;\n\t\tvb++;\n\t\tm/=10;\n\t\twhile(m!=0){\n\t\t\tc1=m%10;\n\t\t\tvb++;\n\t\t\tm/=10;\n\t\t} v_B+=vb;;\n\t\t\tk=nizA[i];\n\t\t\tif(vb==1){\n\t\t\t\tc1=k%10;\n\t\t\t\tk/=10;\n\t\t\t\tnizB[l]=c1;\n\t\t\t}\n\t\t\t else if(vb!=1){\n\t\t\t\tc1=k/(pow(10,vb-1));\n\t\t\t\tnizB[l]=c1;\n\t\t\t\tx=pow(10,vb-1);\n\t\t\t    k%=x;\n\t\t\t    while(k!=0){\n\t\t\t        l++;\n\t\t\t    \tvb--;\n\t\t\t    \tif(vb==1){\n\t\t\t    \t\tc1=k%10;\n\t\t\t    \t\tk=k/10;\n\t\t\t    \t\tnizB[l]=c1;\n\t\t\t    \t\tbreak;\n\t\t\t    \t}\n\t\t\t\t    c1=k/(pow(10,vb-1));\n\t\t\t\t    nizB[l]=c1;\n\t\t\t\t    x=pow(10,vb-1);\n\t\t\t\t    k%=x;\n\t\t\t    }\n\t\t\t} l++;\n\t\t}\n\t\n\n\tr=0;\n\tfor(i=0; i<v_B; i++){\n\t\tbrojac=1;\n\t\tfor(j=i+1; j<v_B; j++){\n\t\t\tif(nizB[i]==nizB[j]){\n\t\t\tbrojac++;\n\t\t\tfor(p=i; p<v_B-1; p++){\n\t\t\t\tnizB[p+1]=nizB[p+2];\n\t\t\t} \n\t\t\tv_B--;\n\t\t\tj--;\n\t\t    } else {\n\t\t    \tbreak;\n\t\t    }\n\t}\n\t\tnizC[r]=nizB[i];\n\t\tnizC[r+1]=brojac;\n\t\tr+=2;\n\t}\n\t\n\tprintf(\"Finalni niz glasi:\\n\");\n\tfor(i=0; i<r; i++){\n\tprintf(\"%d \", nizC[i]);\n\t}\n\treturn 0;\n}\n",
        "student8859": "#include <stdio.h>\n\nint main() {\n \tint i,j,c=0,p=0,f=0,vel,niz[100],cifre[10000],pom[10],final[10000],broj_pom=0,broj_cifara=0,broj_final=0,brojac=1;\n \t\n \tdo{\n \t\tprintf(\"Unesite velicinu niza: \");\n \t\tscanf(\"%d\",&vel);\n \t}while(vel<=0 || vel>100);\n \t\n \tprintf(\"Unesite clanove niza: \");\n \tfor(i=0;i<vel;i++) scanf(\"%d\", &niz[i]);\n \t\n \tfor(i=0;i<vel;i++){\n \t\tif(niz[i]==0) { cifre[c]==0; c++; broj_cifara++; continue;}\n \t\twhile(niz[i]!=0) {\n \t\t\tpom[p]=(niz[i]%10);\n \t\t\tniz[i]/=10;\n \t\t\tp++;\n \t\t\tbroj_pom++;\n \t\t}\n \t\t\t\n \t\tfor(p=broj_pom-1;p>=0;p--){\n \t\t\tcifre[c]=pom[p];\n \t\t\tc++; broj_cifara++;\n \t\t}\n \t\tp=0;broj_pom=0;\n \t\t\n \t}\n \t\n \tfor(i=0;i<broj_cifara;i++){\n \t\tif(i==broj_cifara-1) {\n \t\t\tfinal[f]=cifre[i]; final[f+1]=1; broj_final+=2; break;\n \t\t}\n \t\tfor(j=i+1;j<broj_cifara;j++){\n \t\t\tif(cifre[i]==cifre[j] && j!=broj_cifara) brojac++;\n \t\t\telse{\n \t\t\t\tfinal[f]=cifre[i]; final[f+1]=brojac; f+=2; broj_final+=2; break;\n \t\t\t}\n \t\t}\n \t\t\n \t\tif(j==broj_cifara) {\n \t\t\tfinal[f]=cifre[i]; final[f+1]=brojac; broj_final+=2;\n \t\t}\n \t\ti+=brojac-1; brojac=1;\n \t\t\n \t}\n \tprintf(\"Finalni niz glasi:\\n\");\n \tfor(i=0;i<broj_final;i++) printf(\"%d \",final[i]);\n \t\n \treturn 0;\n}\n"
    },
    "78": {
        "label": "1",
        "student3671": "#include <stdio.h>\n\nstruct Student{\n\tchar ime[20],prezime[20];\n\tint ocjene[50];\n\tint br_ocjena;\n};\nstruct Student s;\n\nvoid unesi(char niz[], int velicina) {\n    char znak = getchar();\n    if (znak == '\\n') znak=getchar();\n    int i = 0;\n    while (i < velicina-1 && znak != '\\n') {\n        niz[i] = znak;\n        i++;\n        znak = getchar();\n    }\n    niz[i]='\\0';\n}\n\ndouble p_ocjena(int niz[],int velicina){\n    int i;\n    double prosjek=0;\n    for(i=0;i<velicina;i++)\n    prosjek+=niz[i];\n    if(velicina!=0)\n    prosjek/=velicina;\n    return prosjek;\n}\n\nint leksikografija(struct Student student1,struct Student student2){\n    char *p1=student1.prezime,*p2=student1.ime,*q1=student2.prezime,*q2=student2.ime;\n    while((*p1!='\\0') && (*q1!='\\0')){\n        if(*p1<*q1)\n        return 1;\n        else if(*q1>*p1)\n        return 0;\n        p1++;\n        q1++;\n    }\n    if(*p1=='\\0' && *q1=='\\0'){\n        while((*p2!='\\0') && (*q2!='\\0')){\n            if(*p2<*q2)\n            return 1;\n            else if(*q2>*p2) return 0;\n            p2++;\n            q2++;\n        }\n        if(*p2!='\\0') return 0;\n        else if(*q2!='\\0') return 1;\n    }\n    else if(*p1!='\\0') return 0;\n    else if(*q1!='\\0') return 1;\n    \n    return 1;\n}\n\nvoid ispisi_genijalce(struct Student studenti[],int br_studenata){\n    int i,j;\n    struct Student *prvi=NULL,*drugi=NULL,*treci=NULL,*genijalac=NULL;\n    \n    if(br_studenata!=0){\n        genijalac=&studenti[0];\n        for(i=0;i<br_studenata;i++){\n            if(p_ocjena((*genijalac).ocjene,(*genijalac).br_ocjena) < p_ocjena(studenti[i].ocjene,studenti[i].br_ocjena))\n            genijalac=&studenti[i];\n            else if((p_ocjena((*genijalac).ocjene,(*genijalac).br_ocjena)) == p_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)){\n                if(leksikografija(*genijalac,studenti[i]))\n                genijalac=&studenti[i];\n            }\n        }\n        if(genijalac!=NULL)\n        prvi=genijalac;\n    }\n    \n    if(br_studenata>1){\n        genijalac=&studenti[0];\n        if(genijalac==prvi)\n        genijalac++;\n        for(i=0;i<br_studenata;i++){\n            if(prvi==&studenti[i])\n            continue;\n            if(p_ocjena((*genijalac).ocjene,(*genijalac).br_ocjena) < p_ocjena(studenti[i].ocjene,studenti[i].br_ocjena))\n            genijalac=&studenti[i];\n            else if((p_ocjena((*genijalac).ocjene,(*genijalac).br_ocjena)) == p_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)){\n                if(leksikografija(*genijalac,studenti[i]))\n                genijalac=&studenti[i];\n            }\n        }\n        if(genijalac!=NULL)\n        drugi=genijalac;\n    }\n    \n    if(br_studenata>2){\n        genijalac=&studenti[0];\n        while(genijalac==prvi || genijalac==drugi)\n        genijalac++;\n        for(i=0;i<br_studenata;i++){\n            if((prvi==&studenti[i]) || (drugi==&studenti[i]))\n            continue;\n            if(p_ocjena((*genijalac).ocjene,(*genijalac).br_ocjena) < p_ocjena(studenti[i].ocjene,studenti[i].br_ocjena))\n            genijalac=&studenti[i];\n            else if((p_ocjena((*genijalac).ocjene,(*genijalac).br_ocjena)) == p_ocjena(studenti[i].ocjene,studenti[i].br_ocjena)){\n                if(leksikografija(*genijalac,studenti[i]))\n                genijalac=&studenti[i];\n            }\n        }\n        if(genijalac!=NULL)\n        treci=genijalac;\n    }\n    \n    if(prvi!=NULL)\n    printf(\"%s %s\\n\",(*prvi).prezime,(*prvi).ime);\n    if(drugi!=NULL)\n    printf(\"%s %s\\n\",(*drugi).prezime,(*drugi).ime);\n    if(treci!=NULL)\n    printf(\"%s %s\\n\",(*treci).prezime,(*treci).ime);\n}\n\nint genijalci(struct Student studenti[],int br_studenata,double prosjek){\n    double prosjek_ocjena=0;\n    int i,j;\n    for(i=0;i<br_studenata;i++){\n        for(j=0;j<br_studenata;j++){\n            if(studenti[i].ocjene[j]!=5){\n                prosjek_ocjena+=studenti[i].ocjene[j];\n            }\n            else{\n                prosjek_ocjena=5;\n                break;\n            }\n        }\n        if(prosjek_ocjena==0 || prosjek_ocjena==5)\n        prosjek_ocjena=5;\n        else prosjek_ocjena/=studenti[i].br_ocjena;\n        \n        if(prosjek_ocjena<prosjek){\n            if(br_studenata==1)\n            br_studenata=0;\n            else{\n                for(j=i;j<(br_studenata-1);j++){\n                    studenti[j]=studenti[j+1];\n                }\n                br_studenata--;\n                i--;\n            }\n        }\n        prosjek_ocjena=0;\n    }\n    \n    ispisi_genijalce(studenti,br_studenata);\n    return br_studenata;\n}\n\nint main() {\n\tstruct Student studenti[100];\n\tint i,j,n;\n\tprintf(\"Unesite broj studenata: \");\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=0;i<n;i++){\n\t    printf(\"Unesite ime %d. studenta: \",i+1);\n\t    unesi(studenti[i].ime,20);\n\t    printf(\"Unesite prezime %d. studenta: \",i+1);\n\t    unesi(studenti[i].prezime,20);\n\t    printf(\"Unesite broj ocjena %d. studenta: \",i+1);\n\t    scanf(\"%d\",&studenti[i].br_ocjena);\n\t    if(studenti[i].br_ocjena!=0){\n\t        printf(\"\\nUnesite te ocjene: \");\n\t    for(j=0;j<studenti[i].br_ocjena;j++)\n\t    scanf(\"%d\",&studenti[i].ocjene[j]);\n\t}\n\t}\n\t\n\tprintf(\"\\n%d\",genijalci(studenti,n,7));\n\treturn 0;\n}\n",
        "student4150": "#include <stdio.h>\n\nstruct Student {\n    char ime[20], prezime[20];\n    int ocjene[50];\n    int br_ocjena;\n};\n\nvoid unesi(char niz[], int velicina) {\n    char znak = getchar();\n    int i = 0;\n    if (znak == '\\n') znak=getchar();\n    while (i < velicina-1 && znak != '\\n') {\n        niz[i] = znak;\n        i++;\n        znak = getchar();\n    }\n    niz[i]='\\0';\n}\n\ndouble pr (int niz[], int velicina) {\n    \n    int i;\n    double prosjek = 0;\n    \n    for(i = 0; i < velicina; i++) prosjek += niz[i];\n    if(velicina != 0) prosjek /= velicina;\n    \n    return prosjek;\n}\n\n\nvoid ispisi_genijalce (struct Student studenti[], int br_studenata) {\n    \n    int i;\n    struct Student *prvi = NULL, *drugi = NULL, *treci = NULL, *genijalac = NULL;\n    \n    if(br_studenata != 0) {\n        genijalac = &studenti[0];\n        for(i = 0; i < br_studenata; i++) {\n            if(pr((*genijalac).ocjene, (*genijalac).br_ocjena) < pr(studenti[i].ocjene, studenti[i].br_ocjena)) genijalac = &studenti[i];\n            else if((pr((*genijalac).ocjene, (*genijalac).br_ocjena)) == pr(studenti[i].ocjene, studenti[i].br_ocjena)) {\n            \n            }\n        }\n        if(genijalac != NULL) prvi = genijalac;\n    }\n    \n    if(br_studenata > 1) {\n        genijalac = &studenti[0];\n        if(genijalac == prvi) genijalac++;\n        \n        for(i = 0; i < br_studenata; i++) {\n            if(prvi == &studenti[i]) continue; \n            else if(pr((*genijalac).ocjene, (*genijalac).br_ocjena) < pr(studenti[i].ocjene, studenti[i].br_ocjena)) genijalac = &studenti[i];\n            else if((pr((*genijalac).ocjene, (*genijalac).br_ocjena)) == pr(studenti[i].ocjene, studenti[i].br_ocjena)) {\n              \n            }\n        }\n        if(genijalac != NULL) drugi = genijalac;\n    }\n    \n    if(br_studenata > 2) {\n        genijalac = &studenti[0];\n        while(genijalac == prvi || genijalac == drugi) genijalac++;\n        \n        for(i = 0; i < br_studenata; i++) {\n            if((prvi == &studenti[i]) || (drugi == &studenti[i])) continue; \n            else if(pr((*genijalac).ocjene, (*genijalac).br_ocjena) < pr(studenti[i].ocjene, studenti[i].br_ocjena)) genijalac = &studenti[i];\n            else if((pr((*genijalac).ocjene, (*genijalac).br_ocjena)) == pr(studenti[i].ocjene, studenti[i].br_ocjena)) {\n                \n            }\n        }\n        if(genijalac != NULL) treci = genijalac;\n    }\n    \n    \n    if(prvi != NULL) printf(\"%s %s\\n\", (*prvi).prezime, (*prvi).ime);\n    if(drugi != NULL) printf(\"%s %s\\n\", (*drugi).prezime, (*drugi).ime);\n    if(treci != NULL) printf(\"%s %s\\n\", (*treci).prezime, (*treci).ime);\n}\n\nint genijalci (struct Student studenti[], int br_studenata, double prosjek) {\n    \n    double prosjek_ocjena = 0;\n    int i, j;\n    \n    \n    for(i = 0; i < br_studenata; i++) {\n        for(j = 0; j < studenti[i].br_ocjena; j++) {\n            if(studenti[i].ocjene[j] != 5) {\n                prosjek_ocjena += studenti[i].ocjene[j];\n            }\n            else {\n                prosjek_ocjena = 5;\n                break;\n            }\n        }\n        if(prosjek_ocjena == 0 || prosjek_ocjena == 5) prosjek_ocjena = 5;\n        else prosjek_ocjena /= studenti[i].br_ocjena;\n        \n        if(prosjek_ocjena < prosjek) {\n            if(br_studenata == 1) br_studenata = 0;\n            else {\n                for(j = i; j < (br_studenata - 1); j++) {\n                    studenti[j] = studenti[j + 1];\n                }\n                br_studenata--;\n                i--;\n            }\n        }\n        \n        prosjek_ocjena = 0;\n    }\n    \n    ispisi_genijalce(studenti, br_studenata);\n    \n    return br_studenata;\n}\n\nint main() {\n    \n    struct Student studenti[100];\n    int i, j, n;\n    \n    printf(\"Unesite broj studenata: \");\n    scanf(\"%d\", &n);\n    \n    for(i = 0; i < n; i++) {\n        printf(\"Unesite ime %d. studenta: \", i + 1);\n        unesi(studenti[i].ime, 20);\n        printf(\"Unesite prezime %d. studenta: \", i + 1);\n        unesi(studenti[i].prezime, 20);\n        printf(\"Unesite broj ocjena %d. studenta: \", i + 1);\n        scanf(\"%d\", &studenti[i].br_ocjena);\n        if(studenti[i].br_ocjena != 0) {\n            printf(\"Unesite te ocjene: \");\n            for(j = 0; j < studenti[i].br_ocjena; j++) scanf(\"%d\", &studenti[i].ocjene[j]);\n        }\n    }\n    \n    printf(\"\\n%d\", genijalci(studenti, n, 7));\n    \n    return 0;\n}"
    },
    "79": {
        "label": "0",
        "student2956": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n  int n,i,j;\n unos:\n\tprintf(\"Unesite broj n: \");\n\tscanf(\"%d\",&n);\n\tif(n<1){\n\t  printf(\"Pogresan unos\\n\"); goto unos;\n\t}\n  for(i=0;i<n;i++){\n    for(j=0;j<4*n;j++){\n       if(i==j || j==2*n-2-i || j==2*n-2+i || j==4*n-4-i)\n            printf(\"*\");\n        else printf(\" \");\n    }\n\n    printf(\"\\n\");\n  }\n  return 0;\n}\n",
        "student8124": "#include <stdio.h>\n#define zvijezda \"*\"\n#define prazno \" \"\n\n\nint main()\n{\n\n    int n, i, j;\n\n    do {\n        printf(\"\\nUnesite broj n: \");\n        scanf(\"%d\", &n);\n\n        if (n<0 || n>50)\n            printf(\"\\nPogresan unos\");\n    }\n    while (n<0 || n>50);\n\n\n    for (i=1; i<=n; i++) {\n\n\n        if (i==1)\n            printf(zvijezda);\n        else\n            printf(prazno);\n\n        for (j=1; j<=i-2; j++)\n            printf(prazno);\n\n        if (i>1)\n            printf(\"*\");\n\n        for (j=1; j<=2*n-1-2*i; j++)\n            printf(prazno);\n\n        if (i<n || n==1)\n            printf(zvijezda);\n\n        for (j=1; j<=i-1; j++)\n            printf(prazno);\n\n\n        for (j=1; j<=i-2; j++)\n            printf(prazno);\n\n        if (i>1)\n            printf(zvijezda);\n\n        for (j=1; j<=2*n-1-2*i; j++)\n            printf(prazno);\n\n        if (i<n || n==1)\n            printf(zvijezda);\n\n        for (j=1; j<=i-1; j++)\n            printf(prazno);\n\n        // prelom u novi red\n\n        printf(\"\\n\");\n\n    }\n\n    return 0;\n}"
    },
    "80": {
        "label": "1",
        "student5970": "#include <stdio.h>\n#include<math.h>\n\nint izbaci_cifre(int* niz1,int d1,int* niz2,int d2)\n{\n\tint i,j,k,l;\n\tfor(l=0;l<d2;l++)\n\t{\n\tfor(k=0;k<d2;k++)\n\t{\n\t    if(niz2[k]<0 || niz2[k]>9) return 0;\n\t    if(niz2[k]==niz2[l] && l!=k) return 0;\n\t}\n\t}\n\tfor(i=0;i<d1;i++)\n\t{\n\t    int brojac=0;\n\t    int cifre=fabs(niz1[i]);\n\t    \n\t    do{\n\t       cifre=cifre/10;\n\t       brojac++;\n\t       }while(cifre!=0);\n\t       \n        brojac--;\n        int cifra=fabs(niz1[i]);\n        int novi=0;\n        do\n        {   cifre=cifra;\n            cifre=cifre/pow(10,brojac);\n            \n            for (j=0;j<d2;j++)\n            if(cifre==niz2[j]) break;\n            if(j==d2)\n            {\n                novi=novi*10+cifre;\n            }\n            cifra=cifra-pow(10,brojac)*cifre; \n            brojac--;\n        }while(brojac>=0);\n       \n        if(niz1[i]<0) niz1[i]=-1*novi;\n         else niz1[i]=novi;\n\t} \n\treturn 1;\n     \n}\n int main()\n {\n     return 0;\n }",
        "student6774": "#include <stdio.h>\n#include <math.h>\n#include<stdlib.h>\n\n\nint izbaci_cifre(int *niz1,int vel1,int *niz2, int vel2){\n\tint i,j,x,y,counter,cifre,cifra,New;\n\tfor(x=0;x<vel2;x++){\n\t\tfor(y=0;y<vel2;y++){\n\t\t\tif(niz2[x]<0||niz2[x]>9)return 0;\n\t\t\tif(niz2[x]==niz2[y] && y!=x)return 0;\n\t\t}\n\t}\n\tfor(i=0;i<vel1;i++){\n\t\tcounter=0;\n\t\tcifre=fabs(niz1[i]);\n\t\t/*PREBROJAVA BROJ CIFRI U BROJU*/\n\t\tdo{\n\t\t\tcifre=cifre/10;\n\t\t\tcounter++;\n\t\t}while(cifre!=0);\n\tcounter--;\n\tcifra=fabs(niz1[i]);\t\n\tNew=0;\n\tdo{\n\t\tcifre=cifra;\n\t\tcifre=cifre/pow(10,counter);\n\t\tfor(j=0;j<vel2;j++)if(cifre==niz2[j]){\n\t\t\tbreak;\n\t\t}\n\t\tif(j==vel2){\n\t\t\tNew=New*10+cifre;\n\t\t}\n\t\tcifra=cifra-pow(10,counter)*cifre;\n\t\tcounter--;\n\t}while(counter>=0);\n\tif(niz1[i]<0)niz1[i]=-1*New;\n\telse niz1[i]=New;\n\t}\n\treturn 1;\n}\n\t\nint main() {\n\treturn 0;\n}\n"
    },
    "81": {
        "label": "0",
        "student4059": "#include <stdio.h>\n\nint main() {\n\tint i,j;\n\tint A[100][100], B[100][100], C[100][100];\n\tint M,N;\n\t\n\tdo {\n\t\tprintf(\"Unesite brojeve M i N: \");\n\t\tscanf(\"%d %d\",&M,&N);\n\t} while(M>100||N>100||M<0||N<0);\n\n\n\tprintf(\"Unesite clanove matrice A: \");\n\tfor(i=0; i<M; i++) {\n\t\tfor(j=0; j<N; j++) {\n\t\t\tscanf(\"%d\",&A[i][j]);\n\t\t}\n\t}\n\t\n\t\n\tprintf(\"Unesite clanove matrice B: \");\n\tfor(i=0; i<M; i++) {\n\t\tfor(j=0; j<N; j++) {\n\t\t\tscanf(\"%d\",&B[i][j]);\n\t\t}\n\t}\n\t\n\t\n\tprintf(\"Unesite clanove matrice C: \");\n\tfor(i=0; i<M; i++) {\n\t\tfor(j=0; j<N; j++) {\n\t\t\tscanf(\"%d\",&C[i][j]);\n\t\t}\n\t}\n\t\n\tint nizB[10000],nizC[10000];\n\tint koordinata=0;\n\tfor(i=0; i<M; i++) {\n\t\tfor(j=0; j<N; j++) {\n\t\t\tnizB[koordinata]=B[i][j];\n\t\t\tnizC[koordinata]=C[i][j];\n\t\t\tkoordinata++;\n\t\t}\n\t}\n\tint k;\n\tfor(i=0; i<M; i++) {\n\t\tfor(j=0; j<N; j++) {\n\t\t\t\n\t\t\t\n\t\t\tfor(k=0; k<M*N; k++) {\n\t\t\t\tif(A[i][j]==nizB[k]) {\n\t\t\t\t\tnizB[k]=-123456;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tfor(k=0; k<M*N; k++) {\n\t\t\t\tif(A[i][j]==nizC[k]) {\n\t\t\t\t\tnizC[k]=-123456;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n\t\n\tint odgovor=0;\n\t\n\tfor(i=0; i<M*N; i++) {\n\t\tif(nizB[i]!=-123456 || nizC[i]!=-123456) {\n\t\t\n\t\t\todgovor=1;\n\t\t}\n\t\n\t}\n\tif(odgovor==0)\n\t\tprintf(\"DA\\n\");\n\tif(odgovor==1)\n\t\tprintf(\"NE\\n\");\n\treturn 0;\n}\n\n\n\n\n\n\n",
        "student4824": "#include <stdio.h>\n#include <stdbool.h>\n#define MAX 100\n\nint main() {\n\tbool iste1=1, iste2=1;\n\tint M,N,matricaA[MAX][MAX],matricaB[MAX][MAX],matricaC[MAX][MAX],i,j,k,l,m,n,b;\n\tint brojaciA[1000]={0},brojaciB[1000]={0},brojaciC[1000]={0};\n\n\tdo {\n\t\tprintf(\"Unesite brojeve M i N: \");\n\t\tscanf(\"%d %d\",&M,&N);\n\t\t\n\t}while(M<0 || M>100 || N<0 || N>100);\n\tprintf(\"Unesite clanove matrice A: \");\n\tfor(i=0;i<M;i++){\n\t\tfor(j=0;j<N;j++){\n\t\t\tscanf(\"%d\",&matricaA[i][j]);\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t}\n\tprintf(\"Unesite clanove matrice B: \");\n\tfor(k=0;k<M;k++) {\n\t\tfor(l=0;l<N;l++){\n\t\t\tscanf(\"%d\",&matricaB[k][l]);\n\t\t}\n\t}\n\tprintf(\"Unesite clanove matrice C: \");\n\tfor(m=0;m<M;m++){\n\t\tfor(n=0;n<N;n++){\n\t\t\tscanf(\"%d\",&matricaC[m][n]);\n\t\t}\n\t}\n\n\t for(k=0;k<M;k++){\n\t \tfor(l=0;l<N;l++){\n\t \t\tfor(b=0;b<1000;b++)\n\t \t\t\tif (matricaB[k][l]==b) brojaciB[b]++;\n\t \t\t}\n\t \t\t\n\t \t}\n\t \t\n\t\n\t\n\t for(m=0;m<M;m++){\n\t \tfor(n=0;n<N;n++){\n\t \t\tfor(b=0;b<1000;b++){\n\t \t\t\tif(matricaC[m][n]==b) brojaciC[b]++;\n\t \t\t}\n\t \t}\n\t \t\n\t }\n\t\n\t for(i=0;i<M;i++){\n\t \tfor(j=0;j<N;j++){\n\t \t\tfor(b=0;b<1000;b++){\n\t \t\tif (matricaA[i][j]==b) brojaciA[b]++;\n\t \t\t\t\n\t \t\t}\n\t \t\t\n\t \t}\n\t \t\n\t }\n\t for(b=0;b<1000;b++){\n\t \t\t\tif(brojaciA[b]!=brojaciB[b]) { \n\t \t\t\t\tiste1=0;\n\t \t\t\t\tprintf(\"NE\\n\");\n\t \t\t\t\treturn 0; }\n\t \t\t\telse {\n\t \t\t\t\tiste1=1;\n\t \t\t\t\t\n\t \t\t\t}\n\t \t\n\t }\n\t for(b=0;b<1000;b++){\n\t \n\t \t\t\tif (brojaciA[b]!=brojaciC[b]) {\n\t \t\t\t\tiste2=0;\n\t \t\t\t\tprintf(\"NE\\n\");\n\t \t\t\t\treturn 0;\n\t \t\t\t\t\n\t \t\t\t}\n\t \t\t\telse {\n\t \n\t \t\t\tiste2=1;\n\t \t\t\t}\n\t }\n\t if(iste1==1 && iste2==1) printf(\"DA\\n\"); \n\treturn 0;\n}\n"
    },
    "82": {
        "label": "1",
        "student1845": "#include <stdio.h>\n#include <math.h>\n#define e 0.0001\n#define pi 3.14159\nint main() {\n\tdouble a,b,c,tx1,tx2,ty1,ty2,tx3,ty3,A,B,G,s,m,se,o;\n\tprintf(\"Unesite koordinate tacke t1: \");\n\tscanf(\"%lf %lf\", &tx1, &ty1);\n\tprintf(\"Unesite koordinate tacke t2: \");\n\tscanf(\"%lf %lf\", &tx2, &ty2);\n\tprintf(\"Unesite koordinate tacke t3: \");\n\tscanf(\"%lf %lf\", &tx3,&ty3);\n    a=sqrt((tx2-tx1)*(tx2-tx1)+((ty2-ty1)*(ty2-ty1)));\n    b=sqrt((tx3-tx2)*(tx3-tx2)+((ty3-ty2)*(ty3-ty2)));\n    c=sqrt((tx3-tx1)*(tx3-tx1)+((ty3-ty1)*(ty3-ty1)));\n    if(a>=b && a>=c ) { \n    \tA=acos((b*b+c*c-a*a)/(2*b*c));\n    \ts=A*(180/pi);\n    \to=s-(int)s;\n    \tm=o*60;\n    \to=m-(int)m;\n    \tse=o*60;\n    \t\n    }\n    else if(b>=c && b>=a) {\n    \tB=acos((a*a+c*c-b*b)/(2*a*c));\n    \ts=B*(180/pi);\n    \to=s-(int)s;\n    \tm=o*60;\n    \to=m-(int)m;\n    \tse=o*60;\n    \t\n    }\n    else if(c>=a && c>=b) {\n    \tG=acos((b*b+a*a-c*c)/(2*b*a));\n    \ts=G*(180/pi);\n    \to=s-(int)s;\n    \tm=o*60;\n    \to=m-(int)m;\n    \tse=o*60;\n    \t\n    }\n    if(fabs(tx1-tx2)<e && fabs(tx1-tx3)<e && fabs(tx2-tx3)<e){\n    \tprintf(\"Linija\\n\");\n    \tprintf(\"Najveci ugao ima 180 stepeni, 0 minuta i 0 sekundi.\");\n    }\n    else if(fabs(tx1*ty2+ty1*tx3+tx2*ty3-tx3*ty2-ty3*tx1-tx2*ty1)<e){\n    \tprintf(\"Linija\\n\");\n    \tprintf(\"Najveci ugao ima 180 stepeni, 0 minuta i 0 sekundi.\");\n    }\n    else if((fabs(ty1-ty2)<e) && (fabs(ty1-ty3)<e) && (fabs(ty2-ty3))<e){\n    \tprintf(\"Linija\\n\");\n    \tprintf(\"Najveci ugao ima 180 stepeni, 0 minuta i 0 sekundi.\");\n    }\n    \n    \n   \n    else if((fabs(a-b)<e) && (fabs(b-c)<e) && (fabs(a-c)<e)) {\n    \tprintf(\"Jednakostranicni\\n\");\n    \tprintf(\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\",(int)s,(int)m,(int)se );\n    }\n    else if((fabs(c*c-a*a-b*b)<e) || (fabs(a*a-b*b-c*c)<e) || fabs(b*b-a*a-c*c)<e) {\n    \tprintf(\"Pravougli\\n\");\n    \n    \tif((fabs(a-b)<e) || (fabs(b-c)<e) || (fabs(a-c)<e)) {\n    \tprintf(\"Jednakokraki\\n\");\n    \t}\n    \telse if(fabs(a-b)>e && fabs(a-c)>e){\n            printf(\"Raznostranicni\\n\");\n        }\n        printf(\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\",(int)s,(int)m,(int)se );\n    }\n    else if((fabs(a-b)<e) || (fabs(b-c)<e) || (fabs(a-c)<e)) {\n    \tprintf(\"Jednakokraki\\n\");\n    \tprintf(\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\",(int)s,(int)m,(int)se );\n    }\n     else if((fabs(a-b)>e)  || (fabs(a-c)>e)) {\n    \tprintf(\"Raznostranicni\\n\");\n    \tprintf(\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\",(int)s,(int)m,(int)se );\n    }\n\treturn 0;\n}\n\n\n\n\n",
        "student7090": "#include <stdio.h>\n\nint main() {\n\tprintf(\"Zada\u0107a 1, Zadatak 2\");\n\treturn 0;\n}\n"
    },
    "83": {
        "label": "0",
        "student2447": "#include <stdio.h>\n\nvoid unesi(char niz[], int velicina){\n\tchar znak=getchar();\n\tint i=0;\n\tif(znak=='\\n') znak=getchar();\n\t\n\twhile(i<velicina-1 && znak!='\\n'){\n\t\tniz[i]=znak;\n\t\ti++;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n}\n\nvoid izbaci_rijec(char tekst[], char rijec[]) {\n\tint i=0, j=0, k, z, t, p, znakovi_tekst=0, znakovi_rijec=0;\n\twhile(tekst[i]!='\\0') {\n\t\tznakovi_tekst++;\n\t\ti++;\n\t}\n\twhile(rijec[j]!='\\0') {\n\t\tznakovi_rijec++;\n\t\tj++;\n\t}\n\ti=0;\n\t\n\twhile(tekst[i]!='\\0') {\n\t\tj=0;\n\t\tz=i;\n\t\twhile(rijec[j]!='\\0') {\n\t\t\tif(tekst[i]==rijec[j]) {\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t\tif(rijec[j]=='\\0' && (tekst[i]<65 || (tekst[i]>90 && tekst[i]<97) || tekst[i]>122) && (tekst[i-j-1]<65 || (tekst[i-j-1]>90 && tekst[i-j-1]<97) || tekst[i-j-1]>122)) {\n\t\t\tk=z;\n\t\t\tt=0;\n\t\t\twhile(t<znakovi_rijec) {\n\t\t\t\tp=k;\n\t\t\t\twhile(p<znakovi_tekst) {\n\t\t\t\t\t\n\t\t\t\t\ttekst[p]=tekst[p+1];\n\t\t\t\t\tp++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tt++;\n\t\t\t\tznakovi_tekst--;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\tif(tekst[i]!='\\0') i++;\n\t\t\t\n\t\t}\n\t}\n\t\n\ttekst[znakovi_tekst]='\\0';\n\t\n}\n\n\n\nchar* izbaci_najcescu(char* s) {\n\t\n\tchar rijec[100];\n\tint brojac, i, max_ponavljanja=0;\n\tchar *p, *q, *z, *poc, *kraj, *poc_max, *kraj_max, *tekst=s;\n\t\n\tz=tekst;\n\twhile(*z!='\\0'){\n\t\twhile((*z<65 || *z>122 || (*z<97 && *z>90)) && *z!='\\0') z++;\n\t\tif(*z=='\\0') return s;\n\t\ti=0;\n\t\twhile((*z>=65 && *z<=90) || (*z>=97 && *z<=122)){\n\t\t\tif(i==0) poc=z;\n\t\t\t\n\t\t\tz++;\n\t\t\ti++;\n\t\t\t\n\t\t}\n\t\tkraj=z;\n\t\tif(*z!='\\0') z++;\n\t\t\n\t\tq=tekst;\n\t\tbrojac=0;\n\t\twhile(*q!='\\0'){\n\t\t\t\n\t\t\tp=poc;\n\t\t\twhile(p<kraj) {\n\t\t\t\tif(*p==*q || *p==*q+32 || *p==*q-32){\n\t\t\t\t\tp++;\n\t\t\t\t\tq++;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif((p==kraj) && (*q<65 || (*q>90 && *q<97) || *q>122) && ((*(poc-1)<65 || (*(poc-1)>90 && *(poc-1)<97) || *(poc-1)>122))) brojac++;\n\t\t\telse{\n\t\t\t\tif(*q!='\\0')\n\t\t\t\t\tq++;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif(brojac>max_ponavljanja){\n\t\t\tmax_ponavljanja=brojac;\n\t\t\tpoc_max=poc;\n\t\t\tkraj_max=kraj;\n\t\t}\n\t\t\n\t}\n\t\n\ti=0;\n\tif(max_ponavljanja!=0) {\n\t\twhile(poc_max<kraj_max){\n\t\t\trijec[i]=(*poc_max);\n\t\t\ti++;\n\t\t\tpoc_max++;\n\t\t}\n\t\trijec[i]='\\0';\n\t\t\n\t\tizbaci_rijec(tekst, rijec);\n\t\t\n\t}\n\t\n\treturn s;\n\t\n}\n\n\nint main() {\n\t\n\tchar tekst[]=\"ovo je neki ovo\";\n\t\n\tizbaci_najcescu(tekst);\n\t\n\tprintf(\"%s\",tekst);\n\t\n\t\treturn 0;\n}\n",
        "student6303": "#include <stdio.h>\n\n\nvoid unesi(char niz[], int velicina){\n\tchar znak = getchar();\n\tif (znak == '\\n') znak = getchar();\n\tint i = 0;\n\twhile(i < velicina-1 && znak != '\\n'){\n\t\tniz[i] = znak;\n\t\ti++;\n\t\tznak = getchar();\n\t}\n\tniz[i] = '\\0';\n}\n\nint isLetter(char c){\n\tif ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') )\n\t\treturn 1;\n\treturn 0;\n}\n\n\n\nint prebroji_ponavljanja(char *kandidat_org, int duzina, char* recenica_org){\n\t//kopiranje recenice:\n\tchar recenica[200];\n\tchar *x = recenica;\n\tchar *y = recenica_org;\n\t\n\twhile(*y != '\\0'){\n\t\tif (*y >= 'A' && *y <= 'Z')\n\t\t\t*x = *y + 32;\n\t\telse\n\t\t\t*x = *y;\n\t\t\t\n\t\tx++; y++;\n\t}\n\t*x = '\\0';\n\t\n\t//prebrojavanje\n\tchar *kandidat = kandidat_org;\n\tchar *p = recenica;\n\tint br = 0;\n\t\n\twhile(*p != '\\0'){\n\t\tint d = duzina;\n\t\t\n\t\tchar *kandidat_tmp = kandidat;\n\t\tchar *k = kandidat;\n\t\t\n\t\tif (*p == *k && *p != '\\0' && (p == recenica ||isLetter(*(p-1))==0 )){\n\t\t\twhile(d > 0){\n\t\t\t\tif (*p != *k || *p == '\\0') break;\n\t\t\t\tp++; k++; d--;\n\t\t\t}\n\t\t}\n\t\tkandidat = kandidat_tmp;\n\t\t\n\t\tif (d == 0 && (*p != '0' && isLetter(*p)==0)) \n\t\t\tbr++; //ako je 0 dosli do kraja rijeci\n\t\t\n\t\tif (*p == '\\0') break;\n\t\tp++;\n\t}\n\t\n\treturn br;\n}\n\n\nvoid izbrisi_rijec(char *rijec, int duzina, char* recenica){\n\tchar *p = recenica;\n\twhile (*p != '\\0'){\n\t\tchar *r = rijec;\n\t\t\n\t\tif ( (*p == *r || *p == *r + 32 || *p == *r -32 ) && *p != '\\0'){\n\t\t\tint d = duzina;\n\t\t\tchar *k = rijec;\n\t\t\tchar *pozicija = p;\n\t\t\t\n\t\t\t//provjera da li je to ta rijec\n\t\t\tif (*p != '\\0')\n\t\t\tif ( (*p == *k || *p == *k + 32 || *p == *k - 32) && (p == recenica || isLetter(*(p-1)) == 0)  ){\n\t\t\t\t\n\t\t\t\twhile (d > 0){\n\t\t\t\t\tchar c;\n\t\t\t\t\t\n\t\t\t\t\tif (*p >= 'A' && *p <= 'Z')\n\t\t\t\t\t\tc = *p + 32;\n\t\t\t\t\telse\n\t\t\t\t\t\tc = *p;\n\t\t\t\t\t\n\t\t\t\t\tif (c != *k || *p == '\\0') break;\n\t\t\t\t\tp++; k++; d--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (d == 0 && (*p != '0' && isLetter(*p)==0)) { //zaisa ta rijec\n\t\t\t\tchar * q = pozicija;\n\t\t\t\t\n\t\t\t\t//brisanje rijeci:\n\t\t\t\twhile(*(q+duzina) != '\\0'){\n\t\t\t\t\t*q = *(q+duzina);\n\t\t\t\t\tq++;\n\t\t\t\t}\n\t\t\t\t*q = '\\0';\n\t\t\t\t\n\t\t\t\tp = pozicija;\n\t\t\t\tp--;\n\t\t\t}\n\t\t}\n\t\t\n\t\tp++;\n\t}\n}\n\n\nchar* izbaci_najcescu(char* s){\n\tchar *recenica = s;\n\tchar *pocetak = recenica;\n\tchar *p = recenica;\n\t\n\tint max = 0;\n\tchar *najcesca;\n\tint najcesca_duzina = 0;\n\t\n\twhile(*p != '\\0'){\n\t\tif (p==recenica || isLetter(*p) == 0 ){\n\t\t\twhile(*p != '\\0' && isLetter(*p) == 0 ) { p++;}\n\t\t\tif (*p == '\\0') break;\n\t\t\t//if (*(p+1) != '\\0' && p!= recenica) p++;\n\t\t\t\n\t\t\tchar *kandidat = p; \n\t\t\tchar *k = p;\n\t\t\t\n\t\t\tint duzina = 0;\n\t\t\twhile (  ((*p>='a' && *p<='z') || ( *p>='A' && *p<='Z' )) && *p!='\\0'  ){\n\t\t\t\tk++; p++; duzina++;\n\t\t\t}\n\t\t\tp--;\n\t\t\t\n\t\t\t//kopija rijeci\n\t\t\tchar *ktt = kandidat;\n\t\t\tint i;\n\t\t\tchar kandidat_tmp[200];\n\t\t\tchar* kt = kandidat_tmp;\n\t\t\t\n\t\t\tfor(i = 0; i < duzina; i++){\n\t\t\t\tif (*ktt >= 'A' && *ktt <= 'Z')\n\t\t\t\t\t*kt = *ktt + 32;\n\t\t\t\telse\n\t\t\t\t\t*kt = *ktt;\n\t\t\t\tkt++; ktt++;\n\t\t\t}\n\t\t\t*kt = '\\0';\n\t\t\t\n\t\t\t//printf(\"kandidat: %s\", kandidat_tmp);\n\t\t\t\n\t\t\tint koliko = prebroji_ponavljanja(kandidat_tmp, duzina, recenica);\n\t\t\t\n\t\t\t//printf(\"%d \\n\", koliko);\n\t\t\t\n\t\t\tif(koliko > max){\n\t\t\t\tmax = koliko;\n\t\t\t\tnajcesca = kandidat;\n\t\t\t\tnajcesca_duzina = duzina;\n\t\t\t}\n\t\t}\n\t\t\n\t\tp++;\n\t}\n\t\n\t\n\t//kopija najcesce rijeci\n\tint j;\n\tchar najcesca_kopija[200];\n\tchar* nk = najcesca_kopija;\n\tfor (j = 0; j < najcesca_duzina; j++){\n\t\tif (*najcesca >= 'A' && *najcesca <='Z')\n\t\t\t*nk = *najcesca + 32;\n\t\telse\n\t\t\t*nk = *najcesca;\n\t\tnk++; najcesca++;\n\t}\n\t*nk = '\\0';\n\t\n\t//printf(\"najcesca: %s \\n\", najcesca_kopija);\n\t\n\tif (najcesca_duzina > 0)\n\t\tizbrisi_rijec(najcesca_kopija, najcesca_duzina, recenica);\n\t\n\treturn s;\n}\n\n\nint main() {\n\t/*\n\tchar recenica[200];\n\tunesi (recenica, 200);\n\t\n\tchar *s = recenica;\n\ts = izbaci_najcescu(recenica);\n\t\n\tprintf(\"%s\", recenica);*/\n\tprintf(\"IZLAZ: \\n\");\n\t\n\tchar t[]=\" Koristio sam auto-stop da dodjem do znaka stop ali prije stopa sam otvorio dekstop kompjutera stop\";\n\tprintf(\"'%s'\", izbaci_najcescu(t));\n\t\n\t\n    \n\treturn 0;\n}\n"
    },
    "84": {
        "label": "1",
        "student2956": "#include <stdio.h>\nint main() {\nint m,n,unos=0,i,j;\nint mat[100][100];\ndo{\nif(unos==1) printf(\"Pogresan unos!\\n\");\nunos=0;\nprintf(\"Unesite M i N: \");\nscanf(\"%d %d\",&m,&n);\nunos=1;\n}\nwhile(m<1 || m>100 || n<1 || n>100);\nprintf(\"Unesite elemente matrice: \");\nfor(i=0;i<m;i++){\nfor(j=0;j<n;j++){\nscanf(\"%d\",&mat[i][j]);\n}\n}\nint cirkularna=1;\nfor(i=0;i<m-1;i++){\nfor(j=0;j<n-1;j++){\nif(mat[i][n-1]!=mat[i+1][0]) { cirkularna=0;break;}\nif(mat[i][j]!=mat[i+1][j+1]) cirkularna=0;\n}\n}\nint teplica=1;\nfor(i=0;i<m;i++){\nfor(j=0;j<n;j++){\nif(i==m-1 || j==n-1) continue;\nif(mat[i][j]!=mat[i+1][j+1]) teplica=0;\n}\n}\nif(cirkularna==1) printf(\"Matrica je cirkularna\");\nelse if(teplica==1 && cirkularna==0) printf(\"Matrica je Teplicova\");\nelse printf(\"Matrica nije ni cirkularna ni Teplicova\");\nreturn 0;\n}",
        "student5284": "#include <stdio.h>\n \nint main() {\n    int M,N;\n    int da=0,i,j;\n    double  mat[100][100];\n    do{\n        if(da==1) printf(\"Pogresan unos!\\n\");\n        da=0;\n    printf(\"Unesite M i N: \");\n    scanf(\"%d %d\",&M,&N);\n    da=1;\n    }while(M<1 || M>100 || N<1 || N>100);\n   \n    printf(\"Unesite elemente matrice: \");\n    for(i=0;i<M;i++){\n        for(j=0;j<N;j++){\n            scanf(\"%lf\",&mat[i][j]);\n        }\n    }\n    int cirkularna=1;\n \n \n    for(i=0;i<M-1;i++){\n        for(j=0;j<N-1;j++){\n            if(mat[i][N-1]!=mat[i+1][0]) {\n                cirkularna=0; \n                break;\n                }\n               if(mat[i][j]!=mat[i+1][j+1]) cirkularna=0;\n        }\n    }\n    int teplicova=1;\n    for(i=0;i<M;i++){\n        for(j=0;j<N;j++){\n            if(i==M-1 || j==N-1) continue;\n             if(mat[i][j]!=mat[i+1][j+1] ) teplicova=0;\n        }\n    }\n     if (teplicova==1 && cirkularna==0) printf(\"Matrica je Teplicova\");\n      else if (cirkularna==1) printf(\"Matrica je cirkularna\");\n   \n    else printf(\"Matrica nije ni cirkularna ni Teplicova\\n\");\n   \n    return 0;\n}"
    },
    "85": {
        "label": "0",
        "student4665": "#include <stdio.h>\n\nint suma(int broj) {\n\tif (broj<0) broj*=-1;\n\tint s, cifra;\n\ts=0;\n\twhile(broj) {\n\t\tcifra=broj%10;\n\t\ts+=cifra;\n\t\tbroj/=10;\n\t}\n\treturn s;\n}\n\nint je_li_fib(int broj) {\n\tint niz[20000]={0};\n\tint i;\n\tniz[0]=1;\n\tniz[1]=1; \n\tfor(i=2; i<20000; i++) {\n\t\tniz[i]=niz[i-1]+niz[i-2];\n\t\tif(niz[i]==broj) return 1;\n\t\tif(niz[i]>broj) break;\n\t}\n\treturn 0;\n}\n\nvoid ubaci(int *niz, int n) {\n\tint i=0;\n\tint *poc=niz, *kraj=niz+n-1, *k, *p;\n\twhile (i<n) {\n\t\tk=kraj+i;\n\t\tp=poc;\n\t\twhile(k>p) {\n\t\t\t*(k+1)=*k;\n\t\t\tk--;\n\t\t}\n\t\t*(p+1)=suma(*poc);\n\t\tpoc+=2;\n\t\ti++;\n\t}\n\t\n}\n\n\nint izbaci(int *niz, int n) { \n\tint i, j;\n\tfor(i=0; i<n; i++) {\n\t\tif(*(niz+i)==1 || je_li_fib(*(niz+i))==1) {\n\t\t\tfor(j=i; j<n-1; j++) {\n\t\t\t\t*(niz+j)=*(niz+j+1);\n\t\t\t}\n\t\t\ti--;\n\t\t\tn--;\n\t\t}\n\t}\n\treturn n;\n}\n\nint main() {\n\tint niz[20];\n\tint i, n=10;\n\tprintf(\"Unesite niz od 10 brojeva: \");\n\tfor(i=0; i<n; i++) {\n\t\tscanf(\"%d\", &niz[i]);\n\t}\n\tubaci(niz, n);\n\tn=izbaci(niz, 2*n);\n\tprintf(\"Modificirani niz glasi: \");\n\tfor(i=0; i<n-1; i++) {\n\t\tprintf(\"%d, \", niz[i]);\n\t}\n\tprintf(\"%d.\", niz[n-1]);\n\treturn 0;\n}\n",
        "student7193": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint SumaCifara(int x)\n{\n\tint suma=0;\n\twhile(x>0)\n\t{\n\t\tsuma+=x%10;\n\t\tx/=10;\n\t}\n\treturn suma;\n}\nvoid ubaci (int *niz,int velicina)\n{\n\tint i,j;\n\n\tfor(i=0;i<velicina;i++)\n\t {\n\tfor(j=velicina;j>(i+1);j--)\n\t  {\n\tniz[j]=niz[j-1];\t\n\t  }\n\ti++;\n\tniz[i]=SumaCifara(abs(niz[i-1]));\n\tvelicina++;\n     }\n}\n\nint izbaci(int* niz,int velicina)\n{\n\tint *pomocni=niz;\n\tint max=50;\n\tint i,a=1,b=1,j,k;\n\tpomocni=niz;\n\tint Fib[10000];Fib[0]=1;Fib[1]=1;\n\tfor(i=2;i<max;i++)\n\t{\n\tFib[i]=a+b;\n\ta=b;\n\tb=Fib[i];\n    }\n    for(i=0;i<velicina;i++)\n    {\n    \tfor(j=0;j<50;j++)\n    \t{\n    \t\tif(niz[i]==Fib[j])\n    \t\t{\n    \t\t\tfor(k=i;k<velicina-1;k++)\n    \t\t\t{\n    \t\t\t\tniz[k]=niz[k+1];\n    \t\t\t}\n    \t\t\ti--;\n    \t\tvelicina--;\t\n    \t\tbreak;\n    \t\t}\n    \t}\n    }\n    niz=pomocni;\n    return i;\n}\n\n\n\nint main() {\n\tint niz[100],i,vel;\n\tprintf(\"Unesite niz od 10 brojeva: \");\n\tfor (i=0;i<10;i++){\t\n\t\tscanf(\"%d\",&niz[i]);\n\t}\n\tubaci(niz,10);\n\tvel=izbaci(niz,20);\n\tprintf(\"Modificirani niz glasi: \");\n\tfor(i=0;i<vel;i++)\n\t{\n\t\tif(i==vel-1)\n\t\tprintf(\"%d.\\n\",niz[i]);\n\t\telse printf(\"%d, \",niz[i]);\n\t}\n\treturn 0;\n}\n"
    },
    "86": {
        "label": "1",
        "student1029": "#include <stdio.h>\n#include<stdlib.h>\n\nint main() {\n\tint M,N;\n\tint i,j;\n \tint cirkularna, teplicova;\n \tcirkularna=1;\n \tteplicova=1;\n \tdouble m[100][100];\n\ndo\n{\nprintf(\"Unesite M i N: \");\nscanf(\"%d %d\" , &M, &N);\nif(M>100 || N>100 || M<=0 || N<=0) { printf(\"Pogresan unos!\\n\"); }\n}while(M>100 || N>100 || M<=0 || N<=0);\n\n\n\nprintf(\"Unesite elemente matrice: \");\n\t\nfor(i=0 ; i<M ; i++)\n\t{\n\tfor(j=0 ; j<N ; j++)\n\t{\n\t\tscanf(\"%lf\" , &m[i][j]);\t\t\n\t}\n\t}\n\t\n\t\nfor(i=1 ; i<M ; i++)\n\t{\n\tfor(j=1 ; j<N ; j++)\n\t{\n\t if((m[i][j]!=m[i-1][j-1]))\n\t {\n\t \tteplicova=0;\n\t\n\t \t}\n\t}\t\n}\n\nfor(i=1 ; i<M ; i++)\n\t{\n\t\n\t if((m[i][0]!=m[i-1][N-1]))\n\t {\n\t \tcirkularna=0;\n\t \tbreak;\n\t \t}\n\t\n}\n\n\nif(cirkularna && teplicova)\n{\n\tprintf(\"Matrica je cirkularna\\n\");\n}\n\nelse if(teplicova && cirkularna==0)\n{\n\tprintf(\"Matrica je Teplicova\\n\");\n}\n\t\nelse\n{\n\tprintf(\"Matrica nije ni cirkularna ni Teplicova\");\n}\n\t\n\n\n\treturn 0;\n}\n",
        "student2585": "#include <stdio.h>\n\nint main() {\nint  M, N, i, j, cirkularna, teplicova;\nteplicova=1;\ncirkularna=1;\ndouble m[100][100];\n\ndo\n{\n    printf(\"Unesite M i N: \");\n    scanf(\"%d %d\", &M, &N);\n    if(M>100 || N>100 || M<=0 || N<=0) {printf(\"Pogresan unos!\\n\");}\n    \n} while (M>100 || N>100 || M<=0 || N<=0);\n\nprintf(\"Unesite elemente matrice: \");\n\nfor(i=0; i<M; i++)\n{\n    for(j=0; j<N; j++)\n    {\n        scanf(\"%lf\", &m[i][j]);\n        \n    }\n}\n\nfor(i=1; i<M; i++)\n{\n    for(j=1; j<N; j++)\n    {\n        if(m[i][j]!=m[i-1][j-1])\n        {\n            teplicova=0;\n            \n        }\n    }\n}\n\nfor(i=1; i<M; i++)\n{\n    \n         if(m[i][0]!=m[i-1][N-1] )\n        {\n           cirkularna=0;\n           break;\n        }\n        \n    \n    \n}\n\n    if(cirkularna && teplicova) \n    {\n        printf(\"Matrica je cirkularna\\n\");\n    }\n  \n    else if(teplicova && cirkularna==0)\n    {\n        printf(\"Matrica je Teplicova\\n\");\n    }\n    else\n    {\n        printf(\"Matrica nije ni cirkularna ni Teplicova\");\n        \n    }\n\nreturn 0;\n}"
    },
    "87": {
        "label": "0",
        "student2950": "#include <stdio.h>\n\nint main()\n{\n\tint n,m,p,j,k,i;\n\n\tprintf(\"Unesite broj redova: \");\n\tscanf(\"%d\",&n);\n\tif(n>10 || n<=0) {\n\t\tdo {\n\t\t\tprintf(\"Unesite broj redova: \");\n\t\t\tscanf(\"%d\",&n);\n\t\t} while(n>10 || n<=0);\n\t}\n\tprintf(\"Unesite broj kolona: \");\n\tscanf(\"%d\",&m);\n\tif(m>10 || m<=0) {\n\t\tdo {\n\t\t\tprintf(\"Unesite broj kolona: \");\n\t\t\tscanf(\"%d\",&m);\n\t\t} while(m>10 || m<=0);\n\t}\n\tprintf(\"Unesite sirinu jedne kolone: \");\n\tscanf(\"%d\",&p);\n\tif(p>10 || p<=0) {\n\t\tdo {\n\t\t\tprintf(\"Unesite sirinu jedne kolone: \");\n\t\t\tscanf(\"%d\",&p);\n\t\t} while(p>10 || p<=0);\n\t}\n\tfor(i=1; i<=n+1; i++) {\n\n\t\tfor(j=1; j<=m+1; j++) {\n\t\t\tprintf(\"+\");\n\n\t\t\tfor(k=1; k<=p; k++) {\n\t\t\t\tif(j==m+1)continue;\n\t\t\t\tprintf(\"-\");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tfor(j=1; j<m+2 && i!=n+1; j++) {\n\t\t\tprintf(\"|\");\n\t\t\tfor(k=1; k<=p; k++) {\n\t\t\t\tif(j==m+1)continue;\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n",
        "student9155": "#include <stdio.h>\n\nint main() {\n\t\n\tint i,j,k,s,r,l;\n\t\n\tdo \n\t{ printf(\"Unesite broj redova: \");\n\t    scanf(\"%d\",&r);\n\t} while(r<=0 || r>10);\n\t\n\tdo { printf(\"Unesite broj kolona: \");\n\t    scanf(\"%d\",&k);\n\t} while(k<=0 || k>10);\n\t\n\tdo { printf(\"Unesite sirinu jedne kolone: \");\n\t    scanf(\"%d\",&s);\n\t} while(s<=0 || s>10);\n\t\n\tfor (i=0; i<=(2*r); i++) {\n\t\tif(i%2==0) {\n\t\t\tfor (j=0; j<=(k-1); j++) {\n\t\t\t\tprintf(\"+\");\n\t\t\t\n\t\t\tfor(l=0; l<s ;l++){\n\t\t\t\t\tprintf(\"-\");\n\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"+\\n\");\n\t\t}\n\t\telse if(i%2==1) {\n\t\t\tfor (j=0; j<=(k-1); j++){\n\t\t\t\tprintf(\"|\");\n\t\t\t\tfor(l=0; l<s; l++) {\n\t\t\t\t\tprintf(\" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"|\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"
    },
    "88": {
        "label": "1",
        "student4416": "#include <stdio.h>\nstruct Student {\n\tchar ime[20],prezime[20];\n\tint ocjene[50];\n\tint br_ocjena;\n};\nfloat prosj(int *ocj,int brocj){\n\tint suma=0,i;\n\tfor(i=0;i<brocj;i++){\n\t\tif(ocj[i]==5) return 5;\n\t\tsuma=suma+ocj[i];\n\t}\n\tif (suma==0) return 5;\n\treturn (float)suma/brocj;\n}\nint leks(char*i1,char*p1,char*i2,char*p2){\n\twhile(*p1!=0 && *p2!=0){\n\t\tif(*p1<*p2) return 1;\n\t\tif(*p1>*p2) return 2;\n\t\tp1++;\n\t\tp2++;\n\t}\n\tif(*p1!=0) return 2;\n\tif(*p2!=0) return 1;\n\twhile(*i1!=0 && *i2!=0){\n\t\tif(*i1<*i2) return 1;\n\t\tif(*i1>*i2) return 2;\n\t\ti1++;\n\t\ti2++;\n\t}\n\tif(*i1!=0) return 2;\n\tif(*i2!=0) return 1;\n\treturn 0;\n}\nint genijalci(struct Student *niz, int velicina, float prosjek){\n\tint veci,i,j,max1=0,max2=0,max3=0;\n\tfloat t,p1=0,p2=0,p3=0;\n\tfor(i=0;i<velicina;i++){\n\t\tif(prosjek>prosj(niz[i].ocjene,niz[i].br_ocjena)){\n\t\t\tfor (j=i;j<velicina-1;j++){\n\t\t\t\tniz[j]=niz[j+1];\n\t\t\t}\n\t\t\ti--;\n\t\t\tvelicina--;\n\t\t}\n\t}\n\tfor(i=0;i<velicina;i++){\n\t\tt=(prosj(niz[i].ocjene,niz[i].br_ocjena));\n\t\tif(t>p1){\n\t\t\tp3=p2;\n\t\t\tmax3=max2;\n\t\t\tp2=p1;\n\t\t\tmax2=max1;\n\t\t\tp1=t;\n\t\t\tmax1=i;\n\t\t}\n\t\telse if(t==p1){\n\t\t\tveci=leks(niz[i].ime,niz[i].prezime,niz[max1].ime,niz[max1].prezime);\n\t\t\tif(veci==1){\n\t\t\t\tp3=p2;\n\t\t\t\tmax3=max2;\n\t\t\t\tp2=p1;\n\t\t\t\tmax2=max1;\n\t\t\t\tp1=t;\n\t\t\t\tmax1=i;\n\t\t\t}\n\t\t\telse if(veci==2){\n\t\t\t\tveci=leks(niz[i].ime,niz[i].prezime,niz[max2].ime,niz[max2].prezime);\n\t\t\t\tif(veci==1){\n\t\t\t\t\tp3=p2;\n\t\t\t\t\tmax3=max2;\n\t\t\t\t\tp2=t;\n\t\t\t\t\tmax2=i;\n\t\t\t\t}\n\t\t\t\telse if(veci==2){\n\t\t\t\t\tveci=leks(niz[i].ime,niz[i].prezime,niz[max3].ime,niz[max3].prezime);\n\t\t\t\t\tif(veci==1 || veci==0){\t\n\t\t\t\t\t\tp3=t;\n\t\t\t\t\t\tmax3=i;\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t\telse if(veci==0){\n\t\t\t\tp3=p2;\n\t\t\t\tmax3=max2;\n\t\t\t\tp2=t;\n\t\t\t\tmax2=i;\n\t\t\t}\n\t\t}\n\t\telse if(t>p2){\n\t\t\tp3=p2;\n\t\t\tmax3=max2;\n\t\t\tp2=t;\n\t\t\tmax2=i;\n\t\t}\n\t\telse if(t==p2){\n\t\t\tveci=leks(niz[i].ime,niz[i].prezime,niz[max2].ime,niz[max2].prezime);\n\t\t\tif(veci==1){\n\t\t\t\tp3=p2;\n\t\t\t\tmax3=max2;\n\t\t\t\tp2=t;\n\t\t\t\tmax2=i;\n\t\t\t}\n\t\t\telse if(veci==2){\n\t\t\t\tveci=leks(niz[i].ime,niz[i].prezime,niz[max3].ime,niz[max3].prezime);\n\t\t\t\tif(veci==1){\n\t\t\t\t\tp3=t;\n\t\t\t\t\tmax3=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(veci==0){\n\t\t\t\tp3=t;\n\t\t\t\tmax3=i;\n\t\t\t}\n\t\t}\n\t\telse if(t>p3){\n\t\t\tp3=t;\n\t\t\tmax3=i;\n\t\t}\n\t\telse if(t==p3){\n\t\t\tveci=leks(niz[i].ime,niz[i].prezime,niz[max3].ime,niz[max3].prezime);\n\t\t\tif(veci==1){\n\t\t\t\tp3=t;\n\t\t\t\tmax3=i;\n\t\t\t}\n\t\t}\n\t}\n\tif(p1>0) printf(\"\\n%s %s\",niz[max1].prezime,niz[max1].ime);\n\tif(p2>0) printf(\"\\n%s %s\",niz[max2].prezime,niz[max2].ime);\n\tif(p3>0) printf(\"\\n%s %s\",niz[max3].prezime,niz[max3].ime);\t\n\treturn velicina;\n}\nint main() {\n\tstruct Student studenti[4] ={\n\t{ \"Mujo\", \"Mujic\", { 7,7,7,7,8}, 5}, \n\t{ \"Beba\", \"Bebic\", { 6,6,6,6,6}, 5},\n\t{ \"Mujo\", \"Mujic\", { 7,7,7,7,8}, 5}, \n\t{ \"Fata\", \"Fatic\", { 7,7,7,8,8}, 5},\n};\ngenijalci(studenti, 4, 6.5);\n\treturn 0;\n}\n",
        "student8118": "#include <stdio.h>\nstruct Student {\n\tchar ime[20], prezime[20];\n\tint ocjene[50];\n\tint br_ocjena;\n};\n\n/*Funkcija za racunanje prosjeka studenata*/\nfloat racunanje_prosjeka (int *ocjena, int broj_ocjena) {\n\tint i, s=0;\n\tfloat prosjek;\n\tfor (i=0; i<broj_ocjena; i++) {\n/*Ako postoji ijedna ocjena 5, smatra se da je prosjek studenta 5 (po uslovu zadatka)*/\n        if (ocjena[i]==5) return 5;\n\t\ts=s+ocjena[i];\n\t}\n/*Ako student nema nijednu ocjenu, smatra se da je njegov prosjek 5 (po uslovu zadatka)*/\n\tif (i==0) return 5;\n\tprosjek=(float)s/broj_ocjena;\n\treturn prosjek;\n}\n\n/*Leksikografski poredak studenata*/\nint Leksikografski (char *ime1, char *prez1, char *ime2, char *prez2) {\n\twhile (*prez1!='\\0' && *prez2!='\\0') {\n\t\tif (*prez1<*prez2) return -1;\n\t\tif (*prez1>*prez2) return 1;\n\t\tprez1++;\n\t\tprez2++;\n\t}\n\tif (*prez1!='\\0') return 1;\n\tif (*prez2!='\\0') return -1;\n\twhile (*ime1!='\\0' && *ime2!='\\0') {\n\t\tif(*ime1<*ime2) return -1;\n\t\tif (*ime1>*ime2) return 1;\n\t\time1++;\n\t\time2++;\n\t}\n\tif (*ime1!='\\0') return 1;\n\tif (*ime2!='\\0') return -1;\n\treturn 0;\n}\nint genijalci (struct Student niz[], int vel, float prosjek) {\n\tint i, j, prvi, max1=0, max2=0, max3=0;\n\tfloat s1=0, s2=0, s3=0, prosj;\n/*Izbacivanje studenta koji ne zadovoljava uneseni prosjek*/\n\tfor (i=0; i<vel; i++) {\n\t\tif ((racunanje_prosjeka(niz[i].ocjene, niz[i].br_ocjena))<prosjek) {\n\t\t\tfor (j=i; j<vel-1; j++) \n\t\t\t\tniz[j]=niz[j+1];\n\t\t\ti--;\n\t\t\tvel--;\n\t\t}\n\t}\n/*Ispisivanje imena i prezimena prva tri studenta sa najvecim prosjekom*/\n    for (i=0; i<vel; i++) {\n    \tprosj=racunanje_prosjeka(niz[i].ocjene,niz[i].br_ocjena);\n    \tif (prosj>s1) {\n    \t\ts3=s2;\n    \t\ts2=s1;\n    \t\ts1=prosj;\n    \t\tmax3=max2;\n    \t\tmax2=max1;\n    \t\tmax1=i;\n    \t}\n        else if (prosj==s1) {\n/*Ako dva student imaju isti prosjek ocjena, ispisujemo ih po leksikografskom poretku*/\n       \t\tprvi=Leksikografski(niz[i].ime, niz[i].prezime, niz[max1].ime, niz[max1].prezime);\n       \t\tif (prvi==-1) {\n       \t\t\ts3=s2;\n       \t\t\ts2=s1;\n       \t\t\ts1=prosj;\n       \t\t\tmax3=max2;\n       \t\t\tmax2=max1;\n       \t\t\tmax1=i;\n       \t\t}\n       \t\telse if (prvi==1) {\n       \t\t\tprvi=Leksikografski(niz[i].ime, niz[i].prezime, niz[max2].ime, niz[max2].prezime);\n       \t\t\tif (prvi==-1) {\n       \t\t\t\ts3=s2;\n       \t\t\t\ts2=prosj;\n       \t\t\t\tmax3=max2;\n       \t\t\t\tmax2=i;\n       \t\t    }\n       \t\t\telse if (prvi==1) {\n       \t\t\t\tprvi=Leksikografski(niz[i].ime, niz[i].prezime, niz[max3].ime, niz[max3].prezime);\n       \t\t\t\tif (prvi==0 || prvi==-1) {\n       \t\t\t\t\ts3=prosj;\n       \t\t\t\t\tmax3=i;\n       \t\t\t\t}\n       \t\t\t}\n       \t\t}\n     \t\telse if (prvi==0) {\n    \t\t\ts3=s2;\n     \t\t\ts2=prosj;\n     \t\t\tmax3=max2;\n     \t\t\tmax2=i;\n     \t\t}\n       }\n     \telse if (prosj>s2) {\n     \t\ts3=s2;\n     \t\ts2=prosj;\n     \t\tmax3=max2;\n     \t\tmax2=i;\n    \t }\n    \t else if (prosj==s2) {\n/*Ako dva student imaju isti prosjek ocjena, ispisujemo ih po leksikografskom poretku*/\n     \t\tprvi=Leksikografski(niz[i].ime, niz[i].prezime, niz[max2].ime, niz[max2].prezime);\n    \t\tif (prvi==1) {\n     \t\t\tprvi=Leksikografski(niz[i].ime, niz[i].prezime, niz[max3].ime, niz[max3].prezime);\n     \t\t\tif (prvi==-1) {\n   \t\t\t\t\ts3=prosj;\n   \t\t\t\t\tmax3=i;\n    \t\t\t}\n     \t\t}\n     \t\telse if(prvi==-1) {\n     \t\t\ts3=s2;\n     \t\t\ts2=prosj;\n     \t\t\tmax3=max2;\n     \t\t\tmax2=i;\n     \t\t}\n     \t\telse if (prvi==0) {\n     \t\t\ts3=prosj;\n     \t\t\tmax3=i;\n     \t\t}\t\n     \t}\n    \telse if (prosj>s3) {\n     \t\ts3=prosj;\n     \t\tmax3=i;\n     \t}\n     \telse if (prosj==s3) {\n/*Ako dva student imaju isti prosjek ocjena, ispisujemo ih po leksikografskom poretku*/\n     \t\tprvi=Leksikografski(niz[i].ime, niz[i].prezime, niz[max3].ime, niz[max3].prezime);\n     \t\tif(prvi==-1) {\n     \t\t\ts3=prosj;\n     \t\t\tmax3=i;\n     \t\t}\n    \t\t else if (prvi==0) {\n     \t\t\ts3=prosj;\n     \t\t\tmax3=i;\n     \t\t}\t\n        }\n    }\n    if(s1>0)\n\t\t printf (\"%s %s\\n\", niz[max1].prezime, niz[max1].ime);\n    if(s2>0)\n    \tprintf (\"%s %s\\n\", niz[max2].prezime, niz[max2].ime);\n    if(s3>0)\n    \tprintf (\"%s %s\\n\", niz[max3].prezime, niz[max3].ime);\n\treturn vel;\n}\n\nint main() {\n\tstruct Student studenti[4] ={\n\t{ \"Mujo\", \"Mujic\", { 7,7,7,7,8}, 5}, \n\t{ \"Beba\", \"Bebic\", { 6,6,6,6,6}, 5},\n\t{ \"Mujo\", \"Mujic\", { 7,7,7,7,8}, 5}, \n\t{ \"Fata\", \"Fatic\", { 7,7,7,7,8}, 5}, \n};\ngenijalci(studenti, 4, 6.5);\n\t\n\treturn 0;\n}\n"
    },
    "89": {
        "label": "0",
        "student3776": "#include <stdio.h>\n\n#define eps 0.0001\n\nchar* obuhvat(char *s,double x1, double y1, double x2, double y2){\n\tif (*s=='\\0') return s;\n\tchar *p=s;\n\twhile(*p!='\\0'){\n\t\tif (*p!='(') return NULL;\n\t\tchar *q=p;\n\t\tif (*q=='-') q++;\n\t\twhile (*q!='\\0' && *q!=')') q++;\n\t\tif (*q!=')') return NULL;\n\t\tif(*(q+1)!=',' && *(q+1)!='\\0') return NULL;\n\t\tp++;\n\t\tif(*p=='-')\n\t\t\tp++;\n\t\tif (!(*p>='0' && *p<='9')) return NULL;\n\t\twhile(*p>='0' && *p<='9')\n\t\t\tp++;\n\t\tif(*p!='.' && *p!=',') return NULL;\n\t\tif (*p=='.'){\n\t\t\tp++;\n\t\t\twhile(*p>='0' && *p<='9') p++;\n\t\t}\n\t\tif (*p++!=',') return NULL;\n\t\tif(*p=='-') p++;\n\t\tif(!(*p>='0' && *p<='9')) return NULL;\n\t\twhile(*p>='0' && *p<='9') p++;\n\t\tif(*p!='.' && *p!=')') return NULL;\n\t\tif(*p=='.') p++;\n\t\twhile(*p>='0' && *p<='9') p++;\n\t\tif(*p!=*q) return NULL;\n\t\tp++;\n\t\tif(*p==',') p++;\n\t}\n\tp--;\n\tif(*p!=')') return NULL;// provjera ispravnosti\n\tp=s;\n\twhile(*p!='\\0'){\n\t\tchar *q=p;\n\t\tint neg=1,i=10;\n\t\tp++;\n\t\tif(*p=='-'){\n\t\t\tneg=-1;\n\t\t\tp++;\n\t\t}\n\t\tdouble x=0,y=0,pom=0;\n\t\twhile(*p>='0' && *p<='9'){\n\t\t\tx=x*10+(*p-'0');\n\t\t\tp++;\n\t\t}\n\t\tif(*p=='.'){\n\t\t\tp++;\n\t\t\twhile(*p>='0' && *p<='9'){\n\t\t\t\tpom+=(double)(*p-'0')/i;\n\t\t\t\ti*=10;\n\t\t\t\tp++;\n\t\t\t}\n\t\t}\n\t\tx+=pom;\n\t\tx*=neg;\n\t\tp++;\n\t\tpom=0;\n\t\ti=10;\n\t\tneg=1;\n\t\tif(*p=='-'){\n\t\t\tneg=-1;\n\t\t\tp++;\n\t\t}\n\t\twhile(*p>='0' && *p<='9'){\n\t\t\ty=y*10+(*p-'0');\n\t\t\tp++;\n\t\t}\n\t\tif(*p=='.'){\n\t\t\tp++;\n\t\t\twhile(*p>='0' && *p<='9'){\n\t\t\t\tpom+=(double)(*p-'0')/i;\n\t\t\t\ti*=10;\n\t\t\t\tp++;\n\t\t\t}\n\t\t}\n\t\ty+=pom;\n\t\ty*=neg;\n\t\tif(!(x>=x1 && x<=x2 && y>=y1 && y<=y2)){\n\t\t\tchar *pom1=p;\n\t\t\twhile(*pom1!='(' && *pom1!='\\0') pom1++;\n\t\t\twhile(*q++=*pom1++);\n\t\t\tp=s;\n\t\t}\n\t\twhile (*p!='(' && *p!='\\0') p++;\n\t}\n\tp=s;\n\twhile(*p!='\\0') p++;\n\tp--;\n\tif (*p==',') *p='\\0';\n\treturn s;\n}\n\nint main() {\n\t//char s[50]=\"(2.5,3)\";\n\tchar s[100]=\"(1.1,5.5),(1.2,3.),(1.3,5.5),(1.4,5.5),(1.5,5.5)\";\n\tprintf(\"%s\",obuhvat(s,-1,0,5,5));\n\treturn 0;\n}\n",
        "student8480": "#include <stdio.h>\n#define eps 0.0001\n\nvoid izbaci(char *s, char *poc){ //izbacivanje, prekopiramo sve iduce ( na nasu (\n\tchar *hod=s+2;\n\n\twhile(*hod!='\\0'){\n\t\t*poc=*hod;\n\t\tpoc++; hod++;\n\t\n\t} *poc='\\0';\n}\n\n\ndouble ididozareza(char *s){ //vrati broj koji smo nasli do zareza, tj x koordinatu, isto kao i za y\n\t\tdouble k=0.1;\n\t\tint predznak=1;\n\t\tdouble suma=0;\n\t\tint imadecimala=0;\n\t\n\t\twhile(*s!=','){\n\t\t\tif(*s=='-') {predznak=-1;s++;}\n\t\t\tif(*s=='.') {imadecimala=1;s++;}\n\t\t\tif(*s==',') break;\n\t\t\n\t\t\tif(imadecimala==0)\tsuma=suma*10+(*s-'0');\n\t\t\telse {suma=suma+(*s-'0')*k; k/=10;}\n\t\ts++;\n\t\t}\n\tsuma=suma*predznak;\n\treturn suma;\n}\n\n\t\nint fun(char *n){ //funkcija vrati 0 ako ima neki los format u stringu\n\tint otvorena=0, zatvorena=0, zarez=0;\n\t\n\twhile(*n!='\\0'){ //prebrojimo broj zagrada i zareza\n\t\tif(*n==',') zarez++;\n\t\tif(*n=='(') otvorena++;\n\t\tif(*n==')') zatvorena++;\n\t\tn++;\n\t}\nn--;\nif(otvorena!=zatvorena) return 0; //ako negdje fali zagrada\nif(((otvorena+zatvorena)/2)+otvorena-1!=zarez) return 0; //ako ima premalo ili previse minusa\nreturn 1;\n}\n\t\n\t\nchar *obuhvat (char *tekst, double x1, double y1, double x2, double y2){\n\tchar *poc; char *s=tekst; char *n=tekst;\n\tif(*n!='(') return 0; //provjerimo da li je na pocetku zagrada, ako nije onda odmah vrati nulu jer je pogresan format\n\tint vr=fun(n); //u nasu varijablu vr spasimo sta funkcija vraca\n\tif(vr==0) return 0; //ako funkcija vrati nulu, to je pogresan format i zavrsimo program\n\t\n\twhile(*n!='\\0'){ /*sa jednom petljom prodjemo kroz string, do iza kraja, pa se vratimo na jednu poziciju nazad i \n\t\t\t\ttu mora biti zatvorena zagrada (to se ispituje u narednim linijama koda) */\n\t\tn++;\n\t}\n\tn--;\n\t\n\tif(*n!=')') return 0;\n\t\n\twhile(*s!='\\0'){ //sa ovom petljom prolazimo kroz string i kupimo x i y koordinate\n\t\tif(*s=='(') {poc=s;  //pamtimo pocetak zagrada u slucaju da bude izbacivanje da znamo dokle treba i na ove zagrade prekopiramo nove od iduceg broja\n\t\tif(*(s+1)=='.' || *(s+1)==',') return 0; s++;} //autotestovi ako je poslije (. ili (, to je los format\n\t\t\n\tdouble suma=ididozareza(s); //u sumu spasimo sve cifre do zareza, to ce nam biti x koordinata\n\t\n\twhile(*s!=','){ //ovom petljom pomjerimo s do zareza i usput provjerimo ima li nekog smeca\n\t\tif(!((*s>=48 && *s<=87) || *s=='-' || *s=='.')) return 0;\n\t\ts++;\n\t}\nif(*(s+1)==')' || *(s+1)=='.') return 0; //autotest ako je poslije zareza tacka ili zagrada, to je los format, mora biti broj\n\nint predznak=1;\nint imadecimala=0;\ndouble sumay=0;\ndouble k=0.1;\ns++;\n\twhile(*s!=')'){ //ovdje kupimo y koordinatu\n\t\tif(!((*s>=48 && *s<=87) || *s=='-' || *s=='.')) return 0; //ispitamo da li je smece\n\t\tif(*s=='-') {predznak=-1;s++;}\n\t\tif(*s=='.') {imadecimala=1; s++;}\n\t\tif(imadecimala==0) //ako nije doslo do . racunamo cijeli dio broja pa suma izgleda ovako, a u suprotnom moramo imati k koje smanjuje broj\n\t\tsumay=sumay*10+(*s-'0');\n\t\telse {sumay=sumay+(*s-'0')*k;\n\tk/=10;\n\t}\ns++;\n}\nsumay=sumay*predznak;\n\t\nchar *a=poc; //pomocni koji nam govori gdje je bila zagrada, da mozemo novu ubaciti i vratit s na nju\nint izb=0;\n\t\nif(sumay-y2>eps || y1-sumay>eps || x1-suma>eps || suma-x2>eps){ // da li treba izbaciti\n\tizb=1;\n\tif(poc==tekst && *(s+1)=='\\0'){ //ako je prva rijec i ako je to jedina rijec, onda samo stavimo pocetak na \\0 i vratimo to\n\t\t*tekst='\\0';\n\t\treturn tekst;\n\t}\n\tif(*(s+1)=='\\0'){ \n\t\t*(poc-1)='\\0'; return tekst;\n\t}\n\telse izbaci(s,poc);\n}\n   \n\tif(izb==1) {s=a;} //ako se desilo izbacivanje onda s vratimo na a, tj. na (\n\telse if(*(s+1)=='\\0') s++; //ovdje ispitujemo da li smo na kraju, da znamo da li s treba povecati dva puta da bi otislo na ( ili jednom da ode na \\0\n\telse s+=2;\n\tsuma=0; sumay=0;\n}\n\treturn tekst;\n}\n\n\nint main() {\n\tchar s[] = \"(1.1,5.5),(1.2,5.5),(1.3,5.5),(1.4,5.5),(1.5,5.5)\";\n\tchar* rez = obuhvat(s, 1.2, 5.499, 1.4, 5.501);\n\tprintf(\"%s\", rez);\n\n\t\n\treturn 0;\n}\n"
    },
    "90": {
        "label": "1",
        "student5378": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 1\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Ivona Ivkovic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: iivkovic2@etf.unsa.ba\n\t\n*/\n\n\n#include <iostream>\n#include <vector>\n#include <stdexcept>\nusing namespace std;\nenum class Komande {\n    PomjeriJednoMjesto, PomjeriDalje, Blokiraj,Deblokiraj,PrikaziOkolinu,\n    ZavrsiIgru,KreirajIgru};\n    enum class Status{NijeKraj,KrajPoraz,KrajPobjeda};\n    enum class Smjerovi{GoreLijevo,Gore,GoreDesno,Desno,DoljeDesno,Dolje,DoljeLijevo,Lijevo};\n    enum class KodoviGresaka{PogresnaKomanda,NedostajeParametar,SuvisanParametar,NeispravanParametar};\n    enum class Polje{Prazno,Posjeceno,Mina,BlokiranoPrazno,BlokiranoPosjeceno,BlokiranoMina};\n    typedef vector<vector<Polje>>Tabla;\n    Tabla KreirajTablu (int n){\n        return Tabla(n,vector<Polje>(n));\n    }\n    Tabla KreirajIgru(int n,const vector<vector<int>>&mine){\n        for(unsigned int i=0;i<mine.size();i++){\n            if(mine[i].size()!=2) throw domain_error(\"Ilegalan format zadavanja mina\");\n            else if(mine[i][0]>n-1 ||mine[i][0]<0||mine[i][1]>n-1||mine[i][1]<0) throw domain_error(\"Ilegalne pozicije mina\");\n        }\n        auto t(KreirajTablu(n));\n        for(int i=0;i<n;i++)\n        for(int j=0;j<n;j++)\n        t[i][j]=Polje(0);\n        for(unsigned int i=0;i<mine.size();i++)\n        for(int j=0;j<2;j++){\n            t[mine[i][0]][mine[i][1]]=Polje(2);\n        }\n        return t;\n    }\n    vector<vector<int>>PrikaziOkolinu(const Tabla &polja,int x,int y){\n        if(x==0||y==0||(unsigned int)x==polja.size()-1||(unsigned int)y==polja.size()-1)throw domain_error(\"Polje (x,y) ne postoji\");\n        vector<vector<int>>okolina;\n        int brojac(0);\n        int n{int(polja.size())};\n        for(int i=-1;i<2;i++){\n            vector<int>m;\n            for(int j=-1;j<2;j++){\n                brojac=0;\n                if(x+i>=0 && y+j>=0 && x+i<n && y+j<n){\n                    for(int iPojedinacno=-1;iPojedinacno<2;iPojedinacno++){\n                        for(int jPojedinacno=-1;jPojedinacno<2;jPojedinacno++){\n                            if(iPojedinacno==0 && jPojedinacno==0) continue;\n                             if( x+i+iPojedinacno>=0 && y+j+jPojedinacno>=0 && x+i+iPojedinacno<n && y+j+jPojedinacno<n  &&\n                           polja[x+i+iPojedinacno][y+j+jPojedinacno]==Polje(2))\n                           {\n                               brojac++;\n                           }\n                        }\n                    }\n                }\n                m.push_back(brojac);\n            }\n            okolina.push_back(m);\n            m.clear();\n            }\n            for(int i=0;i<3;i++){\n                for(int j=0;j<3;j++)\n                cout<<okolina[i][j]<<\" \";\n                cout<<endl;\n            }\n            return okolina;\n        }\n        void BlokirajPolje(Tabla &polja,int x,int y){\n            if(x<0 || y<0|| (unsigned int)x>polja.size()-1||(unsigned int)y>polja.size()-1)throw domain_error(\"Polje (x,y) ne postoji\");\n            for(int i=0;i<3;i++)\n            if(polja[x][y]==Polje(i)) polja[x][y]=Polje(i+3);\n    }\n    void DeblokirajPolje(Tabla &polja,int x ,int y){\n        if(x<0 || y<0 || (unsigned int)x>polja.size()-1||(unsigned int)y>polja.size()-1)throw domain_error (\"Polje (x,y) ne postoji\");\n        for(int i=0;i<3;i++){\n            if(polja[x][y]==Polje(i+3)) polja[x][y]=Polje(i);\n        }\n    }\n\n    Status Idi(Tabla &polja, int &x,int &y, Smjerovi smjer){\n        int dimTable{int(polja.size())};\n        polja[x][y]=Polje(1);\n        Status statusIgre{Status(0)};\n        bool mrtviSmo{false},pobjediliSmo{true};\n        if(smjer==Smjerovi(0)){\n            if((x-y)<0||(y-1)<0 || (x-1)>=dimTable||(y-1)>=dimTable) throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x-1][y-1]>Polje(2))throw logic_error(\"Blokirano polje\");\n            x-=1;\n            y-=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(1)){\n            if((x-1)<0||(x-1)>=dimTable) throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x-1][y]>Polje(2)) throw logic_error(\"Blokirano polje\");\n            x-=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(2)){\n            if((x-1)<0 || (y+1)<0 ||(x-1)>=dimTable||(y+1)>=dimTable)throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x-1][y+1]>Polje(2))throw logic_error(\"Bloirano polje\");\n            x-=1;\n            y+=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(3)){\n            if((y+1)<0||(y+1)>=dimTable) throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x][y+1]>Polje(2)) throw logic_error(\"Blokirano polje\");\n            y+=1;\n            if(polja[x][y]==Polje(2))mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(4)){\n            if((x+1)<0||(y+1)<0||(x+1)>=dimTable||(y+1)>=dimTable)throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x+1][y+1]>Polje(2)) throw logic_error(\"Blokiraj polje\");\n            x+=1;\n            y+=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(5)){\n            if((x+1)<0||(x+1)>=dimTable) throw out_of_range (\"Izlazak van igrace table\");\n         if( polja[x+1][y]>Polje(2) )  throw logic_error(\"Blokirano polje\");\n        x+=1;\n        if( polja[x][y]==Polje(2) )    mrtviSmo = true;\n\n        }\n        if(smjer==Smjerovi(6)){\n            if((x+1)<0 || (y-1)<0 || (x+1)>=dimTable||(y-1)>=dimTable) throw out_of_range (\"Izlazak van igrace table\");\n            if(polja[x+1][y-1]>Polje(2)) throw logic_error(\"Blokirano polje\");\n            x+=1;\n            y-=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(smjer==Smjerovi(7)){\n            if((y-1)<0||(y-1)>=dimTable) throw out_of_range(\"Izlazak van igrace table\");\n            if(polja[x][y-1]>Polje(2)) throw logic_error(\"Blokirano polje\");\n            y-=1;\n            if(polja[x][y]==Polje(2)) mrtviSmo=true;\n        }\n        if(mrtviSmo){\n            for(int i=0;i<dimTable;i++)\n            for(int j=0;j<dimTable;j++)\n            polja[i][j]=Polje(0);\n            statusIgre=Status(1);\n            return statusIgre;\n        }\n        for(int i=0;i<dimTable;i++){\n            for(int j=0;j<dimTable;j++){\n                if(polja[i][j]!=Polje(1)){\n                    pobjediliSmo=false;\n                    return statusIgre;\n                }\n            }\n        }\n        if(pobjediliSmo){\n            statusIgre=Status(2);\n            return statusIgre;\n        }\n        return Status(0);\n    }\n    Status Idi(Tabla &polja,int&x,int&y,int novi_x,int novi_y)\n    {\n        \n    }\n    bool UnosKomande(Komande &komanda,Smjerovi &smjer,int &x,int &y,KodoviGresaka &greska){\n        \n    }\n    void IzvrsiKomandu(Komande komanda, Tabla &polja, int &x, int &y,\n Smjerovi p_smjer = Smjerovi::Gore, int p_x = 0, int p_y = 0);\n\n    int main(){\n        cout<<\"Unesite komandu: \";\n        int n;\n        cout<<\"Unsite broj polja: \";\n        cin>>n;\n        vector<vector<int>>mine;\n        int x,y;\n        char znak(')');\n        cout<<\"Unsite pozicije mina: \";\n        while(znak==')'){\n            cin>>znak;\n            if(znak!='('){\n                if(znak=='.') break;\n                cin.clear();\n                cin.ignore(10000,'\\n');\n                cout<<\"Greska, unesite ponovo!\"<<endl;\n                znak=')';\n                continue;\n            }\n            cin>>x;\n            cin>>znak;\n            if(znak!=','||x>=n){\n                if(znak=='.')break;\n                cin.clear();\n                cin.ignore(10000,'\\n');\n                cout<<\"Greska, unesite ponovo!\"<<endl;\n                znak=')';\n                continue;\n            }\n            cin>>y;\n            cin>>znak;\n            if(znak==')'&&y<n){\n                vector<int>m;\n                m.push_back(x);\n                m.push_back(y);\n                mine.push_back(m);\n                continue;\n            }\n            else \n            {\n                if(znak=='.') break;\n                cin.clear();\n                cin.ignore(10000,'\\n');\n                cout<<\"Greska, unesite ponovo!\";\n                znak=')';\n                continue;\n            }\n        }\n        Tabla tab;\n        try{\n            tab=KreirajIgru(n,mine);\n        }\n        catch(domain_error izuzetak){\n            cout<<izuzetak.what()<<endl;\n        }\n        vector<vector<int>>okolina;\n        cout<<\"Unesite koordinate tacke za trazenje okoline: \";\n        cin>>x>>y;\n        try{\n            okolina=PrikaziOkolinu(tab,x,y);\n            BlokirajPolje(tab,x,y);\n        }\n        catch(domain_error e){\n            cout<<e.what()<<endl;\n        }\n        return 0;\n    }\n",
        "student9352": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 1\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Ivona Ivkovic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: iivkovic2@etf.unsa.ba\n\t\n*/\n\n#include <iostream>\n#include <vector>\n#include <stdexcept>\n#include <new>\n#include <string>\n#include <cctype>\n\nusing namespace std;\n\nenum class Status {NijeKraj, KrajPoraz, KrajPobjeda};\nenum class Smjerovi{GoreLijevo, Gore, GoreDesno, Desno, \n\tDoljeDesno, Dolje, DoljeLijevo, Lijevo };\nenum class KodoviGresaka{ PogresnaKomanda, NedostajeParametar, SuvisanParametar, NeispravanParametar };\nenum class Polje { Prazno, Posjeceno, Mina, BlokiranoPrazno, BlokiranoPosjeceno, BlokiranoMina };\nenum class Komande { PomjeriJednoMjesto, PomjeriDalje, Blokiraj, Deblokiraj, PrikaziOkolinu, ZavrsiIgru, KreirajIgru };\n\ntypedef vector<vector<Polje>> Tabla;\n\nTabla KreirajTablu(int n)\n{\n\treturn Tabla(n, vector<Polje>(n));\n}\n\nTabla KreirajIgru(int n, const vector<vector<int>> &mine)\n{\n\tfor(unsigned int i=0; i < mine.size(); i++)\n\t{\n\t\tif(mine[i].size()!=2)  throw domain_error(\"Ilegalan format zadavanja mina\");\n\t\telse if(mine[i][0] > n-1 || mine[i][0]<0 || mine[i][1]>n-1 || mine[i][1]<0 )\n\t\t\t\tthrow domain_error(\"Ilegalne pozicije mina\");\n\t}\n\t\n\tvector<vector<Polje>> t{KreirajTablu(n)};\n\tfor(int i=0;i<n;i++) {\n\t\tfor(int j=0;j<n;j++)\n\t\t\tt[i][j]=Polje::Prazno;\n\t}\n\t\n\tfor(unsigned int i=0;i<mine.size();i++)\n\t{\n\t\tfor(int j=0;j<2;j++)\n\t\t{\n\t\t\tt[ mine[i][0] ][ mine[i][1] ] = Polje::Mina;\n\t\t}\n\t}\n\treturn t;\n}\n\n\nvector<vector<int>> PrikaziOkolinu(const Tabla &polja, int x, int y)\n{\n\tif( x==0 || y==0 || x==int(polja.size()-1) || y==int(polja.size()-1) )\n\t\tthrow domain_error(\"Polje (x,y) ne postoji\");\n\t\t\n\tvector<vector<int>> okolina;\n\tint brojac{0};\n\t\n\tint n{ int(polja.size()) };\n\t\n\tfor(int i=-1; i<2; i++)\n\t{\n\t\tvector<int> m;\n\t\tfor(int j=-1;j<2;j++)\n\t\t{\n\t\t\tbrojac=0;\n\t\t\tif(x+i>=0  &&  y+j>=0 && x+i<n  &&  y+j<n)\n\t\t\t{\n\t\t\t\t//pristupili smo elementu ploca[x-i][y-j], jos da provjerimo kakva je njegova okolina\n\t\t\t\tfor(int iPojedinacno=-1; iPojedinacno<2; iPojedinacno++)\n\t\t\t\t{\n\t\t\t\t\tfor(int jPojedinacno=-1; jPojedinacno<2; jPojedinacno++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(iPojedinacno==0 && jPojedinacno==0)  continue;\n\t\t\t\t\t\tif(x+i+iPojedinacno>=0  &&  y+j+jPojedinacno>=0 && x+i+iPojedinacno<n  \n\t\t\t\t\t\t  &&  y+j+jPojedinacno<n && polja[x+i+iPojedinacno][y+j+jPojedinacno]==Polje::Mina)\n\t\t\t\t\t\t  \t\tbrojac++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tm.push_back(brojac);\t\n\t\t}\n\t\tokolina.push_back(m);\n\t\tm.clear();\n\t}\n\t/*\n\tfor(int i=0;i<3;i++)\n\t{\n\t\tfor(int j=0;j<3;j++)    cout<<okolina[i][j]<<\" \";\n\t\tcout<<endl;\n\t}*/\n\t\n\treturn okolina;\t\n}\n\n\nvoid BlokirajPolje(Tabla &polja, int x, int y)\n{\n\tif(x<0 || y<0 || x>int(polja.size()-1) || y>int(polja.size()-1)  )\n\t\tthrow domain_error(\"Polje (x,y) ne postoji\");\n\tfor(int i=0;i<3;i++)\n\t{\n\t\tif(polja[x][y]==Polje(i))    polja[x][y]=Polje(i+3);\n\t}\n}\n\n\nvoid DeblokirajPolje(Tabla &polja, int x, int y)\n{\n\tif(x<0 || y<0 || x>int(polja.size()-1) || y>int(polja.size()-1)  )\n\t\tthrow domain_error(\"Polje (x,y) ne postoji\");\n\tfor(int i=0;i<3;i++)\n\t{\n\t\tif(polja[x][y]==Polje(i+3))    polja[x][y]=Polje(i);\n\t}\n}\n\n\nStatus Idi(Tabla &polja, int &x, int &y, Smjerovi smjer)\n{\n\tint dimTable{ int(polja.size()) };\n\tpolja[x][y] = Polje::Posjeceno;\n\t\n\tStatus statusIgre{ Status::NijeKraj };\n\t\n\tbool mrtviSmo{false}, pobijediliSmo{false};\n\t\n\tif(smjer==Smjerovi::GoreLijevo)\n\t{\n\t\tif(x-1<0 || y-1<0 || x-1>=dimTable || y-1>=dimTable )\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x-1][y-1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx-=1;\n\t\ty-=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::Gore)\n\t{\n\t\tif(x-1<0 || x-1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x-1][y]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx-=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::GoreDesno)\n\t{\n\t\tif(x-1<0 || y+1<0 || x-1>=dimTable || y+1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x-1][y+1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx-=1;\n\t\ty+=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\t\n\telse if(smjer==Smjerovi::Desno)\n\t{\n\t\tif(y+1<0 || y+1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x][y+1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\ty+=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::DoljeDesno)\n\t{\n\t\tif(x+1<0 || y+1<0 || x+1>=dimTable || y+1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x+1][y+1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx+=1;\n\t\ty+=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::Dolje)\n\t{\n\t\tif(x+1<0 || x+1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x+1][y]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx+=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::DoljeLijevo)\n\t{\n\t\tif(x+1<0 || y-1<0 || x+1>=dimTable || y-1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x+1][y-1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\tx+=1;\n\t\ty-=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\telse if(smjer==Smjerovi::Lijevo)\n\t{\n\t\tif(y-1<0 || y-1>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\t\tif(polja[x][y-1]>Polje(2))   throw logic_error(\"Blokirano polje\");\n\t\ty-=1;\n\t\tif(polja[x][y]==Polje(2))   mrtviSmo=true;\n\t}\n\t\n\tif(mrtviSmo)\n\t{\n\t\tfor(int i=0;i<dimTable;i++)\n\t\t{\n\t\t\tfor(int j=0;j<dimTable;j++)  polja[i][j]=Polje::Prazno;\n\t\t}\n\t\t//polja.clear(); //???\n\t\tstatusIgre = Status::KrajPoraz;\n\t\treturn statusIgre;\n\t}\n\t\n\tif(pobijediliSmo)\n\t{\n\t\tstatusIgre = Status::KrajPobjeda;\n\t\treturn statusIgre;\n\t}\n\t\n\treturn Status::NijeKraj;\n}\n\nStatus Idi(Tabla &polja, int &x, int &y, int novi_x, int novi_y)\n{\n\tint dimTable{ int(polja.size()) };\n\tpolja[x][y]=Polje::Posjeceno;\n\t\n\tx=novi_x;\n\ty=novi_y;\n\t\n\tStatus statusIgre{ Status::NijeKraj };\n\tbool mrtviSmo{false}, pobijediliSmo{false};\n\t\n\tif(novi_x<0  ||  novi_y<0  ||  novi_x>=dimTable || novi_y>=dimTable)\n\t\t\tthrow out_of_range(\"Izlazak van igrace table\");\n\tif(polja[novi_x][novi_y]>Polje(2))  throw logic_error(\"Blokirano polje\");\n\tif(polja[novi_x][novi_y]==Polje::Mina)  mrtviSmo=true;\n\t\n\tif(mrtviSmo)  //ako smo nagazili na minu\n\t{\n\t\tfor(int i=0;i<dimTable;i++)\n\t\t{\n\t\t\tfor(int j=0;j<dimTable;j++)    polja[i][j]=Polje::Prazno;\n\t\t}\n\t\tstatusIgre = Status::KrajPoraz;\n\t\treturn statusIgre;\n\t}\n\t\n\tfor(int i=0;i<dimTable;i++)\n\t{\n\t\tfor(int j=0;j<dimTable;j++)\n\t\t{\n\t\t\tif(polja[i][j]!=Polje::Posjeceno)\n\t\t\t{\n\t\t\t\tpobijediliSmo=false;\n\t\t\t\treturn statusIgre;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(pobijediliSmo)\n\t{\n\t\tstatusIgre = Status::KrajPobjeda;\n\t\treturn statusIgre;\n\t}\n\t\n\treturn Status::NijeKraj;\n}\n\nbool UnosKomande(Komande &komanda, Smjerovi &smjer, int &x, int &y, KodoviGresaka &kod_greske)\n{\n\tchar prviZnak, drugiZnak, prvoSlovoSmjer;\n\tcin>>ws;\n\t\n\tprviZnak = cin.get();\n\tif(prviZnak=='P')\n\t{\n\t\tdrugiZnak=cin.get();\n\t\tif(drugiZnak=='1')   //Uneseno je PomjeriJednoMjesto\n\t\t{\n\t\t\tkomanda = Komande::PomjeriJednoMjesto;\n\t\t\t//while(cin.peek()!='\\n' && isspace(cin.peek()))  cin.get();\n\t\t\twhile (cin.peek()!='\\n' && isspace(cin.peek())) cin.get();\n\t\t\tif(cin.peek()=='\\n')\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcin>>ws;\n\t\t\tif(cin.peek()=='\\n')\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(cin.peek()=='G' && cin.get()=='G')\n\t\t\t{\n\t\t\t\tprvoSlovoSmjer='G';\n\t\t\t\tif(cin.peek()=='L' && cin.get()=='L')\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tsmjer=Smjerovi::GoreLijevo;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if(cin.peek()=='D' && cin.get()=='D')\n\t\t\t\t{\n\t\t\t\t\tsmjer=Smjerovi::GoreDesno;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if(cin>>ws && cin.get()=='\\n')\n\t\t\t\t{\n\t\t\t\t\tsmjer=Smjerovi::Gore;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\t\t\tcin.clear();\n\t\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\telse if(cin.peek()=='D' && cin.get()=='D')\n\t\t\t{\n\t\t\t\tif(cin.peek()=='o' && cin.get()=='o')\n\t\t\t\t{\n\t\t\t\t\tif(cin.peek()=='D' && cin.get()=='D')\n\t\t\t\t\t{\n\t\t\t\t\t\tsmjer = Smjerovi::DoljeDesno;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse if(cin.peek()=='L' && cin.get()=='L')\n\t\t\t\t\t{\n\t\t\t\t\t\tsmjer = Smjerovi::DoljeLijevo;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse if(cin>>ws && cin.get()=='\\n')\n\t\t\t\t\t{\n\t\t\t\t\t\tsmjer=Smjerovi::Dolje;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\t\t\t\tcin.clear();\n\t\t\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(cin>>ws && cin.get()=='\\n')\n\t\t\t\t{\n\t\t\t\t\tsmjer=Smjerovi::Desno;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\t\t\tcin.clear();\n\t\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\t\treturn false;\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(cin.peek()=='L' && cin.get()=='L')\n\t\t\t{\n\t\t\t\tsmjer=Smjerovi::Lijevo;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t//ako nije ni gore ni dolje ni desno ni lijevo\n\t\t\telse\n\t\t\t{\n\t\t\t\tkod_greske = KodoviGresaka::NeispravanParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdrugiZnak=0;\n\t\t}\n\t\t\n\t\telse if(drugiZnak=='>')\n\t\t{\n\t\t\twhile (cin.peek()!='\\n' && isspace(cin.peek())) cin.get();\n\t\t\tif(cin.peek()=='\\n')\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcin>>x>>ws;\n\t\t\tif(!cin)\n\t\t\t{\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\twhile (cin.peek()!='\\n' && isspace(cin.peek())) cin.get();\n\t\t\tif(cin.peek()=='\\n')\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcin>>y>>ws;\n\t\t\tif(!cin)\n\t\t\t{\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\twhile(cin.peek()!='\\n')\n\t\t\t{\n\t\t\t\tif(!isspace(cin.get()))\n\t\t\t\t{\n\t\t\t\t\tkod_greske=KodoviGresaka::SuvisanParametar;\n\t\t\t\t\tcin.clear();\n\t\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdrugiZnak=0;\n\t\t\tkomanda = Komande::PomjeriDalje;\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\telse if(drugiZnak=='O')\n\t\t{\n\t\t\t\n\t\t\twhile(cin.peek()!='\\n')\n\t\t\t{\n\t\t\t\tif(!isspace(cin.get()))\n\t\t\t\t{\n\t\t\t\t\tkod_greske=KodoviGresaka::SuvisanParametar;\n\t\t\t\t\tcin.clear();\n\t\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdrugiZnak=0;\n\t\t\tkomanda=Komande::PrikaziOkolinu;\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t//inace je pogresna komanda\n\t\t\n\t\telse\n\t\t{\n\t\t\tkod_greske = KodoviGresaka::PogresnaKomanda;\n\t\t\tcin.clear();\n\t\t\tcin.ignore(10000,'\\n');\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\telse if(prviZnak=='B')\n\t{\n\t\tcin>>ws;\n\t\twhile(cin.peek()!='\\n')\n\t\t{\n\t\t\tif(!isspace(cin.get()))\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\t\t\t\t\t\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcin>>x>>y;\n\t\tif(!cin)\n\t\t{\n\t\t\tcin.clear();\n\t\t\tcin.ignore(10000,'\\n');\n\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\treturn false;\n\t\t}\n\t\twhile(cin.peek()!='\\n')\n\t\t{\n\t\t\tif(!isspace(cin.get()))\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::SuvisanParametar;\t\t\t\t\t\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tkomanda = Komande::Blokiraj;\n\t\treturn true;\n\t}\n\t\n\telse if(prviZnak=='D')\n\t{\n\t\tcin>>ws;\n\t\twhile(cin.peek()!='\\n')\n\t\t{\n\t\t\tif(!isspace(cin.get()))\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::NedostajeParametar;\t\t\t\t\t\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcin>>x>>y;\n\t\t\n\t\tif(!cin)\n\t\t{\n\t\t\tcin.clear();\n\t\t\tcin.ignore(10000,'\\n');\n\t\t\tkod_greske=KodoviGresaka::NeispravanParametar;\n\t\t\treturn false;\n\t\t}\n\t\tcin>>ws;\n\t\twhile (cin.peek()!='\\n') \n\t\t{\tkod_greske=KodoviGresaka::SuvisanParametar;\n\t\t\tcin.clear();\n\t\t\tcin.ignore(10000,'\\n');\n\t\t\treturn false;\n\t\t}\n\t\tkomanda = Komande::Deblokiraj;\n\t\treturn true;\n\t}\n\t\t\n\telse if(prviZnak=='K')\n\t{\n\t\twhile(cin.peek()!='\\n')\n\t\t{\n\t\t\tif(!isspace(cin.get()))\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::SuvisanParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tkomanda = Komande::KreirajIgru;\n\t\treturn true;\n\t}\n\t\n\telse if(prviZnak=='Z')\n\t{\n\t\twhile(cin.peek()!='\\n')\n\t\t{\n\t\t\tif(!isspace(cin.get()))\n\t\t\t{\n\t\t\t\tkod_greske=KodoviGresaka::SuvisanParametar;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tkomanda = Komande::ZavrsiIgru;\n\t\treturn true;\n\t}\n\t\n\t//inace je pogresna komanda\n\telse\n\t{\n\t\tkod_greske=KodoviGresaka::PogresnaKomanda;\n\t\tcin.clear();\n\t\tcin.ignore(10000,'\\n');\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nvoid IzvrsiKomandu(Komande komanda, Tabla &polja, int &x, int &y,\n\tSmjerovi p_smjer=Smjerovi::Gore, int p_x=0, int p_y=0)\n{\n\tif(komanda==Komande::PomjeriJednoMjesto)\n\t{\n\t\tStatus stat{Idi(polja,x,y,p_smjer)};\n\t\tif(stat==Status::NijeKraj)\n\t\t\tcout<<\"Tekuca pozicija igraca je (\" << x << \",\" << y <<\")\"<<endl;\n\t\telse if(stat==Status::KrajPobjeda)\n\t\t\tcout<<\"Bravo, obisli ste sva sigurna polja\"<<endl;\n\t\telse  cout<<\"Nagazili ste minu\"<<endl;\n\t}\n\t\n\telse if(komanda==Komande::PomjeriDalje)\n\t{\n\t\tStatus stat{Idi(polja,x,y,p_x,p_y)};\n\t\tif(stat==Status::NijeKraj)\n\t\t\tcout<<\"Tekuca pozicija igraca je (\" << x << \",\" << y <<\")\"<<endl;\n\t\telse if(stat==Status::KrajPobjeda)\n\t\t\tcout<<\"Bravo, obisli ste sva sigurna polja\"<<endl;\n\t\telse  cout<<\"Nagazili ste minu\"<<endl;\n\t}\n\t\n\telse if(komanda==Komande::Blokiraj)  BlokirajPolje(polja,x,y);\n\telse if(komanda==Komande::Deblokiraj) DeblokirajPolje(polja,x,y);\n\telse if(komanda==Komande::PrikaziOkolinu) \n\t{\n\t\tvector<vector<int>> prikaz{ PrikaziOkolinu(polja,x,y) };\n\t\tfor(int i=0;i<3;i++)\n\t\t{\n\t\t\tfor(int j=0;j<3;j++)    cout<<prikaz[i][j]<<\" \";\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\telse if(komanda==Komande::ZavrsiIgru)\n\t{\n\t\tfor(int i=0;i<polja.size();i++)\n\t\t{\n\t\t\tfor(int j=0;j<polja[i].size();j++)\n\t\t\t{\n\t\t\t\tpolja[i][j]=Polje::Prazno;\n\t\t\t}\n\t\t\t//cout<<endl;\n\t\t}\n\t\tcout<<\"Dovidjenja!\";\n\t\tthrow runtime_error(\"Igra zavrsena\");\n\t}\n\t\n\telse if(komanda==Komande::KreirajIgru)\n\t{\n\t\tint n;\n\t\tcout<<\"Unesite broj polja: \";\n\t\tcin>>n;\n\t\tvector<vector<int>> mine;\n\t\tint x,y;\n\t\tchar znak{')'};\n\t\tcout<<\"Unesite pozicije mina: \";\n\t\twhile(znak==')')\n\t\t{\n\t\t\tcin>>znak;\n\t\t\tif(znak!='(')\n\t\t\t{\n\t\t\t\tif(znak=='.')   break;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\tcout<<\"Greska, unesite ponovo!\"<<endl;\n\t\t\t\tznak=')';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcin>>x;\n\t\t\tcin>>znak;\n\t\t\tif(znak!=',' || x>=n)\n\t\t\t{\n\t\t\t\tif(znak=='.')   break;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\tcout<<\"Greska, unesite ponovo!\"<<endl;\n\t\t\t\tznak=')';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcin>>y;\n\t\t\tcin>>znak;\n\t\t\tif(znak==')' && y<n)\n\t\t\t{\n\t\t\t\tvector<int> m;\n\t\t\t\tm.push_back(x);\n\t\t\t\tm.push_back(y);\n\t\t\t\tmine.push_back(m);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(znak=='.')   break;\n\t\t\t\tcin.clear();\n\t\t\t\tcin.ignore(10000,'\\n');\n\t\t\t\tcout<<\"Greska, unesite ponovo!\"<<endl;\n\t\t\t\tznak=')';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpolja = KreirajIgru(n,mine);\n\t}\n}\n\n\nvoid PrijaviGresku(KodoviGresaka kod)\n{\n\tif(kod==KodoviGresaka::PogresnaKomanda)\n\t\tcout<<\"Nerazumljiva komanda!\"<<endl;\n\telse if(kod==KodoviGresaka::NedostajeParametar)\n\t\tcout<<\"Komanda trazi parametar koji nije naveden!\"<<endl;\n\telse if(kod==KodoviGresaka::NeispravanParametar)\n\t\tcout<<\"Parametar komande nije ispravan!\"<<endl;\n\telse\n\t\tcout<<\"Zadan je suvisan parametar nakon komande!\"<<endl;\n}\n\n\nint main ()\n{\n\t\n\tTabla tab;\n\tKomande komanda;\n\tSmjerovi smjer;\n\tint x{0}, y{0}, tren_x{0}, tren_y{0};\n\tKodoviGresaka kod;\n\tbool rez{true};\n\twhile(rez && cout<<\"Unesite komandu: \")\n\t{\n\t\trez=UnosKomande(komanda, smjer, x, x, kod);\n\t\tif(rez) {\n\t\t\ttry {\n\t\t\t\tIzvrsiKomandu(komanda, tab, x, y, smjer, tren_x, tren_y);\n\t\t\t}\n\t\t\tcatch(runtime_error e) {rez=false;}\n\t\t\tcatch(exception e){\n\t\t\t\tcout<<e.what()<<endl;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tPrijaviGresku(kod);\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
    },
    "91": {
        "label": "0",
        "student3077": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 1\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n\n#include <iostream>\n#include <vector>\n\nusing std::cin;\nusing std::cout;\n\n\nstd::vector<int> IzdvojiGadne(std::vector<int> v, bool a){\n\tstd::vector<int> v1;\n\tstd::vector<int> brojac(3,0);\n\tfor(int i=0; i<v.size(); i++){\n\t\tint kopija(v.at(i));\n\t\tbrojac={0,0,0};\n\t\tif(kopija==0)\n\t\t\tbrojac[0]++;\n\t\telse{\n\t\t\twhile(kopija!=0){\n\t\t\tint cifra=abs(kopija%3);\n\t\t\tkopija/=3;\n\t\t\tbrojac[cifra]++;\n\t\t\t}\n\t\t}\n\t\tif(a){\n\t\t\tif(brojac[0]%2==0 && brojac[1]%2==0 && brojac[2]%2==0)\n\t\t\t\tv1.push_back(v.at(i));\n\t\t}\n\t\telse{\n\t\t\tif((brojac[0]%2!=0 || brojac[0]==0) && (brojac[1]%2!=0 || brojac[1]==0) && (brojac[2]%2!=0 || brojac[2]==0))\n\t\t\t\tv1.push_back(v.at(i));\n\t\t}\n\t}\n\tfor(int i=0; i<v1.size(); i++){\n\t\tfor(int j=i+1; j<v1.size(); j++){\n\t\t\tif(i<v1.size()-1 && v1[i]==v1[j]) {\n\t\t\t\tv1.erase(v1.begin()+j);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\treturn v1;\n}\n\n\nint main ()\n{\n\tcout<<\"Unesite brojeve (0 za prekid unosa): \";\n\tstd::vector<int> v;\n\tfor(;;){\n\t\tint i(0);\n\t\tint a;\n\t\tcin>>a;\n\t\tif(a==0) break;\n\t\tv.push_back(a);\n\t\ti++;\n\t}\n\t\n\tstd::vector<int> v2=IzdvojiGadne(v,true);\n\tcout<<\"Opaki: \";\n\tfor(int i=0; i<v2.size(); i++){\n\t\tcout<<v2[i]<<\" \";\n\t}\n\tcout<<std::endl;\n\tv2=IzdvojiGadne(v,false);\n\tcout<<\"Odvratni: \";\n\tfor(int i=0; i<v2.size(); i++){\n\t\tcout<<v2[i]<<\" \";\n\t}\n\treturn 0;\n}",
        "student8774": "#include <iostream>\n#include <vector>\ntypedef std::vector<int> vektor;\n\nvektor IzdvojiGadne(vektor v,bool koji){\n\tvektor vopak,vodvratan;\n\tfor(int i=0;i<v.size()-1;i++){\n\t\tfor(int j=i+1;j<v.size();j++)\n\t\tif(v[i]==v[j]){\n\t\t\tv.erase(v.begin()+j);\n\t\t\tj--;\n\t\t}\n\t}\n\tfor(int i=0;i<v.size();i++){\n\t\tint a=v[i];\n\t\tif(a<0) a*=(-1);\n\t\tvektor br(3);\n\t\twhile(a!=0){\n\t\t\tif(a%3==0) br[0]++;\n\t\t\telse if(a%3==1) br[1]++;\n\t\t\telse if(a%3==2) br[2]++;\n\t\t\ta/=3;\n\t\t}\n\t\tfor(int i=0;i<br.size();i++){\n\t\t\tif(br[i]==0){br.erase(br.begin()+i);\n\t\t\ti--;}\n\t\t}\n\t\tint sumaparna(0),sumaneparna(0); \n\t\tfor (int i=0;i<br.size();i++){\n\t\t\tif(br[i]%2==0) sumaparna++;\n\t\t\telse if(br[i]%2!=0) sumaneparna++;\n\t\t}\n\t\tif(sumaparna==br.size()) vopak.push_back(v[i]);\n\t\telse if(sumaneparna==br.size()) vodvratan.push_back(v[i]);\n\t}\n\tif (koji==true) return vopak;\n\telse return vodvratan;\n}\n\nint main ()\n{\n\tvektor v,v1,v2;\n\tint n;\n\tstd::cout<<\"Unesite brojeve (0 za prekid unosa): \";\n\tdo{\n\t\tstd::cin>>n;\n\t\tif(n!=0) v.push_back(n);\n\t} while(n!=0);\n\t\n\tv1=IzdvojiGadne(v,true);\n\tv2=IzdvojiGadne(v,false);\n\tif(v1.size()!=0){\n\t\tstd::cout<<\"Opaki: \";\n\t\tfor(int i=0;i<v1.size();i++){\n\t\t\tstd::cout<<v1[i]<<\" \";\n\t\t}\n\t\tstd::cout<<std::endl;\n\t}\n\tif(v2.size()!=0){\n\t\tstd::cout<<\"Odvratni: \";\n\t\tfor(int i=0;i<v2.size();i++){\n\t\t\tstd::cout<<v2[i]<<\" \";\n\t\t}\n\t\tstd::cout<<std::endl;\n\t}\n\t\n\t\n\t\n\treturn 0;\n}"
    },
    "92": {
        "label": "1",
        "student2953": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 2\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n#include <utility>\n#include <iterator>\n#include <stdexcept>\nusing namespace std;\nbool JeliBila(map<string, set<int>> mapa, string x)\n{\n    auto it(mapa.find(x));\n    if(it == mapa.end()) return false;\n    return true;\n}\nvoid IspisiSkup(set<int> skup)\n{\n    for(auto it = skup.begin(); it != skup.end(); it++)\n    {\n        auto test(it);\n        test++;\n        if(test==skup.end())cout<<*it;\n        else cout<<*it<<\",\";\n    }\n}\nmap<string, set<int>> KreirajIndeksPojmova(string s)\n{\n    map<string, set<int>> mapa;\n    int brojac(0), pozicija(0);\n    string temp;\n    for (int i=0; i < s.length(); i++)\n    {\n        if (s[i] !=  ' ')\n        {\n            brojac++;\n            int j = i;\n            while (s[j] != ' ' && j < s.length()) j++;\n            if(brojac>0)\n            {\n                pozicija+=i;\n                temp=s.substr (i, j-i);\n                if(!JeliBila(mapa, temp))\n                {\n                    set<int> skup;\n                    skup.insert(pozicija);\n                    mapa.insert(make_pair(temp, skup));\n                }\n                else\n                {\n                    auto it(mapa.find(temp));\n                    it->second.insert(pozicija);\n\n                }\n                i=j;\n                pozicija=0;\n            }\n        }\n    }\n    return mapa;\n}\n\n\nset<int>PretraziIndeksPojmova(string x, map<string, set<int>> mapa)\n{\n    auto it(mapa.find(x));\n    if(it == mapa.end()) throw logic_error(\"Unesena rijec nije nadjena!\");\n    return it->second;\n}\n\n\nvoid IspisiIndeksPojmova(map<string, set<int>> mapa)\n{\n    for(auto it = mapa.begin(); it != mapa.end(); it++)\n    {\n        cout<<it->first <<\": \";\n        IspisiSkup(it->second);\n        cout<<endl;\n    }\n}\n\nint main()\n{\n    map<string, set<int>> mapa;\n    string text;\n    cout<<\"Unesite tekst: \";\n    getline(cin, text);\n    mapa=KreirajIndeksPojmova(text);\n    IspisiIndeksPojmova(mapa);\n    for(;;)\n    {\n        string rijec;\n        cout<<\"Unesite rijec: \";\n        getline(cin, rijec);\n        if(rijec==\".\") break;\n        else\n        {\n            try\n            {\n                for(auto x: PretraziIndeksPojmova(rijec, mapa)) cout<<x<<\" \";\n                cout<<endl;\n            }\n            catch(logic_error x)\n            {\n                cout<<x.what()<<endl;\n            }\n        }\n    }\n    return 0;\n}\n",
        "student6787": "\n"
    },
    "93": {
        "label": "0",
        "student4290": "#include <stdio.h>\n\nint main() {\n\tchar sistem[20][20];\n\tint n,i,j;\n\tint x[10];\n\tint y[10];\n\tfor(i=0;i<20;i++){\n\t\tfor(j=0;j<20;j++){\n\t\t\tsistem[i][j]=' ';\n\t\t}\n\t}\n\tprintf(\"Unesite broj tacaka: \");\n\tscanf(\"%d\",&n);\n\twhile((n<0)||(n>10)){\n\t\tprintf(\"Pogresan unos\\n\");\n\t\tprintf(\"Unesite broj tacaka: \");\n\t\tscanf(\"%d\",&n);\n\t}\n\tfor(i=0;i<n;i++){\n\t\tprintf(\"Unesite %d. tacku: \",i+1);\n\t\tscanf(\"%d %d\",&x[i],&y[i]);\n\t\twhile((x[i]<0)||(y[i]<0)||(x[i]>19)||(y[i]>19)){\n\t\t\tprintf(\"Pogresan unos\\n\");\n\t\t\tprintf(\"Unesite %d. tacku: \",i+1);\n\t\t\tscanf(\"%d %d\",&x[i],&y[i]);\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\t\tsistem[y[i]][x[i]]='*';\n\t}\n\t\n\tfor(i=0;i<20;i++){\n\t\tfor(j=0;j<20;j++){\n\t\t\tprintf(\"%c\",sistem[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n",
        "student6534": "#include <stdio.h>\n\nint main() {\n\tint brojt,k,z,x,y;\n\tint mat[20][20];\n\tfor (k=0;k<20;k++)\n\tfor (z=0;z<20;z++)\n\tmat[k][z]=0;\nprintf(\"Unesite broj tacaka: \");\nscanf (\"%d\",&brojt);\nwhile (brojt<=0 || brojt>10) \n\t{\n\t\tprintf (\"Pogresan unos\\n\");\n\t\tprintf(\"Unesite broj tacaka: \");\n\t\tscanf (\"%d\",&brojt); \n\t\t}\n\tfor (k=0;k<brojt;k++)\n{\n\t\t\tprintf (\"Unesite %d. tacku: \",k+1);\n\t\t\tscanf (\"%d%d\",&x, &y);\n\t\t\tif (x>=0 && x<20 && y>=0 && y<20)mat[y][x]=1;\n\t\t\telse {\n\t\t\tprintf (\"Pogresan unos\\n\");\n\t\t\tk--;\n\t\t\t}\n\t\t}\n\t\tfor (k=0;k<20;k++)\n\t\t{\n\t\tfor (z=0;z<20;z++) \n\t\t\tif (mat[k][z]==1) \n\t\t\tprintf (\"*\");\n\t\t\telse \n\t\t\tprintf (\" \");\n\t\t\tprintf (\"\\n\");\n\t\n\t\t}\n\t\t\treturn 0;\n}"
    },
    "94": {
        "label": "1",
        "student6877": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n\tfloat pi1, pi2, pri, zad, zi, ubb;\n\t\n\tint oc1, oc2, oc3;\n    printf(\"Unesite bodove za Tarika: \\n\");\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\", &pi1);\n    if (pi1>=0 && pi1<=20)\n        {    \n    printf(\"II parcijalni ispit: \");\n\tscanf(\"%f\", &pi2);\n\tif (pi2>=0 && pi2<=20)\n\t    {\n\tprintf(\"Prisustvo: \");\n\tscanf(\"%f\", &pri);\n\tif (pri>=0 && pri<=10) \n\t    {\n\tprintf(\"Zadace: \");\n\tscanf(\"%f\", &zad);\n\tif (zad>=0 && zad<=10)\n\t    {\n\tprintf(\"Zavrsni ispit: \");\n\tscanf(\"%f\", &zi);\n\tif (zi>=0 && zi<=40)\n        {\n    ubb=pi1+pi2+pri+zad+zi;\n    ubb=(int) (ubb*1000+0.5)/1000;\n                             \n    if (ubb<55)\n\t      {\n\t      \toc1=5;\n\t      \n\t      }\n\telse if (ubb>=55 && ubb<65)\n\t      {\n\t      \toc1=6;\n\t      \t\n\t      }\n\telse if (ubb>=65 && ubb<75) \n\t      {\n            oc1=7;\n            \t\t\n\t      }\n\telse if (ubb>=75 && ubb<85)\n\t      {\n\t      \toc1=8;\n\t      \t\n\t      }\n\telse if (ubb>=85 && ubb<92)\n\t      {\n\t      \toc1=9;\n\t      \t\n\t      }\n\telse if (ubb>=92 && ubb<=100)\n\t      {\n\t      \toc1=10;\n\t      }\n        }\n           else { printf(\"Neispravan broj bodova\"); return 0;}\n\t    }\n\t       else { printf(\"Neispravan broj bodova\"); return 0;}\n\t    }\n\t       else { printf(\"Neispravan broj bodova\"); return 0;}\n\t    }\n\t       else { printf(\"Neispravan broj bodova\"); return 0;} \n        }\n        else { printf(\"Neispravan broj bodova\"); return 0;}\n\n\n\n printf(\"Unesite bodove za Bojana: \\n\");\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\", &pi1);\n    if (pi1>=0 && pi1<=20)\n        {    \n    printf(\"II parcijalni ispit: \");\n\tscanf(\"%f\", &pi2);\n\tif (pi2>=0 && pi2<=20)\n\t    {\n\tprintf(\"Prisustvo: \");\n\tscanf(\"%f\", &pri);\n\tif (pri>=0 && pri<=10) \n\t    {\n\tprintf(\"Zadace: \");\n\tscanf(\"%f\", &zad);\n\tif (zad>=0 && zad<=10)\n\t    {\n\tprintf(\"Zavrsni ispit: \");\n\tscanf(\"%f\", &zi);\n\tif (zi>=0 && zi<=40)\n        {\n    ubb=pi1+pi2+pri+zad+zi;\n    ubb=(int) (ubb*1000+0.5)/1000;\n    if (ubb<55)\n\t      {\n\t      \toc2=5;\n\t      \n\t      }\n\telse if (ubb>=55 && ubb<65)\n\t      {\n\t      \toc2=6;\n\t      \t\n\t      }\n\telse if (ubb>=65 && ubb<75) \n\t      {\n            oc2=7;\n            \t\t\n\t      }\n\telse if (ubb>=75 && ubb<85)\n\t      {\n\t      \toc2=8;\n\t      \t\n\t      }\n\telse if (ubb>=85 && ubb<92)\n\t      {\n\t      \toc2=9;\n\t      \t\n\t      }\n\telse if (ubb>=92 && ubb<=100)\n\t      {\n\t      \toc2=10;\n\t      }\n        }\n           else { printf(\"Neispravan broj bodova\"); return 0;}\n\t    }\n\t       else { printf(\"Neispravan broj bodova\"); return 0;}\n\t    }\n\t       else { printf(\"Neispravan broj bodova\"); return 0;}\n\t    }\n\t       else { printf(\"Neispravan broj bodova\"); return 0;} \n        }\n        else { printf(\"Neispravan broj bodova\"); return 0;}\n\n\n\n\n printf(\"Unesite bodove za Mirzu: \\n\");\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\", &pi1);\n    if (pi1>=0 && pi1<=20)\n        {    \n    printf(\"II parcijalni ispit: \");\n\tscanf(\"%f\", &pi2);\n\tif (pi2>=0 && pi2<=20)\n\t    {\n\tprintf(\"Prisustvo: \");\n\tscanf(\"%f\", &pri);\n\tif (pri>=0 && pri<=10) \n\t    {\n\tprintf(\"Zadace: \");\n\tscanf(\"%f\", &zad);\n\tif (zad>=0 && zad<=10)\n\t    {\n\tprintf(\"Zavrsni ispit: \");\n\tscanf(\"%f\", &zi);\n\tif (zi>=0 && zi<=40)\n        {\n    ubb=pi1+pi2+pri+zad+zi;\n    ubb=(int) (ubb*1000+0.5)/1000;\n    if (ubb<55)\n\t      {\n\t      \toc3=5;\n\t      \n\t      }\n\telse if (ubb>=55 && ubb<65)\n\t      {\n\t      \toc3=6;\n\t      \t\n\t      }\n\telse if (ubb>=65 && ubb<75) \n\t      {\n            oc3=7;\n            \t\t\n\t      }\n\telse if (ubb>=75 && ubb<85)\n\t      {\n\t      \toc3=8;\n\t      \t\n\t      }\n\telse if (ubb>=85 && ubb<92)\n\t      {\n\t      \toc3=9;\n\t      \t\n\t      }\n\telse if (ubb>=92 && ubb<=100)\n\t      {\n\t      \toc3=10;\n\t      }\n        }\n           else { printf(\"Neispravan broj bodova\"); return 0;}\n\t    }\n\t       else { printf(\"Neispravan broj bodova\"); return 0;}\n\t    }\n\t       else { printf(\"Neispravan broj bodova\"); return 0;}\n\t    }\n\t       else { printf(\"Neispravan broj bodova\"); return 0;} \n        }\n        else { printf(\"Neispravan broj bodova\"); return 0;}\n\n     if (oc1>5 && oc2>5 && oc3>5)\n       { \n     printf(\"Sva tri studenta su polozila.\\n\"); \n     if (oc1!=oc2 && oc2!=oc3 && oc1!=oc3) \n                        { \n                        \tprintf(\"Svaki student ima razlicitu ocjenu.\");\n                        \t\n                        }\n     if (oc1==oc2 && oc2==oc3) \n                  { \n                  \tprintf(\"Sva tri studenta imaju istu ocjenu.\\n\"); \n                  \t\n                  }\n     if (oc1==oc2) { printf(\"Dva od tri studenta imaju istu ocjenu.\"); }\n     if (oc2==oc3) { printf(\"Dva od tri studenta imaju istu ocjenu.\"); }\n     if (oc1==oc3) { printf(\"Dva od tri studenta imaju istu ocjenu.\"); }\n            \n       \t\n       }\n       \n     if (oc1>5 && oc2>5 && oc3<6) { printf(\"Dva studenta su polozila.\");}\n     if (oc1>5 && oc2>6 && oc3<5) { printf(\"Dva studenta su polozila.\");}\n     if (oc1>6 && oc2>5 && oc3<5) { printf(\"Dva studenta su polozila.\");}\n     if (oc1<6 && oc2<6 && oc3>5) { printf(\"Jedan student je polozio.\");}\n     if (oc1<6 && oc2>5 && oc3<6) { printf(\"Jedan student je polozio.\");}\n     if (oc1>5 && oc2<6 && oc3<6) { printf(\"Jedan student je polozio.\");}\n     \n     if (oc1<6 && oc2<6 && oc3<6) { printf(\"Nijedan student nije polozio.\");}\n     \n     \nreturn 0;\n}",
        "student9805": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\tfloat par1, par2, pris, zad, zav, uk;\n\tint to, bo, mo;\n\tprintf (\"Unesite bodove za Tarika:\\n\");\n\tprintf (\"I parcijalni ispit: \");\n\tscanf (\"%f\", &par1);\n\tif (par1>=0 && par1<=20){\n\t\tprintf (\"II parcijalni ispit: \");\n\t\tscanf (\"%f\", &par2);\n\t\tif (par2>=0 && par2<=20){\n\t\t\tprintf (\"Prisustvo: \");\n\t\t\tscanf (\"%f\", &pris);\n\t\t\tif (pris>=0 && pris <=10){\n\t\t\t\tprintf(\"Zadace: \");\n\t\t\t\tscanf (\"%f\", &zad);\n\t\t\t\tif (zad>=0 && zad<=10){\n\t\t\t\t\tprintf (\"Zavrsni ispit: \");\n\t\t\t\t\tscanf (\"%f\", &zav);\n\t\t\t\t\tif (zav>=0 && zav<=40){\n\t\t\t\t\t\tuk=par1+par2+pris+zad+zav;\n\t\t\t\t\t\tuk=(int)(uk*1000+0.5)/1000;\n\t\t\t\t\t\n\t\t\t\t\tif(uk<55){\n\t\t\t\t\t\tto=5;\n\t\t\t\t\t} else if (uk>=55 && uk<65){\n\t\t\t\t\t\tto=6;\n\t\t\t\t\t} else if (uk>=65 && uk<75){\n\t\t\t\t\t\tto=7;\n\t\t\t\t\t} else if (uk>=75 && uk<85){\n\t\t\t\t\t\tto=8;\n\t\t\t\t\t} else if (uk>=85 && uk<92){\n\t\t\t\t\t\tto=9;\n\t\t\t\t\t} else if (uk>=92 && uk<=100){\n\t\t\t\t\t\tto=10;\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\t\t\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\t\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\n\t\n\tprintf (\"Unesite bodove za Bojana:\\n\");\n\tprintf (\"I parcijalni ispit: \");\n\tscanf (\"%f\", &par1);\n\tif (par1>=0 && par1<=20){\n\t\tprintf (\"II parcijalni ispit: \");\n\t\tscanf (\"%f\", &par2);\n\t\tif (par2>=0 && par2<=20){\n\t\t\tprintf (\"Prisustvo: \");\n\t\t\tscanf (\"%f\", &pris);\n\t\t\tif (pris>=0 && pris <=10){\n\t\t\t\tprintf(\"Zadace: \");\n\t\t\t\tscanf (\"%f\", &zad);\n\t\t\t\tif (zad>=0 && zad<=10){\n\t\t\t\t\tprintf (\"Zavrsni ispit: \");\n\t\t\t\t\tscanf (\"%f\", &zav);\n\t\t\t\t\tif (zav>=0 && zav<=40){\n\t\t\t\t\t\tuk=par1+par2+pris+zad+zav;\n\t\t\t\t\t\tuk=(int)(uk*1000+0.5)/1000;\n\t\t\t\t\t\n\t\t\t\t\tif(uk<55){\n\t\t\t\t\t\tbo=5;\n\t\t\t\t\t} else if (uk>=55 && uk<65){\n\t\t\t\t\t\tbo=6;\n\t\t\t\t\t} else if (uk>=65 && uk<75){\n\t\t\t\t\t\tbo=7;\n\t\t\t\t\t} else if (uk>=75 && uk<85){\n\t\t\t\t\t\tbo=8;\n\t\t\t\t\t} else if (uk>=85 && uk<92){\n\t\t\t\t\t\tbo=9;\n\t\t\t\t\t} else if (uk>=92 && uk<=100){\n\t\t\t\t\t\tbo=10;\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\t\t\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\t\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\n\t\n\tprintf (\"Unesite bodove za Mirzu:\\n\");\n\tprintf (\"I parcijalni ispit: \");\n\tscanf (\"%f\", &par1);\n\tif (par1>=0 && par1<=20){\n\t\tprintf (\"II parcijalni ispit: \");\n\t\tscanf (\"%f\", &par2);\n\t\tif (par2>=0 && par2<=20){\n\t\t\tprintf (\"Prisustvo: \");\n\t\t\tscanf (\"%f\", &pris);\n\t\t\tif (pris>=0 && pris <=10){\n\t\t\t\tprintf(\"Zadace: \");\n\t\t\t\tscanf (\"%f\", &zad);\n\t\t\t\tif (zad>=0 && zad<=10){\n\t\t\t\t\tprintf (\"Zavrsni ispit: \");\n\t\t\t\t\tscanf (\"%f\", &zav);\n\t\t\t\t\tif (zav>=0 && zav<=40){\n\t\t\t\t\t\tuk=par1+par2+pris+zad+zav;\n\t\t\t\t\t\tuk=(int)(uk*1000+0.5)/1000;\n\t\t\t\t\t\n\t\t\t\t\tif(uk<55){\n\t\t\t\t\t\tmo=5;\n\t\t\t\t\t} else if (uk>=55 && uk<65){\n\t\t\t\t\t\tmo=6;\n\t\t\t\t\t} else if (uk>=65 && uk<75){\n\t\t\t\t\t\tmo=7;\n\t\t\t\t\t} else if (uk>=75 && uk<85){\n\t\t\t\t\t\tmo=8;\n\t\t\t\t\t} else if (uk>=85 && uk<92){\n\t\t\t\t\t\tmo=9;\n\t\t\t\t\t} else if (uk>=92 && uk<=100){\n\t\t\t\t\t\tmo=10;\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\t\t\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\t\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\t} else {printf (\"Neispravan broj bodova\"); return 0;}\n\t\n\t\n\tif (mo>5 && bo>5 && to>5){\n\t\tprintf (\"Sva tri studenta su polozila.\\n\");\n\t\tif (mo!=bo && bo!=to && to!=mo){\n\t\t\tprintf (\"Svaki student ima razlicitu ocjenu.\");\n\t\t\t\n\t\t} if (mo==bo&&bo==to){\n\t\t\tprintf(\"Sva tri studenta imaju istu ocjenu.\");\n\t\t\t\n\t\t} if(mo==bo) { \n\t\t\tprintf (\"Dva od tri studenta imaju istu ocjenu.\");\n\t\t\t\n\t\t} if(bo==to) { \n\t\t\tprintf (\"Dva od tri studenta imaju istu ocjenu.\");\n\t\t\t\n\t\t} if(mo==to) { \n\t\t\tprintf (\"Dva od tri studenta imaju istu ocjenu.\");\n\t\t\t \n\t\t}\n\t}\n\tif (mo>5 && bo>5 && to<6){\n\t\tprintf(\"Dva studenta su polozila.\");\n\t}\n\tif (mo>5 && to>5 && bo<6){\n\t\tprintf(\"Dva studenta su polozila.\");\n\t}\n\tif (to>5 && bo>5 && mo<6){\n\t\tprintf(\"Dva studenta su polozila.\");\n\t}\n\tif (to>5 && bo<6 && mo<6){\n\t\tprintf(\"Jedan student je polozio.\");\n\t}\t\n\tif (bo>5 && to<6 && mo<6){\n\t\tprintf(\"Jedan student je polozio.\");\n\t}\n\tif (mo>5 && to<6 && bo<6){\n\t\tprintf(\"Jedan student je polozio.\");\n\t}\n\tif (mo<6 && to<6 && bo<6){\n\t\tprintf (\"Nijedan student nije polozio.\");\n\t}\n\treturn 0;\n}\n\n"
    },
    "95": {
        "label": "0",
        "student1616": "#include <stdio.h>\nvoid sortiraj(int *niz,int *sort,int *index)\n{\n\tint i,j;\n\tint temp;\n\n\t\tfor(i=0;i<127;i++)\n\t\t{\n\t\t\tfor(j=i;j<127;j\n\t\t\t{\n\t\t\t\tif(niz[i]<niz[j])\n\t\t\t\t{\n\t\t\t\t\ttemp=niz[i];\n\t\t\t\t\tniz[i]=niz[j];\n\t\t\t\t\tniz[j]=temp;\n\n\t\t\t\t\ttemp=index[i];\n\t\t\t\t\tindex[i]=index[j];\n\t\t\t\t\tindex[j]=temp;\n\t\t\t\t}\n\t\t\t\telse if(niz[i]==niz[j] && index[i]>index[j])\n\t\t\t\t{\n\t\t\t\t\ttemp=index[i];\n\t\t\t\t\tindex[i]=index[j];\n\t\t\t\t\tindex[j]=temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n}\nvoid Pretvori(char *s,char *sifrarnik)\n{\n\tchar *p=s,*kljuc=sifrarnik;\n\tint br;\n\t\twhile(*p!='\\0')\n\t\t{\tbr=0;\n\t\t\tkljuc=sifrarnik;\n\n\t\t\twhile(*kljuc!='\\0')\n\t\t\t{\n\t\t\t\tif(*p==*kljuc++){*p=126-br;break;}\n\t\t\t\tbr++;\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\n}\nchar *kodiraj(char *s,char *sifrarnik)\n{\n\n\tchar *p=s,*pok=sifrarnik;\n\tint i;\n\tint niz[127];\n\tint sort[127];\n\tint index[127];\n\n\t\tfor(i=0;i<127;i++)\n\t\t{\n\t\t\tif(i<32){ niz[i]=-1; index[i]=-1;}\n\t\t\telse{niz[i]=0;index[i]=i;}\n\t\t}\n\t\twhile(*p!='\\0')\n\t\t{\n\t\t\tniz[*p+0]++;\n\t\t\tp++;\n        }\n\n\t\tfor(i=0;i<127;i++)\n\t\t\tsort[i]=niz[i];\n\n\t\tsortiraj(niz,sort,index);\n\n\t\tfor(i=0;i<127;i++)\n\t\t{\n\t\t\tif(index[i]!=-1)\n\t\t\t{\n\t\t\t\t*pok=index[i];\n\t\t\t\tpok++;\n\t\t\t}\n\t\t}\n\t\tPretvori(s,sifrarnik);\n\n\treturn s;\n}\nchar* dekodiraj(char *s,char *sifrarnik)\n{\n\n\tchar *p=s;\n\n\t\twhile(*p!='\\0')\n\t\t{\n\t\t\t*p=sifrarnik[126-*p];\n\t\t\tp++;\n\t\t}\n\treturn s;\n\n}\nint main() {\n\n\tchar tekst[] = \"U ovom testu cemo testirati samo kodiranje\";\n    char sifrarnik[100] = \"\";\n    kodiraj(tekst, sifrarnik);\n    printf(\"%s\\n\", tekst);\n    dekodiraj(tekst, sifrarnik);\n    printf (\"%s\\n\", tekst);\n    printf(\"%s\\n\", sifrarnik);\n\n\treturn 0;\n}\n",
        "student3776": "#include <stdio.h>\n\nchar *kodiraj (char *s1, char *s2){\n\tchar *pocetak=s1,*p=s1,*q=s2;\n\tint slova[127]={0},i,max=0,l;\n\twhile (*p!='\\0')\n\t\tslova[(int)*p++]++;\n\tdo {\n\t\tmax=0;\n\t\tfor (i=32; i<=126; i++)\n\t\t\tif(slova[i]>max){\n\t\t\t\tl=i;\n\t\t\t\tmax=slova[i];\n\t\t\t}\n\t\tif (max==0) break;\n\t\t*s2++=(char) l;\n\t\tslova[l]=-1;\n\t} while (max!=0);\n\tfor(i=32; i<=126; i++)\n\t\tif(slova[i]!=-1)\n\t\t\t*s2++=(char) i;\n\t*s2='\\0';\n\twhile(*s1!='\\0'){\n\t\tchar *pom=q;\n\t\twhile(*s1!=*pom)\n\t\t\tpom++;\n\t\t*s1=(char)126-(pom-q);\n\t\ts1++;\n\t}\n\treturn pocetak;\n}\n\nchar *dekodiraj(char *s1, char *s2){\n\tchar *pocetak=s1,*p=s1,sifra[96],*q;\n\tint slova[127]={0},i,max,l;\n\tif(*s2=='\\0' || *s1=='\\0') return pocetak;\n\twhile(*p!='\\0')\n\t\tslova[(int)*p++]++;\n\tq=sifra;\n\tdo {\n\t\tmax=0;\n\t\tfor (i=126; i>=0; i--)\n\t\t\tif(slova[i]>max){\n\t\t\t\tmax=slova[i];\n\t\t\t\tl=i;\n\t\t\t}\n\t\tslova[l]=-1;\n\t\tif(max==0) break;\n\t\t*q++=(char) l;\n\t} while (max!=0);\n\tfor(i=32; i<127;i++)\n\t\tif(slova[i]!=-1)\n\t\t\t*q++=(char) i;\n\t*q='\\0';\n\tq=sifra;\n\ts1=pocetak;\n\twhile(*s1!='\\0'){\n\t\ti=0;\n\t\tchar *pom=q;\n\t\twhile(*s1!=*pom++)\n\t\t\ti++;\n\t\t*s1++=*(s2+i);\n\t}\n\treturn pocetak;\n}\nint main(){\n\tchar tekst[] = \"Ovo je neki testni tekst\";\nchar sifrarnik[100] = \"\";\nint i;\nkodiraj(tekst, sifrarnik);\nprintf(\"%s\\n\", tekst);\nfor (i=0; i<10; i++) printf(\"%c\", sifrarnik[i]);\ndekodiraj(tekst, sifrarnik);\nprintf(\"\\n%s\", tekst);\n\treturn 0;\n}\n"
    },
    "96": {
        "label": "1",
        "student5355": "#include <stdio.h>\n\nvoid najduzi_bp(char *s1, char *s2) {\n\tint niz[150] = {0};\n\tchar *pt, *kt, *pm=s1, *km = s1;\n\tchar *poc = s1; int maxduz = 0;\n\tint i = 0;\n\twhile(*s1 != '\\0') {\n\t\tpoc = s1;\n\t\tpt = poc;\n\t\twhile(*poc != '\\0' && *poc != ' ' && ((*poc >= 'A' && *poc <= 'Z') || (*poc>='a' && *poc<='z'))) {\n\t\t\tif(niz[*poc]==0) {\n\t\t\t\tif(*poc >= 'A' && *poc <= 'Z') {\n\t\t\t\t\tint vr = *poc+('a' - 'A');\n\t\t\t\t\tniz[vr]++; }\n\t\t\t\t\telse niz[*poc]++;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\tpoc++;}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tkt = poc;\n\t\t\tif(kt-pt > maxduz) { maxduz = kt-pt;\n\t\t\tpm = pt;\n\t\t\tkm = kt;\n\t\t} \n\t\tfor(i = 0; i < 150; i++) niz[i] = 0;\n\t\ts1++;\n\t\tif(*s1 == ' ') s1++;\n\t}\n\twhile(pm != km) { \n\t\t*s2 = *pm;\n\t\tpm++;\n\t\ts2++;\n}\n*s2 = '\\0';\n}\n\nint main() {\n\t\n\treturn 0;\n}\n",
        "student8576": "#include <stdio.h>\n\nvoid najduzi_bp(char *s1, char *s2){\n\tchar *pomocni_pocetak, *pomocni_kraj, *krajnji_pocetak=s1, *krajnji_kraj=s1, *poc;\n\tint ascii_tabela[63]={0};\n\tint duzina=0, i=0;\n\t\n\twhile(*s1!='\\0'){\n\t\tpoc=s1;\n\t\tpomocni_pocetak=poc;\n\t\twhile(*poc!='\\0' && *poc!=' ' && ((*poc>='A' && *poc<='Z') || (*poc>='a' && *poc<='z'))){\n\t\t\tif(ascii_tabela[*poc-65]>0) break;\n\t\t\telse{\n\t\t\t\tif(*poc>='a' && *poc<='z'){\n\t\t\t\t\tascii_tabela[*poc-65]++;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tint vrijednost = *poc + 32 - 65;\n\t\t\t\t\tascii_tabela[vrijednost]++;\n\t\t\t\t}\n\t\t\t\tpoc++;\n\t\t\t}\n\t\t}\n\t\tpomocni_kraj = poc;\n\t\tif(pomocni_kraj - pomocni_pocetak > duzina){\n\t\t\tduzina = pomocni_kraj - pomocni_pocetak;\n\t\t\tkrajnji_pocetak = pomocni_pocetak;\n\t\t\tkrajnji_kraj = pomocni_kraj;\n\t\t}\n\t\ti=0;\n\t\twhile(i<63){\n\t\t\tascii_tabela[i]=0;\n\t\t\ti++;\n\t\t}\n\t\ts1++;\n\t}\n\twhile(krajnji_pocetak!= krajnji_kraj){\n\t\t*s2 = *krajnji_pocetak;\n\t\tkrajnji_pocetak++;\n\t\ts2++;\n\t}\n\t*s2='\\0';\n}\n\nint main() {\n\treturn 0;\n}\n"
    },
    "97": {
        "label": "0",
        "student3253": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 4\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n\n#include <iostream>\n#include <vector>\n#include <string>\n#include <stdexcept>\n\nstd::string ObrniString(std::string ulaz) {\n    std::string rezultat;\n    long idx_kraj = ulaz.size() - 1;\n    for (long i = idx_kraj; i>=0; i--) {\n        rezultat.push_back(ulaz[i]);\n    }\n    return rezultat;\n}\n\nint PronadjiRijec(std::string recenica, std::string rijec, int pocetak)\n{\n    int duzina_recenice = recenica.length();\n    int duzina_rijeci = rijec.length();\n    for (int i = pocetak; i <= duzina_recenice - duzina_rijeci; i++) {\n        int j = 0;\n        while (j < duzina_rijeci && recenica[i+j] == rijec[j]) {\n            j++;\n            \n        }\n        if (j == duzina_rijeci) { \n            return i;\n    }\n}\n \n return -1;\n}\n\nstd::string ZamijeniRijecURecenici(std::string recenica, std::string rijec, int pozicija, int duzina) {\n    for (int i=0; i<duzina; i++) {\n        recenica[pozicija+i] = rijec[i];\n    }\n    return recenica;\n}\n\nbool PronadjiUVektoru(std::string rijec, std::vector<std::string> rijeci) {\n    for (int i=0; i<rijeci.size(); i++) {\n        if (PronadjiRijec(rijeci[i], rijec, 0) != -1 && rijeci[i].size() == rijec.size()) {\n            return true;\n        }\n    }\n    return false;\n}\n\nstd::string ObrniFrazu(std::string fraza) {\n    std::string obrnuto(fraza);\n    obrnuto = ObrniString(fraza);\n    return obrnuto;\n}\n\nstd::string ObrniFraze(std::string recenica, std::vector<std::string> fraze) {\n    for (int i=0; i<fraze.size(); i++) {\n        std::string obrnuta = ObrniFrazu(fraze[i]);\n        \n        size_t index = 0;\n        while (true) {\n            index = PronadjiRijec(recenica, fraze[i], index);\n            if (index == -1) break;\n            recenica = ZamijeniRijecURecenici(recenica, obrnuta, index, obrnuta.size());\n            index += obrnuta.size();\n            \n        }\n    }\n    return recenica;\n}\n\nstd::string IzmijeniUPigLatin(std::string recenica, std::vector<std::string> rijeci) {\n    std::string rezultat = \"\";\n    std::string rijec = \"\";\n    bool izmijeniSve = false;\n    if (rijeci.size() == 0) {\n        izmijeniSve = true;\n    } else {\n        for (int i=0; i<rijeci.size(); i++) {\n            rijec = rijeci[i];\n            for (int j=0; j<rijec.size(); j++) {\n                if ( !((rijec[j] >= 'a' && rijec[j] <= 'z') || (rijec[j] >= 'A' && rijec[j] <= 'Z'))) {\n                    throw std::domain_error(\"Pogresan argument!\");\n                }\n            }\n        }\n    }\n    \n    recenica = recenica + \" \";\n    size_t index = 0;\n    while ( recenica[index] != '\\0' ) {\n        if ( PronadjiRijec(recenica, \" \", index) != -1 ) {\n            int iducirazmak = PronadjiRijec(recenica, \" \", index);\n            int duzinarijeci = iducirazmak - index;\n            std::string rijec = recenica.substr(index, duzinarijeci);\n            if ( izmijeniSve == true || (izmijeniSve == false && PronadjiUVektoru(rijec, rijeci))) \n            {\n                std::string rijecbezprvog = rijec.substr(1, rijec.size()-1);\n                rijec = rijecbezprvog + rijec[0] + \"ay\";\n            }\n            \n            rezultat = rezultat + rijec + \" \";\n            index = iducirazmak + 1;\n        }\n        else {\n            index++;\n        }\n    }\n    return rezultat;\n}\n\nint main ()\n{\n    std::string recenica = \"\";\n    std::vector<std::string> rijeci;\n    std::cin.clear();\n    std::cout << \"Unesite recenicu: \";\n    std::getline(std::cin, recenica);\n    std::cout << \"Unesite fraze: \";\n    std::string rijec;\n    while ( getline(std::cin, rijec), !rijec.empty()) {\n        rijeci.push_back(rijec);\n    }\n    \n    std::cout << \"Recenica nakon PigLatin transformacije: \";\n    try {\n        std::cout << IzmijeniUPigLatin(recenica, rijeci);\n    }\n    catch(std::domain_error izuzetak) {\n        std::cout << izuzetak.what() << std::endl;\n    }\n    std::cout << std::endl;\n    std::cout << \"Recenica nakon obrtanja fraza: \";\n    std::cout << ObrniFraze(recenica, rijeci);\n    std::cout << std::endl;\n}\n\n\n\n",
        "student4415": "#include <iostream>\n#include <string>\n#include <vector>\n#include <stdexcept>\n\nint Rijec_trazi(const std::string &T, const std::string &P,int i = 0)\n{\n    int n = T.length();\n    int m = P.length();\n\n    for (; i <= n-m; ++i) {\n        int j = 0;\n        while (j < m && T[i+j] == P[j]) {\n            ++j;\n        }\n        if (j == m) {\n\n            return i;\n        }\n    }\n    return -1;\n}\n\nint Rijec_trazi2(const std::string &s, const std::string &rijec)\n{\n    int duz_str = s.length();\n    int duz_rj = rijec.length();\n\n\tint k(0);\n\tint j(0);\n    for (int i = 0; i < duz_str; i++) {\n    \tk = i;\n\t\tj = 0;\n\t\twhile (j < duz_rj && k < duz_str && rijec[j] == s[k]) {\n\t\t\tk++;\n\t\t\tj++;\n\t\t}\n\t\tif (j == duz_rj && (i == 0 || !((s[i-1] >= 'A' && s[i-1] <= 'Z')||(s[i-1] >= 'a' && s[i-1] <= 'z'))) && (k == duz_str || !((s[k] >= 'A' && s[k] <= 'Z')||(s[k] >= 'a' && s[k] <= 'z'))))\n\t\t\treturn i;\n    }\n    return -1;\n}\n\nbool ima_li_ne_slova (std::string s)\n{\n\n    for (auto i : s) {\n        if (!(( i >= 'A' && i <= 'Z') || (i >= 'a' && i <= 'z' ))) {\n            return true;\n        }\n    }\n    return false;\n}\n\nstd::string ObrniFraze (std::string s, std::vector<std::string> rijeci)\n{\n\tif (rijeci.empty()) return s;\n    int t(0);\n    int k(0);\n    for (int i = 0; i < rijeci.size(); i++) {\n\n        if (Rijec_trazi(s,rijeci[i]) != -1) {\n            k = 0;\n            while (Rijec_trazi(s,rijeci[i],k) != -1) {\n                t = Rijec_trazi(s,rijeci[i]); // provjeravamo da li se nalazi i vracamo poziciju\n\n                for (int j = rijeci[i].length()-1; j >= 0 ; j--) {\n                    s[t] = rijeci[i][j];\n                    t++;\n                }\n                k++;\n            }\n        }\n    }\n    return s;\n}\n\nstd::string IzmijeniUPigLatin (std::string s, std::vector<std::string> rijeci)\n{\n    if (rijeci.empty()) {\n        int pocetak(0);\n\n        for (int i = 0; i < s.size(); i++) {\n            pocetak = i;\n            if ((( s[i] >= 'A' && s[i] <= 'Z') || (s[i] >= 'a' && s[i] <= 'z' ))) {\n                while (i < s.size() and (( s[i] >= 'A' && s[i] <= 'Z') || (s[i] >= 'a' && s[i] <= 'z' ))) {\n                    i++;\n                }\n                s.insert(s.begin() + i, s[pocetak]);\n                s.insert(s.begin() + i+1, 'a');\n                s.insert(s.begin() + i+2, 'y');\n                s.erase(s.begin()+pocetak);\n\t\t\t\ti+=2;\n            }//anasDay ejay ijeplay anday\n               \n        }\n    }\n    else {\n        int t(0);\n\n        for (int i = 0; i < rijeci.size(); i++) {\n            if (ima_li_ne_slova(rijeci[i]) == true) { throw std::domain_error(\"Nekorektan izbor rijeci\"); }\n            if (Rijec_trazi2(s,rijeci[i]) != -1) {\n\n                while (Rijec_trazi2(s,rijeci[i]) != -1) {\n                    t = Rijec_trazi2(s,rijeci[i]); // provjeravamo da li se nalazi i vracamo poziciju\n                    s.insert(s.begin() + t + rijeci[i].size(), s[t]);\n                    s.insert(s.begin() + t + rijeci[i].size()+1, 'a');\n                    s.insert(s.begin() + t + rijeci[i].size()+2, 'y');\n                    s.erase(s.begin()+t);\n\n                }\n            }\n        }\n    }\n    return s;\n}\n\nint main()\n{\n\n\n    std::string recenica {};\n    std::vector<std::string> rijeci {};\n\n    std::cout << \"Unesite recenicu: \";\n    std::getline(std::cin, recenica);\n\n    std::cout << \"Unesite fraze: \";\n\n    std::string rijec{\"\"};\n\n    while(1){\n      std::getline(std::cin,rijec);\n      if(rijec.empty())break;\n      rijeci.push_back(rijec);\n\n\t}\n\ttry {\n    std::cout << \"Recenica nakon PigLatin transformacije: \" << IzmijeniUPigLatin(recenica,rijeci) <<std::endl;\n\t}\n\tcatch(std::domain_error izuzetak){\n\t\tstd::cout << \"Izuzetak: \" << izuzetak.what() << std::endl;\n\t}\n\tstd::cout << \"Recenica nakon obrtanja fraza: \" << ObrniFraze(recenica,rijeci);\n    return 0;\n}\n"
    },
    "98": {
        "label": "1",
        "student1410": "#include <stdio.h>\n\nint max(int matrica[100][100],int visina,int sirina)\n{\n\tint br,brojac=0,temp,i,j,ponavljanje=0,q,m;\n\tint max=0;\n\tint prvi=matrica[0][0];\n\tfor(i=0; i<visina; i++) {\n\n\t\tfor(j=0; j<sirina; j++) {\n\n\t\t\tbr=matrica[i][j];\n\n\t\t\tfor(q=0; q<visina; q++)\n\t\t\t\tfor(m=0; m<sirina; m++) {\n\t\t\t\t\tponavljanje=matrica[q][m];\n\t\t\t\t\tif(br==ponavljanje)\n\t\t\t\t\t\tbrojac++;\n\t\t\t\t}\n\n\t\t\tif(brojac>=max) {\n\t\t\t\ttemp=prvi;\n\t\t\t\tprvi=br;\n\t\t\t\tif(brojac==max && br>temp)\n\t\t\t\t\tprvi=temp;\n\n\t\t\t\tmax=brojac;\n\n\n\n\t\t\t}\n\t\t\tbrojac=0;\n\n\n\t\t}\n\t}\n\n\treturn prvi;\n\n}\nint izbaci_kolone (int matrica[100][100],int visina,int sirina,int N)\n{\n\tint v,s,i,k,j,w;\n\tv=visina;\n\ts=sirina;\n\n\tfor(i=0; i<v; i++)\n\t\tfor(j=0; j<s; j++) {\n\t\t\tif(matrica[i][j]==N) {\n\t\t\t\tfor(k=j; k<s; k++)\n\t\t\t\t\tfor(w=0; w<v; w++)\n\t\t\t\t\t\tmatrica[w][k]=matrica[w][k+1];\n\t\t\t\ts--;\n\t\t\t}\n\t\t}\n\n\n\n\n\treturn s;\n\n}\nint main()\n{\n\tint i,j,visina,sirina,mat[100][100],brojac_1=0,l,rez,z;\n\tint s;\n\n\tint r=1;\n\tprintf(\"Unesite sirinu i visinu matrice: \");\n\tscanf(\"%d %d\",&sirina,&visina);\n\tfor(i=0; i<visina; i++) {\n\t\tprintf(\"Unesite elemente %d. reda: \",i+1);\n\t\tfor(j=0; j<sirina; j++)\n\t\t\tscanf(\"%d\",&mat[i][j]);\n\t}\n\n\tdo {\n\t\tz=0;\n\t\tif(sirina>1)\n\t\t\twhile(z<visina) {\n\t\t\t\tfor(l=1; l<sirina; l++)\n\t\t\t\t\tif (mat[z][0]== mat[z][l])\n\t\t\t\t\t\tbrojac_1++;\n\n\ts=sirina;\n\t\t\t\tif(brojac_1==s) {\n\t\t\t\t\tprintf(\"\\nNakon 1. prolaza matrica je prazna!\");\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\tbrojac_1=0;\n\t\t\t\t\tz++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\trez=max(mat,visina,sirina);\n\t\tsirina=izbaci_kolone(mat,visina,sirina,rez);\n\n\t\tif(sirina !=0) {\n\n\t\t\tprintf(\"\\nNakon %d. prolaza matrica glasi:\\n\",r);\n\t\t\tfor(i=0; i<visina; i++) {\n\t\t\t\tfor(j=0; j<sirina; j++) {\n\t\t\t\t\tif(j==0 && mat[i][0]<10)\n\t\t\t\t\t\tprintf(\"    \");\n\t\t\t\t\telse if(j==0 && mat[i][0]>=10)\n\t\t\t\t\t\tprintf(\"   \");\n\t\t\t\t\telse if(j==0 && mat[i][0]>=100)\n\t\t\t\t\t\tprintf(\"  \");\n\n\n\t\t\t\t\tif(j==sirina-1)\n\t\t\t\t\t\tprintf(\"%-5d\",mat[i][j]);\n\t\t\t\t\tif(j!=sirina-1)\n\t\t\t\t\t\tprintf(\"%-5d\",mat[i][j]);\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t} else{\n\t\t\tprintf(\"\\nNakon %d. prolaza matrica je prazna!\",r);\n\t\t\treturn 0;\n\t\t}\n\t\tr+=1;\n\t\t} while(sirina!=0);\n\n\n\n\n\treturn 0;\n}\n",
        "student6795": "#include <stdio.h>\n#define mn  10000\n\nint max(int matrica[100][100], int visina, int sirina) /* Prototip funkcije */\n{\n\tint i,j,p,q,broj;\n\tint brojac=0;\n\tint max = 0; /* Najveci broj ponavljanja */\n\tint maxi = matrica[0][0]; /* Najveci broj od brojeva koji se najvise puta ponavljaju */\n\tint uporedi,temp;\n\n\tfor(i=0; i<visina; i++) { /* \"Prolazimo kroz matricu, od prvog reda do posljednjeg\" */\n\t\tfor(j=0; j<sirina; j++) {\n\t\t\tbroj = matrica[i][j]; /* Ovo je broj do kojeg smo dosli tokom prolaza kroz matricu */\n\t\t\tfor(p=0; p<visina; p++) { /* Sada nas Broj uporedjujemo tako sto opet \"prolazimo\" kroz matricu */\n\t\t\t\tfor(q=0; q<sirina; q++) {\n\t\t\t\t\tuporedi = matrica[p][q]; /* Broj koji uporedjujemo sa nasim Brojem */\n\t\t\t\t\tif(broj==uporedi) { /* Ako su jednaki nasi brojevi, dodaje se vrijendost brojacu +1 */\n\t\t\t\t\t\tbrojac++;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(brojac >= max) { /* Ako je vrijednost u brojacu veca od max(najveci broj ponavljanja broja) */\n\t\t\t\ttemp = maxi; /* Skladistimo u temp prijasnju vrijednost maxi da bi mogli kasnije uporediti */\n\t\t\t\tmaxi = broj;\n\t\t\t\tif(brojac == max && broj>temp) /* Poredimo tako sto ako su brojevi ponavljanja isti, koji je manji od ta dva broja */\n\t\t\t\t\tmaxi = temp;\n\t\t\t\tmax = brojac;\n\t\t\t}\n\t\t\tbrojac=0; /* Resetuje se brojac i ide dalje */\n\t\t}\n\t}\n\treturn maxi;\n}\n\nint izbaci_kolone (int matrica[100][100], int visina, int sirina, int N) /* Prototip funkcije */\n{\n\tint i, j, p, q;\n\tint length;\n\tlength=sirina; /* Stavljeno radi lakseg snalazenja, a i jer nam treba \"stara\" sirina kasnije */\n\tfor (i=0; i<visina; i++)\n\t\tfor (j=0; j<length; j++) {\n\n\t\t\tif (matrica[i][j]==N) {\n\t\t\t\t/* Odvojeno radi lakse preglednosti */ /* Ako je broj koji se nalazi na i-tom i j-om mjestu matrice jednak N: */\n\t\t\t\tfor (p=j; p<sirina; p++)\n\t\t\t\t\tfor (q=0; q<visina; q++)\n\t\t\t\t\t\tmatrica[q][p]=matrica[q][p+1]; /* Kolone prebacuje */\n\t\t\t\tlength--; /* Smanjuje se sirina jer se izbacuje kolona */\n\t\t\t}\n\t\t}\n\treturn length;\n}\n\nint main()\n{\n\tint  visina,sirina,i,j,matrix[100][100],c=0,d;\n\tprintf (\"Unesite sirinu i visinu matrice: \"); /* KOPIRAO UNOS MATRICE IZ ZADATKA SA TUTORIJALA */\n\tscanf(\"%i %i\", &sirina,&visina); /* Korisnik unosi sirunu i visinu matrice, a zatim i clanove matrice */\n\tfor (i=0; i<visina; i++) {\n\t\tprintf (\"Unesite elemente %i. reda: \", i+1);\n\t\tfor (j=0; j<sirina; j++)\n\t\t\tscanf (\"%i\", &matrix[i][j]);\n\t}\n\n\tint ponavljanje;\n\tponavljanje = 1;\n\tint v=visina;\n\tint dd=sirina;\n\tint brojach=1;\n\n\tdo {\n\t\tc=0;\n\t\tif(sirina>1) /* Dok je sirina veca od 1, tj. dok \"ima\" matrice prolazi kroz ovu while petlju */\n\t\t\twhile(c<v) {\n\t\t\t\tfor(d=1; d<sirina; d++) {\n\t\t\t\t\tif(matrix[c][0] == matrix[c][d]) {\n\t\t\t\t\t\tbrojach++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(brojach == dd) { /* Ispituje to da ako se u redu nalaze isti brojevi koji se najvise ponavljaju, da ispise da je matrica prazna jer ce se sve te kolone izbaciti */\n\t\t\t\t\tprintf (\"\\nNakon 1. prolaza matrica je prazna!\");\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\tbrojach=1;\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t}\n\n\t\tint N=max(matrix,visina,sirina); /* Naci broj koji se najvise ponavlja */\n\t\tsirina = izbaci_kolone(matrix, visina, sirina, N); /* Kolika ce biti sirina nakon izbacivanja kolone koja sadrzi N */\n\n\t\tif (sirina!=0) {\n\t\t\tprintf (\"\\nNakon %i. prolaza matrica glasi:\\n\", ponavljanje);\n\t\t\tfor (i=0; i<visina; i++) {\n\t\t\t\tfor (j=0; j<sirina; j++) {\n\t\t\t\t\tif(j==0 && matrix[i][0]<10) printf(\"    \"); /* Poravnanje, da bude razmaka od pocetka do brojeva */\n\t\t\t\t\telse if(j==0 && matrix[i][0]>=10) printf(\"   \");\n\t\t\t\t\telse if(j==0 && matrix[i][0]>=100) printf(\"  \");\n\t\t\t\t\tif(j==sirina-1) printf (\"%i\",matrix[i][j]);\n\t\t\t\t\tif(j!=sirina-1)printf (\"%-5i\",matrix[i][j]); /* %-5i upisuje brojeve tako da uzima sirinu od 5 polja */\n\t\t\t\t}\n\t\t\t\tprintf (\"\\n\");\n\t\t\t}\n\t\t} else { /* Ako \"nema\" matrice, tj. kad smo izbacili sve kolone, onda ispisi da je nasa matrica prazna nakon nekog broja ponavljanja */\n\t\t\tprintf (\"\\nNakon %i. prolaza matrica je prazna!\", ponavljanje);\n\t\t\treturn 0;\n\t\t}\n\t\tponavljanje = ponavljanje + 1;\n\t} while (sirina != 0);\n\n\treturn 0;\n}"
    },
    "99": {
        "label": "0",
        "student2634": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#define PI 3.1415926\n\nint main() {\n\tint i=0,stepen,minuta,sekunda,n,brojac=0;\n\tint stepeni[500],minute[500],sekunde[500];\n\tdouble niz[500],step,min,sek;\n\tprintf(\"Unesite broj uglova: \");\n\tscanf(\"%d\",&n);\n\tprintf(\"Uglovi su:\\n\");\n\twhile(i<n) {\n\t\tscanf(\"%lf\",&niz[i]);\n\t\tniz[i]*=(180/PI);\n\t\tstep=niz[i];\n\t\tstepen=(int)step;\n\t\tmin=fabs(step-stepen)*60;\n\t\tminuta=(int)min;\n\t\tsek=(min-minuta)*60;\n\t\tsekunda=(int)sek;\n\t\tif(fabs(sek-sekunda)>=0.5) sekunda++;\n\t\tif(sekunda==60) {\n\t\t\tsekunda=0;\n\t\t\tminuta++;\n\t\t}\n\t\tif(minuta==60) {\n\t\t\tminuta=0;\n\t\t\tif(stepen<=0) stepen--;\n\t\t\telse stepen++;\n\t\t}\n\t\tif(sekunda<=30) {\n\t\t\tprintf(\"%d stepeni %d minuta %d sekundi\\n\",stepen,minuta,sekunda);\n\t\t\tstepeni[brojac]=stepen;\n\t\t\tminute[brojac]=minuta;\n\t\t\tsekunde[brojac]=sekunda;\n\t\t\tbrojac++;\n\t\t}\n\t\ti++;\n\t}\n\treturn 0;\n}",
        "student8195": "#include <stdio.h>\n#include <math.h>\n#define SIZE 500\n\nint main() {\n\tint ugao,minuta,sekundi;\n\tint unos;\n\tint i,k;\n\tfloat j[SIZE];\n\tprintf(\"Unesite broj uglova: \");\n\tscanf(\"%d\", &unos);\n\tif(unos > SIZE) return 0;\n\t\n\tfor(i = 0; i<unos;i++){\n\t\tscanf(\"%f\", &j[i]);\n\t\tfloat temp = (j[i]*(180/3.1415926));\n\t\tugao = (int) temp;\n\t\tfloat minutaTmp = (temp - ugao) * 60;\n\t\tminuta =  (temp - ugao) * 60;\n\t\tsekundi = round(((minutaTmp - minuta) * 60));\n\t\t\n\t\tsekundi = fabs(sekundi);\n\t\t\n\t\tif(sekundi == 60){ \n\t\t\tsekundi = 0;\n\t\t}\n\t\t\n\t\tif(sekundi > 30) j[i] = -1;\n\t}\n\t\n\tprintf(\"Uglovi su:\\n\");\n\t\n\tfor(i = 0; i < unos; i++)\n\t{\n\t\tfloat temp = (j[i]*(180/3.1415926));\n\t\tugao = (int) temp;\n\t\tfloat minutaTmp = (temp - ugao) * 60;\n\t\tminuta =  (temp - ugao) * 60;\n\t\tsekundi = round(((minutaTmp - minuta) * 60));\n\t\tminuta = fabs(minuta);\n\t\tsekundi = fabs(sekundi);\n\t\tif(sekundi == 60){ \n\t\t\tsekundi = 0;\n\t\t\tminuta++;\n\t\t}\n\t\tif(fabs(minuta) == 60){\n\t\t\tminuta = 0;\n\t\t\tif(ugao < 0) ugao--;\n\t\t\telse ugao++;\n\t\t}\n\t\t\n\t\tif(ugao == 148 && minuta == 58 && sekundi == 8){\n\t\t\tsekundi++;\n\t\t}\n\t\t// 170 stepeni 10 minuta 7 sekundi\n\t\tif(ugao == 170 && minuta == 10 && sekundi == 7){\n\t\t\tsekundi--;\n\t\t}\n\t\t// 220 stepeni 35 minuta 19 sekundi\n\t\tif(ugao == 220 && minuta == 35 && sekundi == 19){\n\t\t\tsekundi++;\n\t\t}\n\t\t// 262 stepeni 59 minuta 16 sekundi\n\t\tif(ugao == 262 && minuta == 59 && sekundi == 16){\n\t\t\tsekundi--;\n\t\t}\n\t\t\n\t\tif(j[i] != -1)\n\t\tprintf(\"%d stepeni %d minuta %d sekundi\\n\",ugao ,minuta,sekundi);\n\t}\t\n\t\n\treturn 0;\n}\n"
    },
    "100": {
        "label": "1",
        "student3872": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include<stdexcept>\n#include<vector>\n#include<set>\n#include<list>\n#include<algorithm>\n#include<string>\n#include<iomanip>\nusing namespace std;\nint DuzinaImena(string ime)\n{\n    \n    int brojac(0);\n    for(int i=0;i<ime.length();i++)\n    {\n        if((ime[i]>='A' && ime[i]<='Z') || (ime[i]>='a' && ime[i]<='z') || (ime[i]>='0' && ime[i]<='9'))\n        brojac++;\n    }\n    return brojac;\n}\nvector<set<string>> Razvrstavanje( const vector<string> &ImenaDjece, int broj_timova)\n {\n     if(broj_timova<1 || broj_timova>ImenaDjece.size()) throw logic_error(\"Razvrstavanje nemoguce\");\n    vector<set<string>> Krajnji;\n    set<string> temp;\n     list<string> lista_djece;\n     for(int i=0;i<ImenaDjece.size();i++)\n     lista_djece.push_back(ImenaDjece[i]);\n    \n     int br_tim=ImenaDjece.size()%broj_timova;\n     int broj_clanove(0), broj_timove(0);\n     int obican_broj_timova(ImenaDjece.size()/broj_timova);\n    int broj_timova_s_vise_djece(ImenaDjece.size()/broj_timova);\n    if(br_tim!=0) broj_timova_s_vise_djece++;\n     auto it(lista_djece.begin());\n     while(!lista_djece.empty())\n     {\n         int broj(DuzinaImena(*it));\n         temp.insert(*it);\n         it=lista_djece.erase(it);\n         if(it==lista_djece.end())\n            it=lista_djece.begin();\n            broj_clanove++;\n            if(broj_clanove==broj_timova_s_vise_djece)\n            {\n                Krajnji.push_back(temp);\n                broj_clanove=0;\n                broj_timove++;\n                temp.clear();\n            }\n            else if(broj_clanove== obican_broj_timova && broj_timove>= br_tim)\n            {\n                Krajnji.push_back(temp);\n                broj_clanove=0;\n                temp.clear();\n            }\n            for(int i(1);i<broj;i++)\n            {\n                it++;\n                if(it==lista_djece.end())\n                it=lista_djece.begin();\n            }\n     }\n     return Krajnji;\n }\nint main ()\n{\n    vector<string> djeca;\n\tint broj_djece;\n\tcout<<\"Unesite broj djece: \";\n\tcin>>broj_djece;\n\t\n\tcin.ignore(1000,'\\n');\n\tcout<<\"Unesite imena djece: \"<<endl;\n\t\n\tfor(int i=0;i<broj_djece;i++)\n\t{\n\t    string ime;\n\t    getline(cin, ime);\n\t    djeca.push_back(ime);\n\t}\n\tcout<<\"Unesite broj timova: \";\n\n\tint broj_timova;\n\tcin>>broj_timova;\n\ttry\n\t{\n\tvector<set<string>> Rezultat;\n\tRezultat=Razvrstavanje(djeca, broj_timova);\n\tint temp(0);\n  for(int i=0;i<Rezultat.size();i++)\n  {\n      cout<<\"Tim \"<<temp+1<<\": \";\n      int pom(Rezultat[i].size());\n      int brojac(0);\n      for(auto p(Rezultat[i].begin());p!=Rezultat[i].end();p++)\n      {\n          cout<<*p;\n          brojac++;\n          if(brojac!=pom)\n          cout<<\", \";\n      }\n      temp++;\n      cout<<endl;\n      \n  } \n\t}\n\tcatch(logic_error izuzetak)\n\t{\n\t    cout<<\"Izuzetak: \"<<izuzetak.what();\n\t}\n  return 0;\n\t\n\n\treturn 0;\n\t\n}",
        "student6184": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include <vector>\n#include <set>\n#include <iterator>\n#include <list>\n#include <iomanip>\n#include <stdexcept>\n\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> v,int n){\n    if(n<1 || n>v.size()) throw std::logic_error(\"Razvrstavanje nemoguce\");\n    \n    std::list<std::string> lista;\n    //std::list<std::string>::iterator it(lista.begin());\n    for(int i=0;i<v.size();i++){\n        lista.push_back(v[i]);\n\n    }// prepisivanje u listu\n   // std::cout<<\"Prepisano u listu: \";\n   // for(auto x : lista) std::cout << x << \" \";\n\n    //prvo odrediti koliko timova se moze napraviti i koliko oni mogu imati clanova\n    int broj_clanova1,broj_clanova2,br_sa_vise,br_sa_manje;\n    if(v.size()%n==0){\n        broj_clanova1=broj_clanova2=v.size()/2;\n        br_sa_vise=n-1;\n        br_sa_manje=1;\n    }else{\n            broj_clanova1=(v.size()/n+1);\n            broj_clanova2=(v.size()/n);\n            br_sa_vise=(v.size()%n);\n            br_sa_manje=(n-br_sa_vise);\n    }\n\n\n\n    std::vector<std::set<std::string>> povratni;\n    std::set<std::string> timovi;\n    std::list<std::string>::iterator it(lista.begin());\n    std::list<std::string>::iterator it1(lista.begin());\n     timovi.insert(*it);\n    it=lista.erase(it);\n    for(int i=0;i<1;i++){\n           for(int j=0;j<broj_clanova1-1;j++){\n              std::string pom(*it1);\n              int brojac(0);\n              for(int k=0;k<pom.size();k++){\n                  if((pom[k]>'a' && pom[k]<'z') || (pom[k]>'A' && pom[k]<'Z') || (pom[k]>48 && pom[k]<57)) brojac++;\n              }\n           for(int k=0;k<brojac;k++){\n               if(it==lista.end()) it=lista.begin();\n               it++;\n           }\n                    it--;\n                    it1=it;\n                   timovi.insert(*it);\n                   it=lista.erase(it);\n       }\n        povratni.push_back(timovi);\n    }\n     // std::cout<<\"opeta na *it1 \"<<*it1;\n   for(int i=0;i<br_sa_vise-1;i++){\n            std::set<std::string> timovi;\n           for(int j=0;j<broj_clanova1;j++){\n              int brojac((*it1).size());\n           for(int k=0;k<brojac;k++){\n               if(it==lista.end()) it=lista.begin();\n               it++;\n           }\n                    it--;\n                    it1=it;\n                      //std::cout<<\"opeta na *it1 \"<<*it1;\n                   timovi.insert(*it);\n                   it=lista.erase(it);\n       }\n        povratni.push_back(timovi);\n    }\n\n\n\n\n        // std::list<std::string>::iterator it2(it1);\n        it--;\n      // std::cout<<\"sad na *it \"<<*it;\n    for(int i=0;i<br_sa_manje;i++){\n              std::set<std::string> timovi1;\n           for(int j=0;j<broj_clanova2;j++){\n              int brojac((*it1).size());\n          for(int k=0;k<brojac;k++){\n               if(it==lista.end()) it=lista.begin();\n               it++;\n           }\n                    it--;\n                    it1=it;\n                   timovi1.insert(*it);\n                   it=lista.erase(it);\n\n       }\n        povratni.push_back(timovi1);\n\n    }\n    return povratni;\n\n}\n\n\nint main ()\n{\n    try{\n    std::cout<<\"Unesite broj djece: \";\n    int n;\n    std::cin>>n;\n    std::cout<<\"Unesite imena djece: \";\n    std::vector<std::string> v;\n    std::string pom;\n      std::cin.clear();\n       std::cin.ignore(1000 , '\\n');\n    for(int i=0;i<n;i++){\n       std::getline(std::cin,pom);\n        v.push_back(pom);\n         std::cin.clear();\n    }\n    //std::cout<<\"Imena iz vekotra: \"<<std::endl;\n    //for(int i=0;i<v.size();i++) std::cout<<v[i]<<\" \";\n    //std::cout<<std::endl;\n    std::cout<<\"Unesite broj timova: \";\n    int m;\n    std::cin>>m;\n    auto p(Razvrstavanje(v,m));\n    \n       \n        for(int i=0;i<p.size();i++){\n             std::cout<<\"Tim \"<<i+1<<\": \";\n             std::set<std::string>::iterator it(p[i].begin());\n            for(int j=0;j<p[i].size()-1;j++) {\n                std::cout<<*it<<\", \";\n                it++;\n            }\n            std::cout<<*it;\n            std::cout<<std::endl;\n        }}\n        catch(std::logic_error izuzetak){\n             std::cout<<\"Izuzetak: \"<<izuzetak.what();\n        }\n        \n\n    \n\treturn 0;\n}"
    },
    "101": {
        "label": "0",
        "student3424": "#include <stdio.h>\n#include <math.h>\n#define epsilon 0.0001\n\nint main ()\n{\n    float a1, b1, a2, b2, x, y;\n    \n    printf(\"Unesite a1,b1,a2,b2: \");\n    scanf(\"%f,%f,%f,%f\", &a1, &b1, &a2, &b2);\n    \n    if (fabs(a1-a2)<epsilon && fabs(b1-b2)>epsilon)\n    {\n        printf(\"Paralelne su\");\n    }\n    else if (fabs(a1-a2)<epsilon && fabs(b1-b2)<epsilon)\n    {\n        printf(\"Poklapaju se\");\n    }\n    else\n    {\n        x=(b2-b1)/(a1-a2);\n        y=a1*x+b1;\n        \n        printf(\"Prave se sijeku u tacci (%.1f,%.1f)\", x, y);\n    }\n    \n    return 0;\n}",
        "student8520": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\tfloat a1,a2,b1,b2,x,y;\n\tprintf(\"Unesite a1,b1,a2,b2: \");\n\tscanf(\"%f,%f,%f,%f\", &a1, &b1, &a2, &b2);\n\tx=(b2-b1)/(a1-a2);\n\ty=a2*x+b2;\n\tif(fabs(a1-a2)<0.00001 && fabs(b1-b2)>0.0001)\n\tprintf(\"Paralelne su\\n\");\n\telse if(fabs(a1-a2)<0.0001 && fabs(b1-b2)<0.0001)\n\tprintf(\"Poklapaju se\");\n\telse printf(\"Prave se sijeku u tacci (%.1f,%.1f)\\n\", x,y);\n\t\n\treturn 0;\n}\n"
    },
    "102": {
        "label": "1",
        "student5939": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 3\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Berina Cocalic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: bcocalic1@etf.unsa.ba\n\t\n*/\n\n#include <iostream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n#include <type_traits>\n#include <deque>\n#include <iomanip>\n\n// broj ne smije pocinjati nulom\nint SumaCifara(long long int broj) {\n\t\n\tint rezultat{};\n\tbroj = fabs(broj);\n\t\n\twhile (broj != 0) {\n\t\trezultat = rezultat + (broj % 10);\n\t\tbroj = broj / 10;\n\t}\n\t\n\treturn rezultat;\n\t\n\t\n}\n\n\nint SumaDjelilaca(long long int broj) {\n\t\n\tint rezultat = 0;\n\tbroj = fabs(broj);\n\t\n\tfor (long long int i = 1; i <= broj; i++) {\n\t\t\n\t\tif (broj % i == 0) \n\t\t    rezultat = rezultat + i;\n\t\t    \n\t}\n\treturn rezultat;\n}\n\nint BrojProstihFaktora(long long int broj) {\n\tint rezultat {};\n\tbroj = fabs(broj);\n\t\n\tif (broj == 0)\n\t    rezultat = 0;\n\telse if (broj == 1) \n\t    rezultat = 1;\n\telse {\n\t\tint ostatak = broj % 2;\n\t\t\n\t\twhile (ostatak == 0) {\n\t\t\trezultat = rezultat + 1;\n\t\t\tbroj = broj / 2;\n\t\t\tostatak = broj % 2;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (long long int i=3; i <= broj; i = i + 2) {\n\t\t\tint ostatak = broj % i;\n\t\t\t\n\t\t\twhile (ostatak == 0) {\n\t\t\t\trezultat++;\n\t\t\t\tbroj = broj / i;\n\t\t\t\tostatak = broj % i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn rezultat;\n}\n\n\nint BrojSavrsenihDjelilaca(long long int broj) {\n\tint rezultat {};\n\tbroj = fabs(broj);\n\t\n\tfor (long long int i = 1; i <= broj; i++) {\n\t\tint suma = SumaDjelilaca(i) - i;\n\t\t\n\t\tif (suma == i && broj % i == 0)\n\t\t    rezultat++;\n\t\t    \n\t}\n\t\n\treturn rezultat;\n}\n\n\ntemplate <typename T1>\n\nbool Jednaki(T1 x, T1 y, double eps = 1e-10) {\n\tbool uslov = (x < 0 && y > 0) || (x > 0 && y < 0);\n\t\n\tif (uslov) return false;\n\t    return std::fabs(x-y) <= eps*(std::fabs(x)+std::fabs(y));\n}\n\ntemplate <typename T1, typename T2, typename T3, typename T4>\n\nauto UvrnutiPresjek (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2, T4 funkcija_kriterija(T3))-> typename std::vector<std::vector<typename std::remove_reference<decltype (*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak2)>::type>> matrica;\n\twhile (pocetak1 != kraj1) {\n\t\tT4 br_vrij1 = funkcija_kriterija(*pocetak1);\n\t\tT2 temp = pocetak2;\n\t\t\n\t\twhile (temp != kraj2) {\n\t\t\tT4 br_vrij2 = funkcija_kriterija(*temp);\n\t\t\t\n\t\t\tif (Jednaki(br_vrij1, br_vrij2)) {\n\t\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(3);\n\t\t\t\tpomocni[0] = *pocetak1;\n\t\t\t\tpomocni[1] = *temp;\n\t\t\t\tpomocni[2] = br_vrij1;\n\t\t\t\tmatrica.push_back(pomocni);\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\n\t\n\tstd::sort(matrica.begin(), matrica.end(), [](typename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vek1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vek2) {\n\t\tif (!Jednaki(vek1[2],vek2[2])) return vek1[2] < vek2[2];\n\t\telse if((Jednaki(vek1[2], vek2[2])) && !Jednaki(vek1[0], vek2[0])) return vek1[0] < vek2[0];\n\t\treturn vek1[1] < vek2[1];});\n\treturn matrica;\n\t\n\t}\n\t\ntemplate <typename T1, typename T2>\nauto UvrnutiPresjek (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2) -> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector <std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\twhile(pocetak1 != kraj1) {\n\t\tT2 temp=pocetak2;\n\t\twhile(temp != kraj2) {\n\t\t\tif(Jednaki(*pocetak1, *temp)) {\n\t\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(3);\n\t\t\t\tpomocni[0]=*pocetak1;\n\t\t\t\tpomocni[1]=0;\n\t\t\t\tpomocni[2]=0;\n\t\t\t\tmatrica.push_back(pomocni);\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\tstd::sort (matrica.begin(), matrica.end(),[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>vek1, typename std::vector <typename std::remove_reference <decltype(*pocetak1)>::type> vek2) {\n\t\treturn vek1[0] < vek2[0];});\n\t\treturn matrica;\n\t}\n\t\n\ttemplate <typename T1, typename T2, typename T3, typename T4>\n\tauto UvrnutaRazlika (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2, T4 funkcija_kriterija(T3)) -> typename std::vector<std::vector <typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\t\ttypename std::vector <std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tT1 temp1=pocetak1;\n\twhile (temp1 != kraj1) {\n\t\tT4 br_vrij1 = funkcija_kriterija (*temp1);\n\t\tbool status = false;\n\t\tT2 temp2 = pocetak2;\n\t\twhile (temp2 != kraj2) {\n\t\t\tT4 br_vrij2 = funkcija_kriterija (*temp2);\n\t\t\tif (Jednaki(br_vrij1, br_vrij2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp2++;\n\t\t}\n\t\tif (!status) {\n\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(2);\n\t\t\tpomocni[0]=*temp1;\n\t\t\tpomocni[1]=br_vrij1;\n\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\ttemp1++;\n\t}\n\twhile (pocetak2 != kraj2) {\n\t\tT4 br_vrij2 = funkcija_kriterija(*pocetak2);\n\t\tbool status = false;\n\t\tT1 temp = pocetak1;\n\t\twhile (temp != kraj1) {\n\t\t\tT4 br_vrij1 = funkcija_kriterija (*temp);\n\t\t\tif (Jednaki(br_vrij1, br_vrij2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tif (!status) {\n\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak2)>::type> pomocni(2);\n\t\t\tpomocni[0] = *pocetak2;\n\t\t\tpomocni[1] = br_vrij2;\n\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\tpocetak2++;\n\t}\n\t\n\tstd::sort (matrica.begin(), matrica.end(), [](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek2) {\n\t\tif (!Jednaki(vek1[0], vek2[0])) return vek1[0] > vek2[0];\n\t\treturn vek1[1] > vek2[1];});\n\t\treturn matrica;\n}\n\ntemplate <typename T1, typename T2>\n\tauto UvrnutaRazlika (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2) -> typename std::vector<std::vector <typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector <typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tT1 temp1=pocetak1;\n\twhile (temp1==kraj1) {\n\t\tbool status=false;\n\t\tT2 temp2 = pocetak2;\n\t\twhile (temp2 != kraj2) {\n\t\t\tif (Jednaki(*temp1, *temp2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp2++;\n\t\t}\n\t\tif(!status) {\n\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(2);\n\t\t\tpomocni[0] = *temp1;\n\t\t\tpomocni[1] = 0;\n\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\ttemp1++;\n\t}\n\twhile (pocetak2 != kraj2) {\n\t\tbool status = false;\n\t\tT1 temp = pocetak1;\n\t\twhile (temp != kraj1) {\n\t\t\tif(Jednaki(*temp, *pocetak2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tif (!status) {\n\t\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(2);\n\t\t\t\tpomocni[0] = *pocetak2;\n\t\t\t\tpomocni[1] = 0;\n\t\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\tpocetak2++;\n\t}\n\tstd::sort (matrica.begin(), matrica.end(), [](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek2) {\n\t\treturn vek1[0] > vek2[0];});\n\t\treturn matrica;\n\t\t\n\t}\n\t\nint main ()\n{\n\tint ukupno {};\n\tstd::cout << \"Unesite broj elemenata prvog kontejnera: \";\n\tstd::cin >> ukupno;\n\tstd::cout << \"Unesite elemente prvog kontejnera: \";\n    std::deque<int> d1(ukupno);\n    int unos {};\n    \n    for (int i = 0; i < ukupno; i++) {\n    \tstd::cin >> unos;\n    \tbool status = false;\n    \t\n    \tfor (int j = 0; j < d1.size(); j++) {\n    \t\tif (Jednaki(unos, d1[j])) {\n    \t\t\tstatus = true;\n    \t\t\tbreak;\n    \t\t}\n    \t}\n    \tif (!status) d1[i] = unos;\n    \telse i--;\n    \t}\n    \t\n    int ukupno2 {};\n    std::cout << \"Unesite broj elemenata drugog kontejnera: \";\n    std::cin >> ukupno2;\n    std::cout << \"Unesite elemente drugog kontejnera: \";\n    std::deque<int> d2 (ukupno2);\n    \n    for(int i = 0; i < ukupno2; i++) {\n    \tstd::cin >> unos;\n    \tbool status = false;\n    \t\n    \tfor(int j = 0; j < d1.size(); j++)\n    \t    if (Jednaki(unos, d2[j])) {\n    \t    \tstatus = true;\n    \t    \tbreak;\n    \t    }\n    \t    \n    \t if (!status) d2[i] = unos;\n    \t else i--;\n    }\n    \n    std::vector<std::vector<int>> uvrnutiPresjek = UvrnutiPresjek(d1.begin(), d1.end(), d2.begin(), d2.end(), SumaCifara);\n    std::vector<std::vector<int>> uvrnutaRazlika = UvrnutaRazlika(d1.begin(), d1.end(), d2.begin(), d2.end(), BrojProstihFaktora);\n    std::cout << \"Uvrnuti presjek kontejnera: \\n\";\t\n    \n    for (int i = 0; i < uvrnutiPresjek.size(); i++) {\n    \tfor (int j = 0; j < uvrnutiPresjek[i].size(); j++) {\n    \t    std::cout << std::right << std::setw(6) << uvrnutiPresjek[i][j] << \" \";\n    \t}\n    \t    std::cout << std::endl;\n    }\n    \n    std::cout << \"Uvrnuta razlika kontejnera: \\n\";\n    for (int i = 0; i < uvrnutaRazlika.size(); i++) {\n    \tfor (int j = 0; j < uvrnutaRazlika[i].size(); j++){\n    \t    std::cout << std::right << std::setw(6) << uvrnutaRazlika[i][j] << \" \";\n    \t}\n    std::cout << std::endl;\n    }\n    std::cout << \"Dovidjenja!\";\n\treturn 0;\n\n}",
        "student7001": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 3\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Berina Cocalic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: bcocalic1@etf.unsa.ba\n\t\n*/\n#include <iostream>\n#include <algorithm>\n#include <type_traits>\n#include <deque>\n#include <vector>\n#include <cmath>\n#include <iomanip>\n\nint SumaCifara(long long int broj) {\n\tbroj=fabs(broj);\n\tint suma_cifara{};\n\twhile(1) {\n\t\tif (broj==0) break;\n\t\tsuma_cifara+=(broj%10);\n\t\tbroj/=10;\n\t}\n\treturn suma_cifara;\n}\n\nint SumaDjelilaca(long long int broj) {\n\tbroj=fabs(broj);\n\tint suma_djelilaca{};\n\tfor (long long int i=1; i<=broj; i++)\n\t\tif (broj%i==0) suma_djelilaca+=i;\n\treturn suma_djelilaca;\n}\n\nint BrojProstihFaktora(long long int broj) {\n\tint broj_prostih_faktora{};\n\tbroj=fabs(broj);\n\tif (broj==0) broj_prostih_faktora=0;\n\telse if (broj==1) broj_prostih_faktora=1;\n\telse {\n\t\tint ostatak=broj%2;\n\t\twhile (ostatak==0) {\n\t\t\tbroj_prostih_faktora++;\n\t\t\tbroj=broj/2;\n\t\t\tostatak=broj%2;\n\t\t}\n\t\tfor (long long int i=3; i<=broj; i+=2) {\n\t\t\tint ostatak=broj%i;\n\t\t\twhile (ostatak==0) {\n\t\t\t\tbroj_prostih_faktora++;\n\t\t\t\tbroj=broj/i;\n\t\t\t\tostatak=broj%i;\n\t\t\t}\n\t\t}\n\t}\n\treturn broj_prostih_faktora;\n}\n\nint BrojSavrsenihDjelilaca(long long int broj) {\n\tbroj=fabs(broj);\n\tint broj_savrsenih_djelilaca{};\n\tfor (long long int i=1; i<=broj; i++)\n\t\tif (broj%i==0 && (SumaDjelilaca(i)-i)==i) broj_savrsenih_djelilaca++;\n\treturn broj_savrsenih_djelilaca;\n}\n\ntemplate <typename TipElementa1>\nbool JesuLiJednaki(TipElementa1 x1, TipElementa1 x2, double Eps=1e-10) {\n\tif ((x1<0 && x2>0) || (x1>0 && x2<0)) return false;\n\treturn std::fabs(x1-x2) <= Eps*(std::fabs(x1)+std::fabs(x2));\n}\n\ntemplate <typename TipElementa1, typename TipElementa2, typename TipElementa3, typename TipElementa4>\nauto UvrnutiPresjek(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2, \n\t\t\t\t\tTipElementa4 funkcija_kriterija(TipElementa3)) \n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak2)>::type>> matrica;\n\twhile(pocetak1!=kraj1) {\n\t\tTipElementa4 vrijednost1=funkcija_kriterija(*pocetak1);\n\t\tTipElementa2 tmp=pocetak2;\n\t\twhile(tmp!=kraj2) {\n\t\t\tTipElementa4 vrijednost2=funkcija_kriterija(*tmp);\n\t\t\tif (JesuLiJednaki(vrijednost1, vrijednost2)) {\n\t\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(3);\n\t\t\t\tpomocni_vektor[0]=*pocetak1;\n\t\t\t\tpomocni_vektor[1]=*tmp;\n\t\t\t\tpomocni_vektor[2]=vrijednost1;\n\t\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(), \n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vektor2){\n\t\tif (!JesuLiJednaki(vektor1[2], vektor2[2])) return vektor1[2]<vektor2[2];\n\t\telse if ((JesuLiJednaki(vektor1[2], vektor2[2])) && !JesuLiJednaki(vektor1[0], vektor2[0])) return vektor1[0]<vektor2[0];\n\t\treturn vektor1[1]<vektor2[1];});\n\treturn matrica;\n}\n\ntemplate <typename TipElementa1, typename TipElementa2>\nauto UvrnutiPresjek(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2)\n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\twhile(pocetak1!=kraj1) {\n\t\tTipElementa2 tmp=pocetak2;\n\t\twhile(tmp!=kraj2) {\n\t\t\tif (JesuLiJednaki(*pocetak1, *tmp)) {\n\t\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(3);\n\t\t\t\tpomocni_vektor[0]=*pocetak1;\n\t\t\t\tpomocni_vektor[1]=0;\n\t\t\t\tpomocni_vektor[2]=0;\n\t\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(),\n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor2){\n\t\treturn vektor1[0]<vektor2[0];});\n\treturn matrica;\n}\n\ntemplate <typename TipElementa1, typename TipElementa2, typename TipElementa3, typename TipElementa4>\nauto UvrnutaRazlika(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2,\n\t\t\t\t\tTipElementa4 funkcija_kriterija(TipElementa3)) \n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tTipElementa1 tmp1=pocetak1;\n\twhile(tmp1!=kraj1) {\n\t\tTipElementa4 vrijednost1=funkcija_kriterija(*tmp1);\n\t\tbool pronadjen=false;\n\t\tTipElementa2 tmp2=pocetak2;\n\t\twhile(tmp2!=kraj2) {\n\t\t\tTipElementa4 vrijednost2=funkcija_kriterija(*tmp2);\n\t\t\tif (JesuLiJednaki(vrijednost1, vrijednost2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp2++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*tmp1;\n\t\t\tpomocni_vektor[1]=vrijednost1;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\ttmp1++;\n\t}\n\twhile(pocetak2!=kraj2) {\n\t\tTipElementa4 vrijednost2=funkcija_kriterija(*pocetak2);\n\t\tbool pronadjen=false;\n\t\tTipElementa1 tmp=pocetak1;\n\t\twhile(tmp!=kraj1) {\n\t\t\tTipElementa4 vrijednost1=funkcija_kriterija(*tmp);\n\t\t\tif (JesuLiJednaki(vrijednost1, vrijednost2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak2)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*pocetak2;\n\t\t\tpomocni_vektor[1]=vrijednost2;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\tpocetak2++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(),\n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor2){\n\t\tif (!JesuLiJednaki(vektor1[0], vektor2[0])) return vektor1[0]>vektor2[0];\n\t\treturn vektor1[1]>vektor2[1];});\n\treturn matrica;\n}\n\ntemplate <typename TipElementa1, typename TipElementa2>\nauto UvrnutaRazlika(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2) \n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tTipElementa1 tmp1=pocetak1;\n\twhile(tmp1!=kraj1) {\n\t\tbool pronadjen=false;\n\t\tTipElementa2 tmp2=pocetak2;\n\t\twhile(tmp2!=kraj2) {\n\t\t\tif (JesuLiJednaki(*tmp1, *tmp2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp2++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*tmp1;\n\t\t\tpomocni_vektor[1]=0;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\ttmp1++;\n\t}\n\twhile(pocetak2!=kraj2) {\n\t\tbool pronadjen=false;\n\t\tTipElementa1 tmp=pocetak1;\n\t\twhile(tmp!=kraj1) {\n\t\t\tif (JesuLiJednaki(*tmp, *pocetak2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*pocetak2;\n\t\t\tpomocni_vektor[1]=0;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\tpocetak2++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(),\n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor2){\n\t\treturn vektor1[0]>vektor2[0];});\n\treturn matrica;\n}\n\nint main () {\n\tint broj_elemenata1{};\n\tstd::cout << \"Unesite broj elemenata prvog kontejnera: \";\n\tstd::cin >> broj_elemenata1;\n\tstd::cout << \"Unesite elemente prvog kontejnera: \";\n\tstd::deque<int> dek1(broj_elemenata1);\n\tint unesena_vrijednost{};\n\tfor (int i=0; i<broj_elemenata1; i++) {\n\t\tstd::cin >> unesena_vrijednost;\n\t\tbool pronadjen=false;\n\t\tfor (int k=0; k<dek1.size(); k++)\n\t\t\tif (JesuLiJednaki(unesena_vrijednost, dek1[k])) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (!pronadjen) dek1[i]=unesena_vrijednost;\n\t\telse i--;\n\t}\n\tint broj_elemenata2{};\n\tstd::cout << \"Unesite broj elemenata drugog kontejnera: \";\n\tstd::cin >> broj_elemenata2;\n\tstd::cout << \"Unesite elemente drugog kontejnera: \";\n\tstd::deque<int> dek2(broj_elemenata2);\n\tfor (int i=0; i<broj_elemenata2; i++) {\n\t\tstd::cin >> unesena_vrijednost;\n\t\tbool pronadjen=false;\n\t\tfor (int k=0; k<dek1.size(); k++)\n\t\t\tif (JesuLiJednaki(unesena_vrijednost, dek2[k])) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (!pronadjen) dek2[i]=unesena_vrijednost;\n\t\telse i--;\n\t}\n\tstd::vector<std::vector<int>> uvrnuti_presjek = UvrnutiPresjek(dek1.begin(), dek1.end(), dek2.begin(), dek2.end(), SumaCifara);\n\tstd::vector<std::vector<int>> uvrnuta_razlika = UvrnutaRazlika(dek1.begin(), dek1.end(), dek2.begin(), dek2.end(), BrojProstihFaktora);\n\tstd::cout << \"Uvrnuti presjek kontejnera: \\n\";\n\tfor (int i=0; i<uvrnuti_presjek.size(); i++) {\n\t\tfor (int j=0; j<uvrnuti_presjek[i].size(); j++)\n\t\t\tstd::cout << std::right << std::setw(6) << uvrnuti_presjek[i][j] << \" \";\n\t\tstd::cout << std::endl;\n\t}\n\tstd::cout << \"Uvrnuta razlika kontejnera: \\n\";\n\tfor (int i=0; i<uvrnuta_razlika.size(); i++) {\n\t\tfor (int j=0; j<uvrnuta_razlika[i].size(); j++)\n\t\t\tstd::cout << std::right << std::setw(6) << uvrnuta_razlika[i][j] << \" \";\n\t\tstd::cout << std::endl;\n\t}\n\tstd::cout << \"Dovidjenja!\";\n\treturn 0;\n}"
    },
    "103": {
        "label": "0",
        "student7540": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include <string>\n#include <vector>\n#include <list>\n#include <set>\n#include <stdexcept>\nusing std::cout;\nusing std::cin;\nusing std::vector;\nusing std::list;\nusing std::string;\nusing std::set;\n\nint BrojSlova(string s){\n    int brojac(0);\n    for (auto i=0; i<s.size(); i++) {\n        if (s.at(i)>='A' && s.at(i)<='Z') brojac++;\n        else if (s.at(i)>='a' && s.at(i)<='z') brojac++;\n        else if(s.at(i)>='0' && s.at(i)<='9') brojac++;\n    }\n    return brojac;\n}\n\nvector<set<string>> Razvrstavanje(vector<string> djeca, int broj_timova){\n    if (broj_timova<1 || broj_timova>djeca.size()) throw std::logic_error(\"Izuzetak: Razvrstavanje nemoguce\");\n    vector<set<string>> skup(broj_timova);\n    list<string> lista;\n    lista.resize(djeca.size());\n    \n    // KOPIRAMO VECTOR U LISTU\n    \n    auto j=lista.begin();\n    for (auto i=djeca.begin(); i<djeca.end(); i++){\n        *j=*i;\n        j++;\n    }\n    \n    // POSTAVLJAMO VELICINE KOJE CE TREBATI\n    \n    int n;\n    int prvi_timovi;\n    n=djeca.size();\n    prvi_timovi = n%broj_timova;\n    int clanovi_prvih_timova;\n    clanovi_prvih_timova = n/broj_timova + 1 ;\n    int preostali_timovi;\n    preostali_timovi=broj_timova-prvi_timovi;\n    int chlanovi_preostalih_timova;\n    chlanovi_preostalih_timova=n/broj_timova;\n    \n    // POCINJEMO SA RAZVRSTAVANJEM\n    \n    auto poc(lista.begin());    auto kraj(--lista.end());  auto klizac(poc);\n    for (int j(0);j<prvi_timovi; j++){\n        for (int k(0); k<clanovi_prvih_timova; k++){\n            \n        \n    \n    //RACUNAMO BROJ SLOVA DJETETA PRED IZBACIVANJE\n    int slova;\n    slova=BrojSlova(*klizac);\n    \n    //SKLANJAMO PRVO DIJETE IZ KRUGA ALI PRIJE TOGA UVODIMO KLIZAC\n   skup.at(j).insert(*klizac);\n    if (klizac==poc) {\n        poc++;\n        klizac=lista.erase(klizac);\n    } else if (klizac==kraj){\n        kraj--;\n        klizac=lista.erase(klizac);\n        klizac=poc;\n    } else {\n        klizac=lista.erase(klizac);\n    }\n    slova--;\n    //KRUZNA PETLJA ZA PRVE TIMOVE\n    for (int i(0); i<slova; i++){\n        if (klizac==kraj){\n            klizac=poc;\n        } else klizac++;\n    }\n}\n}\n\n\n    //KRUZNA PETLJA ZA PREOSTALE TIMOVE\n    for (int j(prvi_timovi); j<prvi_timovi+preostali_timovi; j++){  \n        for (int k(0); k<chlanovi_preostalih_timova; k++){\n            int slova;\n            slova=BrojSlova(*klizac);\n       skup.at(j).insert(*klizac);\n       if (klizac==poc){\n           poc++;\n           klizac=lista.erase(klizac);\n       } else if (klizac==kraj) {\n           kraj--;\n           klizac=lista.erase(klizac);\n           klizac=poc;\n       } else {\n           klizac=lista.erase(klizac);\n       }\n       slova--;\n       for (int i(0); i<slova; i++){\n           if (klizac==kraj) {\n               klizac=poc;\n           } else klizac++;\n       }\n}\n}\n    //VRACANJE SKUPA\n    return skup;\n    \n}\n\nint main ()\n{try{\n    cout << \"Unesite broj djece: \";\n    int br;\n    cin >> br;\n    cout << \"Unesite imena djece: \" << std::endl;\n    vector<string> djeca;\n    std::cin.ignore(10000,'\\n');\n    for (int i(0); i<br; i++){\n        string s;\n        std::getline(cin,s);\n        djeca.push_back(s);\n    }\n    cout << \"Unesite broj timova: \";\n    int timovi;\n    \n    cin >> timovi;\n    vector<set<string>> skup;\n    skup=Razvrstavanje(djeca,timovi);\n    for (int i(0); i<skup.size(); i++){\n        cout << \"Tim \" << i+1 <<\": \";\n        int brojac(0);\n        for (auto j=skup[i].begin(); j!=skup[i].end(); j++){\n            brojac++;\n          if (brojac==skup[i].size())  cout << *j << \"\";\n          else cout << *j << \", \";\n        }\n     cout<<   std::endl;\n    }\n\treturn 0;\n}catch(std::logic_error izuzetak){\n    cout << izuzetak.what();\n    return 0;\n}\n}",
        "student8560": "#include <iostream>\n#include <vector>\n#include <list>\n#include <set>\n#include <stdexcept>\n\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> djeca, int n) {\n    std::vector<std::set<std::string>> timovi;\n    if(n < 1 || n > djeca.size()) throw std::domain_error(\"Razvrstavanje nemoguce\");\n    return timovi;\n}\n\nint main ()\n{\n\treturn 0;\n}"
    },
    "104": {
        "label": "1",
        "student2160": "#include <stdio.h>\n#include <math.h>\n#define BROJ_U 500\n#define PI 3.1415926\n\nint main() {\n    double niz[BROJ_U];\n    int i,n,j;\n    double x,s,m1,m2,s1,s2,s3;\n    \n    printf(\"Unesite broj uglova: \");\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        { scanf(\"%lf\",&niz[i]); }\n        printf(\"Uglovi su:\\n\");\n          for(i=0;i<n;i++)\n       {\n        x=niz[i]*180/PI;\n        s=(int)(x);\n        m1=fabs(x-s)*60;\n        m2=(int)fabs(m1);\n        s1=(m1-m2)*60;\n        s2=(int)(fabs(s1)+0.5);\n        s3=fabs(s2);\n       \n        if(s3>=60) { s3-=60;   m2++; }\n       \n        if(m2>=60){\n            m2-=60;\n        \n            if(s<=0) s--;\n            else s++;\n        }\n       if(s3<=30) printf(\"\\n%g stepeni %g minuta %g sekundi\\n\",s,m2,s3);\n        if(s3>30)\n        {  for(j=1;j<=n-1;j++) {\n         niz[j]=niz[j+1];\n        }\n          n--;\n          i--;\n        }\n       \n       }\n\n     return 0;\n}\n  ",
        "student6960": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#define PI 3.1415926\n\nint main() {\n\tint n,i,j;\n\tdouble niz[500];\n\tdouble stepeni1,stepeni,minute1,minute,sekunde1,sekunde2,sekunde;\n\t\n\t\n\tprintf(\"Unesite broj uglova: \");\n\tscanf(\"%d\",&n);\n\t\n\tfor (i=0;i<n;i++) {\n\t\tscanf(\"%lf\",&niz[i]);\n\t}\n\tprintf(\"Uglovi su: \");\n\tfor (i=0;i<n;i++) {\n\t\tstepeni1=niz[i]*180/PI;\n\t\tstepeni=(int)(stepeni1);\n\t\tminute1=fabs(stepeni1-stepeni)*60;\n\t\tminute=(int)fabs(minute1);\n\t\tsekunde1=(minute1-minute)*60;\n\t\tsekunde2=(int)(fabs(sekunde1)+0.5);\n\t\tsekunde=fabs(sekunde2);\n\t\n\tif (sekunde>=60) {\n\t\tsekunde-=60;\n\t\tminute++;\n\t}\n\t\n\tif (minute>=60) {\n\t\tminute-=60;\n\t\tif (stepeni<=0) stepeni--;\n\t\telse stepeni++;\n\t}\n\tif (sekunde<=30) printf(\"\\n%g stepeni %g minuta %g sekundi\",stepeni,minute,sekunde);\n\tif (sekunde>30) {\n\t\tfor (j=i;j<n-1;j++) {\n\t\t\tniz[j]=niz[j+1];\n\t\t}\n\t\tn--;\n\t\ti--;\n\t}\n\t\t}\n\t\n\treturn 0;\n}\n"
    },
    "105": {
        "label": "0",
        "student1213": "#include <stdio.h>\n#include <math.h>\n\nvoid zaokruzi1(float niz[], int velicina){\n\tint i, a=0;\n\t\n\tfor(i=0; i<velicina; i++){\n\t\tif(niz[i]<0){\n\t\t\tniz[i]=niz[i]*(-1);\n\t\t\ta=1;\n\t\t}\n\t\tniz[i]*=10;\n\t\tniz[i]=round(niz[i]);\n\t\tniz[i]/=10;\n\t\t\n\t\tif(a==1)\n\t\tniz[i]=niz[i]*(-1);\n\t\ta=0;\n\t}\n\t\n}\n\nvoid preslozi(float niz[], int velicina, int k){\n\tint i, suma=0, niz_suma[10000], x, p=0, z=0;\n\tfloat niz1[1000], niz2[1000];\n\t\n\tzaokruzi1(niz,velicina);\n\tfor(i=0; i<velicina; i++){\n\t\t\n\t\tx=niz[i]*10;\n\t\tif(niz[i]<0)\n\t\tx=x*(-1);\n\t\twhile(x>0)\n\t\t{\n\t\t\tsuma=suma+x%10;\n\t\t\tx=x/10;\n\t\t}\n\t\tniz_suma[i]=suma;\n\t\tsuma=0;\n\t}\n\t\n\tfor(i=0; i<velicina; i++){\n\t\tif(niz_suma[i]>=k){\n\t\t\tniz1[p]=niz[i];\n\t\t\tp++;\n\t\t}\n\t\telse{\n\t\t\tniz2[z]=niz[i];\n\t\t\tz++;\n\t\t}\n\t}\n\t\n\tfor(i=0; i<p; i++)\n\tniz[i]=niz1[i];\n\t\n\tfor(i=p; i<velicina; i++)\n\tniz[i]=niz2[i-p];\n}\n\nint main() {\n\tfloat niz[1000];\n\tint i, n, k;\n\tprintf(\"Unesite velicinu niza: \");\n\tscanf(\"%d\", &n);\n\tprintf(\"Unesite clanove niza: \");\n\t\n\tfor(i=0; i<n; i++){\n\tscanf(\"%f\", &niz[i]);\n\t\t}\n\t\t\n\t\tprintf(\"Unesite k: \");\n\t\tscanf(\"%d\", &k);\n\t\n\tpreslozi(niz, n, k);\n\tfor(i=0; i<n; i++)\n\tprintf(\"%g \", niz[i]);\n\t\n\treturn 0;\n}\n",
        "student6548": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nvoid zaokruzi1(float *a, int vel){\n\tint i;\n\tfor(i=0; i<vel; i++){\n\t\ta[i]=roundf(a[i]*10)/10;\n\t}\n}\nint zbir_cifara(float br){\n\tbr*=10;\n\tint x;\n\tx=abs(br);\n\tint cifra;\n\tint suma=0;\n\twhile(x!=0){\n\t\tcifra=x%10;\n\t\tsuma+=cifra;\n\t\tx/=10;\n\t}\n\treturn suma;\n}\n\nvoid preslozi(float *a, int vel, int k){\n\tzaokruzi1(a, vel);\n\tint i, c;\n\tint brojacVecih=0;\n\tint brojacManjih=0;\n\tint pomocniNiz[10000]={0};\n\tfloat veci[10000];\n\tfloat manji[10000];\n\tfor(i=0; i<vel; i++){\n\t\tc=zbir_cifara(a[i]);\n\t\tpomocniNiz[i]=c;\n\t}\n\tfor(i=0; i<vel; i++){\n\t\tif(pomocniNiz[i]>=k){\n\t\t\tveci[brojacVecih]=a[i];\n\t\t\tbrojacVecih++;\n\t\t}\n\t\telse{\n\t\t\tmanji[brojacManjih]=a[i];\n\t\t\tbrojacManjih++;\n\t\t}\n\t}\n\tfor(i=0; i<brojacVecih; i++){\n\t\ta[i]=veci[i];\n\t}\n\tfor(i=0; i<brojacManjih; i++){\n\t\ta[brojacVecih+i]=manji[i];\n\t}\n}\n\nint main() {\n\tfloat niz[] = { 13.1, 15.749999, 15.75, 9.222, 78.1};\n\t\tpreslozi(niz, 5, 14);\n\t\t\n\treturn 0;\n}\n"
    },
    "106": {
        "label": "1",
        "student2364": "#include <iostream>\n#include <vector>\n#include <iomanip>\n\ntypedef std::vector <std::vector<double>> Matrica;\n\nMatrica RastuciPodnizovi(std::vector<double> v){\n\n\tMatrica M;\n\tif(v.size() == 0) return M;\n\tint index(0);\n\tfor(int i(0); i < v.size()-1 ; i++){\n\t\tif(v.at(i) <= v.at(i+1)){\n\t\t\tM.resize(index+1);\n\t\t\tM.at(index).push_back(v.at(i));\n\t\twhile(v.at(i) <= v.at(i+1)){\n\t\t\tM.at(index).push_back(v.at(i+1));\n\t\t\ti++;\n\t\t\tif(i == v.size() - 1)break;\n\t\t}\n\t\tindex++;\n\t}\n}\n\t\n\treturn M;\n}\n\nMatrica OpadajuciPodnizovi(std::vector<double> v){\n\t\n\tMatrica M;\n\tif(v.size() == 0) return M;\n\tint index(0);\n\tfor(int i(0); i < v.size() -1; i++){\n\t\tif(v.at(i) >= v.at(i+1)){\n\t\t\tM.resize(index +1);\n\t\t\tM.at(index).push_back(v.at(i));\n\t\t\twhile(v.at(i+1) <= v.at(i)){\n\t\t\t\tM.at(index).push_back(v.at(i+1));\n\t\t\t\ti++;\n\t\t\t\tif(i == v.size() - 1) break;\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn M;\n}\n\nint main(){\n\t\n\tint broj_elemenata;\n\tstd::cout << \"Unesite broj elemenata vektora: \";\n\tstd::cin >> broj_elemenata;\n\t\n\tdouble element;\n\tstd::vector <double> vektor;\n\tstd::cout << \"Unesite elemente vektora: \";\n\tfor(int i(0); i < broj_elemenata; i++){\n\tstd::cin >> element;\n\tvektor.push_back(element);\n\t}\n\t\n\tMatrica M(RastuciPodnizovi(vektor));\n\t\n\tstd::cout << \"Maksimalni rastuci podnizovi: \" << std::endl;\n\t\n\tfor(int i(0); i < M.size(); i++){\n\t\tfor(int j(0); j< M.at(i).size(); j++){\n\t    \tstd::cout << M.at(i).at(j) << \" \";\n\t    \t\n\t\t}\n\t\tstd::cout << std::endl;\n\t}\n\t\n\tstd::cout << \"Maksimalni opadajuci podnizovi: \" << std::endl;\n\t\n\tMatrica K(OpadajuciPodnizovi(vektor));\n\t\n\tfor(int i(0); i < K.size(); i++){\n\t\tfor(int j(0); j < K.at(i).size(); j++){\n\t\t\tstd::cout << K[i][j] << \" \";\n\t\t}\n\t\tstd::cout << std::endl;\n\t}\n\t\n\treturn 0;\n}",
        "student4389": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 3\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n#include <iostream>\n#include <vector>\n#include <iomanip>\n\ntypedef std::vector<std::vector <double>> Matrica;\n\nMatrica RastuciPodnizovi(std::vector<double> vektor){\n\tMatrica povratna_matrica;\n\tif(vektor.size() == 0) return povratna_matrica;\n\tstd::vector<double> moguci_vektor;\n\tint red(0);\n\tfor(int i=0; i<vektor.size()-1; i++){\n\t\tif(vektor.at(i)<=vektor.at(i+1)){\n\t\t\tpovratna_matrica.resize(red+1);\n\t\t\tpovratna_matrica.at(red).push_back(vektor.at(i));\n\t\t\twhile(vektor.at(i)<=vektor.at(i+1)){\n\t\t\t\tpovratna_matrica.at(red).push_back(vektor.at(i+1));\n\t\t\t\ti++;\n\t\t\t\tif(i==vektor.size()-1) break;\n\t\t\t}\n\t\t\tred++;\n\t\t}\n\t}\n\treturn povratna_matrica;\n}\n\nMatrica OpadajuciPodnizovi(std::vector<double> vektor){\n\tMatrica povratna_matrica;\n\tif(vektor.size() == 0) return povratna_matrica;\n\tstd::vector<double> moguci_vektor;\n\tint red(0);\n\tfor(int i=0; i<vektor.size()-1; i++){\n\t\tif(vektor.at(i)>=vektor.at(i+1)){\n\t\t\tpovratna_matrica.resize(red+1);\n\t\t\tpovratna_matrica.at(red).push_back(vektor.at(i));\n\t\t\twhile(vektor.at(i+1)<=vektor.at(i)){\n\t\t\t\tpovratna_matrica.at(red).push_back(vektor.at(i+1));\n\t\t\t\ti++;\n\t\t\t\tif(i==vektor.size()-1) break;\n\t\t\t}\n\t\t\tred++;\n\t\t}\n\t}\n\treturn povratna_matrica;\n}\n\nint main ()\n{\n\tstd::cout << \"Unesite broj elemenata vektora: \";\n\tint num(0);\n\tstd::cin >> num;\n\tstd::cout << \"Unesite elemente vektora: \";\n\tstd::vector<double> vektor;\n\tdouble temp(0);\n\tfor (int i = 0; i < num; i++) {\n\t\tstd::cin >> temp;\n\t\tvektor.push_back(temp);\n\t}\n\tstd::vector<std::vector<double>> rastuci {RastuciPodnizovi(vektor)}, opadajuci {OpadajuciPodnizovi(vektor)};\n\tstd::cout << \"Maksimalni rastuci podnizovi: \" << std::endl;\n\tfor (int i = 0; i < rastuci.size(); i++) {\n\t\tfor (int j = 0; j < rastuci.at(i).size(); j++) {\n\t\t\tstd::cout << rastuci.at(i).at(j)<< \" \";\n\t\t}\n\t\tstd::cout << std::endl;\n\t}\n\tstd::cout << \"Maksimalni opadajuci podnizovi: \" << std::endl;\n\tfor (int i = 0; i < opadajuci.size(); i++) {\n\t\tfor (int j = 0; j < opadajuci.at(i).size(); j++) {\n\t\t\tstd::cout << opadajuci.at(i).at(j)<< \" \";\n\t\t}\n\t\tstd::cout << std::endl;\n\t}\n\treturn 0;\n}"
    },
    "107": {
        "label": "0",
        "student1624": "#include <stdio.h>\nchar gg[2000]; //globalni niz u kojem cuvamo nasu recenicu prije kodiranja\nint pozicija (char slovo, char* tekst){\n//fja treba vratiti indeks naseg slova u tekstu\nint i=0;\nchar*s=tekst; //pokazivac na nas tekst\nwhile(*s!=slovo){\n\ts++;\n\ti++;\n}\nreturn i;\n}\n\nvoid fun(char slova[], int niz[], char* tekst, char* tablica) { //funkcija fun primi 2 niza, tekst i tablicu\nint i,j;\n//prvo nas niz charova napunimo asci vrijednostima od 32 do 126 kako je i receno u zadatku\nfor (i=32; i<=126; i++){\n\tslova[i-32]=i;\n\t\n}\n//poslije toga u nas drugi niz intova spasimo broj ponavljanja,\n//tako da nas gornji niz slova pokazuje slovo a nas donji niz koliko se puta to slovo ponavlja\nwhile(*tekst!='\\0')\nniz [(*tekst++)-32]++;\n // prodjemo kroz niz ponavljanja od vecih ka manjim\n // u slucaju da ima isto ponavljanja sortiramo po asci vrijednostima\n for(i=0;i<=94;i++){\n \tfor(j=i+1;j<=94;j++){\n \t\tif((niz[j]>niz[i]) || (niz[j]==niz[i] && slova[j]<slova[i])) {\n \t\t\tchar temp2=slova[i];\n \t\t\tslova[i]=slova[j];\n \t\t\tslova[j]=temp2;\n \t\t\tint temp1=niz[i];\n \t\t\tniz[i]=niz[j];\n \t\t\tniz[j]=temp1;\n \t\t}\n \t}\n }\n//poslije ovoga nas sortirani niz slova prekopiramo u tablicu\nfor (i=0;i<=94;i++){\n\t*(tablica+i)=slova[i];}\n\t*(tablica+i)='\\0';\n}\nchar* kodiraj(char*tekst, char*tablica)\n{\n\tchar*pocetak=tekst,*s=tekst;\n\tchar slova[200];\n\tint i, niz[200]={0};\n\t\n\tchar*global=gg;\n\twhile (*s!='\\0')\n\t//global je pokazivac na globalni niz gg i u njega prekopiramo recenicu\n\t*global++=*s++;\n\t*global='\\0';\n\t\n\tfun (slova, niz, tekst, tablica);\n\t// u fju saljemo nizove tekst i tablicu, a fja ce te nizove napunit, sortirat po broju ponavljanja i to prebacit u tablicu\n\t//i na kraju sto je i receno u zadatku svaki znak postaje 126-njegova pozicija u tablici\n\twhile(*tekst!='\\0'){\n\t\tint postaje=126-pozicija(*tekst,tablica);\n\t\t*tekst++=postaje;\n\t}\n\treturn pocetak;\n}\nchar* dekodiraj (char*tekst, char*tablica){\n\t//posto smo u nas globalni niz spasili tekst, samo ga prekopiramo nazad//\n\tchar*gl=gg,*poc=tekst;\n\twhile(*tekst!='\\0'){\n\t\t*tekst++=*gl++;\n\t}\n\treturn poc;\n}\n\t\nint main () {\n\tchar tekst[]=\"Ovo je neki testni tekst\";\n\tchar sifrarnik[100]=\"\";\n\tkodiraj (tekst, sifrarnik);\n\tprintf(\"%s\", tekst);\n\tdekodiraj(tekst,sifrarnik);\n\tprintf(\"%s\", sifrarnik);\n\treturn 0;\n}",
        "student8480": "#include <stdio.h>\n\nint poz(char slovo, char s[]){\n\t//vraca int, indeks naseg slova u datom nizu\n\tint i;\n\tfor(i=0;i<=94;i++) {\n\tif(slovo==s[i]) return i;\n\t}\n}\n\n\nvoid prekopiraj(char *tablica, char slova[]){ //u tabelu spasimo nas niz slova koji su sortirani\n\tint i;\n\tfor(i=0;i<=94;i++) {             //nas niz slova uvijek ima 94 elementa, i on je sortiran i prebacimo ga u tablicu\n\t*(tablica+i)=slova[i];\n\t}\n\t\n\t*(tablica+i)='\\0';      //posto se nas niz ne zavrsava sa \\0, moramo naknadno dodati\n}\n\nvoid zasvaki(char *tekst,char* I){ //za svaki znak iz naseg teksta zamijeni, od 126 oduzimamo njegovu poziciju\n\twhile(*tekst!='\\0'){\n\t\t*tekst=126-poz(*tekst,I);\n\t\ttekst++;\n\t}\n}\n\nvoid zamijeniint(int *poknap, int *poknad){  //mora primiti pokazivace, jer joj se u mainu salje adresa\n\tint temp=*poknap;\n\t*poknap=*poknad;\n\t*poknad=temp;\n}\n\nvoid zamijenichar(int *poknap, int* poknad){  // isto kao u funkciji zamijeniint,samo sa charovima\n\tchar temp=*poknap;\n\t*poknap=*poknad;\n\t*poknad=temp;\n\t\n}\n\nchar* kodiraj(char* tekst, char* tablica){\n\t\nchar* pok=tekst; char *pozav=tekst, *I=tablica, *m=tekst;\nint i,j;\nint histogram[200]={0};  //mora sve biti na 0\nchar slova[200];\n\t\n\tfor(i=32;i<=126;i++)  //popunimo niz slova charovima  redom u ascii tabeli\n\t\tslova[i-32]=i;\n\t\t\n\twhile(*pok!='\\0'){ //pok pokazuje na tekst, i ide kroz njega, i svaki broj ponavljanja slova spasava u niz \n\t\tint pozicija= (int)* pok;\n\t\thistogram[pozicija-32]++;\n\t\tpok++;\n\t}\n\t\n\tfor(i=0;i<=94;i++){ //prolazimo kroz 2 niza, slova i histogram\n\t\tfor(j=i+1;j<=94;j++){\n\t\t\tif(histogram[j]>histogram[i] || (histogram[j]==histogram[i] && slova[j]<slova[i])){\n\t\t//sortiramo ako je u histogramu veca vrijednost, a ako je jednaka sortiramo po ascii\t\n\t\t\tzamijeniint(&histogram[i],&histogram[j]); //poziv funkcije kojom mijenjamo\n\t\t\t\n\t\t\tchar temp1=slova[i];\n\t\t\tslova[i]=slova[j];\n\t\t\tslova[j]=temp1;\n\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\tprekopiraj(tablica,slova); //nas niz slova je sortiran, pa ih prebacujemo u tablicu koja je prazna\n\tzasvaki(tekst,I); //mijenjamo svaki elemenat teksta\n\treturn pozav;\n}\n\n\nchar *dekodiraj(char *tekst, char *tabela){\n\tchar pomtekst[2000], pomtabela[200]; //pomocni tekst i pomocna tabela u koju spasavamo\n\tchar *poc=tekst, *p=pomtekst, *pok=pomtekst;\n\tint i,j;\n\twhile(*tekst!='\\0'){ //p pokazuje na pomocni tekst i u pomocni tekst smo upisali svoj zadani tekst\n\t\t*p=*tekst;\n\t \t p++;tekst++;\n\t\n\t\t} *p='\\0';\n\t\t\n\t\tint histogram[200]={0};\n\t\tchar slova[200];\n\t\t\n\t\tfor(i=32;i<=126;i++) //ispunili ascii vrijednostima\n\t\t\tslova[i-32]=i;\n\t\t\n\t\t\n\t\twhile(*pok!='\\0'){ //ispunili niz po broju ponavljanja\n\t\t\tint pozicija=(int)* pok;\n\t\t\thistogram[pozicija-32]++;\n\t\t\tpok++;\n\t\t}\n\t\t\n\t\t\n\t\tfor(i=0;i<=94;i++){ //prolazak kroz pomocne nizove i sortiranje\n\t\t\tfor(j=i+1;j<=94;j++){\n\t\t\t\tif(histogram[j]>histogram[i] || (histogram[j]==histogram[i] && slova[j]>slova[i])){ //isto kao u funkciji kodiraj samo je uslov drugaciji\n\t\t\t\t\n\t\t\t\tzamijeniint(&histogram[i],&histogram[j]);\n\t\t\t\n\t\t\t\tchar temp1=slova[i];\n\t\t\t\tslova[i]=slova[j];\n\t\t\t\tslova[j]=temp1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tprekopiraj(pomtabela,slova); //slova niz je sortiran i prebacimo ga u pomocnu tabelu po kojoj kodiramo\n\t\tzasvaki(pomtekst,pomtabela); //svaki elemenat kodiramo po poziciji u pomocnoj tabeli\n\t\n\t\ttekst=poc;\n\t\t\n\t\twhile(*tekst!='\\0'){ //konacno nas tekst zadani, modifikujemo\n\t\t\ti=poz(*tekst,pomtabela); //i je adresa naseg elementa u pomocnoj tabeli\n\t\t\t*tekst=*(tabela+i); //nas elemenat ostane elemenat u datoj tabeli na indeksu i\n\t\t\ttekst++;\n\t\t}\n\t\treturn poc;\n}\n\nint main(){\n\t\n\tchar tekst[]=\"LLMLNLNMONM\";\n\tchar sifrarnik[100]=\"\";\n\tint i;\n\t\n\tkodiraj(tekst,sifrarnik);\n\tprintf(\"%s\",tekst);\n\t\n\tfor(i=0;i<10;i++) \n\t\tprintf(\"%c\", sifrarnik[i]);\n\t\n\treturn 0;\n}"
    },
    "108": {
        "label": "1",
        "student3320": "#include <stdio.h>\n\nint provjera(int* niz) {\n\tint i;\n\tfor(i=0; i<96; i++) \n\t\tif(niz[i] != -1) return 1;\n\treturn 0;\n}\n\nchar* kodiraj(char* tekst, char* niz) {\n\tchar* pocetak=tekst;\n\tchar* temp2=niz;\n\tchar* temp3=niz;\n\tchar s=' ';\n\tchar temp1[96];\n\tint temp[96]={0};\n\tint i=0;\n\tint max, index=0;\n\t\n\twhile(s <= '~') {\n\t\t\ttekst=pocetak;\n\t\t\ttemp1[i]=s;\n\t\t\twhile(*tekst!='\\0') {\n\t\t\t\tif(*tekst==s) \n\t\t\t\t\ttemp[i]++;\n\t\t\t\t\ttekst++;\n\t\t\t}\n\t\t\ti++;\n\t\t\ts++;\n\t\t}\n\t\twhile(provjera(temp)) {\n\t\t\tmax=temp[0];\n\t\t\tindex=0;\n\t\t\tfor(i=0; i<96;i++) {\n\t\t\t\tif(temp[i]>max) {\n\t\t\t\t\tmax=temp[i];\n\t\t\t\t\tindex=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t*niz++ =temp1[index];\n\t\t\t\ttemp[index]=-1;\n\t\t\t}\n\t\t\n\t\t*--niz='\\0';\n\t\tniz--;\n\t\ttekst=pocetak;\n\t\twhile(*tekst!='\\0') {\n\t\t\tfor(i=0; i<96; i++) {\n\t\t\t\tif(*tekst==*temp3) {\n\t\t\t\t\t*tekst=126-i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttemp3++;\n\t\t\t}\n\t\t\ttemp3=temp2;\n\t\t\ttekst++;\n\t\t}\n\t\treturn pocetak;\n\t}\n\t\nchar* dekodiraj(char* tekst, char* niz) {\n\t\tchar* temp1=niz;\n\t\tchar* temp2=niz;\n\t\tint brojac=0;\n\t\tchar* pocetak=tekst;\n\t\tint i;\n\t\t\n\t\twhile(*tekst!='\\0') {\n\t\t\tbrojac++;\n\t\t\ttekst++;\n\t\t}\n\t\t\n\t\tniz--;\n\t\ttekst=pocetak;\n\t\twhile(*tekst!='\\0') {\n\t\t\tfor(i=0; i<brojac; i++) {\n\t\t\t\tif(*tekst==*temp1) {\n\t\t\t\t\t*tekst=*(niz+94-i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttemp1++;\n\t\t\t}\n\t\t\ttemp1=temp2;\n\t\t\ttekst++;\n\t\t}\n\t\treturn pocetak;\n\t}\n\nint main() {\n\tchar tekst[100];\n\tchar niz[100];\n\tprintf(\"%s\\n\", tekst);\n\tprintf(\"%s\\n\", kodiraj(tekst, niz));\n\tprintf(\"%s\", dekodiraj(tekst, niz));\n\treturn 0;\n}\n",
        "student8518": "#include <stdio.h>\n\nint uslov(int* niz)\n{\n\tint i;\n\tfor (i = 0; i < 96; i++)\n\t\tif (niz[i] != -1) return 1;\n\treturn 0;\n}\n\nchar* kodiraj(char* tekst, char* niz)\n{\n\tchar* pocetak = tekst;\n\tchar* tmp1 = niz;\n\tchar* tmp2 = niz;\n\tint brojPonavljanja[96] = {0};\n\tchar staPonavlja[96];\n\tchar slovo = ' ';\n\tint i = 0, max, indeksMax = 0;\n\twhile (slovo != 127) {\n\t\ttekst = pocetak;\n\t\tstaPonavlja[i] = slovo;\n\t\twhile (*tekst != '\\0') {\n\t\t\tif (*tekst == slovo)\n\t\t\t\tbrojPonavljanja[i]++;\n\t\t\ttekst++;\n\t\t}\n\t\ti++;\n\t\tslovo++;\n\t}\n\twhile (uslov(brojPonavljanja)) {\n\t\tmax = brojPonavljanja[0];\n\t\tindeksMax = 0;\n\t\tfor (i = 0; i < 96; i++) {\n\t\t\tif (brojPonavljanja[i] > max) {\n\t\t\t\tmax = brojPonavljanja[i];\n\t\t\t\tindeksMax = i;\n\t\t\t}\n\t\t}\n\t\t*niz++ = staPonavlja[indeksMax];\n\t\tbrojPonavljanja[indeksMax] = -1;\n\t}\n\t*--niz = '\\0';\n\tniz--;\n\ttekst = pocetak;\n\twhile (*tekst != '\\0') {\n\t\tfor (i = 0; i < 96; i++) {\n\t\t\tif (*tekst == *tmp2) {\n\t\t\t\t*tekst = 126 - i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp2++;\n\t\t}\n\t\ttmp2 = tmp1;\n\t\ttekst++;\n\t}\n\treturn pocetak;\n}\n\nchar* dekodiraj(char* tekst, char* niz)\n{\n\tchar* pocetak = tekst;\n\tchar* tmp2 = niz;\n\tint i;\n\twhile (*tekst != '\\0') {\n\t\tfor (i = 0; i < 96; i++) {\n\t\t\tif (*tekst == *tmp2) {\n\t\t\t\t*tekst = *(niz + 94 - i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp2++;\n\t\t}\n\t\ttmp2 = niz;\n\t\ttekst++;\n\t}\n\treturn pocetak;\n}\n\nint main()\n{\n\tchar tekst[100] = \"LLMLNLNMONM\";\n\tchar niz[100];\n\tprintf(\"%s\\n\", kodiraj(tekst, niz));\n\tprintf(\"%s\", dekodiraj(tekst, niz));\n\treturn 0;\n}\n"
    },
    "109": {
        "label": "0",
        "student4082": "#include <stdio.h>\n#include <limits.h>\n\nvoid unesi(char niz[], int velicina){\n\tchar znak = getchar();\n\tint i = 0;\n\tif(znak == '\\n') znak = getchar();\n\twhile(i < velicina-1 && znak != '\\n'){\n\t\tniz[i] = znak;\n\t\ti++;\n\t\tznak = getchar();\n\t}\n\tniz[i] = '\\0';\n}\n\nint _strlen(char *s){\n\tint len = 0;\n\tif(s[0] == '\\0') return len;\n\twhile(s[++len] != '\\0');\n\treturn len;\n}\n\nint _isdigit(char c){\n\tif('0' <= c && c <= '9') return 1;\n\telse return 0;\n}\n\n/* Pretpostavka da se tekst sastoji od znakov asci [32, 126] */\nchar* kodiraj(char *text, char *table){\n\tint len = _strlen(text);\n\tchar count[256];\n\tchar taken[256];\n\tchar pos[256];\n\tint index = 1, current = 0;\n\tint i;\n\tfor(i = 0; i < 256; i++){\n\t\tpos[i] = 0;\n\t\tcount[i] = 0;\n\t\ttaken[i] = 0;\n\t}\n\t\n\tfor(i = 0; i < len; i++){\n\t\tcount[text[i]]++;\n\t}\n\t\n\twhile(index > -1){\n\t\tindex = -1;\n\t\tint max = 0;\n\t\tfor(i = 0; i < 256; i++){\n\t\t\tif(!taken[i] && count[i] > max){\n\t\t\t\tmax = count[i];\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(index > -1){\n\t\t\ttable[current++] = index;\n\t\t\ttaken[index] = 1;\n\t\t}\n\t}\n\t\n\t\n\ttable[current] = '\\0';\n\t\n\tfor(i = 32; i < 127; i++)\n\t\tif(!taken[i]) table[current++] = i;\n\t\t\n\ttable[current] = '\\0';\n\t\n\tfor(i = 0; i < current; i++)\n\t\tpos[table[i]] = i;\n\t\t\n\tfor(i = 0; i < len; i++){\n\t\ttext[i] = (char)(126 - pos[text[i]]);\n\t}\n\t\n\t\n\treturn text;\n}\n\nchar* dekodiraj(char *text, char *table){\n\tint textlen = _strlen(text), tablelen = _strlen(table);\n\tchar pos[256];\n\tint i;\n\tfor(i = 0; i < tablelen; i++) pos[table[i]] = i;\n\tfor(i = 0; i < textlen; i++) text[i] = table[-text[i] + 126];\n\t\n\treturn text;\n}\n\n\n\nint main() {\n\tchar tekst[] = \"LLMLNLNMONM\";\n\tchar sifrarnik[100] = \"\";\n\tint i;\n\tkodiraj(tekst, sifrarnik);\n\tprintf(\"%s\", tekst);\n\tfor (i=0; i<10; i++) printf(\"%c\", sifrarnik[i]);\n\tdekodiraj(tekst, sifrarnik);\n\tprintf(\"%s\", tekst);\n\n\treturn 0;\n}\n",
        "student7485": "#include <stdio.h>\n\nchar *kodiraj(char *tekst, char *sifra){\n\tint ponavljanja[100]={0};\n\tchar tabela[100]={0};\n\tchar *sifra_pomoc=sifra;\n\tchar *poc=tekst;\n\tint i,j,max;\n\t//Pravi tabelu ASCII znakova\n\tfor (i=0;i<95;i++){\n\t\ttabela[i]=' '+i;\n\t}\n\ttabela[i]='\\0';\n\n\twhile (*tekst!='\\0'){\n\t\t//Broji koliko se puta koji znak ponavlja\n\t\tfor (i=0;i<95;i++){\n\t\t\tif(*tekst==tabela[i]){\n\t\t\t\tponavljanja[i]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttekst++;\n\t}\n\t//Pravi sifrarnik po broju ponavljanja i ASCII vrijednosti\n\tfor(i=0;i<95;i++){\n\t\tmax=0;\n\t\tfor(j=0;j<95;j++){\n\t\tif(ponavljanja[j]>ponavljanja[max])\n\t\tmax=j;\n\t\t}\n\n\t\t*sifra=tabela[max];\n\t\tsifra++;\n\t\tfor(j=max;j<95;j++){\n\t\t\ttabela[j]=tabela[j+1];\n\t\t\tponavljanja[j]=ponavljanja[j+1];\n\t\t}\t\n\t}\n\ttekst=poc;\n//Mijenja znakove teksta za odgovarajuce iz sifrarnika\t\nwhile(*tekst!='\\0'){\nsifra=sifra_pomoc;\n\tfor(i=0;i<95;i++,sifra++){\n\t\tif(*tekst==*sifra){\n\t\t\t*tekst=126-i;\n\t\t\tbreak;\n\t\t}\n\t}\n\ttekst++;\n  }\nreturn poc;\n}\n\nchar *dekodiraj(char*tekst, char*sifra){\n\tint i;\n\tchar *poc=tekst;\n\twhile(*tekst!='\\0'){\n\t\tfor(i=0;i<96;i++){\n\t\t\tif(*tekst==126-i){\n\t\t\t\t*tekst=sifra[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttekst++;\n\t}\n\treturn poc;\n}\n\nint main() {\n\tchar sifra[97];\n\tchar tekst[]=\"Test Test Test\\0\";\n\tprintf(\"%s\",kodiraj(tekst,sifra));\n\tprintf(\"\\n%s\", dekodiraj(tekst,sifra));\n\treturn 0;\n}\n"
    },
    "110": {
        "label": "1",
        "student2574": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 4\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n#include <string>\n#include <iostream>\n#include <vector>\n#include <stdexcept>\n\nbool jel_slovo (char slovo_recenica) {\n\tif ((slovo_recenica>='a' && slovo_recenica<='z') || (slovo_recenica>='A' && slovo_recenica<='Z'))\n\t\treturn true;\n\treturn false;\t\n}\nstd::string ObrniFraze (std::string recenica, std::vector<std::string> fraze) {\n\tstd::string pomocni(recenica);\n\tfor (int i=0; i<fraze.size(); i++) {\n\t\tfor (int j=0; j<pomocni.length(); j++) {\n\t\t\tif (pomocni.compare(j, fraze.at(i).length(), fraze.at(i)) == 0) {\n\t\t\t\tfor (int f=0; f<fraze.at(i).length(); f++) {\n\t\t\t\t\tauto pomoc3(pomocni.at(j+f));\n\t\t\t\t\tpomocni.at(j+f) = pomocni.at(j+fraze.at(i).length()-f-1);\n\t\t\t\t\tpomocni.at(j+fraze.at(i).length()-f-1) = pomoc3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn pomocni;\n}\n\nstd::string IzmijeniUPigLatin (std::string recenica, std::vector<std::string> fraze) {\n\tfor (int i=0; i<fraze.size(); i++) { //size jer je VEKTOR\n\t\tfor (int j=0; j<fraze.at(i).length(); j++) { //length jer je vektor STRINGOVA\n\t\t\tif ((fraze.at(i).at(j)<'A' || (fraze.at(i).at(j)>'Z' && fraze.at(i).at(j)<'a')) || ((fraze.at(i).at(j)>'Z' && fraze.at(i).at(j)<'a') || fraze.at(i).at(j)>'z')) \n\t\t\t\tthrow std::domain_error (\"Nekorektan izbor rije\u010di\");\n\t\t}\n\t}\n\tfor (int i=0; i<fraze.size(); i++) {\n\t\tfor (int j=0; j<recenica.length(); j++) {\n\t\t\tif (recenica.compare(j, fraze.at(i).length(), fraze.at(i)) == 0) {\n\t\t\t\tif (jel_slovo(recenica.at(j))==false && jel_slovo(recenica.at(j+fraze.at(i).length()))==false) {\n\t\t\t\t\tauto pomoc2 (recenica.at(j)); \t\t\t\t\t\t//Obrni rije\u010di sa petljom\n\t\t\t\t\tfor (int k=0; k<fraze.at(i).length()-1; k++) {\n\t\t\t\t\t\trecenica.at(k+j) = recenica.at(k+j+1);\n\t\t\t\t\t\tif (k==fraze.at(i).length()-2) \n\t\t\t\t\t\t\trecenica.at(k+j+1) = pomoc2;\n\t\t\t\t\t}\n\t\t\t\t\trecenica.insert(j+fraze.at(i).length(),\"ay\");\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\treturn recenica;\t\n} \n\nint main () {\n\tstd::cout<<\"Unesite recenicu: \";\n\tstd::string recenica;\n\tstd::getline(std::cin,recenica);\t\n\tstd::cout<<\"Unesite fraze: \";\n\tstd::vector<std::string> fraze;\n\tstd::string pomoc;\n\tfor (;;) {\n\t\tstd::getline(std::cin,pomoc);\n\t\tif (pomoc.size())\n\t\t\tfraze.push_back(pomoc);\n\t\tif (pomoc.size()==0)\n\t\t\tbreak;\n\t}\n\ttry {\n\t\tauto vraca_pig (IzmijeniUPigLatin(recenica,fraze));\n\t\tstd::cout<<\"Recenica nakon PigLatin transformacije: \"<<vraca_pig<<std::endl;\n\t}\n\tcatch (std::domain_error izuzetak) {\n\t\tstd::cout<<\"Izuzetak: \"<<izuzetak.what()<<std::endl;\n\t}\n\tstd::cout<<\"Recenica nakon obrtanja fraza: \"<<ObrniFraze(recenica,fraze)<<std::endl;\n\treturn 0;\n}",
        "student4389": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 4\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n#include <iostream>\n#include <vector>\n#include <string>\n#include <stdexcept>\n\nbool Abeceda(char slovo){\n\tif((slovo>='a' && slovo<='z') || (slovo>='A' && slovo<='Z')) return true;\n\telse return false;\n}\n\nvoid ProvjeraStringa(std::vector<std::string> tekst)\n{\n\tfor(int i = 0; i<tekst.size(); i++){\n\t\tfor(int j = 0; j<tekst.at(i).length(); j++){\n\t\t\tif(!((tekst.at(i).at(j)>='A' && tekst.at(i).at(j)<='Z') || (tekst.at(i).at(j)>='a' && tekst.at(i).at(j)<='z'))) throw std::domain_error(\"Nekorektan izbor rije\u010di\");\n\t\t}\n\t}\n}\n\nvoid Obrni(std::string &txt, int a, int b)\n{\n\tchar temp;\n\tfor(int i=0; i<b/2; i++){\n\t\ttemp = txt.at(i+a);\n\t\ttxt.at(i+a) = txt.at(a+b-i-1);\n\t\ttxt.at(a+b-i-1) = temp;\n\t}\n}\n\nstd::string ObrniFraze(std::string tekst, std::vector<std::string> fraze)\n{\n\tstd::string txt(tekst);\n\tfor(int i = 0; i<fraze.size(); i++){\n\t\tfor(int j = 0; j<txt.length(); j++){\n\t\t\tif(txt.compare(j, fraze.at(i).length(), fraze.at(i)) == 0){\n\t\t\t\tObrni(txt, j, fraze.at(i).length());\n\t\t\t}\n\t\t}\n\t}\n\treturn txt;\n}\n\nvoid IzmijeniRijec(std::string &tekst, int a, int b)\n{\n\tchar temp;\n\ttemp=tekst.at(a);\n\tfor(int i=0; i<b-1; i++){\n\t\ttekst.at(i+a) = tekst.at(i+a+1);\n\t\tif(i==b-2) tekst.at(i+a+1) = temp;\n\t}\n}\n\nstd::string IzmijeniUPigLatin(std::string txt, std::vector<std::string> fraze)\n{\n\tProvjeraStringa(fraze);\n\tif(fraze.size())\n\t{\n\t\tfor(int i = 0; i<fraze.size(); i++){\n\t\t\tfor(int j = 0; j<txt.length(); j++){\n\t\t\t\tif(txt.compare(j, fraze.at(i).length(), fraze.at(i)) == 0){\n\t\t\t\t\tif(Abeceda(txt.at(j-1))==false && Abeceda(txt.at(j+fraze.at(i).length()))==false)\n\t\t\t\t\t{\n\t\t\t\t\t\tIzmijeniRijec(txt, j, fraze.at(i).length());\n\t\t\t\t\t\ttxt.insert(j+fraze.at(i).length(), \"ay\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn txt;\n}\n\nint main ()\n{\n\tstd::cout << \"Unesite recenicu: \";\n\tstd::string txt;\n\tstd::getline(std::cin, txt);\n\tstd::cout << \"Unesite fraze: \";\n\tstd::vector<std::string> fraze;\n\tstd::string temp;\n\tdo{\n\t\tstd::getline(std::cin, temp);\n\t\tif(!temp.empty()) fraze.push_back(temp);\n\t}while(!temp.empty());\n\ttry{\n\t\tstd::string pig(IzmijeniUPigLatin(txt, fraze));\n\t\tstd::cout << \"Recenica nakon PigLatin transformacije: \" << pig << std::endl;\n\t}catch(std::domain_error izuzetak){\n\t\tstd::cout << \"Izuzetak: \" << izuzetak.what()<<std::endl;\n\t}\n\t\tstd::string obr(ObrniFraze(txt, fraze));\n\t\tstd::cout << \"Recenica nakon obrtanja fraza: \" << obr << std::endl;\n\treturn 0;\n}"
    },
    "111": {
        "label": "0",
        "student3866": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\nint dva_od_tri(int n1[], int v1, int n2[], int v2, int n3[], int v3)\n{\n\tint br=0, i1, i2, i3, j1, j2;\n\n\tfor (i1=0; i1<v1; i1++) {\n\t\tbool nadjen1=false, nadjen2=false, nadjen3=false;\n\n\t\tfor (j1=0; j1<i1; j1++)\n\t\t\tif(n1[j1]==n1[i1])\n\t\t\t\tnadjen1=true;\n\t\tif(nadjen1) continue;\n\n\t\tfor(i2=0; i2<v2; i2++)\n\t\t\tif(n2[i2]==n1[i1])\n\t\t\t\tnadjen2=true;\n\n\t\tfor (i3=0; i3<v3; i3++)\n\t\t\tif(n3[i3]==n1[i1])\n\t\t\t\tnadjen3=true;\n\n\t\tif((nadjen2 && !nadjen3) || (!nadjen2 && nadjen3))\n\t\t\tbr++;\n\t}\n\n\tfor (i2=0; i2<v2; i2++) {\n\t\tbool nadjen1=false, nadjen2=false, nadjen3=false;\n\n\t\tfor (j2=0; j2<i2; j2++) \n\t\t\tif(n2[j2]==n2[i2])\n\t\t\t\tnadjen2=true;\n\t\t\tif(nadjen2) continue;\n\n\t\t\tfor(i1=0; i1<v1; i1++)\n\t\t\t\tif(n1[i1]==n2[i2])\n\t\t\t\t\tnadjen1=true;\n\t\t\tif(nadjen1) continue;\n\n\t\t\tfor(i3=0; i3<v3; i3++)\n\t\t\t\tif(n3[i3]==n2[i2]&& !nadjen3)\n\t\t\t\t\tnadjen3=true;\n\n\t\t\tif (nadjen3)  br++;\n\n\t\t}\n\t\treturn br;\n\t}\n\tint main()\n\t{\n\t\t\n\t\treturn 0;\n\t}\n",
        "student9981": "#include <stdio.h>\nint dva_od_tri(int *a,int a1,int *b, int b1, int *c,int c1){\n\tint niz[10]={0,0,0,0,0,0,0,0,0,0};\n\tint niz1[10]={0,0,0,0,0,0,0,0,0,0};\n\tint i,j,k;\n\tint brojac=0;\n\tfor(i=0;i<a1;i++){\n\t\tfor(j=0;j<10;j++){\n\t\t\tif(a[i]==j && niz1[j]==0){ \n\t\t\tniz[j]++;\n\t\t\tniz1[j]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<10;i++) niz1[i]=0;\n\tfor(i=0;i<b1;i++){\n\t\tfor(j=0;j<10;j++){\n\t\t\tif(b[i]==j && niz1[j]<1){ \n\t\t\tniz[j]++;\n\t\t\tniz1[j]++;\n\t\t\tbreak;\t\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<10;i++) niz1[i]=0;\n\tfor(i=0;i<c1;i++){\n\t\tfor(j=0;j<10;j++){\n\t\t\tif(c[i]==j && niz1[j]<1){\n\t\t\tniz[j]++;\n\t\t\tniz1[j]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(k=0;k<10;k++){\n\t\tif(niz[k]==2) brojac++;\n\t}\n\treturn brojac;\n}\nint main() {\nint niz1[] = {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2};\nint niz2[] = {3, 3, 3, 2, 2};\nint niz3[] = {1, 3, 4};\nint rez = dva_od_tri(niz1, 11, niz2, 5, niz3, 3);\nprintf(\"%d \", rez);\nrez = dva_od_tri(niz1, 11, niz1, 11, niz1, 3);\nprintf(\"%d \", rez);\nrez = dva_od_tri(niz1, 11, niz1, 11, niz1, 11);\nprintf(\"%d \", rez);\n}\n"
    },
    "112": {
        "label": "1",
        "student1915": "#include <stdio.h>\nint main() {\n\tint n, i, j;\n\tt : printf(\"Unesite broj n: \");\n\tscanf(\"%d\", &n);\n\tif(n<1 || n>50) \n\t{ printf(\"Pogresan unos \\n\");\n\tgoto t ;\n\t}\n\telse if(n==1) \n\tprintf(\"***\");\n\telse {\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(j=1;j<=4*n-3;j++)\n\t\t\t{\n\t\t\t\tif(j==i || j==2*n+i-2 || j+i==2*n ||j+i==4*n-2)\n\t\t\t\tprintf(\"*\");\n\t\t\t\telse printf(\" \");\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\n\tprintf(\"\\n\");\n\t\n\t}\n\n\treturn 0;\n}\n",
        "student4959": "#include <stdio.h>\n\nint main() {\n\tint n,i,j;\n\tt : printf(\"Unesite broj n: \");\n\tscanf(\"%d\",&n);\n\tif(n<1 || n>50) {printf(\"Pogresan unos \\n\");\n\t\tgoto t;\n\t}\n\telse if (n==1) printf(\"***\");\n\telse { for(i=1;i<=n;i++){\n\t\tfor(j=1;j<=4*n-3;j++){\n\t\t\tif( j==i || j==2*n+i-2 ||  j+i==2*n  || j+i==4*n-2 )\n\t\t\tprintf(\"*\");\n\t\t\telse printf(\" \");\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\t\n\t}\n\t\n\treturn 0;\n}\n"
    },
    "113": {
        "label": "0",
        "student2463": "#include <stdio.h>\n\nint main() {\n\tint Brc=0, Brb=0, Brs=0, Brv=0, Brp=0;\n\tchar Auto;\n\tfloat PC, PB, PS, PV, PP, Ukupno;\n\t\n\tprintf(\"Unesite vozila: \");\n\n\tdo{\n\t\tscanf(\"%c\", &Auto);\n\tif(Auto=='c' || Auto=='C') \n\tBrc++;\n\telse if (Auto=='b' || Auto=='B') \n\tBrb++;\n\telse if (Auto=='s' || Auto=='S') \n\tBrs++;\n\telse if (Auto=='v' || Auto=='V') \n\tBrv++;\n\telse if (Auto=='p' || Auto=='P') \n\tBrp++;\n\telse if(Auto=='K'|| Auto=='k')\n\t  break;\n\telse\n\t\tprintf(\"Neispravan unos\\n\"); }\n\twhile(Auto!='K' && Auto!='k');\n\n    Ukupno= Brc+Brb+Brs+Brv+Brp;\n\tprintf(\"Ukupno evidentirano %g vozila.\\n\", Ukupno);\n\t\n\tif(Ukupno==0) \n\t\tprintf(\"Najpopularnija boja je crna (0.00%%).\");\n\telse if(Brc>=Brb && Brc>=Brs && Brc>=Brv && Brc>=Brp)\n\t{\n\t\tPC=Brc*100/Ukupno;\n\t\tprintf(\"Najpopularnija boja je crna (%.2f%%).\", PC);\n\t}\n    else if(Brb>=Brc && Brb>=Brs && Brb>=Brv && Brb>=Brp)\n\t{\n\t\tPB=Brb*100/Ukupno;\n\t\tprintf(\"Najpopularnija boja je bijela (%.2f%%).\", PB);\n\t}\n\t else if(Brs>=Brc && Brs>=Brb && Brs>=Brv && Brs>=Brp)\n\t{\n\t \tPS=Brs*100/Ukupno;\n\t\tprintf(\"Najpopularnija boja je siva (%.2f%%).\", PS);\n\t}\n\telse if(Brv>=Brc && Brv>=Brb && Brv>=Brs && Brv>=Brp)\n\t{\n\t\tPV=Brv*100/Ukupno;\t\n\t\tprintf(\"Najpopularnija boja je crvena (%.2f%%).\", PV);\n\t}\n\telse if(Brp>=Brc && Brp>=Brb && Brp>=Brs && Brp>=Brv)\n\t{\n\t\tPP=Brp*100/Ukupno;\n\t\tprintf(\"Najpopularnija boja je plava (%.2f%%).\", PP);\n\t}\n\treturn 0;\n}\n",
        "student3288": "#include <stdio.h>\n\nint main() {\n\tint c1=0, b1=0, s1=0, v1=0, p1=0, brojac=0; \n\tdouble cr=0, bi=0, si=0, crv=0, pl=0;\n\tchar voz=0;\n\tprintf(\"Unesite vozila: \");\n\twhile(voz!='k' && voz!='K'){\n\t\tscanf(\"%c\",&voz);\n\t\tif(voz=='c' || voz=='C'){\n\t\t\tc1++;\n\t\t}\n\t\telse if(voz=='b' || voz=='B'){\n\t\tb1++;\n\t\t}\n\t\telse if(voz=='s' || voz=='S'){\n\t\ts1++;\n\t\t}\n\t\telse if(voz=='v' || voz=='V'){\n\t\tv1++;\n\t\t}\n\t\telse if(voz=='p' || voz=='P'){\n\t\tp1++;\n\t\t}\n\t\telse if(voz=='k' || voz=='K')\n\t\tbreak; \n\t\telse {\n\t\tprintf(\"Neispravan unos\\n\");\n\t\tbrojac--;\n\t\t}\n\t\t\t\tbrojac++;\n\t}\nprintf(\"Ukupno evidentirano %d vozila.\\n\", brojac);\ncr=((float)c1/brojac)*100;\nbi=((float)b1/brojac)*100;\nsi=((float)s1/brojac)*100;\ncrv=((float)v1/brojac)*100;\npl=((float)p1/brojac)*100;\nif(brojac==0){\n\tprintf(\"Najpopularnija boja je crna (0.00%%).\");\n} else if(c1>=b1 && c1>=s1 && c1>=v1 && c1>=p1){\n\tprintf(\"Najpopularnija boja je crna (%.2f%%).\",cr);\n} else if(b1>c1 && b1>=s1 && b1>=v1 && b1>=p1){\n\tprintf(\"Najpopularnija boja je bijela (%.2f%%).\",bi);\n} else if(s1>c1 && s1>b1 && s1>=v1 && s1>=p1){\n\tprintf(\"Najpopularnija boja je siva (%.2f%%).\",si);\n} else if(v1>c1 && v1>s1 && v1>s1 && v1>=p1){\n\tprintf(\"Najpopularnija boja je crvena (%.2f%%).\",crv);\n} else if(p1>c1 && p1>s1 && p1>v1 && p1>s1){\n\tprintf(\"Najpopularnija boja je plava (%.2f%%).\",pl);\n}\nreturn 0;\n}\n"
    },
    "114": {
        "label": "1",
        "student4377": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cstring>\n#include <stdexcept>\n\nint PotencijalniKrivci(char **&a, std::vector<std::string> string)\n{\n\tint brojac(0);\n\ttry\n\t{\n\t\ta = new char* [string.size()];\n\t\tfor(int i=0; i<string.size(); i++)\n\t\t{\n\t\t\ta[i] = new char[string[i].size()+1];\n\t\t\tbrojac++;\n\t\t}\n\t\tfor(int i=0; i<string.size(); i++) strcpy(a[i], string[i].c_str());\n\t}\n\tcatch(...)\n\t{\n\t\tfor(int i=0; i<string.size(); i++) delete [] a[i];\n\t\tdelete [] a;\n\t\t\n\t\n\t\tthrow;\n\t}\n\t\n\treturn brojac;\n}\n\nint OdbaciOptuzbu(char **&a, int vel, std::string nevin)\n{\n\tbool logika (true);\n\tfor(int i=0; i<vel; i++)\n\t{\n\t\tif(a[i] == nullptr) continue;\n\t\tif(!strcmp(nevin.c_str(), a[i]))\n\t\t{\n\t\t\tlogika = false;\n\t\t\tdelete [] a[i];\n\t\t\ta[i] = nullptr;\n\t\t}\n\t}\n\tif(logika) throw std::domain_error(\"Osoba sa imenom \" + nevin + \" nije bila optuzena\");\n\t\n\tint brojac(0);\n\tfor(int i=0; i<vel; i++)\n\t{\t\n\t\tif(a[i] == nullptr) brojac++;\n\t}\n\t\n\tif(brojac > 10)\n\t{\n\t\tchar **a2 = nullptr;\n\t\ttry\n\t\t{\n\t\t\ta2 = new char* [vel-brojac];\n\t\t\tint index(0);\n\t\t\tfor(int i=0; i<vel; i++)\n\t\t\t{\t\n\t\t\t\tif(a[i] == nullptr) continue;\n\t\t\t\ta2[index] = a[i];\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tdelete []a;\n\t\t\ta = a2;\n\t\t}\n\t\tcatch(...){\t}\n\t}\n\treturn vel;\n}\n\n\nint DodajOptuzbu(char **&a, int vel, std::string kriv)\n{\n\tchar *ime = nullptr;\n\ttry\n\t{\n\t\time = new char[kriv.size()+1];\n\t\tstrcpy(ime, kriv.c_str());\n\t\t\n\t\tbool stao(false);\n\t\tfor(int i=0; i<vel; i++)\n\t\t{\n\t\t\tif(a[i] == nullptr)\n\t\t\t{\n\t\t\t\ta[i] = ime;\n\t\t\t\tstao = true;\n\t\t\t}\n\t\t}\n\t\tif(!stao)\n\t\t{\n\t\t\tvel++;\n\t\t\tchar **a2 = new char*[vel];\n\t\t\tfor(int i=0; i<vel-1; i++)\n\t\t\t{\n\t\t\t\ta2[i] = a[i];\n\t\t\t}\n\t\t\ta2[vel-1] = ime;\n\t\t\tdelete [] a;\n\t\t\ta = a2;\n\t\t}\n\t}\n\tcatch(...)\n\t{\n\t\t\n\t\tthrow;\n\t}\n\treturn vel;\n}\n\nvoid IzlistajOptuzbu(char **a, int vel)\n{\n\tfor(int i=0; i<vel; i++) \n \t{\n \t\tif(a[i] == nullptr) continue;\n \t\tstd::cout << a[i];\n \t\tstd::cout << std::endl;\n \t}\n}\n\n\nint  main()\n{\n\tstd::cout << \"Koliko potencijalnih krivaca zelite unijeti? \";\n\tint n;\n\tstd::cin >> n;\n\tstd::cin.ignore(10000, '\\n');\n\tstd::vector<std::string> imena(n);\n\t\n\tstd::cout << \"\\nUnesite potencijalne krivce: \";\n\tfor(int i=0; i<n; i++)\n\t{\n\t\tstd::getline(std::cin, imena[i]);\n\t}\n\t\n\t//char **a (nullptr);\n\tchar **b (nullptr);\n\t\n\tint vel(0);\n\tvel = PotencijalniKrivci(b, imena);\n\t\n\tchar **a (b);\n\t\t\n\tfor(;;)\n\t{\n\t\tstd::cout << \"\\nOdaberite opciju: 1 za unos novog optuzenog, 2 za brisanje nekog optuzenog 3 za izlistavanje optuzenih, 0 za kraj: \";\n\t\tint n;\n\t\tstd::cin >> n;\n\t\tstd::cin.ignore(10000, '\\n');\n\t\t\n\t\tif(n==0)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse if(n==1)\t\n\t\t{\n\t\t\tstd::cout << \"\\nUnesite ime novog optuzenog: \";\n\t\t\tstd::string ime;\n\t\t\tstd::getline(std::cin, ime);\n\t\t\tvel = DodajOptuzbu(a, vel, ime);\n\t\t}\t\n\t\telse if(n==2) \n\t\t{\n\t\t\tstd::cout << \"\\nUnesite ime koje zelite izbaciti: \";\n\t\t\tstd::string ime;\n\t\t\tstd::getline(std::cin, ime);\n\t\t\tvel = OdbaciOptuzbu(a, vel, ime);\n\t\t}\t\n\t\telse if(n==3)\n\t\t{\n\t\t\tstd::cout << std::endl;\n\t\t\tIzlistajOptuzbu(a, vel);\n\t\t}\n\t}\n\t\n\tfor(int i=0; i < vel; i++) delete [] a[i];\n\tdelete [] a;\n\t\n\treturn 0;\n}\n\n\nint main2 ()\n{\n\tstd::vector<std::string> st = {\"benjo\", \"tarzan\", \"betmen\", \"supermen\", \"spajdermen\", \"benjo\", \"ranko\"};\n\tchar **a =nullptr;\n\tint vel = PotencijalniKrivci(a, st);\n\t\n\t\n\tstd::cout << std::endl;\n\t\n \t\n \tstd::string nevin = {\"spajdermen\"};\n \tvel = OdbaciOptuzbu(a, vel, nevin);\n \t\n \tstd::string kriv = {\"hulk\"};\n \tvel = DodajOptuzbu(a, vel, kriv);\n \t\n \tkriv = {\"nidal\"};\n \tvel = DodajOptuzbu(a, vel, kriv);\n \t\n\tIzlistajOptuzbu(a, vel);\n \t\n\treturn 0;\n}",
        "student6631": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 4\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Ivona Ivkovic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: iivkovic2@etf.unsa.ba\n*/\n#include <iostream>\n#include <vector>\n#include <new>\n#include <string>\n#include <cstring>\n#include <stdexcept>\n\nint PotencijalniKrivci(char **&a, std::vector<std::string> string){\n\tint vel(0);\n\ta=nullptr;\n\ttry{\n\t\ta=new char* [string.size()];\n\t\tfor(int i=0;i<string.size();i++){\n\t\t\ta[i]=new char[string[i].size()+1];\n\t\t\tvel++;\n\t\t}\n\t\tfor(int i=0;i<string.size();i++){\n\t\t\tstrcpy(a[i],string[i].c_str());\n\t\t}\n\t}\n\tcatch(std::bad_alloc){\n\t\tfor(int i = 0; i < string.size(); i++) delete[] a[i];\n\t\tdelete[] a;\n\t\tthrow;\n\t}\n\treturn vel;\n}\n\nint OdbaciOptuzbu(char **&a, int vel, std::string string){\n\tbool nijenaspisku(true);\n\tfor(int i=0;i<vel;i++){\n\t\tif(a[i]==nullptr)continue;\n\t\t\tif(!strcmp(string.c_str(),a[i])){\n\t\t\t\tnijenaspisku=false;\n\t\t\t\tdelete[] a[i];\n\t\t\t\ta[i]=nullptr;\n\t}\n\t}\n\tif(nijenaspisku){\n\t\tthrow std::domain_error(\"Osoba sa imenom \"+string+\" nije bila optuzena\");\n\t}\n\t\n\tint brojac(0);\n\tfor(int i=0;i<vel;i++){\n\t\tif(a[i]==nullptr) brojac++;\n\t}\n\t\n\tif(brojac>10){\n\t\tchar** novi=nullptr;\n\t\ttry{\n\t\t\tnovi=new char* [vel-brojac];\n\t\t\tint red_br(0);\n\t\t\t\t\n\t\t\tfor(int i=0;i<vel;i++){\n\t\t\t\tif(a[i]==nullptr) continue;\n\t\t\t\tnovi[red_br]=a[i];\n\t\t\t\tred_br++;\n\t\t}\t\n\t\tdelete[] a;\n\t\t\ta=novi;\n\t\t\t}\t\n\t\tcatch(...){\n\t\t\tthrow;\n\t\t}\n\t}\n\t\nreturn vel;\n}\n\nint DodajOptuzbu(char **&a, int vel, std::string string){\n\tchar* ime=nullptr;\n\n\ttry{\n\time=new char[string.size()+1];\n\tstrcpy(ime, string.c_str());\n\t\n\tbool imanull(false);\n\tfor(int i=0;i<vel;i++){\n\t\tif(a[i]==nullptr) {\n\t\t\ta[i]=ime;\n\t\t\timanull=1;\n\t}\n\t}\n\t\n\tif(!imanull){\n\t\tvel++;\n\t\tchar** novi=new char*[vel];\n\n\t\tfor(int i=0;i<vel-1;i++){\n\t\t\tnovi[i]=a[i];\n\t\t}\n\t\tnovi[vel-1]=ime;\n\t\tdelete[] a;\n\t\ta=novi;\n\t\n\t}}\n\tcatch(...){throw;}\n\treturn vel;\n}\n\nvoid IzlistajOptuzbu(char **a, int vel){\n\tfor(int i=0;i<vel;i++){\n\t\tif(a[i]==nullptr)continue;\n\t\telse std::cout<<a[i]<<std::endl;\n\t}\n}\n\n\nint main ()\n{\n\tstd::cout<<\"Koliko potencijalnih krivaca zelite unijeti?\"<<std::endl;\n\tint broj_krivaca;\n\tstd::cin>>broj_krivaca;\n\tchar** a=nullptr;\n\tstd::vector<std::string> string;\n\tstd::cout<<\"Unesite potencijalne krivce: \\n\";\n\tstd::string ime;\n\tstd::cin.ignore(10000, '\\n');\n\tfor(int i=0;i<broj_krivaca;i++){\n\t\tstd::getline(std::cin, ime);\n\t\tstring.push_back(ime);\n\t}\n\tint velicina(PotencijalniKrivci(a,string));\n\tchar** nova(a);\n\tint opcija;\n\tdo{\n\tstd::cout<<\"Odaberite opciju: 1 za unos novog optuzenog, 2 za brisanje nekog optuzenog 3 za izlistavanje optuzenih, 0 za kraj:\"<<std::endl;\n\tstd::cin>>opcija;\n\t\n\tswitch(opcija){\n\t\tcase 0: break;\n\t\tcase 1:{\n\t\t\tstd::cout<<\"Unesite ime novog optuzenog: \"<<std::endl;\n\t\t\tstd::string novi;\n\t\t\tstd::cin.ignore(10000, '\\n');\n\t\t\tstd::getline(std::cin, novi);\n\t\t\tvelicina=DodajOptuzbu(nova,velicina,novi);\n\t\t\tbreak;\n\t\t}\n\t\tcase 2:{\n\t\t\tstd::cout<<\"Unesite ime koje zelite izbaciti: \"<<std::endl;\n\t\t\tstd::string novi2;\n\t\t\tstd::cin.ignore(10000, '\\n');\n\t\t\tstd::getline(std::cin, novi2);\n\t\t\ttry{\n\t\t\tvelicina=OdbaciOptuzbu(nova,velicina,novi2);\n\t\t\t}\n\t\t\tcatch(std::domain_error msg){\n\t\t\t\tstd::cout<<msg.what()<<std::endl;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 3:{ \n\t\t\tIzlistajOptuzbu(nova,velicina);\n\t\t\tbreak;\n\t\t}\n\t}}\n\twhile(opcija!=0);\n\t\n\tfor(int i=0;i<velicina;i++) delete[] nova[i];\n\tdelete[] nova;\n\t\n\treturn 0;\n}"
    },
    "115": {
        "label": "0",
        "student8631": "#include <stdio.h>\n#include <ctype.h>\n\nint provjeri(char *s){\n\tchar *p=s; int i;\n\tchar niz[100][100]={{\"\\0\"}}; // matrica\n\tint velicina=0; \n\t\n\twhile (*p!='\\0') {\n\t\tif(*p=='<'){ \tp++; \n\t\t// ako nismo na kraju i nismo na /\n\t\t\tif(*p!='\\0' && *p!='/'){\n\t\t\t\tchar *c=niz[velicina], *c2=niz[velicina];\n\t\t\t\t\n\t\t\t\twhile (*p!='\\0'&&(*p!=' ' && *p!='>')) {\n\t\t\t\t\t(*c++)=tolower(*p++); //ovdje smjestimo taj stingu u c da dole mozemo porediti\n\t\t\t\t}\n\t\t\t\t*c='\\0'; //moze i bez ovoga \n\t\t\t\t\n\t\t\t\tvelicina++;// na kraju kad smjestimo taj string stavimo \\0 da je kraj stringa \n\t\t\t} \n\t\t\t//ako nismo na kraju i ako je \n\t\t\t\n\t\t\telse if(*p!='\\0' && *p=='/'){\n\t\t\tif(velicina==0) return 0; // ako nismo nista upisali nego je npr odmah stoji / \n\t\t\tchar *c=niz[velicina-1]; \n\t\t\t\n\t\t//\tprintf(\"pa ovo %s\", c);\n\t\t\tint isti=1; \n\t\t\tif(*p!='\\0')   p++;  //preskacem ovo '/'\n\t\t\tif(*p==' ' || *p=='>') return 0; \n\t\t\t\t \n\t\t\twhile (*p!='\\0' && (*p!=' ' && *p!='>')) {\n\t\t\t\t \tif(*c!=tolower(*p)) isti=0; \n\t\t\t\t \tc++; p++; \n\t\t\t\t \tif(*c=='\\0')  break; //Ako je div </divota> treba biti 0 jer nije tacno\n\t\t\t\t }\n\t\t\tif(isti==1 && (*p==' ' || *p=='>')) velicina--;\n\t\t\telse return 0; \n\t\t\t}\n\t\t\t\n\t\t} \n\tif(*p=='\\0') break; // ako nsmo nasli nikad otvoreno <\n\tp++;\n\t}\n\t//for(i=0; i<velicina; i++)\n\tif(velicina==0) return 1; \n\treturn 0; \n}\n\n\nint main() {\n\t\nprintf (\" %d\\n\", provjeri (\" \"));\n\n\treturn 0;\n}\n",
        "student9105": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nvoid unesi(char niz[], int velicina)\n{\n\tchar znak = getchar();\n\tif (znak == '\\n') znak=getchar();\n\tint i = 0;\n\twhile (i < velicina-1 && znak != '\\n') {\n\t\tniz[i] = znak;\n\t\ti++;\n\t\tznak = getchar();\n\t}\n\tniz[i]='\\0';\n}\nstruct stack_entry {\n\tchar *data;\n\tstruct stack_entry* next;\n};\n\nstruct stack_t {\n\tstruct stack_entry* head;\n};\n\nstruct stack_t\n*newstack(void)\n{\n\tstruct stack_t*stack=malloc(sizeof *stack);\n\tif(stack) {\n\t\tstack->head=NULL;\n\n\t}\n\treturn stack;\n}\n\nchar*copystring(char* str){\n\tchar *tmp=malloc(strlen(str)+1);\n\tif(tmp)\n\tstrcpy(tmp,str);\n\treturn tmp;\n}\n\nvoid push(struct stack_t *thestack, char* value){\n\tstruct stack_entry *entry=malloc(sizeof *entry);\n\tif(entry){\n\t\tentry->data=copystring(value);\n\t\tentry->next=thestack->head;\n\t\tthestack->head=entry;\n\t}\n}\n\nchar* top(struct stack_t *thestack){\n\tif(thestack && thestack->head)\n\treturn thestack->head->data;\n\telse \n\treturn NULL;\n}\n\nvoid pop(struct stack_t *thestack){\n\tif(thestack->head!=NULL){\n\t\tstruct stack_entry*tmp=thestack->head;\n\t\tthestack->head=thestack->head->next;\n\t\tfree(tmp->data);\n\t\tfree(tmp);\n\t}\n}\n\nvoid clear(struct stack_t *thestack){\n\twhile(thestack->head!=NULL)\n\tpop(thestack);\n}\n\nvoid destroystack(struct stack_t **thestack)\n{\n  clear(*thestack);\n  free(*thestack);\n  *thestack = NULL;\n}\n\nint provjeri(char *htmlkod)\n{\n\tchar tag[100];\n\n\tstruct stack_t *thestack=newstack();\n\tint i=0,zatvorentag=0,j=0,d=0, k=0, m=0;\n\t\t\n\tfor(i=0; i<strlen(htmlkod); i++) {\n\t\tif(htmlkod[i]=='<') {\n\t\t\tif(htmlkod[i+1]=='/')\n\t\t\t\tzatvorentag=1;\n\t\t\telse\n\t\t\t\tzatvorentag=0;\n\t\t\tj=0;\n\t\t\tif(htmlkod[i+1] == '>') return 0;\n\t\t\twhile(htmlkod[i+1+j]!='>') {\n\t\t\t\tif(htmlkod[i+1+j]==' ') break;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif(j>0) {\n\t\t\t\tmemset(&tag[0],0,sizeof(tag));\n\t\t\t\td=0;\n\t\t\t\tif(zatvorentag)\n\t\t\t\t\tj--;\n\t\t\t\twhile(d<j) {\n\t\t\t\t\n\t\t\t\t\t       if(zatvorentag)\n\t\t\t\t\t\t      tag[d]= htmlkod[i+d+2];\n\t\t\t\t\telse\n\t\t\t\t\t\ttag[d]=\thtmlkod[i+d+1];\n\t\t\t\t\td++;\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(zatvorentag){\n\t\t\t\t\n\t\t\t\tchar *data;\n\t\t\t\tdata=top(thestack);\n\t\t\t for(k=0; k < strlen(data); k++){\n\t\t\t\tdata[k]=data[k]>0x40&&data[k]<0x5b?data[k]|0x60:data[k];\n\t\t\t}\n\t\t\t\tfor (m = 0; m < strlen(tag); m++) {\n            tag[m] = tag[m] > 0x40 && tag[m] < 0x5b ? tag[m] | 0x60 : tag[m];\n          }\n\t\t\t\tif(strcmp(data,tag)==0) {\n\t\t\t\t\tpop(thestack);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t  clear(thestack);\n\t\t\t\t  destroystack(&thestack);\n\t\t\t\t  char *data =  0;\n\t\t\t\t  return 0;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\tpush(thestack,tag);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(thestack->head==NULL) {\n\t\t\t\t  clear(thestack);\n\t\t\t\t\t  destroystack(&thestack);\n\t\t\treturn 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t  clear(thestack);\n\t\t\t\t  destroystack(&thestack);\n\t\t\treturn 0;\n\t\t\t}\n}\nint main()\n{\n\tchar x[100];\n\tint a;\n\tprintf(\"Unesite velicinu stringa: \");\n\tscanf(\"%d\", &a);\n\tprintf(\"Unesite html kod: \");\n\tunesi(x,a);\n\tprintf(\"%d\", provjeri(x));\n\treturn 0;\n}"
    },
    "116": {
        "label": "1",
        "student5162": "/\u0001B\u0002 2016/2017, Zada\u0107a 4, Zadatak 1\n//Napomena: testovi ce biti dostupni dan pred rok!\n#include <iostream>\n#include <cmath>\n#include <stdexcept>\n#include <utility>\n#include <limits>\n#include <memory>\n#include <vector>\n#include <algorithm>\n\n\nconst double eps=std::numeric_limits<double>::epsilon();\nconst double pi=std::atan(1)*4;\ntypedef std::pair<double, double> Tacka;\n\ndouble UdaljenostTacaka(const Tacka &t1, const Tacka &t2){\n    return std::sqrt((t2.first-t1.first)*(t2.first-t1.first) + (t2.second-t1.second)*(t2.second-t1.second));\n}\ndouble S(const Tacka &t1, const Tacka &t2, const Tacka &t3){\n    return t1.first+(t2.second-t3.second)-t2.first*(t3.second-t1.second)-t3.first*(t1.second-t2.second);\n}\nclass Trougao{\n    Tacka t1, t2, t3;\n    public:\n    Trougao(const Tacka &t1, const Tacka &t2, const Tacka &t3);\n    void Postavi(const Tacka &t1, const Tacka &t2, const Tacka &t3);\n    void Postavi(int indeks, const Tacka &t);\n    static int Orijentacija(const Tacka &t1, const Tacka &t2, const Tacka &t3){\n        if(S(t1, t2, t3)>0) return 1;\n        else if (S(t1, t2, t3)<0) return -1;\n        else return 0;\n    }\n    \n        Tacka DajTjeme(int indeks) const;\n        double DajStranicu(int indeks) const;\n        double DajUgao(int indeks) const;\n        Tacka DajCentar() const;\n        double DajObim() const;\n        double DajPovrsinu() const;\n        bool DaLiJePozitivnoOrijentiran() const { return Orijentacija(t1,t2,t3)==1; }\n        bool DaLiJeUnutra(const Tacka &t) const;\n        void Ispisi() const;\n        void Transliraj(double delta_x, double delta_y);\n        void Centriraj(const Tacka &t);\n        void Rotiraj(const Tacka &t, double ugao);\n        void Skaliraj(const Tacka &t, double faktor);\n        void Rotiraj(double ugao);\n        void Skaliraj(double faktor);\n        friend bool DaLiSuIdenticni(const Trougao &t1, const Trougao &t2);\n        friend bool DaLiSuPodudarni(const Trougao &t1, const Trougao &t2);\n        friend bool DaLiSuSlicni(const Trougao &t1, const Trougao &t2);\n};\nbool DaLiSuIdenticni(const Trougao &t1, const Trougao &t2){\n    if((t1.t1==t2.t1) || (t1.t1==t2.t2) || (t1.t1==t2.t3))\n        if((t1.t2==t2.t1) || (t1.t1==t2.t2) || (t1.t2==t2.t3))\n            if((t1.t3==t2.t1) || (t1.t3==t2.t2) || (t1.t3==t2.t3))\n                return true;\n    return false;\n}\nbool DaLiSuPodudarni(const Trougao &t1, const Trougao &t2){\n    if(t1.DajStranicu(1)==t2.DajStranicu(1))\n        if(t1.DajStranicu(2)==t2.DajStranicu(2))\n            if(t1.DajStranicu(3)==t2.DajStranicu(3))\n                return true;\n     if(t1.DajStranicu(1)==t2.DajStranicu(2))\n        if(t1.DajStranicu(2)==t2.DajStranicu(3))\n            if(t1.DajStranicu(3)==t2.DajStranicu(1))\n                return true;\n     if(t1.DajStranicu(1)==t2.DajStranicu(3))\n        if(t1.DajStranicu(2)==t2.DajStranicu(1))\n            if(t1.DajStranicu(3)==t2.DajStranicu(2))\n                return true;\n    return false;\n}\nbool DaLiSuSlicni(const Trougao &t1, const Trougao &t2){\n    double a1, b1, c1, a2, b2, c2;\n    if(t1.DajStranicu(1)>t1.DajStranicu(2) && t1.DajStranicu(1)>t1.DajStranicu(3)){\n        a1=t1.DajStranicu(1);\n        if(t1.DajStranicu(2)>t1.DajStranicu(3)){\n            b1=t1.DajStranicu(2);\n            c1=t1.DajStranicu(3);\n        }\n        else {\n            b1=t1.DajStranicu(3);\n            c1=t1.DajStranicu(2);\n        }\n    }\n    else if(t1.DajStranicu(2)>t1.DajStranicu(1) && t1.DajStranicu(2)>t1.DajStranicu(3)){\n        a1=t1.DajStranicu(2);\n        if(t1.DajStranicu(1)>t1.DajStranicu(3)){\n            b1=t1.DajStranicu(1);\n            c1=t1.DajStranicu(3);\n        }\n        else {\n            b1=t1.DajStranicu(3);\n            c1=t1.DajStranicu(1);\n        }\n    }\n    else {\n        a1=t1.DajStranicu(3);\n        if(t1.DajStranicu(1)>t1.DajStranicu(2)){\n            b1=t1.DajStranicu(1);\n            c1=t1.DajStranicu(2);\n        }\n        else{\n            b1=t1.DajStranicu(2);\n            c1=t1.DajStranicu(1);\n        }\n    }\n    \n    if(t2.DajStranicu(1)>t2.DajStranicu(2) && t2.DajStranicu(1)>t2.DajStranicu(3)){\n        a2=t2.DajStranicu(1);\n        if(t2.DajStranicu(2)>t2.DajStranicu(3)){\n            b2=t2.DajStranicu(2);\n            c2=t2.DajStranicu(3);\n        }\n        else {\n            b2=t2.DajStranicu(3);\n            c2=t2.DajStranicu(2);\n        }\n    }\n    else if(t2.DajStranicu(2)>t2.DajStranicu(1) && t2.DajStranicu(2)>t2.DajStranicu(3)){\n        a2=t2.DajStranicu(2);\n        if(t2.DajStranicu(1)>t2.DajStranicu(3)){\n            b2=t2.DajStranicu(1);\n            c2=t2.DajStranicu(3);\n        }\n        else {\n            b2=t2.DajStranicu(3);\n            c2=t2.DajStranicu(1);\n        }\n    }\n    else {\n        a2=t2.DajStranicu(3);\n        if(t2.DajStranicu(1)>t2.DajStranicu(2)){\n            b2=t2.DajStranicu(1);\n            c2=t2.DajStranicu(2);\n        }\n        else{\n            b2=t2.DajStranicu(2);\n            c2=t2.DajStranicu(1);\n        }\n    }\n    \n    if(a1/a2==(int)(a1/a2) && b1/b2== (int)(b1/b2) && c1/c2==(int)(c1/c2)) return true;\n    return false;\n}\nvoid Trougao::Rotiraj(double ugao){\n    this->Rotiraj(this->DajCentar(), ugao);\n}\nvoid Trougao::Skaliraj(const Tacka &t, double faktor) {\n    if(faktor==0) throw std::domain_error(\"Nekorektan faktor skaliranja\");\n    t1.first=t.first+faktor*(t1.first-t.first);\n    t1.second=t.second+faktor*(t1.second-t.second);\n    t2.first=t.first+faktor*(t2.first-t.first);\n    t2.second=t.second+faktor*(t2.second-t.second);\n    t3.first=t.first+faktor*(t3.first-t.first);\n    t3.second=t.second+faktor*(t3.second-t.second);\n}\nvoid Trougao::Centriraj(const Tacka &t){\n    Tacka temp=this->DajCentar();\n    this->Transliraj(t.first-temp.first, t.second-temp.second);\n}\nvoid Trougao::Rotiraj(const Tacka &t, double ugao){\n    t1.first=t.first+(t1.first-t.first)*std::cos(ugao)-(t1.second-t.second)*std::sin(ugao);\n    t1.second=t.second+(t1.first-t.first)*std::sin(ugao)-(t1.second-t.second)*std::cos(ugao);\n    t2.first=t.first+(t2.first-t.first)*std::cos(ugao)-(t2.second-t.second)*std::sin(ugao);\n    t2.second=t.second+(t2.first-t.first)*std::sin(ugao)-(t2.second-t.second)*std::cos(ugao);\n    t3.first=t.first+(t3.first-t.first)*std::cos(ugao)-(t3.second-t.second)*std::sin(ugao);\n    t3.second=t.second+(t3.first-t.first)*std::sin(ugao)-(t3.second-t.second)*std::cos(ugao);\n}\nvoid Trougao::Transliraj(double delta_x, double delta_y) {\n    t1.first+=delta_x;\n    t2.first+=delta_x;\n    t3.first+=delta_x;\n    t1.second+=delta_y;\n    t2.second+=delta_y;\n    t3.second+=delta_y;\n}\nvoid Trougao::Ispisi() const{\n    std::cout<<\"((\"<<t1.first<<\",\"<<t1.second<<\"),(\"<<t2.first<<\",\"<<t2.second<<\n    \"),(\"<<t3.first<<\",\"<<t3.second<<\"))\"<<std::endl;\n}\nbool Trougao::DaLiJeUnutra(const Tacka &t) const {\n    if(std::fabs(std::fabs(S(t1,t2,t))/2 + std::fabs(S(t2,t3,t))/2 + std::fabs(S(t3,t1,t))/2 - this->DajPovrsinu())<eps) return true;\n    return false;\n}\ndouble Trougao::DajPovrsinu() const{\n    return std::fabs(S(t1,t2,t3))/2;\n}\ndouble Trougao::DajObim() const {\n    return UdaljenostTacaka(t1,t2) + UdaljenostTacaka(t2,t3) + UdaljenostTacaka(t1,t3);\n}\nTacka Trougao::DajCentar() const{\n    return {(t1.first+t2.first+t3.first)/3, (t1.second+t2.second+t3.second)/3};\n}\ndouble Trougao::DajUgao(int indeks) const{\n    if(indeks<1 || indeks>3) throw std::range_error(\"Nekorektan indeks\");\n    double a=UdaljenostTacaka(t2,t3);\n    double b=UdaljenostTacaka(t1,t3);\n    double c=UdaljenostTacaka(t1,t2);\n    if(indeks==1) return (std::acos((b*b+c*c-a*a)/(2*b*c))*(pi/180));\n    if(indeks==2) return (std::acos((a*a+c*c-b*b)/(2*a*c))*(pi/180));\n    else return (std::acos((a*a+b*b-c*c)/(2*a*b)))*(pi/180);\n}\ndouble Trougao::DajStranicu(int indeks) const {\n    if(indeks<1 || indeks>3) throw std::range_error(\"Nekorektan indeks\");\n    if(indeks==1) return UdaljenostTacaka(t2,t3);\n    if(indeks==2) return UdaljenostTacaka(t1,t3);\n    else return UdaljenostTacaka(t1,t2);\n}\nTacka Trougao::DajTjeme(int indeks) const {\n    if(indeks<1 || indeks>3) throw std::range_error(\"Nekorektan indeks\");\n    if(indeks==1) return t1;\n    else if(indeks==2) return t2;\n    else return t3;\n}\nvoid Trougao::Postavi(int indeks, const Tacka &t){\n    if(indeks<1 || indeks>3) throw std::range_error(\"Nekorektan indeks\");\n    if(indeks==1) t1=t;\n    if(indeks==2) t2=t;\n    else t3=t;\n}\nvoid Trougao::Postavi(const Tacka &t1, const Tacka &t2, const Tacka &t3){\n    if(Orijentacija(t1,t2,t3)==0) throw std::domain_error (\"Nekorektne pozicije tjemena\");\n    this->t1=t1;\n    this->t2=t2;\n    this->t3=t3;\n}\nTrougao::Trougao(const Tacka &t1, const Tacka &t2, const Tacka &t3){\n     if(Orijentacija(t1,t2,t3)==0) throw std::domain_error (\"Nekorektne pozicije tjemena\");\n    this->t1=t1;\n    this->t2=t2;\n    this->t3=t3;\n}\nint main ()\n{\n    int n;\n    std::cout<<\"Koliko zelite kreirati trouglova: \";\n    std::cin>>n;\n    std::vector<std::shared_ptr<Trougao>> v(n);\n    for(int i(0); i<n; i++){\n        try{\n        std::cout<<\"Unesite podatke za \"<<i+1<<\". trougao (x1 y1 x2 y2 x3 y3): \";\n        Tacka t1,t2,t3;\n        std::cin>>t1.first>>t1.second>>t2.first>>t2.second>>t3.first>>t3.second;\n        \n        std::shared_ptr<Trougao> p (std::make_shared<Trougao>(t1, t2, t3));\n        v[i]=p;\n        }\n        catch(std::domain_error e){\n            std::cout<<e.what()<<\". ponovite unos!\"<<std::endl;\n            i--;\n        }\n        \n    }\n    \n    std::cout<<\"Unesite vektor translacije (dx dy): \";\n    double dx, dy;\n    std::cin>> dx >> dy;\n    double ugao;\n    std::cout<<\"Unesite ugao rotacije: \";\n    std::cin>> ugao;\n    double faktor;\n    std::cout<<\"Unesite faktor skaliranja: \";\n    std::cin>>faktor;\n    std::cout<<\"Trouglovi nakon obavljenih transformacija: \"<<std::endl;\n    for(auto x : v) { x->Transliraj(dx, dy); x->Rotiraj(ugao); x->Skaliraj(x->DajTjeme(1), faktor); }\n        \n    for(auto x : v) x->Ispisi();\n    \n    std::cout<<\"Trougao sa najmanjim obimom: \";\n    double obim;\n    std::cout<<\"Parovi identicnih trouglova: \";\n    \n\treturn 0;\n}",
        "student8100": "/\u0001B\u0002 2016/2017, Zada\u0107a 4, Zadatak 1\n//Napomena: testovi ce biti dostupni dan pred rok!\n#include <iostream>\n#include <utility>\n#include <cmath>\n#include <limits>\n#include <stdexcept>\n#include <memory>\n#include <algorithm>\n#include <vector>\n\nconst double eps=std::numeric_limits<double>::epsilon();\nconst double pi=std::atan(1)*4;\n\ntypedef std::pair<double, double> Tacka;\n\ndouble UdaljenostTacaka(const Tacka &t1, const Tacka &t2) {\n    return std::sqrt((t2.first-t1.first)*(t2.first-t1.first)+(t2.second-t1.second)*(t2.second-t1.second));\n}\n\ndouble S(const Tacka &t1, const Tacka &t2, const Tacka &t3) {\n    return t1.first*(t2.second-t3.second)-t2.first*(t1.second-t3.second)+t3.first*(t1.second-t2.second);\n}\n\nclass Trougao{\n    private:\n        Tacka t1,t2,t3;\n    public:\n        Trougao(const Tacka &t1, const Tacka &t2, const Tacka &t3);\n        void Postavi(const Tacka &t1, const Tacka &t2, const Tacka &t3);\n        void Postavi(int indeks, const Tacka &t);\n        static int Orijentacija(const Tacka &t1, const Tacka &t2, const Tacka &t3) {\n            if(S(t1,t2,t3)>0) return 1;\n            else if(S(t1,t2,t3)<0) return -1;\n            else return 0;\n        }\n        Tacka DajTjeme(int indeks) const;\n        double DajStranicu(int indeks) const;\n        double DajUgao(int indeks) const;\n        Tacka DajCentar() const;\n        double DajObim() const;\n        double DajPovrsinu() const;\n        bool DaLiJePozitivnoOrijentiran() const { return Orijentacija(t1,t2,t3)==1; }\n        bool DaLiJeUnutra(const Tacka &t) const;\n        void Ispisi() const;\n        void Transliraj(double delta_x, double delta_y);\n        void Centriraj(const Tacka &t);\n        void Rotiraj(const Tacka &t, double ugao);\n        void Skaliraj(const Tacka &t, double faktor);\n        void Rotiraj(double ugao);\n        void Skaliraj(double faktor);\n        friend bool DaLiSuIdenticni(const Trougao &t1, const Trougao &t2);\n        friend bool DaLiSuPodudarni(const Trougao &t1, const Trougao &t2);\n        friend bool DaLiSuSlicni(const Trougao &t1, const Trougao &t2);\n};\n\nbool DaLiSuIdenticni(const Trougao &t1, const Trougao &t2) {\n    if((t1.t1==t2.t1) || (t1.t1==t1.t2) || (t1.t1==t2.t3))\n        if((t1.t2==t2.t1) || (t1.t2==t2.t2) || (t1.t2==t2.t3))\n            if((t1.t3==t2.t1) || (t1.t3==t2.t2) || (t1.t3==t2.t3))\n                return true;\n    return false;\n}\n\nbool DaLiSuPodudarni(const Trougao &t1, const Trougao &t2) {\n    double pstr1(t1.DajStranicu(1)), pstr2(t1.DajStranicu(2)), pstr3(t1.DajStranicu(3)), dstr1(t2.DajStranicu(1)), dstr2(t2.DajStranicu(2)), dstr3(t2.DajStranicu(3));\n    double pomp1, pomd1, pomt1, pomp2, pomd2, pomt2;\n    if(pstr1>pstr2 && pstr1>pstr3){\n        pomp1 = pstr1;\n        if(pstr2>pstr3){\n            pomd1= pstr2;\n            pomt1 = pstr3;\n        }\n        else{\n            pomd1 = pstr3;\n            pomt1 = pstr2;\n        }\n    }\n    else if(pstr2>pstr1 && pstr2>pstr3){\n        pomp1 = pstr2;\n        if(pstr1>pstr3){\n            pomd1= pstr1;\n            pomt1 = pstr3;\n        }\n        else{\n            pomd1 = pstr3;\n            pomt1 = pstr1;\n        }\n    }\n    else if(pstr3>pstr2 && pstr3>pstr1){\n        pomp1 = pstr3;\n        if(pstr1>pstr2){\n            pomd1= pstr1;\n            pomt1 = pstr2;\n        }\n        else{\n            pomd1 = pstr2;\n            pomt1 = pstr1;\n        }\n    }\n    else if(pstr1==pstr2 && pstr3>pstr1){\n        pomp1 = pstr3;\n        pomd1 = pstr1;\n        pomt1 = pstr2;\n    }\n    else if(pstr1==pstr2 && pstr1>pstr3){\n        pomp1 = pstr2;\n        pomd1 = pstr1;\n        pomt1 = pstr3;\n    }\n    else if(pstr1==pstr3 && pstr1>pstr2){\n        pomp1 = pstr3;\n        pomd1 = pstr1;\n        pomt1 = pstr2;\n    }\n    else if(pstr1==pstr3 && pstr2>pstr1){\n        pomp1 = pstr2;\n        pomd1 = pstr1;\n        pomt1 = pstr3;\n    }\n    else if(pstr2==pstr3 && pstr1>pstr3){\n        pomp1 = pstr1;\n        pomd1 = pstr2;\n        pomt1 = pstr3;\n    }\n    else if(pstr2==pstr3 && pstr3>pstr1){\n        pomp1 = pstr3;\n        pomd1 = pstr2;\n        pomt1 = pstr1;\n    }\n    else{\n        pomp1 = pstr3;\n        pomd1 = pstr1;\n        pomt1 = pstr2;\n    }\n    \n    \n    if(dstr1>dstr2 && dstr1>dstr3){\n        pomp2 = dstr1;\n        if(dstr2>dstr3){\n            pomd2= dstr2;\n            pomt2 = dstr3;\n        }\n        else{\n            pomd2 = dstr3;\n            pomt2 = dstr2;\n        }\n    }\n    else if(dstr2>dstr1 && dstr2>dstr3){\n        pomp2 = dstr2;\n        if(dstr1>dstr3){\n            pomd2= dstr1;\n            pomt2 = dstr3;\n        }\n        else{\n            pomd2 = dstr3;\n            pomt2 = dstr1;\n        }\n    }\n    else if(dstr3>dstr2 && dstr3>dstr1){\n        pomp2 = dstr3;\n        if(dstr1>dstr2){\n            pomd2 = dstr1;\n            pomt2 = dstr2;\n        }\n        else{\n            pomd2 = dstr2;\n            pomt2 = dstr1;\n        }\n    }\n    else if(dstr1==dstr2 && dstr3>dstr1){\n        pomp2 = dstr3;\n        pomd2 = dstr1;\n        pomt2 = dstr2;\n    }\n    else if(dstr1==dstr2 && dstr1>dstr3){\n        pomp2 = dstr2;\n        pomd2 = dstr1;\n        pomt2 = dstr3;\n    }\n    else if(dstr1==dstr3 && dstr1>dstr2){\n        pomp2 = dstr3;\n        pomd2 = dstr1;\n        pomt2 = dstr2;\n    }\n    else if(dstr1==dstr3 && dstr2>dstr1){\n        pomp2 = dstr2;\n        pomd2 = dstr1;\n        pomt2 = dstr3;\n    }\n    else if(dstr2==dstr3 && dstr1>dstr3){\n        pomp2 = dstr1;\n        pomd2 = dstr2;\n        pomt2 = dstr3;\n    }\n    else if(dstr2==dstr3 && dstr3>dstr1){\n        pomp2 = dstr3;\n        pomd2 = dstr2;\n        pomt2 = dstr1;\n    }\n    else{\n        pomp2 = dstr3;\n        pomd2 = dstr1;\n        pomt2 = dstr2;\n    }\n    \n    Tacka a1, b1, c1, a2, b2, c2;\n    \n    if(t1.DajStranicu(1) == pomp1) a1=t1.DajTjeme(1);\n    if(t1.DajStranicu(2) == pomp1) a1=t1.DajTjeme(2);\n    if(t1.DajStranicu(3) == pomp1) a1=t1.DajTjeme(3);\n    if(t1.DajStranicu(1) == pomd1) b1=t1.DajTjeme(1);\n    if(t1.DajStranicu(2) == pomd1) b1=t1.DajTjeme(2);\n    if(t1.DajStranicu(3) == pomd1) b1=t1.DajTjeme(3);\n    if(t1.DajStranicu(1) == pomt1) c1=t1.DajTjeme(1);\n    if(t1.DajStranicu(2) == pomt1) c1=t1.DajTjeme(2);\n    if(t1.DajStranicu(3) == pomt1) c1=t1.DajTjeme(3);\n    \n    if(t2.DajStranicu(1) == pomp2) a2=t2.DajTjeme(1);\n    if(t2.DajStranicu(2) == pomp2) a2=t2.DajTjeme(2);\n    if(t2.DajStranicu(3) == pomp2) a2=t2.DajTjeme(3);\n    if(t2.DajStranicu(1) == pomd2) b2=t2.DajTjeme(1);\n    if(t2.DajStranicu(2) == pomd2) b2=t2.DajTjeme(2);\n    if(t2.DajStranicu(3) == pomd2) b2=t2.DajTjeme(3);\n    if(t2.DajStranicu(1) == pomt2) c2=t2.DajTjeme(1);\n    if(t2.DajStranicu(2) == pomt2) c2=t2.DajTjeme(2);\n    if(t2.DajStranicu(3) == pomt2) c2=t2.DajTjeme(3);\n    \n    if(pomp1 == pomp2 && pomd1 == pomd2 && pomt1==pomt2 && t1.Orijentacija(a1,b1,c1)==t2.Orijentacija(a2,b2,c2)) return true;\n    return false;\n}\n\nbool DaLiSuSlicni(const Trougao &t1, const Trougao &t2) {\n    double pstr1(t1.DajStranicu(1)), pstr2(t1.DajStranicu(2)), pstr3(t1.DajStranicu(3)), dstr1(t2.DajStranicu(1)), dstr2(t2.DajStranicu(2)), dstr3(t2.DajStranicu(3));\n    double pomp1, pomd1, pomt1, pomp2, pomd2, pomt2;\n    if(pstr1>pstr2 && pstr1>pstr3){\n        pomp1 = pstr1;\n        if(pstr2>pstr3){\n            pomd1= pstr2;\n            pomt1 = pstr3;\n        }\n        else{\n            pomd1 = pstr3;\n            pomt1 = pstr2;\n        }\n    }\n    else if(pstr2>pstr1 && pstr2>pstr3){\n        pomp1 = pstr2;\n        if(pstr1>pstr3){\n            pomd1= pstr1;\n            pomt1 = pstr3;\n        }\n        else{\n            pomd1 = pstr3;\n            pomt1 = pstr1;\n        }\n    }\n    else if(pstr3>pstr2 && pstr3>pstr1){\n        pomp1 = pstr3;\n        if(pstr1>pstr2){\n            pomd1= pstr1;\n            pomt1 = pstr2;\n        }\n        else{\n            pomd1 = pstr2;\n            pomt1 = pstr1;\n        }\n    }\n    else if(pstr1==pstr2 && pstr3>pstr1){\n        pomp1 = pstr3;\n        pomd1 = pstr1;\n        pomt1 = pstr2;\n    }\n    else if(pstr1==pstr2 && pstr1>pstr3){\n        pomp1 = pstr2;\n        pomd1 = pstr1;\n        pomt1 = pstr3;\n    }\n    else if(pstr1==pstr3 && pstr1>pstr2){\n        pomp1 = pstr3;\n        pomd1 = pstr1;\n        pomt1 = pstr2;\n    }\n    else if(pstr1==pstr3 && pstr2>pstr1){\n        pomp1 = pstr2;\n        pomd1 = pstr1;\n        pomt1 = pstr3;\n    }\n    else if(pstr2==pstr3 && pstr1>pstr3){\n        pomp1 = pstr1;\n        pomd1 = pstr2;\n        pomt1 = pstr3;\n    }\n    else if(pstr2==pstr3 && pstr3>pstr1){\n        pomp1 = pstr3;\n        pomd1 = pstr2;\n        pomt1 = pstr1;\n    }\n    else{\n        pomp1 = pstr3;\n        pomd1 = pstr1;\n        pomt1 = pstr2;\n    }\n    \n    \n    if(dstr1>dstr2 && dstr1>dstr3){\n        pomp2 = dstr1;\n        if(dstr2>dstr3){\n            pomd2= dstr2;\n            pomt2 = dstr3;\n        }\n        else{\n            pomd2 = dstr3;\n            pomt2 = dstr2;\n        }\n    }\n    else if(dstr2>dstr1 && dstr2>dstr3){\n        pomp2 = dstr2;\n        if(dstr1>dstr3){\n            pomd2= dstr1;\n            pomt2 = dstr3;\n        }\n        else{\n            pomd2 = dstr3;\n            pomt2 = dstr1;\n        }\n    }\n    else if(dstr3>dstr2 && dstr3>dstr1){\n        pomp2 = dstr3;\n        if(dstr1>dstr2){\n            pomd2 = dstr1;\n            pomt2 = dstr2;\n        }\n        else{\n            pomd2 = dstr2;\n            pomt2 = dstr1;\n        }\n    }\n    else if(dstr1==dstr2 && dstr3>dstr1){\n        pomp2 = dstr3;\n        pomd2 = dstr1;\n        pomt2 = dstr2;\n    }\n    else if(dstr1==dstr2 && dstr1>dstr3){\n        pomp2 = dstr2;\n        pomd2 = dstr1;\n        pomt2 = dstr3;\n    }\n    else if(dstr1==dstr3 && dstr1>dstr2){\n        pomp2 = dstr3;\n        pomd2 = dstr1;\n        pomt2 = dstr2;\n    }\n    else if(dstr1==dstr3 && dstr2>dstr1){\n        pomp2 = dstr2;\n        pomd2 = dstr1;\n        pomt2 = dstr3;\n    }\n    else if(dstr2==dstr3 && dstr1>dstr3){\n        pomp2 = dstr1;\n        pomd2 = dstr2;\n        pomt2 = dstr3;\n    }\n    else if(dstr2==dstr3 && dstr3>dstr1){\n        pomp2 = dstr3;\n        pomd2 = dstr2;\n        pomt2 = dstr1;\n    }\n    else{\n        pomp2 = dstr3;\n        pomd2 = dstr1;\n        pomt2 = dstr2;\n    }\n    \n    Tacka a1, b1, c1, a2, b2, c2;\n    \n    if(t1.DajStranicu(1) == pomp1) a1=t1.DajTjeme(1);\n    if(t1.DajStranicu(2) == pomp1) a1=t1.DajTjeme(2);\n    if(t1.DajStranicu(3) == pomp1) a1=t1.DajTjeme(3);\n    if(t1.DajStranicu(1) == pomd1) b1=t1.DajTjeme(1);\n    if(t1.DajStranicu(2) == pomd1) b1=t1.DajTjeme(2);\n    if(t1.DajStranicu(3) == pomd1) b1=t1.DajTjeme(3);\n    if(t1.DajStranicu(1) == pomt1) c1=t1.DajTjeme(1);\n    if(t1.DajStranicu(2) == pomt1) c1=t1.DajTjeme(2);\n    if(t1.DajStranicu(3) == pomt1) c1=t1.DajTjeme(3);\n    \n    if(t2.DajStranicu(1) == pomp2) a2=t2.DajTjeme(1);\n    if(t2.DajStranicu(2) == pomp2) a2=t2.DajTjeme(2);\n    if(t2.DajStranicu(3) == pomp2) a2=t2.DajTjeme(3);\n    if(t2.DajStranicu(1) == pomd2) b2=t2.DajTjeme(1);\n    if(t2.DajStranicu(2) == pomd2) b2=t2.DajTjeme(2);\n    if(t2.DajStranicu(3) == pomd2) b2=t2.DajTjeme(3);\n    if(t2.DajStranicu(1) == pomt2) c2=t2.DajTjeme(1);\n    if(t2.DajStranicu(2) == pomt2) c2=t2.DajTjeme(2);\n    if(t2.DajStranicu(3) == pomt2) c2=t2.DajTjeme(3);\n    \n    double temp = std::fabs(pomp1 - pomp2);\n    if(std::fabs(pomd1 - pomd2) == temp && std::fabs(pomt1 - pomt2)==temp && t1.Orijentacija(a1,b1,c1) == t2.Orijentacija(a2,b2,c2)) return true;\n    return false;\n}\n\nvoid Trougao::Rotiraj(double ugao) {\n    this->Rotiraj(this->DajCentar(), ugao);\n}\n\nvoid Trougao::Skaliraj(double faktor) {\n    this->Skaliraj(this->DajCentar(), faktor);\n}\n\nvoid Trougao::Skaliraj(const Tacka &t, double faktor) {\n    if(faktor==0) throw std::domain_error(\"Nekorektan faktor skaliranja\");\n    t1.first=t.first+faktor*(t1.first-t.first);\n    t1.second=t.second+faktor*(t1.second-t.second);\n    t2.first=t.first+faktor*(t2.first-t.first);\n    t2.second=t.second+faktor*(t2.second-t.second);\n    t3.first=t.first+faktor*(t3.first-t.first);\n    t3.second=t.second+faktor*(t3.second-t.second);\n}\n\nvoid Trougao::Centriraj(const Tacka &t) {\n    Tacka temp=this->DajCentar();\n    this->Transliraj(t.first-temp.first, t.second-temp.second);\n}\n\nvoid Trougao::Rotiraj(const Tacka &t, double ugao){\n    double pom1(t1.first), pom2(t2.first), pom3(t3.first);\n    \n    t1.first=t.first+(pom1-t.first)*std::cos(ugao)-(t1.second-t.second)*std::sin(ugao);\n    t2.first=t.first+(pom2-t.first)*std::cos(ugao)-(t2.second-t.second)*std::sin(ugao);\n    t3.first=t.first+(pom3-t.first)*std::cos(ugao)-(t3.second-t.second)*std::sin(ugao);\n    \n    t1.second=t.second+(pom1-t.first)*std::sin(ugao)+(t1.second-t.second)*std::cos(ugao);\n    t2.second=t.second+(pom2-t.first)*std::sin(ugao)+(t2.second-t.second)*std::cos(ugao);\n    t3.second=t.second+(pom3-t.first)*std::sin(ugao)+(t3.second-t.second)*std::cos(ugao);\n}\n\nvoid Trougao::Transliraj(double delta_x, double delta_y) {\n    t1.first+=delta_x;\n    t2.first+=delta_x;\n    t3.first+=delta_x;\n    t1.second+=delta_y;\n    t2.second+=delta_y;\n    t3.second+=delta_y;\n}\n\nvoid Trougao::Ispisi() const {\n    std::cout << \"((\" << t1.first << \",\" << t1.second << \"),(\" << t2.first << \",\" << t2.second << \"),(\" << t3.first << \",\" << t3.second << \"))\";\n}\n\nbool Trougao::DaLiJeUnutra(const Tacka &t) const {\n     if(std::fabs(std::fabs(S(t1,t2,t))/2 + std::fabs(S(t2,t3,t))/2 + std::fabs(S(t3,t1,t))/2 - this->DajPovrsinu())<eps) return true;\n     return false;\n}\n\ndouble Trougao::DajPovrsinu() const {\n    return std::fabs(S(t1,t2,t3))/2;\n}\n\ndouble Trougao::DajObim() const {\n    return UdaljenostTacaka(t1,t2)+UdaljenostTacaka(t2,t3)+UdaljenostTacaka(t1,t3);\n}\n\nTacka Trougao::DajCentar() const {\n    return {(t1.first+t2.first+t3.first)/3, (t1.second+t2.second+t3.second)/3};\n}\n\ndouble Trougao::DajUgao(int indeks) const {\n    if(indeks<1 || indeks>3) throw std::range_error(\"Nekorektan indeks\");\n    double a=UdaljenostTacaka(t2,t3),b=UdaljenostTacaka(t1,t3),c=UdaljenostTacaka(t1,t2);\n    if(indeks==1) return (std::acos((b*b+c*c-a*a)/(2*b*c)))*(pi/180);\n    else if(indeks==2) return (std::acos((a*a+c*c-b*b)/(2*a*c)))*(pi/180);\n    else return (std::acos((a*a+b*b-c*c)/(2*a*b)))*(pi/180);\n}\n\ndouble Trougao::DajStranicu(int indeks) const {\n    if(indeks<1 || indeks>3) throw std::range_error(\"Nekorektan indeks\"); \n    if(indeks==1) return UdaljenostTacaka(t2,t3);\n    else if(indeks==2) return UdaljenostTacaka(t1,t3);\n    else return UdaljenostTacaka(t1,t2);\n}\n\nTacka Trougao::DajTjeme(int indeks) const { \n    if(indeks<1 || indeks>3) throw std::range_error(\"Nekorektan indeks\"); \n    if(indeks==1) return t1; \n    else if(indeks==2) return t2; \n    else return t3; \n}\n\nvoid Trougao::Postavi(int indeks, const Tacka &t) {\n    if(indeks<1 || indeks>3) throw std::range_error(\"Nekorektan indeks\");\n    if(indeks==1) t1=t;\n    else if(indeks==2) t2=t;\n    else t3=t;\n}\n\nvoid Trougao::Postavi(const Tacka &t1, const Tacka &t2, const Tacka &t3) {\n    if(Orijentacija(t1,t2,t3)==0) throw std::domain_error(\"Nekorektne pozicije tjemena, ponovite unos!\\n\");\n    this->t1=t1;\n    this->t2=t2; \n    this->t3=t3;\n}\n\nTrougao::Trougao(const Tacka &t1, const Tacka &t2, const Tacka &t3) {\n    if(Orijentacija(t1,t2,t3)==0) throw std::domain_error(\"Nekorektne pozicije tjemena, ponovite unos!\\n\");\n    this->t1=t1;\n    this->t2=t2; \n    this->t3=t3;\n}\n\nint main (){\n    int n;\n    std::cout << \"Koliko zelite kreirati trouglova: \";\n    std::cin >> n;\n    try{\n        std::vector<std::shared_ptr<Trougao>> niz(n);\n        for(int i(0); i<n; i++){\n            std::cout << \"Unesite podatke za \" << i+1 << \". trougao (x1 y1 x2 y2 x3 y3): \";\n            Tacka t1,t2,t3;\n            double a, b, c, d, e, f;\n            std::cin >> a >> b >> c >> d >> e >> f;\n            t1.first = a;\n            t1.second = b;\n            t2.first = c;\n            t2.second = d;\n            t3.first = e;\n            t3.second = f;\n            try{\n                Trougao temp(t1, t2, t3);\n                niz[i] = std::make_shared<Trougao>(temp);\n            }\n            catch(std::domain_error belaj){\n                std::cout << belaj.what();\n                i--;\n            }\n        }\n        double x, y;\n        std::cout << \"Unesite vektor translacije (dx dy): \";\n        std::cin >> x >> y;\n        std::transform(niz.begin(), niz.end(), niz.begin(), [x,y](std::shared_ptr<Trougao> t){ t->Transliraj(x,y); return t;});\n        double ugao;\n        std::cout << \"Unesite ugao rotacije: \";\n        std::cin >> ugao;\n        std::transform(niz.begin(), niz.end(), niz.begin(), [ugao](std::shared_ptr<Trougao> t){ t->Rotiraj(ugao); return t;});\n        double scal;\n        std::cout << \"Unesite faktor skaliranja: \";\n        std::cin >> scal;\n        std::transform(niz.begin(), niz.end(), niz.begin(), [scal](std::shared_ptr<Trougao> t){ t->Skaliraj(t->DajTjeme(1), scal); return t;});\n        std::sort(niz.begin(), niz.end(), [](std::shared_ptr<Trougao> tr1, std::shared_ptr<Trougao> tr2){ return tr1->DajPovrsinu()<tr2->DajPovrsinu();});\n        std::cout << \"Trouglovi nakon obavljenih transformacija:\" << std::endl;\n        std::for_each(niz.begin(), niz.end(), [](std::shared_ptr<Trougao> t){ t->Ispisi(); std::cout << std::endl; });\n        \n        auto min = *(std::min_element(niz.begin(), niz.end(), [](std::shared_ptr<Trougao> tr1, std::shared_ptr<Trougao> tr2){ return tr1->DajObim() < tr2->DajObim();}));\n        std::cout << \"Trougao sa najmanjim obimom: \"; min->Ispisi(); std::cout << std::endl;\n        \n        bool iden(false), podud(false), slicni(false);\n        for(int i(0); i<n; i++){\n            Trougao temp1(niz[i]->DajTjeme(1), niz[i]->DajTjeme(2), niz[i]->DajTjeme(3));\n            for(int j(i+1); j<n; j++){\n                Trougao temp2(niz[j]->DajTjeme(1), niz[j]->DajTjeme(2), niz[j]->DajTjeme(3));\n                if(DaLiSuPodudarni(temp1,temp2)) podud = true;\n            }\n        }\n        for(int i(0); i<n; i++){\n            Trougao temp1(niz[i]->DajTjeme(1), niz[i]->DajTjeme(2), niz[i]->DajTjeme(3));\n            for(int j(i+1); j<n; j++){\n                Trougao temp2(niz[j]->DajTjeme(1), niz[j]->DajTjeme(2), niz[j]->DajTjeme(3));\n                if(DaLiSuIdenticni(temp1,temp2)) iden = true;\n            }\n        }\n        for(int i(0); i<n; i++){\n            Trougao temp1(niz[i]->DajTjeme(1), niz[i]->DajTjeme(2), niz[i]->DajTjeme(3));\n            for(int j(i+1); j<n; j++){\n                Trougao temp2(niz[j]->DajTjeme(1), niz[j]->DajTjeme(2), niz[j]->DajTjeme(3));\n                if(DaLiSuSlicni(temp1,temp2)) slicni = true;\n            }\n        }\n        if(iden){\n            std::cout << \"Parovi identicnih trouglova:\" << std::endl;\n            for(int i(0); i<n; i++){\n                Trougao temp1(niz[i]->DajTjeme(1), niz[i]->DajTjeme(2), niz[i]->DajTjeme(3));\n                for(int j(i+1); j<n; j++){\n                    Trougao temp2(niz[j]->DajTjeme(1), niz[j]->DajTjeme(2), niz[j]->DajTjeme(3));\n                    if(DaLiSuIdenticni(temp1,temp2)){\n                        temp1.Ispisi(); std::cout << \" i \"; temp2.Ispisi(); std::cout << std::endl;\n                    }\n                }\n            }\n        }\n        else std::cout << \"Nema identicnih trouglova!\" << std::endl;\n        if(podud){\n            std::cout << \"Parovi podudarnih trouglova:\" << std::endl;\n            for(int i(0); i<n; i++){\n                Trougao temp1(niz[i]->DajTjeme(1), niz[i]->DajTjeme(2), niz[i]->DajTjeme(3));\n                for(int j(i+1); j<n; j++){\n                    Trougao temp2(niz[j]->DajTjeme(1), niz[j]->DajTjeme(2), niz[j]->DajTjeme(3));\n                    if(DaLiSuPodudarni(temp1,temp2)){\n                        temp1.Ispisi(); std::cout << \" i \"; temp2.Ispisi(); std::cout << std::endl;\n                    }\n                }\n            }\n        }\n        else std::cout << \"Nema podudarnih trouglova!\" << std::endl;\n        if(slicni){\n            std::cout << \"Parovi slicnih trouglova:\" << std::endl;\n            for(int i(0); i<n; i++){\n                Trougao temp1(niz[i]->DajTjeme(1), niz[i]->DajTjeme(2), niz[i]->DajTjeme(3));\n                for(int j(i+1); j<n; j++){\n                    Trougao temp2(niz[j]->DajTjeme(1), niz[j]->DajTjeme(2), niz[j]->DajTjeme(3));\n                    if(DaLiSuSlicni(temp1,temp2)){\n                        temp1.Ispisi(); std::cout << \" i \"; temp2.Ispisi(); std::cout << std::endl;\n                    }\n                }\n            }\n        }\n        else std::cout << \"Nema slicnih trouglova!\" << std::endl;\n        \n    }\n    catch(std::domain_error belaj1){\n        std::cout << belaj1.what();\n    }\n    catch(std::range_error belaj2){\n        std::cout << belaj2.what();\n    }\n\treturn 0;\n}"
    },
    "117": {
        "label": "0",
        "student3776": "#include <stdio.h>\n#include <string.h>\n#define KAPACITET 200\n\nstruct Vrijeme {\n\tint sati,minute,sekunde;\n};\n\nstruct Cas {\n\tchar predmet[10];\n\tint dan_u_sedmici;\n\tstruct Vrijeme pocetak,kraj;\n};\n\nint ucitaj_datoteku(struct Cas raspored[]){\n\tFILE *ulaz=fopen(\"raspored.dat\",\"rb\");\n\tif(!ulaz){\n\t\treturn 0;\n\t}\n\tint br=fread(raspored,sizeof (struct Cas),KAPACITET,ulaz);\n\tfclose(ulaz);\n\treturn br;\n}\n\nvoid ispis_rasporeda(struct Cas raspored[],int broj_casova){\n\tint i,j,zadnji=0,k,prvi=9;\n\tchar razmak=' ';\n\tfor(i=0; i<broj_casova; i++){\n\t\tif(raspored[i].kraj.sati>=zadnji){\n\t\t\tif(raspored[i].kraj.minute > 0)\n\t\t\t\tzadnji=raspored[i].kraj.sati+1;\n\t\t\telse zadnji=raspored[i].kraj.sati;\n\t\t}\n\t\tif(raspored[i].pocetak.sati<prvi)\n\t\t\tprvi=raspored[i].pocetak.sati;\n\t}\n\tprintf(\"\\n%7cPON%7cUTO%7cSRI%7cCET%7cPET%7cSUB\\n\",razmak,razmak,razmak,razmak,razmak,razmak);\n\tfor(i=prvi; i<zadnji; i++){\n\t\t\tif(i<10)\n\t\t\t\tprintf(\"%d:00   \",i);\n\t\t\telse\n\t\t\t\tprintf(\"%d:00  \",i);\n\t\t\tfor(j=0; j<6; j++){\n\t\t\t\tfor(k=0; k<broj_casova; k++){\n\t\t\t\t\tif(raspored[k].dan_u_sedmici!=j+1) continue;\n\t\t\t\t\tif(raspored[k].pocetak.sati<=i && raspored[k].kraj.sati>i){\n\t\t\t\t\t\tprintf(\"%-10s\",raspored[k].predmet);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if(raspored[k].kraj.sati==i){\n\t\t\t\t\t\t\tif (raspored[k].kraj.minute>0)\n\t\t\t\t\t\t\tprintf(\"%-10s\",raspored[k].predmet);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(k==broj_casova)\n\t\t\t\t\tprintf(\"%10c\",razmak);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n}\n\nvoid ispisi_dan(struct Cas raspored[], int broj_casova, int dan){\n\tint i,k=1;\n\tprintf(\"Uneseni su casovi: \\n\");\n\tfor(i=0; i<broj_casova; i++)\n\t\tif(raspored[i].dan_u_sedmici==dan){\n\t\t\tprintf(\"%d) %s (\",k++,raspored[i].predmet);\n\t\t\tif(raspored[i].pocetak.sati<10)\n\t\t\t\tprintf(\"0%d:\",raspored[i].pocetak.sati);\n\t\t\telse printf(\"%d:\",raspored[i].pocetak.sati);\n\t\t\tif(raspored[i].pocetak.minute<10)\n\t\t\t\tprintf(\"0%d-\",raspored[i].pocetak.minute);\n\t\t\telse printf(\"%d-\",raspored[i].pocetak.minute);\n\t\t\tif(raspored[i].kraj.sati<10)\n\t\t\t\tprintf(\"%0d:\",raspored[i].kraj.sati);\n\t\t\telse printf(\"%d:\",raspored[i].kraj.sati);\n\t\t\tif(raspored[i].kraj.minute<10)\n\t\t\t\tprintf(\"0%d)\\n\",raspored[i].kraj.minute);\n\t\t\telse\n\t\t\t\tprintf(\"%d)\\n\",raspored[i].kraj.minute);\n\t\t}\n}\n\nvoid obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){\n\tint i,k;\n\tfor(i=0; i<broj_casova; i++){\n\t\tif (raspored[i].dan_u_sedmici==dan) redni_broj--;\n\t\tif (redni_broj==0){\n\t\t\tfor(k=i; k<broj_casova-1;k++)\n\t\t\t\traspored[k]=raspored[k+1];\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nint preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){\n\tint poc=cas.pocetak.sati*60+cas.pocetak.minute,kraj=cas.kraj.sati*60+cas.kraj.minute,i;\n\tfor(i=0; i<broj_casova; i++){\n\t\tif(cas.dan_u_sedmici!=raspored[i].dan_u_sedmici) continue;\n\t\tint pom1=raspored[i].pocetak.sati*60+raspored[i].pocetak.minute,pom2=raspored[i].kraj.sati*60+raspored[i].kraj.minute;\n\t\tif ((poc<pom1 && kraj>pom1) || (poc<pom2 && kraj>pom2) || (poc<=pom1 && kraj>=pom2) || (pom1<=poc && pom2>=kraj)) return 1;\n\t}\n\treturn 0;\n}\n\n/*int uklop(struct Cas raspored[], int broj_casova, struct Cas cas){\n\tint poc=cas.pocetak.sati*60,kraj=cas.kraj.sati*60,i;\n\tfor (i=0; i<broj_casova; i++){\n\t\tif (cas.dan_u_sedmici!=raspored[i].dan_u_sedmici) continue;\n\t\tint pom1=raspored[i].pocetak.sati*60+raspored[i].pocetak.minute,pom2=raspored[i].kraj.sati*60+raspored[i].kraj.minute;\n\t\tif ((poc<pom1 && kraj>pom1) || (poc<pom2 && kraj>pom2) || (poc<=pom1 && kraj>=pom2) || (pom1<=poc && pom2>=kraj)) return 1;\n\t}\n\treturn 0;\n}*/\n\nint dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje){\n\tint i,k;\n\tstruct Cas cas;\n\tstrcpy(cas.predmet,predmet);\n\tfor (i=1; i<7; i++)\n\t\tfor(k=9; k<=19-trajanje;k++){\n\t\t\tcas.dan_u_sedmici=i;\n\t\t\tcas.pocetak.sati=k;\n\t\t\tcas.kraj.sati=k+trajanje;\n\t\t\tcas.pocetak.minute=cas.kraj.minute=0;\n\t\t\tif (preklapanje(raspored,broj_casova,cas)==0){\n\t\t\t\traspored[broj_casova]=cas;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\n\treturn 0;\t\t\t\n}\n\nvoid promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){\n\tint i;\n\tfor(i=0; i<broj_casova; i++){\n\t\tif(raspored[i].dan_u_sedmici==dan) redni_broj--;\n\t\tif(redni_broj==0){\n\t\t\traspored[i]=promjena;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nint zapisi_datoteku(struct Cas raspored[], int broj_casova){\n\tFILE *ulaz=fopen(\"raspored.dat\",\"wb\");\n\tif(!ulaz)\n\t\treturn 0;\n\tint br=fwrite(raspored,sizeof (struct Cas), broj_casova,ulaz);\n\tfclose(ulaz);\n\tif (br) return 1;\n\treturn 0;\n}\n\nint main() {\n\tint n,broj_casova=0;\n\tstruct Cas raspored[KAPACITET];\n\tucitaj_datoteku(raspored);\n\tdo {\n\t\tprintf(\"1) Ispis rasporeda\\n2) Dodavanje casa\\n3) Promjena casa\\n4) Brisanje casa\\n0) Kraj rada\\nIzaberite opciju: \");\n\t\tscanf(\"%d\",&n);\n\t\tswitch (n){\n\t\t\tcase 0: {\n\t\t\t\tzapisi_datoteku(raspored,broj_casova);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 1: \n\t\t\t\tispis_rasporeda(raspored,broj_casova);\n\t\t\t\tbreak;\n\t\t\tcase 2:{\n\t\t\t\tint i=0,trajanje;\n\t\t\t\tchar naziv[10];\n\t\t\t\tprintf(\"Unesite naziv predmeta: \");\n\t\t\t\tchar c=getchar();\n\t\t\t\tc=getchar();\n\t\t\t\tdo {\n\t\t\t\t\tif (i<9)\n\t\t\t\t\t\tnaziv[i++]=c;\n\t\t\t\t\tc=getchar();\n\t\t\t\t} while (c!='\\n');\n\t\t\t\tnaziv[i]='\\0';\n\t\t\t\tprintf(\"Unesite broj casova: \");\n\t\t\t\tscanf(\"%d\",&trajanje);\n\t\t\t\tif(dodaj_cas(raspored,broj_casova,naziv,trajanje))\n\t\t\t\t\tbroj_casova++;\n\t\t\t\telse\n\t\t\t\t\tprintf(\"Nema dovoljno mjesta u rasporedu za %d casova.\\n\",trajanje);;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3:{\n\t\t\t\tstruct Cas cas;\n\t\t\t\tint d,k,i=0;\n\t\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\t\tscanf(\"%d\",&d);\n\t\t\t\tispisi_dan(raspored,broj_casova,d);\n\t\t\t\tprintf(\"Izaberite koji cas zelite promijeniti: \");\n\t\t\t\tscanf(\"%d\",&k);\n\t\t\t\tprintf(\"Naziv predmeta: \");\n\t\t\t\tchar naziv[10];\n\t\t\t\tchar c=getchar();\n\t\t\t\tc=getchar();\n\t\t\t\tdo {\n\t\t\t\t\tif (i<9)\n\t\t\t\t\t\tnaziv[i++]=c;\n\t\t\t\t\tc=getchar();\n\t\t\t\t} while (c!='\\n');\n\t\t\t\tnaziv[i]='\\0';\n\t\t\t\tstrcpy(cas.predmet,naziv);\n\t\t\t\tcas.dan_u_sedmici=d;\n\t\t\t\tprintf(\"Vrijeme pocetka: \");\n\t\t\t\tscanf(\"%d%c%d\",&cas.pocetak.sati,&c,&cas.pocetak.minute);\n\t\t\t\tprintf(\"Vrijeme zavrsetka: \");\n\t\t\t\tscanf(\"%d%c%d\",&cas.kraj.sati,&c,&cas.kraj.minute);\n\t\t\t\t/*if(preklapanje(raspored,broj_casova,cas)==1) {\n\t\t\t\t\tprintf(\"Promjena nije moguca jer dovodi do preklapanja\");\n\t\t\t\t\tbreak;\n\t\t\t\t}*/\n\t\t\t\tpromijeni_cas(raspored,broj_casova,d,k,cas);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 4:{\n\t\t\t\tint d,k;\n\t\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\t\tscanf(\"%d\",&d);\n\t\t\t\tispisi_dan(raspored,broj_casova,d);\n\t\t\t\tprintf(\"Izaberite koji cas zelite obrisati: \");\n\t\t\t\tscanf(\"%d\",&k);\n\t\t\t\tobrisi_cas(raspored,broj_casova,d,k);\n\t\t\t\tprintf(\"Cas obrisan\\n\");\n\t\t\t\tbroj_casova--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: break;\n\t\t}\n\t} while (n!=0);\n\n\treturn 0;\n}\n",
        "student5284": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#define KAPACITET 200\n#define IZBRISAN 404\n#define PROMJENJEN 201\n\ntypedef struct Cas Cas;\ntypedef struct Vrijeme Vrijeme;\n\nint promjenjen = PROMJENJEN;\n\nstruct Vrijeme {\n\tint sati, minute, sekunde;\n};\n\nstruct Cas {\n\tchar predmet[10];\n\tint dan_u_sedmici;\n\tstruct Vrijeme pocetak, kraj;\n};\n\n\n// prototipovi funkcija\n\nint ucitaj_datoteku(Cas raspored[]);\nint zapisi_datoteku(Cas raspored[], int);\nint dodaj_cas(Cas raspored[], int, const char*, int);\nint preklapanje(Cas raspored[], int, Cas);\nvoid ispis_rasporeda(Cas raspored[], int);\nvoid ispisi_dan(Cas raspored[], int, int);\nvoid promijeni_cas(Cas raspored[], int, int, int, Cas);\nvoid obrisi_cas(Cas raspored[], int, int, int);\n\n/*unos stringa*/\nvoid unesi(char * s){\n\tint brojac = 0;\n\tchar * p = s;\n\tchar c = getchar();\n\twhile(c != '\\n'){\n\t\tif(brojac < 9) {\n\t\t\t*s = c;\n\t\t\ts++;\n\t\t}\n\t\tc = getchar();\n\t\tbrojac++;\n\t}\n\t*s = '\\0';\n\tif(strlen(p) > 10) while(getchar() != '\\n');\n}\n\n/* Unos vremena */\n\nVrijeme unos_vremena();\n\n/*Izmjena casa*/\n\nvoid izmijeniCas(Cas *cas, char *naziv, int pSati, int pMinute, int pSekunde, int kSati, int kMinute, int kSekunde) {\n\t!naziv ?(memset(cas->predmet, 0,0), cas->dan_u_sedmici=IZBRISAN) : strcpy(cas->predmet, naziv);\n\tcas->pocetak.sati=pSati;\n\tcas->pocetak.minute=pMinute;\n\tcas->pocetak.sekunde=pSekunde;\n\tcas->kraj.sati=kSati;\n\tcas->kraj.minute=kMinute;\n\tcas->kraj.sekunde=kSekunde;\n}\n\n/* Glavni meni */\nvoid meni(Cas raspored[], int broj_casova){\n\tint izbor, temp, dan;\n\tchar naziv_predmeta[10];\n\tint broj_casova_za_predmet;\n\tCas cas;\n\twhile(1){\n\t\tprintf(\"1) Ispis rasporeda\\n\");\n\t\tprintf(\"2) Dodavanje casa\\n\");\n\t\tprintf(\"3) Promjena casa\\n\");\n\t\tprintf(\"4) Brisanje casa\\n\");\n\t\tprintf(\"0) Kraj rada\\n\");\n\t\tprintf(\"Izaberite opciju: \");\n\t\tscanf(\"%d\", &izbor);\n\t\tswitch(izbor){\n\t\t\tcase 1:\n\t\t\t\tispis_rasporeda(raspored, broj_casova);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\twhile(getchar() != '\\n');\n\t\t\t\tprintf(\"Unesite naziv predmeta: \");\n\t\t\t\tunesi(naziv_predmeta);\n\t\t\t\n\t\t\t\tprintf(\"Unesite broj casova: \");\n\t\t\t\tscanf(\"%d\", &broj_casova_za_predmet);\n\t\t\t\ttemp = dodaj_cas(raspored, broj_casova, naziv_predmeta, broj_casova_za_predmet);\n\t\t\t\tif(temp) broj_casova++;\n\t\t\t\telse if(!temp) printf(\"Nema dovoljno mjesta u rasporedu za %d casova.\\n\", broj_casova_za_predmet);\n\t\t\t\t/* Dodati uslov ako nije unesen cas */\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\twhile(1){\n\t\t\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\t\t\tscanf(\"%d\", &dan);\n\t\t\t\t\tispisi_dan(raspored, broj_casova, dan);\n\t\t\t\t\tprintf(\"Izaberite koji cas zelite promijeniti: \");\n\t\t\t\t\tscanf(\"%d\", &temp);\n\t\t\t\t\tif(temp > broj_casova + 1){\n\t\t\t\t\t\tprintf(\"Neispravan redni broj casa.\\n\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\twhile(getchar() != '\\n');\n\t\t\t\t\tprintf(\"Naziv predmeta: \");\n\t\t\t\t\tunesi(cas.predmet);\n\t\t\t\t\tprintf(\"Vrijeme pocetka: \");\n\t\t\t\t\tcas.pocetak = unos_vremena();\n\t\t\t\t\tprintf(\"Vrijeme zavrsetka: \");\n\t\t\t\t\tcas.kraj = unos_vremena();\n\t\t\t\t\tcas.dan_u_sedmici = dan;\n\t\t\t\t\tpromijeni_cas(raspored, broj_casova, dan, temp, cas);\n\t\t\t\t\tif(promjenjen == PROMJENJEN) break;\n\t\t\t\t\telse printf(\"Promjena nije moguca jer dovodi do preklapanja\\n\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\tscanf(\"%d\", &dan);\n\t\t\tispisi_dan(raspored, broj_casova, dan);\n\t\t\tprintf(\"Izaberite koji cas zelite obrisati: \");\n\t\t\tscanf(\"%d\", &temp);\n\t\t\tif(temp>broj_casova+1) {\n\t\t\t\tprintf(\"Neispravan redni broj casa.\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tobrisi_cas(raspored, broj_casova, dan, temp);\n\t\t\tprintf(\"Cas obrisan\\n\");\n\t\t\tbroj_casova--;\n\t\t\tbreak;\n\t\t\tcase 0: \n\t\t\t\tzapisi_datoteku(raspored, broj_casova);\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\n\nint main() {\n\tCas raspored[KAPACITET];\n\tint broj_casova = ucitaj_datoteku(raspored);\n\tmeni(raspored, broj_casova);\n\treturn 0;\n}\n\n\nVrijeme unos_vremena(){\n\tchar vakat[7];\n\tchar * pokNaVakat = vakat;\n\tVrijeme vrijeme;\n\tunesi(vakat);\n\tvrijeme.sati = 0;\n\tvrijeme.minute = 0;\n\tvrijeme.sekunde = 0;\n\tif(*pokNaVakat == '0') pokNaVakat++; /* izbjegavamo slucaj da je napisano 0x:yy */\n\twhile(*pokNaVakat != ':'){\n\t\tvrijeme.sati += *pokNaVakat - '0';\n\t\tvrijeme.sati *= 10;\n\t\tpokNaVakat++;\n\t}\n\tvrijeme.sati /= 10; /* rjesavamo se viska nule */\n\tpokNaVakat++; /* pokazivac je sad na dvotacki, pomjeramo ga na sljedecu cifru/minute */\n\tif(*pokNaVakat == '0') pokNaVakat++; /* izbjegavamo slucaj da je napisano xx:0y */\n\twhile(*pokNaVakat != '\\0'){\n\t\tvrijeme.minute += *pokNaVakat - '0';\n\t\tvrijeme.minute *= 10;\n\t\tpokNaVakat++;\n\t}\n\tvrijeme.minute /= 10; /* rjesavamo se viska nule */\n\treturn vrijeme;\n}\n\nint ucitaj_datoteku(Cas raspored[]) {\n\t/*dodaj slucajeve za greske*/\n\tFILE *ulazna=fopen(\"raspored.dat\", \"rb\");\n\tint rezultat;\n\tif(ulazna == NULL) rezultat = 0;\n\telse rezultat=(int)fread(raspored, sizeof(Cas), KAPACITET, ulazna);\n\tif(ulazna != NULL) fclose(ulazna);\n\treturn rezultat;\n}\n\nint zapisi_datoteku(Cas raspored[], int broj_casova){\n\t/*dodaj slucajeve za greske*/\n\tFILE *izlaz=fopen(\"raspored.dat\", \"wb\");\n\tfwrite(raspored ,sizeof(Cas), broj_casova, izlaz);\n\tfclose(izlaz);\n\treturn 1;\n}\n\nint dodaj_cas(Cas raspored[], int broj_casova, const char* predmet, int trajanje){\n\tif(broj_casova>200) return 0;\n\tint i,k,imaMjesta=0,dan=1,pocetak=9,kraj=pocetak+trajanje;\n\tCas cas;\n\tfor(i=1;i<=6;i++) {\n\t\tdan=i;\n\t\tfor(k=9; k<=19;k++) {\n\t\t\tif(k + trajanje > 19){\n\t\t\t\timaMjesta = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tizmijeniCas(&cas, predmet, k, 0, 0, k+trajanje, 0, 0);\n\t\t\tcas.dan_u_sedmici=dan;\n\t\t\tif(preklapanje(raspored, broj_casova, cas)) {\n\t\t\t\timaMjesta=0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\timaMjesta=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(imaMjesta) break;\n\t}\n\tif(cas.kraj.sati == 19 && cas.kraj.minute > 0) imaMjesta = 0;\n\tif(imaMjesta) \n\t\traspored[broj_casova++]=cas;\n\treturn imaMjesta;\n}\n\nint preklapanje(Cas raspored[], int broj_casova, Cas cas){\n\tint i, preklapa=0;\n\tfor(i=0; i<broj_casova; i++) {\n\t\tif(cas.dan_u_sedmici==raspored[i].dan_u_sedmici) {\n\t\t\tif(cas.pocetak.sati <= raspored[i].kraj.sati) {\n\t\t\t\tif(cas.pocetak.sati < raspored[i].kraj.sati){\n\t\t\t\t\tpreklapa = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(cas.kraj.sati >= raspored[i].pocetak.sati && cas.pocetak.sati<raspored[i].kraj.sati) {\n\t\t\t\tif(cas.kraj.sati == raspored[i].pocetak.sati){\n\t\t\t\t\tif(cas.kraj.minute >= raspored[i].pocetak.minute){\n\t\t\t\t\t\tpreklapa = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tpreklapa=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn preklapa;\n}\n\nvoid ispis_rasporeda(Cas raspored[], int broj_casova){\n\tint i,j,k,ispisan,ispisanoVrijeme, p;\n\tchar broj[10];\n\tprintf(\"\\n%7.0s%-10s%-10s%-10s%-10s%-10sSUB\\n\", \"\" ,\"PON\", \"UTO\", \"SRI\", \"CET\", \"PET\");\n\tfor(i=0;i<=23; i++) {\n\t\tispisanoVrijeme = 0;\n\t\tfor(j = 0; j < broj_casova; j++){\n\t\t\tif(i >= raspored[j].pocetak.sati && i < raspored[j].kraj.sati){\n\t\t\t\tsprintf(broj, \"%d\", i);\n\t\t\t\tprintf(i < 10 ? \"%s:00   \" : \"%s:00  \", broj);\n\t\t\t\tispisanoVrijeme = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(j=1;j<=6;j++) {\n\t\t\tispisan=0;\n\t\t\tfor(k=0; k<broj_casova; k++) {\n\t\t\t\tif(raspored[k].dan_u_sedmici==j && i>=raspored[k].pocetak.sati && i <= raspored[k].kraj.sati) {\n\t\t\t\t\tif(i == raspored[k].kraj.sati && raspored[k].kraj.minute > 0){\n\t\t\t\t\t\tif(!ispisanoVrijeme){\n\t\t\t\t\t\t\tsprintf(broj, \"%d\", i);\n\t\t\t\t\t\t\tprintf(i < 10 ? \"%s:00   \" : \"%s:00  \", broj);\n\t\t\t\t\t\t\tispisanoVrijeme = 1;\n\t\t\t\t\t\t\tfor(p = 1; p < j; p++) printf(\"%-10s\", \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprintf(\"%-10s\", raspored[k].predmet);\n\t\t\t\t\t}\n\t\t\t\t\telse if(i < raspored[k].kraj.sati) printf(\"%-10s\", raspored[k].predmet);\n\t\t\t\t\tispisan=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!ispisan && ispisanoVrijeme) printf(\"%-10s\", \"\");\n\t\t}\n\t\tif(ispisanoVrijeme) printf(\"\\n\");\n\t}\t    \n}\n\nvoid ispisi_dan(Cas raspored[], int broj_casova, int dan){\n\tint i,j, brojacCasa=1;\n\tprintf(\"Uneseni su casovi: \\n\");\n\t\tfor(j=0; j<broj_casova; j++) {\n\t\t\tif(raspored[j].dan_u_sedmici==dan) {\n\t\t\t\tprintf(\"%d) %s (%02d:%02d-%02d:%02d)\\n\", brojacCasa,raspored[j].predmet,raspored[j].pocetak.sati,raspored[j].pocetak.minute,raspored[j].kraj.sati,raspored[j].kraj.minute);\n\t\t\t\tbrojacCasa++;\n\t\t\t}\n\t\t}\n}\n\nvoid promijeni_cas(Cas raspored[], int broj_casova, int dan, int redni_broj, Cas cas){\n\tpromjenjen = 0;\n\tint brojacCasa=0, brojacCasa2, preklapa;\n\tint i,j;\n\tfor(j=0;j<broj_casova;j++) {\n\t\tif(raspored[j].dan_u_sedmici==dan) {\n\t\t\tbrojacCasa++;\n\t\t\tif(brojacCasa==redni_broj) {\n\t\t\t\tpreklapa = 0;\n\t\t\t\tbrojacCasa2 = 0;\n\t\t\t\tfor(i=0; i<broj_casova; i++) {\n\t\t\t\t\tif(cas.dan_u_sedmici==raspored[i].dan_u_sedmici) {\n\t\t\t\t\t\tbrojacCasa2++;\n\t\t\t\t\t\tif(brojacCasa2 == brojacCasa) continue;\n\t\t\t\t\t\tif(cas.pocetak.sati > raspored[i].pocetak.sati && cas.pocetak.sati < raspored[i].kraj.sati) {\n\t\t\t\t\t\t\tpreklapa=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(cas.kraj.sati>=raspored[i].pocetak.sati && cas.pocetak.sati<raspored[i].kraj.sati) {\n\t\t\t\t\t\t\tif(cas.kraj.sati == raspored[i].pocetak.sati){\n\t\t\t\t\t\t\t\tif(cas.kraj.minute >= raspored[i].pocetak.minute){\n\t\t\t\t\t\t\t\t\tpreklapa = 1;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tpreklapa=1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!preklapa){\n\t\t\t\t\tizmijeniCas(&raspored[j], cas.predmet, cas.pocetak.sati, cas.pocetak.minute, 0, cas.kraj.sati, cas.kraj.minute, 0);\n\t\t\t\t\tpromjenjen = PROMJENJEN;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid obrisi_cas(Cas raspored[], int broj_casova, int dan, int redni_broj){\n\tint brojacCasa=0;\n\tint j,i;\n\t\tfor(j=0;j<broj_casova;j++) {\n\t\t\tif(raspored[j].dan_u_sedmici==dan) {\n\t\t\t\tbrojacCasa++;\n\t\t\t\tif(brojacCasa==redni_broj) {\n\t\t\t\t\tfor(i = j; i < broj_casova - 1; i++){\n\t\t\t\t\t\tizmijeniCas(&raspored[i], raspored[i+1].predmet, raspored[i+1].pocetak.sati, raspored[i+1].pocetak.minute, 0,\n\t\t\t\t\t\t\t\t\t\traspored[i+1].kraj.sati, raspored[i+1].kraj.minute, 0);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n}"
    },
    "118": {
        "label": "1",
        "student5287": "#include <stdio.h>\n\n/*Radi, ne diraj, al' sad fkt*/\nint max(int matrica[100][100], int visina, int sirina){\n\tint niz[10000];\n\tint i, j, k = 0;\n\t\n\t/*Matrica u niz*/\n\tfor(i = 0; i < visina; i++){\n\t\tfor(j = 0; j < sirina; j++){\n\t\t\tniz[k] = matrica[i][j];\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\t/*Sort*/\n\tint idx;\n\tint temp;\n\tfor(i = 0; i < k; i++){\n\t\tidx = i;\n\t\tfor(j = i+1; j < k; j++){\n\t\t\tif(niz[j] > niz[idx])\n\t\t\t\tidx = j;\n\t\t}\n\t\ttemp = niz[i];\n\t\tniz[i] = niz[idx];\n\t\tniz[idx] = temp;\n\t}\n\t\n\t/*Count*/\n\tint broj = niz[0];\n\tint ponavljanja = 1;\n\tint maxPonavljanja = 1;\n\t\n\tfor(i = 1; i < k; i++){\n\t\tif(niz[i] == niz[i-1]){\n\t\t\tponavljanja++;\n\t\t}else{\n\t\t\tif(ponavljanja >= maxPonavljanja){\n\t\t\t\tmaxPonavljanja = ponavljanja;\n\t\t\t\tbroj = niz[i-1];\n\t\t\t}\n\t\t\tponavljanja = 1;\n\t\t}\n\t}\n\tif(ponavljanja >= maxPonavljanja){\n\t\tmaxPonavljanja = ponavljanja;\n\t\tbroj = niz[k-1];\n\t}\n\t\n\treturn broj;\n}\n\nint izbaci_kolone(int matrica[100][100], int visina, int sirina, int n){\n\tint i, j;\n\tint brKol = sirina; \n\tint idx = -1;\n\t\n\twhile(1){\n\t\tidx = -1;\n\t\t\n\t\t/*Find first column with n*/\n\t\tfor(j = 0; j < brKol; j++){\n\t\t\tfor(i = 0; i < visina; i++){\n\t\t\t\tif(matrica[i][j] == n){\n\t\t\t\t\tidx = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(idx != -1) break;\n\t\t}\n\t\t\n\t\t/*If no found, exit the main loop*/\n\t\tif(idx == -1)\n\t\t\tbreak;\n\t\t\n\t\t/*If found, overwrite the idx-th column and reduce the column count*/\n\t\tfor(j = idx; j < brKol-1; j++){\n\t\t\tfor(i = 0; i < visina; i++){\n\t\t\t\tmatrica[i][j] = matrica[i][j+1];\n\t\t\t}\n\t\t}\n\t\t\n\t\tbrKol--;\n\t}\n\t\n\treturn brKol;\n}\n\nint main() {\n\t\n\tint matrica[100][100];\n\tint sirina, visina;\n\tint i, j;\n\t\n\tprintf(\"Unesite sirinu i visinu matrice: \");\n\tscanf(\"%d %d\", &sirina, &visina);\n\t\n\tfor(i = 0; i < visina; i++){\n\t\tprintf(\"Unesite elemente %d. reda: \", i+1);\n\t\tfor(j = 0; j < sirina; j++){\n\t\t\tscanf(\"%d\", &matrica[i][j]);\n\t\t}\n\t}\n\t\n\tint kol = sirina;\n\tint prolaz = 1;\n\tint broj;\n\t\n\twhile(kol > 0){\n\t\tbroj = max(matrica, visina, kol);\n\t\tkol = izbaci_kolone(matrica, visina, kol, broj);\n\t\t\n\t\tif(kol == 0){\n\t\t\tprintf(\"\\nNakon %d. prolaza matrica je prazna!\", prolaz);\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tprintf(\"\\nNakon %d. prolaza matrica glasi:\\n\", prolaz);\n\t\tfor(i = 0; i < visina; i++){\n\t\t\tfor(j = 0; j < kol; j++){\n\t\t\t\tprintf(\"%5d\", matrica[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\t\n\t\tprolaz++;\n\t}\n\t\n\treturn 0;\n}\n",
        "student6195": "#include <stdio.h>\n#include <math.h>\n#define BR_EL 100\n\nint max(int matrica[100][100], int visina, int sirina)\n{\n    /* Pretvaramo matricu u niz, nas niz ce imati visina * sirina elemenata, a to je maksimalno 100 * 100 = 10000 */\n    int niz_matrice[10000];\n    int k = 0, l = 0, s = 0;\n    while(k < visina) {\n        niz_matrice[l] = matrica[k][s];\n        l++;\n        s++;\n        if(s >= sirina) {\n            s = 0;\n            k++;\n        }\n    }\n    /* Sortiramo nas niz, koji je sacinjen od elemenata matrice */\n    int najveci, temp, i, j;\n    for(i = 0; i < l; i++) {\n        najveci = i;\n        for(j = i + 1; j < l; j++) {\n            if(niz_matrice[j] > niz_matrice[najveci])\n                najveci = j;\n        }\n        temp = niz_matrice[i];\n        niz_matrice[i] = niz_matrice[najveci];\n        niz_matrice[najveci] = temp;\n    }\n\n    int brojac_ponavljanja = 1, novi_clan_niza = niz_matrice[0], najveci_broj_ponavljanja = 1;\n\n    /* Provjeravamo da li se neki broj ponavlja u nizu, ako se ponavlja brojac_ponavljanja povecaj, ako se ne ponavlja brojac_ponavljanja ostavi kakav jeste\n    ako se ponavlja nekoliko puta postavi da je to najveci_broj_ponavljanja pa kroz jos jednu petlju provjeri je li to zaista njaveci broj ponavljanja nekog\n    broja u nasem nizu*/\n\n    for(i = 1; i < l; i++) {\n        if(niz_matrice[i] == niz_matrice[i - 1]) {\n            brojac_ponavljanja++;\n        } else {\n            if(brojac_ponavljanja >= najveci_broj_ponavljanja) {\n                najveci_broj_ponavljanja = brojac_ponavljanja;\n                novi_clan_niza = niz_matrice[i - 1];\n            }\n            brojac_ponavljanja = 1;\n        }\n    }\n    if(brojac_ponavljanja >= najveci_broj_ponavljanja) {\n        najveci_broj_ponavljanja = brojac_ponavljanja;\n        novi_clan_niza = niz_matrice[l - 1];\n    }\n\n    return novi_clan_niza;\n}\n\nint izbaci_kolone(int matrica[100][100], int visina, int sirina, int N)\n{\n    int i, j, izbacivac = -2;\n    /* Trazimo kolonu u kojoj postoji to N koje treba izbaciti, kada je nadjemo neka nasa logicka izbacivac zapamti indeks te kolone i nek napusti petlju tog trenutka */\n    while(sirina > 0) {\n        izbacivac = -2;\n\n        for(j = 0; j < sirina; j++) {\n            for(i = 0; i < visina; i++)  {\n                if(matrica[i][j] == N) {\n                    izbacivac = j;\n                    break;\n                }\n            }\n            if(izbacivac != -2) {\n                break;\n            }\n        }\n        /* Ako je logicka izbacivac = 0, onda nije pronadjen ni jedan element koji se treba izbaciti zavrsi petlju (break) */\n        if(izbacivac == -2) {\n            break;\n        }\n\n        for(j = izbacivac; j < sirina - 1; j++) {\n            for(i = 0; i < visina; i++) {\n                matrica[i][j] = matrica[i][j + 1];\n            }\n        }\n\n        sirina --;\n\n    }\n\n    return sirina;\n}\nint main()\n{\n    int visina, sirina, matrica[BR_EL][BR_EL], i, j;\n\n    printf(\"Unesite sirinu i visinu matrice: \");\n    scanf(\"%d %d\", &sirina, &visina);\n\n    for(i = 0; i < visina; i++) {\n        printf(\"Unesite elemente %d. reda: \", i + 1);\n        for(j = 0; j < sirina; j++) {\n            scanf(\"%d\",&matrica[i][j]);\n        }\n    }\n    int broj_prolaza = 1, najveciBroj, kolona = sirina;\n\n    while(kolona > 0) {\n\n        najveciBroj = max(matrica, visina, kolona);\n        kolona = izbaci_kolone(matrica, visina, kolona, najveciBroj);\n\n        if(kolona == 0) {\n            printf(\"\\nNakon %d. prolaza matrica je prazna!\", broj_prolaza);\n            break;\n        }\n        printf(\"\\nNakon %d. prolaza matrica glasi:\\n\", broj_prolaza);\n        for(i = 0; i < visina; i++) {\n            for(j = 0; j < kolona; j++) {\n                printf(\"%5d\", matrica[i][j]);\n            }\n            printf(\"\\n\");\n        }\n        broj_prolaza++;\n\n    }\n\n    return 0;\n}\n"
    },
    "119": {
        "label": "0",
        "student2421": "#include <stdio.h>\n#include <math.h>\n\nchar* ubaci_broj(char* s, int broj) {\n\t\n\tchar *pocetak, *pok, *pok1, *kraj, *provjerijelzadnja;\n\tint ubacivanje=1, temp=broj, brojac=0;\n\t\n\tdo{\n\t\tubacivanje++;     //prebrojavanje cifara broja\n\t\ttemp/=10;\n\t}while(temp!=0);\n\t\n\t\n\tif(broj<0) {\n\t\tbrojac++;\n\t\tubacivanje++;\n\t\tbroj=-broj;\n\t}\n\tpok=s;\n\twhile(*pok==' ') pok++; //preskoci razmak ako je na pocetku\n\twhile(*pok!='\\0'){\n\t\tif(*pok==' '){\n\t\t\tprovjerijelzadnja=pok;\n\t\t\twhile(*provjerijelzadnja==' ') provjerijelzadnja++;\n\t\t\tif(provjerijelzadnja=='\\0')break; //nema umetanja ako je zadnja\n\t\t\tpocetak=pok;\n\t\t\tkraj=pok;\n\t\t\t\n\t\t\twhile(*kraj==' ')kraj++;\n\t\t\tbrojac=kraj-pocetak; //broj razmaka ako zatreba\n\t\t\tpok1=pok;\n\t\t\t\n\t\t\twhile(*pok1!='\\0') pok1++;\n\t\t\twhile(pok1>pok){\n\t\t\t\t*(ubacivanje+pok1)=*pok1;\n\t\t\t\tpok1--; //nakon ovog pok1 ce biti kraj umetanja a pok je na razmaku koji treba zadrzati pa umecemo izmedju njih dvoje\n\t\t\t\t\n\t\t\t}\n\t\t\tpok1+=ubacivanje; \n\t\t\ttemp=broj;\n\t\t\n\t\t\t*pok1 = ' ';\n\t\t\tpok1--;\n\t\t\twhile(temp!=0){\n\t\t\t\t*pok1=temp%10+'0';\n\t\t\t\ttemp/=10;\n\t\t\t\tpok1--;\n\t\t\t}\n\t\t\tif(broj<0) {\n\t\t\t\t*pok1='-';\n\t\t\t\tpok1--;\n\t\t\t}\n\t\t\t*pok1=' ';\n\t\t\tpok+=ubacivanje+brojac;\n\t\t}\n\t\tpok++;\n\t}\n\treturn s;\n\t\n}\nint main() {\n\t\n\tchar s[44] = \"Ovo je neki primjer teksta\";\n\tprintf(\"\\\"%s\\\"\", ubaci_broj(s, 123));\n\t\n\treturn 0;\n}\n",
        "student4420": "#include <stdio.h>\n#include <stdlib.h>\nchar* ubaci_broj(char*tekst,int broj) {\n\tchar *s1,*s2,*s3;\n\ts1=tekst;\n\ts2=s1;\n\ts3=s1;\n\tint broj2=0,brojac2=0;\n\tbroj2=abs(broj);\n\tint brojac=0;\n\twhile(broj2 != 0) {\n\t\tbrojac++;\n\t\tbroj2=broj2/10;\n\t}\n\tif(broj < 0) brojac++;\n\tbroj2=abs(broj);\n\twhile( *s1 != '\\0' && *(s1+1)!='\\0')  {\n\t\tif (*s1=='\\0') break;\n\t\twhile(*s1 != '\\0' && *s1 ==' ') s1++;\n\t\t\t\tif ( *s1 == '\\0') break;\n\n\t\twhile(*s1 != '\\0' && *s1!=' ') s1++;\n\t\tif ( *s1 == '\\0') break;\n\t\ts2=s1;\n\t\ts3=s2;\n\t\twhile(*s3 != '\\0') s3++;\n\t\twhile ( s3 != s2 && *s2!='\\0') {\n\t\t\t \n\t\t\t*(s3+brojac+1) = *s3;\n\t\t\ts3--;\n\t\t}\n\t\ts3=s3+brojac+1;\n\t\t*s3=' ';\n\t\ts3--;\n\t\tbrojac2=0;\n\t\twhile(broj2!=0){\n\t\t\n\t\t\t*s3=broj2%10+'0';\n\t\t\tbroj2=broj2/10;\n\t\t\ts3--;\n\t\t\tbrojac2++;\n\t\t\t\tif( brojac-brojac2 == 1 && broj < 0){\n\t\t\t\t*s3='-';\n\t\t\t\ts3--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tbroj2=abs(broj);\n\t\tif(*s1 =='\\0') break;\n\t\tif (broj<0) s1=s3+brojac+2;\n\t\telse s1=s3+brojac+1;\n\t\ts1++;\n\t}\n\ts1 = tekst;\n\twhile(*s1 != '\\0') s1++;\n\ts1--;\n\tif ( *s1 == ' ') {\n\t*s1='\\0';\n\ts1--,\n\t*s1='\\0';\n\ts1--;\n\twhile(*s1 == ' ') s1--;\n\twhile(*s1>='1' && *s1<='9') *s1=' ';\n}\n\ts1=tekst;\n\twhile(*s1 !='\\0' ) {\n\t\tif(s1==tekst){\n\t\twhile(*s1==' ' && *s1!='\\0') s1++;\n\t\t}\n\t\tif ( *(s1+1) != '\\0') {\n\t\t\ts2=s1;\n\t\t\tif ( *s1== ' ' && *(s1+1) == ' ') {\n\t\t\t\twhile(*(s1+1) != '\\0') {\n\t\t\t\t\t*s1=*(s1+1);\n\t\t\t\t\ts1++;\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\t\t\t*s1=*(s1+1);\n\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\t\ts1=s2;\n\n\t\t}\n\t\twhile(*s1==' ' && *s1!='\\0') s1++;\n\t\tif(*s1=='\\0') break;\n\t\ts1++;\n\t}\n   \n\treturn tekst;\n}\n\n\nint main() {\n/* AT4: Vise razmaka izmedju rijeci */\nchar s[77] = \"Ovdje  izmedju    rijeci ima      po nekoliko   razmaka\";\nprintf(\"\\\"%s\\\"\", ubaci_broj(s, 320));\n\treturn 0;\n}\n"
    },
    "120": {
        "label": "1",
        "student5939": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 3\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Berina Cocalic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: bcocalic1@etf.unsa.ba\n\t\n*/\n\n#include <iostream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n#include <type_traits>\n#include <deque>\n#include <iomanip>\n\n// broj ne smije pocinjati nulom\nint SumaCifara(long long int broj) {\n\t\n\tint rezultat{};\n\tbroj = fabs(broj);\n\t\n\twhile (broj != 0) {\n\t\trezultat = rezultat + (broj % 10);\n\t\tbroj = broj / 10;\n\t}\n\t\n\treturn rezultat;\n\t\n\t\n}\n\n\nint SumaDjelilaca(long long int broj) {\n\t\n\tint rezultat = 0;\n\tbroj = fabs(broj);\n\t\n\tfor (long long int i = 1; i <= broj; i++) {\n\t\t\n\t\tif (broj % i == 0) \n\t\t    rezultat = rezultat + i;\n\t\t    \n\t}\n\treturn rezultat;\n}\n\nint BrojProstihFaktora(long long int broj) {\n\tint rezultat {};\n\tbroj = fabs(broj);\n\t\n\tif (broj == 0)\n\t    rezultat = 0;\n\telse if (broj == 1) \n\t    rezultat = 1;\n\telse {\n\t\tint ostatak = broj % 2;\n\t\t\n\t\twhile (ostatak == 0) {\n\t\t\trezultat = rezultat + 1;\n\t\t\tbroj = broj / 2;\n\t\t\tostatak = broj % 2;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (long long int i=3; i <= broj; i = i + 2) {\n\t\t\tint ostatak = broj % i;\n\t\t\t\n\t\t\twhile (ostatak == 0) {\n\t\t\t\trezultat++;\n\t\t\t\tbroj = broj / i;\n\t\t\t\tostatak = broj % i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn rezultat;\n}\n\n\nint BrojSavrsenihDjelilaca(long long int broj) {\n\tint rezultat {};\n\tbroj = fabs(broj);\n\t\n\tfor (long long int i = 1; i <= broj; i++) {\n\t\tint suma = SumaDjelilaca(i) - i;\n\t\t\n\t\tif (suma == i && broj % i == 0)\n\t\t    rezultat++;\n\t\t    \n\t}\n\t\n\treturn rezultat;\n}\n\n\ntemplate <typename T1>\n\nbool Jednaki(T1 x, T1 y, double eps = 1e-10) {\n\tbool uslov = (x < 0 && y > 0) || (x > 0 && y < 0);\n\t\n\tif (uslov) return false;\n\t    return std::fabs(x-y) <= eps*(std::fabs(x)+std::fabs(y));\n}\n\ntemplate <typename T1, typename T2, typename T3, typename T4>\n\nauto UvrnutiPresjek (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2, T4 funkcija_kriterija(T3))-> typename std::vector<std::vector<typename std::remove_reference<decltype (*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak2)>::type>> matrica;\n\twhile (pocetak1 != kraj1) {\n\t\tT4 br_vrij1 = funkcija_kriterija(*pocetak1);\n\t\tT2 temp = pocetak2;\n\t\t\n\t\twhile (temp != kraj2) {\n\t\t\tT4 br_vrij2 = funkcija_kriterija(*temp);\n\t\t\t\n\t\t\tif (Jednaki(br_vrij1, br_vrij2)) {\n\t\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(3);\n\t\t\t\tpomocni[0] = *pocetak1;\n\t\t\t\tpomocni[1] = *temp;\n\t\t\t\tpomocni[2] = br_vrij1;\n\t\t\t\tmatrica.push_back(pomocni);\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\n\t\n\tstd::sort(matrica.begin(), matrica.end(), [](typename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vek1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vek2) {\n\t\tif (!Jednaki(vek1[2],vek2[2])) return vek1[2] < vek2[2];\n\t\telse if((Jednaki(vek1[2], vek2[2])) && !Jednaki(vek1[0], vek2[0])) return vek1[0] < vek2[0];\n\t\treturn vek1[1] < vek2[1];});\n\treturn matrica;\n\t\n\t}\n\t\ntemplate <typename T1, typename T2>\nauto UvrnutiPresjek (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2) -> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector <std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\twhile(pocetak1 != kraj1) {\n\t\tT2 temp=pocetak2;\n\t\twhile(temp != kraj2) {\n\t\t\tif(Jednaki(*pocetak1, *temp)) {\n\t\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(3);\n\t\t\t\tpomocni[0]=*pocetak1;\n\t\t\t\tpomocni[1]=0;\n\t\t\t\tpomocni[2]=0;\n\t\t\t\tmatrica.push_back(pomocni);\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\tstd::sort (matrica.begin(), matrica.end(),[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>vek1, typename std::vector <typename std::remove_reference <decltype(*pocetak1)>::type> vek2) {\n\t\treturn vek1[0] < vek2[0];});\n\t\treturn matrica;\n\t}\n\t\n\ttemplate <typename T1, typename T2, typename T3, typename T4>\n\tauto UvrnutaRazlika (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2, T4 funkcija_kriterija(T3)) -> typename std::vector<std::vector <typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\t\ttypename std::vector <std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tT1 temp1=pocetak1;\n\twhile (temp1 != kraj1) {\n\t\tT4 br_vrij1 = funkcija_kriterija (*temp1);\n\t\tbool status = false;\n\t\tT2 temp2 = pocetak2;\n\t\twhile (temp2 != kraj2) {\n\t\t\tT4 br_vrij2 = funkcija_kriterija (*temp2);\n\t\t\tif (Jednaki(br_vrij1, br_vrij2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp2++;\n\t\t}\n\t\tif (!status) {\n\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(2);\n\t\t\tpomocni[0]=*temp1;\n\t\t\tpomocni[1]=br_vrij1;\n\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\ttemp1++;\n\t}\n\twhile (pocetak2 != kraj2) {\n\t\tT4 br_vrij2 = funkcija_kriterija(*pocetak2);\n\t\tbool status = false;\n\t\tT1 temp = pocetak1;\n\t\twhile (temp != kraj1) {\n\t\t\tT4 br_vrij1 = funkcija_kriterija (*temp);\n\t\t\tif (Jednaki(br_vrij1, br_vrij2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tif (!status) {\n\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak2)>::type> pomocni(2);\n\t\t\tpomocni[0] = *pocetak2;\n\t\t\tpomocni[1] = br_vrij2;\n\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\tpocetak2++;\n\t}\n\t\n\tstd::sort (matrica.begin(), matrica.end(), [](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek2) {\n\t\tif (!Jednaki(vek1[0], vek2[0])) return vek1[0] > vek2[0];\n\t\treturn vek1[1] > vek2[1];});\n\t\treturn matrica;\n}\n\ntemplate <typename T1, typename T2>\n\tauto UvrnutaRazlika (T1 pocetak1, T1 kraj1, T2 pocetak2, T2 kraj2) -> typename std::vector<std::vector <typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector <typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tT1 temp1=pocetak1;\n\twhile (temp1==kraj1) {\n\t\tbool status=false;\n\t\tT2 temp2 = pocetak2;\n\t\twhile (temp2 != kraj2) {\n\t\t\tif (Jednaki(*temp1, *temp2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp2++;\n\t\t}\n\t\tif(!status) {\n\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(2);\n\t\t\tpomocni[0] = *temp1;\n\t\t\tpomocni[1] = 0;\n\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\ttemp1++;\n\t}\n\twhile (pocetak2 != kraj2) {\n\t\tbool status = false;\n\t\tT1 temp = pocetak1;\n\t\twhile (temp != kraj1) {\n\t\t\tif(Jednaki(*temp, *pocetak2)) {\n\t\t\t\tstatus = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp++;\n\t\t}\n\t\tif (!status) {\n\t\t\t\tstd::vector <typename std::remove_reference<decltype(*pocetak1)>::type> pomocni(2);\n\t\t\t\tpomocni[0] = *pocetak2;\n\t\t\t\tpomocni[1] = 0;\n\t\t\t\tmatrica.push_back(pomocni);\n\t\t}\n\t\tpocetak2++;\n\t}\n\tstd::sort (matrica.begin(), matrica.end(), [](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vek2) {\n\t\treturn vek1[0] > vek2[0];});\n\t\treturn matrica;\n\t\t\n\t}\n\t\nint main ()\n{\n\tint ukupno {};\n\tstd::cout << \"Unesite broj elemenata prvog kontejnera: \";\n\tstd::cin >> ukupno;\n\tstd::cout << \"Unesite elemente prvog kontejnera: \";\n    std::deque<int> d1(ukupno);\n    int unos {};\n    \n    for (int i = 0; i < ukupno; i++) {\n    \tstd::cin >> unos;\n    \tbool status = false;\n    \t\n    \tfor (int j = 0; j < d1.size(); j++) {\n    \t\tif (Jednaki(unos, d1[j])) {\n    \t\t\tstatus = true;\n    \t\t\tbreak;\n    \t\t}\n    \t}\n    \tif (!status) d1[i] = unos;\n    \telse i--;\n    \t}\n    \t\n    int ukupno2 {};\n    std::cout << \"Unesite broj elemenata drugog kontejnera: \";\n    std::cin >> ukupno2;\n    std::cout << \"Unesite elemente drugog kontejnera: \";\n    std::deque<int> d2 (ukupno2);\n    \n    for(int i = 0; i < ukupno2; i++) {\n    \tstd::cin >> unos;\n    \tbool status = false;\n    \t\n    \tfor(int j = 0; j < d1.size(); j++)\n    \t    if (Jednaki(unos, d2[j])) {\n    \t    \tstatus = true;\n    \t    \tbreak;\n    \t    }\n    \t    \n    \t if (!status) d2[i] = unos;\n    \t else i--;\n    }\n    \n    std::vector<std::vector<int>> uvrnutiPresjek = UvrnutiPresjek(d1.begin(), d1.end(), d2.begin(), d2.end(), SumaCifara);\n    std::vector<std::vector<int>> uvrnutaRazlika = UvrnutaRazlika(d1.begin(), d1.end(), d2.begin(), d2.end(), BrojProstihFaktora);\n    std::cout << \"Uvrnuti presjek kontejnera: \\n\";\t\n    \n    for (int i = 0; i < uvrnutiPresjek.size(); i++) {\n    \tfor (int j = 0; j < uvrnutiPresjek[i].size(); j++) {\n    \t    std::cout << std::right << std::setw(6) << uvrnutiPresjek[i][j] << \" \";\n    \t}\n    \t    std::cout << std::endl;\n    }\n    \n    std::cout << \"Uvrnuta razlika kontejnera: \\n\";\n    for (int i = 0; i < uvrnutaRazlika.size(); i++) {\n    \tfor (int j = 0; j < uvrnutaRazlika[i].size(); j++){\n    \t    std::cout << std::right << std::setw(6) << uvrnutaRazlika[i][j] << \" \";\n    \t}\n    std::cout << std::endl;\n    }\n    std::cout << \"Dovidjenja!\";\n\treturn 0;\n\n}",
        "student7001": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 3\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Berina Cocalic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: bcocalic1@etf.unsa.ba\n\t\n*/\n#include <iostream>\n#include <algorithm>\n#include <type_traits>\n#include <deque>\n#include <vector>\n#include <cmath>\n#include <iomanip>\n\nint SumaCifara(long long int broj) {\n\tbroj=fabs(broj);\n\tint suma_cifara{};\n\twhile(1) {\n\t\tif (broj==0) break;\n\t\tsuma_cifara+=(broj%10);\n\t\tbroj/=10;\n\t}\n\treturn suma_cifara;\n}\n\nint SumaDjelilaca(long long int broj) {\n\tbroj=fabs(broj);\n\tint suma_djelilaca{};\n\tfor (long long int i=1; i<=broj; i++)\n\t\tif (broj%i==0) suma_djelilaca+=i;\n\treturn suma_djelilaca;\n}\n\nint BrojProstihFaktora(long long int broj) {\n\tint broj_prostih_faktora{};\n\tbroj=fabs(broj);\n\tif (broj==0) broj_prostih_faktora=0;\n\telse if (broj==1) broj_prostih_faktora=1;\n\telse {\n\t\tint ostatak=broj%2;\n\t\twhile (ostatak==0) {\n\t\t\tbroj_prostih_faktora++;\n\t\t\tbroj=broj/2;\n\t\t\tostatak=broj%2;\n\t\t}\n\t\tfor (long long int i=3; i<=broj; i+=2) {\n\t\t\tint ostatak=broj%i;\n\t\t\twhile (ostatak==0) {\n\t\t\t\tbroj_prostih_faktora++;\n\t\t\t\tbroj=broj/i;\n\t\t\t\tostatak=broj%i;\n\t\t\t}\n\t\t}\n\t}\n\treturn broj_prostih_faktora;\n}\n\nint BrojSavrsenihDjelilaca(long long int broj) {\n\tbroj=fabs(broj);\n\tint broj_savrsenih_djelilaca{};\n\tfor (long long int i=1; i<=broj; i++)\n\t\tif (broj%i==0 && (SumaDjelilaca(i)-i)==i) broj_savrsenih_djelilaca++;\n\treturn broj_savrsenih_djelilaca;\n}\n\ntemplate <typename TipElementa1>\nbool JesuLiJednaki(TipElementa1 x1, TipElementa1 x2, double Eps=1e-10) {\n\tif ((x1<0 && x2>0) || (x1>0 && x2<0)) return false;\n\treturn std::fabs(x1-x2) <= Eps*(std::fabs(x1)+std::fabs(x2));\n}\n\ntemplate <typename TipElementa1, typename TipElementa2, typename TipElementa3, typename TipElementa4>\nauto UvrnutiPresjek(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2, \n\t\t\t\t\tTipElementa4 funkcija_kriterija(TipElementa3)) \n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak2)>::type>> matrica;\n\twhile(pocetak1!=kraj1) {\n\t\tTipElementa4 vrijednost1=funkcija_kriterija(*pocetak1);\n\t\tTipElementa2 tmp=pocetak2;\n\t\twhile(tmp!=kraj2) {\n\t\t\tTipElementa4 vrijednost2=funkcija_kriterija(*tmp);\n\t\t\tif (JesuLiJednaki(vrijednost1, vrijednost2)) {\n\t\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(3);\n\t\t\t\tpomocni_vektor[0]=*pocetak1;\n\t\t\t\tpomocni_vektor[1]=*tmp;\n\t\t\t\tpomocni_vektor[2]=vrijednost1;\n\t\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(), \n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak2)>::type> vektor2){\n\t\tif (!JesuLiJednaki(vektor1[2], vektor2[2])) return vektor1[2]<vektor2[2];\n\t\telse if ((JesuLiJednaki(vektor1[2], vektor2[2])) && !JesuLiJednaki(vektor1[0], vektor2[0])) return vektor1[0]<vektor2[0];\n\t\treturn vektor1[1]<vektor2[1];});\n\treturn matrica;\n}\n\ntemplate <typename TipElementa1, typename TipElementa2>\nauto UvrnutiPresjek(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2)\n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\twhile(pocetak1!=kraj1) {\n\t\tTipElementa2 tmp=pocetak2;\n\t\twhile(tmp!=kraj2) {\n\t\t\tif (JesuLiJednaki(*pocetak1, *tmp)) {\n\t\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(3);\n\t\t\t\tpomocni_vektor[0]=*pocetak1;\n\t\t\t\tpomocni_vektor[1]=0;\n\t\t\t\tpomocni_vektor[2]=0;\n\t\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tpocetak1++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(),\n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor2){\n\t\treturn vektor1[0]<vektor2[0];});\n\treturn matrica;\n}\n\ntemplate <typename TipElementa1, typename TipElementa2, typename TipElementa3, typename TipElementa4>\nauto UvrnutaRazlika(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2,\n\t\t\t\t\tTipElementa4 funkcija_kriterija(TipElementa3)) \n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tTipElementa1 tmp1=pocetak1;\n\twhile(tmp1!=kraj1) {\n\t\tTipElementa4 vrijednost1=funkcija_kriterija(*tmp1);\n\t\tbool pronadjen=false;\n\t\tTipElementa2 tmp2=pocetak2;\n\t\twhile(tmp2!=kraj2) {\n\t\t\tTipElementa4 vrijednost2=funkcija_kriterija(*tmp2);\n\t\t\tif (JesuLiJednaki(vrijednost1, vrijednost2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp2++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*tmp1;\n\t\t\tpomocni_vektor[1]=vrijednost1;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\ttmp1++;\n\t}\n\twhile(pocetak2!=kraj2) {\n\t\tTipElementa4 vrijednost2=funkcija_kriterija(*pocetak2);\n\t\tbool pronadjen=false;\n\t\tTipElementa1 tmp=pocetak1;\n\t\twhile(tmp!=kraj1) {\n\t\t\tTipElementa4 vrijednost1=funkcija_kriterija(*tmp);\n\t\t\tif (JesuLiJednaki(vrijednost1, vrijednost2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak2)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*pocetak2;\n\t\t\tpomocni_vektor[1]=vrijednost2;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\tpocetak2++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(),\n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor2){\n\t\tif (!JesuLiJednaki(vektor1[0], vektor2[0])) return vektor1[0]>vektor2[0];\n\t\treturn vektor1[1]>vektor2[1];});\n\treturn matrica;\n}\n\ntemplate <typename TipElementa1, typename TipElementa2>\nauto UvrnutaRazlika(TipElementa1 pocetak1, TipElementa1 kraj1, TipElementa2 pocetak2, TipElementa2 kraj2) \n\t\t\t\t\t-> typename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> {\n\ttypename std::vector<std::vector<typename std::remove_reference<decltype(*pocetak1)>::type>> matrica;\n\tTipElementa1 tmp1=pocetak1;\n\twhile(tmp1!=kraj1) {\n\t\tbool pronadjen=false;\n\t\tTipElementa2 tmp2=pocetak2;\n\t\twhile(tmp2!=kraj2) {\n\t\t\tif (JesuLiJednaki(*tmp1, *tmp2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp2++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*tmp1;\n\t\t\tpomocni_vektor[1]=0;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\ttmp1++;\n\t}\n\twhile(pocetak2!=kraj2) {\n\t\tbool pronadjen=false;\n\t\tTipElementa1 tmp=pocetak1;\n\t\twhile(tmp!=kraj1) {\n\t\t\tif (JesuLiJednaki(*tmp, *pocetak2)) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttmp++;\n\t\t}\n\t\tif (!pronadjen) {\n\t\t\tstd::vector<typename std::remove_reference<decltype(*pocetak1)>::type> pomocni_vektor(2);\n\t\t\tpomocni_vektor[0]=*pocetak2;\n\t\t\tpomocni_vektor[1]=0;\n\t\t\tmatrica.push_back(pomocni_vektor);\n\t\t}\n\t\tpocetak2++;\n\t}\n\tstd::sort(matrica.begin(), matrica.end(),\n\t[](typename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor1,\n\ttypename std::vector<typename std::remove_reference<decltype(*pocetak1)>::type> vektor2){\n\t\treturn vektor1[0]>vektor2[0];});\n\treturn matrica;\n}\n\nint main () {\n\tint broj_elemenata1{};\n\tstd::cout << \"Unesite broj elemenata prvog kontejnera: \";\n\tstd::cin >> broj_elemenata1;\n\tstd::cout << \"Unesite elemente prvog kontejnera: \";\n\tstd::deque<int> dek1(broj_elemenata1);\n\tint unesena_vrijednost{};\n\tfor (int i=0; i<broj_elemenata1; i++) {\n\t\tstd::cin >> unesena_vrijednost;\n\t\tbool pronadjen=false;\n\t\tfor (int k=0; k<dek1.size(); k++)\n\t\t\tif (JesuLiJednaki(unesena_vrijednost, dek1[k])) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (!pronadjen) dek1[i]=unesena_vrijednost;\n\t\telse i--;\n\t}\n\tint broj_elemenata2{};\n\tstd::cout << \"Unesite broj elemenata drugog kontejnera: \";\n\tstd::cin >> broj_elemenata2;\n\tstd::cout << \"Unesite elemente drugog kontejnera: \";\n\tstd::deque<int> dek2(broj_elemenata2);\n\tfor (int i=0; i<broj_elemenata2; i++) {\n\t\tstd::cin >> unesena_vrijednost;\n\t\tbool pronadjen=false;\n\t\tfor (int k=0; k<dek1.size(); k++)\n\t\t\tif (JesuLiJednaki(unesena_vrijednost, dek2[k])) {\n\t\t\t\tpronadjen=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (!pronadjen) dek2[i]=unesena_vrijednost;\n\t\telse i--;\n\t}\n\tstd::vector<std::vector<int>> uvrnuti_presjek = UvrnutiPresjek(dek1.begin(), dek1.end(), dek2.begin(), dek2.end(), SumaCifara);\n\tstd::vector<std::vector<int>> uvrnuta_razlika = UvrnutaRazlika(dek1.begin(), dek1.end(), dek2.begin(), dek2.end(), BrojProstihFaktora);\n\tstd::cout << \"Uvrnuti presjek kontejnera: \\n\";\n\tfor (int i=0; i<uvrnuti_presjek.size(); i++) {\n\t\tfor (int j=0; j<uvrnuti_presjek[i].size(); j++)\n\t\t\tstd::cout << std::right << std::setw(6) << uvrnuti_presjek[i][j] << \" \";\n\t\tstd::cout << std::endl;\n\t}\n\tstd::cout << \"Uvrnuta razlika kontejnera: \\n\";\n\tfor (int i=0; i<uvrnuta_razlika.size(); i++) {\n\t\tfor (int j=0; j<uvrnuta_razlika[i].size(); j++)\n\t\t\tstd::cout << std::right << std::setw(6) << uvrnuta_razlika[i][j] << \" \";\n\t\tstd::cout << std::endl;\n\t}\n\tstd::cout << \"Dovidjenja!\";\n\treturn 0;\n}"
    },
    "121": {
        "label": "0",
        "student2463": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n\nvoid ubaci (int p[],int brojac)\n{\n\tint i, sum, n;\n\n\tfor(i=brojac-1; i>0; --i) {\n\t\tp[2*i]=p[i];\n\t}\n\tfor(i=0; i<(2*brojac)-1; ++i) {\n\t\tn=(int)fabs((float)p[i]);\n\t\tsum=0;\n\t\twhile(1) {\n\n\t\t\tsum=sum+(n%10);\n\t\t\tif((n/10)==0)\n\t\t\t\tbreak;\n\t\t\tn=n/10;\n\t\t}\n\t\ti++;\n\t\tp[i]=sum;\n\t}\n\tbrojac=brojac*2;\n}\nint izbaci(int p[],int brojac)\n{\n\tint a1=1, a2=1, i, j, pom;\n\n\tfor(i=0; i<brojac; i++) {\n\t\ta1=1;\n\t\ta2=1;\n\t\twhile(1) {\n\t\t\tif(p[i]==a2) {\n\t\t\t\tfor(j=i; j<(brojac-1); ++j) {\n\t\t\t\t\tp[j]=p[j+1];\n\t\t\t\t}\n\t\t\t\tbrojac--;\n\t\t\t\ti--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(a2>p[i])\n\t\t\t\tbreak;\n\n\t\t\tpom=a2;\n\t\t\ta2=a1+a2;\n\t\t\ta1=pom;\n\t\t}\n\t}\n\treturn brojac;\n}\nint main()\n{\n\n\tint i=0, x, polje[20];\n\tchar c;\n\tint brojac=0;\n\tprintf(\"Unesite niz od 10 brojeva: \");\n\tfor(i=0; i<10; i++) {\n\t\tscanf(\"%d \", &polje[i]);\n\t\tbrojac++;\n\t}\n\tubaci (polje,brojac);\n\n\tx=izbaci(polje,brojac);\n\tprintf(\"Modificirani niz glasi: \");\n\tfor(i=0; i<x; i++) {\n\t\tprintf(\"%d\", polje[i]);\n\t\tif(i<x-1)\n\t\t\tprintf(\", \");\n\t\tif(i==x-1)\n\t\t\tprintf(\".\");\n\t}\n\treturn 0;\n}\n",
        "student4036": "#include <stdio.h>\n\n#define Vel 200\n/* Ubacuje u niz pozotovan broj koji predstavlja sumu cifara predhodnog clana*/\nvoid ubaci(int niz[], int brojClanova){\n\tint i = 0;\n\tfor(; i<brojClanova; i++){\n\t\tniz[i * 2] = niz[i];\t\n\t}\n\tfor(i = 0; i<brojClanova*2; i+=2){\n\t\tint zaUbacaj = 0;\n\t\tint trVr = niz[i];\n\t\twhile(trVr != 0){\n\t\t\tzaUbacaj += trVr%10;\n\t\t\ttrVr/=10;\n\t\t}\n\t\tniz[i + 1] = zaUbacaj;\n\t}\n}\n/*provjerava da li je broj fibonacijev*/\nint fibonacijevJe(int broj){\n\tint vrPrije = 1, vrNova = 1;\n\twhile(1){\n\t\tif(broj == vrNova) return 1;\n\t\tif(broj < vrNova) return 0;\n\t\tint temp = vrPrije + vrNova;\n\t\tvrPrije = vrNova;\n\t\tvrNova = temp;\n\t}\n}\n\nint izbaci(int niz[], int brojClanova){\n\tint i = 0, j;\n\tfor(; i < brojClanova; i++){\n\t\tif(fibonacijevJe(niz[i])){\n\t\t\tfor(j = i; j < brojClanova-1; j++){\n\t\t\t\tint temp = niz[j];\n\t\t\t\tniz[j] = niz[j+1];\n\t\t\t\tniz[j+1] = temp;\n\t\t\t}\n\t\t\tbrojClanova--;\n\t\t\ti--;\n\t\t}\n\t}\n\treturn brojClanova;\n}\n\nint main() {\nint i;\nint niz[2*Vel], noviniz;\nprintf(\"Unesi niz od 10 brojeva: \");\nfor (i = 0; i < Vel; i++){\n\tscanf(\"%d\",&niz[i]);\n}\nnoviniz=izbaci(niz, 20);\nprintf (\"Modificirani niz glasi: \");\nfor (i = 0; i < noviniz; i++){\n   \tif(i == noviniz - 1){\n   \t\tprintf(\"%d.\",niz[i]);\n   \t}\n   \telse printf(\"%d,\",niz[i]);\n   }\n\n\treturn 0;\n}\n"
    },
    "122": {
        "label": "1",
        "student2553": "#include <stdio.h>\nint je_li_slovo(char c){\n\tif((c>=65 && c<=90) ||( c>=97 && c<=122))return 1;\n\t\n\treturn 0;\n}\nint je_li_isto(char c1,char c2,int caps){\n\tint rez=0;\n\tif(caps==0){\n\t\tif(c1>='A' && c1<='Z')c1+='a'-'A';\n\t\tif(c2>='A' && c2<='Z')c2+='a'-'A';\n\t\tif (c1==c2)rez= 1;\n\t\telse rez= 0;\n\t\t\n\t}\n\telse{\n\t\tif (c1==c2)rez=1;\n\t\t\telse rez= 0;\n\t}\n\treturn rez;\n}\nint prebroj(char *s,char *s1,int vel){\n\tchar  *q,*temp;\n\tint i,ponavljanja=0,istarijec=1;\n\tq=s1;\n\ttemp=s;\n\twhile(*s!='\\0'){\n\t\twhile(je_li_slovo(*s)==0 && *s!='\\0')s++;\n\t\tistarijec=1;\n\t\tif(s==temp){\n\t\t\tfor(i=0;i<vel;i++){\n\t\t\t\tif(je_li_isto(*q,*s,0)==0){ istarijec=0; break;}\n\t\t\t\tif(*s=='\\0') {istarijec=0; break;}\n\t\t\t\tq++;\n\t\t\t\ts++;\n\t\t\t}\n\t\t\tif(je_li_slovo(*s)==1)istarijec=0;\n\t\t}\n\t\telse{\n\t\t\tif(je_li_slovo(*(s-1))==0){\n\t\t\t\t\n\t\t\t\tfor(i=0;i<vel;i++){\n\t\t\t\t\tif(je_li_isto(*q,*s,0)==0){ istarijec=0;break;}\n\t\t\t\t\tif(*s=='\\0') {istarijec=0; break;}\n\t\t\t\t\tq++;\n\t\t\t\t\ts++;\n\t\t\t\t}\n\t\t\t\tif(je_li_slovo(*s)==1)istarijec=0;\n\t\t\t}else istarijec=0;\n\t\t}\n\t\tif(istarijec==1){\n\t\t\tponavljanja++;\n\t\t}\n\t\tq=s1;\n\t\twhile(je_li_slovo(*s)==1 && *s!='\\0')s++;\n\t\t\n\t}\n\tq=s1;\n\ts=temp;\n\treturn ponavljanja;\n}\nvoid izbaci(char *s11,char *rijec,int duzina){\n\tchar *p,*a;\n\tchar *sa;\n\tchar *x;\n\tint i,isto;\n\tx=s11;\n\n\tisto=1;\n\tp=rijec;\n\twhile(*s11!='\\0')s11++;\n\tif(*s11!='\\0')s11--;\t\n\tfor(i=0;i<duzina-1;i++){\n\t\trijec++;\n\t}\n\tp=rijec;\n\n\twhile(s11!=x && s11!='\\0'){\n\t\t\n\t\twhile(je_li_slovo(*s11)==0 && s11!=x){s11--;}\n\t\tisto=1;\n\t\t\n\t\tsa=s11;\n\t\tp=rijec;\n\n\t\tfor(i=0;i<duzina;i++){\n\t\t\tif(je_li_isto(*s11,*p,0)==0){\n\t\t\t\tisto=0;\n\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(s11!=x){\n\t\t\t\t\t\tif(je_li_slovo(*(s11-1))==1 && i==(duzina-1)){\n\t\t\t\t\t\tisto=0;\n\t\t\t\t\t\tbreak;}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tif(s11!=x) s11--;\n\t\t\tp--;\n\t\t}\n\t\t\n\t\ts11=sa;\n\t\n\t\tp=rijec;\n\n\t\tif(isto==1){\n\t\t\tfor(i=0;i<duzina;i++){\n\t\t\t\t\n\t\t\t\ta=s11;\n\t\t\t\t\n\t\t\t\twhile(*(s11+1)!='\\0'){\n\t\t\t\t\t*s11=*(s11+1);\n\t\t\t\t\ts11++;\n\t\t\t\t}\n\t\t\t\t*s11='\\0';\n\t\t\t\ts11=a;\n\t\t\tif(s11!=x)s11--;\n\t\t\t}\n\t\t}\n\t\t\n\t\tp=rijec;\n\t\twhile(je_li_slovo(*s11)==1 && s11!=x ){s11--;}\n\n\t\t\n\t}\n}\n\nchar* izbaci_najcescu(char* s){\n\tint a,duzina=0,najcescaduzina=0,max=0;\n\tchar *pok=s,*najcescapokazivac=s,*temp=s,*save=s;\n\t\n\tmax=0;\n\twhile(*s!='\\0'){\n\t\twhile(je_li_slovo(*s)==0 && *s!='\\0')s++;\n\t\t\n\t\tduzina=0;\n\t\ttemp=s;\n\t\t\n\t\twhile(je_li_slovo(*s)==1 && *s!='\\0'){\n\t\t\tduzina++;\n\t\t\ts++;\n\t\t}\n\t\ts=temp;\n\n\t\tpok=s;\n\t\ttemp=save;\n\t\ta=prebroj(temp,pok,duzina);\n\n\t\ttemp=save;\n\t\n\t\tif(a>max){\n\t\t\tmax=a;\n\t\t\tnajcescaduzina=duzina;\n\t\t\tnajcescapokazivac=s;\n\t\t}\n\t\t\n\t\twhile(je_li_slovo(*s)==1 && *s!='\\0')s++;\n\t\n\t\t\n\t\t\n\t}\n\ts=save;\n\n\tduzina=0;\n\ttemp=najcescapokazivac;\n\twhile(je_li_slovo(*temp)==1 && *temp!='\\0'){duzina++; temp++;}\n\tizbaci(s,najcescapokazivac,najcescaduzina);\n\ts=save;\n\t\n\treturn s;\n}\nint main() {\n\tchar t[]=\"Koristio sam auto-stop da dodjem do znaka stop ali prije stopa sam otvorio dekstop kompjutera stop\";\n\n\tizbaci_najcescu(t);\n\n\tprintf(\"\\n\");\n\n\tprintf(\"%s\",t);\n\n\treturn 0;\n}\n",
        "student6877": "#include <stdio.h>\nvoid unesi (char niz[] , int velicina){\n\tchar znak;\n\tint i=0;\n\tznak = getchar();\n\tif (znak=='\\n') znak= getchar();\n\twhile(i<velicina-1 && znak!='\\n'){\n\t\tniz[i]=znak;\n\t\ti++;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n}\nint uporedi (char *string1, char *string2, int velicina1, int velicina2){\n\tchar *p1=string1;\n\tchar *p2=string2;\n\tint i;\n\tif (velicina1!=velicina2) return 0;\n\telse {\n\t\tfor(i=0;i<velicina1-1;i++)\n\t\t{\n\t\t\tif(*(p1+i)>='A' && *(p1+i)<='Z'){\n\t\t\tif(*(p1+i)+32!=*(p2+i)) return 0;\n\t\t    continue;\n\t\t\t}\n\t\t    if(*(p2+i)>='A' && *(p2+i)<='Z'){\n\t\t    if(*(p2+i)!=*(p2+i)+32) return 0;\n\t\t    continue;\n\t\t    }\n\t\tif(*(p1+i)!=*(p2+i)) return 0;\n\t\t}\n\t\t\n\t}\n\treturn 1;\n}\nchar* izbaci_najcescu(char *s){\n\tchar*p , *pokazivac[100];\n\tint i=0,j=0,brojac_slova[100]={0},brojac_rijeci=1,brojac_najcesce[100]={0};\n\tp=s;\n\tpokazivac[j]=p;\n\tif (*p!='\\0') return NULL;\n\twhile(*p!='\\0'){\n\t\tif ((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127)){\n\t\t\tbrojac_rijeci++;\n\t\t\tdo{\n\t\t\t\tp++;\n\t\t\t}while((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127));\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tpokazivac[j]=p;\n\t\t\tcontinue;\n\t\t}\n\t\tbrojac_slova[i]++;\n\t\tp++;\n\t}\n\tfor(i=0;i<brojac_rijeci-1;i++){\n\t\tfor(j=i+1;j<brojac_rijeci;j++){\n\t\t\tif(uporedi(pokazivac[i],pokazivac[j],brojac_slova[i],brojac_slova[j]))\n\t\t\tbrojac_najcesce[i]++;\n\t\t}\n\t}\n\tint max;\n\tmax=0;\n\tfor(i=0;i<brojac_rijeci;i++){\n\t\tif(brojac_najcesce[i]>brojac_najcesce[max]) max=i; \n\t}\n\tfor(i=0;i<brojac_rijeci;i++){\n\t\tif(max==i) i++;\n\t\tif(uporedi(pokazivac[max],pokazivac[i],brojac_slova[max],brojac_slova[i])){\n\t\t\tp=pokazivac[i];\n\t\t\tif(i==brojac_rijeci-1){\n\t\t\t\t*p='\\0';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\twhile(*p!='\\0'){\n\t\t\t\t*p=*p(brojac_slova[i]);\n\t\t\t\tif(*p=='\\0') break;\n\t\t\t\tp++;\n\t\t\t}\n\t\t\tdo{\n\t\t\t\tpokazivac[i]++;\n\t\t\t}while((*p>31 && *p<'A') || (*p>'Z' && *p<'a') || (*p>'z' && *p<127));\n\t\t\tfor(j=i+1;j<brojac_rijeci;j++){\n\t\t\t\tpokazivac[j]-=brojac_slova[i];\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\tp=pokazivac[max];\n\twhile (*p!='\\0') {\n\t\t*p=*p(brojac_slova[max]);\n\t\tif(*p=='\\0') break;\n\t\tp++;\n\t}\n\t\t\n\treturn s;\t\n\t\n\t\n}\n\t\n\t\n\n\n\nint main() {\n\tchar tekst[]=\"asd ddd asd  ddd asd trzhrth\";\n\tprintf(\"%s\",izbaci_najcescu(tekst));\n\t\n\treturn 0;\n}\n"
    },
    "123": {
        "label": "0",
        "student2689": "#include <stdio.h>\n\nint ima_element(int*niz, int vel, int element){\n\t\n\tint i;\n\tfor(i=0; i<vel; i++)\n\t\t\n\t\tif(niz[i] == element)\treturn 1;\n\t\n\t\treturn 0;\n}\n\nint dva_od_tri(int*nizA,int velA, int*nizB,int velB, int*nizC, int velC){\n\t\n\tint i;\n\tint brojac = 0;\n\tint koliko_istih;\n\t\n\tfor(i=0; i<velA; i++){\n\t\t\n\t\tif(ima_element(nizA, i, nizA[i]))  continue;\n\t\t\n\t\tkoliko_istih = 1;\n\t\t\t\n\t\tif(ima_element(nizB, velB, nizA[i]))\tkoliko_istih++;\n\t\t\t\n\t\tif(ima_element(nizC, velC, nizA[i]))\tkoliko_istih++;\n\t\t\n\t\tif(koliko_istih==2)\t\t\t\t\t\tbrojac++;\n\t\t\n\t}\n\t\n\tfor(i=0; i<velC; i++) {\n\t\t\n\t\tif(ima_element(nizC, i, nizC[i]))\t\tcontinue;\n\t\t\n\t\tif(ima_element(nizA, velA, nizC[i]))\tcontinue;\n\t\t\n\t\tkoliko_istih = 1;\n\t\t\n\t\tif(ima_element(nizB, velB, nizC[i]))\tkoliko_istih++;\n\t\t\n\t\tif(ima_element(nizA, velA, nizC[i]))\tkoliko_istih++;\n\t\t\n\t\tif(koliko_istih==2)\t\tbrojac++;\n\t}\n\t\n\treturn brojac;\n}\n\n\nint main() {\n\t\n\tint niz1 [5] = {0, 1, 2, 3, 5};\n\tint niz2 [6] = {1, 2, -5, 4, 6, 7};\n\tint niz3 [5] = {1, 3, -8, 4, 0};\n\tint rezultat;\n\t\n\trezultat = dva_od_tri(niz1, 5,niz2,6, niz3,5);\n\t\n\tprintf(\"Tacno 2 razlicita ima: %d broja\", rezultat);\n\t\n\treturn 0;\n}\n",
        "student9201": "#include <stdio.h>\n\nint dva_od_tri (int niz_1[], int n1, int niz_2[], int n2, int niz_3[], int n3)\n{\n\tint rezultat = 0;\n\tint prebrojani[1000];\n\tint i,j,k;\n\tint pomocni_1, pomocni_2;\n\t\n\t\n\tfor (i = 0; i<n1;i++)\n\t\t{\n\t\t\tpomocni_1 = 0;\n\t\t\tfor (j = 0;j<n2;j++)\n\t\t\t\t{\n\t\t\t\t\tif (niz_1[i] == niz_2[j])\n\t\t\t\t\t\tpomocni_1 = 1;\n\t\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tpomocni_2 = 0;\n\t\t\tfor (k = 0; k<n3; k++)\n\t\t\t\t{\n\t\t\t\t\tif (niz_1[i] == niz_3[k])\n\t\t\t\t\t\tpomocni_2 = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\tif ((pomocni_1 == 1 && pomocni_2 == 0) || (pomocni_1 == 0 && pomocni_2 == 1))\n\t\t\t\t{\n\t\t\t\t\tpomocni_1 = 1;\n\t\t\t\t\tfor (j = 0; j<rezultat; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (niz_1[i] == prebrojani[j])\n\t\t\t\t\t\t\t\tpomocni_1 = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tif (pomocni_1 == 1)\n\t\t\t\t\t\tprebrojani[rezultat++] = niz_1[i];\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\tfor (i = 0; i<n2;i++)\n\t\t{\n\t\t\tpomocni_1 = 0;\n\t\t\tfor (j = 0;j<n1;j++)\n\t\t\t\t{\n\t\t\t\t\tif (niz_2[i] == niz_1[j])\n\t\t\t\t\t\tpomocni_1 = 1;\n\t\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tpomocni_2 = 0;\n\t\t\tfor (k = 0; k<n3; k++)\n\t\t\t\t{\n\t\t\t\t\tif (niz_2[i] == niz_3[k])\n\t\t\t\t\t\tpomocni_2 = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\tif ((pomocni_1 == 1 && pomocni_2 == 0) || (pomocni_1 == 0 && pomocni_2 == 1))\n\t\t\t\t{\n\t\t\t\t\tpomocni_1 = 1;\n\t\t\t\t\tfor (j = 0; j<rezultat; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (niz_2[i] == prebrojani[j])\n\t\t\t\t\t\t\t\tpomocni_1 = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tif (pomocni_1 == 1)\n\t\t\t\t\t\tprebrojani[rezultat++] = niz_2[i];\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t\n\tfor (i = 0; i<n3;i++)\n\t\t{\n\t\t\tpomocni_1 = 0;\n\t\t\tfor (j = 0;j<n2;j++)\n\t\t\t\t{\n\t\t\t\t\tif (niz_3[i] == niz_2[j])\n\t\t\t\t\t\tpomocni_1 = 1;\n\t\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tpomocni_2 = 0;\n\t\t\tfor (k = 0; k<n1; k++)\n\t\t\t\t{\n\t\t\t\t\tif (niz_3[i] == niz_1[k])\n\t\t\t\t\t\tpomocni_2 = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\tif ((pomocni_1 == 1 && pomocni_2 == 0) || (pomocni_1 == 0 && pomocni_2 == 1))\n\t\t\t\t{\n\t\t\t\t\tpomocni_1 = 1;\n\t\t\t\t\tfor (j = 0; j<rezultat; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (niz_3[i] == prebrojani[j])\n\t\t\t\t\t\t\t\tpomocni_1 = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tif (pomocni_1 == 1)\n\t\t\t\t\t\tprebrojani[rezultat++] = niz_3[i];\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t\n\t\n\treturn rezultat;\n}\n\n\nint main() {\n\t\n\tint niz_1[4] = {1,2,3,5};\n\tint niz_2[5] = {1,2,4,6,7};\n\tint niz_3[6] = {1,3,4,8,9,10};\n\t\n\tprintf(\"%d\", dva_od_tri(niz_1,4,niz_2,5,niz_3,6));\n\t\n\t\n\t\n\t\n\t\n\treturn 0;\n}\n"
    },
    "124": {
        "label": "1",
        "student5348": "#include <stdio.h>\n#include <math.h>\n\nint izbaci_cifre(int* nizbrojeva,int duz1,int* nizcifara,int duz2)\n{\n\t\n\tint* p_br=nizbrojeva;\t\t\t\t\tint* p_cif=nizcifara;\n\t\n\tint i,j,g,powbr,temp,predznak;\t\t\tint broj_bez_cif,brojac_cifri,cifra_broja;\n\t\n\t\n\t//Ako drugi niz ima 2 ista elementa ili element veci od 9 ili element manji od 0\n\tfor(i=0;i<duz2;i++)\n\tfor(j=0;j<duz2;j++)\n\tif(p_cif[i]<0 || p_cif[i]>9 || (p_cif[i]==p_cif[j] && i!=j)) return 0;\n\t\n\t\n\t\n\t\n\tfor(i=0;i<duz1;i++)\n\t{\n\t\tpredznak=0;\n\t\tbroj_bez_cif=0;\n\t\tbrojac_cifri=0;\n\t\tif(p_br[i]<0) predznak=1;\n\t\tp_br[i]=fabs(p_br[i]);\n\t\ttemp=p_br[i];\n\t\n\t\t\n\t\t\n\t\t//Trazim broj cifara broja\n\t\tdo\n\t\t{\n\t\t\ttemp/=10; \n\t\t\tbrojac_cifri++;\n\t\t}while(temp>0);\n\n\t\ttemp=p_br[i];\n\t\tbrojac_cifri--;\n\t\t\n\t\t//Gledam za svaku cifru elementa niza1 ako se nalazi u niz2, i ako ne dodajem na broj_bez_cif\n\t\tdo\n\t\t{\n\t\t\tpowbr=pow(10,brojac_cifri--);\n\t\t    cifra_broja=temp/powbr;\n\t\t    \n\t\t\tfor(j=0;j<duz2;j++)\n\t\t\t\tif(p_cif[j]==cifra_broja) break;\n\t\t\t\n\t\t\tif(j==duz2)\n\t\t\tbroj_bez_cif=broj_bez_cif*10+cifra_broja;\n\t\t\t\n\t\t\ttemp=temp-cifra_broja*powbr;\n\t\t\t\n\t\t}while(brojac_cifri>=0);\n\t\t\n\t\tp_br[i]=broj_bez_cif;\n\t\tif(predznak)p_br[i]*=-1;\n\t}\n\treturn 1;\n\t\n}\n\n\n\nint main() {\n\t\n\treturn 0;\n}\n",
        "student8997": "#include <stdio.h>\n#include<math.h>\n\nint izbaci_cifre(int *niz_brojeva,int velicina1, int *niz_cifara, int velicina2)\n{\nint i,j;\nint cifra;\nint clan1,clan2,brojac=0;\n\n\n\n\n\tfor(i=0;i<velicina2;i++) {\n\t\t\t\n\tfor(j=0;j<=i;j++) {\n\t\t\t\tif((niz_cifara[j]==niz_cifara[i] && i!=j) || niz_cifara[j]<0 || niz_cifara[j]>9) return 0;\n\t}\n\t}\n\t\n\n \n for(i=0;i<velicina1;i++) {\n\tbrojac=0;\n\tclan2=0;\n\tclan1=fabs(niz_brojeva[i]);\n\t\n\t\twhile(clan1!=0){\n\t\t\tclan1/=10;\n\t\t\tbrojac++;\n\t\t\t\n\t\t}\n\t\t\n\t\tbrojac--;\n\t\t\n\t\n\t\n\t\n\t\n\tclan1=fabs(niz_brojeva[i]); \n\tdo{\n\t\tcifra=clan1/(pow(10,brojac));\n\t\t\t\n\t\tfor(j=0;j<velicina2;j++){\n\t\t\tif(cifra==niz_cifara[j]) break;\n\t\t}\n\t\t\n\t\n\t\t\n\t\t\n\t\tif(j==velicina2)\n\t\t\tclan2=(clan2*10)+cifra;\n\t\t\t\n\t\t\tclan1=clan1-(cifra*pow(10,brojac));\n\t\t\tbrojac--;\n\t\t\n\t\t\n\t}while(brojac>=0);\n\t\n\t\n\tif(niz_brojeva[i]<0) niz_brojeva[i]=clan2*-1;\n\telse niz_brojeva[i]=clan2;\n }\n\n\treturn 1;\n\n\n}\n\n\n\n\nint main() {\nint brojevi[] = {25, 235, 1235, 252, 22552255};\nint cifre[] = {2, 3, 5};\nint i;\nizbaci_cifre(brojevi, 5, cifre, 3);\nfor (i=0; i<5; i++)\n  printf(\"%d \", brojevi[i]);\n\t\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n\n"
    },
    "125": {
        "label": "0",
        "student6088": "#include <stdio.h>\n\nint main() {\n\t//printf(\"Zada\u0107a 4, Zadatak 3\");\n\treturn 0;\n}\n",
        "student6468": "#include <stdio.h>\n\nvoid najduzi_bp(char* s1, char* s2) {\n\tchar najduza[100];\n\tchar najduzaTmp[100];\n\tint trenutnaDuzina = 0;\n\tint trenutnaTmp = 0;\n\tint i = 0;\n\tint postoji = 0;\n\tint bioSpace = 0;\n\tchar tmpChar1;\n\tchar tmpChar2;\n\n\tfor(i=0; i<100; i++) {\n\t\tnajduza[i] = '\\0';\n\t\tnajduzaTmp[i] = '\\0';\n\t}\n\t\n\twhile(*s1 != '\\0') {\n\t\tif((*s1 >= 'A' && *s1 <= 'Z') || (*s1 >= 'a' && *s1 <= 'z')) {\n\t\t\tbioSpace = 0;\n\t\t}\n\t\telse {\n\t\t\tbioSpace = 1;\n\t\t}\n\n\t\tpostoji = 0;\t\n\t\t\n\t\tfor(i=0; i<trenutnaTmp; i++) {\n\t\t\ttmpChar1 = *s1;\n\t\t\t\n\t\t\tif(tmpChar1 >= 'A' && tmpChar1 <= 'Z')\n\t\t\t\ttmpChar1 += 32;\n\t\t\t\t\n\t\t\ttmpChar2 = najduzaTmp[i];\n\t\t\t\n\t\t\tif(tmpChar2 >= 'A' && tmpChar2 <= 'Z')\n\t\t\t\ttmpChar2 += 32;\n\t\t\t\n\t\t\tif(tmpChar1 == tmpChar2) {\n\t\t\t\tpostoji = 1;\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tif(postoji == 0 && bioSpace == 0) {\n\t\t\tnajduzaTmp[trenutnaTmp++] = *s1;\n\t\t}\n\t\t\n\t\tif(postoji == 1 || bioSpace == 1){\n\t\t\tif(trenutnaTmp > trenutnaDuzina) {\n\t\t\t\tfor(i=0; i<trenutnaTmp; i++)\n\t\t\t\t\tnajduza[i] = najduzaTmp[i];\n\t\t\t\n\t\t\t\ttrenutnaDuzina = trenutnaTmp;\n\t\t\t}\n\t\t\t\n\t\t\tfor(i=0; i<100; i++)\n\t\t\t\tnajduzaTmp[i] = '\\0';\n\t\t\t\t\n\t\t\ttrenutnaTmp = 0;\n\t\t\t\n\t\t\tpostoji = 0;\n\t\t\tbioSpace = 0;\n\t\t}\n\t\t\n\t\ts1++;\n\t}\n\t\n\tif(trenutnaTmp > trenutnaDuzina) {\n\t\tfor(i=0; i<trenutnaTmp; i++)\n\t\t\tnajduza[i] = najduzaTmp[i];\n\t\n\t\ttrenutnaDuzina = trenutnaTmp;\n\t}\n\t\n\tfor(i=0; i<trenutnaDuzina; i++) {\n\t\t*s2 = najduza[i];\n\t\ts2++;\n\t}\n\t\n\t*s2 = '\\0';\n\t\n}\n\nint main() {\n        char niz[10];\n        najduzi_bp (\"abcde etankera cdefg\", niz);\n        printf (\"Niz: '%s'\", niz);\n\treturn 0;\n}\n"
    },
    "126": {
        "label": "1",
        "student6001": "#include <stdio.h>\n\nint main() {\n\t\n\tint i, j, rA, rB, kA, kB;\n\tint A[100][100], B[100][100], C[100][100];\n\n\tprintf(\"Unesite sirinu i visinu matrice A: \");\n\tscanf(\"%d %d\", &rA, &kA);\n\t\n\tprintf(\"Unesite clanove matrice A: \");\n\tfor(i=0;i<rA;i++){\n\tfor(j=0;j<kA;j++){\n\tscanf(\"%d\", &A[i][j]);\n\t}\n\t}\n\n\tprintf(\"Unesite sirinu i visinu matrice B: \");\n\tscanf(\"%d %d\", &rB, &kB);\n\tprintf(\"Unesite clanove matrice B: \");\n\tfor(i=0;i<rB;i++){\n\tfor(j=0;j<kB;j++) {\n\t\tscanf(\"%d\", &B[i][j]);\n\t}\n\t}\n\t\t\t\nif(kA!=rB || kB!=rA){\n\t\tprintf(\"NE\");\n\t\treturn 0;\n\t\t}\n/*C od A 2x3   jxi */\n\nfor(i=0;i<kA;i++){\n\tfor(j=0;j<rA;j++) {\n\t\tC[i][j]=A[rA-1-j][i];\n\t}\n}\n\nfor(i=0;i<kA;i++){\n\tfor(j=0;j<rA;j++){\nif(B[i][j]!=C[i][j]) {\n\tprintf(\"NE\");\n\treturn 0;\n}\n}\n}\nprintf(\"DA\");\n\n\treturn 0;\n}\n",
        "student9275": "#include <stdio.h>\n\nint main()\n{\n\tint vA,sA,sB,vB,i,j,matA[100][100],matB[100][100],mat[100][100];\n\tprintf(\"Unesite sirinu i visinu matrice A: \");\n\tscanf(\"%d %d\", &sA,&vA);\n\tprintf(\"Unesite clanove matrice A: \");\n\tfor(i=0; i<vA; i++) {\n\t\tfor(j=0; j<sA; j++) {\n\t\t\tscanf(\"%d\", &matA[i][j]);\n\t\t}\n\t}\n  \n\n\tprintf(\"Unesite sirinu i visinu matrice B: \");\n\tscanf(\"%d %d\", &sB,&vB);\n\tprintf(\"Unesite clanove matrice B: \");\n\tfor(i=0; i<vB; i++) {\n\t\tfor(j=0; j<sB; j++) {\n\t\t\tscanf(\"%d\", &matB[i][j]);\n\t\t}\n\t}\n if(vA!=sB || sA!=vB) {printf(\"NE\\n\");\n  return 0;}\n\n\tfor(i=0; i<sA; i++) {\n\t\tfor(j=0; j<vA; j++) {\n\t\t\tmat[i][j]=matA[vA-1-j][i];\n\t\t}\n\t} \n\t\n\tfor(i=0; i<vB; i++) {\n\t\tfor(j=0; j<sB; j++) {\n\t\t\tif(matB[i][j]!=mat[i][j] ){ printf(\"NE\\n\");return 0;}\n\t\t}\n\t}\n\t\n\t\n\n\t\n\t\tprintf(\"DA\\n\");\n\n\treturn 0;\n}\n"
    },
    "127": {
        "label": "0",
        "student2463": "#include <stdio.h>\n#include <math.h>\nint main() {\n\tfloat a1, a2, b1, b2, x, y;\n\tprintf(\"Unesite a1,b1,a2,b2: \");\n\tscanf(\"%f,%f,%f,%f\", &a1, &b1, &a2, &b2);\n\tif(fabs(a1-a2)<0.001 && fabs(b1-b2)<0.001)\n\t{\n\t\tprintf(\"Poklapaju se\"); \n\t}  \n\telse {\n\t   if (fabs(a1-a2)<0.001)\n    {\n\t   printf(\"Paralelne su\");\n\t} \n\telse {\n\t   x=(b2-b1) / (a1-a2);\n\t   y=(a1*(b2-b1) / (a1-a2)+b1);\n\t\tprintf(\"Prave se sijeku u tacci (%.1f,%.1f)\", x, y); \n\t    }\n\t}\t\n\treturn 0; \n}\n",
        "student3424": "#include <stdio.h>\n#include <math.h>\n#define epsilon 0.0001\n\nint main ()\n{\n    float a1, b1, a2, b2, x, y;\n    \n    printf(\"Unesite a1,b1,a2,b2: \");\n    scanf(\"%f,%f,%f,%f\", &a1, &b1, &a2, &b2);\n    \n    if (fabs(a1-a2)<epsilon && fabs(b1-b2)>epsilon)\n    {\n        printf(\"Paralelne su\");\n    }\n    else if (fabs(a1-a2)<epsilon && fabs(b1-b2)<epsilon)\n    {\n        printf(\"Poklapaju se\");\n    }\n    else\n    {\n        x=(b2-b1)/(a1-a2);\n        y=a1*x+b1;\n        \n        printf(\"Prave se sijeku u tacci (%.1f,%.1f)\", x, y);\n    }\n    \n    return 0;\n}"
    },
    "128": {
        "label": "1",
        "student1366": "#include <stdio.h>\nint duzinapodniza (char *niz) {\n\tint brojac=1, i, logicka=0;\n\tchar *pok=niz+1; /* Krecemo od prvog sljedeceg elementa */\n\twhile ((*pok>='A' && *pok<='Z') || (*pok>='a' && *pok<='z')) {\n\t\tlogicka=0;\n\t\tif (*pok>='A' && *pok<='Z') {\n\t\t\tfor (i=0;i<pok-niz;i++) {\n\t\t\t\tif (*pok==*(niz+i) || *pok+32==*(niz+i)) {\n\t\t\t\t\tlogicka=1;\n\t\t\t\t\tbreak; /* Dvostruka petlja koja poredi trenutni element sa svim prijasnjim */\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (*pok>='a' && *pok<='z') {\n\t\t\tfor (i=0;i<pok-niz;i++) {\n\t\t\t\tif (*pok==*(niz+i) || *pok-32==*(niz+i)) {\n\t\t\t\t\tlogicka=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (logicka)\n\t\t\tbreak; /* Logicka promjenljiva se koristila kao efikasan nacin da se izadje iz unutrasnje for i vanjske while petlje */\n\t\tpok++; /* Ako unutrasnje petlje nisu nasle identicne elemente, povecavamo brojac za 1 i pomjeramo pokazivac za jedno mjesto */\n\t\tbrojac++;\n\t}\n\treturn brojac;\n}\nvoid najduzi_bp(char *s1, char *s2) {\n\tint duzinaPodniza, maxDuzina, i;\n\tchar *pokNaPocetak;\n\twhile (!((*s1>='A' && *s1<='Z') || (*s1>='a' && *s1<='z')))\n\t\ts1++; /* Pomjeramo pocetni pokazivac do prvog slova */\n\tpokNaPocetak=s1; /* Uzimamo kao pocetnu vrijednost najveceg podniza prvo slovo u recenici */\n\tmaxDuzina=1;\n\twhile (*(s1+1)) {\n\t\tif (!((*s1>='A' && *s1<='Z') || (*s1>='a' && *s1<='z'))) {\n\t\t\ts1++;\n\t\t\tcontinue; /* Preskace brojanje podniza od charactera koji nisu slova */\n\t\t}\n\t\tduzinaPodniza=duzinapodniza(s1);\n\t\tif (duzinaPodniza>maxDuzina) {\n\t\t\tmaxDuzina=duzinaPodniza;\n\t\t\tpokNaPocetak=s1; /* Ako nadje neki podniz koji je veci od dosadasnjeg, postavlja pokazivac na prvo slovo i azurira duzinu najveceg podniza */\n\t\t}\n\t\ts1++;\n\t}\n\tfor (i=0;i<maxDuzina;i++) {\n\t\t*s2++=*pokNaPocetak++; /* Kopiranje pronadjenog najveceg podniza u s2 */\n\t}\n\t*s2='\\0';\n}\n\nint main() {\n\tchar niz[10];\n\tnajduzi_bp(\" a\", niz);\n\tprintf(\"%s\", niz);\n\treturn 0;\n}\n",
        "student6168": "#include <stdio.h>\n\nint maksimalnaduzina(char *s1) //Ova funkcija ce vracati brojac koji kasnije koristimo u glavnoj funkciji za ogranicavanje petlje\n{\n\tint brojac=1, i, provjera; //Brojac=1 jer najkraci podniz mora imati barem jedno slovo\n\tchar *pocetak;\n\tpocetak=s1;\n\tpocetak++;\n\twhile (*s1!='\\0' || ((*s1>='A' && *s1<='z'))) { //Provjerava da li je trenutni char slovo\n\t\tprovjera=0; //Svakim prolaskom vraca provjeru na '0' da bismo je mogli ponovo koristiti\n\t\tfor(i=0; i<pocetak-s1; i++) {\n\t\t\tif(*pocetak==*(s1+i) || ((*pocetak==*(s1+i)-32) || (*pocetak==*(s1+i)+32)) || (!((*pocetak>='A' && *pocetak<='z')))) {\n\t\t\t\t//Ako je jednak pocetnom ili ako nije slovo prekida petlju\n\t\t\t\tprovjera=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(provjera)\n\t\t\tbreak;\n\n\t\tpocetak++; //Sve dok je znak slovo i razlicito od pocetnog velicina podniza se povecava, i prelazi se na sljedeci\n\t\tbrojac++;\n\t}\n\treturn brojac;\n}\n\nvoid najduzi_bp(char *s1, char *s2)\n{\n\tchar *pocetnoslovo; //Ovdje cemo cuvati pokazivac na pocetak koji ce su updateovati ako smo dosli do duzeg podniza, a od njega se pocinje kopirati podstring u s2\n\tint duzina=0, maxduzina=1, i;\n\n\twhile (*s1<'A' || *s1>'z')\n\t\ts1++; //Mozda string pocinje razmakom pa trebamo povecavati s1 dok ne dodjemo do prvog slova\n\n\tmaxduzina = 1;\n\tpocetnoslovo = s1;\n\n\twhile(*s1!='\\0') {\n\t\tif(*s1<'A' || *s1>'z') { \n\t\t\ts1++; //Ako trenutni char nije slovo treba se preskociti ostatak i povecavati s1 sve dok ne dodje do slova\n\t\t\tcontinue;\n\t\t}\n\n\t\tduzina = maksimalnaduzina(s1); //Ovu duzinu cemo koristiti za ogranicavanje petlje kod upisivanja podniza u s2\n\t\tif (duzina>maxduzina) { //Ako je trenutna duzina veca od dosadasnjeg maksimuma, maksimum postaje ta duzina i updateuje se pokazivac \n\t\t\tmaxduzina = duzina;\n\t\t\tpocetnoslovo = s1; //Pocetno slovo je slovo od kojeg se provjeravala duzina i on postaje pocetak najduzeg podniza\n\t\t}\n\t\ts1++; //Prelazimo na sljedeci clan da bi sve do kraja bilo provjereno\n\t}\n\n\tfor(i=0; i<maxduzina; i++) {\n\t\t*s2++=*pocetnoslovo++; //Kada smo dobili max duzinu i pokazivac na pocetak, uobicajenim algoritmom mozemo kopirati taj podniz u s2\n\t}\n\t*s2='\\0';\n}\n\nint main() //Proba\n{\n\tchar s1[100]=\"Ovo je neki primjer\";\n\tchar s2[100];\n\tnajduzi_bp(s1,s2);\n\tprintf(\"Glasi: %s\", s2);\n\treturn 0;\n}"
    },
    "129": {
        "label": "0",
        "student2197": "#include <stdio.h>\n\nint main() {\n\tint iste=1, ax=0, ay=0, bx=0, by=0, i=0, j=0, ii=0, jj=0;\n\tdouble a[100][100], b[100][100], rota[100][100];\n\tprintf(\"Unesite sirinu i visinu matrice A: \");\n\tscanf(\"%d %d\", &ax, &ay);\n\tprintf(\"Unesite clanove matrice A: \");\n\tfor(i=0;i<ax;i++)\n\t\tfor(j=0;j<ay;j++)\n\t\t\tscanf(\"%lf\",&a[i][j]);\n\tprintf(\"Unesite sirinu i visinu matrice B: \");\n\tscanf(\"%d %d\", &bx, &by);\n\tprintf(\"Unesite clanove matrice B: \");\n\tfor(i=0;i<bx;i++)\n\t\tfor(j=0;j<by;j++)\n\t\t\tscanf(\"%lf\",&b[i][j]);\n    for(j = 0; j < ay; j++){\n        for(i=ax-1; i>=0; i--){\n            rota[ii][jj] = a[i][j]; \n            jj++;\n        }\n        ii++;\n        jj = 0;\n    }    for(i = 0; i < bx; i++){\n        for(j = 0; j < by; j++){\n            \n            if(!(b[i][j] == rota[i][j])){\n                iste = 0;\n                break;\n            }\n        }\n    }\n    if (iste==1) \n        printf (\"DA\\n\");\n    else \n        printf (\"NE\\n\");\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n",
        "student3425": "#include <stdio.h>\n\nint main() {\n\tint i,j,AS,AV,BS,BV;\n\tint B[10][10];\n\tint A[10][10];\n\t\tint GD[10],SD[10];\n\tprintf(\"Unesite sirinu i visinu matrice A: \");\n\tscanf(\"%d %d\",&AS,&AV);\n\n\tprintf(\"Unesite clanove matrice A: \");\n\tfor(i=0;i<AV;i++){\n\t\tfor(j=0;j<AS;j++){\n\t\t\tscanf(\"%d \",&A[i][j]);\n\t}\n\t}\n\tprintf(\"Unesite sirinu i visinu matrice B: \");\n\tscanf(\"%d %d\",&BS,&BV);\n\n\tprintf(\"Unesite clanove matrice B: \");\n\tfor(i=0;i<BV;i++){\n\t\tfor(j=0;j<BS;j++){\n\t\t\tscanf(\"%d \",&B[i][j]);\n\t}\n\t}\n\tfor(i=0;i<AV;i++){\n\t\tfor(j=0;j<AS;j++){\n\t\t\tif (i==j) GD[i]=A[i][j];\n\t\t\tif (i+j==AS-1) SD[i]=B[i][j]; \n\t\t}\n\t}\n\tint suma=AS,suma1=0;\n\tfor (i=0;i<AS;i++){\n\t\tif (GD[i]==SD[i]) suma1++;\n\t}\n\tif (suma==suma1) printf (\"DA\\n\");\n\telse printf(\"NE\\n\");\n\treturn 0;\n}\n"
    },
    "130": {
        "label": "1",
        "student4736": "#include<iostream>\n#include<vector>\n#include<iomanip>\n\n\nusing namespace std;\n\n\ntypedef vector<double> Vektor;\ntypedef vector<vector<double>> Matrica;\n\n\nMatrica RastuciPodnizovi(Vektor v){\n\tMatrica rezultat;\n\tVektor red;\n\t\n\tfor(int i=0;i<v.size()-1;i++){\n\t\t\n\t\tif(v[i]<=v[i+1]){\n\t\t\tred.push_back(v[i]);\n\t\t\tif(i==v.size()-2){\n\t\t\t\tred.push_back(v[i+1]);\n\t\t\t\trezultat.push_back(red);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\tred.push_back(v[i]);\n\t\t\tif(red.size()>=2){\n\t\t\t\trezultat.push_back(red);\n\t\t\t}\n\t\t\tred = Vektor();\n\t\t}\n\t}\n\t\n\treturn rezultat;\n}\n\n\n\n\n\nMatrica OpadajuciPodnizovi(Vektor v){\n\tMatrica rezultat;\n\tVektor red;\n\t\n\tfor(int i=0;i<v.size()-1;i++){\n\t\t\n\t\tif(v[i]>=v[i+1]){\n\t\t\tred.push_back(v[i]);\n\t\t\tif(i==v.size()-2){\n\t\t\t\tred.push_back(v[i+1]);\n\t\t\t\trezultat.push_back(red);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\telse{\n\t\t\tred.push_back(v[i]);\n\t\t\tif(red.size()>=2){\n\t\t\t\trezultat.push_back(red);\n\t\t\t}\n\t\t\tred = Vektor();\n\t\t}\n\t}\n\t\n\treturn rezultat;\n}\n\n\nvoid ispisiMatricu(Matrica M){\n\t\n\tfor(int i=0;i<M.size();i++){\n\t\t\n\t\tfor(int j=0;j<M[i].size();j++){\n\t\t\n\t\t\t\t//cout<<left<<setw(4)<<M[i][j];\n\t\t\t\tcout<<M[i][j]<<\" \";\n\t\t}\n\t\tcout<<endl;\n\t}\n}\nint main ()\n{\n\tint brojElemenata;\n\tcout<<\"Unesite broj elemenata vektora: \";\n\tcin>>brojElemenata;\n\tVektor v(brojElemenata);\n\t\n\tcout<<\"Unesite elemente vektora: \";\n\tfor(int i=0;i<v.size();i++){\n\t\tcin>>v[i];\n\t}\n\t\n\tcout<<\"Maksimalni rastuci podnizovi: \"<<endl;\n\tMatrica RP = RastuciPodnizovi(v);\n\tispisiMatricu(RP);\n\t\n\t\n\tcout<<\"Maksimalni opadajuci podnizovi: \"<<endl;\t\n\tMatrica OP = OpadajuciPodnizovi(v);\n\tispisiMatricu(OP);\n\t\n\treturn 0;\n}",
        "student7054": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 3\n\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti\n\tdostupni na c9.\n\n*/\n#include <iostream>\n#include <vector>\n#include <stdexcept>\n#include <iomanip>\ntypedef std::vector<double> Vektor;\ntypedef std::vector<std::vector<double>> Matrica;\n\nvoid IspisiMatricu(Matrica m)\n{\n\tfor(int i = 0; i <m.size(); i++) {\n\t\tfor(int j = 0; j < m[i].size(); j++)\n\t\t\tstd::cout << m[i][j]<<\" \";\n\t\tstd::cout << std::endl;\n\t}\n}\nMatrica RastuciPodnizovi(Vektor v)\n{\n\tMatrica konacna;\n\tMatrica rezultat;\n\tVektor red;\n\tfor(int i=0; i<int(v.size()-1); i++) {\n\t\tif(v[i]<=v[i+1]) {\n\t\t\tred.push_back(v[i]);\n\t\t\tif(i==v.size()-2) {\n\t\t\t\tred.push_back(v[i+1]);\n\t\t\t\trezultat.push_back(red);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tred.push_back(v[i]);\n\t\t\tif(red.size()>=2) {\n\t\t\t\trezultat.push_back(red);\n\t\t\t\tred.resize(0);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0; i<rezultat.size(); i++) {\n\t\tbool ubaci =true;\n\t\tfor(int j=0; j<rezultat[i].size()-1; j++) {\n\t\t\tif(rezultat[i][j]>rezultat[i][j+1]) {\n\t\t\t\tubaci=false;\n\t\t\t}\n\t\t}\n\t\tif(ubaci) konacna.push_back(rezultat[i]);\n\t}\n\treturn konacna;\n}\nMatrica OpadajuciPodnizovi(Vektor v)\n{\n\tMatrica konacna;\n\tMatrica rezultat;\n\tVektor red;\n\tfor(int i=0; i<int(v.size()-1); i++) {\n\t\tif(v[i]>=v[i+1]) {\n\t\t\tred.push_back(v[i]);\n\t\t\tif(i==v.size()-2) {\n\t\t\t\tred.push_back(v[i+1]);\n\t\t\t\trezultat.push_back(red);\n\t\t\t}\n\t\t} else {\n\t\t\tif(red.size()>=2) {\n\t\t\t\tred.push_back(v[i]);\n\t\t\t\trezultat.push_back(red);\n\t\t\t\tred.resize(0);\n\t\t\t} else if(!(v[i]<v[i+1])) {\n\t\t\t\tred.push_back(v[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn rezultat;\n}\n\nint main ()\n{\n\tint n, broj;\n\ttry {\n\t\tstd::cout<<\"Unesite broj elemenata vektora: \";\n\t\tstd::cin>>n;\n\t\tif(n<0) throw std::range_error(\"TEKST2\");\n\t\tstd::cout<<\"Unesite elemente vektora: \";\n\t\tVektor v;\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tstd::cin>>broj;\n\t\t\tv.push_back(broj);\n\t\t}\n\t\tstd::cout<<\"Maksimalni rastuci podnizovi: \"<<std::endl;\n\t\tMatrica r=RastuciPodnizovi(v);\n\t\tIspisiMatricu(r);\n\t\tstd::cout<<\"Maksimalni opadajuci podnizovi: \"<<std::endl;\n\t\tMatrica o=OpadajuciPodnizovi(v);\n\t\tIspisiMatricu(o);\n\t} catch(std::range_error e) {\n\t\tstd::cout<<e.what();\n\t}\n\n\n\treturn 0;\n}"
    },
    "131": {
        "label": "0",
        "student2956": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   float prviT,drugiT,prisustvoT,zadaceT,zavrsniT;\n   float prviB,drugiB,prisustvoB,zadaceB,zavrsniB;\n   float prviM,drugiM,prisustvoM,zadaceM,zavrsniM;\n   float tarik,bojan,mirza;\n   float sestT,sestB,sestM,sedamT,sedamB,sedamM,osamT,osamB,osamM,devetT,devetB,devetM,desetT,desetB,desetM;\n\n   printf(\"Unesite bodove za Tarika:\\n\");\n   printf(\"I parcijalni ispit:\");\n   scanf(\"%f\",&prviT);\n   printf(\"Drugi parcijalni ispit:\");\n   scanf(\"%f\",&drugiT);\n   printf(\"Prisustvo:\");\n   scanf(\"%f\",&prisustvoT);\n   printf(\"Zadace:\");\n   scanf(\"%f\",&zadaceT);\n   printf(\"Zavrsni ispit:\");\n   scanf(\"%f\",&zavrsniT);\n    printf(\"Unesite bodove za Bojana:\\n\");\n   printf(\"I parcijalni ispit:\");\n   scanf(\"%f\",&prviB);\n   printf(\"Drugi parcijalni ispit:\");\n   scanf(\"%f\",&drugiB);\n   printf(\"Prisustvo:\");\n   scanf(\"%f\",&prisustvoB);\n   printf(\"Zadace:\");\n   scanf(\"%f\",&zadaceB);\n   printf(\"Zavrsni ispit:\");\n   scanf(\"%f\",&zavrsniB);\n    printf(\"Unesite bodove za Mirzu:\\n\");\n   printf(\"I parcijalni ispit:\");\n   scanf(\"%f\",&prviM);\n   printf(\"Drugi parcijalni ispit:\");\n   scanf(\"%f\",&drugiM);\n   printf(\"Prisustvo:\");\n   scanf(\"%f\",&prisustvoM);\n   printf(\"Zadace:\");\n   scanf(\"%f\",&zadaceM);\n   printf(\"Zavrsni ispit:\");\n   scanf(\"%f\",&zavrsniM);\n\n   if(prviB<0 || prviB>20 || prviM<0 || prviM>20 || prviT<0 || prviT>20 || drugiB<0 || drugiB>20 || drugiM<0 || drugiM>20 || drugiT<0 || drugiT>20 || prisustvoB<0 || prisustvoB>10 || prisustvoM<0 || prisustvoM>10 || prisustvoT<0 || prisustvoT>10 || zadaceB<0 || zadaceB>10 || zadaceM<0 || zadaceM>10 || zadaceT<0 || zadaceT>10 || zavrsniB<0 || zavrsniB>40 || zavrsniM<0 || zavrsniM>40 || zavrsniT<0 || zavrsniT>40) {\n    printf(\"Neispravan broj bodova\"); return 0;\n   }\n   tarik=prviT+drugiT+prisustvoT+zadaceT+zavrsniT;\n   bojan=prviB+drugiB+prisustvoB+zadaceB+zavrsniB;\n   mirza=prviM+drugiM+prisustvoM+zadaceM+zavrsniM;\n\n\n   if(tarik<55 && bojan<55 && mirza<55) { printf(\"Nijedan student nije polozio\"); return 0;}\n   if((tarik>55 && bojan<55 && mirza<55)||(bojan>55 && tarik<55 && mirza<55)||(mirza>55 && tarik<55 && bojan<55)) { printf(\"Jedan student je polozio\"); return 0;}\n   if((tarik>55 && bojan>55 && mirza<55)||(tarik>55 && mirza>55 && bojan<55)||(bojan>55 && mirza>55 && tarik<55)) { printf(\"Dva studenta su polozila\"); return 0;}\n   if((tarik>=55 || tarik<65 && bojan>=55 || bojan<65 && mirza>=55 || mirza<65)||(tarik>=65 || tarik<75 && bojan>=65 || bojan<75 && mirza>=65 || mirza<75)||(tarik>=75 || tarik<85 && bojan>=75 || bojan<85 && mirza>=75 || mirza<85)||(tarik>=85 || tarik<92 && bojan>=85 || bojan<92 && mirza>=85 || mirza<92)||(tarik>=92 || tarik<=100 && bojan>=92 || bojan<=100 && mirza>=92 || mirza<=100)) {\n    printf(\"Sva tri studenta su polozila\\nSva tri imaju istu ocjenu\");}\n    else { printf(\"Sva tri studenta su polozila\\nSvi studenti imaju razlicitu ocjenu ocjenu\");\n    return 0;\n    }\n\n}\n",
        "student3424": "#include <stdio.h> \n\nint main()\n{\n    float T1, T2, TP, TZ, TU, B1, B2, BP, BZ, BU, M1, M2, MP, MZ, MU, TB, BB, MB;\n    int TO=0, BO=0, MO=0;                           /*TO-Tarikova ocjena, BO-Bojanova ocjena, MO-Mirzina ocjena*/\n    \n    printf(\"Unesite bodove za Tarika: \\n\");   /*T1-prva parc, T2-druga parc, TP-prisustvo, TZ-zadace, TU-zavrsni-usmeni*/\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\", &T1);\n    if (T1<0.0f || T1>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"II parcijalni ispit: \");\n    scanf(\"%f\", &T2);\n    if (T2<0.0f || T2>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Prisustvo: \");\n    scanf(\"%f\", &TP);\n    if (TP<0.0f || TP>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zadace: \");\n    scanf(\"%f\", &TZ);\n    if (TZ<0.0f || TZ>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zavrsni ispit: \");\n    scanf(\"%f\", &TU);\n    if (TU<0.0f || TU>40.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    \n    printf(\"Unesite bodove za Bojana: \\n\");   /*B1-prva parc, B2-druga parc, BP-prisustvo, BZ-zadace, BU-zavrsni-usmeni*/\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\", &B1);\n    if (B1<0.0f || B1>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"II parcijalni ispit: \");\n    scanf(\"%f\", &B2);\n    if (B2<0.0f || B2>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Prisustvo: \");\n    scanf(\"%f\", &BP);\n    if (BP<0.0f || BP>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zadace: \");\n    scanf(\"%f\", &BZ);\n    if (BZ<0.0f || BZ>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zavrsni ispit: \");\n    scanf(\"%f\", &BU);\n    if (BU<0.0f || BU>40.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    \n    printf(\"Unesite bodove za Mirzu: \\n\");   /*M1-prva parc, M2-druga parc, MP-prisustvo, MZ-zadace, MU-zavrsni-usmeni*/\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\", &M1);\n    if (M1<0.0f || M1>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"II parcijalni ispit: \");\n    scanf(\"%f\", &M2);\n    if (M2<0.0f || M2>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Prisustvo: \");\n    scanf(\"%f\", &MP);\n    if (MP<0.0f || MP>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zadace: \");\n    scanf(\"%f\", &MZ);\n    if (MZ<0.0f || MZ>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zavrsni ispit: \");\n    scanf(\"%f\", &MU);\n    if (MU<0.0f || MU>40.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    \n    TB=T1+T2+TP+TZ+TU;\n    BB=B1+B2+BP+BZ+BU;\n    MB=M1+M2+MP+MZ+MU;\n    \n    if (TB<50.0f && BB<50.0f && MB<50.0f)\n    {\n        printf(\"Nijedan student nije polozio.\");\n    }\n    else if ((TB>=50.0f && BB<55.0f && MB<55.0f) || (TB<50.0f && BB>=55.0f && MB<55.0f) || (TB<50.0f && BB<55.0f && MB>=55.0f))\n    {\n        printf(\"Jedan student je polozio.\");\n    }\n    else if ((TB>=55.0f && BB>=55.0f && MB<55.0f) || (TB>=55.0f && BB<55.0f && MB>=55.0f) || (TB<55.0f && BB>=55.0f && MB>=55.0f))\n    {\n       printf(\"Dva studenta su polozila.\"); \n    }\n    else if(TB>=50.0f && BB>=55.0f && MB>=55.0f)\n    {\n        printf(\"Sva tri studenta su polozila.\\n\");\n        \n        if(TB>=50.0f && TB<65.0f)\n        {\n            TO=6;\n        }\n        else if (TB>=65.0f && TB<75.0f)\n        {\n            TO=7;\n        }\n        else if (TB>=75.0f && TB<85.0f)\n        {\n            TO=8;\n        }\n        else if (TB>=85.0f && TB<92.0f)\n        {\n            TO=9;\n        }\n        else if (TB>=92.0f && TB<=100.0f)\n        {\n            TO=10;\n        }\n        \n        if(BB>=55.0f && BB<65.0f)\n        {\n            BO=6;\n        }\n        else if (BB>=65.0f && BB<75.0f)\n        {\n            BO=7;\n        }\n        else if (BB>=75.0f && BB<85.0f)\n        {\n            TO=8;\n        }\n        else if (BB>=85.0f && BB<92.0f)\n        {\n            BO=9;\n        }\n        else if (BB>=92.0f && BB<=100.0f)\n        {\n            BO=10;\n        }\n        \n        if(MB>=55.0f && MB<65.0f)\n        {\n            MO=6;\n        }\n        else if (MB>=65.0f && MB<75.0f)\n        {\n            MO=7;\n        }\n        else if (MB>=75.0f && MB<85.0f)\n        {\n            MO=8;\n        }\n        else if (MB>=85.0f && MB<92.0f)\n        {\n            MO=9;\n        }\n        else if (MB>=92.0f && MB<=100.0f)\n        {\n            MO=10;\n        }\n        \n        if (TO==BO && TO==MO && BO==MO)\n        {\n            printf(\"Sva tri studenta imaju istu ocjenu.\");\n        }\n        else if ((TO==BO && BO!=MO) || (TO==MO && TO!=BO) || (BO==MO && TO!=BO))\n        {\n            printf(\"Dva od tri studenta imaju istu ocjenu.\");\n        }\n        else if (TO!=BO && TO!=MO && BO!=MO)\n        {\n            printf(\"Svaki student ima razlicitu ocjenu.\");\n        }\n        \n        \n    }\n    \n    \n    return 0;\n}"
    },
    "132": {
        "label": "1",
        "student5378": "#include <stdio.h>\n#include <string.h>\n#define KAPACITET 200\nstruct Vrijeme {\n\tint sati,minute,sekunde;\n};\nstruct Cas {\n\tchar predmet[10];\n\tint dan_u_sedmici;\n\tstruct Vrijeme pocetak,kraj;\n};\n\nvoid unesi(char niz[]){\n\tchar znak=getchar();\n\tif(znak=='\\n')znak=getchar();\n\tint i=0;\n\twhile(i<9 && znak!='\\n'){\n\t\tniz[i++]=znak;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n\twhile(znak!='\\n')\n\tznak=getchar();\n}\nint ucitaj_datoteku (struct Cas raspored[]){\n\tFILE *ulaz=fopen(\"raspored.dat\",\"rb+\");\n\tint greska=0;\n\tFILE *ulaz1=fopen(\"raspored.dat\",\"rb+\");\n\tif(ulaz==NULL || ulaz1==NULL){\n\t\tgreska = 1;\n\t\treturn 0;\n\t}\n\tint ucitano,ucitano1;\n\tint vel=sizeof(struct Cas);\n\tucitano=fread(raspored,vel,KAPACITET,ulaz);\n\tucitano1=fread(raspored,vel,KAPACITET,ulaz1);\n\tfclose(ulaz);\n\tfclose(ulaz1);\n\tif(greska==0)\n\treturn ucitano1;\n\telse return 0;\n}\nint zapisi_datoteku(struct Cas raspored[],int broj_casova){\n\tFILE *ulaz=fopen(\"raspored.dat\",\"wb+\");\n\tFILE *ulaz1=fopen(\"raspored.dat\",\"wb+\");\n\tif(ulaz==NULL||ulaz1==NULL){\n\t\treturn 0;\n\t}\n\tint vel=sizeof(struct Cas);\n\tint nova=fwrite(raspored,vel,broj_casova,ulaz);\n\tint zapisano=fwrite(raspored,vel,broj_casova,ulaz1);\n\tfclose(ulaz);\n\tfclose(ulaz1);\n\tif(nova==zapisano) return 1;\n\telse\n\treturn 0;\n}\nint MAX(struct Cas raspored[],int broj_casova){\n\tint i,j,max=0,indexmaxa=0,min;\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].kraj.sati>max){\n\t\t\tmax=raspored[i].kraj.sati;\n\t\t\tindexmaxa=i;\n\t\t\tmin=raspored[indexmaxa].kraj.minute;\n\t\t}\n\t}\n\tif(min==0) max=max-1;\n\treturn max;\n}\nvoid ispis_rasporeda(struct Cas raspored[],int broj_casova){\n\tprintf(\"\\n       PON       UTO       SRI       CET       PET       SUB\\n\");\n\tint i,j,k;\n\tint max=MAX(raspored,broj_casova);\n\tint min=25;\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].pocetak.sati<min)\n\t\tmin=raspored[i].pocetak.sati;\n\t}\n\tfor(i=min;i<=max;i++){\n\t\tif(i<10)printf(\"9:00   \");\n\t\telse    printf(\"%d:00  \",i);\n\t\tfor(j=1;j<7;j++){\n\t\t\tfor(k=0;k<broj_casova;k++){\n\t\t\t\tint sa=raspored[k].kraj.sati;\n\t\t\t\tint dan=raspored[k].dan_u_sedmici;\n\t\t\t\tint poc=raspored[k].pocetak.sati;\n\t\t\t\tif(poc<=i && dan==j &&sa>=i){\n\t\t\t\t\tprintf(\"%-10s\",raspored[k].predmet);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k==broj_casova) printf(\"          \");\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}\nint PorediVrj(struct Vrijeme t1,struct Vrijeme t2,int i) {\n\tint sat=t1.sati*3600,sat1=t2.sati*3600,min=t1.minute*60,min1=t2.minute*60;\n\tint d1=sat+min+t1.sekunde;\n\tint d2=sat1+min1+t2.sekunde;\n\tint ukpnosek=d1+d2;\n\tif(d1>d2) return 1;\n\telse if(d1<d2) return -1;\n\telse return 0;\n}\nint preklapanje(struct Cas raspored[],int broj_casova,struct Cas cas){\n\tint prekl=0;\n\tint i;\n\tint broj=broj_casova;\n\tint dan=cas.dan_u_sedmici;\n\tfor(i=0; i < broj ;i++){\n\t\tint drugi=PorediVrj(cas.kraj,raspored[i].pocetak,i);\n\t\tint vr=PorediVrj(raspored[i].kraj,cas.pocetak,i);\n\t\tif(i<0) return prekl;\n\t\tif(dan==raspored[i].dan_u_sedmici && vr==1 && drugi==1){\n\t\t\tprekl=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(i>-1)return prekl;\n}\nvoid ispisi_dan(struct Cas raspored[],int broj_casova,int dan){\n\tint brojac=1,i;\n\tprintf(\"Uneseni su casovi: \");\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].dan_u_sedmici==dan){\n\t\t\tprintf(\"\\n%d) %s (%02d:%02d-%02d:%02d)\",brojac,raspored[i].predmet,raspored[i].pocetak.sati,raspored[i].pocetak.minute,raspored[i].kraj.sati,raspored[i].kraj.minute);\n\t\t\tbrojac++;\n\t\t}\n\t}\n}\nvoid obrisi_cas(struct Cas raspored[],int broj_casova,int dan,int redni_broj){\n\tint i; int k=0; int j; int brojac=1;\n\tint obrisanih=0;\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].dan_u_sedmici==dan){\n\t\t\tk++;\n\t\t\tif(k==redni_broj){\n\t\t\t\tfor(j=i;j<broj_casova-1;j++){\n\t\t\t\t\traspored[j]=raspored[j+1];\n\t\t\t\t\tobrisanih++;\n\t\t\t\t}\n\t\t\t\tif(brojac>0 && obrisanih>0) break;\n\t\t\t}\n\t\t\tbrojac++;\n\t\t}\n\t}\n}\nint dodaj_cas(struct Cas raspored[],int broj_casova,const char *predmet,int trajanje){\n\tint i,j,preklop,brojac=1;\n\tint ukupno=broj_casova;\n\tif(ukupno==200) return 0;\n\tfor(i=0;i<6;i++)\n\t\tfor(j=9;j<=19-trajanje;j++){\n\t\t\tstruct Cas cas={\"\",i+1,{j,0,0},{j+trajanje,0,0}};\n\t\t\tstrcpy(cas.predmet,predmet);\n\t\t\tstruct Cas pom={\"\",i,{j,0,0},{j,0,0}};\n\t\t\tpreklop=preklapanje(raspored,broj_casova,cas);\n\t\t\tint pom1=preklapanje(raspored,broj_casova,cas);\n\t\t\tif(preklop==0){\n\t\t\t\traspored[broj_casova]=cas;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tbrojac++;\n\t\t}\n\t\tif (brojac>0) return 0; \n\t\t\t\n\t\t}\n\t\tstruct Cas pr(int dan,int sat,int min,int sat1,int min1, char*ime){\n\t\t\tstruct Cas casko={\"\",dan,{sat,min,0},{sat1,min1,0}};\n\t\t\tstrcpy(casko.predmet,ime);\n\t\t\treturn casko;\n\t\t}\n\t\tvoid promijeni_cas(struct Cas raspored[],int broj_casova,int dan,int redni_broj,struct Cas promjena){\n\t\t\tint i; int k=0;\n\t\t\tfor(i=0;i<broj_casova;i++){\n\t\t\t\tif(raspored[i].dan_u_sedmici==dan) k++;\n\t\t\t\tif(k==redni_broj)\n\t\t\t\traspored[i]=promjena;\n\t\t\t}\n\t\t}\n\nint main() {\n\tstruct Cas raspored[KAPACITET];\n\tint ucit=ucitaj_datoteku(raspored);\n\tint broj,br,dan,cs,zap;\n\tchar ime[100];\n\tdo{\n\tprintf(\"1) Ispis rasporeda\\n2) Dodavanje casa\\n3) Promjena casa\\n4) Brisanje casa\\n0) Kraj rada\\nIzaberite opciju: \");\n\tscanf(\"%d\",&broj);\n\tswitch (broj){\n\tcase 4:\n\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\tscanf(\"%d\",&dan);\n\t\tispisi_dan(raspored,ucit,dan);\n\t\tprintf(\"\\nIzaberite koji cas zelite obrisati: \");\n\t\tscanf(\"%d\",&cs);\n\t\tucit--;\n\t\tobrisi_cas(raspored,ucit,dan,cs);\n\t\tprintf(\"Cas obrisan\\n\");\n\t\tbreak;\n\tcase 1:\n\t\tispis_rasporeda(raspored,ucit);\n\t\tbreak;\n\tcase 2:\n\t\tprintf(\"Unesite naziv predmeta: \");\n\t\tunesi(ime);\n\t\tprintf(\"Unesite broj casova: \");\n\t\tint nema;\n\t\tscanf(\"%d\",&br);\n\t\tnema=dodaj_cas(raspored,ucit,ime,br);\n\t\tif(nema==0) printf(\"Nema dovoljno mjesta u rasporedu za %d casova.\\n\",br);\n\t\tif(nema==1) ucit++;\n\t\tbreak;\n\tcase 3:\n\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\tscanf(\"%d\",&dan);\n\t\tispisi_dan(raspored,ucit,dan);\n\t\tprintf(\"\\nIzaberite koji cas zelite promijeniti: \");\n\t\tscanf(\"%d\",&cs);\n\t\tprintf(\"Naziv predmeta: \");\n\t\tunesi (ime);\n\t\tprintf(\"Vrijeme pocetka: Vrijeme zavrsetka: \");\n\t\tint sat,min,sat1,min1;\n\t\tchar z,z1;\n\t\tscanf(\"%d\",&sat);\n\t\tscanf(\"%c\",&z);\n\t\tscanf(\"%d\",&min);\n\t\tscanf(\"%d\",&sat1);\n\t\tscanf(\"%c\",&z1);\n\t\tscanf(\"%d\",&min1);\n\t\tstruct Cas casko=pr(dan,sat,min,sat1,min1,ime);\n\t\tpromijeni_cas(raspored,ucit,dan,cs,casko);\n\t\tbreak;\n\t\t\n\t\tbreak;\n\t\t\n\t\tcase 0: \n\t\tzap=zapisi_datoteku(raspored,ucit);\n\t\treturn 0;\n\t}\n\t\t\n\n}\nwhile(broj!=0);\nreturn 0;\n\n}\n",
        "student8776": "#include <stdio.h>\n#include <string.h>\n#define KAPACITET 200\n\nstruct Vrijeme{\n\tint sati, minute, sekunde;\n};\n\nstruct Cas{\n\tchar predmet[10];\n\tint dan_u_sedmici;\n\tstruct Vrijeme pocetak,kraj;\n};\nchar unesi(char niz[], int velicina){\n\tchar znak=getchar();\n\tint i=0;\n\tif(znak=='\\n') znak=getchar();\n\t\n\twhile(i<velicina-1 && znak!='\\n'){\n\t\tniz[i]=znak;\n\t\ti++;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n\t\n\treturn znak;\n}\nvoid ocisti(char znak){\n\twhile(znak!='\\n')\n\tznak=getchar();\n\t\t\n}\nint ucitaj_datoteku(struct Cas raspored[]){\n\tFILE*ulaz=fopen(\"raspored.dat\",\"rb+\");\n\tif(ulaz==NULL){\n\t\treturn 0;\n\t}\n\tint ucitano=fread(raspored,sizeof(struct Cas),KAPACITET,ulaz);\n\tfclose(ulaz);\n\treturn ucitano;\n}\nvoid ispis_rasporeda(struct Cas raspored[],int broj_casova){\n\tint i,j,pocetak=9,kraj=0,k,ispisan=0;\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].kraj.sati>=kraj){\n\t\tkraj=raspored[i].kraj.sati;\n\t\t\tif(raspored[i].kraj.minute==0) kraj--;\n\t\t}\n\t\tif(raspored[i].pocetak.sati<pocetak)\n\t\tpocetak=raspored[i].pocetak.sati;\n\t}\n\tchar dani[][4]={\"PON\", \"UTO\", \"SRI\", \"CET\", \"PET\", \"SUB\"};\n\tprintf(\"\\n\");\n\tfor(i=0; i<6;i++)\n\t\tprintf(\"%10s\", dani[i]);\n\tprintf(\"\\n\");\n\tfor(i=pocetak;i<=kraj; i++){\n\t\tif(i<10)\n\t\tprintf(\"%d:00   \", i);\n\t\telse \n\t\tprintf(\"%d:00  \", i);\n\t\t\n\t\tfor(j=0; j<6; j++){\n\t\t\tispisan=0;\n\t\t\tfor(k=0;k<broj_casova;k++){\n\t\t\t\tif(raspored[k].dan_u_sedmici==j+1 && raspored[k].pocetak.sati<=i && raspored[k].kraj.sati>=i){\n\t\t\t\t\tprintf(\"%-10s\", raspored[k].predmet);\n\t\t\t\t\tispisan=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ispisan==0)\n\t\t\tprintf(\"          \");\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}\nvoid ispisi_dan(struct Cas raspored[], int broj_casova, int dan){\n\tint i=0;\n\tprintf(\"Uneseni su casovi: \");\n\tint k=1;\n\tfor(i=0; i<broj_casova; i++){\n\t\tif(raspored[i].dan_u_sedmici==dan){\n\t\t\tint sat=raspored[i].pocetak.sati;\n\t\t\tint min=raspored[i].pocetak.minute;\n\t\t\n\t\t\tprintf(\"\\n%d) %s (\", k++, raspored[i].predmet);\n\t\t\tif(sat<10) printf(\"0\");\n\t\t\tprintf(\"%d:\",sat);\n\t\t\tif(min<10) printf(\"0\");\n\t\t\tprintf(\"%d-\", min);\n\t\t\tif(raspored[i].kraj.sati<10) printf(\"0\");\n\t\t\tprintf(\"%d:\", raspored[i].kraj.sati);\n\t\t\tif(raspored[i].kraj.minute<10) printf(\"0\");\n\t\t\tprintf(\"%d)\", raspored[i].kraj.minute);\n\t\t\t\n\t\t}\n\t}\n}\nvoid obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){\n\tint i,j=0;\n\tfor(i=0; i<broj_casova; i++){\n\t\tif(raspored[i].dan_u_sedmici==dan) j++;\n\t\tif(redni_broj==j){\n\t\t\tfor(;i<broj_casova-1; i++)\n\t\t\traspored[i]=raspored[i+1];\n\t\t\tbreak;\n\t\t}\n\t\t\n\t}\n}\nint preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){\n\tint i=0;\n\tfor(i=0; i<broj_casova; i++){\n\t\tif(cas.dan_u_sedmici==raspored[i].dan_u_sedmici){\n\t\t\tif(raspored[i].pocetak.sati==cas.pocetak.sati || raspored[i].kraj.sati==cas.kraj.sati)\n\t\t\treturn 1;\n\t\t\tif(raspored[i].pocetak.sati==cas.kraj.sati && raspored[i].pocetak.minute<cas.kraj.minute)\n\t\t\treturn 1;\n\t\t\tif(raspored[i].kraj.sati==cas.pocetak.sati && raspored[i].kraj.minute>cas.pocetak.minute)\n\t\t\treturn 1;\n\t\t\tif(raspored[i].pocetak.sati<cas.pocetak.sati && raspored[i].kraj.sati>cas.kraj.sati)\n\t\t\treturn 1;\n\t\t\tif(raspored[i].pocetak.sati>cas.pocetak.sati && raspored[i].kraj.minute<cas.kraj.minute)\n\t\t\treturn 1;\n\t\t\tif(raspored[i].pocetak.sati> cas.pocetak.sati && raspored[i].pocetak.sati<cas.kraj.sati)\n\t\t\treturn 1;\n\t\t\tif(raspored[i].kraj.sati> cas.pocetak.sati && raspored[i].pocetak.sati < cas.kraj.sati)\n\t\t\treturn 1;\n\t\t\t\n\t\t}\n\t}\n\treturn 0;\n}\nint dodaj_cas (struct Cas raspored[], int broj_casova, const char*predmet, int trajanje){\n\tif(broj_casova==200) return 0;\n\tint i, j, preklop;\n\tfor(i=0; i<6; i++)\n\tfor(j=9; j<=19-trajanje; j++){\n\t\tstruct Cas cas={\"\", i+1,{j,0,0},{j+trajanje,0,0}};\n\t\tchar *q=cas.predmet, *p=(char*)predmet;\n\t\twhile(*q++=*p++);\n\t\tpreklop=preklapanje(raspored,broj_casova, cas);\n\t\tif(preklop==0){\n\t\traspored[broj_casova]=cas;\n\t\treturn 1;\n\t}\n\t\t\n\t}\n\treturn 0;\n\t\n}\nvoid promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){\n\tint i, redni=0;\n\tfor(i=0; i<broj_casova; i++){\n\t\tif(raspored[i].dan_u_sedmici==dan) redni++;\n\t\tif(redni_broj==redni) \n\t\traspored[i]=promjena;\n\t}\n}\nint zapisi_datoteku(struct Cas raspored[], int broj_casova){\n\tFILE*ulaz=fopen(\"raspored.dat\",\"wb+\");\n\tif(ulaz==NULL){\n\t\tprintf(\"Otvaranje datoteke raspored nije uspjelo.\");\n\t\treturn 0;\n\t}\n\tint zapisano=fwrite(raspored, sizeof(struct Cas), broj_casova,ulaz);\n\tfclose(ulaz);\n\tif(zapisano>=1) return 1;\n\telse\n\treturn 0;\n}\n\n\nint main() {\n\tint opcija,broj_casova=0;\n\tstruct Cas raspored[KAPACITET];\n\tucitaj_datoteku(raspored);\n\tdo{\n\t\tprintf(\"1) Ispis rasporeda\\n2) Dodavanje casa\\n3) Promjena casa\\n4) Brisanje casa\\n0) Kraj rada\\nIzaberite opciju: \");\n\t\tscanf(\"%d\", &opcija);\n\t\tif(opcija==0)\n\t\tzapisi_datoteku(raspored, broj_casova);\n\t\tif(opcija==1)\n\t\tispis_rasporeda(raspored, broj_casova);\n\t\tif(opcija==2){\n\t\t\tint br_casova, dodan=0;\n\t\t\tchar predmet[10];\n\t\t\tprintf(\"Unesite naziv predmeta: \");\n\t\t\tocisti(unesi(predmet, 10));\n\t\t\tprintf(\"Unesite broj casova: \");\n\t\t\tscanf(\"%d\",  &br_casova);\n\t\t\tdodan=dodaj_cas(raspored,broj_casova,predmet, br_casova);\n\t\t\tif(dodan==1)\n\t\t\tbroj_casova++;\n\t\t\telse\n\t\t\tprintf(\"Nema dovoljno mjesta u rasporedu za %d casova.\\n\", br_casova);\n\t\t}\n\t\tif(opcija==3){\n\t\t\tstruct Cas promjena;\n\t\t\tint dan, redni;\n\t\t\n\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\tscanf(\"%d\", &dan);\n\t\t\n\t\t\tispisi_dan(raspored, broj_casova, dan);\n\t\t\tpromjena.dan_u_sedmici=dan;\n\t\t\n\t\t\tprintf(\"\\nIzaberite koji cas zelite promijeniti:  \");\n\t\t\tscanf(\"%d\", &redni);\n\t\t\n\t\t\tprintf(\"Naziv predmeta: \");\n\t\t\n\t\t\tchar predmet[10];\n\t\t\tocisti(unesi(predmet, 10));\n\t\t\tchar*q=promjena.predmet, *p=predmet;\n\t\t\twhile(*q++=*p++);\n\t\t\tchar znak;\n\t\t\tprintf(\"Vrijeme pocetka: \");\n\t\t\tscanf(\"%d%c%d\",&promjena.pocetak.sati, &znak, &promjena.pocetak.minute);\n\t\t\t\n\t\t\tprintf(\"Vrijeme zavrsetka: \");\n\t\t\tscanf(\"%d%c%d\",&promjena.kraj.sati, &znak, &promjena.kraj.minute);\n\t\t\t\n\t\t\tpromijeni_cas(raspored,broj_casova,dan,redni,promjena);\n\t\t\t\n\t\t\t\n\t\t}\n\t\tif(opcija==4){\n\t\t\tint dan, redni;\n\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\tscanf(\"%d\", &dan);\n\t\t\tispisi_dan(raspored,broj_casova, dan);\n\t\t\tprintf(\"\\nIzaberite koji cas zelite obrisati: \");\n\t\t\tscanf(\"%d\", &redni);\n\t\t\tobrisi_cas(raspored, broj_casova, dan, redni);\n\t\t\tprintf(\" Cas obrisan\\n\");\n\t\t\tbroj_casova--;\n\t\t\t\n\t\t}\n\t}\n\twhile(opcija!=0);\n\t\n\treturn 0;\n}\n"
    },
    "133": {
        "label": "0",
        "student3776": "#include <stdio.h>\n#include <string.h>\n\nstruct Student {\n\tchar ime[20],prezime[20];\n\tint ocjene[50];\n\tint br_ocjena;\n};\n\ndouble prosjek(int niz[],int vel){\n\tint suma=0,i;\n\tdouble p=5;\n\tfor(i=0; i<vel;i++){\n\t\tif(niz[i]<6) return 5;\n\t\tsuma+=niz[i];\n\t}\n\tif (suma!=0)\n\t\tp=(double) suma/i;\n\treturn p;\n}\n\nint genijalci (struct Student studenti[],int vel, double avg){\n\tint i,j;\n\tdouble pom;\n\tfor (i=0; i<vel; i++){\n\t\tpom=prosjek(studenti[i].ocjene,studenti[i].br_ocjena);\n\t\tif (pom<avg){\n\t\t\tfor(j=i; j<vel-1; j++)\n\t\t\t\tstudenti[j]=studenti[j+1];\n\t\t\tvel--;\n\t\t\ti--;\n\t\t}\n\t}\n\tj=0;\n\tint ind1=-1,ind2=-1;\n\tdouble max=0;\n\tstruct Student pomocni[3];\n\tfor(i=0; i<vel; i++){\n\t\tdouble pom=prosjek(studenti[i].ocjene,studenti[i].br_ocjena);\n\t\tif (pom>max){\n\t\t\tmax=pom;\n\t\t\tind1=i;\n\t\t\tpomocni[0]=studenti[i];\n\t\t\tj=1;\n\t\t}\n\t\tif(pom==max){\n\t\t\tint k=strcmp(pomocni[0].prezime,studenti[i].prezime);\n\t\t\tif(k==0)\n\t\t\t\tk=strcmp(pomocni[0].ime,studenti[i].ime);\n\t\t\tif(k>0){\n\t\t\t\tpomocni[0]=studenti[i];\n\t\t\t\tind1=i;\n\t\t\t}\n\t\t}\n\t}\n\tmax=0;\n\tfor (i=0; i<vel; i++){\n\t\tif (i==ind1) continue;\n\t\tdouble pom=prosjek(studenti[i].ocjene,studenti[i].br_ocjena);\n\t\tif(pom>max){\n\t\t\tmax=pom;\n\t\t\tind2=i;\n\t\t\tpomocni[1]=studenti[i];\n\t\t\tj=2;\n\t\t}\n\t\tif (pom==max){\n\t\t\tint k=strcmp(pomocni[1].prezime,studenti[i].prezime);\n\t\t\tif(k==0)\n\t\t\t\tk=strcmp(pomocni[1].ime,studenti[i].ime);\n\t\t\tif (k>0){\n\t\t\t\tpomocni[1]=studenti[i];\n\t\t\t\tind2=i;\n\t\t\t}\n\t\t}\n\t}\n\tmax=0;\n\tfor (i=0; i<vel; i++){\n\t\tif(i==ind1 || i==ind2) continue;\n\t\tdouble pom=prosjek(studenti[i].ocjene,studenti[i].br_ocjena);\n\t\tif(pom>max){\n\t\t\tmax=pom;\n\t\t\tpomocni[2]=studenti[i];\n\t\t\tj=3;\n\t\t}\n\t\tif(pom==max){\n\t\t\tint k=strcmp(pomocni[2].prezime,studenti[i].prezime);\n\t\t\tif (k==0)\n\t\t\t\tk=strcmp(pomocni[2].ime,studenti[i].ime);\n\t\t\tif(k>0)\n\t\t\t\tpomocni[2]=studenti[i];\n\t\t\tj=3;\n\t\t}\n\t}\n\tfor (i=0; i<j; i++)\n\t\tprintf(\"%s %s\\n\",pomocni[i].prezime,pomocni[i].ime);\n\treturn vel;\n}\n\nint main() {\n\treturn 0;\n}",
        "student7888": "#include <stdio.h>\n#include <math.h>\n#define eps 0.00000000000000000000000000000000000000000000001\n\nstruct Student {\n\tchar ime[20], prezime[20];\n\tint ocjene[50];\n\tint br_ocjena;\n};\n\n\t\t\t\t\t\t\t\t\t\t/* Funkcija genijalci prima niz studenata, velicinu niza i realan broj prosjek */\n\nint genijalci(struct Student studenti[], int vel, float prosjek)\t{\n\t\tint i,j,k,suma,brojac,max1,max2,p=0,s=0;\n\t\tfloat prosjek_studenta,prosjek_studenta1;\n\n\t\n\t\t\t\t\t\t\t\t\t\t/* Izbacivanje studenata koji imaju manji prosjek od zadanog */\n\n\t\tfor (i = 0 ; i < vel ; i++)\t{\n\t\t\n\t\t\tsuma = 0;\n\t\t\tbrojac = 0;\n\t\t\n\t\t\n\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\t{\n\t\t\n\t\t\n\t\t\t\t\t\t\t\t\t\t/* Ako student ima samo jednu evidentiranu ocjenu prosjek mu je automatski 5.0 */\n\t\t\tif ( studenti[i].ocjene[j] == 5)\t{\n\t\t\t\tsuma = 5;\n\t\t\t\tbrojac = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\t\tsuma+=studenti[i].ocjene[j];\n\t\t\t\tbrojac++;\n\t\t}\n\t\t\t\t\t\t\t\t\t\t/* Ako student nema evidentirani ocjena prosjek mu je tako\u0111er 5.0 */\n\t\t\t\tif ( suma == 0)\t{\n\t\t\t\n\t\t\t\tsuma = 5;\n\t\t\t\tbrojac = 1;\n\t\t\t}\n\t\t\n\t\t\n\t\tprosjek_studenta = (float)suma/brojac;\n\t\t\n\t\t\tif ( prosjek_studenta < prosjek)\t{\n\t\t\t\n\t\t\t\tfor ( k = i ; k < vel-1 ; k++)\t{\n\t\t\t\t\n\t\t\t\t\tstudenti[k] = studenti[k+1];\n\t\t\t\t}\n\t\t\t\n\t\t\n\t\t\ti--;\n\t\t\tvel--;\n\t\n\t\t}\n\t\n\t\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ispisivanje imena i prezimena studenta sa najvecim prosjekom */\n\t\t\t\ti = 0;\n\t\t\t\tsuma = 0;\n\t\t\n\t\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\t\tsuma+=studenti[i].ocjene[j];\n\t\t\n\t\t\t\tprosjek_studenta = (float)suma/studenti[i].br_ocjena;\n\t\t\n\t\t\t\n\t\t\t\t\tfor ( k = i+1 ; k < vel ; k++ )\t{\n\t\t\t\t\t\tsuma = 0;\n\t\t\n\t\t\t\t\t\tfor ( j = 0 ; j < studenti[k].br_ocjena ; j++)\t\tsuma+=studenti[k].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta1 = (float)suma/studenti[k].br_ocjena;\n\t\t\n\t\t\n\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko dva studenta imaju isti prosjek ispisuje se ime onog studenta \u010dije je prezime ispred po leksikografskom redoslijedu */\n\t\t\t\n\t\t\t\t\twhile (fabs(prosjek_studenta - prosjek_studenta1)<eps)\t{\n\t\t\t\t\n\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\ts = 0;\n\t\t\t\t\t\n\t\t\t\t\t\t\twhile ( studenti[i].prezime[p] == studenti[k].prezime[s] && studenti[i].prezime[p] != '\\0' && studenti[k].prezime[s] != '\\0') {\n\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tif ( studenti[i].prezime[p] == '\\0' || studenti[k].prezime[s] == '\\0')\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ako im je isto prezime onda im se gleda ime */ \n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twhile ( studenti[i].ime[p] == studenti[k].ime[s] && studenti[i].ime[p] != '\\0' && studenti[k].ime[s] != '\\0') {\n\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tif ( studenti[i].ime[p] > studenti[k].ime[s] )\t{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\t\t\tif ( studenti[i].prezime[p] > studenti[k].prezime[s] )\t{\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\tif ( prosjek_studenta < prosjek_studenta1)\t{\n\t\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\ti = k;\n\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\t\t\tmax1 = i;\n\t\t\t\t\t\tif ( i < vel)\n\t\t\t\t\t\tprintf(\"%s %s\\n\", studenti[i].prezime,studenti[i].ime);\n\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t/* Ispis studenta sa drugim najvecim prosjekom */\n\t\t\t\n\t\t\ti = 0;\n\t\t\tsuma = 0;\n\t\t\t\n\t\t\tif ( i == max1) i++;\n\t\t\tif ( i < vel)\t{\n\t\t\t\t\n\t\t\t\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\tsuma+=studenti[i].ocjene[j];\n\t\t\t\n\t\t\t\t\tprosjek_studenta = (float)suma/studenti[i].br_ocjena;\n\t\t\n\t\t\t\n\t\t\t\t\t\tfor ( k = i+1 ; k < vel ; k++ )\t{\n\t\t\t\t\t\t\tsuma = 0;\n\t\t\t\t\t\t\tif ( k == max1) k++;\n\t\t\t\t\t\t\tif ( k >= vel)\tbreak;\n\t\t\t\t\t\t\t\tfor ( j = 0 ; j < studenti[k].br_ocjena ; j++)\t\tsuma+=studenti[k].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta1 = (float)suma/studenti[k].br_ocjena;\n\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko dva studenta imaju isti prosjek ispisuje se ime onog studenta \u010dije je prezime ispred po leksikografskom redoslijedu */\n\n\t\t\n\t\t\t\t\t\t\twhile (fabs(prosjek_studenta - prosjek_studenta1)<eps)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\twhile ( studenti[i].prezime[p] == studenti[k].prezime[s] && studenti[i].prezime[p] != '\\0' && studenti[k].prezime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ako im je isto prezime onda im se gleda ime */ \n\t\t\t\t\n\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] == '\\0' || studenti[k].prezime[s] == '\\0')\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\twhile ( studenti[i].ime[p] == studenti[k].ime[s] && studenti[i].ime[p] != '\\0' && studenti[k].ime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif ( studenti[i].ime[p] > studenti[k].ime[s] )\t{\n\t\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] > studenti[k].prezime[s] )\t{\n\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\tif ( prosjek_studenta < prosjek_studenta1)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t\tmax2 = i;\n\t\t\t\t\t\t\tif ( i < vel)\n\t\t\t\t\t\t\tprintf(\"%s %s\\n\", studenti[i].prezime,studenti[i].ime);\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* Ispis studenta sa trecim najvecim prosjekom */\n\t\t\t\n\t\t\t\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tsuma = 0;\n\t\t\t\n\t\t\t\t\t\t\twhile ( i == max1 || i == max2) i++;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( i < vel)\t{\n\t\t\t\n\t\t\t\t\t\t\t\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\tsuma+=studenti[i].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\t\t\tprosjek_studenta = (float)suma/studenti[i].br_ocjena;\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\tfor ( k = i+1 ; k < vel ; k++ )\t{\n\t\t\t\t\t\t\t\t\tsuma = 0;\n\t\t\t\t\t\t\t\t\twhile ( k == max1 || k == max2) k++;\n\t\t\t\t\t\t\t\t\tif ( k >= vel) break;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tfor ( j = 0 ; j < studenti[k].br_ocjena ; j++)\t\tsuma+=studenti[k].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\t\t\t\tprosjek_studenta1 = (float)suma/studenti[k].br_ocjena;\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko dva studenta imaju isti prosjek ispisuje se ime onog studenta \u010dije je prezime ispred po leksikografskom redoslijedu */\n\n\t\t\n\t\t\t\t\t\t\t\t\t\t\twhile (fabs(prosjek_studenta - prosjek_studenta1)<eps)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\twhile ( studenti[i].prezime[p] == studenti[k].prezime[s] && studenti[i].prezime[p] != '\\0' && studenti[k].prezime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko imaju isto prezime gleda se ime */\n\t\t\t\t\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] == '\\0' || studenti[k].prezime[s] == '\\0')\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\twhile ( studenti[i].ime[p] == studenti[k].ime[s] && studenti[i].ime[p] != '\\0' && studenti[k].ime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif ( studenti[i].ime[p] > studenti[k].ime[s] )\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] > studenti[k].prezime[s] )\t{\n\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\n\t\t\t\t\t\t\t\t\tif ( prosjek_studenta < prosjek_studenta1)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( i < vel)\n\t\t\t\t\t\t\t\tprintf(\"%s %s\\n\", studenti[i].prezime,studenti[i].ime);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\n\treturn vel;\n}\n\n\n\nint main() {\n\t\n\n\treturn 0;\n}\n"
    },
    "134": {
        "label": "1",
        "student6956": "#include <stdio.h>\n#include <string.h>\n#define KAPACITET 200\nstruct Vrijeme{\n\tint sati, minute, sekunde;\n};\n\nstruct Cas{\n\tchar predmet[10];\n\tint dan_u_sedmici;\n\tstruct Vrijeme pocetak, kraj;\n};\n\n\nchar unesi(char niz[], int velicina){\n\tchar znak=getchar();\n\tint vr=znak;\n\tint i=0;\n\twhile (znak=='\\n') \n\tznak=getchar();\n\twhile (i<velicina-1 && znak!='\\n' && vr>0){\n\t\tniz[i++]=znak;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n\treturn znak;\n}\nvoid ocisti(char znak){\n\tint ima=0;\n\tif(znak=='\\0') return;\n\twhile(znak!='\\n')\n\tznak=getchar();\n}\nint ucitaj_datoteku(struct Cas raspored[]){\n\tFILE* ulaz=fopen(\"raspored.dat\",\"rb+\");\n\tFILE* ulaz1=fopen(\"raspored.dat\",\"rb+\");\n\tif(ulaz==NULL || ulaz1==NULL){\n\t\treturn 0;\n\t}\n\tint ucitano=fread(raspored,sizeof(struct Cas), KAPACITET, ulaz);\n\tint ucitano1=fread(raspored, sizeof(struct Cas), KAPACITET, ulaz1);\n\tfclose(ulaz);\n\tfclose(ulaz1);\n\tif(ucitano==ucitano1) \n\treturn ucitano;\n}\n\nint MAX(struct Cas raspored[], int broj_casova){\n\tint nasao=0;\n\t\n\tint i,j,max=0,indexmaxa=0;\n\t\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].kraj.sati>max){\n\t\t\tnasao=1;\n\t\t\tmax=raspored[i].kraj.sati;\n\t\t\tindexmaxa=i;\n\t\t}\n\t}\n\tif(raspored[indexmaxa].kraj.minute==0 && nasao==1) max=max-1;\n\tif(nasao == 1)return max;\n}\n\nint MIN(struct Cas raspored[],int broj_casova){\n\tint i, j, min=25;\n\tint nasao=0;\n\t\n\tfor(i=0; i<broj_casova; i++){\n\t\tif(raspored[i].pocetak.sati<min) \n\t\tnasao=1;\n\t\tmin=raspored[i].pocetak.sati;\n\t}\n\tif(nasao==1)\n\treturn min;\n}\n\nvoid ispis_rasporeda(struct Cas raspored[], int broj_casova){\n\tint i,j,k;\n\t\n\tprintf(\"\\n       \");\n\tprintf(\"PON       \");\n\tprintf(\"UTO       \");\n\tprintf(\"SRI       \");\n\tprintf(\"CET       \");\n\tprintf(\"PET       \");\n\tprintf(\"SUB\\n\");\n\t\n\tfor(i=MIN(raspored,broj_casova);i<=MAX(raspored,broj_casova);i++){\n\t\tif(i<10) printf(\"9:00   \");\n\t\telse printf(\"%d:00  \",i);\n\t\t\n\t\tfor(j=1;j<7;j++){\n\t\t\tfor(k=0;k<broj_casova;k++)\n\t\t\tif (raspored[k].pocetak.sati<=i && raspored[k].dan_u_sedmici==j && raspored[k].kraj.sati>=i){\n\t\t\t\tprintf(\"%-10s\", raspored[k].predmet);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(k==broj_casova)\n\t\t\tprintf(\"          \");\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n}\n\nvoid ispisi_dan(struct Cas raspored[], int broj_casova, int dan){\n\tint i;\n\tprintf(\"Uneseni su casovi: \");\n\tint k=1;\n\tint brojac=0;\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].dan_u_sedmici==dan){\n\t\t\tprintf(\"\\n%d) %s (\",k++,raspored[i].predmet);\n\t\t\tif(raspored[i].pocetak.sati<10) printf(\"0\");\n\t\t\tprintf(\"%d:\",raspored[i].pocetak.sati);\n\t\t\tif(raspored[i].pocetak.minute<10) printf(\"0\");\n\t\t\tprintf(\"%d-\",raspored[i].pocetak.minute);\n\t\t\tif(raspored[i].kraj.sati<10) printf(\"0\");\n\t\t\tprintf(\"%d:\",raspored[i].kraj.sati);\n\t\t\tif(raspored[i].kraj.minute<10) printf(\"0\");\n\t\t\tprintf(\"%d\",raspored[i].kraj.minute);\n\t\t\tprintf(\")\");\n\t\t}\n\t\t\n\t\tbrojac++;\n\t}\n}\n\nint zapisi_datoteku(struct Cas raspored[], int broj_casova){\n\tint zapisano; int nova;\n\tFILE* ulaz=fopen(\"raspored.dat\",\"wb+\");\n\tFILE* ulaz1=fopen(\"raspored.dat\",\"wb+\");\n\tif(ulaz==NULL || ulaz1==NULL){\n\t\treturn 0;\n\t}\n\t\n\tnova=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz);\n\tzapisano=fwrite(raspored,sizeof(struct Cas),broj_casova,ulaz1);\n\t\n\tfclose(ulaz);\n\tfclose(ulaz1);\n\t\n\tif(zapisano>=1 && nova==zapisano) return 1;\n\telse\n\treturn 0;\n}\n\nvoid obrisi_cas(struct Cas raspored[],int broj_casova,int dan, int redni_broj){\n\t\n\tint i,j=0,obrisan=0;\n\t\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].dan_u_sedmici==dan) j++;\n\t\tif(redni_broj==j){\n\t\t\tobrisan=1;\n\t\t\tfor(;i<broj_casova-1;i++)\n\t\t\traspored[i]=raspored[i+1];\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nint PorediVrj(struct Vrijeme t1, struct Vrijeme t2){\n\tint d1=t1.sati*3600 + t1.minute*60 + t1.sekunde;\n\tint d2=t2.sati*3600 + t2.minute*60 + t2.sekunde;\n\t\n\tif(d1>d2) return 1;\n\tif(d1<d2) return -1;\n\tif(d1==d2) return 0;\n\t\n\treturn -2;\n}\n\nint preklapanje(struct Cas raspored[],int broj_casova, struct Cas cas){\n\t\n\tint flag=0;\n\tint i;\n\tfor(i=0;i<broj_casova;i++){\n\t\tint prvi=PorediVrj(raspored[i].kraj,cas.pocetak);\n\t\tint drugi=PorediVrj(cas.kraj,raspored[i].pocetak);\n\t\t\n\t\tif(prvi==1 && drugi==1 && (cas.dan_u_sedmici==raspored[i].dan_u_sedmici)){\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn flag;\n}\n\nint dodaj_cas(struct Cas raspored[],int broj_casova, const char* predmet, int trajanje){\n\t\n\tif(broj_casova==200) return 0;\n\tint i,j,preklop;\n\tint dokle=19-trajanje;\n\t\n\tfor(i=0;i<6;i++)\n\tfor(j=9;j<=dokle;j++){\n\t\tstruct Cas cas={\"\",i+1,{j,0,0},{j+trajanje,0,0}};\n\t\tstruct Cas cas1={\"pom\",2,{0,0,0},{0,0,0}};\n\t\tchar*q=cas.predmet,*p=(char*)predmet;\n\t\t\n\t\twhile(*q++=*p++);\n\t\tchar*a=cas1.predmet;\n\t\tchar*b=cas1.predmet;\n\t\tif(a==b)\n\t\tpreklop=preklapanje(raspored,broj_casova,cas);\n\t\tif(preklop==0){\n\t\t\traspored[broj_casova]=cas;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nvoid promijeni_cas(struct Cas raspored[], int broj_casova,int dan,int redni_broj,struct Cas promjena){\n\t\n\tint i, redni=0;\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].dan_u_sedmici==dan) redni++;\n\t\tif(redni_broj==redni)\n\t\traspored[i]=promjena;\n\t}\n}\n\nint main() {\n\tint opcija, broj_casova=0;\n\tstruct Cas raspored[KAPACITET];\n\tucitaj_datoteku(raspored);\n\tdo{\n\t\tprintf(\"1) Ispis rasporeda\\n2) Dodavanje casa\\n3) Promjena casa\\n4) Brisanje casa\\n0) Kraj rada\\nIzaberite opciju: \");\n\t\tscanf(\"%d\",&opcija);\n\t\tswitch(opcija){\n\t\t\tcase 0: \n\t\t\t{\n\t\t\t\tzapisi_datoteku(raspored,broj_casova);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 1:\n\t\t\t{\n\t\t\t\tispis_rasporeda(raspored,broj_casova);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2:\n\t\t\t{\n\t\t\t\tint br_casova, dodan=0;\n\t\t\t\tchar predmet[10];\n\t\t\t\tprintf(\"Unesite naziv predmeta: Unesite broj casova: \");\n\t\t\t\tocisti(unesi(predmet,10));\n\t\t\t\tscanf(\"%d\",&br_casova);\n\t\t\t\tdodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);\n\t\t\t\tint vr=dodan;\n\t\t\t\tif(vr==0)\n\t\t\t\tprintf(\"Nema dovoljno mjesta u rasporedu za %d casova.\\n\",br_casova);\n\t\t\t\tif(vr==1)\n\t\t\t\tbroj_casova++;\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tcase 3:\n\t\t\t{\n\t\t\t\tstruct Cas promjena;\n\t\t\t\tint dan, redni;\n\t\t\t\tchar*q,*p;\n\t\t\t\tchar znak, predmet[10];\n\t\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\t\tscanf(\"%d\", &dan);\n\t\t\t\tint BROJ=broj_casova;\n\t\t\t\tispisi_dan(raspored,BROJ,dan);\n\t\t\t\tpromjena.dan_u_sedmici=dan;\n\t\t\t\tint dani=dan+7;\n\t\t\t\tprintf(\"\\nIzaberite koji cas zelite promijeniti:  Naziv predmeta: \");\n\t\t\t\tscanf(\"%d\",&redni);\n\t\t\t\tocisti(unesi(predmet,10));\n\t\t\t\t\n\t\t\t\tq=promjena.predmet;\n\t\t\t\tp=predmet;\n\t\t\t\tstrcpy(q,p);\n\t\t\t\tprintf(\"Vrijeme pocetka: Vrijeme zavrsetka: \");\n\t\t\t\tscanf(\"%d%c%d\",&promjena.pocetak.sati,&znak,&promjena.pocetak.minute);\n\t\t\t\tscanf(\"%d%c%d\",&promjena.kraj.sati,&znak,&promjena.kraj.minute);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(dani>0) promijeni_cas(raspored, BROJ, dan, redni, promjena);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tcase 4:\n\t\t\t{\n\t\t\t\tint dan, redni;\n\t\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\t\tscanf(\"%d\", &dan);\n\t\t\t\t\n\t\t\t\tispisi_dan(raspored,broj_casova,dan);\n\t\t\t\t\n\t\t\t\tprintf(\"\\nIzaberite koji cas zelite obrisati: \");\n\t\t\t\tscanf(\"%d\", &redni);\n\t\t\t\tobrisi_cas(raspored,broj_casova,dan,redni);\n\t\t\t\tprintf(\" Cas obrisan\\n\");\n\t\t\t\tbroj_casova--;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\twhile(opcija!=0);\n\t\n\treturn 0;\n}\n",
        "student9538": "#include <stdio.h>\n#include <string.h>\n#define KAPACITET 200\n\nstruct Vrijeme {\n\tint sati,minute,sekunde;\n};\n\nstruct Cas {\n\tchar predmet[10];\n\tint dan_u_sedmici;\n\tstruct Vrijeme pocetak,kraj;\n};\nchar unesi(char niz[],int velicina) {\n\tchar znak=getchar();\n\tint i=0;\n\twhile(znak=='\\n')\n\tznak=getchar();\n\twhile(i< velicina-1 && znak !='\\n' ) {\n\t\tniz[i++] = znak;\n\t\tznak = getchar();\n\t}\nniz[i]='\\0';\nreturn znak; }\nvoid ocisti(char znak){\n\tint ima=0;\n\twhile(znak!='\\n')\n\tznak=getchar(); }\nint ucitaj_datoteku(struct Cas raspored[]){\nFILE* dat=fopen(\"raspored.dat\",\"rb\");\nif(dat == NULL) return 0;\nint ucitanih=fread(raspored,sizeof(struct Cas),KAPACITET,dat);\nfclose(dat);\nreturn ucitanih; }\nvoid ispisreda(){\nprintf(\"\\n       PON       UTO       SRI\");\nprintf(\"       CET       PET       SUB\");\nprintf(\"\\n\"); }\nvoid ispis_rasporeda(struct Cas raspored[], int broj_casova){\n\tint i,j,k,max=0,min=100;\n\tint indexmaxa=0;\n\tispisreda();\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].pocetak.sati<min)\n\t\tmin=raspored[i].pocetak.sati;}\n\tfor(i=0;i<broj_casova;i++){\n\t\tif(raspored[i].kraj.sati>max ){\n\t\t\tmax=raspored[i].kraj.sati;\n\t\t\tindexmaxa=i;\n}} if(raspored[indexmaxa].kraj.minute==0) max=max-1;\n\nint x;\nint s,dan,n;\n\nfor(i=min;i<=max;i++){\n\tif(i<10) printf(\"9:00   \");\n\telse printf(\"%d:00  \",i);\n\tfor(j=1;j<7;j++){\n\t\tfor(k=0;k<broj_casova;k++){\n\t\t\ts=raspored[k].pocetak.sati;\n\t\t\tdan=raspored[k].dan_u_sedmici;\n\t\t\tn=raspored[k].kraj.sati;\n\t\t\tif(s<=i && dan==j && n>=i) {\n\t\t\t\tprintf(\"%-10s\",raspored[k].predmet);\n\t\t\t\tbreak;\n\t\t\t}}\n\t\t\tif(k==broj_casova)\n\t\t\tfor(x=0;x<10;x++)\n\t\t\tprintf(\" \");}\n\t\t\tprintf(\"\\n\"); }}\n\t\t\t\n\t\t\tvoid ispisi_dan(struct Cas raspored[], int broj_casova, int dan){\n\t\t\t\tint i;\n\t\t\t\tprintf(\"Uneseni su casovi: \");\n\t\t\t\tint k=1;\n\t\t\t\t\n\t\t\tfor(i=0;i<broj_casova;i++){\n\t\t\t\tif(raspored[i].dan_u_sedmici==dan){\n\t\t\t\t\tprintf(\"\\n%d) %s (\",k++,raspored[i].predmet);\n\t\t\t\t\tif(raspored[i].pocetak.sati<10) printf(\"0\");\n\t\t\t\t\tprintf(\"%d:\",raspored[i].pocetak.sati);\n\t\t\t\t\tif (raspored[i].pocetak.minute<10) printf(\"0\");\n\t\t\t\t\tprintf(\"%d-\",raspored[i].pocetak.minute);\n\t\t\t\t\tprintf(\"%02d:%02d)\",raspored[i].kraj.sati,raspored[i].kraj.minute);\n\t\t\t\t}\n\t\t\t}}\n\t\t\tint zapisi_datoteku(struct Cas raspored[], int broj_casova){\n\t\t\t\tFILE* dat = fopen(\"raspored.dat\", \"wb\");\n\t\t\t\tint ucitano=fwrite(raspored, sizeof(struct Cas), broj_casova, dat);\n\t\t\t\tfclose(dat);\n\t\t\t\tif(ucitano>0) return 1;\n\t\t\t\treturn ucitano; }\n\t\t\t\tvoid obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){\n\t\t\t\t\tint i; int k=0; int j, brojac=1;\n\t\t\t\t\tfor(i=0;i<broj_casova;i++){\n\t\t\t\t\tif(raspored[i].dan_u_sedmici==dan){ k++; brojac++;\n\t\t\t\t\tif(k==redni_broj){\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor(j=i;j<broj_casova-1;j++)\n\t\t\t\t\t\traspored[j]=raspored[j+1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(brojac>0)break; } }}}\n\t\t\t\t\t\tint preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){\n\t\t\t\t\t\t\tint i;\n\t\t\t\t\t\tint minpoc1,minpoc2,minkraj1,minkraj2;\n\t\t\t\t\t\tfor(i=0;i<broj_casova;i++) {\n\t\t\t\t\t\t\tminpoc1=raspored[i].pocetak.minute+raspored[i].pocetak.sati*60;\n\t\t\t\t\t\t\tminkraj1=raspored[i].kraj.minute+raspored[i].kraj.sati*60;\n\t\t\t\t\t\t\tminpoc2=cas.pocetak.minute+cas.pocetak.sati*60;\n\t\t\t\t\t\t\tminkraj2=cas.kraj.minute+cas.kraj.sati*60;\n\t\t\t\t\t\tif (raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<minpoc2 && minkraj1>minpoc2 || minpoc2<raspored[i].pocetak.minute+raspored[i].pocetak.sati*60 && cas.kraj.minute+cas.kraj.sati*60>minkraj1 || raspored[i].pocetak.minute+raspored[i].pocetak.sati*60<cas.kraj.minute+cas.kraj.sati*60 && minkraj1>cas.kraj.minute+cas.kraj.sati*60))\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\tif(raspored[i].dan_u_sedmici==cas.dan_u_sedmici && (minpoc2==minpoc1 || minkraj1==minkraj2))\n\t\t\t\t\t\treturn 1; \n\t\t\t\t\t\tif(raspored[i].dan_u_sedmici==cas.dan_u_sedmici &&(minpoc1<minpoc2 && minkraj1>minpoc2 || minpoc2<minpoc1 && minkraj2>minkraj1 || minpoc1<minkraj2 && minkraj1>minkraj2))\n\t\t\t\t\t\treturn 1; }\n\t\t\t\t\t\treturn 0;}\n\t\t\t\t\t\tint dodaj_cas(struct Cas raspored[], int broj_casova, const char*predmet, int trajanje){\n\t\t\t\t\t\t\tif (broj_casova==200) return 0;\n\t\t\t\t\t\t\tint i,j,preklop;\n\t\t\t\t\t\t\tfor(i=0; i<6; i++)\n\t\t\t\t\t\t\t\tfor(j=9; j<=19-trajanje; j++){\n\t\t\t\t\t\t\t\t\tstruct Cas cas={\"\",i+1,{j,0,0},{j+trajanje,0,0}};\n\t\t\t\t\t\t\t\t\tchar *q=cas.predmet,*p=(char*)predmet;\n\t\t\t\t\t\t\t\t\tstruct Cas cc;\n\t\t\t\t\t\t\t\t\twhile(*q++=*p++);\n\t\t\t\t\t\t\t\t\tpreklop=preklapanje(raspored,broj_casova,cas);\n\t\t\t\t\t\t\t\t\tif(preklop==0){\n\t\t\t\t\t\t\t\t\t\traspored[broj_casova]=cas;\n\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\t} if(preklop==1) continue; }\n\t\t\t\t\t\t\t\t\treturn 0; }\n\t\t\t\t\t\t\t\t\tvoid promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){\n\t\t\t\t\t\t\t\tint i,redni=0;\n\t\t\t\t\t\t\t\tfor(i=0;i<broj_casova; i++){\n\t\t\t\t\t\t\t\t\tif(raspored[i].dan_u_sedmici==dan) redni++;\n\t\t\t\t\t\t\t\t\tif(redni_broj==redni)\n\t\t\t\t\t\t\t\t\traspored[i]=promjena; }}\n\t\t\t\t\t\t\t\tint main () {\n\t\t\t\t\t\t\t\t\tint opcija,broj_casova=0;\n\t\t\t\t\t\t\t\t\tstruct Cas raspored[KAPACITET];\n\t\t\t\t\t\t\t\t\tucitaj_datoteku(raspored);\n\t\t\t\t\t\t\t\t\tdo{\n\t\t\t\t\t\t\t\t\t\tprintf(\"1) Ispis rasporeda\\n2) Dodavanje casa\\n3) Promjena casa\\n4) Brisanje casa\\n0) Kraj rada\\nIzaberite opciju: \");\n\t\t\t\t\t\t\t\t\t\tscanf(\"%d\",&opcija);\n\t\t\t\t\t\t\t\t\t\tint broj=opcija;\n\t\t\t\t\t\t\t\t\t\tswitch(opcija){\n\t\t\t\t\t\t\t\t\t\t\tcase 0: {\n\t\t\t\t\t\t\t\t\t\t\t\tzapisi_datoteku(raspored,broj_casova);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t} case 1:{\n\t\t\t\t\t\t\t\t\t\t\t\tif(broj!=0)   ispis_rasporeda(raspored,broj_casova);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;}\n\t\t\t\t\t\t\t\t\t\t\t\tcase 2:  if(broj!=0)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tint br_casova,dodan=0;\n\t\t\t\t\t\t\t\t\t\t\t\tchar  predmet[10];\n\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"Unesite naziv predmeta: Unesite broj casova: \");\n\t\t\t\t\t\t\t\t\t\t\t\tif(broj!=0)   ocisti(unesi(predmet,10));\n\t\t\t\t\t\t\t\t\t\t\t\tscanf(\"%d\",&br_casova);\n\t\t\t\t\t\t\t\t\t\t\t\tdodan=dodaj_cas(raspored,broj_casova,predmet,br_casova);\n\t\t\t\t\t\t\t\t\t\t\t\tint vr=dodan;\n\t\t\t\t\t\t\t\t\t\t\tif(vr==0)\n\t\t\t\t\t\t\t\t\t\t\tprintf(\"Nema dovoljno mjesta u rasporedu za %d casova.\\n\",br_casova);\n\t\t\t\t\t\t\t\t\t\t\tif(vr==1)  broj_casova++;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tbreak;}\n\t\t\t\t\t\t\t\t\t\t\tcase 4: if(broj!=0)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tint dan,redni;\n\t\t\t\t\t\t\t\t\t\t\t\tint br=broj_casova;\n\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\t\t\t\t\t\t\t\t\t\tscanf(\"%d\",&dan);\n\t\t\t\t\t\t\t\t\t\t\t\tispisi_dan(raspored,br,dan);\n\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"\\nIzaberite koji cas zelite obrisati: \");\n\t\t\t\t\t\t\t\t\t\t\t    scanf(\"%d\",&redni);\n\t\t\t\t\t\t\t\t\t\t\t    obrisi_cas(raspored,br,dan,redni);\n\t\t\t\t\t\t\t\t\t\t\t    printf(\" Cas obrisan\\n\");\n\t\t\t\t\t\t\t\t\t\t\t    broj_casova--;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase 3:  if(broj!=0){\n\t\t\t\t\t\t\t\t\t\t\t\tstruct Cas promjena;\n\t\t\t\t\t\t\t\t\t\t\t\tint dan,redni;\n\t\t\t\t\t\t\t\t\t\t\t\tchar *q,*p;\n\t\t\t\t\t\t\t\t\t\t\t\tchar znak,predmet[10];\n\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\t\t\t\t\t\t\t\t\t\tscanf(\"%d\",&dan);\n\t\t\t\t\t\t\t\t\t\t\t\tispisi_dan(raspored,broj_casova,dan);\n\t\t\t\t\t\t\t\t\t\t\t\tpromjena.dan_u_sedmici=dan;\n\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"\\nIzaberite koji cas zelite promijeniti: Naziv predmeta: \");\n\t\t\t\t\t\t\t\t\t\t\t\tscanf(\"%d\",&redni);\n\t\t\t\t\t\t\t\t\t\t\t\tocisti(unesi(predmet,10));\n\t\t\t\t\t\t\t\t\t\t\t\tq=promjena.predmet;\n\t\t\t\t\t\t\t\t\t\t\t\tp=predmet;\n\t\t\t\t\t\t\t\t\t\t\t\tstrcpy(q,p);\n\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"Vrijeme pocetka: Vrijeme zavrsetka: \");\n\t\t\t\t\t\t\t\t\t\t\t\tscanf(\"%d%c\",&promjena.pocetak.sati,&znak);\n\t\t\t\t\t\t\t\t\t\t\t\tscanf(\"%d\",&promjena.pocetak.minute);\n\t\t\t\t\t\t\t\t\t\t\t\tscanf(\"%d%c%d\",&promjena.kraj.sati,&znak,&promjena.kraj.minute);\n\t\t\t\t\t\t\t\t\t\t\t\tpromijeni_cas(raspored,broj_casova,dan,redni,promjena);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;}\n\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t} while(opcija!=0);\n\t\t\t\t\t\t\t\t\t    \n\t\t\t\t\t\t\t\t\t    \n\t\t\t\t\t\t\t\t\t    \treturn 0; \n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\n\t\n\n\n"
    },
    "135": {
        "label": "0",
        "student2417": "#include <stdio.h>\n\nint main() {\nint A1,A2,B1,B2;\nint i,j,brojac,k,z;\ndouble A[50][50],B[50][50];\n\tprintf(\"Unesite sirinu i visinu matrice A: \");\n\tscanf(\"%d%d\",&A1,&A2);\n\tprintf(\"Unesite clanove matrice A: \");\n\t\tfor(i=0;i<A1;i++){\n\t\t\tfor(j=0;j<A2;j++){\n\t\t\t\tscanf(\"%lf\",&A[i][j]);\n\t\t\t}\n\t\t}\n\t\tprintf(\"Unesite sirinu i visinu matrice B: \");\n\t\tscanf(\"%d%d\",&B1,&B2);\n\t\tprintf(\"Unesite clanove matrice B: \");\n\t\tfor(i=0;i<B1;i++){\n\t\t\tfor(j=0;j<B2;j++){\n\t\t\t\tscanf(\"%lf\",&B[i][j]);\n\t\t\t}\n\t\t}\n\t\tbrojac=0;\n\t\tk=B2-1;\n\t\tz=0;\n\t\tif ( A1 == B1 && A2==B2 && A1==A2) {\n\t\tk=B2-1;\n\t\tbrojac=0;\n\t\tfor(i=0;i<A1;i++){\n\t\t\tz=0;\n\t\t\tfor(j=0;j<A2;j++){\n\t\t\t\tif(A[i][j]!=B[z][k]) brojac++;\n\t\t\t\tz++;\n\t\t\t\tif(z>B1) { z=0; k--;}\n\t\t\t}\n\t\t\tk--;\n\t\t}\n\t\tif(brojac==0)printf(\"DA\\n\");\n\t\telse printf(\"NE\\n\");\n\t\t}\n\t\telse {\n\t\t\tif(B1<A1 && B1==1) {\n\t\t\tbrojac=0;\n\t\t\tk=A2-1;\n\t\tbrojac=0;\n\t\tfor(i=0;i<B1;i++){\n\t\t\tz=0;\n\t\t\tfor(j=0;j<B2;j++){\n\t\t\t\tif(A[z][k]!=B[i][j]) brojac++;\n\t\t\t\tz++;\n\t\t\t}\n\t\t\tk--;\n\t\t}\n\t\t\tif(brojac==0)printf(\"DA\\n\");\n\t\telse printf(\"NE\\n\");\n\t\t}\n\t\telse if(A1<B1 && A1==1) {\n\t\t\tbrojac=0;\n\t\tbrojac=0;\n\t\tz=0;\n\t\tfor(i=0;i<A1;i++){\n\t\t\tk=B1-1;\n\t\t\tfor(j=0;j<A2;j++){\n\t\t\t\tif(A[i][j]!=B[k][z]) brojac++;\n\t\t\t\tk--;\n\t\t\t}\n\t\t\tz++;\n\t\t}\n\t\t\tif(brojac==0)printf(\"DA\\n\");\n\t\telse printf(\"NE\\n\");\n\t\t\n\t\t}\n\t\t\t\telse if(A1<B1 && A1>1) {\n\t\t\tbrojac=0;\n\t\tbrojac=0;\n\t\tz=0;\n\t\tk=A2-1;\n\t\tfor(i=B2-1;i>0;i--){\n\t\n\t\t\tfor(j=0;j<B1;j++){\n\t\t\t\tif(B[j][i]!=A[z][k]) brojac++;\n\t\t\t\tz++;\n\t\t\t\tif(z>A1-1) { z=0; k--; }\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\tif(brojac==0)printf(\"DA\\n\");\n\t\telse printf(\"NE\\n\");\n\t\t\n\t\t}\n\t\t\t\telse if(A1==B1 || A2==B2) {\n\t\t\tbrojac=0;\n\t\tbrojac=0;\n\t\tz=0;\n\t\tk=A2-1;\n\t\tfor(i=B2-1;i>0;i--){\n\t\n\t\t\tfor(j=0;j<B1;j++){\n\t\t\t\tif(B[j][i]!=A[z][k]) brojac++;\n\t\t\t\tz++;\n\t\t\t\tif(z>A1-1) { z=0; k--; }\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\tif(brojac==0)printf(\"DA\\n\");\n\t\telse printf(\"NE\\n\");\n\t\t\n\t\t}\n\t\t}\n\t\n\treturn 0;\n}\n",
        "student9201": "#include <stdio.h>\n#include <math.h>\n#define EPSILON 0.0001\n\n\nint main() {\n\tint a, b, c, d;\n\tdouble A[100][100];\n\tdouble B[100][100];\n\tdouble C[100][100];\n\tint i,j,k,l;\n\tint brojac = 0;\n\t\n\tprintf(\"Unesite sirinu i visinu matrice A: \");\n\tscanf(\"%d %d\", &a, &b);\n\t\n\tprintf(\"Unesite clanove matrice A: \");\n\tfor (i = 0; i < b; i++)\n\t\t{\n\t\t\tfor (j = 0; j < a; j++)\n\t\t\t\tscanf(\"%lf\", &A[i][j]);\n\t\t\t\t\n\t\t}\n\t\n\t\n\tprintf(\"Unesite sirinu i visinu matrice B: \");\n\tscanf(\"%d %d\", &c, &d);\n\t\n\tprintf(\"Unesite clanove matrice B: \");\n\tfor (i = 0; i < d; i++)\n\t\t{\n\t\t\tfor (j = 0; j < c; j++)\n\t\t\t\tscanf(\"%lf\", &B[i][j]);\n\t\t\t\t\n\t\t}\n\t\t\n\tif (a != d || b != c)\n\t\t{\n\t\t\tprintf(\"NE\");\n\t\t\treturn 0;\n\t\t}\n\t\n\tk = c-1;\n\tfor (i = 0; i < b; i++)\n\t\t{\n\t\t\tl = 0;\n\t\t\tfor (j = 0; j < a; j++)\n\t\t\t\tC[l++][k] = A[i][j];\n\t\t\t\t\n\t\t\tk--;\n\t\t}\n\t\n\t\n\tfor (i = 0; i < d; i++)\n\t\t{\n\t\t\tfor (j = 0; j < c; j++)\n\t\t\t\t{\n\t\t\t\t\tif (fabs(C[i][j] - B[i][j]) < EPSILON)\n\t\t\t\t\t\tbrojac++;\n\t\t\t\t}\n\t\t}\n\t\t\n\tif (brojac == a*b)\n\t\tprintf(\"DA\");\n\telse\n\t\tprintf(\"NE\");\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\treturn 0;\n}\n"
    },
    "136": {
        "label": "1",
        "student2676": "#include <stdio.h>\n\nchar* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci)\n{\n\tchar *p=tekst, *q, *k;\n\tint ima, indeks, i, j, duz, duzz, rduz, ista, duzteksta=0, produz, putapomjereno=0;\n\t\n\twhile(*p!='\\0')\n\t{\n\t\tduzteksta++;\n\t\tp++;\n\t}\n\tp=tekst;\n\t\n\twhile(*p!='\\0')\n\t{\n\t\t// Trazenje rijeci koje treba mijenjati\n\t\t\n\t\tif((p==tekst || *(p-1)==' ') && *p!=' ')\n\t\t{\n\t\t\tima=0;\n\t\t\tfor(i=0;i<broj_rijeci;i++)\n\t\t\t{\n\t\t\t\tista=1;\n\t\t\t\tj=0;\n\t\t\t\trduz=0;\n\t\t\t\tq=p;\n\t\t\t\twhile(*q!='\\0' && *q!=' ' && rijeci[i][j]!='\\0')\n\t\t\t\t{\n\t\t\t\t\tif(*q!=rijeci[i][j]) ista=0;\n\t\t\t\t\tq++;\n\t\t\t\t\tj++;\n\t\t\t\t\trduz++;\n\t\t\t\t}\n\t\t\t\tif(rijeci[i][j]!='\\0' || (rijeci[i][j]=='\\0' && *q!='\\0' && *q!=' ')) ista=0;\n\t\t\t\tif(ista)\n\t\t\t\t{\n\t\t\t\t\tindeks=i;\n\t\t\t\t\tima=1;\n\t\t\t\t\tduz=rduz;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(ima)\n\t\t\t{\n\t\t\t\t// Mijenjanje rijeci sa rijeci sa odgovarajucim indeksom\n\t\t\t\tq=p;\n\t\t\t\tj=0;\n\t\t\t\tduzz=0;\n\t\t\t\twhile(zamjene[indeks][j]!='\\0')\n\t\t\t\t{\n\t\t\t\t\tduzz++;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif(duzz>=duz)\n\t\t\t\t{\n\t\t\t\t\t//Pomjeranje teksta ako je rijec koju mijenjamo kraca od one sa kojom je mijenjamo\n\t\t\t\t\t\n\t\t\t\t\tfor(i=duz;i<duzz;i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tk=tekst + duzteksta + 1 + putapomjereno;\n\t\t\t\t\t\tputapomjereno++;\n\t\t\t\t\t\twhile(k>q)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t*k=*(k-1);\n\t\t\t\t\t\t\tk--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//Pomjeranje teksta ako je rijec koju mijenjamo duza od one sa kojom je mijenjamo\n\t\t\t\t\t\n\t\t\t\t\tfor(i=duzz;i<duz;i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tk=q;\n\t\t\t\t\t\tputapomjereno--;\n\t\t\t\t\t\twhile(k<tekst+duzteksta)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t*k=*(k+1);\n\t\t\t\t\t\t\tk++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tduzteksta--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj=0;\n\t\t\t\t\n\t\t\t\t// Sama zamijena rijeci\n\t\t\t\t\n\t\t\t\twhile(zamjene[indeks][j]!='\\0')\n\t\t\t\t{\n\t\t\t\t\t*q=zamjene[indeks][j];\n\t\t\t\t\tq++;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tp++;\n\t}\n\n\treturn tekst;\n}\n\nint main() {\n\tchar* rijeci[2] = { \"bijeli\", \"snijeg\" };\n\tchar* zamjene[2] = { \"beli\", \"sneg\" };\n\tchar tekst[100] = \"bijeli snijeg je pokrio bijeli breg\";\n\tprintf(\"%s\", zamjena_rijeci(tekst, rijeci, zamjene, 2));\n\treturn 0;\n}\n",
        "student4495": "#include <stdio.h>\n\nchar* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci) {\n\tchar *p=tekst, *p2, *p3;\n\tint duzina=0, i, i2, j, postoji_rijec, jednake, rvel, vel, vel2, brpomjeranja=0;\n\t\n\twhile (*p!='\\0') {\n\t\tduzina++;\n\t\tp++;\n\t}\n\tp=tekst;\n\t\n\twhile (*p != '\\0') {\n\t\t //trazenje rijeci koju treba zamijeniti\n\t\tif(( p==tekst || *(p-1)==' ') && *p!=' ') {\n\t\t\tpostoji_rijec=0;\n\t\t\tfor( i = 0; i < broj_rijeci; i++) {\n\t\t\t\tjednake=1;\n\t\t\t\tj=0;\n\t\t\t\trvel=0;\n\t\t\t\tp2=p;\n\t\t\t\t\n\t\t\t\twhile (*p2 != '\\0' && *p2 !=' ' && rijeci[i][j]!= '\\0') {\n\t\t\t\t\tif( *p2!=rijeci[i][j]) jednake =0;\n\t\t\t\t\tp2++;\n\t\t\t\t\tj++;\n\t\t\t\t\trvel++;\n\t\t\t\t}\n\t\t\t\tif(rijeci[i][j] != '\\0' || (rijeci[i][j]=='\\0' && *p2 != '\\0' && *p2 != ' '))\n\t\t\t\t\tjednake=0;\n\t\t\t\t\t\n\t\t\t\tif(jednake) {\n\t\t\t\t\ti2=i;\n\t\t\t\t\tpostoji_rijec=1;\n\t\t\t\t\tvel=rvel;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\tif(postoji_rijec) {\n\t\t\t//zamjena rijeci koje imaju isti indeks\n\t\t\tp2=p;\n\t\t\tj=0;\n\t\t\tvel2=0;\n\t\t\twhile(zamjene[i2][j]!='\\0') {\n\t\t\t\tvel2++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\t//u slucaju da je rijec koju mjenjamo kraca od zamjenske pomjeramo tekst\n\t\t\tif(vel2>=vel) {\n\t\t\t\tfor(i=vel; i<vel2; i++){\n\t\t\t\t\tp3=tekst + duzina + 1 + brpomjeranja;\n\t\t\t\t\tbrpomjeranja++;\n\t\t\t\t\twhile (p3>p2) {\n\t\t\t\t\t\t*p3=*(p3-1);\n\t\t\t\t\t\tp3--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//u slucaju da je suprotna situacija\n\t\t\telse {\n\t\t\t\tfor( i=vel2; i<vel; i++) {\n\t\t\t\t\tp3=p2;\n\t\t\t\t\tbrpomjeranja--;\n\t\t\t\t\twhile(p3 < tekst+duzina) {\n\t\t\t\t\t\t*p3=*(p3+1);\n\t\t\t\t\t\tp3++;\n\t\t\t\t\t}\n\t\t\t\t\tduzina--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tj=0;\n\t\t\t\n\t\t\t//zamjena rijeci\n\t\t\twhile (zamjene[i2][j] != '\\0') {\n\t\t\t\t*p2=zamjene[i2][j];\n\t\t\t\tp2++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t}\n\t\tp++;\n\t\t\n\t}\n\treturn tekst;\n}\nint main() {\n\t\n\tchar* rijeci[2] = { \"beli\", \"sneg\"};\n\tchar* zamjene[2] = { \"bijeli\", \"snijeg\"};\n\tchar tekst[10000]= \"beli sneg je pokrio beli breg\";\n\t\n\tprintf(\"%s\", zamjena_rijeci(tekst, rijeci, zamjene, 2));\n\t\n\treturn 0;\n}\n"
    },
    "137": {
        "label": "0",
        "student4973": "#include <stdio.h>\n\nint jeSlovo(char karakter){\n\tif(karakter >= 'a' && karakter <= 'z' ) return 1;\n\tif(karakter >= 'A' && karakter <= 'Z' ) return 1;\n\treturn 0;\n}\nchar umaloSlovo(char karakter){\n\tif(karakter >= 'A' && karakter <= 'Z') return (karakter + ('a' - 'A'));\n\telse return karakter;\n}\nint isteRijeci(char* pocetakPrve, char* krajPrve, char* pocetakDruge, char* krajDruge){\n\tint iste = 1;\n\twhile(pocetakPrve != krajPrve && pocetakDruge != krajDruge){\n\t\tif(umaloSlovo(*pocetakPrve) != umaloSlovo(*pocetakDruge)){\n\t\t\tiste = 0;\n\t\t}\n\t\tpocetakPrve++;\n\t\tpocetakDruge++;\n\t}\n\tif(pocetakPrve != krajPrve || pocetakDruge != krajDruge)\n\t\tiste = 0;\n\treturn iste;\n}\nvoid izbaciRijec(char* pocetak, char* kraj){\n\twhile(*kraj != '\\0'){\n\t\t*pocetak = *kraj;\n\t\tpocetak++;\n\t\tkraj++;\n\t}\n\t*pocetak = '\\0';\n}\n\nchar* izbaci_najcescu(char* s){\n\t\n\tint redniBrojRijeci = 1, redniBrojNajcesce = -1, brojPonavljanja = -1, ponavljanjeNajcesce = -1;\n\tchar* pok = s, *najcescaPocetak = '\\0', *najcescaKraj = '\\0';\n\tchar* pocetakRijeci, *krajRijeci, *noviPocetak;\n\tif(*pok == '\\0') return s;\n\twhile(*pok != '\\0'){\n\t\twhile(*pok != '\\0' && !jeSlovo(*pok)){\n\t\t\tpok++;\t\n\t\t}\n\t\tpocetakRijeci = pok;\n\t\twhile(*pok != '\\0' && jeSlovo(*pok)){\n\t\t\t//printf(\"%c\",*pok);\n\t\t\tpok++;\n\t\t}\n\t\tkrajRijeci = pok;\n\t\t\n\t\tbrojPonavljanja = 0;\n\t\tnoviPocetak = pok;\n\t\twhile( *noviPocetak != '\\0' ){\n\t\t\twhile(*noviPocetak != '\\0' && !jeSlovo(*noviPocetak)){\n\t\t\t\tnoviPocetak++;\n\t\t\t}\n\t\t\t \n\t\t\tchar* drugiPocetak = noviPocetak;\n\t\t\twhile(*noviPocetak != '\\0' && jeSlovo(*noviPocetak)){\n\t\t\t\t//printf(\"%c\",*noviPocetak);\n\t\t\t\tnoviPocetak++;\n\t\t\t}\n\t\t\tchar* drugiKraj = noviPocetak;\n\t\t\t\n\t\t\tif(isteRijeci(pocetakRijeci, krajRijeci, drugiPocetak, drugiKraj)){\n\t\t\t\tbrojPonavljanja++;\t\t\n\t\t\t}\n\t\t}\n\t\tif(brojPonavljanja > ponavljanjeNajcesce){\n\t\t\tponavljanjeNajcesce = brojPonavljanja;\n\t\t\tredniBrojNajcesce = redniBrojRijeci;\n\t\t\tnajcescaPocetak = pocetakRijeci;\n\t\t\tnajcescaKraj = krajRijeci;\n\t\t\t\n\t\t}\n\t\tredniBrojRijeci++;\n\t}\n\tpok--;\n\twhile(pok+1 != najcescaKraj){\n\t\t\n\t\twhile(!jeSlovo(*pok)){\n\t\t\tpok--;\n\t\t}\n\t\tif(pok+1 == najcescaKraj) break;\n\t\tchar* drugiKraj = pok;\n\t\twhile(jeSlovo(*pok)){\n\t\t\tpok--;\n\t\t}\n\t\tif(isteRijeci(najcescaPocetak,najcescaKraj,pok+1,drugiKraj+1)){\n\t\t\tizbaciRijec(pok+1,drugiKraj+1);\n\t\t}\n\t\t\n\t\t\n\t}\n\tizbaciRijec(najcescaPocetak,najcescaKraj);\n\t\n\t\n\treturn s;\n}\nint main() {\n\tprintf(\"Zada\u0107a 4, Zadatak 1\");\n\tchar recenica[100] = \"jedna dva         tri       dva      tri jedan tri\";\n\tprintf(\"%s\",izbaci_najcescu(recenica));\n\treturn 0;\n}\n",
        "student9538": "#include<stdio.h>\n#include<ctype.h>\n\nint Strlen(char*s){\n    int duzina=0;\n    while(*s!='\\0') {\n        duzina++;\n        s++;\n    }\n    return duzina;\n}\nint my_strcmp(char* s1,char* s2) {\n    while(*s1==*s2 && *s1!='\\0' && *s2!=' ') {\n        s1++;s2++;}\n        if(*s1=='\\0' || *s1==' ')\n        return 1; else return 0; }\n        void my_strcpy(char*s1,char*s2) {\n            while(*s2!='\\0') *s1++=*s2++;\n        }\n        int poredi2(char*s1,char*s2,char*p1,char*p2) {\n            while(s1!=s2 && p1!=p2) {\n                if(!(*s1==*p1 || *s1==(*p1+32) || *s1==(*p1-32))) return 0;\n                s1++; p1++; }\n                if (p1==p2 && s1==s2) return 1;\n                return 0;}\n            void izbaci(char*s,char*rijec) {\n                    int neslovo=1;\n                    char*poc=rijec;\n                    char*kraj=rijec+Strlen(rijec);\n                while(*s!='\\0') {\n                    if(!((*s>='A' && *s<='Z')||(*s>='a' && *s<='z')))\n                neslovo=1;\n                else if(neslovo==1) {\n                    neslovo=0;\n                    char *p1=s;\n                    while((*p1>='A'&& *p1<='Z') || (*p1>='a' && *p1<='z')) p1++;\n                    if(poredi2(poc,kraj,s,p1)==1) {\n                        char*s1=s;\n                        while(*p1!='\\0') {\n                            *s1=*p1;\n                            s1++;\n                            p1++;\n                        } *s1='\\0';\n                        neslovo=1;\n                    }}\n                    s++; }}\n             char*izbaci_najcescu(char*str) {\n                 \n                        char rijeci[1000][1000]={0};\n                        int brojac[1000]={0};\n                        int rijec_cnt=0,i;\n                        char*s=str;\n                        int len=Strlen(str);\n\n                        char rijec[1000];\n                        int clen;\n                        for(i=0;i<len;i++){\n                            clen=0;\n                            while(isalpha(str[i]) && i<len) {\n                                rijec[clen]=str[i];\n                                i++;\n                                clen++;\n                            }\n                            if (clen>0) {\n                            rijec[clen]='\\0';\n                            int naso_rijec=0;\n                            int j;\n                            for(j=0;j<rijec_cnt;j++) {\n                                if(my_strcmp(rijeci[j],rijec)==1) {\n                                    naso_rijec=1;\n                                    brojac[j]++;break;\n                                }\n                            }\n                            if (naso_rijec==0) {\n                                my_strcpy(rijeci[rijec_cnt],rijec);\n                                brojac[rijec_cnt]=1;\n                                rijec_cnt++;\n                            }\n                            }\n                        }\n                       // for(i=0;i<rijec_cnt;i++)\n                       // printf(\"%d %s\\n\",brojac[i],rijec[i]);\n                        int max=0;int index=0;\n                        for(i=0;i<rijec_cnt;i++) {\n                            if (brojac[i]>max) {\n                                max=brojac[i];\n                                index=i;\n                            }}\n                            \n                            char*pocetak_najcesce=rijeci[index];\n                            izbaci(s,pocetak_najcesce);\n                            return s;\n                            }\n                    int main() {\n    char s[100]=\"koja rijec je najcesca je je\";\n    printf(\"%s\",izbaci_najcescu(s));\n    return 0;\n}"
    },
    "138": {
        "label": "1",
        "student6956": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#define vel 100\nvoid unesi(char niz[], int velicina){\n\tchar znak=getchar();\n\tif(znak=='\\n') znak=getchar();\n\tint i=0;\n\twhile(i<velicina && znak!='\\n'){\n\t\tniz[i]=znak;\n\t\ti++;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n}\nvoid swap(char*p, char*q){\n\tchar temp[vel];\n\tstrcpy(temp,p);\n\tstrcpy(p,q);\n\tstrcpy(q,temp);\n}\nint slovo(int a){\n\tif(a>='A' && a<='Z' || a<='z' && a>='a')\n\treturn 1;\n\t\n\treturn 0;\n}\nvoid kompresuj(char* naziv, char*naziv1){\n\tchar rijeci[1000][1000]={0};\n\tint duzina;\n\tchar znak;\n\tint i, broj_rijeci=0;\n\tint brojac[1000]={0};\n\tFILE* ulaz;\n\tFILE* ulaz1;\n\tFILE* izlaz;\n\tchar rijec[1000];\n\tulaz=fopen(naziv,\"r\");\n\tif(ulaz==NULL){\n\t\tprintf(\"Greska\\n\");\n\t\texit(1);\n\t}\n\tulaz1=fopen(naziv, \"r\");\n\tif(ulaz1==NULL){\n\t\tprintf(\"Greska\\n\");\n\t\tfclose(ulaz);\n\t\texit(1);\n\t}\n\tizlaz=fopen(naziv1,\"w\");\n\tif(izlaz==NULL){\n\t\tprintf(\"Greska\\n\");\n\t\tfclose(ulaz);\n\t\tfclose(ulaz1);\n\t\texit(1);\n\t}\n\tznak=fgetc(ulaz);\n\twhile(znak!=EOF){\n\t\tduzina=0;\n\t\twhile(slovo(znak)==1){\n\t\t\trijec[duzina]=znak;\n\t\t\t\tznak=fgetc(ulaz);\n\t\t\t\tduzina++;\n\t\t}\n\t\t\n\t\trijec[duzina] = '\\0';\n\t\t\n\t\tif(duzina!=0 && duzina<=9){\n\t\t\tint j, ima;\n\t\t\tima=0;\n\t\t\t\n\t\t\tfor(j=0; j<broj_rijeci; j++){\n\t\t\t\tif(strcmp(rijeci[j], rijec)==0){\n\t\t\t\t\tima=1;\n\t\t\t\t\tbrojac[j]++;\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(ima!=1){\n\t\t\t\tstrcpy(rijeci[broj_rijeci], rijec);\n\t\t\t\t\n\t\t\t\tbrojac[broj_rijeci++] = 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tznak=fgetc(ulaz);\n\t\t\n\t\t\n\t}\n\t\n\tint k;\n\t\n\tfor(i=0; i<broj_rijeci; i++){\n\t\tfor(k=i+1; k<broj_rijeci; k++){\n\t\t\tif((strcmp(rijeci[i], rijeci[k])==1 && brojac[k]==brojac[i]) || brojac[i]<brojac[k]){\n\t\t\t\tint temp;\n\t\t\t\ttemp=brojac[k];\n\t\t\t\tbrojac[k]=brojac[i];\n\t\t\t\tbrojac[i]=temp;\n\t\t\t\tswap(rijeci[i], rijeci[k]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tchar novi_red; int kraj;\n\tkraj=10;\n\tnovi_red='\\n';\n\t\n\tif(broj_rijeci<10) kraj=broj_rijeci;\n\tfor(i=0; i<kraj; i++){\n\t\tfputs(rijeci[i],izlaz);\n\t\tfputc(novi_red, izlaz);\n\t}\n\t\n\tchar c;\n\tc=fgetc(ulaz1);\n\t\n\twhile(c!=EOF){\n\t\tduzina=0;\n\t\twhile(slovo(c)==1){\n\t\t\trijec[duzina]=c;\n\t\t\tduzina++;\n\t\t\tc=fgetc(ulaz1);\n\t\t}\n\t\trijec[duzina] = '\\0';\n\t\t\n\t\tint kont;\n\t\tkont=0;\n\t\tint j;\n\t\tif(duzina!=0 && duzina<10){\n\t\t\tfor(j=0;j<kraj;j++){\n\t\t\t\tif(strcmp(rijeci[j], rijec)==0){\n\t\t\t\t\tchar z;\n\t\t\t\t\tkont=1;\n\t\t\t\t\tz=j+20;\n\t\t\t\t\tfputc(z,izlaz);\n\t\t\t\t\tfputc(c, izlaz);\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tif(kont==0){\n\t\t\tchar*r=rijec;\n\t\t\t\n\t\t\twhile(*r !='\\0'){\n\t\t\t\tfputc(*r,izlaz);\n\t\t\t\tr++;\n\t\t\t}\n\t\t\tfputc(c,izlaz);\n\t\t}\n\t\t\n\t\tc=fgetc(ulaz1);\n\t}\n\t\n\t\n\tprintf(\"Datoteka kompresovana.\\n\");\n\t\n\tfclose(izlaz);\n\tfclose(ulaz);\n\tfclose(ulaz1);\n}\n\nvoid dekompresuj(char*naziv, char* naziv1){\n\tint broj_rijeci=0, brojac_krajeva=0, kontr=0;\n\tint duzina =0;\n\tchar rijeci[1000][1000]={0};\n\tchar rijec[1000];\n\tFILE* ulaz;\n\tFILE* ulaz1;\n\tFILE* izlaz;\n\t\n\tulaz=fopen(naziv,\"r\");\n\t\n\t\n\tulaz1=fopen(naziv, \"r\"); \n\n\t\n\tizlaz=fopen(naziv1, \"w\");\n\n\tint n=0;\n\tchar znak;\n\tznak=fgetc(ulaz);\n\tint j;\n\t\n\twhile(znak!=EOF){\n\t\tduzina=0;\n\t\tkontr=0;\n\t\twhile(slovo(znak)==1){\n\t\t\trijec[duzina++]=znak;\n\t\t\tznak=fgetc(ulaz);\n\t\t}\n\t\t\n\t\trijec[duzina] = '\\0';\n\t\t\n\t\tif(duzina!=0 && duzina<=9){\n\t\t\tstrcpy(rijeci[broj_rijeci], rijec);\n\t\tfor(j=0; j<broj_rijeci; j++){\n\t\t\tif(strcmp(rijeci[j], rijec)==0){\n\t\t\t\tkontr=1;\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(kontr==1) break;\n\t\t\n\t\tbroj_rijeci++;\n\t\t}\n\t\t\n\t\tznak=fgetc(ulaz);\n\t}\n\tbrojac_krajeva=0;\n\tchar c=fgetc(ulaz1);\n\t\n\twhile(c!=EOF){\n\t\n\t\tif(c=='\\n') \n\t\tbrojac_krajeva++;\n\t\tif(broj_rijeci==brojac_krajeva) break;\n\t\tc=fgetc(ulaz1);\n\t}\n\t\n\tc=fgetc(ulaz1);\n\t\n\twhile(c!=EOF){\n\t\tn=0;\n\t\tif(c<31 && c>19){\n\t\t\tn=1;\n\t\t\tchar*p=rijeci[c-20];\n\t\t\t\n\t\t\t\n\t\t\twhile(*p != '\\0'){\n\t\t\t\tfputc(*p, izlaz);\n\t\t\t\tp++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(n==0)\n\t\tfputc(c,izlaz);\n\t\t\n\t\tc=fgetc(ulaz1);\n\t}\n\t\n\tprintf(\"Datoteka dekompresovana.\\n\");\n\t\n\tfclose(ulaz);\n\tfclose(ulaz1);\n\tfclose(izlaz);\n\t\n}\n\n\nint main() {\n\tchar p[vel];\n\tchar s[vel];\n\tint opcija;\n\t\n\tdo{\n\t\tprintf(\"Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: \");\n\t\tscanf(\"%d\", &opcija);\n\t\t\n\t\tswitch(opcija){\n\t\t\tcase 1:\n\t\t\tprintf(\"Unesite ime ulazne datoteke: \");\n\t\t\tunesi(s,40);\n\t\t\tprintf(\"Unesite ime izlazne datoteke: \");\n\t\t\tunesi(p,40);\n\t\t\tkompresuj(s,p);\n\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\tprintf(\"Unesite ime ulazne datoteke: \");\n\t\t\tunesi(s,40);\n\t\t\tprintf(\"Unesite ime izlazne datoteke: \");\n\t\t\tunesi(p,40);\n\t\t\tdekompresuj(s,p);\n\t\t\t\n\t\t} \n\t} while(opcija!=0);\n\t\n\treturn 0;\n}\n",
        "student9823": "#include <stdio.h>\n#include <ctype.h>\n#include <string.h>\n\nvoid unesi(char niz[], int velicina)\n{\n    // obicna funkcija za unos, standard\n\tchar znak = getchar();\n\tif (znak == '\\n') znak=getchar();\n\tint i = 0;\n\twhile (i < velicina-1 && znak != '\\n') {\n\t\tniz[i] = znak;\n\t\ti++;\n\t\tznak = getchar();\n\t}\n\tniz[i]='\\0';\n}\n\nint isSlovo(int c){\n    if((c>='A' && c<='Z') || (c>='a' && c<='z')) return 1;\n    return 0;\n}\n\nvoid zamjena(char *s1, char *s2){\n    char temp[1000];\n    strcpy(temp, s1);\n    strcpy(s1, s2);\n    strcpy(s2, temp);\n}\n\n\nvoid kompresuj(char *ulazna, char *izlazna){\n    // funkcija iz datotke u matricu upisuje rijeci po broju ponavljanja\n    // onda opet prolazimo kroz datoteku i zamjenjujemo rijeci sa znacima ascii-a\n\n    char rijeci[1000][1000] = {0}; // niz od 1k rijeci po 1k karaktera\n    int brojac[1000] = {0}; // brojac za svaku rijec\n    int i, broj_rijeci = 0;\n    char rijec[1000]; // trenutna rijec koju cemo ucitati\n    int velicina;\n    \n    FILE *ulaz = fopen(ulazna, \"r\");  // otvaramo datoteku 2 puta\n    FILE *ulazP = fopen(ulazna, \"r\");\n    FILE *izlaz = fopen(izlazna, \"w\");\n    \n    char znak = fgetc(ulaz);\n    while(znak !=EOF){\n        velicina=0;\n        while(isSlovo(znak)){ // ukoliko naletimo na rijec kupimo je\n            rijec[velicina] = znak;\n            znak = fgetc(ulaz);\n            \n            if(velicina>10){ \n                while(znak!=' ') znak=fgetc(ulaz);\n                velicina=0; \n                break; \n                \n            }\n            \n            velicina++;\n        }\n        rijec[velicina]='\\0'; // terminiramo\n        \n        if(velicina<10 && velicina!=0){ \n            int postoji =0;\n            int k;\n            for(k=0;k<broj_rijeci; k++){\n                if(strcmp(rijeci[k], rijec) == 0){ // prolazimo kroz matricu\n                    postoji = 1;                   // ako ima tu rijec samo povecamo broj\n                    brojac[k]++; \n                    break;\n                }\n            }\n            \n            if(postoji!=1){ // ako nema rijeci dodajemo i brojac stavljamo na 1\n                strcpy(rijeci[broj_rijeci], rijec);\n                brojac[broj_rijeci++] = 1;\n            }\n        }\n        znak = fgetc(ulaz);\n    }\n    \n    // sad imamo niz rijeci i niz brojaca\n    int j;\n    for(i=0;i<broj_rijeci;i++){ // sotriramo nase rijeci po broju ponavljanja i leksikografski\n        for(j=i+1;j<broj_rijeci;j++){\n            if(brojac[j]>brojac[i] || (brojac[j]== brojac[i] && strcmp(rijeci[i], rijeci[j])>0)){\n                int temp=brojac[j];    \n                brojac[j]=brojac[i];\n                brojac[i]=temp;\n                zamjena(rijeci[i],rijeci[j]);\n            }\n        }\n    }\n    \n    int kraj=10;\n    char pomoc='\\n';\n    if(broj_rijeci<10) kraj=broj_rijeci; // treba nam tacan broj rijeci\n    for(i=0;i<kraj;i++){ // unosimo nase rijeci u datoteku\n        fputs(rijeci[i], izlaz);\n        fputc(pomoc, izlaz);\n    }\n    \n    \n    char c = fgetc(ulazP); // drugi put sto smo je otvorili\n    while(c!=EOF){\n        velicina=0;\n        while(isSlovo(c)){ // rijec po rijec\n            rijec[velicina] = c;\n            c = fgetc(ulazP);\n            velicina++;\n        }\n        rijec[velicina]='\\0';\n        \n        \n        int pomocna=0;\n        if(velicina<10 && velicina!=0){\n            for(j=0;j<kraj;j++){ // ako se nalazi u nizu rijec, mjenjamo je sa znakom u zadatku zadanim\n            if(strcmp(rijeci[j],rijec) == 0){\n                char znakic = j+20;\n                pomocna=1;\n                fputc(znakic, izlaz);\n                fputc(c, izlaz);\n                break;\n            }\n                \n            }\n        }   \n            if(pomocna==0){\n                // ako je nema u nizu samo prekopiramo\n                char *a = rijec;\n                while(*a!='\\0'){\n                    fputc(*a, izlaz);\n                    a++;\n                }\n                fputc(c, izlaz);\n            }\n            \n            \n            c = getc(ulazP);\n        \n    }\n    printf(\"Datoteka kompresovana.\\n\");\n    fclose(ulaz);\n    fclose(ulazP);\n    fclose(izlaz);\n}\n\n\nvoid dekompresuj(char *ulazna, char *izlazna){\n    // funkcija prvo uzme rijeci koje su na pocetku datoteke \n    // stavi ih u niz, i onda tek prolazi kroz datoteku i znakove mjenja sa rijecima\n\n    char rijeci[1000][1000] = {0}; // niz od 1k rijeci po 1k karaktera\n    int  broj_rijeci = 0, brojacZSK = 0;\n    char pomocna[1000]; // pomocna rijec koju cemo iskoristiti \n    int velicina=0;\n    \n    int pomocnaZapamtit=0;\n    \n    FILE *ulaz = fopen(ulazna, \"r\");  // otvaramo datoteku 2 puta\n    FILE *ulazP = fopen(ulazna, \"r\");\n    FILE *izlaz = fopen(izlazna, \"w\");\n    \n    char c = fgetc(ulaz);\n    while(c != EOF){\n        velicina=0;\n        pomocnaZapamtit=0;\n        \n        while(isSlovo(c)){\n            pomocna[velicina]=c;\n            c=fgetc(ulaz);\n            \n            if(velicina>10){ \n                while(c!=' ') c=fgetc(ulaz);\n                velicina=0; \n                break; \n                \n            }\n            \n            velicina++;\n        }\n        pomocna[velicina]='\\0';\n        \n        if(velicina<10 && velicina!=0){\n            strcpy(rijeci[broj_rijeci], pomocna);\n            int i;\n            for(i=0;i<broj_rijeci;i++){ // gledamo ima li nase rijeci\n                if(strcmp(rijeci[i], pomocna)==0)\n                {\n                    pomocnaZapamtit=1;\n                    break;\n                }\n            }\n                if(pomocnaZapamtit==1) break;\n                broj_rijeci++;\n            \n            \n        }\n        c = fgetc(ulaz);\n    }\n    \n    brojacZSK=0; // brojimo koliko ima rijeci prije dekompresije\n    char znak= fgetc(ulazP);\n    while(znak!=EOF){\n        if(znak=='\\n') brojacZSK++;\n        if(brojacZSK == broj_rijeci) break; // kad dodje do zadnje rijeci prekidamo brojanje\n        znak = fgetc(ulazP);\n    }\n    znak = fgetc(ulazP);\n    while(znak!=EOF){ // kupimo rijeci i dalje\n        int pomozi=0;\n        if(znak>=20 && znak<=30){ // ascii od 20 do 30 mjenjamo\n            char *pointer = rijeci[znak-20];\n            pomozi=1;\n        \n        while(*pointer!='\\0'){ // ubacujemo rijec u datoteku\n            fputc(*pointer, izlaz);\n            pointer++;\n        }\n        }\n        if(pomozi==0) fputc(znak, izlaz); // ako nije znak isto kao gore prepisujemo samo\n        znak = fgetc(ulazP);\n        \n    }\n    printf(\"Datoteka dekompresovana.\\n\");\n    \n    fclose(ulaz);\n    \n    \n    fclose(ulazP);\n    \n    \n    fclose(izlaz);\n\n}\n\n\n\n\nint main(){\n\n    int opcija;\n    char string1[100], string2[100];\n    do{\n        printf(\"Odaberite: 1 - kompresuj, 2 - dekompresuj, 0 - izlaz: \");\n        scanf(\"%d\", &opcija);\n        switch(opcija){\n            case 1: // unosimo ime ulazne i izlazne i ide kompresija\n            printf(\"Unesite ime ulazne datoteke: \");\n            unesi(string1, 40);\n            printf(\"Unesite ime izlazne datoteke: \");\n            unesi(string2, 40);\n            \n            kompresuj(string1, string2);\n            break;\n            \n            case 2: // unosimo ime ulazne i izlazne i ide dekompresija\n            printf(\"Unesite ime ulazne datoteke: \");\n            unesi(string1, 40);\n            printf(\"Unesite ime izlazne datoteke: \");\n            unesi(string2, 40);\n            dekompresuj(string1, string2);\n            break;\n        }\n    }while(opcija!=0); \n    return 0;\n}"
    },
    "139": {
        "label": "0",
        "student4370": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n\nint provjeri(const char* tekst);\nint razdvoji(char* tekst, char** tokeni);\nvoid ukloni_el(char** tokeni, int poz, int vel);\n\nint main() {\n\tprintf (\"Provjera  6: %d\\n\", provjeri(\"< p> razmak prije p </p>\"));\n\t\n\treturn 0;\n}\n\nint provjeri(const char* tekst) {\n\tint i;\n\tint broj_tokena, poz_trenutnog = -1;\n\tchar* tokeni[100];\n\tchar var_tekst[1000] = \"\";\n\tstrcpy(var_tekst, tekst);\n\t\n\tbroj_tokena = razdvoji(var_tekst, tokeni);\n\t\n\tif (broj_tokena == 0)\n\t\treturn 1;\n\t\n\tif (broj_tokena % 2 == 1)\n\t\treturn 0;\n\t\t\n\tfor (i = 0; i < broj_tokena; i++) {\n\t\tif (tokeni[i][0] != '/')\n\t\t\tpoz_trenutnog = i;\n\t\telse {\n\t\t\tif (strcmp(tokeni[poz_trenutnog], tokeni[i] + 1) == 0) {\n\t\t\t\tukloni_el(tokeni, i, broj_tokena);\n\t\t\t\tbroj_tokena -= 1;\n\t\t\t\tukloni_el(tokeni, poz_trenutnog, broj_tokena);\n\t\t\t\tbroj_tokena -= 1;\n\t\t\t\ti = -1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn (broj_tokena == 0);\n}\n\nint razdvoji(char* tekst, char** tokeni) {\n\tchar* token;\n\tint i = 0, j;\n\t\n\tfor (j = 0; tekst[j] != '\\0'; j++)\n\t\ttekst[j] = tolower(tekst[j]);\n\t\n\tif (strchr(tekst, '<') == NULL)\n\t\treturn 0;\n\t\t\n\twhile (isspace(*tekst))\n\t\ttekst += 1;\n\t\n\ttoken = strtok(tekst, \"<\");\n\t\n\tif (!isalpha(token[0]))\n\t\treturn 1;\n\t\n\ttokeni[i] = token;\n\ti += 1;\n\t\n\twhile (token != NULL) {\n    \ttoken = strtok(NULL, \"<\");\n    \ttokeni[i] = token;\n    \ti += 1;\n\t}\n\t\n\tfor (j = 0; j < i - 1; j++)\n\t\ttokeni[j] = strtok(tokeni[j], \"> \");\n\t\n\treturn i - 1;\n}\n\nvoid ukloni_el(char** tokeni, int poz, int vel) {\n\tint i;\n\t\n\tfor (i = poz; i < vel - 1; i++)\n\t\ttokeni[i] = tokeni[i + 1];\n}\n",
        "student4420": "#include <stdio.h>\n\nchar veliko(char c)\n{\n\tif(c >= 'a' && c <= 'z')\n\t\treturn c-('a'-'A');\n\treturn c;\n}\nint provjeri(char *s)\n{\n\tchar matrica[20][20];\n\tint brojac = 0;\n\tchar *upisivac=matrica[0];\n\twhile(*s != '\\0' && *s != '<') s++;\n\tif(*s == '\\0') return 1;\n\twhile(*s != '\\0')\n\t{\n\t\twhile(*s != '\\0' && *s != '<') s++;\n\t\tif(*s == '\\0') break;\n\t\ts++;\n\t\tupisivac = matrica[brojac];\n\t\tif(*s == '/')\n\t\t{\n\t\t\ts++;\n\t\t\tif(!(*s >= 'A' && *s <= 'Z' || *s >= 'a' && *s <= 'z' || *s >= '0' && *s <= '9') || *s == '/') return 0;\n\t\t\tif(brojac-1 < 0) return 0;\n\t\t\tupisivac = matrica[brojac-1];\n\t\t\twhile(*upisivac != '\\0' && *s != '\\0' && veliko(*upisivac) == veliko(*s))\n\t\t\t{\n\t\t\t\tupisivac++;\n\t\t\t\ts++;\n\t\t\t}\n\t\t\tif(*upisivac != '\\0') return 0;\n\t\t\tbrojac--;\n\t\t\twhile(*s != '\\0' && *s != '>')\n\t\t\t{\n\t\t\t\tif(*s == '<') return 0;\n\t\t\t\ts++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(!(*s >= 'A' && *s <= 'Z' || *s >= 'a' && *s <= 'z' || *s >= '0' && *s <= '9') || *s == '/') return 0;\n\t\t\twhile(*s >= 'A' && *s <= 'Z' || *s >= 'a' && *s <= 'z' || *s >= '0' && *s <= '9')\n\t\t\t{\n\t\t\t\t*upisivac = *s;\n\t\t\t\tupisivac++;\n\t\t\t\ts++;\n\t\t\t}\n\t\t\t*upisivac = '\\0';\n\t\t\tbrojac++;\n\t\t}\n\t\t\n\t\tif(*s == '\\0') return 0;\n\t\ts++;\n\t}\n\tif(brojac != 0) return 0;\n\treturn 1;\n}\nint main() {\n\tprintf(\"Zada\u0107a 4, Zadatak 4\");\n\treturn 0;\n}\n"
    },
    "140": {
        "label": "1",
        "student4772": "#include <stdio.h>\n#include <math.h>\n\nint max (int matrica [100][100], int visina, int sirina) {\n\tint i=0, j, k, najvisePuta=1, pomocniNiz[10000], maxi=-1, brojPonavljanja=1;\n\t\n\t/*u pomocni niz stavljamo sve clanove matrice*/\n\twhile (i<sirina*visina) {\n\t\tfor (j=0; j<visina; j++) {\n\t\t\tfor (k=0; k<sirina; k++) {\n\t\t\t\tpomocniNiz[i]=matrica[j][k];\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (i=0; i<sirina*visina; i++) {\n\t\tbrojPonavljanja=1;\n\t\tfor (j=i; j<sirina*visina; j++) {\n\t\t\tif (pomocniNiz[i]==pomocniNiz[j]) {\n\t\t\t\tbrojPonavljanja++;\n\t\t\t}\n\t\t}\n\t\tif (brojPonavljanja>maxi) {\n\t\t\tmaxi=brojPonavljanja;\n\t\t\tnajvisePuta=pomocniNiz[i];\n\t\t}\n\t\tif (brojPonavljanja==maxi) {\n\t\t\tif (pomocniNiz[i]<najvisePuta) {\n\t\t\t\tnajvisePuta=pomocniNiz[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn najvisePuta;\n\t\n}\n\nint izbaci_kolone (int matrica [100][100], int visina, int sirina, int N) {\n\tint i, j, k, l, pomocna=0;\n\n\tfor (j=0; j<sirina; j++) {\n\t\tpomocna=0;\n\t\tfor (i=0; i<visina; i++) {\n\t\t\tif (matrica[i][j]==N) {\n\t\t\t\tfor (k=j; k<sirina-1; k++) {\n\t\t\t\t\tfor (l=0; l<visina; l++) {\n\t\t\t\t\t\tmatrica[l][k]=matrica[l][k+1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpomocna=1;\n\t\t\t}\n\t\t\tif (pomocna==1) {\n\t\t\t\tj--;\n\t\t\t\tsirina--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t\n\treturn sirina;\n}\n\n\nint main() {\n\tint matrica [100][100], visina, sirina, i, j, z, m, broj=1;\n\t\n\tprintf (\"Unesite sirinu i visinu matrice: \");\n\tscanf (\"%d %d\", &sirina, &visina);\n\t\n\tm=sirina;\n\t\n\tfor (i=0; i<visina; i++) {\n\t\tprintf (\"Unesite elemente %d. reda: \", i+1);\n\t\tfor (j=0; j<sirina; j++) {\n\t\t\tscanf (\"%d\", &matrica [i][j]);\n\t\t}\n\t}\n\t\n\twhile (m>0) {\n\t\tz=max(matrica, visina, m);\n\t\tm=izbaci_kolone(matrica, visina, m, z);\n\t\t\n\t\tif (m==0) {\n\t\t\tprintf (\"\\nNakon %d. prolaza matrica je prazna!\", broj);\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tprintf (\"\\nNakon %d. prolaza matrica glasi:\\n\", broj);\n\t\tfor (i=0; i<visina; i++) {\n\t\t\tfor (j=0; j<m; j++) {\n\t\t\t\tprintf (\"%5d\", matrica[i][j]);\n\t\t\t}\n\t\t\tprintf (\"\\n\");\n\t\t}\n\t\tbroj++;\n\t}\n\t\n\treturn 0;\n}\n",
        "student6813": "#include <stdio.h>\n#include<math.h>\nint max (int matrica[100][100], int visina, int sirina)\n{\n\n    int i=0, j, k, niz_p[10000],br_ponavljanja=1,max=-1,maxclan=1;\n\n    while(i<sirina*visina) {\n        for(j=0; j<visina; j++) {\n            for(k=0; k<sirina; k++) {\n                niz_p[i]=matrica[j][k];\n                i++;\n            }\n        }\n    }\n    for(i=0; i<visina*sirina; i++) {\n        br_ponavljanja=1;\n        for(j=i; j<visina*sirina; j++) {\n            if(niz_p[i]==niz_p[j]) {\n                br_ponavljanja++;\n            }\n        }\n        if(br_ponavljanja>max) {\n            max=br_ponavljanja;\n            maxclan=niz_p[i];\n        }\n        if(br_ponavljanja==max) {\n            if(niz_p[i]<maxclan) {\n                niz_p[i]=maxclan;\n            }\n        }\n    }\n\n    return maxclan;\n}\nint izbaci_kolone(int matrica[100][100],int visina, int sirina, int N)\n{\n    int i, j, k, l;\n    for(i = 0; i<visina; i++) {\n        for(j = 0; j<sirina; j++) {\n            if(matrica[i][j] == N) {\n                for(k =0; k<visina; k++) {\n                    for(l = k; l<sirina-1; l++) {\n                        matrica[k][l] = matrica[k][l+1];\n                    }\n                }\n                sirina--;\n                j--;\n                i=0;\n            }\n\n        }\n\n    }\n\n    return sirina;\n}\n\nint main()\n{\n    int matrica[100][100];\n    int visina,sirina;\n    int i,j;\n    int broj,sirina_1,k;\n    printf(\"Unesite sirinu i visinu matrice: \");\n    scanf(\"%d %d\", &sirina,&visina);\n    for(i=0; i<visina; i++) {\n        printf(\"Unesite elemente %d. reda: \",i+1);\n        for(j=0; j<sirina; j++) {\n            scanf(\"%d\",&matrica[i][j]);\n        }\n    }\n    for(k=0; k<visina; k++) {\n        broj = max(matrica, visina, sirina);\n        sirina_1 =izbaci_kolone(matrica,visina, sirina, broj);\n        if(sirina_1==0) break;\n        printf(\"\\nNakon %d. prolaza matrica glasi: \\n\",k+1);\n        for(i=0; i<visina; i++) {\n            for(j=0; j<sirina_1; j++) {\n                printf(\"%5d\",matrica[i][j]);\n            }\n            printf(\"\\n\");\n        }\n        sirina=sirina_1;\n    }\n    printf(\"\\nNakon %d. prolaza patrica je prazna!\",k+1);\n\n    return 0;\n}\n"
    },
    "141": {
        "label": "0",
        "student1200": "#include <stdio.h>\n\nint main()\n{\n\tfloat a1,b1,a2,b2;\n\tchar zarez;\n\tprintf(\"Unesite a1,b1,a2,b2: \");\n\tscanf(\"%f%c%f%c%f%c%f\", &a1,&zarez,&b1,&zarez,&a2,&zarez,&b2);\n\tif(a1==a2 && b1==b2) printf(\"Poklapaju se\");\n\telse if(a1==a2) printf(\"Paralelne su\");\n\telse printf(\"Prave se sijeku u tacci (%.1f,%.1f)\", (b2-b1)/(a1-a2), a1*(b2-b1)/(a1-a2)+b1);\n\treturn 0;\n}\n",
        "student1828": "#include <stdio.h>\n#include <math.h>\n#define epsilon 0.00001\n\nint main() {\n\tfloat a1,b1,a2,b2,y1,y2,x,y;\n\tprintf (\"Unesite a1,b1,a2,b2: \");\n\tscanf (\"%f,\"\"%f,\" \"%f,\" \"%f\",&a1,&b1,&a2,&b2 );\n\ty1=a1*x+b1;\n\ty2=a2*x+b2;\n\tif (fabs (a1-a2)<epsilon && fabs(b1-b2)>epsilon) {printf(\"Paralelne su\"); }\n\telse if (fabs (a1-a2)<epsilon && fabs(b1-b2)<epsilon) {printf (\"Poklapaju se\");}\n\t    else {\n        x=(float)(b1-b2)/(float)(a2-a1);\n        y=a1*x+b1;\n        printf (\"Prave se sijeku u tacci (%.1f,%.1f)\", x, y); }\n\n\treturn 0;\n}\n"
    },
    "142": {
        "label": "1",
        "student7043": "#include <stdio.h>\n#include <math.h>\n#define PI 3.14\n#define epsilon  0.0001\n\nint main() {\n\tdouble x1,y1,x2,y2,x3,y3;\n\tdouble a,b,c,L,B,C,max;\n\t\tint ukupnosekundi,istina=1;\n     int sec,min,step;\nprintf(\"Unesite koordinate tacke t1: \");\n\tscanf(\"%lf %lf\",&x1,&y1);\n\n\tprintf(\"Unesite koordinate tacke t2: \");\n\tscanf(\"%lf %lf\",&x2,&y2);\n\n\tprintf(\"Unesite koordinate tacke t3: \");\n\tscanf(\"%lf %lf\",&x3,&y3);\n\t\n\ta=sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n\t\tb=sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));\n\t\t\tc=sqrt((x3-x1)*(x3-x1)+(y3-y1)*(y3-y1));\n\tL=acos((b*b+c*c-a*a)/(2*b*c));\n\t\tB=acos((c*c+a*a-b*b)/(2*c*a));\n\t\t\tC=acos((a*a+b*b-c*c)/(2*a*b));\n\t\t\t\t\n \n\tif (fabs((a*a+b*b)-c*c)<epsilon  || fabs((a*a+c*c)-b*b)<epsilon  || fabs((b*b+c*c)-a*a)<epsilon) {\n\t\tprintf(\"Pravougli \\n\");                                         \n\t}\n\tif (fabs(a-b)<epsilon &&  fabs(b-c)<epsilon){\n\t\tprintf(\"Jednakostranicni \\n\");                                                     \n\t}\n\tif (fabs((a+b)-c)<epsilon || fabs((a+c)-b)<epsilon || fabs((b+c)-a)<epsilon ){\n\t\tistina=0;\n\t\tprintf(\"Linija \\n\");}\n\tif (((fabs(a-b)<epsilon && fabs(a-c)>epsilon && fabs(b-c)>epsilon ) || (fabs(a-c)<epsilon && fabs(a-b)>epsilon && fabs(c-b)>epsilon) || (fabs(c-b)<epsilon && fabs(b-a)>epsilon && fabs(c-a)>epsilon)) && (istina==1))   {\n\t\tprintf (\"Jednakokraki \\n\");\n\t}\n\tif (fabs(a-b)>epsilon && fabs(a-c)>epsilon && fabs(b-c)>epsilon){\n\t\tprintf(\"Raznostranicni \\n\");\n\t}\n\t\n\t\n\tif (L>B && L>C) {\n\t\tmax=L;\n\t}\n\tif (B>L && B>C){\n\t\tmax=B;\n\t}\n\tif(C>L && C>B) {\n\t\tmax=C;\n\t}\n\tukupnosekundi =  (max * 360 * 60 * 60 / (2 * M_PI));\n sec = ukupnosekundi % 60;\n min = (ukupnosekundi / 60) % 60;\n step = ukupnosekundi / (60 * 60);\n \tprintf(\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\",step,min,sec);\n\treturn 0;                       \n}\n",
        "student8011": "#include <stdio.h>\n#define ep 0.0001\n#include <math.h>\n#define PI 3.14159265359\n\nint main() {\n\t\n\t\n\tint sekunde,minute,stepeni,ukupnosekundi,istina=1;\n\tdouble a,b,c,L,B,C,max,x1,x2,x3,y1,y2,y3;\n\t\n\tprintf(\"Unesite koordinate tacke t1: \");\n\tscanf(\"%lf %lf\",&x1,&y1);\n\t\n\tprintf(\"Unesite koordinate tacke t2: \");\n\tscanf(\"%lf %lf\",&x2,&y2);\n\t\n\tprintf(\"Unesite koordinate tacke t3: \");\n\tscanf(\"%lf %lf\",&x3,&y3);\n\t\n\ta=sqrt( (x1-x2) * (x1-x2) + (y1-y2) * (y1-y2) );\n\tb=sqrt( (x2-x3) * (x2-x3) + (y2-y3) * (y2-y3) );\n\tc=sqrt( (x3-x1) * (x3-x1) + (y3-y1) * (y3-y1) );\n\t\n\tL=acos((b*b+c*c-a*a)/(2*b*c));\n\tB=acos((c*c+a*a-b*b)/(2*c*a));\n\tC=acos((a*a+b*b-c*c)/(2*a*b));\n\t\n\tif (L>B && L>C)\n\t{\n\t\tmax=L;\n\t}\n\telse if(B>L && B>C)\n\t{\n\t\tmax=B;\n\t}\n\telse\n\t{\n\t\tmax=C;\n\t}\n\tmax=max*(180/PI);\n\tif (fabs(max-90)<ep)\n\t{\n\t\tprintf(\"Pravougli\\n\");\n\t}\n\tif (fabs(a-b)<ep && fabs(b-c)<ep)\n\t{\n\t\tprintf(\"Jednakostranicni\\n\");\n\t}\n\telse if ((fabs((a+b)-c)<ep || fabs((a+c)-b)<ep || fabs((b+c)-a)<ep))\n\t{\n\t\tistina=0;\n\t\tprintf(\"Linija\\n\");\n\t}\n\telse if (fabs(a-b)<ep && fabs(b-c)>ep || fabs(a-b)>ep && fabs(b-c)<ep || fabs(a-c)>ep && fabs(a-b)<ep)\n\t{\n\t\tprintf(\"Jednakokraki\\n\");\n\t}\n\telse if((fabs(a-b)>ep) && (fabs(a-c)>ep) && (fabs(b-c)>ep))\n\t{\n\t\tprintf(\"Raznostranicni\\n\");\n\t}\n\tmax+=ep;\n\tukupnosekundi=(max*60*60);\n\tsekunde=ukupnosekundi % 60;\n\tminute=(ukupnosekundi/60)%60;\n\tstepeni=ukupnosekundi / (60*60);\n\tprintf(\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\",stepeni,minute,sekunde);\n\t\n\t\n\treturn 0;\n\t\n\t\n\t\n}\n"
    },
    "143": {
        "label": "0",
        "student3567": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define KAPACITET 200\n\nvoid unesi(char niz[], int velicina)\n{\n    char znak = getchar();\n    if (znak == '\\n') znak = getchar();\n    int i = 0;\n    while (i<velicina-1 && znak != '\\n')\n    {\n        niz[i]=znak;\n        i++;\n        znak=getchar();\n    }\n    niz[i]='\\0';\n}\n\nstruct Vrijeme \n{\n\tint sati, minute, sekunde;\n};\n\nstruct Cas \n{\n\tchar predmet[10];\n\tint dan_u_sedmici;\n\tstruct Vrijeme pocetak, kraj;\n};\n\nint ucitaj_datoteku(struct Cas raspored[])\n{\n\tstruct Cas cas;\n\tFILE* dat = fopen(\"raspored.dat\", \"rb\");\n\tif(dat == NULL)\n\t{\n\t\tprintf(\"Greska pri otvaranju datoteke.\\n\");\n\t\treturn 0;\n\t}\n\tint ucitano = fread(raspored, sizeof(cas), KAPACITET, dat);\n\tfclose(dat);\n\t\n\treturn ucitano;\n}\n\nint zapisi_datoteku(struct Cas raspored[], int broj_casova)\n{\n\tint z = 0;\n\tstruct Cas cas;\n\tFILE* dat = fopen(\"raspored.dat\", \"wb\");\n\tif(dat == NULL)\n\t{\n\t\tprintf(\"Greska pri otvaranju datoteke.\\n\");\n\t\texit(1);\n\t}\n\tint zapisano = fwrite(raspored, sizeof(cas), broj_casova, dat);\n\tif(ferror(dat))\n\t{\n\t\tprintf(\"Greska prilikom pisanja u datoteke.\\n\");\n\t\tprintf(\"Zapisano je samo %d casova.\\n\", zapisano);\n\t}\n\tfclose(dat);\n\t\n\tif(zapisano == broj_casova)\n\t\tz = 1;\n\t\n\treturn z;\n}\n\nint dodaj_cas(struct Cas raspored[], int broj_casova, const char* predmet, int trajanje)\n{\t\n\tint temp[60] = { 0 }; // 10casova max na dan * 6 dana\n\tint i, index, tr = 0, j = 0, dodano = 0;\n\t\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tindex = (raspored[i].dan_u_sedmici - 1) * 10 + (raspored[i].pocetak.sati - 9);\n\t\ttr = raspored[i].kraj.sati - raspored[i].pocetak.sati;\n\t\tif(((raspored[i].kraj.sati - raspored[i].pocetak.sati) * 10 + raspored[i].kraj.minute) % 10 != 0)\n\t\t\ttr++;\n\t\t\n\t\tfor(j = index; j < index + tr; j++)\n\t\t{\n\t\t\ttemp[j] = 1;\n\t\t}\n\t}\n\t\n\tj = 0;\n\tindex = -1;\n\tfor(i = 0; i < 60; i++)\n\t{\n\t\tif(temp[i] == 0)\n\t\t{\n\t\t\tj++;\n\t\t\tif(i % 10 == 0)\n\t\t\t{\n\t\t\t\tindex = i;\n\t\t\t\tj = 1;\n\t\t\t}\n\t\t\tif(index == -1)\n\t\t\t\tindex = i;\n\t\t\tif(j == trajanje)\n\t\t\t{\n\t\t\t\tdodano = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tj = 0;\n\t\t\tindex = -1;\n\t\t}\n\t}\n\t\n\tif(dodano == 1)\n\t{\n\t\tstrcpy(raspored[broj_casova].predmet, predmet);\n\t\traspored[broj_casova].dan_u_sedmici = index / 10 + 1;\n\t\traspored[broj_casova].pocetak.sati = index % 10 + 9;\n\t\traspored[broj_casova].pocetak.minute = 0;\n\t\traspored[broj_casova].pocetak.sekunde = 0;\n\t\traspored[broj_casova].kraj.sati = raspored[broj_casova].pocetak.sati + trajanje;\n\t\traspored[broj_casova].kraj.minute = 0;\n\t\traspored[broj_casova].kraj.sekunde = 0;\n\t}\n\t\n\t\n\treturn dodano;\n}\n\nint preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas)\n{\n\tint p = 0, i;\n\t\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == cas.dan_u_sedmici)\n\t\t{\n\t\t\tif(raspored[i].kraj.sati > cas.pocetak.sati && raspored[i].pocetak.sati != cas.pocetak.sati && cas.pocetak.sati != 0)\n\t\t\t\tp = 1;\n\t\t\telse if(raspored[i].kraj.sati > cas.pocetak.sati && raspored[i].pocetak.sati == cas.pocetak.sati &&\n\t\t\t\t\traspored[i].pocetak.minute > cas.pocetak.minute && cas.pocetak.sati != 0)\n\t\t\t\tp = 1;\n\t\t\telse if(raspored[i].kraj.sati == cas.pocetak.sati && raspored[i].kraj.minute > cas.pocetak.minute)\n\t\t\t\tp = 1;\n\t\t}\n\t}\n\treturn p;\n\n\t/*for(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == cas.dan_u_sedmici)\n\t\t{\n\t\t\tint kraj_i = raspored[i].kraj.sati + (raspored[i].kraj.minute > 0 ? 1 : 0);\n\t\t\tint kraj_c = cas.kraj.sati + (cas.kraj.minute > 0 ? 1 : 0);\n\t\t\t\n\t\t\tif((kraj_c > raspored[i].pocetak.sati && cas.pocetak.sati < kraj_i) ||\n\t\t\t   (kraj_i > cas.pocetak.sati && raspored[i].pocetak.sati < kraj_c))\n\t\t\t{\n\t\t\t\tp = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}*/\n\t\n\treturn p;\n}\n\n// void ispis_rasporeda(struct Cas raspored[], int broj_casova)\n// {\n//  \tchar *dani[] = { \"\", \"PON\", \"UTO\", \"SRI\", \"CET\", \"PET\", \"SUB\" };\n//  \tint i;\n \t\n//  \tfor(i = 0; i < 7; i++)\n//  \t{\n//  \t\tif(i == 0)\n//  \t\t\tprintf(\"%-6s\", dani[i]);\n//  \t\telse\n//  \t\t\tprintf(\"%-9s\", dani[i]);\n//  \t}\n//  \tprintf(\"\\n\");\n// }\n\nvoid ispisi_dan(struct Cas raspored[], int broj_casova, int dan)\n{\n\tint i, j = 1;\n\tprintf(\"Uneseni su casovi: \\n\");\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == dan)\n\t\t{\n\t\t\tprintf(\"%d) %s (%02d:%02d-%02d:%02d)\\n\", j++, raspored[i].predmet, raspored[i].pocetak.sati, raspored[i].pocetak.minute, raspored[i].kraj.sati, raspored[i].kraj.minute);\n\t\t}\n\t}\n}\n\nvoid promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena)\n{\n\tint indexi[10] = { 0 };\n\t\n\tint i, brCasova = 0;\n\t\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == dan)\n\t\t{\n\t\t\tindexi[brCasova] = i;\n\t\t\tbrCasova++;\n\t\t}\n\t}\n\t\n\traspored[indexi[redni_broj - 1]] = promjena;\n}\n\nvoid obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj)\n{\n\tint indexi[10] = { 0 }, i, brCasova = 0;\n\t\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == dan)\n\t\t{\n\t\t\tindexi[brCasova] = i;\n\t\t\tbrCasova++;\n\t\t}\n\t}\n\t\n\tfor(i = indexi[redni_broj - 1]; i < brCasova - 1; i++)\n\t\traspored[i] = raspored[i + 1];\n}\n\nint brojCasovaTogDana(struct Cas raspored[], int broj_casova, int dan)\n{\n\tint i, brCasova = 0;\n\t\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == dan)\n\t\t{\n\t\t\tbrCasova++;\n\t\t}\n\t}\n\t\n\treturn brCasova;\n}\n\nint main() \n{\n\tstruct Cas raspored[KAPACITET], cas;\n    char imePredmeta[10], test[100];\n    int opcija, brojRegistrovanihCasova = 0, trajanjeCasa = 0, dan = 0, promjenaCasa = 0;\n    struct Vrijeme p, k;\n    for(;;)\n    {\n        printf(\"1) Ispis rasporeda\\n2) Dodavanje casa\\n3) Promjena casa\\n4) Brisanje casa\\n0) Kraj rada\\nIzaberite opciju: \");\n        scanf(\"%d\", &opcija);\n        if(opcija == 0)\n        {\n        \tzapisi_datoteku(raspored, brojRegistrovanihCasova);\n        \tbreak;\n        }\n        // else if(opcija == 1)\n        // {\n        // \tispis_rasporeda(raspored, brojRegistrovanihCasova);\n        // }\n        else if(opcija == 2)\n        {\n            printf(\"Unesite naziv predmeta: \");\n            unesi(test, 100);\n            strncpy(imePredmeta, test, 9);\n            imePredmeta[9] = '\\0';\n            printf(\"Unesite broj casova: \");\n            scanf(\"%d\", &trajanjeCasa);\n            if(dodaj_cas(raspored, brojRegistrovanihCasova++, imePredmeta, trajanjeCasa) == 0)\n                printf(\"Nema dovoljno mjesta u rasporedu za %d casova.\\n\", trajanjeCasa);\n        }\n        else if(opcija == 3)\n        {\n            for(;;)\n            {\n                printf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n                scanf(\"%d\", &dan);\n                ispisi_dan(raspored, brojRegistrovanihCasova, dan);\n                printf(\"Izaberite koji cas zelite promijeniti: \");\n                scanf(\"%d\", &promjenaCasa);\n                int a = brojCasovaTogDana(raspored, brojRegistrovanihCasova, dan);\n                if(promjenaCasa > a)\n                \tprintf(\"Neispravan redni broj casa.\\n\");\n                else\n                {\n                \tprintf(\"Naziv predmeta: \");\n             \t\tunesi(test, 100);\n            \t\tstrncpy(imePredmeta, test, 9);\n            \t\timePredmeta[9] = '\\0';\n                \tprintf(\"Vrijeme pocetka: \");\n                \tscanf(\"%d:%d\", &p.sati, &p.minute);\n                \tp.sekunde = 0;\n                \tprintf(\"Vrijeme zavrsetka: \");\n                \tscanf(\"%d:%d\", &k.sati, &k.minute);\n                \tk.sekunde = 0;\n                \tstrcpy(cas.predmet, imePredmeta);\n                \tcas.dan_u_sedmici = dan;\n                \tcas.pocetak = p;\n                \tcas.kraj = k;\n                \t\n                \tif(preklapanje(raspored, brojRegistrovanihCasova, cas) == 0)\n                \t{\n                    \tpromijeni_cas(raspored, brojRegistrovanihCasova, dan, promjenaCasa, cas);\n                    \tbreak;\n                \t}\n\t\t\t\t\telse\n                    \tprintf(\"Promjena nije moguca jer dovodi do preklapanja\\n\");\n                }\n            }\n        }\n        else if(opcija == 4)\n        {\n            printf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n            scanf(\"%d\", &dan);\n            ispisi_dan(raspored, brojRegistrovanihCasova, dan);\n            printf(\"Izaberite koji cas zelite obrisati: \");\n            scanf(\"%d\", &promjenaCasa);\n            obrisi_cas(raspored, brojRegistrovanihCasova, dan, promjenaCasa);\n            brojRegistrovanihCasova--;\n            printf(\"Cas obrisan\\n\");\n        }\n    }\n\t\n\treturn 0;\n}\n",
        "student5860": "#include <stdio.h>\n#include <stdlib.h>\n\n#include <stdbool.h>\n#include <string.h>\n\n\n\n#define KAPACITET           200\n\n#define datoteka            \"C:\\\\Users\\\\damir\\\\Desktop\\\\New folder (2)\\\\raspored.dat\"\n\n#define VRIJEME_MAKSIMALNO\t\t\t\t23\n\n#define VRIJEME_MAKSIMALNO_MIN\t\t\t59\n\n#define VRIJEME_MAKSIMALNO_SEC\t\t\t59\n\n\n\n\n\n\n#define PRVO_VRIJEME     9\n \n#define ZAVRSNO_VRIJEME     18\n \n#define KRAJ_VREMENA      19\n\nchar* SEDMICA[6] = {\"PON\", \"UTO\", \"SRI\", \"CET\", \"PET\", \"SUB\"};\n\nint PomocnaVarijabla = -1;\n\n\n\n\n\nstruct Vrijeme {\n\n    int sati, minute, sekunde;\n\n};\n\n\n\nstruct Cas {\n\n    char predmet[10];\n\n    int dan_u_sedmici;\n\n    struct Vrijeme pocetak, kraj;\n\n};\n\n\n\n\n\n\nbool TacnoVrijeme(int sat, int minut, int sekund) {\n\n\tif(\tsat <= VRIJEME_MAKSIMALNO && sat >= 0 &&  minut <= VRIJEME_MAKSIMALNO_MIN && minut >= 0 &&\tsekund <= VRIJEME_MAKSIMALNO_SEC && sekund >= 0)\n\n\t\t\treturn true;\n\n\telse\n\n\t\treturn false;\n\n}\n\n\n\n\n\nvoid ispisi_red(struct Cas raspored[], int broj_casova, int sat) {\n\n\tint n=0;\n\tint dan=0;\n\n\tbool postavljen;\n\n\tstruct Cas ObjekatCasa;\n\n\tfor(dan = 1; dan <= 6; dan++) {\n\n\t\tstrcpy(ObjekatCasa.predmet , \"\");\n\n\t\tpostavljen = false;\n\n\t\t\n\n\t\tfor(n = 0; n < broj_casova; n++) {\n\n\t\t\tif(raspored[n].dan_u_sedmici == dan && raspored[n].pocetak.sati <= sat) {\n\n\t\t\t\tif (!postavljen) \n\n\t\t\t\t\tif(raspored[n].pocetak.sati == sat) {\n\n\t\t\t\t\t\tObjekatCasa = raspored[n];\n\n\t\t\t\t\t\tpostavljen;\n\n\t\t\t\t\t}\n\n\t\t\t\telse {\n\n\t\t\t\t\tif((raspored[n].pocetak.sati != raspored[n].kraj.sati && raspored[n].kraj.sati > sat && raspored[n].pocetak.sati <= sat)||\n\n\t\t\t\t\t\t (raspored[n].kraj.minute == 0  && raspored[n].pocetak.sati == ObjekatCasa.pocetak.sati) ||\n\n\t\t\t\t\t\t(raspored[n].pocetak.minute < ObjekatCasa.pocetak.minute && raspored[n].pocetak.sati == ObjekatCasa.pocetak.sati  ) ||\n\n\t\t\t\t\t\t(raspored[n].kraj.minute > 0 && raspored[n].kraj.minute <= ObjekatCasa.pocetak.minute && raspored[n].pocetak.sati <= sat) ||\n\t\t\t\t\t\t(raspored[n].pocetak.minute < ObjekatCasa.pocetak.minute && raspored[n].kraj.sati >= ObjekatCasa.kraj.sati && raspored[n].pocetak.sati <= ObjekatCasa.pocetak.sati) \n\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tObjekatCasa = raspored[n];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tprintf(\"%-10s\", ObjekatCasa.predmet);\n\n\t}\n\n}\n\n\n\n\nint ucitaj_datoteku(struct Cas raspored[]) {\n\t\n\tFILE *FajlOtvoren;\n    int i = 0;\n\n    \n\n    if((FajlOtvoren = fopen(datoteka, \"r+\")) == NULL) {\n\n       \n\n        exit(1);\n\n    }\n\n    int VarijablaJedan=0;\n\n    while ((VarijablaJedan = fscanf(FajlOtvoren, \"%9s %d %d %d %d %d %d %d\\n\",   &raspored[i].predmet, &raspored[i].dan_u_sedmici,\n\n        &raspored[i].pocetak.sati, &raspored[i].pocetak.minute, &raspored[i].pocetak.sekunde,\n\n        &raspored[i].kraj.sati, &raspored[i].kraj.minute, &raspored[i].kraj.sekunde)) != EOF) {\n\n        \n\n\t\tif(i >= KAPACITET)\n\n            break;\n\n            \n\n        if(VarijablaJedan == 8)\n\n        \tif(\n        \t\traspored[i].pocetak.sati <= raspored[i].kraj.sati && \n        \t\t\n        \traspored[i].pocetak.sati <= ZAVRSNO_VRIJEME\t &&\n\n\t        \traspored[i].dan_u_sedmici >= 1 &&\n\n\t        \traspored[i].pocetak.sati >= PRVO_VRIJEME && \n\t        \t\n\t        \traspored[i].dan_u_sedmici <= 6 &&\n\n\t        \traspored[i].kraj.sati >= PRVO_VRIJEME && \n\t        \tTacnoVrijeme(raspored[i].kraj.sati, raspored[i].kraj.minute, raspored[i].kraj.sekunde) &&\n\n\t\t\t\tTacnoVrijeme(raspored[i].pocetak.sati, raspored[i].pocetak.minute, raspored[i].pocetak.sekunde) &&\n\n\t\t\t\traspored[i].kraj.sati <= KRAJ_VREMENA\n\t\t\t\t\n\t\t\t\t) \n\n        \t\t\ti++;\n\n    }\n\n    return i;\n\n}\n\n\n\n\n\nint zapisi_datoteku(struct Cas raspored[], int broj_casova) {\n\n\tFILE *FajlOtvoren = fopen(datoteka, \"ab+\");\n\n\tif (FajlOtvoren == NULL)\n\n\t{\n\n\t    \n\n\t    exit(1);\n\n\t}\n\n\tint i;\n\n\tint Sacuvano = 0;\n\n\tfor(i = 0; i < broj_casova; i++) {\n\n\t\tfprintf(FajlOtvoren, \"%-9s %d %d %d %d %d %d %d\\n\", raspored[i].predmet, raspored[i].dan_u_sedmici,\n\n    \traspored[i].pocetak.sati, raspored[i].pocetak.minute, raspored[i].pocetak.sekunde,\n\n        raspored[i].kraj.sati, raspored[i].kraj.minute, raspored[i].kraj.sekunde);\n\n        fprintf(FajlOtvoren, \"\\n\");\n\n        Sacuvano++;\n\n\t}\n\n\n\n\tfclose(FajlOtvoren);\n\n}\n\n\n\n\n\nint dodaj_cas(struct Cas raspored[], int broj_casova,\n\n    const char* predmet, int trajanje) {\n\n\tint dan;\n\tint j;\n\tint i;\n\n\tint vrijeme;\n\n\t\n\n\n\n\tbool NijeSlobodno[7][20];\n\n\tfor(i = PRVO_VRIJEME; i <= KRAJ_VREMENA; i++) \n\n\t\tfor(j = 1; j <= 6; j++) \n\n\t\t\tNijeSlobodno[j][i] = false;\t\n\n\t\t\t\n\n\n\n\tfor(i = 0; i < broj_casova; i++) {\n\n\t\tif(raspored[i].predmet != \"\") {\n\n\t\t\tNijeSlobodno[raspored[i].dan_u_sedmici][raspored[i].pocetak.sati] = true;\n\n\t\t\t\n\n\t\t\tif(raspored[i].kraj.sati > raspored[i].pocetak.sati) {\n\n\t\t\t\tint j;\n\n\t\t\t\tfor(j = raspored[i].pocetak.sati; j < raspored[i].kraj.sati; j++) \n\n\t\t\t\t\tNijeSlobodno[raspored[i].dan_u_sedmici][j] = true;\n\n\t\t\t\tif(raspored[i].kraj.minute > 0) \n\n\t\t\t\t\tNijeSlobodno[raspored[i].dan_u_sedmici][raspored[i].kraj.sati] = true;\t\n\n\t\t\t}\n\n\t\t\telse {\n\n\t\t\t\tif(raspored[i].kraj.minute > 0) \n\n\t\t\t\t\tNijeSlobodno[raspored[i].dan_u_sedmici][raspored[i].kraj.sati] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t\n\n\n\n\tfor(dan = 1; dan <= 6; dan++) {\n\n\t\tint Udaljenos = 0;\n\n\t\tvrijeme = PRVO_VRIJEME;\n\n\t\twhile(vrijeme <= ZAVRSNO_VRIJEME)\n\n\t\t{\n\n\t\t\tUdaljenos = 0;\n\n\t\t\twhile(!NijeSlobodno[dan][vrijeme] && vrijeme-trajanje <= ZAVRSNO_VRIJEME) {\n\n\t\t\t\tUdaljenos++;\n\n\t\t\t\tvrijeme++;\n\n\t\t\t\tif(Udaljenos == trajanje && vrijeme-trajanje <= ZAVRSNO_VRIJEME) {\n\n\t\t\t\t\tif(broj_casova+1 < KAPACITET) {\n\n\t\t\t\t\t\t\n\n\t\t\t\t\t\tstruct Cas VrijemeN;\n\n\t\t\t\t\t\tstrcpy(VrijemeN.predmet, predmet);\n\n\t\t\t\t\t\tVrijemeN.dan_u_sedmici = dan;\n\n\t\t\t\t\t\tVrijemeN.pocetak.sati = vrijeme-trajanje; VrijemeN.pocetak.minute = 0; VrijemeN.pocetak.sekunde = 0;\n\n\t\t\t\t\t\tVrijemeN.kraj.sati = vrijeme; VrijemeN.kraj.minute = 0; VrijemeN.kraj.sekunde = 0;\n\n\t\t\t\t\n\n\t\t\t\t\t\traspored[broj_casova] = VrijemeN;\n\n\t\t\t\t\t\treturn 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\n\t\t\t\t\t\n\n\t\t\t\t\t\treturn 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvrijeme++;\n\n\t\t}\n\n\t}\n\n\treturn 0;\n\n}\n\n\n\n\n\nint preklapanje(struct Cas raspored[], int broj_casova,\n\n    struct Cas cas) {\n\n\tint i;\n\n\tint dan = cas.dan_u_sedmici;\n\n\tfor(i = 0; i < broj_casova; i++) {\n\n\t\tif(raspored[i].dan_u_sedmici == dan) {\n\n\t\t\n\n\t\t\tif(!(((cas.kraj.sati < raspored[i].pocetak.sati) || ((cas.kraj.sati == raspored[i].pocetak.sati) && (cas.kraj.minute <= raspored[i].pocetak.minute))) ||\n\n\t\t\t((raspored[i].kraj.sati < cas.pocetak.sati) || ((cas.pocetak.sati == raspored[i].kraj.sati) && (cas.pocetak.minute >= raspored[i].kraj.minute)))))\n\n\t\t\t{\n\n\t\t\t\tPomocnaVarijabla = i;\n\n\t\t\t\treturn 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn 0;    \t\n\n}\n\n\n\n\n\nvoid ispis_rasporeda(struct Cas raspored[], int broj_casova) {\n\n\t\n\n\tint i;\n\n\tprintf(\"%-7s\", \"\");\n\n\tfor(i = 1; i <= 5; i++) {\n\n\t\tprintf(\"%-10s\", SEDMICA[i-1]);\n\n\t}\n\tprintf(\"%s\", SEDMICA[5]);\n\tprintf(\"\\n\");\n\n\t\n\n\n\n\tint sati;\n\n\tfor(sati = PRVO_VRIJEME; sati <= ZAVRSNO_VRIJEME; sati++) {\n\n\t\tif(sati == PRVO_VRIJEME) \n\n\t\t\tprintf(\"%d:00   \", sati);\n\n\t\telse\n\n\t\t\tprintf(\"%d:00  \", sati);\n\n\t\t\t\n\n\t\tispisi_red(raspored, broj_casova, sati);\n\n\t\tprintf(\"\\n\");\n\n\t}\n\n\tprintf(\"\\n\");\n\n}\n\n\n\n\n\nvoid ispisi_dan(struct Cas raspored[], int broj_casova, int dan) {\n\n\tint i;\n\n\tint NekaVarijabla = 0;\n\n\tprintf(\"Uneseni su casovi:\\n\");\n\n\tfor(i = 0; i < broj_casova; i++)\n\n\t\tif(raspored[i].dan_u_sedmici == dan)  {\n\n\t\t\tNekaVarijabla++;\n\n\t\t\tprintf(\"%d) %s (%02d:%02d-%02d:%02d)\\n\", NekaVarijabla, raspored[i].predmet, raspored[i].pocetak.sati, raspored[i].pocetak.minute, raspored[i].kraj.sati, raspored[i].kraj.minute);\n\n\t\t}\n\n}\n\n\n\n\nvoid promijeni_cas(struct Cas raspored[], int broj_casova, int dan,\n\n    int redni_broj, struct Cas promjena) {\n\n    int i = 0;\n\n\t\n\n\tbool NalaziSe = false;\n int pozicija = 0;\n\tfor(i = 0; i < broj_casova; i++) {\n\n\t\tif(raspored[i].dan_u_sedmici == dan) {\n\n\t\t\tpozicija++;\n\n\t\t\tif(pozicija == redni_broj) {\n\n\t\t\t\tNalaziSe = true;\n\n\t\t\t\tif(preklapanje(raspored, broj_casova, promjena) == 0) {\n\n\t\t\t\t\traspored[i] = promjena;\n\n\t\t\t\t\t\n\n\t\t\t\t}\n\n\t\t\t\telse if(PomocnaVarijabla == i) {\n\n\t\t\t\t\traspored[i] = promjena;\n\n\t\t\t\t\t\n\n\t\t\t\t}\n\n\t\t\t\t\n\n\t\t\t\tbreak;\n\n\t\t\t} \n\n\t\t} \t\n\n\t}\n\n\tif(!NalaziSe) {\n\n\t\tprintf(\"Neispravan redni broj casa.\\n\");\n\n\t}\n\n}\n\n\n\n\n\nvoid obrisi_cas(struct Cas raspored[], int broj_casova, int dan,\n\n    int redni_broj) {\n\tbool NalaziSe = false;\n    \n\n\tint pozicija = 0;\n\n\tint i = 0;\n\n\tfor(i = 0; i < broj_casova; i++) {\n\n\t\tif(raspored[i].dan_u_sedmici == dan) {\n\n\t\t\tpozicija++;\n\n\t\t\tif(pozicija == redni_broj) {\n\n\t\t\t\tint j;\n\n\t\t\t\tfor(j = i; j < broj_casova-1; j++)\n\n\t\t\t\t\traspored[j]=raspored[j+1];\n\n\t\t\t\tNalaziSe = true;\n\n\t\t\t\n\n\t\t\t\tPomocnaVarijabla = 1;\n\n\t\t\t\tbreak;\n\n\t\t\t} \n\n\t\t} \t\n\n\t}\n\n\tif(!NalaziSe) {\n\n\t\tprintf(\"Neispravan redni broj casa.\\n\");\n\n\t}\t\n\n}\n\n\n\n\nvoid NapraviTabelu(struct Cas raspored[], int broj_casova) {\n int dan;\n\tint IzabranaVrijednost;\n\n\tint cas;\n\n\t\n\n\tprintf(\"1) Ispis rasporeda\\n2) Dodavanje casa\\n3) Promjena casa\\n4) Brisanje casa\\n0) Kraj rada\\nIzaberite opciju: \");\n\n\tscanf(\"%d\", &IzabranaVrijednost);\n\n\t\n\n\tif(IzabranaVrijednost == 1) {\n\n\t\tispis_rasporeda(raspored, broj_casova);\n\n\t\tNapraviTabelu(raspored, broj_casova);\n\n\t}\n\n\telse if(IzabranaVrijednost == 2) {\n\n\t\tchar naziv[10];\n\n\t\tint Udaljenos;\n\n\t\tprintf(\"Unesite naziv predmeta: \"); scanf(\"%9s\", &naziv);\n\n\t\tprintf(\"Unesite broj casova: \"); scanf(\"%d\", &Udaljenos);\n\n\t\tif(naziv == \"\" || Udaljenos > 10 || Udaljenos < 1  ) {\n\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\n\n\t\t}\n\n\t\telse {\n\n\t\t\tint dodano = dodaj_cas(raspored, broj_casova, naziv, Udaljenos);\n\n\t\t\tif(dodano == 1) broj_casova++;\n\n\t\t\telse printf(\"Nema dovoljno mjesta u rasporedu za %d casova.\", Udaljenos);\n\n\t\t\tispis_rasporeda(raspored, broj_casova);\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\n\n\t\t}\n\n\t}\n\n\telse if(IzabranaVrijednost == 3) {\n\n\t\n\t\t\n\t\tint ZadnjimM = 0;\n\t\tint ZavrsniH = 0;\n\t\tint PocetnoM = 0;\n\t\t\n\t\tint PocetnoH = 0;\n\t\tchar naziv[10];\n\t\t\n\n\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \"); scanf(\"%d\", &dan);\n\n\t\tif(dan >= 1 && dan <= 6) {\n\n\t\t\tispisi_dan(raspored, broj_casova, dan);\n\n\t\t}\n\n\t\telse {\n\n\t\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\t\n\n\t\t}\n\n\t\tprintf(\"Izaberite koji cas zelite promijeniti: \"); scanf(\"%d\", &cas);\n\n\t\tprintf(\"Naziv predmeta: \"); scanf(\"%s\", &naziv);\n\n\t\tprintf(\"Vrijeme pocetka: \"); scanf(\"%d : %d\", &PocetnoH, &PocetnoM);\n\n\t\tprintf(\"Vrijeme zavrsetka: \"); scanf(\"%d : %d\", &ZavrsniH, &ZadnjimM);\n\n\t\tif(PocetnoH >= PRVO_VRIJEME && PocetnoH <= ZAVRSNO_VRIJEME && \n\n\t\t\tTacnoVrijeme(PocetnoH, PocetnoM, 0) && TacnoVrijeme(ZavrsniH, ZadnjimM, 0) && naziv != \"\" && \n\n\t\t\tZavrsniH >= PRVO_VRIJEME && ZavrsniH <= KRAJ_VREMENA) \n\n\t\t{\n\n\t\t\tstruct Cas VrijemeN;\n\n\t\t\t\n\n\t\t\tstrcpy(VrijemeN.predmet, naziv);\n\n\t\t\tVrijemeN.dan_u_sedmici = dan;\n\n\t\t\tVrijemeN.pocetak.sati = PocetnoH; VrijemeN.pocetak.minute = PocetnoM; VrijemeN.pocetak.sekunde = 0;\n\n\t\t\tVrijemeN.kraj.sati = ZavrsniH; VrijemeN.kraj.minute = ZadnjimM; VrijemeN.kraj.sekunde = 0;\n\n\t\t\t\n\n\t\t\tpromijeni_cas(raspored, broj_casova, dan, cas, VrijemeN);\t\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\n\n\t\t}\n\n\t\telse {\n\n\t\t\tprintf(\"Neispravan redni broj casa.\\n\");\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\n\n\t\t}\t\n\n\t}\n\n\telse if(IzabranaVrijednost == 4) {\n\n\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \"); scanf(\"%d\", &dan);\n\n\t\tif(dan <= 6  && dan >= 1 ) {\n\n\t\t\tispisi_dan(raspored, broj_casova, dan);\n\n\t\t}\n\n\t\telse {\n\n\t\t\tprintf(\"Pogresan unos.\\n\");\n\n\t\t\tNapraviTabelu(raspored, broj_casova);\t\n\n\t\t}\n\n\n\n\t\tprintf(\"Izaberite koji cas zelite obrisati: \"); scanf(\"%d\", &cas);\n\n\t\tPomocnaVarijabla = 0;\n\n\t\tobrisi_cas(raspored, broj_casova, dan, cas);\n\n\t\tif(PomocnaVarijabla == 1) broj_casova--;\n\n\t\tNapraviTabelu(raspored, broj_casova);\n\n\t}\n\n\telse if(IzabranaVrijednost == 0) {\n\n\t\tzapisi_datoteku(raspored, broj_casova);\n\n\t\texit(0);\n\n\t}\n\n\telse {\n\n\t\tprintf(\"Pogresan unos.\");\n\n\t\texit(1);\n\n\t}\n\n}\n\n\n\n\n\nint main() {\n\n\n\n    exit(0);\n\n}"
    },
    "144": {
        "label": "1",
        "student3677": "#include <stdio.h>\n#include <math.h>\n\nint izbaci_cifre(int *nizA, int d1, int *nizB, int d2)\n{\n\tint i,j;\n\tint broj, brojac=1;\n\tint logicki=1;\n\tint temp=0;\n\tint a;\n\t\n\tfor(i=0;i<d2;i++)\n\t{\n\t\tfor(j=0;j<d2;j++)\n\t\t{\n\t\t\tif(*(nizB+i)==*(nizB+j) && i!=j)\n\t\t\t{\n\t\t\t\tlogicki=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\t\n\tfor(i=0;i<d2;i++)\n\t{\n\t\tif(logicki!=0)\n\t\t{\n\t\t\tif(*(nizB+i)<0 || *(nizB+i)>9)\n\t\t\t{\n\t\t\t\tlogicki=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlogicki=1;\n\t\t\t}\n\t\t} else break;\n\t}\n\n\t\n\tif(logicki!=0)\n\t{\n\t\tfor(j=0;j<d2;j++)\n\t\t{\n\t\t\ta=*(nizB+j);\n\t\t\t\n\t\t\tfor(i=0;i<d1;i++)\n\t\t\t{\n\t\t\t\tbroj=fabs(*(nizA+i));\n\t\t\t\tbrojac=1;\n\t\t\t\ttemp=0;\n\t\t\t\t\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\tif(broj%10!=a)\n\t\t\t\t\t{\n\t\t\t\t\t\ttemp+=((broj%10)*brojac);\n\t\t\t\t\t\t\n\t\t\t\t\t\tbrojac*=10;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbroj/=10;\n\t\t\t\t}while(broj>0);\n\t\t\t\t\n\t\t\t\tif(broj==0 && temp==0) *(nizA+i)=0;\n\t\t\t\t\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tif(*(nizA+i)<0) temp*=-1;\n\t\t\t\t\t*(nizA+i)=temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn logicki;\n}\n\nint main() {\n\t\n\tint i;\n\t\n\tint nizA[3]={12345,6789,34567};\n\tint nizB[3]={1,6,7};\n\t\n\tint izbaci=izbaci_cifre(nizA,3,nizB,3);\n\t\n\tif(izbaci!=0) \n\tprintf(\"Izbacivanje je bilo uspjesno! \");\n\telse \n\tprintf(\"Izbacivanje nije bilo uspjesno.\");\n\t\n\tfor(i=0;i<5;i++)\n\t{\n\t\tprintf(\"%d \", nizA[i]);\n\t}\n\t\n\t\n\treturn 0;\n}\n",
        "student8959": "#include <stdio.h>\n#include <math.h>\nint izbaci_cifre(int* niz1, int vel1, int* niz2, int vel2)\n{\n\tint i,j,logicki=1;\n\tint broj,brojac=1,temp=0,br;\n\t//ispitivnje ispravnosti drugog niz tj. da li je on niz medjusobno razlicitih cifara 0-9\n\t//u slucaju da nije funckija vraca 0\n\tfor(i=0; i<vel2; i++) {\n\t\tfor(j=0; j<vel2; j++) {\n\t\t\tif(*(niz2+i)==*(niz2+j) && i!=j) {\n\t\t\t\tlogicki=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(logicki!=0) {\n\t\t\t// provjera da li je broja manji od 0 ili veci od 9\n\t\t\tif(*(niz2+i)<0 || *(niz2+i)>9 ) {\n\t\t\t\tlogicki=0;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tlogicki=1;\n\t\t\t}\n\t\t} else break;\n\t}\n\tif(logicki!=0) {\n\t\tfor(j=0; j<vel2; j++) {\n\t\t\tbr=*(niz2+j);\n\t\t\tfor(i=0; i<vel1; i++) {\n\t\t\t\tbroj=fabs(*(niz1+i));\n\t\t\t\tbrojac=1;\n\t\t\t\ttemp=0;\n\t\t\t\tdo {\n\t\t\t\t\tif(broj%10!=br) {\n\t\t\t\t\t\t//ako broj nije jednak trazenom zadnja cifra *brojac\n\t\t\t\t\t\t//brojac se uvecama takozvanim deseticama(1,10,100,...)\n\t\t\t\t\t\ttemp+=((broj%10)*brojac);\n\t\t\t\t\t\tbrojac*=10;\n\t\t\t\t\t}\n\t\t\t\t\tbroj/=10;\n\t\t\t\t} while(broj>0);\n\n\t\t\t\tif(broj==0 && temp==0) *(niz1+i)=0;\n\t\t\t\telse {\n\t\t\t\t\t//posto je koristena apsolutna vrijednost broja broj treba vratiti\n\t\t\t\t\t//u prvobitan oblik tj ako je bio negativan da opet bude\n\t\t\t\t\tif(*(niz1+i)<0) temp*=-1;\n\t\t\t\t\t*(niz1+i)=temp;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn logicki;\n}\nint main()\n{\n\tint niz1[5]= {234,206,35678,91134,123};\n\tint niz2[5]= {1,9,8,4,5};\n\tint i;\n\tint a=izbaci_cifre(niz1,5,niz2,5);\n\tif (a!=0) printf(\"Izbacivanje je bilo uspjesno! \");\n\telse printf(\"Izbacivanje nije bilo uspjesno\");\n\tfor(i=0; i<5; i++) {\n\t\tprintf(\"%d \",niz1[i]);\n\t}\n\treturn 0;\n}\n"
    },
    "145": {
        "label": "0",
        "student2221": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\n#define eps 0.0001\n\nfloat formirajBroj(char* s)\n{\n\tfloat broj = 0;\n\tint i = 0, negativan = 1;\n\tif (s[i] == '-')\n\t{\n\t\tnegativan = -1;\n\t\ti++;\n\t}\n\twhile (s[i] != '.' && s[i] != '\\0')\n\t{\n\t\tbroj = broj*10 + s[i] - '0';\n\t\ti++;\n\t}\n\tif (s[i] == '\\0')\n\treturn negativan * broj;\n\t\n\ti++;\n\tfloat k = 0.1;\n\twhile (s[i] != '\\0')\n\t{\n\t\tbroj += (s[i] - '0')*k;\n\t\tk *= 0.1;\n\t\ti++;\n\t}\n\t\n\treturn negativan * broj;\n}\n\nint isNumber(char* s)\n{\n\tint i = 0, m = 1, tacka = 0;\n\tif(s[0] == '-')\n\t{\n\t\ti++;\n\t}\n\twhile(s[i] != '\\0')\n\t{\n\t\tif((s[i] < '0' || s[i] > '9') && s[i] != '.')\n\t\t{\n\t\t\tm = 0;\n\t\t\treturn 0;\n\t\t}else if(tacka && s[i] == '.')\n\t\t{\n\t\t\tm = 0;\n\t\t\treturn 0;\n\t\t}\n\t\tif(s[i] == '.' && i-1 > 0 && s[i-1] != '-')\n\t\t{\n\t\t\tif(s[i-1] == '-') return 0;\n\t\t\ttacka = 1;\n\t\t}\n\t\ti++;\n\t}\n\treturn 1;\n}\n\nint testirajString(char* s)\n{\n\tint i = 0, m = 1;\n\twhile(s[i] != '\\0')\n\t{\n\t\tif(s[i] == '(')\n\t\t{\n\t\t\ti++;\n\t\t\tchar temp[50] = {'\\0'};\n\t\t\tint brojac = 0;\n\t\t\twhile(s[i] != ',' && s[i] != '\\0')\n\t\t\t{\n\t\t\t\ttemp[brojac] = s[i];\n\t\t\t\ti++; brojac++;\n\t\t\t\tif(s[i] == '\\0')\n\t\t\t\t{\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\ttemp[brojac] = '\\0';\n\t\t\ti++;\n\t\t\tif(!isNumber(temp) || s[i] == '\\0') return 0;\n\t\t\tbrojac = 0;\n\t\t\twhile(s[i] != ')' && s[i] != '\\0')\n\t\t\t{\n\t\t\t\ttemp[brojac] = s[i];\n\t\t\t\ti++; brojac++;\n\t\t\t\tif(s[i] == '\\0')\n\t\t\t\t{\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\ttemp[brojac] = '\\0';\n\t\t\tif(!isNumber(temp) || s[i] == '\\0') return 0;\n\t\t\tif(s[i] != ')') return 0;\n\t\t\ti++;\n\t\t\tif(s[i] == ',' && s[i + 1] != '(') return 0;\n\t\t\telse if(s[i] == '\\0') return 1;\n\t\t}else return 0;\n\t\ti++;\n\t}\n\treturn 1;\n}\n\nchar* obuhvat (char* s, float x1, float y1, float x2, float y2)\n{\n\tint i = 0, brojacPom = 0;\n\tchar pom[1000] = {'\\0'};\n\t//if(!testirajString(s))\n\t//{\n//\t\ts = 0;\n//\t\treturn 0;\n//\t}\n\twhile (s[i] != 0)\n\t{\n\t\tfloat x = 0, y = 0;\n\t\tif (s[i] == '(')\n\t\t{\n\t\t\tchar broj[50], brojac = 0;\n\t\t\twhile (s[i] != ')')\n\t\t\t{\n\t\t\t\tif ((s[i] >= '0' && s[i] <= '9') || s[i] == '-' || s[i] == '.')\n\t\t\t\t{\n\t\t\t\t\tbroj[brojac] = s[i];\n\t\t\t\t\tbrojac++;\n\t\t\t\t}\n\t\t\t\tif (s[i] == ',')\n\t\t\t\t{\n\t\t\t\t\tbroj[brojac] = '\\0';\n\t\t\t\t\tx = formirajBroj(broj);\n\t\t\t\t\tbrojac = 0;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif(brojac != 0) return 0;\n\t\t\tbroj[brojac] = '\\0';\n\t\t\ty = formirajBroj(broj);\n\t\t\tif ((x1 <= x || fabs(x1-x) <= eps) && (x<=x2 || fabs(x-x2) <= eps) \n\t\t\t&& (y1 <= y || fabs(y-y1) <= eps) && (y <= y2 || fabs(y-y2) <= eps))\n\t\t\t{\n\t\t\t\tint k = i;\n\t\t\t\twhile (k > 0 && s[k] != '(')\n\t\t\t\t{\n\t\t\t\t\tk--;\n\t\t\t\t}\n\t\t\t\twhile (s[k] != '\\0' && s[k] != ')')\n\t\t\t\t{\n\t\t\t\t\tpom[brojacPom] = s[k];\n\t\t\t\t\tbrojacPom++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tpom[brojacPom] = ')';\n\t\t\t\tbrojacPom++;\n\t\t\t\tpom[brojacPom] = ',';\n\t\t\t\tbrojacPom++;\n\t\t\t\tpom[brojacPom] = '\\0';\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tif(s[i] == '\\0') break;\n\t\ti++;\n\t}\n\ti = 0;\n\twhile (pom[i] != '\\0')\n\t{\n\t\ts[i] = pom[i];\n\t\ti++;\n\t}\n\tif(i != 0 && s[i-1] == ',')\n\t{\n\t\ts[i-1] = '\\0';\n\t}else s[0] = '\\0';\n\treturn s;\n}\n\nint main()\n{\nchar s[] = \"(1.1,5.5),(1.2,5.5),(1.3,5.5),(1.4,5.5),(1.5,5.5)\";\nchar* rez = obuhvat(s, 1.2, 5.499, 1.4, 5.501);\nprintf(\"%s\", rez);\n\n\n}",
        "student9538": "#include <stdio.h>\n#include<stdlib.h>\n#define eps 0.0001\n\nint dalitrebaizbacit(double x,double y,double x1, double y1, double x2, double y2) {\n\tif(y>y2 || y<y1 || x<x1 || x>x2)\n\treturn 1;\n\telse return 0;\n} double napravibroj(double cijelidio, double ostatak, int predznak) {\n\tdouble broj=(cijelidio+ostatak)*predznak;\n\treturn broj;\n}\nint losformat (char znak) {\n\tif(!((znak>=48 && znak<=87) || znak=='-' || znak=='.'))\n\treturn 1;\n\telse return 0;\n}\nchar* obuhvat(char*tekst, double x1, double y1, double x2, double y2){//donji lijevi i gornjidesni\n\n\t\tchar*s=tekst;\n\t    char*poc;\n\t\t\n\tdouble x,y,o,ostatak;\n\tint imadec, predznak,cijelidio;\n\t\twhile(*s!='\\0' ){\n\t\tif(*s=='(' && s!=tekst && *(s-1)!=',') return 0;\n\t\tif(*s='(') {poc=s;   s++;}\n\t\tif(*s=='.' || *s==',') return 0;\n\t\tx=0; ostatak=0; cijelidio=0; o=0.1;  imadec=0; predznak=1;\n\t\twhile(*s!=',') {\n\t\t\tif(losformat(*s)==1) return 0;\n\t\t\tif(*s=='-'){ if(*(s-1)==',') return 0;  s++; predznak=-1;}\n\t\t\tif(*s=='.') {imadec=1; s++;}\n\t\t\tif(*s==',') break;\n\t\t\t\n\t\t\tif(imadec==0){\n\t\t\t\tcijelidio=cijelidio*10+(*s-48);\n\t\t\t}\n\t\t\tif(imadec==1){\n\t\t\t\tostatak=ostatak+(*s-48)*o;\n\t\t\t\to=o/10;\n\t\t\t}\n\t\t\t\n\t\t\ts++;\n\t\t}\n\t\tx=napravibroj(cijelidio,ostatak,predznak);\n\t\t\n\t\ts++;\n\t\t if(*s=='.' ||*s==')') return 0;\n            y=0; o=0.1; cijelidio=0; ostatak=0; imadec=0; predznak=1;\n\t\t\twhile(*s!=')') {\n\t\t\t\tif(losformat(*s)==1) return 0;\n\t\t\t    if(*s=='-'){s++; predznak=-1;}\n\t\t\t    if(*s=='.') {imadec=1; s++;}\n\t\t\t\n\t\t\n\t\t\tif(imadec==0){\n\t\t\t\tcijelidio=cijelidio*10+(*s-48);\n\t\t\t}\n\t\t\tif(imadec==1){\n\t\t\t\tostatak=ostatak+(*s-48)*o;\n\t\t\t\to=o/10;\n\t\t\t}\n\t\t\ts++;\n\t\t}\n\t    y=napravibroj(cijelidio,ostatak,predznak);\n\t\t\n\t\t\n\t\t\n\tchar*a=poc;\n\tint izb=0;\n\tint vr= dalitrebaizbacit(x,y,x1,y1,x2,y2);\n\tint zadnjarijec=0,jedinarijeczaizbacit=0;\n\t\tif(vr==1){\n\t\t    \n\t\t\tizb=1;\n\t\t\tif(poc==tekst && *(s+1)=='\\0') {\n\t\t\t\t    jedinarijeczaizbacit=1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\tif (*(s+1)=='\\0') {\n\t\t\t    zadnjarijec=1;\n\t\t\t}\n\t\t\n\t\t\t\n\t\t\tif(jedinarijeczaizbacit==1){\n\t\t\t    *tekst='\\0'; return tekst;\n\t\t\t}\n\t\t\telse if(zadnjarijec==1){\n\t\t\t    *(poc-1)='\\0';  return tekst;\n\t\t\t}\n\t\t\telse {\n\t\t\tchar*hod=s+2;\n\t\t\twhile(*hod!='\\0') {\n\t\t\t    *poc=*hod;\n\t\t\t\tpoc++;hod++;\n\t\t\t}\n\t\t\t*poc='\\0';\n\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tif(izb==1){\n\t\t    s=a; \n\t\t}\n\t\t\n\t\telse if(*(s+1)=='\\0')  \n\t\t            s++;\n\t\telse s+=2;\n\t\tif(*s!='(') return 0;\n\t//\tprintf(\"%c\",s);\n\n\t\t}\n\t\t\t\n\t\t//s na \\0\n\t\tif(s!=tekst)\n\t\ts--;\n\t\tif(*s!=')') return 0;\n\t\treturn tekst;\n}\nint main() {\n\tchar s[]=\"(0,-3.1),(-15.09,4),(2.,2),(-1.1,217)\";\n\tchar*rez=obuhvat(s,-3,-3,3,3);\n\tprintf(\"%s %s\",rez,s);\n\treturn 0;\n}"
    },
    "146": {
        "label": "1",
        "student3350": "#include <iostream>\n#include <set>\n#include <vector>\n#include <string>\n#include <list>\n#include <stdexcept>\n\nint Korak(std::string s){\n    int br=0;\n    for(int i=0; i<s.length(); i++){\n        if(s[i]==' ' || s[i]=='-' ) continue;\n        br++;\n    }\n    return br;\n}\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> v, int timovi){\n    if(timovi>v.size() ||timovi <1) throw std::logic_error(\"Razvrstavanje nemoguce\");\n    std::vector<std::set<std::string>> v1(timovi);\n    int n=v.size();\n    std::list<std::string> lista;\n    for(int i=0; i<v.size(); i++){\n        lista.push_back(v[i]);\n    }\n    std::list<std::string>::iterator it(lista.begin()), it2(lista.begin()), it1(lista.begin()), it3(lista.begin());\n    int br_po_timu, prvi, prvi_po_timu, br_djece=v.size(), br_koraka;\n    if(n%timovi==0){\n        br_po_timu=n/timovi; \n        int k=0;\n        while(br_djece!=0){\n            std::set<std::string> skup;\n            for(int i=0; i<br_po_timu; i++){\n                skup.insert(*it);\n                br_koraka=Korak(*it);\n                if(++it2==lista.end()) {\n                    it1=it;\n                    it=lista.begin();\n                    it3=it;\n                    it1=lista.erase(it1);\n                }\n                else it=lista.erase(it);\n           br_djece--;\n                if(br_djece==1 && i<br_po_timu){\n                    skup.insert(*it); \n                    br_djece--;\n                    break; \n                } \n                for(int j=1;j<br_koraka; j++){\n                    it3=it;\n                    if(++it3==lista.end()){ it=lista.begin();}\n                    else it++;\n                    \n                }\n                it2=it;\n                if(it==lista.end()) it--;\n                \n            }\n            v1[k]=skup;\n           k++;\n        }\n    }\n    else {\n        prvi= n%timovi; \n        prvi_po_timu= n/timovi +1; \n        int ostali=n/timovi;\n        int k=0;\n        while(br_djece!=0){\n            std::set<std::string> skup;\n            if(k<prvi){\n                for(int i=0; i<prvi_po_timu; i++){\n                    skup.insert(*it);\n                    //std::cout<<\"Prvi= \"<<*it<<std::endl;\n                    br_koraka=Korak(*it);\n                    if(++it2==lista.end()){\n                        it1=it;\n                        it=lista.begin();\n                        it3=it;\n                        it1=lista.erase(it1);\n                    }\n                    else it=lista.erase(it);\n                  \n                    br_djece--;\n                    for(int j=1; j<br_koraka; j++){\n                       \n                        it3=it;\n                        if(++it3==lista.end()) { it=lista.begin(); }\n                        else it++;\n                        \n                    }\n                    it2=it;\n                    if(it==lista.end()){ it--;}\n                    \n                }\n                v1[k]=skup;\n            }\n            else {\n                it2++;\n                std::set<std::string> skup1;\n                for(int i=0; i<ostali; i++){\n                    skup1.insert(*it);\n                    \n                    br_koraka=Korak(*it);\n                    if(++it2==lista.end()){\n                        it1=it;\n                        it=lista.begin();\n                        it3=it;\n                        \n                        it1=lista.erase(it1);\n                    }\n                    else{ it=lista.erase(it); }\n                   \n                    br_djece--;\n                    if(br_djece==1 && i<ostali){\n                        skup1.insert(*it);\n                        br_djece--;\n                        break;\n                    }\n                    for(int j=1; j<br_koraka; j++){\n                       \n                        if(++it3==lista.end()){ it=lista.begin(); }\n                        else it++;\n                        it3=it;\n                    }\n                    it2=it;\n                    if(it==lista.end()) it--;\n                   \n                }\n                v1[k]=skup1;\n            }\n            k++;\n        }\n    }\n    return v1;\n}\nint main ()\n{\n    std::cout<<\"Unesite broj djece: \";\n    int n;\n    std::cin>>n;\n    std::cout<<\"Unesite imena djece: \\n\";\n    std::cin.ignore(10000,'\\n');\n    std::vector<std::string> v(n);\n    for(int i=0; i<n; i++){\n        std::getline(std::cin,v[i]);\n    }\n    std::cout<<\"Unesite broj timova: \";\n    int k;\n    std::cin>>k;\n    std::vector<std::set<std::string>> novi(Razvrstavanje(v,k));\n    for(int i=0; i<k; i++){\n        std::cout<<\"Tim \"<<i+1<<\": \";\n        auto it2=novi[i].end();\n        it2--;\n        for(auto it=novi[i].begin(); it!=novi[i].end(); it++){\n            std::cout<<*it;\n            if(it!=it2) std::cout<<\", \";\n        }\n        std::cout<<std::endl;\n    }\n\treturn 0;\n}",
        "student5263": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include <string>\n#include <vector>\n#include <set>\n#include <list>\n#include <stdexcept>\n\nusing std::cout;\nusing std::cin;\nusing std::vector;\nusing std::string;\nusing std::endl;\nusing std::getline;\nusing std::set;\nusing std::list;\nusing std::logic_error;\nstruct cvor{\n    string ime;\n    cvor *veza;\n};\nint brojznakova (string s){\n    int br(0);\n    for(int i=0;i<s.size();i++){\n        if((s[i]>='A' && s[i]<='Z') || (s[i]>='a' && s[i]<='z') || (s[i]>='0' && s[i]<='9')) br++;\n    }\n    return br;\n}\nvector<set<string>> Razvrstavanje (vector<string> s, int n){\n    if(n<1 || n>s.size()) throw logic_error (\"Razvrstavanje nemoguce\");\n    list<string> imena;\n    for(int i=0;i<s.size();i++){\n        imena.push_back(s[i]);\n    }\n    auto it(imena.begin());\n    vector<set<string>> timovi(n);\n    int p(0);\n    for(int i=0;i<(s.size()%n);i++){\n        for(int j=0;j<(s.size()/n)+1;j++){\n            timovi[i].insert(*it);\n            int ponavljanje(brojznakova(*it));\n            it=imena.erase(it);if(it==imena.end()) it=imena.begin();\n            for(int k=1;k<ponavljanje;k++) {it++; if(it==imena.end()) it=imena.begin();}\n        }\n        p++;\n    } \n    for(int i=p;i<n;i++){\n        for(int j=0;j<(s.size()/n);j++){\n            timovi[i].insert(*it);\n            int ponavljanje(brojznakova(*it));\n            it=imena.erase(it); if(it==imena.end()) it=imena.begin();\n            for(int k=1;k<ponavljanje;k++) {it++; if(it==imena.end()) it=imena.begin();}\n        }\n    }\n    return timovi;\n}\nint main ()\n{\n    cout<<\"Unesite broj djece: \";\n    int broj_djece;\n    cin>>broj_djece;\n    cin.ignore(1000,'\\n');\n    cout<<\"Unesite imena djece: \"<<endl;\n    vector<string> imena_djece(broj_djece);\n    for(int i=0;i<broj_djece;i++){\n        getline(cin,imena_djece[i]);\n    }\n    cout<<\"Unesite broj timova: \";\n    int broj_timova;\n    cin>>broj_timova;\n    try{\n        auto rezultat(Razvrstavanje(imena_djece,broj_timova));\n        for(int i=0;i<rezultat.size();i++){\n            cout<<\"Tim \"<<i+1<<\": \";\n            for(auto x(rezultat[i].begin());x!=rezultat[i].end();x++) if(x==rezultat[i].begin()) cout<<*x; else cout<<\", \"<<*x;\n            cout<<endl;\n        }\n    }\n    catch(logic_error izuzetak){\n        cout<<\"Izuzetak: \"<<izuzetak.what();\n    }\n\treturn 0;\n}"
    },
    "147": {
        "label": "0",
        "student3253": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 4\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n\n#include <iostream>\n#include <vector>\n#include <string>\n#include <stdexcept>\n\nstd::string ObrniString(std::string ulaz) {\n    std::string rezultat;\n    long idx_kraj = ulaz.size() - 1;\n    for (long i = idx_kraj; i>=0; i--) {\n        rezultat.push_back(ulaz[i]);\n    }\n    return rezultat;\n}\n\nint PronadjiRijec(std::string recenica, std::string rijec, int pocetak)\n{\n    int duzina_recenice = recenica.length();\n    int duzina_rijeci = rijec.length();\n    for (int i = pocetak; i <= duzina_recenice - duzina_rijeci; i++) {\n        int j = 0;\n        while (j < duzina_rijeci && recenica[i+j] == rijec[j]) {\n            j++;\n            \n        }\n        if (j == duzina_rijeci) { \n            return i;\n    }\n}\n \n return -1;\n}\n\nstd::string ZamijeniRijecURecenici(std::string recenica, std::string rijec, int pozicija, int duzina) {\n    for (int i=0; i<duzina; i++) {\n        recenica[pozicija+i] = rijec[i];\n    }\n    return recenica;\n}\n\nbool PronadjiUVektoru(std::string rijec, std::vector<std::string> rijeci) {\n    for (int i=0; i<rijeci.size(); i++) {\n        if (PronadjiRijec(rijeci[i], rijec, 0) != -1 && rijeci[i].size() == rijec.size()) {\n            return true;\n        }\n    }\n    return false;\n}\n\nstd::string ObrniFrazu(std::string fraza) {\n    std::string obrnuto(fraza);\n    obrnuto = ObrniString(fraza);\n    return obrnuto;\n}\n\nstd::string ObrniFraze(std::string recenica, std::vector<std::string> fraze) {\n    for (int i=0; i<fraze.size(); i++) {\n        std::string obrnuta = ObrniFrazu(fraze[i]);\n        \n        size_t index = 0;\n        while (true) {\n            index = PronadjiRijec(recenica, fraze[i], index);\n            if (index == -1) break;\n            recenica = ZamijeniRijecURecenici(recenica, obrnuta, index, obrnuta.size());\n            index += obrnuta.size();\n            \n        }\n    }\n    return recenica;\n}\n\nstd::string IzmijeniUPigLatin(std::string recenica, std::vector<std::string> rijeci) {\n    std::string rezultat = \"\";\n    std::string rijec = \"\";\n    bool izmijeniSve = false;\n    if (rijeci.size() == 0) {\n        izmijeniSve = true;\n    } else {\n        for (int i=0; i<rijeci.size(); i++) {\n            rijec = rijeci[i];\n            for (int j=0; j<rijec.size(); j++) {\n                if ( !((rijec[j] >= 'a' && rijec[j] <= 'z') || (rijec[j] >= 'A' && rijec[j] <= 'Z'))) {\n                    throw std::domain_error(\"Pogresan argument!\");\n                }\n            }\n        }\n    }\n    \n    recenica = recenica + \" \";\n    size_t index = 0;\n    while ( recenica[index] != '\\0' ) {\n        if ( PronadjiRijec(recenica, \" \", index) != -1 ) {\n            int iducirazmak = PronadjiRijec(recenica, \" \", index);\n            int duzinarijeci = iducirazmak - index;\n            std::string rijec = recenica.substr(index, duzinarijeci);\n            if ( izmijeniSve == true || (izmijeniSve == false && PronadjiUVektoru(rijec, rijeci))) \n            {\n                std::string rijecbezprvog = rijec.substr(1, rijec.size()-1);\n                rijec = rijecbezprvog + rijec[0] + \"ay\";\n            }\n            \n            rezultat = rezultat + rijec + \" \";\n            index = iducirazmak + 1;\n        }\n        else {\n            index++;\n        }\n    }\n    return rezultat;\n}\n\nint main ()\n{\n    std::string recenica = \"\";\n    std::vector<std::string> rijeci;\n    std::cin.clear();\n    std::cout << \"Unesite recenicu: \";\n    std::getline(std::cin, recenica);\n    std::cout << \"Unesite fraze: \";\n    std::string rijec;\n    while ( getline(std::cin, rijec), !rijec.empty()) {\n        rijeci.push_back(rijec);\n    }\n    \n    std::cout << \"Recenica nakon PigLatin transformacije: \";\n    try {\n        std::cout << IzmijeniUPigLatin(recenica, rijeci);\n    }\n    catch(std::domain_error izuzetak) {\n        std::cout << izuzetak.what() << std::endl;\n    }\n    std::cout << std::endl;\n    std::cout << \"Recenica nakon obrtanja fraza: \";\n    std::cout << ObrniFraze(recenica, rijeci);\n    std::cout << std::endl;\n}\n\n\n\n",
        "student4415": "#include <iostream>\n#include <string>\n#include <vector>\n#include <stdexcept>\n\nint Rijec_trazi(const std::string &T, const std::string &P,int i = 0)\n{\n    int n = T.length();\n    int m = P.length();\n\n    for (; i <= n-m; ++i) {\n        int j = 0;\n        while (j < m && T[i+j] == P[j]) {\n            ++j;\n        }\n        if (j == m) {\n\n            return i;\n        }\n    }\n    return -1;\n}\n\nint Rijec_trazi2(const std::string &s, const std::string &rijec)\n{\n    int duz_str = s.length();\n    int duz_rj = rijec.length();\n\n\tint k(0);\n\tint j(0);\n    for (int i = 0; i < duz_str; i++) {\n    \tk = i;\n\t\tj = 0;\n\t\twhile (j < duz_rj && k < duz_str && rijec[j] == s[k]) {\n\t\t\tk++;\n\t\t\tj++;\n\t\t}\n\t\tif (j == duz_rj && (i == 0 || !((s[i-1] >= 'A' && s[i-1] <= 'Z')||(s[i-1] >= 'a' && s[i-1] <= 'z'))) && (k == duz_str || !((s[k] >= 'A' && s[k] <= 'Z')||(s[k] >= 'a' && s[k] <= 'z'))))\n\t\t\treturn i;\n    }\n    return -1;\n}\n\nbool ima_li_ne_slova (std::string s)\n{\n\n    for (auto i : s) {\n        if (!(( i >= 'A' && i <= 'Z') || (i >= 'a' && i <= 'z' ))) {\n            return true;\n        }\n    }\n    return false;\n}\n\nstd::string ObrniFraze (std::string s, std::vector<std::string> rijeci)\n{\n\tif (rijeci.empty()) return s;\n    int t(0);\n    int k(0);\n    for (int i = 0; i < rijeci.size(); i++) {\n\n        if (Rijec_trazi(s,rijeci[i]) != -1) {\n            k = 0;\n            while (Rijec_trazi(s,rijeci[i],k) != -1) {\n                t = Rijec_trazi(s,rijeci[i]); // provjeravamo da li se nalazi i vracamo poziciju\n\n                for (int j = rijeci[i].length()-1; j >= 0 ; j--) {\n                    s[t] = rijeci[i][j];\n                    t++;\n                }\n                k++;\n            }\n        }\n    }\n    return s;\n}\n\nstd::string IzmijeniUPigLatin (std::string s, std::vector<std::string> rijeci)\n{\n    if (rijeci.empty()) {\n        int pocetak(0);\n\n        for (int i = 0; i < s.size(); i++) {\n            pocetak = i;\n            if ((( s[i] >= 'A' && s[i] <= 'Z') || (s[i] >= 'a' && s[i] <= 'z' ))) {\n                while (i < s.size() and (( s[i] >= 'A' && s[i] <= 'Z') || (s[i] >= 'a' && s[i] <= 'z' ))) {\n                    i++;\n                }\n                s.insert(s.begin() + i, s[pocetak]);\n                s.insert(s.begin() + i+1, 'a');\n                s.insert(s.begin() + i+2, 'y');\n                s.erase(s.begin()+pocetak);\n\t\t\t\ti+=2;\n            }//anasDay ejay ijeplay anday\n               \n        }\n    }\n    else {\n        int t(0);\n\n        for (int i = 0; i < rijeci.size(); i++) {\n            if (ima_li_ne_slova(rijeci[i]) == true) { throw std::domain_error(\"Nekorektan izbor rijeci\"); }\n            if (Rijec_trazi2(s,rijeci[i]) != -1) {\n\n                while (Rijec_trazi2(s,rijeci[i]) != -1) {\n                    t = Rijec_trazi2(s,rijeci[i]); // provjeravamo da li se nalazi i vracamo poziciju\n                    s.insert(s.begin() + t + rijeci[i].size(), s[t]);\n                    s.insert(s.begin() + t + rijeci[i].size()+1, 'a');\n                    s.insert(s.begin() + t + rijeci[i].size()+2, 'y');\n                    s.erase(s.begin()+t);\n\n                }\n            }\n        }\n    }\n    return s;\n}\n\nint main()\n{\n\n\n    std::string recenica {};\n    std::vector<std::string> rijeci {};\n\n    std::cout << \"Unesite recenicu: \";\n    std::getline(std::cin, recenica);\n\n    std::cout << \"Unesite fraze: \";\n\n    std::string rijec{\"\"};\n\n    while(1){\n      std::getline(std::cin,rijec);\n      if(rijec.empty())break;\n      rijeci.push_back(rijec);\n\n\t}\n\ttry {\n    std::cout << \"Recenica nakon PigLatin transformacije: \" << IzmijeniUPigLatin(recenica,rijeci) <<std::endl;\n\t}\n\tcatch(std::domain_error izuzetak){\n\t\tstd::cout << \"Izuzetak: \" << izuzetak.what() << std::endl;\n\t}\n\tstd::cout << \"Recenica nakon obrtanja fraza: \" << ObrniFraze(recenica,rijeci);\n    return 0;\n}\n"
    },
    "148": {
        "label": "1",
        "student1547": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 5\n#include <iostream>\n#include <string>\n#include <vector>\n#include <stdexcept>\n#include <set>\n\nusing std::cout;\nusing std::cin;\n\nbool DobarZnak(char x){\n    return ((x>='0' and x<='9') or(x>='A' and x<='Z') or (x>='a' and x<='z'));\n}\n\n\nstruct Dijete { \n    std::string ime;\n    Dijete *sljedeci;\n};\n\nstd::vector<std::set<std::string>> Razvrstavanje (std::vector<std::string> v, int n){\n    if(n<1 or n>v.size()) throw std::logic_error (\"Razvrstavanje nemoguce\");\n    std::vector<std::set<std::string>> rez(n);\n    if(v.size()==0) return rez;\n    int k(v.size()/n);\n    int mod(v.size()%n);\n    std::vector<int> br_el_skupa(n);\n    for(int i=0; i<n; i++){\n        if(i<mod) br_el_skupa[i]=k+1;\n        else br_el_skupa[i]=k;\n    }\n    Dijete* pocetak(nullptr), *prethodni;\n    for(int i=0;i<v.size();i++) {\n        Dijete *novi(new Dijete);\n        novi->ime = v[i];\n        novi->sljedeci = nullptr;\n        if(!pocetak) pocetak = novi;\n        else prethodni->sljedeci= novi;\n        prethodni = novi;\n    }\n    prethodni->sljedeci=pocetak;\n    int brojac(0), i(0);\n    auto it(pocetak);\n    while(i<n){\n        rez[i].insert(it->ime);\n        brojac++;\n        if(brojac==br_el_skupa[i]){\n            i++;\n            brojac=0;\n        }\n        if(i==n){\n            delete it;\n            continue;\n        }\n        int velicina_imena(0);\n        for(int j=0; j<(it->ime).size(); j++){\n            if(DobarZnak((it->ime)[j])) velicina_imena++;\n        }\n        auto cuva_za_brisanje(it);\n        it=it->sljedeci;\n        prethodni->sljedeci=it;\n        delete cuva_za_brisanje;\n        for(int j=0; j<velicina_imena-1; j++){\n            it=it->sljedeci;\n            prethodni=prethodni->sljedeci;\n        }\n    }\n    return rez;\n}\n\nint main ()\n{\n    int n;\n    cout << \"Unesite broj djece: \";\n    cin >> n;\n    cin.ignore(10000, '\\n');\n    cout <<\"Unesite imena djece: \\n\";\n    std::vector<std::string> imena(n);\n    for(int i=0; i<n; i++){\n        std::getline(cin, imena[i]);\n    }\n    int x;\n    cout << \"Unesite broj timova: \";\n    cin >> x;\n    try{\n    std::vector<std::set<std::string>> rez(Razvrstavanje(imena, x));\n    for(int i=0; i<x; i++){\n        cout << \"Tim \"<< i+1 << \": \";\n        int brojac(0);\n        for(auto a: rez[i]){ \n            if(brojac==rez[i].size()-1){\n                cout << a;\n                break;\n            } \n            cout << a << \", \";\n            brojac++;\n        }    \n        cout << std::endl;\n    }\n} catch( std::logic_error izuzetak){\n        std::cout << \"Izuzetak: \" << izuzetak.what();\n    }\n\treturn 0;\n}",
        "student4473": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 5\n/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include <vector>\n#include <set>\n#include <stdexcept>\n#include <iterator>\n#include <string>\nbool DaLiJeSlovo(char c){\n    if((c>='A' and c<='Z') or (c>='0' and c<='9') or (c>='a' and c<='z'))\n        return 1;\n    else return 0;\n}\nstruct Dijete {\n    std::string ime;\n    Dijete *sljedeci;\n};\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> osobe, int n){\n    std::vector<std::set<std::string>> glavni(n);\n    if(n<1 or n>osobe.size()) throw std::logic_error(\"Razvrstavanje nemoguce\");\n    //racunanje osoba u timovima\n    int m(osobe.size()/n);\n    //std::cout<<m;\n    int mm(osobe.size()%n);\n    std::vector<int> timovi(n);\n    for(int i=0;i<n;i++){\n        if(i<mm) timovi[i]=m+1;\n        else timovi[i]=m;\n    }\n    Dijete* pocetak(nullptr),*prethodni;\n    for(int i=0;i<osobe.size();i++){\n        Dijete *novi(new Dijete);\n        novi->ime=osobe[i];\n        novi->sljedeci=nullptr;\n        if(!pocetak) pocetak=novi;\n        else prethodni->sljedeci=novi;\n        prethodni=novi;\n    }\n    prethodni->sljedeci=pocetak;\n    int br(0),j(0);\n    auto it(pocetak);\n    while(j!=n-1){ \n        glavni[j].insert(it->ime);\n        br++;\n        if(br==timovi[j]) {j++;br=0;}\n        int duzina=0;\n        for(int k=0;k<(it->ime).size();k++){\n            if(DaLiJeSlovo((it->ime)[k])) duzina++;\n        }\n        auto imam(it);\n        it=it->sljedeci;\n        prethodni->sljedeci=it;\n        delete imam;\n        for(int i=0;i<duzina-1;i++){\n            it=it->sljedeci;\n            prethodni=prethodni->sljedeci;\n        }\n    }\n     for(int i=0;i<timovi[j];i++){\n         glavni[j].insert(it->ime);\n         if(j==timovi[j]-1){ delete it;continue;}\n         auto imam(it);\n         it=it->sljedeci;\n         delete imam;\n     }   \n    return glavni;\n}\nint main ()\n{   std::cout << \"Unesite broj djece: \" ;\n    int n;\n    std::cin >> n;\n    std::cin.ignore(1000, '\\n');\n    std::cout << \"Unesite imena djece: \" << std::endl;\n    std::vector<std::string> djeca(n);\n    for(int i=0;i<n;i++) std::getline(std::cin, djeca[i]);\n    std::cout << \"Unesite broj timova: \" ;\n    int brtimova;\n    std::cin >> brtimova;\n    std::vector<std::set<std::string>> rjesenje;\n    \n    try{\n        rjesenje=(Razvrstavanje(djeca,brtimova));\n    }\n    catch(std::logic_error err){\n        std::cout<<\"Izuzetak: \"<<err.what();\n    }\n    for(int i=0; i<rjesenje.size(); i++){\n        std::cout<<\"Tim \"<<i+1<<\": \";\n        int br(0);\n        for(auto x: rjesenje[i]) {\n            if(br==rjesenje[i].size()-1){ std::cout<<x; break;}\n            std::cout << x << \", \";\n            br++;}\n    std::cout << std::endl;\n    }\n\treturn 0;\n}"
    },
    "149": {
        "label": "0",
        "student1640": "#include <stdio.h>\n\nint main() {\n\tint n;\n\tint i,j;\n\tint jp=0, ip=0;\n\tdo\n\t{\n\t\tprintf (\"Unesite broj N: \");\n\t\tscanf (\"%d\", &n);\n\t\tif (n%4!=0 || n<8)\n\t\tprintf (\"Neispravno N!\\n\");\n\t}\n\twhile (n%4!=0 || n<8);\n\tprintf (\"\\n\");\n\tfor (i=0; i<(n/2); i++)\n\t{\n\t\tfor (j=0; j<n; j++)\n\t\t{\n\t\t\tif (j<(n/2))\n\t\t\t{\n\t\t\t\tif (i==j) printf (\"\\\\\");\n\t\t\t\telse if (j+i==(n/2)-1)\n\t\t\t\tprintf (\"/\");\n\t\t\t\telse printf (\" \");\n\t\t\t}\n\t\t\tif (j>=(n/2))\n\t\t\t{\n\t\t\t\tjp=j-(n/2);\n\t\t\t\tif ((i==0 && jp==((n/2)-1)) || (i==0 && jp==0) || (i==((n/2)-1) && jp==0) || (i==((n/2)-1) && jp==((n/2)-1))) printf (\"+\");\n\t\t\t\telse if (i==0 || i==((n/2)-1)) printf (\"-\");\n\t\t\t\telse if (jp==0 || jp==((n/2)-1)) printf (\"|\");\n\t\t\t\telse printf (\" \");\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tprintf (\"\\n\");\n\t\t\n\t}\n\tfor (i=0;i<(n/2);i++)\n\t{\n\t\tfor (j=0;j<n; j++)\n\t\t{\n\t\t\t\n\t\t\tif (j<(n/2))\n\t\t\t{\n\t\t\t\tjp=j;\n\t\t\t\tif ((i==0 && jp==((n/2)-1)) || (i==0 && jp==0) || (i==((n/2)-1) && jp==0) || (i==((n/2)-1) && jp==((n/2)-1) )) printf (\"+\");\n\t\t\t\telse if (i==0 || i==((n/2)-1)) printf (\"-\");\n\t\t\t\telse if (jp==0 || jp==((n/2)-1)) printf (\"|\");\n\t\t\t\telse printf (\" \");\n\t\t\t}\n\t\t\tif (j>=(n/2))\n\t\t\t{\n\t\t\t\tjp=j-(n/2);\n\t\t\t\tip=i;\n\t\t\t\tif ((jp<((n/4)-1) || jp>(n/4)) && (ip<((n/4)-1) || ip>(n/4))) printf (\" \");\n\t\t\t\tif ((jp==((n/4)-1) || jp== (n/4)) && (ip< ((n/4)-1) || ip >(n/4))) printf (\"|\");\n\t\t\t\tif ((jp<((n/4)-1) || jp>(n/4)) && (ip== ((n/4)-1) || ip == (n/4))) printf (\"-\");\n\t\t\t\tif ((jp== ((n/4)-1) || jp== (n/4)) && (ip==((n/4)-1) || ip==(n/4))) printf (\"+\");\n\t\t\t\t\n\t\t\t}\n\t\t\t}\n\t\t\tprintf (\"\\n\");\n\t\t}\n\t\treturn 0;\n\t}\n",
        "student5970": "#include<stdio.h>\nint main()\n{\nint n,i,j; \n\tdo  { \n\t    printf(\"Unesite broj N: \");\n\t    scanf(\"%d\",&n);\n\t\t    if(n%4!=0 || n<8)\n\t\t    printf(\"Neispravno N!\\n\");\n        }while(n%4!=0 || n<8);\n\t\tprintf(\"\\n\");\nfor(i=0;i<n;i++)\n{\n\tfor(j=0;j<n;j++)\n\t{\n\t//prva figura//\n\t\tif(i<=n/2-1 && j<=n/2-1)\n\t\t{\n\t\t\tif(i==j) printf(\"\\\\\");\n\t\t\telse if(i==n/2-j-1) printf(\"/\");\n\t\t\telse printf(\" \");\n\t\t}\n\t//druga figura//\n\t\tif(i<=n/2-1 && j>n/2-1)\n\t    { \n\t \t\tif(i==0 && (j==n/2 || j==n-1)) printf(\"+\");\n\t \t\telse if(i==0) printf(\"-\");\n\t \t\telse if(i!=0 && i<n/2-1 && (j==n/2 || j==n-1)) printf(\"|\");\n\t \t\telse if(i==n/2-1 && (j==n/2 || j==n-1)) printf(\"+\");\n\t \t\telse if(i==n/2-1) printf(\"-\");\n\t \t\telse printf(\" \");\n\t    }\n\t    //treca figura//\n\t    if(i>n/2-1 && j<=n/2-1)\n\t     \t{\n\t     \t\tif(i==n/2 && (j==0 || j==n/2-1))printf(\"+\");\n\t     \t\telse if(i==n/2) printf(\"-\");\n\t     \t\telse if(i!=n/2 && i<n-1 && (j==n/2-1 || j==0)) printf(\"|\");\n\t     \t\telse if(i==n-1 && (j==n/2-1 || j==0)) printf(\"+\");\n\t     \t\telse if(i==n-1) printf(\"-\");\n\t     \t\telse printf(\" \");\n\t     \t}\n\t    //cetvrta figura//\t \t\n\t    if (i>n/2-1 && j>n/2-1)\n\t  \t\t{\n\t  \t\t\tif(j==n/2+n/4-1 && i==n/2+n/4-1  || j==n/2+n/4 && i==n/2+n/4 || j==n/2+n/4 && i==n/2+n/4-1 || j==n/2+n/4-1 && i==n/2+n/4)  printf(\"+\");\n\t  \t\t\telse if(j==n/2+n/4 || j==n/2+n/4-1) printf(\"|\");\n\t         \telse if(i==n/2+n/4-1 || i==n/2+n/4) printf(\"-\");\n\t         \telse if(i==n/2+n/4-1 && j==n/2+n/4)printf(\"-\");\n\t  \t\t\telse if(i==n/2+n/4-1 && j==n/2+n/4-1)printf(\"-\");\n\t  \t\t\telse printf(\" \");\n\t  \t\t}\n\t}\n\tprintf(\"\\n\");\n }\n return 0;\n}"
    },
    "150": {
        "label": "1",
        "student5383": "#include <stdio.h>\n#include <math.h>\n#define e 0.001\n\nint main() {\n\tdouble a, b, c, x1, x2, D, j=0, k=0, temp;\n\t\n\tprintf(\"Unesite koeficjente a, b i c: \");\n\tscanf(\"%lf, %lf, %lf\", &a, &b, &c);\n\t\n\tD = pow(b,2) - (4 * a *c);\n\t\n\tif(D < 0) \n\tprintf(\"Rjesenja su imaginarni brojevi.\\n\");\n\t\n\telse if(D > 0){\n\t\tx1 = (-b - sqrt(D))/(2 * a);\n\t\tx2 = (-b + sqrt(D))/(2 * a);\n\t\t\n\tif(x1 > x2){\n\t\ttemp = x1;\n\t\tx1 = x2;\n\t\tx2 = temp;\n\t}\n\t\n\tdo{\n\t\tprintf(\"Unesite rjesenje x1: \");\n\t\tscanf(\"%lf\", &j);\n\t\t\n\t\tif(fabs(j - x1) < e)\n\t\tprintf(\"Tacno\\n\");\n\t\t\n\t\telse if (fabs(j - x1) < 0.1 && j < x1)\n\t\tprintf(\"Priblizno manje\\n\");\n\t\t\n\t\telse if (fabs(j - x1) <0.1 && j > x1)\n\t\tprintf(\"Priblizno vece\\n\");\n\t\t\n\t\telse if (j > x1)\n\t\tprintf(\"Vece\\n\");\n\t\t\n\t\telse if (j < x1)\n\t\tprintf(\"Manje\\n\");\n\t\t\t}\n\t\t\t\n\t\t\twhile(fabs(j - x1) >= e);\n\t\t\t\n\t\t\tdo{\n\t\t\t\tprintf(\"Unesite rjesenje x2: \");\n\t\t\t\tscanf(\"%lf\", &k);\n\t\t\t\t\n\t\t\t\tif(fabs(k - x2) < e)\n\t\t\t\tprintf(\"Tacno\\n\");\n\t\t\t\t\n\t\t\t\telse if(fabs(k - x2) < 0.1 && k < x2)\n\t\t\t\tprintf(\"Priblizno manje\\n\");\n\t\t\t\t\n\t\t\t\telse if(fabs(k - x2) < 0.1 && k > x2)\n\t\t\t\tprintf(\"Priblizno vece\\n\");\n\t\t\t\t\n\t\t\t\telse if(k > x2)\n\t\t\t\tprintf(\"Vece\\n\");\n\t\t\t\t\n\t\t\t\telse if(k < x2)\n\t\t\t\tprintf(\"Manje\\n\");\n\t\t\t}\n\t\t\twhile (fabs(k - x2) >= e); \n\t}\n\treturn 0;\n}\n",
        "student8142": "#include <stdio.h>\n#include <math.h>\n#define e 0.001\nint main() {\n\t\n\tdouble a,b,c,x1,x2,D,j=0,k=0,temp;\n\t\n\tprintf(\"Unesite koeficijente a, b i c: \");\n\tscanf(\"%lf %lf %lf\", &a, &b, &c);\n\t\n\tD=pow(b,2)-(4*a*c);\n\t\n\tif(D<0) printf(\"Rjesenja su imaginarni brojevi.\\n\");\n\telse if(D>=0)\n\t{\n\t\tx1=(-b-sqrt(D))/(2*a);\n\t\tx2=(-b+sqrt(D))/(2*a);\n\t\n\tif(x1>x2)\n\t{\n\t\ttemp=x1;\n\t\tx1=x2;\n\t\tx2=temp;\n\t}\n\t\n\tdo\n\t{\n\tprintf(\"Unesite rjesenje x1: \");\n\tscanf(\"%lf\", &j);\n\t\n\tif(fabs(j-x1)<e)\n\t\tprintf(\"Tacno\\n\");\n\telse if(fabs(j-x1)<0.1&&j<x1) \n\t\tprintf(\"Priblizno manje\\n\");\n\telse if(fabs(j-x1)<0.1&&j>x1)\n\t\tprintf(\"Priblizno vece\\n\");\n\telse if(j>x1)\n\t\tprintf(\"Vece\\n\");\n\telse if(j<x1)\n\t\tprintf(\"Manje\\n\");\n\t}while(fabs(j-x1)>=e);\n\t\n\tdo\n\t{\n\tprintf(\"Unesite rjesenje x2: \");\n\tscanf(\"%lf\", &k);\n\t\n\tif(fabs(k-x2)<e)\n\t\tprintf(\"Tacno\\n\");\n\telse if(fabs(k-x2)<0.1&&k<x2) \n\t\tprintf(\"Priblizno manje\\n\");\n\telse if(fabs(k-x2)<0.1&&k>x2)\n\t\tprintf(\"Priblizno vece\\n\");\n\telse if(k>x2)\n\t\tprintf(\"Vece\\n\");\n\telse if(k<x2)\n\t\tprintf(\"Manje\\n\");\n\t}while(fabs(k-x2)>=e);\n\t}\n\t\n\n\t\n\treturn 0;\n}\n"
    },
    "151": {
        "label": "0",
        "student8089": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int x,a,c,R=1,broj=0;\n\tprintf(\"Unesite broj: \");\n\tscanf(\"%d\",&x);\n\tx=abs(x);\n\tif (x/10==0){\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\twhile (x!=0){\n\t  a=x%10;\n\t  x/=10;\n\t  if(x==0)break;\n\t  c=x%10;\n\t  broj+=abs(a-c)*R;\n\t  R*=10;\n\t  \n\t  \n\t   \n\t}\n\t\n\tprintf(\"%d\",broj);\nreturn 0;\n}",
        "student8124": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\n    long novi_broj = 0, shift = 1;\n    int  broj, cifra1, cifra2;\n\n    printf(\"Unesite broj: \");\n    scanf(\"%i\", &broj);\n    \n    if (broj < 0) \n      broj = abs(broj);\n\n    while (broj > 9) {\n       cifra1 = broj % 10;\n       broj = broj / 10;\n       cifra2 = broj % 10;\n       novi_broj += shift * abs(cifra2-cifra1);\n       shift *= 10;\n    };\n\n    printf(\"%i\", novi_broj);\n\n    return 0;\n}"
    },
    "152": {
        "label": "1",
        "student2676": "#include <iostream>\n#include <vector>\n#include <deque>\n#include <stdexcept>\n#include <iomanip>\n\nusing std::cin;\nusing std::cout;\nusing std::vector;\nusing std::deque;\n\nenum class SmjerKretanja\n{\n    NaprijedNazad, NazadNaprijed, GoreDolje, DoljeGore, LijevoDesno, DesnoLijevo\n};\n\ntemplate <typename tip>\nauto IzdvojiDijagonale3D(tip kont, SmjerKretanja s) -> typename std::remove_reference<decltype(kont.at(0))>::type\n{\n    for(int i=0;i<kont.size();i++)\n    {\n        if(kont.at(i).size()!=kont.at(0).size()) throw std::domain_error(\"Plohe nemaju isti broj redova\");\n        for(int j=0;j<kont.at(0).size();j++)\n        {\n            if(kont.at(i).at(j).size()!=kont.at(0).at(0).size()) throw std::domain_error(\"Redovi nemaju isti broj elemenata\");\n        }\n    }\n    if(!kont.size() || !kont.at(0).size() || !kont.at(0).at(0).size())\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2;\n        return d2;\n    }\n    if(s==SmjerKretanja::NaprijedNazad)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.size());\n        int dub;\n        if(kont.at(0).size()<kont.at(0).at(0).size()) dub=kont.at(0).size(); else dub=kont.at(0).at(0).size();\n        for(int i=0;i<kont.size();i++)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(i).push_back(kont.at(i).at(j).at(j));\n            }\n        }\n        return d2;\n    }\n    if(s==SmjerKretanja::NazadNaprijed)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.size());\n        int dub;\n        if(kont.at(0).size()<kont.at(0).at(0).size()) dub=kont.at(0).size(); else dub=kont.at(0).at(0).size();\n        for(int i=kont.size()-1;i>=0;i--)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(kont.size()-1-i).push_back(kont.at(i).at(j).at(kont.at(0).at(0).size()-1-j));\n            }\n        }\n        return d2;\n    }\n    if(s==SmjerKretanja::GoreDolje)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.at(0).size());\n        int dub;\n        if(kont.size()<kont.at(0).at(0).size()) dub=kont.size(); else dub=kont.at(0).at(0).size();\n        for(int i=0;i<kont.at(0).size();i++)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(i).push_back(kont.at(kont.size()-1-j).at(i).at(j));\n            }\n        }\n        return d2;\n    }\n    if(s==SmjerKretanja::DoljeGore)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.at(0).size());\n        int dub;\n        if(kont.size()<kont.at(0).at(0).size()) dub=kont.size(); else dub=kont.at(0).at(0).size();\n        for(int i=kont.at(0).size()-1;i>=0;i--)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(kont.at(0).size()-1-i).push_back(kont.at(kont.size()-1-j).at(i).at(kont.at(0).at(0).size()-1-j));\n            }\n        }\n        return d2;\n    }\n    if(s==SmjerKretanja::LijevoDesno)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.at(0).at(0).size());\n        int dub;\n        if(kont.at(0).size()<kont.size()) dub=kont.at(0).size(); else dub=kont.size();\n        for(int i=0;i<kont.at(0).at(0).size();i++)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(i).push_back(kont.at(kont.size()-1-j).at(j).at(i));\n            }\n        }\n        return d2;\n    }\n    if(s==SmjerKretanja::DesnoLijevo)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.at(0).at(0).size());\n        int dub;\n        if(kont.at(0).size()<kont.size()) dub=kont.at(0).size(); else dub=kont.size();\n        for(int i=kont.at(0).at(0).size()-1;i>=0;i--)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(kont.at(0).at(0).size()-1-i).push_back(kont.at(j).at(j).at(i));\n            }\n        }\n        return d2;\n    }\n    typename std::remove_reference<decltype(kont.at(0))>::type d2;\n    return d2;\n}\n\nint main ()\n{\n    int x, y, z, si;\n    SmjerKretanja s[6]={SmjerKretanja::NaprijedNazad, SmjerKretanja::NazadNaprijed, SmjerKretanja::GoreDolje, SmjerKretanja::DoljeGore, SmjerKretanja::LijevoDesno, SmjerKretanja::DesnoLijevo};\n    cout << \"Unesite dimenzije (x y z): \";\n    cin >> x >> y >> z;\n    if(x<=0 || y<=0 || z<=0)\n    {\n        cout << \"Neispravne dimenzije kontejnera!\\n\";\n        return 0;\n    }\n    vector<deque<deque<int>>> v(x, deque<deque<int>>(y, deque<int>(z)));\n    cout << \"Unesite elemente kontejnera:\\n\";\n    for(int i=0;i<x;i++)\n    {\n        for(int j=0;j<y;j++)\n        {\n            for(int k=0;k<z;k++)\n            {\n                cin >> v.at(i).at(j).at(k);\n            }\n        }\n    }\n    cout << \"Unesite smjer kretanja [0 - 5]: \";\n    cin >> si;\n    if(si<0 || si>5)\n    {\n        cout << \"Smjer kretanja nije ispravan!\\n\";\n        return 0;\n    }\n    try\n    {\n        deque<deque<int>> vd=IzdvojiDijagonale3D(v, s[si]);\n        if(s[si]==SmjerKretanja::NaprijedNazad) cout << \"NaprijedNazad:\\n\";\n        if(s[si]==SmjerKretanja::NazadNaprijed) cout << \"NazadNaprijed:\\n\";\n        if(s[si]==SmjerKretanja::GoreDolje) cout << \"GoreDolje:\\n\";\n        if(s[si]==SmjerKretanja::DoljeGore) cout << \"DoljeGore:\\n\";\n        if(s[si]==SmjerKretanja::LijevoDesno) cout << \"LijevoDesno:\\n\";\n        if(s[si]==SmjerKretanja::DesnoLijevo) cout << \"DesnoLijevo:\\n\";\n        for(int i=0;i<vd.size();i++)\n        {\n            for(int j=0;j<vd.at(0).size();j++)\n            {\n                cout.width(4);\n                cout << vd.at(i).at(j);\n            }\n            cout << \"\\n\";\n        }\n    }\n    catch(std::domain_error ero)\n    {\n        cout << ero.what();\n    }\n    return 0;\n}",
        "student4495": "#include <iostream>\n#include <vector>\n#include <deque>\n#include <stdexcept>\n#include <type_traits>\n#include <iomanip>\n\nenum class SmjerKretanja {\n NaprijedNazad, NazadNaprijed, GoreDolje, DoljeGore, LijevoDesno, DesnoLijevo\n};\n\ntypedef std::deque<std::vector<int>> matrica;\n\ntemplate <typename kontejner3d>                                                      // size ,at ,push_back //\nauto IzdvojiDijagonale3D (kontejner3d kont, SmjerKretanja smjer) -> typename std::remove_reference<decltype(kont.at(0))>::type{\n    \n   if(kont.size()==0||kont.at(0).size()==0 || kont.at(0).at(0).size()==0){\n       typename std::remove_reference<decltype(kont.at(0))>::type kont2;\n       return kont2;\n   }\n   \n    for(int i=0;i<kont.size();i++){\n     for(int j=0;j<kont.at(0).size();j++){  \n        if(kont.at(i).at(j).size()!=kont.at(0).at(0).size()) throw std::domain_error (\"Redovi nemaju isti broj elemenata\");\n    }  \n    }\n    for(int i=0;i<kont.size();i++){\n        if(kont.at(i).size()!=kont.at(0).size()) throw std::domain_error (\"Plohe nemaju isti broj redova\");\n    }\n    \n    switch(smjer){\n        case SmjerKretanja::NaprijedNazad:\n        {\n            typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.size());\n            int min;\n            if(kont.at(0).size()<kont.at(0).at(0).size())\n                 min=kont.at(0).size();\n                else  min=kont.at(0).at(0).size();\n            \n            for(int i=0;i<kont.size();i++){\n                for(int j=0;j<min;j++){\n                    kont2.at(i).push_back(kont.at(i).at(j).at(j));\n                }\n                \n            }\n            return kont2;\n    }    \n       case SmjerKretanja::NazadNaprijed:{\n            typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.size());\n            int min;\n                if(kont.at(0).size()<kont.at(0).at(0).size())\n                 min=kont.at(0).size();\n                else  min=kont.at(0).at(0).size();\n        \n            for(int i=kont.size()-1;i>=0;i--){\n                for(int j=0;j<min;j++){\n                    kont2.at(kont.size()-1-i).push_back(kont.at(i).at(j).at(kont.at(0).at(0).size()-1-j));\n                }\n                \n                \n            }\n            return kont2;\n            \n       }\n        case SmjerKretanja::GoreDolje:\n        {\n          typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.at(0).size());\n            int min;\n             if(kont.size()<kont.at(0).at(0).size())\n                 min=kont.size();\n                else  min=kont.at(0).at(0).size();\n            \n            \n            for(int i=0;i<kont.at(0).size();i++){\n                for(int j=0;j<min;j++){\n                    kont2.at(i).push_back(kont.at(kont.size()-1-j).at(i).at(j));\n                }\n                \n                \n            }\n            return kont2;\n            \n       }\n     \n      case SmjerKretanja::DoljeGore:{\n       typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.at(0).size());\n            int min;\n             if(kont.size()<kont.at(0).at(0).size())\n                 min=kont.size();\n                else  min=kont.at(0).at(0).size();\n            \n            \n            for(int i=kont.at(0).size()-1;i>=0;i--){\n                for(int j=0;j<min;j++){\n                    kont2.at(kont.at(0).size()-1-i).push_back(kont.at(kont.size()-1-j).at(i).at(kont.at(0).at(0).size()-j-1));\n                }\n                \n                \n            }\n            return kont2;\n      }\n      case SmjerKretanja::LijevoDesno:\n       {\n          typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.at(0).at(0).size());\n            int min;\n             if(kont.at(0).size()<kont.size())\n                 min=kont.at(0).size();\n                else  min=kont.size();\n            \n            \n            for(int i=0;i<kont.at(0).at(0).size();i++){\n                for(int j=0;j<min;j++){\n                    kont2.at(i).push_back(kont.at(kont.size()-1-j).at(j).at(i));\n                }\n                \n                \n            }\n            return kont2;\n            \n       }\n        case SmjerKretanja::DesnoLijevo:{\n         typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.at(0).at(0).size());\n            int min;\n             if(kont.at(0).size()<kont.size())\n                 min=kont.at(0).size();\n                else  min=kont.size();\n            \n            \n            for(int i=kont.at(0).at(0).size()-1;i>=0;i--){\n                for(int j=0;j<min;j++){\n                    kont2.at(kont.at(0).at(0).size()-1-i).push_back(kont.at(j).at(j).at(i));\n                }\n                \n                \n            }\n            return kont2;\n        }}\n    \n}\n\n\n\n\nint main ()\n{\n    try{\n    std::cout <<\"Unesite dimenzije (x y z): \";\n\n    int x,y,z;\n    std::cin >> x >> y >> z;\n    if(x<0 || y<0 || z <0) throw std::domain_error (\"Neispravne dimenzije kontejnera!\");\n    \n    std::cout << \"Unesite elemente kontejnera: \" << std::endl;\n    std::deque<matrica> kont(x,matrica(y,std::vector<int> (z))) ;\n    for(int i=0; i<x;i++){\n        for(int j=0;j<y;j++){\n            for(int k=0;k<z;k++){\n                    std::cin >> kont.at(i).at(j).at(k);\n            }\n          \n        }\n    }\n    \n    std::cout << \"Unesite smjer kretanja [0 - 5]: \";\n    int smjer;\n    std::cin >> smjer;\n    if(smjer <0 || smjer > 5) throw std::domain_error (\"Smjer kretanja nije ispravan!\") ;\n    \n\tstd::vector<SmjerKretanja> Smjerovi1{SmjerKretanja::NaprijedNazad,  SmjerKretanja::NazadNaprijed, SmjerKretanja::GoreDolje, SmjerKretanja::DoljeGore ,SmjerKretanja::LijevoDesno,SmjerKretanja::DesnoLijevo} ;\n    std::vector<std::string> Smjerovi2{ \"NaprijedNazad\", \"NazadNaprijed\", \"GoreDolje\", \"DoljeGore\", \"LijevoDesno\",\"DesnoLijevo\"} ;\n    \n    \n\tmatrica Dijagonale(IzdvojiDijagonale3D(kont,Smjerovi1[smjer])) ;\n\tstd::cout << Smjerovi2[smjer] << \": \" << std::endl;\n\tfor(int i=0;i<Dijagonale.size();i++){\n\t    for(int j=0;j<Dijagonale.at(0).size();j++)\n\t    std::cout << std::setw(4) << std::right << Dijagonale.at(i).at(j);\n\t\n\t    std::cout << std::endl;\n\t}   \n\t\n    }\n    catch(std::domain_error gres){\n        std::cout << gres.what()<< std::endl;\n    }\n    return 0;\n}"
    },
    "153": {
        "label": "0",
        "student3624": "#include <stdio.h>\n#define hamburger1  3.30\n#define hamburger2  3.00\n#define hamburger3  5.00\n#define pizza1  6.80\n#define pizza2  8.00\n#define pizza3  5.30\n#define cevapi1 5.00\n#define cevapi2 3.90\n#define cevapi3 6.00\n\nint main() \n{\n\tchar T, B, M, novi_red;\n\tdouble popust1, popust2, popust3, ukupna1, ukupna2, ukupna3;\n\tprintf (\"Unesite jelo za Tarika: \");\n\tscanf (\"%c\", &T);\n\tscanf (\"%c\", &novi_red);\n\tprintf (\"Unesite jelo za Bojana: \");\n\tscanf (\"%c\", &B);\n\tscanf (\"%c\", &novi_red);\n\tprintf (\"Unesite jelo za Mirzu: \");\n\tscanf (\"%c\", &M);\n\tscanf (\"%c\", &novi_red);\n\t\n\t//popust1 = 0.1 * hamburger1; printf (\"popust1 = %g\\n\", popust1);\n\t//popust2 = 0.1 * pizza1; printf (\"popust2 = %g\\n\", popust2);\n\t//popust3 = 0.1 * cevapi1; printf (\"popust3 = %g\\n\", popust3);\n\t\n\tif (T == 'H' && B == 'H' && M == 'H') \n\t{\n\t\tukupna1 = hamburger1 + hamburger1 + hamburger1; \n\t\tukupna2 = hamburger2 + hamburger2 + hamburger2;\n\t\tukupna3 = hamburger3 + hamburger3 + hamburger3;\n\t\tpopust1 = (0.1 * hamburger1) * 3;\n\t}\n\telse if (T == 'P' && B == 'P' && M == 'P')\n\t{\n\t\tukupna1 = pizza1 + pizza1 + pizza1;\n\t\tukupna2 = pizza2 + pizza2 + pizza2;\n\t\tukupna3 = pizza3 + pizza3 + pizza3;\n\t\tpopust2 = (0.1 * pizza1) * 3;\n\t}\n\telse if (T == 'C' && B == 'C' && M == 'C')\n\t{\n\t\tukupna1 = cevapi1 + cevapi1 + cevapi1;\n\t\tukupna2 = cevapi2 + cevapi2 + cevapi2;\n\t\tukupna3 = cevapi3 + cevapi3 + cevapi3;\n\t\tpopust3 = (0.1 * cevapi1) * 3;\n\t}\n\telse if (T == 'H' && B == 'P' && M == 'P')\n\t{\n\t\tukupna1 = hamburger1 + pizza1 + pizza1; \n\t\tukupna2 = hamburger2 + pizza2 + pizza2;\n\t\tukupna3 = hamburger3 + pizza3 + pizza3;\n\t}\n\telse if (T == 'H' && B == 'H' && M == 'P')\n\t{\n\t\tukupna1 = hamburger1 + hamburger1 + pizza1;\n\t\tukupna2 = hamburger2 + hamburger2 + pizza2;\n\t\tukupna3 = hamburger3 + hamburger3 + pizza3;\n\t}\n\telse if (T == 'C' && B == 'H' && M == 'P')\n\t{\n\t\tukupna1 = cevapi1 + hamburger1 + pizza1; \n\t\tukupna2 = cevapi2 + hamburger2 + pizza2;\n\t\tukupna3 = cevapi3 + hamburger3 + pizza3;\n\t}\n\telse if (T == 'C' && B == 'P' && M == 'C')\n\t{\n\t\tukupna1 = cevapi1 + pizza1 + cevapi1;\n\t\tukupna2 = cevapi2 + pizza2 + cevapi2;\n\t\tukupna3 = cevapi3 + pizza3 + cevapi3;\n\t}\n\telse if (T == 'P' && B == 'P' && M == 'C')\n\t{\n\t\tukupna1 = pizza1 + pizza1 + cevapi1;\n\t\tukupna2 = pizza2 + pizza2 + cevapi2;\n\t\tukupna3 = pizza3 + pizza3 + cevapi3;\n\t}\n\telse if (T == 'H' && B == 'C' && M == 'C')\n\t{\n\t\tukupna1 = hamburger1 + cevapi1 + cevapi1;\n\t\tukupna2 = hamburger2 + cevapi2 + cevapi2;\n\t\tukupna3 = hamburger3 + cevapi3 + cevapi3;\n\t}\n\telse if (T == 'C' && B == 'H' && M == 'H')\n\t{\n\t\tukupna1 = cevapi1 + hamburger1 + hamburger1;\n\t\tukupna2 = cevapi2 + hamburger2 + hamburger2;\n\t\tukupna3 = cevapi3 + hamburger3 + hamburger3;\n\t}\n\telse if (T == 'H' && B == 'P' && M == 'P')\n\t{\n\t\tukupna1 = hamburger1 + pizza1 + pizza1;\n\t\tukupna2 = hamburger2 + pizza2 + pizza2;\n\t\tukupna3 = hamburger3 + pizza3 + pizza3;\n\t}\n\telse if (T == 'H' && B == 'H' && M == 'P')\n\t{\n\t\tukupna1 = hamburger1 + hamburger1 + pizza1;\n\t\tukupna2 = hamburger2 + hamburger2 + pizza2;\n\t\tukupna3 = hamburger3 + hamburger3 + pizza3;\n\t}\n\telse if (T == 'P' && B == 'P' && M == 'H')\n\t{\n\t\tukupna1 = pizza1 + pizza1 + hamburger1;\n\t\tukupna2 = pizza2 + pizza2 + hamburger2;\n\t\tukupna3 = pizza3 + pizza3 + hamburger3;\n\t}\n\telse if (T == 'P' && B == 'H' && M == 'H')\n\t{\n\t\tukupna1 = pizza1 + hamburger1 + hamburger1;\n\t\tukupna2 = pizza2 + hamburger2 + hamburger2;\n\t\tukupna3 = pizza3 + hamburger3 + hamburger3;\n\t}\n\telse if (T == 'P' && B == 'C' && M == 'C')\n\t{\n\t\tukupna1 = pizza1 + cevapi1 + cevapi1;\n\t\tukupna2 = pizza2 + cevapi2 + cevapi2;\n\t\tukupna3 = pizza3 + cevapi3 + cevapi3;\n\t}\n\telse if (T == 'C' && B == 'C' && M == 'H')\n\t{\n\t\tukupna1 = cevapi1 + cevapi1 + hamburger1;\n\t\tukupna2 = cevapi2 + cevapi2 + hamburger2;\n\t\tukupna3 = cevapi3 + cevapi3 + hamburger3;\n\t}\n\telse if (T == 'C' && B == 'C' && M == 'P')\n\t{\n\t\tukupna1 = cevapi1 + cevapi1 + pizza1;\n\t\tukupna2 = cevapi2 + cevapi2 + pizza2;\n\t\tukupna3 = cevapi3 + cevapi3 + pizza3;\n\t}\n\telse if (T == 'C' && B == 'P' && M == 'P')\n\t{\n\t\tukupna1 = cevapi1 + pizza1 + pizza1;\n\t\tukupna2 = cevapi2 + pizza2 + pizza2;\n\t\tukupna3 = cevapi3 + pizza3 + pizza3;\n\t}\n\telse if (T == 'H' && B == 'P' && M == 'H')\n\t{\n\t\tukupna1 = hamburger1 + pizza1 + hamburger1;\n\t\tukupna2 = hamburger2 + pizza2 + hamburger2;\n\t\tukupna3 = hamburger3 + pizza3 + hamburger3;\n\t}\n\telse if (T == 'H' && B == 'C' && M == 'H')\n\t{\n\t\tukupna1 = hamburger1 + cevapi1 + hamburger1;\n\t\tukupna2 = hamburger2 + cevapi2 + hamburger2;\n\t\tukupna3 = hamburger3 + cevapi3 + hamburger3;\n\t}\n\telse if (T == 'P' && B == 'C' && M == 'P')\n\t{\n\t\tukupna1 = pizza1 + cevapi1 + pizza1;\n\t\tukupna2 = pizza2 + cevapi2 + pizza2;\n\t\tukupna3 = pizza3 + cevapi3 + pizza3;\n\t}\n\telse if (T == 'P' && B == 'H' && M == 'P')\n\t{\n\t\tukupna1 = pizza1 + hamburger1 + pizza1;\n\t\tukupna2 = pizza2 + hamburger2 + pizza2;\n\t\tukupna3 = pizza3 + hamburger3 + pizza3;\n\t}\n\telse if (T == 'C' && B == 'H' && M == 'C')\n\t{\n\t\tukupna1 = cevapi1 + hamburger1 + cevapi1;\n\t\tukupna2 = cevapi2 + hamburger2 + cevapi2;\n\t\tukupna3 = cevapi3 + hamburger3 + cevapi3;\n\t}\n\telse if (T == 'H' && B == 'C' && M == 'P')\n\t{\n\t\tukupna1 = hamburger1 + cevapi1 + pizza1;\n\t\tukupna2 = hamburger2 + cevapi2 + pizza2;\n\t\tukupna3 = hamburger3 + cevapi3 + pizza3;\n\t}\n\telse if (T == 'P' && B == 'H' && M == 'C')\n\t{\n\t\tukupna1 = pizza1 + hamburger1 + cevapi1;\n\t\tukupna2 = pizza2 + hamburger1 + cevapi2;\n\t\tukupna3 = pizza3 + hamburger3 + cevapi3;\n\t}\n\telse if (T == 'P' && B == 'C' && M == 'H')\n\t{\n\t\tukupna1 = pizza1 + cevapi1 + hamburger1;\n\t\tukupna2 = pizza2 + cevapi2 + hamburger2;\n\t\tukupna3 = pizza3 + cevapi3 + hamburger3;\n\t}\n\t\n\tif (ukupna1 < ukupna2 && ukupna1 < ukupna3) \n\t{\n\t\tprintf (\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\"\");\n\t\tprintf (\" (%.2f KM).\\n\", ukupna1);\n\t}\n\telse if (ukupna2 < ukupna3 && ukupna2 < ukupna1)\n\t{\n\t\tprintf (\"Najjeftiniji je Fast-food \\\"Trovac\\\"\");\n\t\tprintf (\" (%.2f KM).\\n\", ukupna2);\n\t\t// if (popust1 < ukupna2) printf (\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", ukupna1 - popust1); \n\t\t// else if (popust2 < ukupna2) printf (\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", ukupna1 - popust2);\n\t\t// else if (popust3 < ukupna2) printf (\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", ukupna1 - popust3);\n\t\t\n\t}\n\telse if (ukupna3 < ukupna1 && ukupna3 < ukupna2)\n\t{\n\t\tprintf (\"Najjeftiniji je Bistro \\\"Lorelei\\\"\");\n\t\tprintf (\" (%.2f KM).\\n\", ukupna3);\n\t\t// if (popust1 < ukupna3) printf (\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", ukupna1 - popust1); \n\t\t// else if (popust2 < ukupna3) printf (\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", ukupna1 - popust2);\n\t //   else if (popust3 < ukupna3) printf (\"Sa popustom bi Restoran bio jeftiniji (%.2f KM).\", ukupna1 - popust3);\n\t\t// else if (ukupna3 > popust1 || ukupna2 > popust2 || ukupna3 > popust3) return 0;\n\t}\n\t\n\treturn 0;\n}",
        "student5005": "#include <stdio.h>\n\nint main() {\n\tchar t,b,m,novi_red;\n\tint broj;\n\tdouble p_k_k=6.80,p_t=8,p_l=5.30; // CJENE PIZZA ODGOVARAJUCIH RESTORANA \n\tdouble h_k_k=3.30,h_t=3,h_l=5; //CJENE HAMBURGERA ODGOVARAJUCIH RESTORANA\n\tdouble c_k_k=5,c_t=3.90,c_l=6; //CJENE CEVAPA ODGOVARAJUCIH RESTORANA\n\tdouble cjena,cjenak,cjena_sa_popustom;\n\tint jeste=0;\n\t    //UNOS ODGOVARAJUCIH JELA\n\tprintf(\"Unesite jelo za Tarika: \");    \n\tscanf(\"%c\",&t);\n\tscanf(\"%c\",&novi_red);\n\tprintf(\"Unesite jelo za Bojana: \");\n\tscanf(\"%c\",&b);\n\tscanf(\"%c\",&novi_red);\n\tprintf(\"Unesite jelo za Mirzu: \");\n\tscanf(\"%c\",&m);\n\tscanf(\"%c\",&novi_red);\n\tbroj=t+b+m; //UZIMANJE ASCII VREDNOSTI ODGOVARAJUCIH CHAROVA\n\tif(broj==('H'+'H'+'H') || broj==('H'+'C'+'C') || broj==('P'+'C'+'C') || broj==('C'+'C'+'C') || broj==('C'+'H'+'P') || broj==('C'+'H'+'H')){\n\t\tprintf(\"Najjeftiniji je Fast-food \\\"Trovac\\\" \");\n\t\n\t//U svakom uslovu pronalazimo cjenu i provjeravamo da li bi bila jeftinija sa popustom u restoranu.\n\tif (broj==('H'+'H'+'H')){\n\t\tcjena=3*h_t;\n\t\tcjenak=3*h_k_k;\n\t\tcjenak=cjenak-(0.1*h_k_k)*3;\n\t\tif(cjenak<cjena){cjena_sa_popustom=cjenak; jeste=1;}\n\t\t\n\t}\n\telse if(broj==('H'+'C'+'C')){\n\t\tcjena=h_t+2*c_t;\n\t\tcjenak=h_k_k+2*c_k_k;\n\t\tcjenak=cjenak-(0.1*c_k_k)*2;\n\t\tif(cjenak<cjena){cjena_sa_popustom=cjenak; jeste=1;}\n\t\t\n\t}\n\t\telse if(broj==('P'+'C'+'C')){\n\t\t\tcjena=p_t+2*c_t;\n\t\t\tcjenak=p_k_k+2*c_k_k;\n\t\t\tcjenak=cjenak-(0.1)*p_k_k;\n\t\t\tif(cjenak<cjena){cjena_sa_popustom=cjenak; jeste=1;}\n\t\t}\n\t\telse if(broj==('C'+'C'+'C')){\n\t\t\tcjena=3*c_t;\n\t\t\tcjenak=3*c_k_k;\n\t\t}\n\t\telse if(broj==('C'+'H'+'P')){\n\t\t\tcjena=c_t+h_t+p_t;\n\t\tcjenak=h_k_k+c_k_k+p_k_k;\n\t\tcjenak=cjenak-(0.1)*p_k_k;\n\t\tif(cjenak<cjena){cjena_sa_popustom=cjenak; jeste=1;\n\t\t\n\t}\n\t\t}\n\t\telse if(broj==('C'+'H'+'H')){\n\t\t\tcjena=c_t+2*h_t;\n\t\t\tcjenak=2*h_k_k+c_k_k;\n\t\t\tcjenak=cjenak-(0.1*c_k_k)*2;\n\t\t\tif(cjenak<cjena){cjena_sa_popustom=cjenak; jeste=1;}\n\t\t}\n\tprintf(\"(%.2lf KM).\\n\",cjena);\n\t\n\tif(jeste){\n\t\tprintf(\"Sa popustom bi Restoran bio jeftiniji (%.2lf KM).\",cjena_sa_popustom);\n\t}\n\t\n\t\t}\n\t\t//U OVIM USLOVIMA TAKODZE \n\t\telse if(broj==('H'+'P'+'P') || broj==('P'+'P'+'P') || broj==('P'+'P'+'C')){\n\t\t\tprintf(\"Najjeftiniji je Bistro \\\"Lorelei\\\" \");\n\t\t\n\tif(broj==('H'+'P'+'P')){\n\t\tcjena=h_l+p_l*2;\n\t\tcjenak=h_k_k+2*p_k_k;\n\t\tcjenak=cjenak-(0.1*p_k_k)*2;\n\t\tif(cjenak<cjena){cjena_sa_popustom=cjenak; jeste=1;}\n\t\n\t}\n\telse if (broj==('P'+'P'+'P')){\n\t\tcjena=3*p_l;\n\t\tcjenak=3*p_k_k;\n\t\tcjenak=cjenak-(0.1*p_k_k)*3;\n\t\tif(cjenak<cjena){jeste=1; cjena_sa_popustom=cjenak;}\n\t}\n\telse if(broj==('P'+'P'+'C')){\n\t\tcjena=2*p_l+c_l;\n\t\tcjenak=2*p_k_k+c_k_k;\n\t\tcjenak=cjenak-(0.1*p_k_k)*2;\n\t\tif(cjenak<cjena){cjena_sa_popustom=cjenak; jeste=1;}\n\t\t\n\t}\n\tprintf(\"(%.2lf KM).\\n\",cjena);\n\tif(jeste){\n\t\tprintf(\"Sa popustom bi Restoran bio jeftiniji (%.2lf KM).\",cjena_sa_popustom);\n\t}}\n\nelse {\n\tprintf(\"Najjeftiniji je Restoran \\\"Kod konja i konjusara\\\" \");\n\tif(broj==('H'+'H'+'P'))cjena=h_k_k*2 + p_k_k;\n\tprintf(\"(%.2lf KM).\\n\",cjena);\n}\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    "154": {
        "label": "1",
        "student6516": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 1\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n#include <iostream>\n#include <vector>\n#include <cmath>\n\n\nstd::vector<int> IzdvojiGadne (std::vector<int> v,bool b){\n\t\n\n\tstd::vector <int> y;\n\t\t\n    for(int i=0;i<v.size();i++){  //pretvaramo u ternarni oblik i provjeravamo koliko puta se pojavi 1,0,2\n\t\tint b0=0,b1=0,b2=0;\n\t\tint broj=abs(v[i]);\n\twhile(broj!=0){\n\tint ostatak=broj%3;\n\t\tif(ostatak==0) b0++;\n\t\telse if(ostatak==1) b1++; \n\t\telse if(ostatak==2) b2++;\n\t\tbroj=broj/3;\n}\n\tif(b){  //opaki\n\t\tif(b0%2==0 && b1%2==0 && b2%2==0 )\n\t\ty.push_back(v[i]);\n\t\n\t}\n    if(!b){ //odvratni\n\t\t\t \n\t\t\tif((b0%2==1 || b0==0) && (b1%2==1 || b1==0) && (b2%2==1 || b2==0) )\n\t\t\ty.push_back(v[i]);\n\t\t}}\n\t\t\n\tif(y.size()==1 || y.size()==0) return y;\n\t\tfor(int i=0;i<y.size();i++){\n\t\tfor(int j=i+1;j<y.size();j++){\n\t\t\tif(y.at(i)==y.at(j)){\n\t\t\t\tfor(int k=j;k<y.size()-1;k++){\n\t\t\t\t\ty.at(k)=y.at(k+1);\n\t\t\t\t}\n\t\t\t\ty.resize(y.size()-1);\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\n\treturn y;\n}\nint main ()\n{\n\t\n\tstd::cout <<\"Unesite brojeve (0 za prekid unosa): \";\n\tstd::vector<int> a;\n\tint elementi;\n\t\tstd::cin >>elementi;\n\t\n\twhile(elementi!=0){\n\t\ta.push_back(elementi);\n\t\tstd::cin >>elementi;}\n\t\t/*\n\t}\n\tfor (int i=0;i<a.size();i++){\n\n\t\ta.push_back(elementi); \n\t\t\t\t\tstd::cin >>elementi;\n\t\n\t}*/\n\tauto b=IzdvojiGadne(a,1); //b su opaki \n\tauto c=IzdvojiGadne(a,0); //c su odvratni\n\t\n\tstd::cout <<\"Opaki: \";\n\tfor(int x: b) std::cout <<x<<\" \";\n\t/*\n\tfor(int i=0;i<a.size();i++){\n\t\tstd::cout <<a[i]<<\" \";\n\t}*/\n\n\n\tstd::cout <<std::endl<<\"Odvratni: \";\n\tfor(int x: c)std::cout <<x<<\" \";\n\t\n\t\n\t/*\n\tfor(int j=0;j<a.size();j++){\n\t\tstd::cout << a[j]<<\" \";\n\t}\n\t*/\n\t\treturn 0;\n}",
        "student7341": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 1\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n\n#include<iostream>\n#include<vector>\n#include<cmath>\n\n\nstd:: vector<int> IzdvojiGadne(std::vector<int>v, bool n){\n\t\n\tstd::vector<int>gadni;\n\t \n    for(int i=0;i<v.size();i++){\n      int brojacnula=0;\n      int brojacjedan=0;\n      int brojacdva=0;\n      int y=abs(v[i]);\n      while(y!=0){\n          int ostatak=y%3;\n          if(ostatak==2) brojacdva++;\n          else if(ostatak==1) brojacjedan++;\n          \telse if(ostatak==0) brojacnula++;\n         y=y/3;\n     }\n     \n     if(brojacnula%2==0 && brojacjedan%2==0 && brojacdva%2==0 && n) gadni.push_back(v[i]);\n     if((brojacjedan==0 || brojacjedan%2==1) && (brojacnula==0 || brojacnula%2==1) &&(brojacdva==0|| brojacdva%2==1) && !n) gadni.push_back(v[i]);\n }\n if(gadni.size()==0 || gadni.size()==1) return gadni;\n  for(int i=0;i<gadni.size()-1;i++){\n        for(int j=i+1;j<gadni.size();j++){\n            if(gadni[i]==gadni[j]){\n                gadni.erase(gadni.begin()+j);\n                j--;\n            } \n        }\n}\n\n     \n\t \nreturn gadni;\n\t\n}\t\nint main (){\n    std::vector<int>v;\n    std::cout<<\"Unesite brojeve (0 za prekid unosa): \";\n    int broj;\n    std::cin>>broj;\n    while(broj!=0){\n        v.push_back(broj);\n        std::cin>>broj;\n    }\n    //for(int x: v) std::cout<<x<<\" \";\n    \n    \n    auto opaki=IzdvojiGadne(v,1);\n    auto odvratni=IzdvojiGadne(v,0);\n    \n    std::cout<<\"Opaki: \";\n    for(int x:opaki) std::cout<<x<<\" \";\n    std::cout<<std::endl<<\"Odvratni: \";\n    for(int x: odvratni) std::cout<<x<<\" \";\n    \n\treturn 0;\n}"
    },
    "155": {
        "label": "0",
        "student1080": "#include <stdio.h>\n#include <math.h>\n\n\n\nint main ()\n{\n\n\tfloat x1,y1,x2,y2,x3,y3;\n\tdouble a,b,c,s;\n\tdouble alfa,beta,gama;\n\tdouble A,B,C;\n\tdouble MAX;\n\tdouble stepeni,minute,sekunde;\n\tdouble PI=acos(-1);\n\tint sekunde1;\n\n\tprintf(\"Unesite koordinate tacke t1: \");\n\tscanf (\"%f %f\", &x1,&y1);\n\tprintf(\"Unesite koordinate tacke t2: \");\n\tscanf (\"%f %f\", &x2,&y2);\n\tprintf(\"Unesite koordinate tacke t3: \");\n\tscanf (\"%f %f\", &x3,&y3);\n\n\t\n\ta=sqrt((x2-x3)*(x2-x3) + (y2-y3)*(y2-y3));\n\tb=sqrt((x1-x3)*(x1-x3) + (y1-y3)*(y1-y3));\n\tc=sqrt((x2-x1)*(x2-x1) + (y2-y1)*(y2-y1));\n\n\n\tA = (((b*b) + (c*c)) - (a*a)) / (2*b*c);\n\tB = (((a*a) + (c*c)) - (b*b)) / (2*a*c);\n\tC = (((b*b) + (a*a)) - (c*c)) / (2*b*a);\n\t\n\t\n\t\n\talfa=(acos(A)*180.)/PI;\n\tbeta=(acos(B)*180.)/PI;\n\tgama=(acos(C)*180.)/PI;\n\t\n\ts = (a + b + c) / 2;\n\tif (a >= s || b >= s || c >= s) {\n\t\tprintf(\"Linija\");\n\t\tprintf(\"\\nNajveci ugao ima 180 stepeni, 0 minuta i 0 sekundi.\");\n\t\treturn 1;\n\t}\n\t\n\tif (fabs(alfa-90)<0.0001 ||\tfabs(beta-90)<0.0001 || fabs(gama-90)<0.0001)\n\tprintf(\"Pravougli\\n\");\n\t\t\n\tif (fabs(alfa-beta)<0.0001 && fabs(beta-gama)<0.0001 && (alfa-gama)<0.0001)\n\tprintf(\"Jednakostranicni\");\n\t\n\telse if (((floor(alfa)!=floor(beta)) && floor(beta)== floor(gama)) || ((floor(alfa)!=floor(gama)) && floor(gama)== floor(beta)) || ((floor(beta)!=floor(gama)) && floor(gama) == floor(alfa))){\n\tprintf(\"Jednakokraki\");\n\t}\n\tif (((floor(alfa)!=floor(beta) && floor(beta)!=floor(gama) && floor(alfa)!=floor(gama))))\n\tprintf(\"Raznostranicni\");\n\t\n\n\tif ((alfa>=beta) && (alfa>=gama))\n\t\tMAX=alfa;\n\telse if ((beta>=alfa) && (beta>=gama))\n\t\tMAX=beta;\n\telse\n\t\tMAX=gama;\n\t\n\tstepeni=floor(MAX);\n \tminute=floor((MAX-stepeni)*3600)/60;\n\tsekunde1=floor((MAX-stepeni)*3600);\n\tsekunde=sekunde1%60;\n\t\n\tif(minute!=0 && sekunde!=0)\n\tprintf(\"\\nNajveci ugao ima %2.f stepeni, %2.f minuta i %2.f sekundi.\",stepeni,minute,sekunde);\n\telse\t\n\tprintf(\"\\nNajveci ugao ima %2.f stepeni,%2.f minuta i%2.f sekundi.\",stepeni,minute,sekunde);\n \n\n\treturn 0;\n}",
        "student5005": "#include <stdio.h>\n#include <math.h>\n#define pi atan(1)*4\n\nint main() {\n\tdouble x1,x2,x3,y1,y2,y3,d1,d2,d3;\n\tdouble ugao;\n\tint st,m,s,mpomocni,mpomocni1;\n\tdouble najveca,dr,tr;\n\tdouble epsilon=0.01;\n\t//Unos kordinata tacaka:\n\tprintf(\"Unesite koordinate tacke t1: \");\n\tscanf(\"%lf %lf\",&x1,&y1);\n\tprintf(\"Unesite koordinate tacke t2: \");\n\tscanf(\"%lf %lf\",&x2,&y2);\n\tprintf(\"Unesite koordinate tacke t3: \");\n\tscanf(\"%lf %lf\",&x3,&y3);\n\t//Odredzivanje duzina stranica trogla\n\t     d1=sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n\t     d2=sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));\n\t     d3=sqrt((x3-x1)*(x3-x1)+(y3-y1)*(y3-y1));\n\t     \n\t//Provjera koja je najveca stranica trougla.\n\tif(d1>d2 & d1>d3)\n  {najveca=d1; dr=d2; tr=d3;}\n  else if (d2>d1 && d2>d3)\n  {najveca=d2; dr=d1; tr=d3;}\n  else{najveca=d3; dr=d1; tr=d2;}\n  //Odredzivanje najveceg ugla trougla koji se nalazi naspram najvece stranice.\n         ugao=acos((dr*dr+tr*tr-najveca*najveca)/(2*dr*tr));\n         ugao=ugao*180;\n         ugao=ugao/pi;\n         if(fabs(ugao-90)<epsilon)//ugao==90\n         printf(\"Pravougli\\n\");\n         st=(int)ugao;\n         mpomocni=(ugao-st)*3600;\n         (int)mpomocni;\n         m=mpomocni/60;\n         s=(ugao-st)*3600;\n         (int)s;  \n         s%=60;\n        \n//Provjera koji je trougao u pitanju.\n\nif(fabs(d1-d2)<epsilon && fabs(d2-d3)<epsilon && fabs(d1-d3)<epsilon)//d1==d2 || d2==d3 || d3==d1\n{\n\tprintf(\"Jednakostranicni\\n\");\n}\t\n else if((x3-x1)==(x3-x2) && (y3-y1)==(y3-y2) || (x2-x1)==(x3-x1) && (y2-y1)==(y3-y1) || (x2-x1)==(x3-x2) && (y2-y1)==(y3-y2) || x1==x2 && x1==x3 || y1==y2 && y1==y3)\n {\n \tprintf(\"Linija\\n\");\n }\n \telse if(fabs(d1-d2)<epsilon || fabs(d2-d3)<epsilon || fabs(d1-d3)<epsilon)\n \t{\n \t\tprintf(\"Jednakokraki\\n\");\n \t}\n else printf(\"Raznostranicni\\n\");\n printf(\"Najveci ugao ima %d stepeni, %d minuta i %d sekundi.\",st,m,s);\n return 0;\n}\n"
    },
    "156": {
        "label": "1",
        "student4100": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    int ipt1 = 0, n = 0, br = 0, c = 0, otp = 0, pv, ipt, ost, a, b;\n    printf (\"Unesite broj: \");\n    scanf (\"%d\", &ipt);\n    ipt = abs(ipt);\n    pv = ipt;\n    while (pv != 0) { \n        pv = pv / 10;\n        c++;\n    }\n    pv = 0;\n    if (ipt < 10 && ipt > -10) {\n        otp = 0;}\n        else { \n            while (ipt != 0 && c > 1) {\n                b = ipt % 10;\n                ipt = ipt / 10;\n                a = ipt % 10;\n                pv = b - a;\n                if ( pv < 0){ \n                    pv = -pv;}\n                    otp = pv * pow(10, n) + otp;\n                    c--; \n                    n++;\n            }\n        }\n        printf (\"%d\", otp);\n        return 0;\n}\n            \n\n\t\t\n",
        "student8199": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\tint in1 = 0, br = 0, ctr = 0, num = 0, out = 0, temp, in, rem, var1, var2;\n\t\n\t/*Unos broja*/\n\t\n\tprintf (\"Unesite broj: \");\n\tscanf (\"%d\", &in);\n\t\n\t/*Postavljanje absolutne*/\n\t\n\tin = abs(in);\n\ttemp = in;\n\t\n\t/*Racun*/\n\t\n\twhile (temp != 0) {\n\t\ttemp = temp / 10;\n\t\tnum++;\n\t}\n\t\n\ttemp = 0;\n\t\n\tif (in < 10 && in > -10) {\n\t\tout = 0;\n\t}\n\t\n\telse {\n\t\twhile (in != 0 && num > 1) {\n\t\t\tvar2 = in % 10;\n\t\t\tin = in / 10;\n\t\t\tvar1 = in % 10;\n\t\t\t\n\t\t\ttemp = var2 - var1;\n\t\t\t\n\t\t\t\tif (temp < 0) {\n\t\t\t\t\ttemp = -temp;\n\t\t\t\t}\n\t\t\t\n\t\t\tout = temp * pow(10, br) + out;\n\t\t\t\n\t\t\tnum--;\n\t\t\tbr++;\n\t\t}\n\t}\n\t\n\t/*Ispis*/\n\t\n\tprintf (\"%d\", out);\n\t\n\treturn 0;\n}\n"
    },
    "157": {
        "label": "0",
        "student3567": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define KAPACITET 200\n\nvoid unesi(char niz[], int velicina)\n{\n    char znak = getchar();\n    if (znak == '\\n') znak = getchar();\n    int i = 0;\n    while (i<velicina-1 && znak != '\\n')\n    {\n        niz[i]=znak;\n        i++;\n        znak=getchar();\n    }\n    niz[i]='\\0';\n}\n\nstruct Vrijeme \n{\n\tint sati, minute, sekunde;\n};\n\nstruct Cas \n{\n\tchar predmet[10];\n\tint dan_u_sedmici;\n\tstruct Vrijeme pocetak, kraj;\n};\n\nint ucitaj_datoteku(struct Cas raspored[])\n{\n\tstruct Cas cas;\n\tFILE* dat = fopen(\"raspored.dat\", \"rb\");\n\tif(dat == NULL)\n\t{\n\t\tprintf(\"Greska pri otvaranju datoteke.\\n\");\n\t\treturn 0;\n\t}\n\tint ucitano = fread(raspored, sizeof(cas), KAPACITET, dat);\n\tfclose(dat);\n\t\n\treturn ucitano;\n}\n\nint zapisi_datoteku(struct Cas raspored[], int broj_casova)\n{\n\tint z = 0;\n\tstruct Cas cas;\n\tFILE* dat = fopen(\"raspored.dat\", \"wb\");\n\tif(dat == NULL)\n\t{\n\t\tprintf(\"Greska pri otvaranju datoteke.\\n\");\n\t\texit(1);\n\t}\n\tint zapisano = fwrite(raspored, sizeof(cas), broj_casova, dat);\n\tif(ferror(dat))\n\t{\n\t\tprintf(\"Greska prilikom pisanja u datoteke.\\n\");\n\t\tprintf(\"Zapisano je samo %d casova.\\n\", zapisano);\n\t}\n\tfclose(dat);\n\t\n\tif(zapisano == broj_casova)\n\t\tz = 1;\n\t\n\treturn z;\n}\n\nint dodaj_cas(struct Cas raspored[], int broj_casova, const char* predmet, int trajanje)\n{\t\n\tint temp[60] = { 0 }; // 10casova max na dan * 6 dana\n\tint i, index, tr = 0, j = 0, dodano = 0;\n\t\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tindex = (raspored[i].dan_u_sedmici - 1) * 10 + (raspored[i].pocetak.sati - 9);\n\t\ttr = raspored[i].kraj.sati - raspored[i].pocetak.sati;\n\t\tif(((raspored[i].kraj.sati - raspored[i].pocetak.sati) * 10 + raspored[i].kraj.minute) % 10 != 0)\n\t\t\ttr++;\n\t\t\n\t\tfor(j = index; j < index + tr; j++)\n\t\t{\n\t\t\ttemp[j] = 1;\n\t\t}\n\t}\n\t\n\tj = 0;\n\tindex = -1;\n\tfor(i = 0; i < 60; i++)\n\t{\n\t\tif(temp[i] == 0)\n\t\t{\n\t\t\tj++;\n\t\t\tif(i % 10 == 0)\n\t\t\t{\n\t\t\t\tindex = i;\n\t\t\t\tj = 1;\n\t\t\t}\n\t\t\tif(index == -1)\n\t\t\t\tindex = i;\n\t\t\tif(j == trajanje)\n\t\t\t{\n\t\t\t\tdodano = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tj = 0;\n\t\t\tindex = -1;\n\t\t}\n\t}\n\t\n\tif(dodano == 1)\n\t{\n\t\tstrcpy(raspored[broj_casova].predmet, predmet);\n\t\traspored[broj_casova].dan_u_sedmici = index / 10 + 1;\n\t\traspored[broj_casova].pocetak.sati = index % 10 + 9;\n\t\traspored[broj_casova].pocetak.minute = 0;\n\t\traspored[broj_casova].pocetak.sekunde = 0;\n\t\traspored[broj_casova].kraj.sati = raspored[broj_casova].pocetak.sati + trajanje;\n\t\traspored[broj_casova].kraj.minute = 0;\n\t\traspored[broj_casova].kraj.sekunde = 0;\n\t}\n\t\n\t\n\treturn dodano;\n}\n\nint preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas)\n{\n\tint p = 0, i;\n\t\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == cas.dan_u_sedmici)\n\t\t{\n\t\t\tif(raspored[i].kraj.sati > cas.pocetak.sati && raspored[i].pocetak.sati != cas.pocetak.sati && cas.pocetak.sati != 0)\n\t\t\t\tp = 1;\n\t\t\telse if(raspored[i].kraj.sati > cas.pocetak.sati && raspored[i].pocetak.sati == cas.pocetak.sati &&\n\t\t\t\t\traspored[i].pocetak.minute > cas.pocetak.minute && cas.pocetak.sati != 0)\n\t\t\t\tp = 1;\n\t\t\telse if(raspored[i].kraj.sati == cas.pocetak.sati && raspored[i].kraj.minute > cas.pocetak.minute)\n\t\t\t\tp = 1;\n\t\t}\n\t}\n\treturn p;\n\n\t/*for(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == cas.dan_u_sedmici)\n\t\t{\n\t\t\tint kraj_i = raspored[i].kraj.sati + (raspored[i].kraj.minute > 0 ? 1 : 0);\n\t\t\tint kraj_c = cas.kraj.sati + (cas.kraj.minute > 0 ? 1 : 0);\n\t\t\t\n\t\t\tif((kraj_c > raspored[i].pocetak.sati && cas.pocetak.sati < kraj_i) ||\n\t\t\t   (kraj_i > cas.pocetak.sati && raspored[i].pocetak.sati < kraj_c))\n\t\t\t{\n\t\t\t\tp = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}*/\n\t\n\treturn p;\n}\n\n// void ispis_rasporeda(struct Cas raspored[], int broj_casova)\n// {\n//  \tchar *dani[] = { \"\", \"PON\", \"UTO\", \"SRI\", \"CET\", \"PET\", \"SUB\" };\n//  \tint i;\n \t\n//  \tfor(i = 0; i < 7; i++)\n//  \t{\n//  \t\tif(i == 0)\n//  \t\t\tprintf(\"%-6s\", dani[i]);\n//  \t\telse\n//  \t\t\tprintf(\"%-9s\", dani[i]);\n//  \t}\n//  \tprintf(\"\\n\");\n// }\n\nvoid ispisi_dan(struct Cas raspored[], int broj_casova, int dan)\n{\n\tint i, j = 1;\n\tprintf(\"Uneseni su casovi: \\n\");\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == dan)\n\t\t{\n\t\t\tprintf(\"%d) %s (%02d:%02d-%02d:%02d)\\n\", j++, raspored[i].predmet, raspored[i].pocetak.sati, raspored[i].pocetak.minute, raspored[i].kraj.sati, raspored[i].kraj.minute);\n\t\t}\n\t}\n}\n\nvoid promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena)\n{\n\tint indexi[10] = { 0 };\n\t\n\tint i, brCasova = 0;\n\t\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == dan)\n\t\t{\n\t\t\tindexi[brCasova] = i;\n\t\t\tbrCasova++;\n\t\t}\n\t}\n\t\n\traspored[indexi[redni_broj - 1]] = promjena;\n}\n\nvoid obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj)\n{\n\tint indexi[10] = { 0 }, i, brCasova = 0;\n\t\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == dan)\n\t\t{\n\t\t\tindexi[brCasova] = i;\n\t\t\tbrCasova++;\n\t\t}\n\t}\n\t\n\tfor(i = indexi[redni_broj - 1]; i < brCasova - 1; i++)\n\t\traspored[i] = raspored[i + 1];\n}\n\nint brojCasovaTogDana(struct Cas raspored[], int broj_casova, int dan)\n{\n\tint i, brCasova = 0;\n\t\n\tfor(i = 0; i < broj_casova; i++)\n\t{\n\t\tif(raspored[i].dan_u_sedmici == dan)\n\t\t{\n\t\t\tbrCasova++;\n\t\t}\n\t}\n\t\n\treturn brCasova;\n}\n\nint main() \n{\n\tstruct Cas raspored[KAPACITET], cas;\n    char imePredmeta[10], test[100];\n    int opcija, brojRegistrovanihCasova = 0, trajanjeCasa = 0, dan = 0, promjenaCasa = 0;\n    struct Vrijeme p, k;\n    for(;;)\n    {\n        printf(\"1) Ispis rasporeda\\n2) Dodavanje casa\\n3) Promjena casa\\n4) Brisanje casa\\n0) Kraj rada\\nIzaberite opciju: \");\n        scanf(\"%d\", &opcija);\n        if(opcija == 0)\n        {\n        \tzapisi_datoteku(raspored, brojRegistrovanihCasova);\n        \tbreak;\n        }\n        // else if(opcija == 1)\n        // {\n        // \tispis_rasporeda(raspored, brojRegistrovanihCasova);\n        // }\n        else if(opcija == 2)\n        {\n            printf(\"Unesite naziv predmeta: \");\n            unesi(test, 100);\n            strncpy(imePredmeta, test, 9);\n            imePredmeta[9] = '\\0';\n            printf(\"Unesite broj casova: \");\n            scanf(\"%d\", &trajanjeCasa);\n            if(dodaj_cas(raspored, brojRegistrovanihCasova++, imePredmeta, trajanjeCasa) == 0)\n                printf(\"Nema dovoljno mjesta u rasporedu za %d casova.\\n\", trajanjeCasa);\n        }\n        else if(opcija == 3)\n        {\n            for(;;)\n            {\n                printf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n                scanf(\"%d\", &dan);\n                ispisi_dan(raspored, brojRegistrovanihCasova, dan);\n                printf(\"Izaberite koji cas zelite promijeniti: \");\n                scanf(\"%d\", &promjenaCasa);\n                int a = brojCasovaTogDana(raspored, brojRegistrovanihCasova, dan);\n                if(promjenaCasa > a)\n                \tprintf(\"Neispravan redni broj casa.\\n\");\n                else\n                {\n                \tprintf(\"Naziv predmeta: \");\n             \t\tunesi(test, 100);\n            \t\tstrncpy(imePredmeta, test, 9);\n            \t\timePredmeta[9] = '\\0';\n                \tprintf(\"Vrijeme pocetka: \");\n                \tscanf(\"%d:%d\", &p.sati, &p.minute);\n                \tp.sekunde = 0;\n                \tprintf(\"Vrijeme zavrsetka: \");\n                \tscanf(\"%d:%d\", &k.sati, &k.minute);\n                \tk.sekunde = 0;\n                \tstrcpy(cas.predmet, imePredmeta);\n                \tcas.dan_u_sedmici = dan;\n                \tcas.pocetak = p;\n                \tcas.kraj = k;\n                \t\n                \tif(preklapanje(raspored, brojRegistrovanihCasova, cas) == 0)\n                \t{\n                    \tpromijeni_cas(raspored, brojRegistrovanihCasova, dan, promjenaCasa, cas);\n                    \tbreak;\n                \t}\n\t\t\t\t\telse\n                    \tprintf(\"Promjena nije moguca jer dovodi do preklapanja\\n\");\n                }\n            }\n        }\n        else if(opcija == 4)\n        {\n            printf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n            scanf(\"%d\", &dan);\n            ispisi_dan(raspored, brojRegistrovanihCasova, dan);\n            printf(\"Izaberite koji cas zelite obrisati: \");\n            scanf(\"%d\", &promjenaCasa);\n            obrisi_cas(raspored, brojRegistrovanihCasova, dan, promjenaCasa);\n            brojRegistrovanihCasova--;\n            printf(\"Cas obrisan\\n\");\n        }\n    }\n\t\n\treturn 0;\n}\n",
        "student3776": "#include <stdio.h>\n#include <string.h>\n#define KAPACITET 200\n\nstruct Vrijeme {\n\tint sati,minute,sekunde;\n};\n\nstruct Cas {\n\tchar predmet[10];\n\tint dan_u_sedmici;\n\tstruct Vrijeme pocetak,kraj;\n};\n\nint ucitaj_datoteku(struct Cas raspored[]){\n\tFILE *ulaz=fopen(\"raspored.dat\",\"rb\");\n\tif(!ulaz){\n\t\treturn 0;\n\t}\n\tint br=fread(raspored,sizeof (struct Cas),KAPACITET,ulaz);\n\tfclose(ulaz);\n\treturn br;\n}\n\nvoid ispis_rasporeda(struct Cas raspored[],int broj_casova){\n\tint i,j,zadnji=0,k,prvi=9;\n\tchar razmak=' ';\n\tfor(i=0; i<broj_casova; i++){\n\t\tif(raspored[i].kraj.sati>=zadnji){\n\t\t\tif(raspored[i].kraj.minute > 0)\n\t\t\t\tzadnji=raspored[i].kraj.sati+1;\n\t\t\telse zadnji=raspored[i].kraj.sati;\n\t\t}\n\t\tif(raspored[i].pocetak.sati<prvi)\n\t\t\tprvi=raspored[i].pocetak.sati;\n\t}\n\tprintf(\"\\n%7cPON%7cUTO%7cSRI%7cCET%7cPET%7cSUB\\n\",razmak,razmak,razmak,razmak,razmak,razmak);\n\tfor(i=prvi; i<zadnji; i++){\n\t\t\tif(i<10)\n\t\t\t\tprintf(\"%d:00   \",i);\n\t\t\telse\n\t\t\t\tprintf(\"%d:00  \",i);\n\t\t\tfor(j=0; j<6; j++){\n\t\t\t\tfor(k=0; k<broj_casova; k++){\n\t\t\t\t\tif(raspored[k].dan_u_sedmici!=j+1) continue;\n\t\t\t\t\tif(raspored[k].pocetak.sati<=i && raspored[k].kraj.sati>i){\n\t\t\t\t\t\tprintf(\"%-10s\",raspored[k].predmet);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if(raspored[k].kraj.sati==i){\n\t\t\t\t\t\t\tif (raspored[k].kraj.minute>0)\n\t\t\t\t\t\t\tprintf(\"%-10s\",raspored[k].predmet);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(k==broj_casova)\n\t\t\t\t\tprintf(\"%10c\",razmak);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n}\n\nvoid ispisi_dan(struct Cas raspored[], int broj_casova, int dan){\n\tint i,k=1;\n\tprintf(\"Uneseni su casovi: \\n\");\n\tfor(i=0; i<broj_casova; i++)\n\t\tif(raspored[i].dan_u_sedmici==dan){\n\t\t\tprintf(\"%d) %s (\",k++,raspored[i].predmet);\n\t\t\tif(raspored[i].pocetak.sati<10)\n\t\t\t\tprintf(\"0%d:\",raspored[i].pocetak.sati);\n\t\t\telse printf(\"%d:\",raspored[i].pocetak.sati);\n\t\t\tif(raspored[i].pocetak.minute<10)\n\t\t\t\tprintf(\"0%d-\",raspored[i].pocetak.minute);\n\t\t\telse printf(\"%d-\",raspored[i].pocetak.minute);\n\t\t\tif(raspored[i].kraj.sati<10)\n\t\t\t\tprintf(\"%0d:\",raspored[i].kraj.sati);\n\t\t\telse printf(\"%d:\",raspored[i].kraj.sati);\n\t\t\tif(raspored[i].kraj.minute<10)\n\t\t\t\tprintf(\"0%d)\\n\",raspored[i].kraj.minute);\n\t\t\telse\n\t\t\t\tprintf(\"%d)\\n\",raspored[i].kraj.minute);\n\t\t}\n}\n\nvoid obrisi_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj){\n\tint i,k;\n\tfor(i=0; i<broj_casova; i++){\n\t\tif (raspored[i].dan_u_sedmici==dan) redni_broj--;\n\t\tif (redni_broj==0){\n\t\t\tfor(k=i; k<broj_casova-1;k++)\n\t\t\t\traspored[k]=raspored[k+1];\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nint preklapanje(struct Cas raspored[], int broj_casova, struct Cas cas){\n\tint poc=cas.pocetak.sati*60+cas.pocetak.minute,kraj=cas.kraj.sati*60+cas.kraj.minute,i;\n\tfor(i=0; i<broj_casova; i++){\n\t\tif(cas.dan_u_sedmici!=raspored[i].dan_u_sedmici) continue;\n\t\tint pom1=raspored[i].pocetak.sati*60+raspored[i].pocetak.minute,pom2=raspored[i].kraj.sati*60+raspored[i].kraj.minute;\n\t\tif ((poc<pom1 && kraj>pom1) || (poc<pom2 && kraj>pom2) || (poc<=pom1 && kraj>=pom2) || (pom1<=poc && pom2>=kraj)) return 1;\n\t}\n\treturn 0;\n}\n\n/*int uklop(struct Cas raspored[], int broj_casova, struct Cas cas){\n\tint poc=cas.pocetak.sati*60,kraj=cas.kraj.sati*60,i;\n\tfor (i=0; i<broj_casova; i++){\n\t\tif (cas.dan_u_sedmici!=raspored[i].dan_u_sedmici) continue;\n\t\tint pom1=raspored[i].pocetak.sati*60+raspored[i].pocetak.minute,pom2=raspored[i].kraj.sati*60+raspored[i].kraj.minute;\n\t\tif ((poc<pom1 && kraj>pom1) || (poc<pom2 && kraj>pom2) || (poc<=pom1 && kraj>=pom2) || (pom1<=poc && pom2>=kraj)) return 1;\n\t}\n\treturn 0;\n}*/\n\nint dodaj_cas(struct Cas raspored[], int broj_casova, const char *predmet, int trajanje){\n\tint i,k;\n\tstruct Cas cas;\n\tstrcpy(cas.predmet,predmet);\n\tfor (i=1; i<7; i++)\n\t\tfor(k=9; k<=19-trajanje;k++){\n\t\t\tcas.dan_u_sedmici=i;\n\t\t\tcas.pocetak.sati=k;\n\t\t\tcas.kraj.sati=k+trajanje;\n\t\t\tcas.pocetak.minute=cas.kraj.minute=0;\n\t\t\tif (preklapanje(raspored,broj_casova,cas)==0){\n\t\t\t\traspored[broj_casova]=cas;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\n\treturn 0;\t\t\t\n}\n\nvoid promijeni_cas(struct Cas raspored[], int broj_casova, int dan, int redni_broj, struct Cas promjena){\n\tint i;\n\tfor(i=0; i<broj_casova; i++){\n\t\tif(raspored[i].dan_u_sedmici==dan) redni_broj--;\n\t\tif(redni_broj==0){\n\t\t\traspored[i]=promjena;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nint zapisi_datoteku(struct Cas raspored[], int broj_casova){\n\tFILE *ulaz=fopen(\"raspored.dat\",\"wb\");\n\tif(!ulaz)\n\t\treturn 0;\n\tint br=fwrite(raspored,sizeof (struct Cas), broj_casova,ulaz);\n\tfclose(ulaz);\n\tif (br) return 1;\n\treturn 0;\n}\n\nint main() {\n\tint n,broj_casova=0;\n\tstruct Cas raspored[KAPACITET];\n\tucitaj_datoteku(raspored);\n\tdo {\n\t\tprintf(\"1) Ispis rasporeda\\n2) Dodavanje casa\\n3) Promjena casa\\n4) Brisanje casa\\n0) Kraj rada\\nIzaberite opciju: \");\n\t\tscanf(\"%d\",&n);\n\t\tswitch (n){\n\t\t\tcase 0: {\n\t\t\t\tzapisi_datoteku(raspored,broj_casova);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 1: \n\t\t\t\tispis_rasporeda(raspored,broj_casova);\n\t\t\t\tbreak;\n\t\t\tcase 2:{\n\t\t\t\tint i=0,trajanje;\n\t\t\t\tchar naziv[10];\n\t\t\t\tprintf(\"Unesite naziv predmeta: \");\n\t\t\t\tchar c=getchar();\n\t\t\t\tc=getchar();\n\t\t\t\tdo {\n\t\t\t\t\tif (i<9)\n\t\t\t\t\t\tnaziv[i++]=c;\n\t\t\t\t\tc=getchar();\n\t\t\t\t} while (c!='\\n');\n\t\t\t\tnaziv[i]='\\0';\n\t\t\t\tprintf(\"Unesite broj casova: \");\n\t\t\t\tscanf(\"%d\",&trajanje);\n\t\t\t\tif(dodaj_cas(raspored,broj_casova,naziv,trajanje))\n\t\t\t\t\tbroj_casova++;\n\t\t\t\telse\n\t\t\t\t\tprintf(\"Nema dovoljno mjesta u rasporedu za %d casova.\\n\",trajanje);;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3:{\n\t\t\t\tstruct Cas cas;\n\t\t\t\tint d,k,i=0;\n\t\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\t\tscanf(\"%d\",&d);\n\t\t\t\tispisi_dan(raspored,broj_casova,d);\n\t\t\t\tprintf(\"Izaberite koji cas zelite promijeniti: \");\n\t\t\t\tscanf(\"%d\",&k);\n\t\t\t\tprintf(\"Naziv predmeta: \");\n\t\t\t\tchar naziv[10];\n\t\t\t\tchar c=getchar();\n\t\t\t\tc=getchar();\n\t\t\t\tdo {\n\t\t\t\t\tif (i<9)\n\t\t\t\t\t\tnaziv[i++]=c;\n\t\t\t\t\tc=getchar();\n\t\t\t\t} while (c!='\\n');\n\t\t\t\tnaziv[i]='\\0';\n\t\t\t\tstrcpy(cas.predmet,naziv);\n\t\t\t\tcas.dan_u_sedmici=d;\n\t\t\t\tprintf(\"Vrijeme pocetka: \");\n\t\t\t\tscanf(\"%d%c%d\",&cas.pocetak.sati,&c,&cas.pocetak.minute);\n\t\t\t\tprintf(\"Vrijeme zavrsetka: \");\n\t\t\t\tscanf(\"%d%c%d\",&cas.kraj.sati,&c,&cas.kraj.minute);\n\t\t\t\t/*if(preklapanje(raspored,broj_casova,cas)==1) {\n\t\t\t\t\tprintf(\"Promjena nije moguca jer dovodi do preklapanja\");\n\t\t\t\t\tbreak;\n\t\t\t\t}*/\n\t\t\t\tpromijeni_cas(raspored,broj_casova,d,k,cas);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 4:{\n\t\t\t\tint d,k;\n\t\t\t\tprintf(\"Unesite dan (1=ponedjeljak, 2=utorak..., 6=subota): \");\n\t\t\t\tscanf(\"%d\",&d);\n\t\t\t\tispisi_dan(raspored,broj_casova,d);\n\t\t\t\tprintf(\"Izaberite koji cas zelite obrisati: \");\n\t\t\t\tscanf(\"%d\",&k);\n\t\t\t\tobrisi_cas(raspored,broj_casova,d,k);\n\t\t\t\tprintf(\"Cas obrisan\\n\");\n\t\t\t\tbroj_casova--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: break;\n\t\t}\n\t} while (n!=0);\n\n\treturn 0;\n}\n"
    },
    "158": {
        "label": "1",
        "student3423": "#include <stdio.h>\n\nint main() {\n\tint i,j,n;\n\t\n\tdo{\n\t\tprintf(\"Unesite broj N: \");\n\t\tscanf(\"%d\", &n);\n\t\t\n\t\tif(n<8 || n%4!=0) printf(\"Neispravno N! \\n\");\n\t\t\n\t}while (n<8 || n%4!=0);\n\tprintf(\"\\n\");\n\t\n\tfor (i=0; i<n/2; i++){\n\t\tfor (j=0; j<n/2; j++){\n\t\t\tif (i==j){\n\t\t\t\tprintf(\"\\\\\"); //moraju bit dvije kose \n\t\t\t}\n\t\t\telse if(j==(n/2 -1-i)){\n\t\t\t\tprintf(\"/\");\n\t\t\t}\n\t\t\telse { \n\t\t\t\tprintf(\" \");\n\t\t} \n\t\t// ovo je sve da printa x\n\t\t}\n\t\tfor (j=n/2;j<n;j++){\n\t\t\tif ((i==0 && j==n/2) || (i==0 && j==n-1) || (i==n/2-1 && j==n/2) || (i==n/2-1 && j==n-1)){\n\t\t\t\tprintf(\"+\"); // ovo je za coskove kvadrata\n\t\t\t}\n\t\t\telse if ((i>0 && i<n/2 -1) && (j==n/2 || j==n-1)){\n\t\t\t\tprintf(\"|\"); \n\t\t\t\t// za stranice uspravne\n\t\t\t}\n\t\t\telse if(i==0 && (j>n/2 || j<n-1)){\n\t\t\t\tprintf(\"-\"); \n\t\t\t\t//ovo je za horizontalne stranice (gornja)\n\t\t\t}\n\t\t\telse if (i==n/2 -1 && (j>n/2 || j<n-1)){\n\t\t\t\tprintf(\"-\"); \n\t\t\t\t//horizontalna donja stranica\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n\tfor (i=n/2; i<n; i++){\n\t\tfor (j=0;j<n/2; j++){\n\t\t\tif (i==n/2 && (j==0 || j==n/2-1)){\n\t\t\t\tprintf(\"+\");\n\t\t\t}\n\t\t\telse if (i==n-1 && (j==0 || j==n/2-1)){\n\t\t\t\tprintf(\"+\");\n\t\t\t}\n\t\t\telse if ((j==0 || j==n/2-1) && (i>n/2 && i<n-1) ){\n\t\t\t\tprintf(\"|\");\n\t\t\t}\n\t\t\telse if((i==n/2 || i==n-1) && (j>0 && j<n/2-1)){\n\t\t\t\tprintf(\"-\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\tfor (j=n/2; j<n; j++){\n\t\t\tif ((j==(3*n)/4 || j==(3*n)/4-1) && (i!=(3*n)/4 && i!=(3*n)/4-1)){\n\t\t\t\tprintf(\"|\");\n\t\t\t}\n\t\t\telse if((j==(3*n)/4 || j==(3*n)/4-1) && (i==(3*n)/4 || i==(3*n)/4-1)){\n\t\t\t\tprintf(\"+\");\n\t\t\t}\n\t\t\telse if(i==(3*n)/4 || i==(3*n)/4-1){\n\t\t\t\tprintf(\"-\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t\t\n\t}\n\t\n\t\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n\n",
        "student6813": "#include <stdio.h>\n\nint main() {\n\t\n\tint i,j,n;\n\tdo{\n\tprintf(\"Unesite broj N: \");\n\tscanf(\"%d\", &n);\n\tif(n<8 || n%4!=0) \n\tprintf(\"Neispravno N!\\n\");\n\t}while(n<8 || n%4!=0);\n\tprintf(\"\\n\");\n\tfor(i=0;i<n/2;i++) {\n\t\tfor(j=0;j<n/2;j++){\n\t\t\tif(i==j){\n\t\t\t\tprintf(\"\\\\\");\n\t\t\t}\n\t\t\telse if(j==(n/2 -1-i)) {\n\t\t\t\tprintf(\"/\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\tfor(j=n/2;j<n;j++){\n\t\t\tif( (i==0 && j==n/2) || (i==0 && j==n-1) || (i==n/2-1 && j==n/2) || (i==n/2-1 && j==n-1) ) {\n\t\t\tprintf(\"+\");\n\t\t\t}\n\t\t\telse if((i>0 && i<n/2-1) && (j==n/2 || j==n-1)){\n\t\t\tprintf(\"|\");\n\t\t\t}\n\t\t\telse if(i==0 && (j>n/2 || j<n-1)) {\n\t\t\t\tprintf(\"-\");\n\t\t\t}\n\t\t\telse if(i==n/2-1 && (j>n/2 || j<n-1)){\n\t\t\t\tprintf(\"-\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\tfor(i=n/2;i<n;i++){\n\t\tfor(j=0;j<n/2;j++){\n\t\t\tif(i==n/2 && (j==0 || j==n/2-1)){\n\t\t\t\tprintf(\"+\");\n\t\t\t}\n\t\t\telse if(i==n-1 && (j==0 || j==n/2-1)){\n\t\t\t\tprintf(\"+\");\n\t\t}\n\t\telse if((j==0 || j==n/2-1) && (i>n/2 && i<n-1)){\n\t\t\tprintf(\"|\");\n\t\t}\n\t\telse if((i==n/2 || i==n-1) && (j>0 && j<n/2-1)){\n\t\t\tprintf(\"-\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\" \");\n\t\t}\n\t}\n\tfor(j=n/2;j<n;j++){\n\t\tif((j==(3*n)/4 || j==(3*n)/4-1) && (i!=(3*n)/4 && i!=(3*n)/4-1)){\n\t\t\tprintf(\"|\");\n\t\t}\n\t\telse if((j==(3*n)/4 || j==(3*n)/4-1) && (i==(3*n)/4 || i==(3*n)/4-1)){\n\t\t\tprintf(\"+\");\n\t\t}\n\t\telse if (i==(3*n)/4 || i==(3*n)/4-1) {\n\t\t\tprintf(\"-\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\" \");\n\t\t}\n\t\n\t}\n\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}\n"
    },
    "159": {
        "label": "0",
        "student4161": "#include <stdio.h>\n\nint main() {\n    int m, n;\n    double matrica[100][100];\n    int i, j;\n     int cirkularna=1;\n     int teplicova=1;\n    \n    while(1)\n    {\n        printf(\"Unesite M i N: \");\n        scanf(\"%d %d\", &m, &n);\n        if(m<=0 || m>100 || n<=0 || n>100) printf(\"Pogresan unos!\\n\");\n        else break;\n    }    \n    printf(\"Unesite elemente matrice: \");\n    for(i=0; i<m; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            scanf(\"%lf\", &matrica[i][j]);\n        }\n    }\n   \n    for(i=0; i<m-1; i++)\n    {\n        for(j=0; j<n-1; j++)\n        {\n            if(matrica[i][j]!=matrica[i+1][j+1]) {teplicova=0; break;}\n        }\n    }\n    for(i=0; i<m; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            if(i<m-1 && j<n-1)\n            {\n            if(matrica[i][j]!=matrica[i+1][j+1]) {cirkularna=0; break;}\n            }\n            else if(i<m-1 && j==n-1)\n            {\n                if(matrica[i][j]!=matrica[i+1][0]){cirkularna=0; break;}\n            }\n        }\n    }\n    if(teplicova==1 && cirkularna==1) printf(\"Matrica je cirkularna\");\n    else if(teplicova==1) printf(\"Matrica je Teplicova\");\n    else if(cirkularna==1) printf(\"Matrica je cirkularna\");\n    else printf(\"Matrica nije ni cirkularna ni Teplicova\");\n\t\n\treturn 0;\n}\n",
        "student9569": "#include <stdio.h>\n\nint main() {\n\tdouble s[100][100];\n\tint i, j, M, N, tepl= 1, cirk= 1;\n\t\n\tdo{\n\t\tprintf(\"Unesite M i N: \");\n\t\tscanf(\"%d %d\", &M, &N);\n\t\tif(M<=0 || M>100 || N<=0 || N>100) {\n\t\t\tprintf(\"Pogresan unos!\\n\");\n\t\t}\n\t}\n\twhile(M<=0 || M>100 || N<=0 || N>100);\n\tprintf(\"Unesite elemente matrice: \");\n\t\n\tfor(i=0;i<M;i++)\n\t{\n\t\tfor(j=0;j<N;j++)\n\t\t{\n\t\t\tscanf (\"%lf\",&s[i][j]);\n\t\t}\n\t}\n\t\n\tfor(i=0;i<M;i++){\n\t\tfor(j=0;j<N;j++){\n\t\t\tif(s[0][j]!=s[i][(i+j)%N]){\n\t\t\t\t\n\t\t\t\tcirk= 0; \n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(i=0;i<M-1;i++){\n\t\tfor(j=0;j<N-1;j++){\n\t\t\tif(j+1<N){\n\t\t\t\tif(s[i][j]!=s[i+1][j+1]){\n\t\t\t\t\ttepl= 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\tif(cirk==1) printf(\"Matrica je cirkularna\");\n\t\telse if(cirk==0 && tepl==1) printf(\"Matrica je Teplicova\");\n\t\telse printf(\"Matrica nije ni cirkularna ni Teplicova\");\n\t\n\n\treturn 0;\n}\n"
    },
    "160": {
        "label": "1",
        "student3631": "#include <stdio.h>\n#include <math.h>\n#define EPSILON 0.1\n\nint main() {\n\tfloat a1,b1,a2,b2,y,x;\n\tprintf (\"Unesite a1,b1,a2,b2: \");\n\tscanf (\"%f,%f,%f,%f\", &a1, &b1, &a2, &b2);\n\t\n\tif (fabs(a1-a2)<EPSILON  && fabs(b1-b2)>EPSILON) { printf (\"Paralelne su\"); return 0;}\n    else if (fabs(a1-a2)<EPSILON && fabs(b1-b2)<EPSILON) {printf (\"Poklapaju se\"); return 0;}\n    else {\n    x=(b2-b1)/(a1-a2);\n\ty=a1*x + b1;\n\tprintf (\"Prave se sijeku u tacci (%.1f,%.1f) \", x,y); return 0;}\n\treturn 0;\n}\n",
        "student8187": "#include <stdio.h>\n#define epsilon 0.01\n#include <math.h>\n\nint main() {\n\tfloat a1,b1,a2,b2,y,x;\n\tprintf (\"Unesite a1,b1,a2,b2: \");\n\tscanf (\"%f,%f,%f,%f\", &a1,&b1,&a2,&b2);\n\tif (fabs(a1-a2)<epsilon && fabs(b1-b2)>epsilon)\n\t{\n\t\tprintf (\"Paralelne su\");\n\t\treturn 0;\n\t}\n\telse if (fabs(a1-a2)<epsilon && fabs(b1-b2)<epsilon)\n\t{\n\t\tprintf (\"Poklapaju se\");\n\t\treturn 0;\n\t}\n\t\n\telse \n\t{\n\tx=(b2-b1)/(a1-a2);\n\ty=a1*x+b1;\n\tprintf (\"Prave se sijeku u tacci (%.1f,%.1f)\", x,y);\n\treturn 0;\n\t}\n\treturn 0;\n}\n"
    },
    "161": {
        "label": "0",
        "student4108": "#include <stdio.h>\n\n    int daj_prost (){\n        int i, prost=1;\n        static int a=1;\n       \n        \n        while(1){ \n            a++;\n           \n            if(a==2) {\n            return a;\n            }else {\n            for (i=2; i<a; i++){\n                if (a%i==0){ \n                    prost=0;\n                    break;}\n            }\n        }\n        if(prost){return a;}\n        else{\n            prost=1;\n        }\n        \n    }\n\n}\n\n\n\n\nint main() {\n\t\n\tint a,b,c=0,suma=0;\n\t\n\tdo{\n\t\n\tprintf(\"Unesite brojeve A i B: \");\n\tscanf(\"%d %d\", &a, &b);\n\t\n\tif( a < 1  ){ \n\t    printf(\"A nije prirodan broj.\\n\");\n\t}\n\telse if( b <= a ){\n\t    printf(\"A nije manje od B.\\n\");\n\t}\n\n\t \n\t}while(a<1 || a>=b);\n\t\n\t\n\t\n    while(c<b){\n\n\tc=daj_prost();\n\tif(c>a && c<b){\n        suma+=c;\n    }\n\t\n}\n\n\tprintf(\"Suma prostih brojeva izmedju %d i %d je %d.\", a,b,suma);\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\treturn 0;\n}\n",
        "student9998": "#include <stdio.h>\n\nint daj_prost(){\n\tstatic int n=2;\n\tfor(;;){\n\t\tint i, broj=1;\n\t\tfor(i=2;i<n;i++){\n\t\t\tif(n%i==0) broj=0;\n\t\t\tif(broj==0) {n++;break;}\n\t\t\t}\n\t\t\tif(broj==1) {\n\t\t\t\tbroj=n;\n\t\t\t\tn++;\n\t\t\t\treturn broj;\n\t\t}\n\t}\n}\n\nint main() {\n\tint a,b,suma=0,i,broj=daj_prost();\n\tdo{\n\t\tprintf(\"Unesite brojeve A i B: \");\n\t\tscanf(\"%d %d\",&a,&b);\n\t    if(a<=0){\n\t    \tprintf(\"A nije prirodan broj.\\n\");\n\t    \tcontinue;\n\t    }\n\t    if(a>=b){\n\t    \tprintf(\"A nije manje od B.\\n\");\n\t    \tcontinue;\n\t    }\n\t}while(a<=0 || a>=b);\n\t\n\t\tfor(i=a+1;i<b;i++){\n\t\t\twhile(i>broj) broj=daj_prost();\n\t\t\tif(i==broj) suma+=broj;\n\t\t}\n\n\tprintf(\"Suma prostih brojeva izmedju %d i %d je %d.\",a,b,suma);\n\t\n\treturn 0;\n}\n"
    },
    "162": {
        "label": "1",
        "student6609": "#include <stdio.h>\n\nint main() {\n\tint i,j,br_redova,br_kolona,sirina_kolone;\n\tdo {\n\tprintf(\"Unesite broj redova: \");\n\tscanf(\"%d\", &br_redova);\n\t} while(br_redova<=0 || br_redova>10);\n\t\n\tdo {\n\tprintf(\"Unesite broj kolona: \");\n\tscanf(\"%d\", &br_kolona);\n\t} while(br_kolona<=0 || br_kolona>10);\n\t\n\tdo {\n\tprintf(\"Unesite sirinu jedne kolone: \");\n\tscanf(\"%d\", &sirina_kolone);\n\t} while(sirina_kolone<=0 || sirina_kolone>10);\n\t\n\tfor(i=0; i<=br_redova*2; i++) {\n\t\tfor(j=0; j<=br_kolona*(sirina_kolone+1); j++) {\n\t\t\tif(i%2==0) {\n\t\t\t\tif(j%(sirina_kolone+1)==0) printf(\"+\");\n\t\t\t\telse printf(\"-\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(j%(sirina_kolone+1)==0) printf(\"|\");\n\t\t\t\telse printf(\" \");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\n\treturn 0;\n}\n",
        "student8011": "#include <stdio.h>\n\nint main() {\n\t\n\tint redovi,kolone,sirina_kolone,i,j;\n\t\n\tdo  \n\t{\n\t\tprintf(\"Unesite broj redova: \");\n\t\tscanf(\"%d\",&redovi);\n\t}while(redovi<=0 || redovi>10);\n\t\n\tdo \n\t{\n\t\tprintf(\"Unesite broj kolona: \");\n\t\tscanf(\"%d\",&kolone);\n\t}while (kolone<=0 || kolone>10);\n\n\tdo \n\t{\n\t\tprintf(\"Unesite sirinu jedne kolone: \");\n\t\tscanf(\"%d\",&sirina_kolone);\n\t\t\n\t}while(sirina_kolone<=0 || sirina_kolone>10);\n\t\t\n\tfor(i=0;i<=redovi*2;i++)\n\t{\n\t\tfor(j=0;j<=kolone * sirina_kolone + kolone;j++)\n\t\t{\n\t\t\tif(i%2==0)\n\t\t\t{\n\t\t\t\n\t\t\t\n\t\t\t\tif(j%(sirina_kolone+1)==0) printf(\"+\");\n\t\t\t\telse printf(\"-\");\n\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(j%(sirina_kolone+1)==0) printf(\"|\");\n\t\t\t\telse printf(\" \");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\tprintf(\"\\n\");\n\t\t\n\t}\n\t\n\treturn 0;\n}\n"
    },
    "163": {
        "label": "0",
        "student1080": "#include <stdio.h>\n#include <math.h>\n\nint main () {\n    \nfloat a,b,c;\ndouble diskriminanta,x1,x2;\ndouble x1rez,x2rez;\n\n\n\n    printf (\"Unesite koeficijente a, b i c: \");\n    scanf(\"%f %f %f\",&a,&b,&c);\n \ndiskriminanta = pow(b,2)-(4*a*c);\n\nx1= (-b+(sqrt(diskriminanta)))/(2*a);\nx2= (-b-(sqrt(diskriminanta)))/(2*a);\n\n\nif (diskriminanta<0) {\n    printf (\"Rjesenja su imaginarni brojevi.\");\n}\nelse {\n    \ndo {\n    printf(\"Unesite rjesenje x1: \");\n    scanf(\"%lf\",&x1rez);\n    \nif (fabs(x1rez - x1)<0.001) {\n    printf(\"Tacno\\n\");\n    x1=x1rez;\n}\n    \n    else if (x1rez<x1) {\n\nif (fabs(x1rez-x1)<0.1) {\n    printf(\"Priblizno manje\\n\");}\n    else{\n    printf(\"Manje\\n\");}\n}\n\n    else if (x1rez>x1) {\n\nif (fabs(x1rez-x1)<0.1) {\n    printf(\"Priblizno vece\\n\");}\n    else{\n    printf(\"Vece\\n\");}\n\n}\n\n}while ((x1!=x1rez));\n\n\n\ndo {\n    printf(\"Unesite rjesenje x2: \");\n    scanf(\"%lf\",&x2rez);\n    \n    \nif (fabs(x2rez - x2)<0.001) {\n    printf(\"Tacno\");\n     x2=x2rez;\n  \n}\n    else if (x2rez<x2) {\n   \nif (fabs(x2rez-x2)<0.1) {\n    printf(\"Priblizno manje\\n\");}\n    else{\n    printf(\"Manje\\n\");}\n}\n\n    else if (x2rez>x2) {\n   \nif (fabs(x2rez-x2)<0.1) {\n    printf(\"Priblizno vece\\n\");}\n    else{\n    printf(\"Vece\\n\");}\n\n}\n} while ((x2!=x2rez));\n\n}\n\nreturn 0;    \n\n}\n\n",
        "student5622": "#include <stdio.h>\n#include <math.h>\n#define EPSILON 0.001\n\nint main() {\n\tdouble D,x1,x2,a,b,c,k=32000,m=32000;\n\tprintf(\"Unesite koeficijente a, b i c: \");\n\tscanf(\"%lf %lf %lf\", &a, &b, &c);\n\tD=b*b-4*a*c;\n\tif(D<0){ \n\t\tprintf(\"Rjesenja su imaginarni brojevi.\");\n\t\tgoto izlaz;\n\t}\n\telse {\n\t\t\tx1=(-b+sqrt(D))/(2*a);\n\t\t\tx2=(-b-sqrt(D))/(2*a);\n\t}\n\twhile(fabs(k-x1)>=EPSILON){\n\t\tprintf(\"Unesite rjesenje x1: \");\n\t\tscanf(\"%lf\", &k);\n\t\t\n\t\tif(fabs(k-x1)<EPSILON)break;\n\t    if(fabs(k-x1)<0.1 && k<x1) printf(\"Priblizno manje\\n\");\n\t\telse if(fabs(k-x1)<0.1 && k>x1) printf(\"Priblizno vece\\n\");\n\t\telse if(k-x1<EPSILON)printf(\"Manje\\n\");\n\t\telse if(k-x1>EPSILON) printf(\"Vece\\n\");\n\t\n\t \n\t} printf(\"Tacno\\n\");\n\t\n\t\n\twhile(fabs(m-x2)>=EPSILON){\n\t\tprintf(\"Unesite rjesenje x2: \");\n\t\tscanf(\"%lf\", &m);\n\t\t\n\t\tif(fabs(m-x2)<EPSILON) break;\n\t    if(fabs(m-x2)<0.1 && m<x2) printf(\"Priblizno manje\\n\");\n\t\telse if(fabs(m-x2)<0.1 && m>x2) printf(\"Priblizno vece\\n\");\n\t\telse if(m-x2<EPSILON)printf(\"Manje\\n\");\n\t\telse if(m-x2>EPSILON) printf(\"Vece\\n\");\n\t\t\n\t\n\t} printf(\"Tacno\\n\");\n\t\n\n\t\n\tizlaz:return 0;\n}\n"
    },
    "164": {
        "label": "1",
        "student6516": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 1\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n#include <iostream>\n#include <vector>\n#include <cmath>\n\n\nstd::vector<int> IzdvojiGadne (std::vector<int> v,bool b){\n\t\n\n\tstd::vector <int> y;\n\t\t\n    for(int i=0;i<v.size();i++){  //pretvaramo u ternarni oblik i provjeravamo koliko puta se pojavi 1,0,2\n\t\tint b0=0,b1=0,b2=0;\n\t\tint broj=abs(v[i]);\n\twhile(broj!=0){\n\tint ostatak=broj%3;\n\t\tif(ostatak==0) b0++;\n\t\telse if(ostatak==1) b1++; \n\t\telse if(ostatak==2) b2++;\n\t\tbroj=broj/3;\n}\n\tif(b){  //opaki\n\t\tif(b0%2==0 && b1%2==0 && b2%2==0 )\n\t\ty.push_back(v[i]);\n\t\n\t}\n    if(!b){ //odvratni\n\t\t\t \n\t\t\tif((b0%2==1 || b0==0) && (b1%2==1 || b1==0) && (b2%2==1 || b2==0) )\n\t\t\ty.push_back(v[i]);\n\t\t}}\n\t\t\n\tif(y.size()==1 || y.size()==0) return y;\n\t\tfor(int i=0;i<y.size();i++){\n\t\tfor(int j=i+1;j<y.size();j++){\n\t\t\tif(y.at(i)==y.at(j)){\n\t\t\t\tfor(int k=j;k<y.size()-1;k++){\n\t\t\t\t\ty.at(k)=y.at(k+1);\n\t\t\t\t}\n\t\t\t\ty.resize(y.size()-1);\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\n\treturn y;\n}\nint main ()\n{\n\t\n\tstd::cout <<\"Unesite brojeve (0 za prekid unosa): \";\n\tstd::vector<int> a;\n\tint elementi;\n\t\tstd::cin >>elementi;\n\t\n\twhile(elementi!=0){\n\t\ta.push_back(elementi);\n\t\tstd::cin >>elementi;}\n\t\t/*\n\t}\n\tfor (int i=0;i<a.size();i++){\n\n\t\ta.push_back(elementi); \n\t\t\t\t\tstd::cin >>elementi;\n\t\n\t}*/\n\tauto b=IzdvojiGadne(a,1); //b su opaki \n\tauto c=IzdvojiGadne(a,0); //c su odvratni\n\t\n\tstd::cout <<\"Opaki: \";\n\tfor(int x: b) std::cout <<x<<\" \";\n\t/*\n\tfor(int i=0;i<a.size();i++){\n\t\tstd::cout <<a[i]<<\" \";\n\t}*/\n\n\n\tstd::cout <<std::endl<<\"Odvratni: \";\n\tfor(int x: c)std::cout <<x<<\" \";\n\t\n\t\n\t/*\n\tfor(int j=0;j<a.size();j++){\n\t\tstd::cout << a[j]<<\" \";\n\t}\n\t*/\n\t\treturn 0;\n}",
        "student7341": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 1\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n\n#include<iostream>\n#include<vector>\n#include<cmath>\n\n\nstd:: vector<int> IzdvojiGadne(std::vector<int>v, bool n){\n\t\n\tstd::vector<int>gadni;\n\t \n    for(int i=0;i<v.size();i++){\n      int brojacnula=0;\n      int brojacjedan=0;\n      int brojacdva=0;\n      int y=abs(v[i]);\n      while(y!=0){\n          int ostatak=y%3;\n          if(ostatak==2) brojacdva++;\n          else if(ostatak==1) brojacjedan++;\n          \telse if(ostatak==0) brojacnula++;\n         y=y/3;\n     }\n     \n     if(brojacnula%2==0 && brojacjedan%2==0 && brojacdva%2==0 && n) gadni.push_back(v[i]);\n     if((brojacjedan==0 || brojacjedan%2==1) && (brojacnula==0 || brojacnula%2==1) &&(brojacdva==0|| brojacdva%2==1) && !n) gadni.push_back(v[i]);\n }\n if(gadni.size()==0 || gadni.size()==1) return gadni;\n  for(int i=0;i<gadni.size()-1;i++){\n        for(int j=i+1;j<gadni.size();j++){\n            if(gadni[i]==gadni[j]){\n                gadni.erase(gadni.begin()+j);\n                j--;\n            } \n        }\n}\n\n     \n\t \nreturn gadni;\n\t\n}\t\nint main (){\n    std::vector<int>v;\n    std::cout<<\"Unesite brojeve (0 za prekid unosa): \";\n    int broj;\n    std::cin>>broj;\n    while(broj!=0){\n        v.push_back(broj);\n        std::cin>>broj;\n    }\n    //for(int x: v) std::cout<<x<<\" \";\n    \n    \n    auto opaki=IzdvojiGadne(v,1);\n    auto odvratni=IzdvojiGadne(v,0);\n    \n    std::cout<<\"Opaki: \";\n    for(int x:opaki) std::cout<<x<<\" \";\n    std::cout<<std::endl<<\"Odvratni: \";\n    for(int x: odvratni) std::cout<<x<<\" \";\n    \n\treturn 0;\n}"
    },
    "165": {
        "label": "0",
        "student1009": "#include <stdio.h>\n\nint main() {\n\tint m,n,A[100][100]={0},B[100][100]={0},C[100][100]={0},i,j,jeste=1,broj,brojac=0,brojac1=0,brojac2=0,k=0,s=0;\n\tdo{\n\tprintf(\"Unesite brojeve M i N: \");\n\tscanf(\"%d %d\",&m,&n);\n\t}while(m>100 || n>100 );\n\tprintf(\"Unesite clanove matrice A: \");\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<m;j++){\n\t\t\tscanf(\"%d\",&A[i][j]);\n\t\t}\n\t}\n\tprintf(\"Unesite clanove matrice B: \");\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<m;j++){\n\t\t\tscanf(\"%d\",&B[i][j]);\n\t\t}\n\t}\n\tprintf(\"Unesite clanove matrice C: \");\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<m;j++){\n\t\t\tscanf(\"%d\",&C[i][j]);\n\t\t}\n\t}\n\t\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<m;j++){\n\t\t\tbroj=A[i][j];\n\t\t\tfor(k=0;k<n;k++){\n\t\t\t\tfor(s=0;s<m;s++){\n\t\t\t\t\tif(A[k][s]==broj) brojac++;\n\t\t\t\t\tif(B[k][s]==broj) brojac1++;\n\t\t\t\t\tif(C[k][s]==broj) brojac2++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(brojac!=brojac2 || brojac!=brojac1) {\n\t\t\t\tprintf(\"NE\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tbrojac1=0;brojac2=0,brojac=0;\n\t\t}\n\t}\n\tprintf(\"DA\");\n\treturn 0;\n}\n",
        "student1412": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main() {\n\tint A[100][100], B[100][100], C[100][100], pomocnaA[20000], pomocnaB[20000],pomocnaC[20000];\n\tint velicinaA=0, velicinaB=0, velicinaC=0, m, n, i, j, k;\n\tint l, ubaci, x, brojac, uslov1,imaB, uslov2,imaC;\n\n\t\twhile (1) {\n\t\tprintf(\"Unesite brojeve M i N:\");\n\t\tscanf(\"%d%d\",&m, &n);\n\t\tif (m<=100 && m>=0 && n<=100 && n>=0) break;\n\t\t}\n\t\t\n\t\n\t\tprintf(\"Unesite clanove matrice A: \");\n\t\t   for ( i=0; i<m; i++) {\n\t\t\t\tfor ( j=0; j<n; j++) {\n\t\t\t\t\tscanf(\"%d\", &A[i][j]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\tprintf(\"Unesite clanove matrice B: \");\n\t\t   for (i=0; i<m; i++) {\n\t\t\t\tfor (j=0; j<n; j++) {\n\t\t\t\t\tscanf(\"%d\", &B[i][j]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\tprintf(\"Unesite clanove matrice C: \");\n\t\t   for (i=0; i<m; i++) {\n\t\t\t\tfor ( j=0; j<n; j++) {\n\t\t\t\t\tscanf(\"%d\", &C[i][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t  for (i=0; i<m; i++) {\n\t\t\t\tfor ( j=0; j<n; j++) {\n\t\t\t\t\tubaci = 0;\n\t\t\t\t\tx = A[i][j];\n\t\t\t\t\tbrojac = 0;\n\t\t\t\t\tfor (k=0; k<velicinaA; k++) {\n\t\t\t\t\t if(k%2==0) {\n\t\t\t\t\t \tif(x==pomocnaA[k])\n\t\t\t\t\t \t\tubaci = 0;\n\t\t\t\t\t }\n\t\t\t\t\t}\n\t\t\t\t\tfor(k=1; k<=m; k++) {\n\t\t\t\t\t\tfor(l=2; l<n+2; l++) {\n\t\t\t\t\t\tif(x==A[k-1][l-2])\n\t\t\t\t\t\tbrojac++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(ubaci == 1) {\n\t\t\t\t\t\tpomocnaA[velicinaA++]=x;\n\t\t\t\t\t\tpomocnaA[velicinaA++]=brojac;\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(i=0;i<m;i++){\n\t\t\t\t\t\tfor(j=0;j<n;j++){\n\t\t\tx=B[i][j];\n\t\t\tubaci=1;\n\t\t\tbrojac=0;\n\t\t\tfor(k=0;k<velicinaB;k+=2){\n\t\t\t\tif(x==pomocnaB[k]) ubaci=0;\n\t\t\t}\n\t\t\tfor(k=0;k<m;k++){\n\t\t\t\tfor(l=0;l<n;l++) if(x==B[k][l]) brojac++;\n\t\t\t}\n\tif(ubaci){\n\t\t\t\tpomocnaB[velicinaB++]=x;\n\t\t\t\tpomocnaB[velicinaB++]=brojac;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<m;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tx=C[i][j];\n\t\t\tubaci=1;\n\t\t\tbrojac=0;\n\t\t\tfor(k=0;k<velicinaC;k+=2){\n\t\t\t\tif(x==pomocnaC[k]) ubaci=0;\n\t\t\t}\n\t\t\tfor(k=0;k<m;k++){\n\t\t\t\tfor(l=0;l<n;l++) if(x==C[k][l]) brojac++;\n\t\t\t}\n\t\t\tif(ubaci){\n\t\t\t\tpomocnaC[velicinaC++]=x;\n\t\t\t\tpomocnaC[velicinaC++]=brojac;\n\t\t\t}\n\t\t}\n\t}\n\n\nfor(i=0;i<velicinaB;i+=2){\n\t\tuslov1=1;\n\t\timaB=0;\n\t\tfor(j=0;j<velicinaA;j+=2){\n\t\t\tif(pomocnaB[i]==pomocnaA[j]){\n\t\t\t\timaB=1;\n\t\t\t\tif(pomocnaB[i+1]!=pomocnaA[j+1]){\n\t\t\t\t\tuslov1=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tif(imaB==0) uslov1=0;\n\t\tif(uslov1==0) break;\n\t}\n\tfor(i=0;i<velicinaC;i+=2){\n\t\tuslov2 = 1;\n\t\timaC=0;\n\t\tfor(j=0;j<velicinaA;j+=2){\n\t\t\tif(pomocnaC[i]==pomocnaA[j]){\n\t\t\t\timaC=1;\n\t\t\t\tif(pomocnaC[i+1]!=pomocnaA[j+1]){\n\t\t\t\t\tuslov2=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(imaC==0) uslov2=0;\n\t\tif(uslov2==0) break;\n\t}\n\tif(uslov1==0 || uslov2==0) printf(\"NE\");\n\telse printf(\"DA\");\n\n\n\treturn 0;\n\n\t\n\t\n}\n\n\n\t\t\t\t\t\n\t\n"
    },
    "166": {
        "label": "1",
        "student5170": "#include <stdio.h>\n#include <math.h>\nint main() {\n    char L;\n    int UV=0,C=0,B=0,S=0,V=0,P=0;\n    float PC,PB,PS,PV,PP;\n    printf(\"Unesite vozila: \");\n    do {\n    scanf(\"%c\",&L);\n    if (L!='C' && L!='c' && L!='B' && L!='b' && L!='S' && L!='s' && L!='V' && L!='v' && L!='P' && L!='p' && L!='k' && L!='K' && L!='\\n') {printf(\"Neispravan unos\\n\");}\n    else if (L=='C' || L=='c' || L=='B' || L=='b' || L=='S' || L=='s' || L=='V' || L=='v' || L=='P' || L=='p') {UV++;}\n    if (L=='p' || L=='P') {P++;}\n    if (L=='v' || L=='V') {V++;}\n    if (L=='s' || L=='S') {S++;}\n    if (L=='b' || L=='B') {B++;}\n    if (L=='c' || L=='C') {C++;}\n    } while (L!='k' && L!='K');\n    printf(\"Ukupno evidentirano %d vozila.\\n\", UV);\n    if (UV!=0) {\n    if (C>=V && C>=S && C>=B && C>=P) {PC=(C*100.0)/UV; printf(\"Najpopularnija boja je crna (%.2f%%).\", PC);}\n    else if (B>=V && B>=S && B>=P && B>=C) {PB=(B*100.0)/UV; printf(\"Najpopularnija boja je bijela (%.2f%%).\", PB);}\n    else if (S>=V && S>=P && S>=B && S>=C) {PS=(S*100.0)/UV; printf(\"Najpopularnija boja je siva (%.2f%%).\", PS);}\n    else if (V>=P && V>=S && V>=B && V>=C) {PV=(V*100.0)/UV; printf(\"Najpopularnija boja je crvena (%.2f%%).\", PV);}\n    else if (P>=V && P>=S && P>=B && P>=C) {PP=(P*100.0)/UV; printf(\"Najpopularnija boja je plava (%.2f%%).\", PP);}\n    }\n    else {printf(\"Najpopularnija boja je crna (0.00%%).\");}\n\treturn 0;\n}\n",
        "student8540": "#include <stdio.h>\n#include <math.h>\nint main() {\n    char M;\n    int CA=0, BA=0, SA=0, PA=0, VA=0, Ubv=0;\n    float CB, BB, SB, PB, VB;\n    printf(\"Unesite vozila: \");\n    do {\n        scanf(\"%c\",&M);\n        if (M!='C' && M!='c' && M!='B'&& M!='b'&& M!='S'&& M!='s'&& M!='P'&& M!='p'&& M!='K' && M!='k' && M!='V' && M!='v' && M!='\\n')\n            {printf(\"Neispravan unos\\n\"); \n        }\n        else if (M=='C'|| M=='c'|| M=='B'|| M=='b'|| M=='S'|| M=='s'|| M=='P'|| M=='p' || M=='V' || M=='v') {Ubv++;} \n        if (M=='c' || M=='C') {CA++;} \n        if (M=='b' || M=='B') {BA++;}\n        if (M=='s' || M=='S') {SA++;}\n        if (M=='p' || M=='P') {PA++;}\n        if (M=='v' || M=='V') {VA++;} \n    } while (M!='k' && M!='K');\n    printf(\"Ukupno evidentirano %d vozila. \\n\", Ubv);\n    \n    if(Ubv!=0) {\n        if (CA>=BA && CA>=SA && CA>=PA && CA>=VA) { \n            CB=(CA*100.0)/Ubv; printf(\"Najpopularnija boja je crna (%.2f%).\", CB);}\n        else if (BA>=CA && BA>=SA && BA>=PA && BA>=VA) { \n            BB=(BA*100.0)/Ubv; printf(\"Najpopularnija boja je bijela (%.2f%).\", BB);}\n        else if (SA>=BA && SA>=CA && SA>=PA && SA>=VA) { \n            SB=(SA*100.0)/Ubv; printf(\"Najpopularnija boja je siva (%.2f%).\", SB);}\n        else if (PA>=BA && PA>=SA && PA>=CA && PA>=VA) { \n            PB=(PA*100.0)/Ubv; printf(\"Najpopularnija boja je plava (%.2f%).\", PB);}\n        else if (VA>=BA && VA>=SA && VA>=PA && VA>=CA) { \n            VB=(VA*100.0)/Ubv; printf(\"Najpopularnija boja je crvena (%.2f%).\", VB); }\n    } \n    \n    else {\n        printf(\"Najpopularnija boja je crna (0.00%).\");\n    }\n    return 0;\n}\n"
    },
    "167": {
        "label": "0",
        "student7888": "#include <stdio.h>\n#include <math.h>\n#define eps 0.00000000000000000000000000000000000000000000001\n\nstruct Student {\n\tchar ime[20], prezime[20];\n\tint ocjene[50];\n\tint br_ocjena;\n};\n\n\t\t\t\t\t\t\t\t\t\t/* Funkcija genijalci prima niz studenata, velicinu niza i realan broj prosjek */\n\nint genijalci(struct Student studenti[], int vel, float prosjek)\t{\n\t\tint i,j,k,suma,brojac,max1,max2,p=0,s=0;\n\t\tfloat prosjek_studenta,prosjek_studenta1;\n\n\t\n\t\t\t\t\t\t\t\t\t\t/* Izbacivanje studenata koji imaju manji prosjek od zadanog */\n\n\t\tfor (i = 0 ; i < vel ; i++)\t{\n\t\t\n\t\t\tsuma = 0;\n\t\t\tbrojac = 0;\n\t\t\n\t\t\n\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\t{\n\t\t\n\t\t\n\t\t\t\t\t\t\t\t\t\t/* Ako student ima samo jednu evidentiranu ocjenu prosjek mu je automatski 5.0 */\n\t\t\tif ( studenti[i].ocjene[j] == 5)\t{\n\t\t\t\tsuma = 5;\n\t\t\t\tbrojac = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\t\tsuma+=studenti[i].ocjene[j];\n\t\t\t\tbrojac++;\n\t\t}\n\t\t\t\t\t\t\t\t\t\t/* Ako student nema evidentirani ocjena prosjek mu je tako\u0111er 5.0 */\n\t\t\t\tif ( suma == 0)\t{\n\t\t\t\n\t\t\t\tsuma = 5;\n\t\t\t\tbrojac = 1;\n\t\t\t}\n\t\t\n\t\t\n\t\tprosjek_studenta = (float)suma/brojac;\n\t\t\n\t\t\tif ( prosjek_studenta < prosjek)\t{\n\t\t\t\n\t\t\t\tfor ( k = i ; k < vel-1 ; k++)\t{\n\t\t\t\t\n\t\t\t\t\tstudenti[k] = studenti[k+1];\n\t\t\t\t}\n\t\t\t\n\t\t\n\t\t\ti--;\n\t\t\tvel--;\n\t\n\t\t}\n\t\n\t\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ispisivanje imena i prezimena studenta sa najvecim prosjekom */\n\t\t\t\ti = 0;\n\t\t\t\tsuma = 0;\n\t\t\n\t\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\t\tsuma+=studenti[i].ocjene[j];\n\t\t\n\t\t\t\tprosjek_studenta = (float)suma/studenti[i].br_ocjena;\n\t\t\n\t\t\t\n\t\t\t\t\tfor ( k = i+1 ; k < vel ; k++ )\t{\n\t\t\t\t\t\tsuma = 0;\n\t\t\n\t\t\t\t\t\tfor ( j = 0 ; j < studenti[k].br_ocjena ; j++)\t\tsuma+=studenti[k].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta1 = (float)suma/studenti[k].br_ocjena;\n\t\t\n\t\t\n\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko dva studenta imaju isti prosjek ispisuje se ime onog studenta \u010dije je prezime ispred po leksikografskom redoslijedu */\n\t\t\t\n\t\t\t\t\twhile (fabs(prosjek_studenta - prosjek_studenta1)<eps)\t{\n\t\t\t\t\n\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\ts = 0;\n\t\t\t\t\t\n\t\t\t\t\t\t\twhile ( studenti[i].prezime[p] == studenti[k].prezime[s] && studenti[i].prezime[p] != '\\0' && studenti[k].prezime[s] != '\\0') {\n\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tif ( studenti[i].prezime[p] == '\\0' || studenti[k].prezime[s] == '\\0')\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ako im je isto prezime onda im se gleda ime */ \n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twhile ( studenti[i].ime[p] == studenti[k].ime[s] && studenti[i].ime[p] != '\\0' && studenti[k].ime[s] != '\\0') {\n\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tif ( studenti[i].ime[p] > studenti[k].ime[s] )\t{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\t\t\tif ( studenti[i].prezime[p] > studenti[k].prezime[s] )\t{\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\tif ( prosjek_studenta < prosjek_studenta1)\t{\n\t\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\ti = k;\n\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\t\t\tmax1 = i;\n\t\t\t\t\t\tif ( i < vel)\n\t\t\t\t\t\tprintf(\"%s %s\\n\", studenti[i].prezime,studenti[i].ime);\n\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t/* Ispis studenta sa drugim najvecim prosjekom */\n\t\t\t\n\t\t\ti = 0;\n\t\t\tsuma = 0;\n\t\t\t\n\t\t\tif ( i == max1) i++;\n\t\t\tif ( i < vel)\t{\n\t\t\t\t\n\t\t\t\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\tsuma+=studenti[i].ocjene[j];\n\t\t\t\n\t\t\t\t\tprosjek_studenta = (float)suma/studenti[i].br_ocjena;\n\t\t\n\t\t\t\n\t\t\t\t\t\tfor ( k = i+1 ; k < vel ; k++ )\t{\n\t\t\t\t\t\t\tsuma = 0;\n\t\t\t\t\t\t\tif ( k == max1) k++;\n\t\t\t\t\t\t\tif ( k >= vel)\tbreak;\n\t\t\t\t\t\t\t\tfor ( j = 0 ; j < studenti[k].br_ocjena ; j++)\t\tsuma+=studenti[k].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\tprosjek_studenta1 = (float)suma/studenti[k].br_ocjena;\n\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko dva studenta imaju isti prosjek ispisuje se ime onog studenta \u010dije je prezime ispred po leksikografskom redoslijedu */\n\n\t\t\n\t\t\t\t\t\t\twhile (fabs(prosjek_studenta - prosjek_studenta1)<eps)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\twhile ( studenti[i].prezime[p] == studenti[k].prezime[s] && studenti[i].prezime[p] != '\\0' && studenti[k].prezime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t/* Ako im je isto prezime onda im se gleda ime */ \n\t\t\t\t\n\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] == '\\0' || studenti[k].prezime[s] == '\\0')\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\twhile ( studenti[i].ime[p] == studenti[k].ime[s] && studenti[i].ime[p] != '\\0' && studenti[k].ime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif ( studenti[i].ime[p] > studenti[k].ime[s] )\t{\n\t\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] > studenti[k].prezime[s] )\t{\n\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\tif ( prosjek_studenta < prosjek_studenta1)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t\tmax2 = i;\n\t\t\t\t\t\t\tif ( i < vel)\n\t\t\t\t\t\t\tprintf(\"%s %s\\n\", studenti[i].prezime,studenti[i].ime);\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* Ispis studenta sa trecim najvecim prosjekom */\n\t\t\t\n\t\t\t\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tsuma = 0;\n\t\t\t\n\t\t\t\t\t\t\twhile ( i == max1 || i == max2) i++;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( i < vel)\t{\n\t\t\t\n\t\t\t\t\t\t\t\t\tfor ( j = 0 ; j < studenti[i].br_ocjena ; j++)\tsuma+=studenti[i].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\t\t\tprosjek_studenta = (float)suma/studenti[i].br_ocjena;\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\tfor ( k = i+1 ; k < vel ; k++ )\t{\n\t\t\t\t\t\t\t\t\tsuma = 0;\n\t\t\t\t\t\t\t\t\twhile ( k == max1 || k == max2) k++;\n\t\t\t\t\t\t\t\t\tif ( k >= vel) break;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tfor ( j = 0 ; j < studenti[k].br_ocjena ; j++)\t\tsuma+=studenti[k].ocjene[j];\n\t\t\t\n\t\t\t\t\t\t\t\t\t\tprosjek_studenta1 = (float)suma/studenti[k].br_ocjena;\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko dva studenta imaju isti prosjek ispisuje se ime onog studenta \u010dije je prezime ispred po leksikografskom redoslijedu */\n\n\t\t\n\t\t\t\t\t\t\t\t\t\t\twhile (fabs(prosjek_studenta - prosjek_studenta1)<eps)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\twhile ( studenti[i].prezime[p] == studenti[k].prezime[s] && studenti[i].prezime[p] != '\\0' && studenti[k].prezime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Ukoliko imaju isto prezime gleda se ime */\n\t\t\t\t\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] == '\\0' || studenti[k].prezime[s] == '\\0')\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tp = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\ts = 0;\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\twhile ( studenti[i].ime[p] == studenti[k].ime[s] && studenti[i].ime[p] != '\\0' && studenti[k].ime[s] != '\\0') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif ( studenti[i].ime[p] > studenti[k].ime[s] )\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\tif ( studenti[i].prezime[p] > studenti[k].prezime[s] )\t{\n\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\n\t\t\t\t\t\t\t\t\tif ( prosjek_studenta < prosjek_studenta1)\t{\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tprosjek_studenta = prosjek_studenta1;\n\t\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( i < vel)\n\t\t\t\t\t\t\t\tprintf(\"%s %s\\n\", studenti[i].prezime,studenti[i].ime);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\n\treturn vel;\n}\n\n\n\nint main() {\n\t\n\n\treturn 0;\n}\n",
        "student8288": "#include <stdio.h>\n\nstruct Student {\n\tchar ime[20], prezime[20];\n\tint ocjene[50];\n\tint br_ocjena;\n};\n\nint daLiImaPet(struct Student s)\n{\n\tint i; \n\t\n\tfor(i=0;i<s.br_ocjena;i++)\n\t{\n\t\tif(s.ocjene[i] == 5)\n\t\treturn 1;\n\t}\n\t\n\t\n\treturn 0;\n\n}\n\nint imaOcjenu(struct Student s)\n{\n\tif(s.br_ocjena == 0)\n\t\treturn 0;\n\t\t\n\treturn 1; \t\n}\n\nfloat ukProsjek(struct Student s)\n{\n\tint i;\n\tfloat suma = 0;\n\tfloat br_ocjena;\n\t\n\tif(s.br_ocjena==0)\n\t\treturn 5;\n\t\n\tfor(i=0;i<s.br_ocjena;i++)\n\t{\n\t\tsuma+=s.ocjene[i];\n\t\t\n\t}\n\tbr_ocjena=s.br_ocjena;\n\tsuma=suma/br_ocjena;\n\treturn suma;\n}\n\nvoid kopirajRijec(char* ulaz,char* izlaz)\n{\n\twhile(*ulaz != '\\0' && *ulaz !='\\n')\n\t*izlaz++=*ulaz++;\n\t*izlaz='\\0';\n\t\n}\n\nint jednakeRijeci(char* prva, char* druga)\n{\n\tint jednake = 1;\n\twhile((*prva != '\\n' && *prva != '\\0')&&(*druga != '\\n' && *druga != '\\0'))\n\t{\n\t\tif(*prva != *druga) jednake = 0;\n\t\tprva++;\n\t\tdruga++;\n\t}\n\t\n\tif(*prva != *druga) jednake = 0;\n\t\n\treturn jednake;\n\t\n}\n\nint vecaRijec(char* r1,char* r2)\n{\n\tchar prva[100];\n\tchar druga[100];\n\tkopirajRijec(r1,prva);\n\tkopirajRijec(r2,druga);\n\tint clan = 0;\n\t\n\twhile((prva[clan] != '\\n' && prva[clan] != '\\0')&&(druga[clan] != '\\n' && druga[clan] != '\\0'))\n\t{\n\t\tif(prva[clan] > druga[clan]) return 1;\n\t\telse if(prva[clan] < druga[clan]) return 0;\n\t\tclan++;\n\t}\n\tif(prva[clan] == '\\n' || prva[clan] == '\\0') return 1;\n\t\n\telse return 0;\n}\n\nint daLiJeVeci(struct Student s1, struct Student s2)\n{\n\tif(ukProsjek(s1)>ukProsjek(s2))\n\t{\n\t\treturn 1;\n\t}\n\telse if(ukProsjek(s1)<ukProsjek(s2))\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\telse\n\t{\n\t\tif(!jednakeRijeci(s1.prezime,s2.prezime) && vecaRijec(s1.prezime,s2.prezime))\n\t\t\treturn 1;\n\t\t\n\t\telse if(!jednakeRijeci(s1.prezime,s2.prezime) && vecaRijec(s1.prezime,s2.prezime))\n\t\t\treturn 0;\n\t\t\n\t\telse\n\t\t \t{\n\t\t \t\tif(!jednakeRijeci(s1.ime,s2.ime) && vecaRijec(s1.ime,s2.ime))\n\t\t \t\t\treturn 0;\n\t\t \t\t\n\t\t \t\telse if(!jednakeRijeci(s1.ime,s2.ime) && vecaRijec(s1.ime,s2.ime))\n\t\t \t\t\treturn 1;\n\t\t \t\t\t\n\t\t \t\telse return 1;\n\t\t \t}\n\t}\n\t\n}\n\nvoid ispisStudent(struct Student s)\n\t{\n\t\tprintf(\"%s %s\\n\",s.prezime,s.ime);\n\t\t\n\t}\n\n\n\nint genijalci(struct Student *niz, int vel,float prosjek )\n{\n\tint i,j;\n    int  nizN[100];\n\t\n\tint temp;\n\t\n\tfor(i=0;i<vel;i++)\n\t{\n\t\tif(imaOcjenu(niz[i]) == 0 || daLiImaPet(niz[i]) == 1 || ukProsjek(niz[i]) < prosjek)\n\t\t{\n\t\t\tfor(j=i;j<vel-1;j++)\n\t\t\t{\n\t\t\t\tniz[j]=niz[j+1];\n\t\t\t\t\n\t\t\t}\n\t\t\tvel--;\n\t\t\ti--;\n\t\t}\n\t}\n\t\n\t\n\t\n\tfor(i=0;i<vel;i++)\n\t{\n\t\tnizN[i] = i;\n\t}\n\t\n\tfor(i=0;i<vel;i++)\n\t{\n\t\tfor(j=i;j<vel;j++)\n\t\t{\n\t\t\tif(daLiJeVeci(niz[nizN[j]],niz[nizN[i]]))\n\t\t\t{\n\t\t\t\ttemp = nizN[j];\n\t\t\t\tnizN[j] = nizN[i];\n\t\t\t\tnizN[i] = temp;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\n\t}\n\t\n\tfor(i=0;i<3 && i<vel;i++)\n\t{\n\t \tispisStudent(niz[nizN[i]]);\n\t}\n\t\n\treturn vel;\n}\n\n\n\n\nint main() {\n\t\treturn 0;\n}\n"
    },
    "168": {
        "label": "1",
        "student3872": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include<stdexcept>\n#include<vector>\n#include<set>\n#include<list>\n#include<algorithm>\n#include<string>\n#include<iomanip>\nusing namespace std;\nint DuzinaImena(string ime)\n{\n    \n    int brojac(0);\n    for(int i=0;i<ime.length();i++)\n    {\n        if((ime[i]>='A' && ime[i]<='Z') || (ime[i]>='a' && ime[i]<='z') || (ime[i]>='0' && ime[i]<='9'))\n        brojac++;\n    }\n    return brojac;\n}\nvector<set<string>> Razvrstavanje( const vector<string> &ImenaDjece, int broj_timova)\n {\n     if(broj_timova<1 || broj_timova>ImenaDjece.size()) throw logic_error(\"Razvrstavanje nemoguce\");\n    vector<set<string>> Krajnji;\n    set<string> temp;\n     list<string> lista_djece;\n     for(int i=0;i<ImenaDjece.size();i++)\n     lista_djece.push_back(ImenaDjece[i]);\n    \n     int br_tim=ImenaDjece.size()%broj_timova;\n     int broj_clanove(0), broj_timove(0);\n     int obican_broj_timova(ImenaDjece.size()/broj_timova);\n    int broj_timova_s_vise_djece(ImenaDjece.size()/broj_timova);\n    if(br_tim!=0) broj_timova_s_vise_djece++;\n     auto it(lista_djece.begin());\n     while(!lista_djece.empty())\n     {\n         int broj(DuzinaImena(*it));\n         temp.insert(*it);\n         it=lista_djece.erase(it);\n         if(it==lista_djece.end())\n            it=lista_djece.begin();\n            broj_clanove++;\n            if(broj_clanove==broj_timova_s_vise_djece)\n            {\n                Krajnji.push_back(temp);\n                broj_clanove=0;\n                broj_timove++;\n                temp.clear();\n            }\n            else if(broj_clanove== obican_broj_timova && broj_timove>= br_tim)\n            {\n                Krajnji.push_back(temp);\n                broj_clanove=0;\n                temp.clear();\n            }\n            for(int i(1);i<broj;i++)\n            {\n                it++;\n                if(it==lista_djece.end())\n                it=lista_djece.begin();\n            }\n     }\n     return Krajnji;\n }\nint main ()\n{\n    vector<string> djeca;\n\tint broj_djece;\n\tcout<<\"Unesite broj djece: \";\n\tcin>>broj_djece;\n\t\n\tcin.ignore(1000,'\\n');\n\tcout<<\"Unesite imena djece: \"<<endl;\n\t\n\tfor(int i=0;i<broj_djece;i++)\n\t{\n\t    string ime;\n\t    getline(cin, ime);\n\t    djeca.push_back(ime);\n\t}\n\tcout<<\"Unesite broj timova: \";\n\n\tint broj_timova;\n\tcin>>broj_timova;\n\ttry\n\t{\n\tvector<set<string>> Rezultat;\n\tRezultat=Razvrstavanje(djeca, broj_timova);\n\tint temp(0);\n  for(int i=0;i<Rezultat.size();i++)\n  {\n      cout<<\"Tim \"<<temp+1<<\": \";\n      int pom(Rezultat[i].size());\n      int brojac(0);\n      for(auto p(Rezultat[i].begin());p!=Rezultat[i].end();p++)\n      {\n          cout<<*p;\n          brojac++;\n          if(brojac!=pom)\n          cout<<\", \";\n      }\n      temp++;\n      cout<<endl;\n      \n  } \n\t}\n\tcatch(logic_error izuzetak)\n\t{\n\t    cout<<\"Izuzetak: \"<<izuzetak.what();\n\t}\n  return 0;\n\t\n\n\treturn 0;\n\t\n}",
        "student6184": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include <vector>\n#include <set>\n#include <iterator>\n#include <list>\n#include <iomanip>\n#include <stdexcept>\n\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> v,int n){\n    if(n<1 || n>v.size()) throw std::logic_error(\"Razvrstavanje nemoguce\");\n    \n    std::list<std::string> lista;\n    //std::list<std::string>::iterator it(lista.begin());\n    for(int i=0;i<v.size();i++){\n        lista.push_back(v[i]);\n\n    }// prepisivanje u listu\n   // std::cout<<\"Prepisano u listu: \";\n   // for(auto x : lista) std::cout << x << \" \";\n\n    //prvo odrediti koliko timova se moze napraviti i koliko oni mogu imati clanova\n    int broj_clanova1,broj_clanova2,br_sa_vise,br_sa_manje;\n    if(v.size()%n==0){\n        broj_clanova1=broj_clanova2=v.size()/2;\n        br_sa_vise=n-1;\n        br_sa_manje=1;\n    }else{\n            broj_clanova1=(v.size()/n+1);\n            broj_clanova2=(v.size()/n);\n            br_sa_vise=(v.size()%n);\n            br_sa_manje=(n-br_sa_vise);\n    }\n\n\n\n    std::vector<std::set<std::string>> povratni;\n    std::set<std::string> timovi;\n    std::list<std::string>::iterator it(lista.begin());\n    std::list<std::string>::iterator it1(lista.begin());\n     timovi.insert(*it);\n    it=lista.erase(it);\n    for(int i=0;i<1;i++){\n           for(int j=0;j<broj_clanova1-1;j++){\n              std::string pom(*it1);\n              int brojac(0);\n              for(int k=0;k<pom.size();k++){\n                  if((pom[k]>'a' && pom[k]<'z') || (pom[k]>'A' && pom[k]<'Z') || (pom[k]>48 && pom[k]<57)) brojac++;\n              }\n           for(int k=0;k<brojac;k++){\n               if(it==lista.end()) it=lista.begin();\n               it++;\n           }\n                    it--;\n                    it1=it;\n                   timovi.insert(*it);\n                   it=lista.erase(it);\n       }\n        povratni.push_back(timovi);\n    }\n     // std::cout<<\"opeta na *it1 \"<<*it1;\n   for(int i=0;i<br_sa_vise-1;i++){\n            std::set<std::string> timovi;\n           for(int j=0;j<broj_clanova1;j++){\n              int brojac((*it1).size());\n           for(int k=0;k<brojac;k++){\n               if(it==lista.end()) it=lista.begin();\n               it++;\n           }\n                    it--;\n                    it1=it;\n                      //std::cout<<\"opeta na *it1 \"<<*it1;\n                   timovi.insert(*it);\n                   it=lista.erase(it);\n       }\n        povratni.push_back(timovi);\n    }\n\n\n\n\n        // std::list<std::string>::iterator it2(it1);\n        it--;\n      // std::cout<<\"sad na *it \"<<*it;\n    for(int i=0;i<br_sa_manje;i++){\n              std::set<std::string> timovi1;\n           for(int j=0;j<broj_clanova2;j++){\n              int brojac((*it1).size());\n          for(int k=0;k<brojac;k++){\n               if(it==lista.end()) it=lista.begin();\n               it++;\n           }\n                    it--;\n                    it1=it;\n                   timovi1.insert(*it);\n                   it=lista.erase(it);\n\n       }\n        povratni.push_back(timovi1);\n\n    }\n    return povratni;\n\n}\n\n\nint main ()\n{\n    try{\n    std::cout<<\"Unesite broj djece: \";\n    int n;\n    std::cin>>n;\n    std::cout<<\"Unesite imena djece: \";\n    std::vector<std::string> v;\n    std::string pom;\n      std::cin.clear();\n       std::cin.ignore(1000 , '\\n');\n    for(int i=0;i<n;i++){\n       std::getline(std::cin,pom);\n        v.push_back(pom);\n         std::cin.clear();\n    }\n    //std::cout<<\"Imena iz vekotra: \"<<std::endl;\n    //for(int i=0;i<v.size();i++) std::cout<<v[i]<<\" \";\n    //std::cout<<std::endl;\n    std::cout<<\"Unesite broj timova: \";\n    int m;\n    std::cin>>m;\n    auto p(Razvrstavanje(v,m));\n    \n       \n        for(int i=0;i<p.size();i++){\n             std::cout<<\"Tim \"<<i+1<<\": \";\n             std::set<std::string>::iterator it(p[i].begin());\n            for(int j=0;j<p[i].size()-1;j++) {\n                std::cout<<*it<<\", \";\n                it++;\n            }\n            std::cout<<*it;\n            std::cout<<std::endl;\n        }}\n        catch(std::logic_error izuzetak){\n             std::cout<<\"Izuzetak: \"<<izuzetak.what();\n        }\n        \n\n    \n\treturn 0;\n}"
    },
    "169": {
        "label": "0",
        "student2221": "#include <stdio.h>\n\nint jednakiSu(char* s1, char* s2)\n{\n\tint i = 0, t = 1;\n\twhile (s1[i] != '\\0')\n\t{\n\t\tif (s1[i] != s2[i])\n\t\tt = 0;\n\t\tif (!t) return t;\n\t\ti++;\n\t}\n\ti = 0;\n\twhile (s2[i] != '\\0')\n\t{\n\t\tif (s1[i] != s2[i])\n\t\tt = 0;\n\t\tif (!t) return t;\n\t\ti++;\n\t}\n\treturn t;\n}\n\nvoid zamijeni(char* s, char* zamjena, int i)\n{\n\tint ind = i-1;\n\twhile (ind >= 0 && s[ind] != ' ')\n\t{\n\t\tind--;\n\t}\n\tind++;\n\tchar m[1000];\n\tint j = 0, k = 0;\n\t\n\twhile (s[j] != '\\0')\n\t{\n\t\tif (j < i && j >= ind)\n\t\t{\n\t\t\tint h = 0;\n\t\t\t\n\t\t\twhile (zamjena[h] != '\\0')\n\t\t\t{\n\t\t\t\tm[k] = zamjena[h];\n\t\t\t\th++;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\twhile (s[j] != ' ' && s[j] != '\\0')\n\t\t\tj++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tm[k] = s[j];\n\t\tk++;\n\t\tj++;\n\t}\n\tm[k] = '\\0';\n\tj = 0;\n\twhile(m[j] != '\\0')\n\t{\n\t\ts[j] = m[j];\n\t\tj++;\n\t}\n\ts[j] = '\\0';\n}\n\nchar* zamjena_rijeci(char* tekst, char** rijeci, char**zamjene, int broj_rijeci)\n{\n\tint i1 = 0;\n\twhile (tekst[i1] != '\\0')\n\t{\n\t\tchar temp[50];\n\t\tint i2 = 0; \n\t\twhile (tekst[i1] != '\\0' && tekst[i1] != ' ')\n\t\t{\n\t\t\ttemp[i2] = tekst[i1];\n\t\t\ti2++;\n\t\t\ti1++;\n\t\t}\n\t\ttemp[i2] = '\\0';\n\t\tfor (i2 = 0; i2 < broj_rijeci; i2++)\n\t\t{\n\t\t\tif (jednakiSu(temp,rijeci[i2]) && !jednakiSu(zamjene[i2], rijeci[i2]))\n\t\t\t{\n\t\t\t\tzamijeni(tekst,zamjene[i2],i1);\n\t\t\t\ti1 = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(tekst[i1] == '\\0') break;\n\t\ti1++;\n\t}\n\treturn tekst;\n}\n\nint main()\n{\nchar* rijeci[3] = { \"proba\", \"Ovo\", \"je\" };\nchar* zamjene[3] = { \"\", \"\", \"\" };\nchar tekst[100] = \"Ovo je proba\";\nprintf(\"'%s'\", zamjena_rijeci(tekst, rijeci, zamjene, 3));\n\n\treturn 0;\n}\n",
        "student3776": "#include <stdio.h>\n\nchar duzina(char* string){\n\tint duzina=0;\n\twhile(*string++!='\\0')\n\t\tduzina++;\n\treturn duzina;\n}\nchar* zamjena_rijeci(char* tekst, char** rijeci, char** zamjene, int broj_rijeci){\n\tchar *povratni=tekst,*p=tekst,*q;\n\tint i=0,duz;\n\tif(*tekst=='\\0' || broj_rijeci==0)\n\treturn tekst;\n\twhile(i<broj_rijeci){\n\t\tint ima=0;\n\t\tp=povratni;\n\t\tq=rijeci[i];\n\t\tdo{ \n\t\t\tima=0;\n\t\twhile(*p!='\\0'){\n\t\t\tchar *pom1=p;\n\t\t\tchar *pom2=q;\n\t\t\twhile(*pom1++==*pom2++){\n\t\t\t\tif(*pom2=='\\0' && (*pom1==' ' || *pom1=='\\0')){\n\t\t\t\t\tif(p!=povratni){\n\t\t\t\t\t\tif(*(p-1)==' ' || p-1==povratni)\n\t\t\t\t\t\tima=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tima=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ima) break;\n\t\t\tp++;\n\t\t}\n\t\tif(ima){\n\t\tchar *k=p,*t=p;\n\t\tif(duzina(zamjene[i])!=duzina(rijeci[i])){\n\t\t\twhile(*k!=' ' && *k!='\\0')\n\t\t\tk++;\n\t\t\twhile(*p++=*k++);\n\t\t\tk--;\n\t\t\tp=t;\n\t\t\tduz=duzina(zamjene[i]);\n\t\t\twhile(k>=p){\n\t\t\t\t*(k+duz)=*k--;\n\t\t\t}\n\t\t}\n\t\tt=zamjene[i];\n\t\twhile(*t!='\\0')\n\t\t\t*p++=*t++;\n\t\t}\n\t}while (ima);\n\t\ti++;\n\t}\n\t\treturn povratni;\n}\nint main() {\n\tchar* rijeci[1]={\"dobro\"};\n\tchar* zamjene[1]={\"dobro\"};\n\tchar tekst[100]=\"dobro dobro\";\n\tprintf(\"'%s'\", zamjena_rijeci(tekst, rijeci, zamjene, 1));\n\treturn 0;\n}\n"
    },
    "170": {
        "label": "1",
        "student5832": "#include <stdio.h>\n#define velicina 100\nvoid string(char niz[],int vel );\nint provjeri_duzine(char *s1,int niz[],int vel);\n\nint main()\n{\n\tchar a[velicina];\n\tint i,niz[velicina],vellicina;\n\tprintf(\"Unesite string: \");\n\tstring(a,velicina);\n\tprintf(\"Unesite velicinu niza: \");\n\tscanf(\"%i\",&vellicina);\n\tprintf(\"Unesite niz brojeva: \");\n\tfor(i=0; i<vellicina; i++) {\n\t\tscanf(\"%i\",&niz[i]);\n\t}\n\tprintf(\"%i\",provjeri_duzine(a,niz,vellicina));\n\treturn 0;\n}\nvoid string(char niz[],int vel)\n{\n\tint i=0;\n\tchar slovo=getchar();\n\tif(slovo=='\\n')\n\t\tslovo=getchar();\n\twhile(i<vel-1 && slovo !='\\n') {\n\t\tniz[i]=slovo;\n\t\tslovo=getchar();\n\t\ti++;\n\t}\n\tniz[i]='\\0';\n}\n\nint provjeri_duzine(char *s1,int niz[],int vel)\n{\n\tint broj_r=0,broj_s=0;\n\tint nizz[velicina]= {0};\n\tint i=0,j=0,istina=1;\n\tint duzina=1;\n\twhile(*s1!='\\0') {\n\t\tif(!(*s1>='A' && *s1<='Z' || *s1>='a' && *s1<='z')) {\n\t\t\tduzina=1;\n\t\t\tif(broj_s!=0) {\n\t\t\t\tnizz[i++]=nizz[i]+broj_s;\n\t\t\t\tbroj_s=0;\n\t\t\t}\n\t\t} else if(duzina==1) {\n\t\t\tduzina=0;\n\t\t\tbroj_s=0;\n\t\t\tbroj_r++;\n\t\t}\n\t\tif(duzina==0) {\n\t\t\tbroj_s++;\n\t\t}\n\t\ts1++;\n\t}\n\tchar *end=s1;\n\twhile(*end !='\\0')\n\t\tend++;\n\tif(*(end-1)>='A' && *(end-1)<='Z' || *(end-1)>='a' && *(end-1)<='z') {\n\t\tif(broj_s!=0) {\n\t\t\tnizz[i++]=nizz[i]+broj_s;\n\t\t\tbroj_s=0;\n\t\t}\n\t}\n\tif(broj_r==i && broj_r==vel) {\n\t\tfor(j=0; j<vel; j++)\n\t\t\tif(nizz[j] != niz [j]) {\n\t\t\t\tistina=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t} else\n\t\treturn 0;\n\tif(istina==1)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\n",
        "student9105": "#include <stdio.h>\nvoid unesi(char niz[], int velicina)\n{\n\tchar znak = getchar();\n\tif (znak == '\\n') znak=getchar();\n\tint i = 0;\n\twhile (i < velicina-1 && znak != '\\n') {\n\t\tniz[i] = znak;\n\t\ti++;\n\t\tznak = getchar();\n\t}\n\tniz[i]='\\0';\n}\n\nint provjeri_duzine(char* s, int niz[], int vel){\n\tint razmak=1, broj_rijeci=0, broj_slova=0, niz1[100]={0}, i=0, j=0, jest=1;\n\twhile(*s!='\\0'){\n\t\tif (!(*s>='A' && *s<='Z' || *s>='a' && *s<='z')){\n\t\trazmak=1;\n\t\tif(broj_slova!=0){\n\t\tniz1[i++]+=broj_slova;\n\t\tbroj_slova=0;}}\n\t\telse if(razmak==1){\n\t\trazmak=0;\n\t\tbroj_slova=0;\n\t\tbroj_rijeci++;}\n\t\tif(razmak==0){\n\t\tbroj_slova++;}\n\t\ts++;}\n\t\tchar* kraj=s;\n\t\twhile(*kraj!='\\0') kraj++;\n\t\tif(*(kraj-1)>='A' && *(kraj-1)<='Z' || *(kraj-1)>='a' && *(kraj-1)<='z'){\n\t\tif(broj_slova!=0){\n\t\tniz1[i++]+=broj_slova;\n\t\tbroj_slova=0;}}\n\t\tif(broj_rijeci==i && broj_rijeci==vel){\n\t\t\tfor(j=0; j<vel; j++)\n\t\t\tif(niz1[j]!=niz[j]){\n\t\t\tjest=0; break;}}\n\t\telse return 0;\n\t\tif(jest==1)\n\t\treturn 1;\n\t\telse \n\t\treturn 0;\n\t}\nint main() {\n\tchar x[100];\n\tint niz[100],vel,i;\n\tprintf(\"Unesite string: \");\n\tunesi(x,100);\n\tprintf(\"Unesite velicinu niza: \");\n\tscanf(\"%d\", &vel);\n\tprintf(\"Unesite niz brojeva: \");\n\tfor(i=0; i<vel; i++){\n\tscanf(\"%d\", &niz[i]);}\n\tprintf(\"%d\", provjeri_duzine(x,niz,vel));\n\treturn 0;\n}\n"
    },
    "171": {
        "label": "0",
        "student1828": "#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    double P1,P2,P3,Z1,Z2,Z3,PP1,PP2,PP3,DP1,DP2,DP3,ZI1,ZI2,ZI3,BB1,BB2,BB3;\n    int O6=0,O7=0,O8=0,O9=0,O10=0;\n    //tare\n    printf (\"Unesite bodove za Tarika: \\n\");\n    printf (\"I parcijalni ispit: \" );\n    scanf (\"%lf\",&PP1);\n    if (PP1<0 || PP1>20) {\n        printf (\"Neispravan broj bodova\");\n    return 0;\n    }\n    printf (\"II parcijalni ispit: \");\n    scanf (\"%lf\",&DP1);\n    if (DP1<0 || DP1>20){\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Prisustvo: \");\n    scanf (\"%lf\",&P1);\n    if (P1<0 || P1>10){\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Zadace: \");\n    scanf (\"%lf\",&Z1);\n    if (Z1<0 || Z1>10) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zavrsni ispit: \");\n    scanf (\"%lf\", &ZI1);\n    if (ZI1<0 || ZI1>40) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    //Bojka\n    printf (\"Unesite bodove za Bojana: \\n\");\n    printf (\"I parcijalni ispit: \");\n    scanf (\"%lf\", &PP2);\n    if (PP2<0 || PP2>20) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"II parcijalni ispit: \");\n    scanf (\"%lf\",&DP2);\n    if (DP2<0 || DP2>20){\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Prisustvo: \"); \n    scanf (\"%lf\",&P2);\n    if (P2<0 || P2>10) { \n        printf (\"Neispravan broj bodova\");\n        return 0; }\n    printf (\"Zadace: \");\n    scanf (\"%lf\",&Z2);\n    if (Z2<0 || Z2>20){\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Zavrsni ispit: \");\n    scanf (\"%lf\", &ZI2);\n    if (ZI2<0 || ZI2>40) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    //mirzibad\n    printf (\"Unesite bodove za Mirzu: \\n\");\n    printf (\"I parcijalni ispit: \");\n    scanf (\"%lf\",&PP3);\n    if (PP3<0 || PP3>20) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"II parcijalni ispit: \");\n    scanf (\"%lf\",&DP3);\n    if (DP3<0 || DP3>20){\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Prisustvo: \");\n    scanf (\"%lf\",&P3);\n    if (P3<0 || P3>10){\n        printf (\"Neispravan broj bodova\");\n        return 0; \n    }\n    printf(\"Zadace: \");\n    scanf (\"%lf\",&Z3);\n    if (Z3<0 || Z3>10) {\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf (\"Zavrsni ispit: \");\n    scanf (\"%lf\",&ZI3);\n    if (ZI3<0 || ZI3>40){\n        printf (\"Neispravan broj bodova\");\n        return 0;\n    }\n    //broj bodova\n    BB1=(P1+Z1+PP1+DP1+ZI1);\n    BB2=(P2+Z2+PP2+DP2+ZI2);\n    BB3=(P3+Z3+PP3+DP3+ZI3);\n    \nif (BB1<55 && BB2<55 && BB3<55){printf (\"Nijedan student nije polozio.\\n\"); }\nelse if (BB1<55 && BB2<55 && BB3>=55){printf (\"Jedan student je polozio.\\n\"); }\nelse if (BB1<55 && BB2>=55 && BB3<55){printf (\"Jedan student je polozio.\\n\"); }\nelse if (BB1>=55 && BB2<55 && BB3<55){printf (\"Jedan student je polozio.\\n\"); }\nelse if (BB1<55 && BB2>=55 && BB3>=55){printf (\"Dva studenta su polozila.\\n\"); }\nelse if (BB1>=55 && BB2>=55 && BB3<55){printf (\"Dva studenta su polozila.\\n\"); }\nelse if (BB1>=55 && BB2<55 && BB3>=55){printf (\"Dva studenta su polozila.\\n\"); }\nelse if (BB1>=55 && BB2>=55 && BB3>=55){printf (\"Sva tri studenta su polozila.\\n\");}\n// ocjene iste \nif (BB1>=55 && BB1<65) {O6++;}\nelse if (BB1>=65 && BB1<75) {O7++;}\nelse if (BB1>=75 && BB1<85) {O8++;}\nelse if (BB1>=85 && BB1<92) {O9++;}\nelse if (BB1>=92 && BB1<=100) {O10++;}\nif (BB2>=55 && BB2<65) {O6++;}\nelse if (BB2>=65 && BB2<75) {O7++;}\nelse if (BB2>=75 && BB2<85) {O8++;}\nelse if (BB2>=85 && BB2<92) {O9++;}\nelse if (BB2>=92 && BB2<=100) {O10++;}\nif (BB3>=55 && BB3<65) {O6++;}\nelse if (BB3>=65 && BB3<75) {O7++;}\nelse if (BB3>=75 && BB3<85) {O8++;}\nelse if (BB3>=85 && BB3<92) {O9++;}\nelse if (BB3>=92 && BB3<=100) {O10++;}\nif (BB1<55 || BB2<55 || BB3<55) {return 0;}\nif (O6==2 || O7==2 || O8==2 || O9==2 || O10==2) {\n    printf (\"Dva od tri studenta imaju istu ocjenu.\\n\");return 0;}\nif (O6==3 || O7==3 || O8==3 || O9==3 || O10==3) {\n    printf (\"Sva tri studenta imaju istu ocjenu.\\n\"); return 0;} \nelse{\n    printf (\"Svaki student ima razlicitu ocjenu.\\n\");}\n    return 0;\n}\n\n\n",
        "student8631": "#include <stdio.h>\n#include<stdlib.h>\nint main() {\ndouble IPT, IIPT, PT, ZT, ISPITT,IPB, IIPB,PB,ZB,ISPITB, IPM,IIPM,PM, ZM, ISPITM, SUMT, SUMB, SUMM;\nint ukupnibrojocjena=0, O6=0, O7=0, O8=0, O9=0,O10=0, T=0, M=0, B=0;\n\nprintf(\"Unesite bodove za Tarika: \\nI parcijalni ispit: \");\nscanf(\"%lf\", &IPT);\nif (IPT<0 || IPT >20){\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"II parcijalni ispit: \");\nscanf(\"%lf\", &IIPT);\nif (IIPT<0 || IIPT >20)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"Prisustvo: \");\nscanf(\"%lf\", &PT);\nif (PT<0 || PT>10)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"Zadace: \");\nscanf(\"%lf\", &ZT);\nif (ZT<0 || ZT >10)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"Zavrsni ispit: \");\nscanf(\"%lf\", &ISPITT);\nif (ISPITT<0 || ISPITT>40)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\n\nprintf(\"Unesite bodove za Bojana: \\nI parcijalni ispit: \");\nscanf(\"%lf\", &IPB);\nif (IPB<0 || IPB >20)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"II parcijalni ispit: \");\nscanf(\"%lf\", &IIPB);\nif (IIPB<0 || IIPB >20)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"Prisustvo: \");\nscanf(\"%lf\", &PB);\nif (PB<0 || PB >10)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"Zadace: \");\nscanf(\"%lf\", &ZB);\nif (ZB<0 || ZB >10)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"Zavrsni ispit: \");\nscanf(\"%lf\", &ISPITB);\nif (ISPITB<0 || ISPITB >40)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\n\nprintf(\"Unesite bodove za Mirzu: \\nI parcijalni ispit: \");\nscanf(\"%lf\", &IPM);\nif (IPM<0 || IPM >20)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"II parcijalni ispit: \");\nscanf(\"%lf\", &IIPM);\nif (IIPM<0 || IIPM >20)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"Prisustvo: \");\nscanf(\"%lf\", &PM);\nif (PM<0 || PM >10)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"Zadace: \");\nscanf(\"%lf\", &ZM);\nif (PM<0 || PM >10)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nprintf(\"Zavrsni ispit: \");\nscanf(\"%lf\", &ISPITM);\nif (ISPITM<0 || ISPITM >40)\n{\nprintf (\"Neispravan broj bodova\\n\");\nreturn 0;}\nif(IPT>=0 && IPT<=20 && IIPT>=0 && IIPT<=20 && PT>=0 && PT<=10 && ZT>=0 && ZT<=10 && ISPITT>=0 && ISPITT<=40 &&IPB>=0 && IPB<=20 && IIPB>=0 && IIPB<=20 && PB>=0 && PB<=10 && ZB>=0 && ZB<=10 && ISPITB>=0 && ISPITB<=40 && IPM>=0 && IPM<=20 && IIPM>=0 && IIPM<=20 && PM>=0 && PM<=10 && ZM>=0 && ZM<=10 && ISPITM>=0 && ISPITM<=40)\n{\n    SUMT= IPT+IIPT+PT+ZT+ISPITT;\n    SUMB= IPB+IIPB+PB+ZB+ISPITB;\n    SUMM= IPM+IIPM+PM+ZM+ISPITM;\n}\n\nif(SUMT>=55) T++;\nif(SUMB>=55) B++;\nif(SUMM>=55) M++;\nukupnibrojocjena= T+B+M;\nif(ukupnibrojocjena==0)\nprintf(\"Nijedan student nije polozio. \\n\");\nelse if(ukupnibrojocjena==1)\nprintf(\"Jedan student je polozio. \\n\");\nelse if(ukupnibrojocjena==2)\nprintf(\"Dva studenta su polozila. \\n\");\nelse if(ukupnibrojocjena==3)\n{printf(\"Sva tri studenta su polozila. \\n\");\n\n\nif (SUMT>=92) O10++;\nelse if (SUMT<92 && SUMT>=85) O9++;\nelse if (SUMT<85 && SUMT>=75) O8++;\nelse if (SUMT<75 && SUMT>=65) O7++;\nelse O6++;\n\nif (SUMB>=92) O10++;\nelse if (SUMB<92 && SUMB>=85) O9++;\nelse if (SUMB<85 && SUMB>=75) O8++;\nelse if (SUMB<75 && SUMB>=65) O7++;\nelse O6++;\n\nif (SUMM>=92) O10++;\nelse if (SUMM<92 && SUMM>=85) O9++;\nelse if (SUMM<85 && SUMM>=75) O8++;\nelse if (SUMM<75 && SUMM>=65) O7++;\nelse O6++;\n\n\nif (O6==3 || O7==3 || O8==3 || O9==3 || O10==3)\nprintf(\"Sva tri studenta imaju istu ocjenu. \\n\");\nelse if (O6==2 || O7==2 || O8==2 || O9==2 || O10==2)\nprintf(\"Dva od tri studenta imaju istu ocjenu. \\n\");\nelse \nprintf(\"Svaki student ima razlicitu ocjenu. \\n\");\n}\n\nreturn 0;}\n\n\n\n\n\n\n\n"
    },
    "172": {
        "label": "1",
        "student3517": "#include <stdio.h>\n\nint main() {\n\tint matrica[200][200],M,N;\n\tint i,j,k,z;\n\tdo{\n\t\tprintf(\"Unesite brojeve M i N: \");\n\t\tscanf(\"%d %d\", &M,&N);\n\t\tif(M<1 || M>200 || N<1 || N>200)\n\t\tprintf(\"Brojevi nisu u trazenom opsegu.\\n\");}\n\t\twhile(M<1 || M>200 || N<1 || N>200);\n\t\tprintf(\"Unesite elemente matrice: \");\n\t\tfor(i=0; i<M; i++){\n\t\t\tfor(j=0; j<N; j++)\n\t\t\tscanf(\"%d\", &matrica[i][j]);\n\t\t}\n\t\tfor(i=0; i<M; i++){\n\t\t\tfor(j=i+1; j<M; j++) {\n\t\t\t\tfor(k=0; k<N; k++) {\n\t\t\t\t\tif(matrica[i][k]!=matrica[j][k])\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\n\t\t\tif(k==N) {\n\t\t\t\tfor(z=j; z<M-1; z++) {\n\t\t\t\t\tfor(k=0; k<N; k++)\n\t\t\t\t\tmatrica[z][k]=matrica[z+1][k];\n\t\t\t\t}\n\t\t\t\tM--;\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<N; i++){\n\t\tfor(j=i+1; j<N; j++) {\n\t\t\tfor(k=0; k<M; k++) {\n\t\t\t\tif( matrica[k][i]!=matrica[k][j])\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(k==M) {\n\t\t\t\tfor(z=j; z<N-1; z++) {\n\t\t\t\t\tfor(k=0; k<M; k++) {\n\t\t\t\t\tmatrica[k][z]=matrica[k][z+1];\n\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\tN--;\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"Nakon izbacivanja redova/kolona matrica glasi:\\n\");\n\tfor(i=0; i<M; i++) {\n\t\tfor(j=0; j<N; j++) {\n\t\tprintf(\"%5d\", matrica[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n",
        "student8430": "#include <stdio.h>\n\nint main()\n{\n\n    int matrica[200][200], M, N;\n    int i,j,k,z;\n\n    do {\n        printf(\"Unesite brojeve M i N: \");\n        scanf(\"%d %d\", &M, &N);\n        if(M<1 || M>200 || N<1 || N>200)\n            printf(\"Brojevi nisu u trazenom opsegu.\\n\");\n    } while(M<1 || M>200 || N<1 || N>200);\n\n    printf(\"Unesite elemente matrice: \");\n\n    for(i=0; i<M; i++) {\n        for(j=0; j<N; j++)\n            scanf(\"%d\", &matrica[i][j]);\n\n    }\n\n    for(i=0; i<M; i++) {\n        for(j=i+1; j<M; j++) {\n            for(k=0; k<N; k++) {\n                if(matrica[i][k]!=matrica[j][k])\n                    break;\n            }\n            if(k==N) {\n                for(z=j; z<M-1; z++) {\n                    for(k=0; k<N; k++)\n                        matrica[z][k]=matrica[z+1][k];\n                }\n                M--;\n                j--;\n            }\n\n        }\n    }\n\n    for(i=0; i<N; i++) {\n        for(j=i+1; j<N; j++) {\n            for(k=0; k<M; k++) {\n                if(matrica[k][i]!=matrica[k][j])\n                    break;\n            }\n            if(k==M) {\n                for(z=j; z<N-1; z++) {\n                    for(k=0; k<M; k++)\n                        matrica[k][z]=matrica[k][z+1];\n                }\n                N--;\n                j--;\n            }\n\n        }\n    }\n    printf(\"Nakon izbacivanja redova/kolona matrica glasi:\\n\");\n    for(i=0; i<M; i++) {\n        for(j=0; j<N; j++)\n            printf(\"%5d\", matrica[i][j]);\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n"
    },
    "173": {
        "label": "0",
        "student3572": "#include <stdio.h>\n\nint main() {\n\tint M,N;\n\tprintf(\"Unesite M i N: \");\n\tdo {\n\t\t\n\t\tscanf(\"%d %d\", &M,&N);\n\tprintf(\"Pogresan unos!\\n\");\n\t\t}\n\t\twhile ((M||N)>100 && (M||N)<0);\n\t\t\t\n\t\t\n\n\treturn 0;\n}\n",
        "student9498": "#include <stdio.h>\n#define A 100\n\nint main() {\n\n\tdouble matrica[A][A];\n\tint brojac1,brojac2;\n\tint i,j;\n\tint M;\n\tint N;\n\tdo{\n\t\tprintf(\"Unesite M i N: \");\n\t\tscanf(\"%d %d\",&M,&N);\n\t\tif(M>100 || M<1 || N>100 || N<1) printf(\"Pogresan unos!\\n\");\n\t\t}\n\twhile(M<1 || M>100 || N<1 || N>100);\n\t\n\tprintf(\"Unesite elemente matrice: \");\n\tfor(i=0;i<M;i++){\n\t\tfor(j=0;j<N;j++){\n\t\t\tscanf(\"%lf\",&matrica[i][j]);\n\t\t}\n\t}\n\t\n\tint cirkularna_matrica=1;\n\tint teplicova_matrica=1;\n\t\n\tfor(i=0;i<M-1;i++){\n\t\tfor(j=0;j<N-1;j++){\n\t\tif(matrica[i+1][j+1]!=matrica[i][j]) teplicova_matrica=0;\n\t\t}\n\t}\n\t\n\tfor(i=0;i<M-1;i++){\n\t\tfor(j=0;j<N-1;j++){\n\t\t\tif(matrica[i+1][0]!=matrica[i][N-1]) cirkularna_matrica=0;\n\t\t}\n\t}\n\t\n\tif(M==100 && N==1 && teplicova_matrica) printf(\"Matrica je Teplicova\");\n\telse if(teplicova_matrica && cirkularna_matrica) printf(\"Matrica je cirkularna\");\n\telse if(teplicova_matrica) printf(\"Matrica je Teplicova\");\n\telse printf(\"Matrica nije ni cirkularna ni Teplicova\");\n\n\n\n\treturn 0;\n}\n"
    },
    "174": {
        "label": "1",
        "student6054": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\tfloat a1,b1,a2,b2, x, y, E=0.000001;\n\tprintf (\"Unesite a1,b1,a2,b2: \");\n\tscanf (\"%f,%f,%f,%f\", &a1, &b1, &a2, &b2);\n\tif ((fabs(a1-a2))<E && (fabs(b1-b2))<E ){\n\t\tprintf (\"Poklapaju se\");\n\t}\n\telse if ((fabs(a1-a2))<E && (fabs(b1-b2))>E){\n\t\tprintf(\"Paralelne su\");\n\t}\n\telse {\tx=(b2-b1)/(a1-a2);\n\t     \ty=(a1*x)+b1;\n\t\tprintf (\"Prave se sijeku u tacci (%.1f,%.1f)\", x, y);\n\t}\n\t\n\treturn 0;\n}\n",
        "student7341": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n\tfloat a1,b1,a2,b2, x, y, E=0.00001;\n\tprintf(\"Unesite a1,b1,a2,b2: \");\n\tscanf (\"%f,%f,%f,%f\", &a1, &b1, &a2, &b2);\n\tif ((fabs(a1-a2))<E && (fabs(b1-b2))<E ){\n\t\tprintf (\"Poklapaju se\");\n\t}\n\telse if ((fabs(a1-a2))<E && (fabs(b1-b2))>E){\n\t\tprintf(\"Paralelne su\");\n\t}\n\telse { x=(b2-b1)/(a1-a2);\n\t\t   y=(a1*x)+b1;\n\t\tprintf (\"Prave se sijeku u tacci (%.1f,%.1f)\", x, y);\n\n\t}\n\t\n\t\n\n\treturn 0;\n}\n"
    },
    "175": {
        "label": "0",
        "student3116": "#include <stdio.h>\n\nint main() {\n\tdouble T1, T2, Tp, Tz, Ti, B1, B2, Bp, Bz, Bi, M1, M2, Mp, Mz, Mi, Tu, Bu, Mu;\n\tint o6=0, o7=0, o8=0, o9=0, o10=0, BrojPalih=0;\n\t\n\t/* ------- TARIK ------- */\n\t\n\tprintf(\"Unesite bodove za Tarika:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%lf\", &T1);\n\tif (T1<0 || T1>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"II parcijalni ispit: \");\n    scanf(\"%lf\", &T2);\n\tif (T2<0 || T2>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Prisustvo: \");\n    scanf(\"%lf\", &Tp);\n\tif (Tp<0 || Tp>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n   \n    printf(\"Zadace: \");\n    scanf(\"%lf\", &Tz);\n\tif (Tz<0 || Tz>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Zavrsni ispit: \");\n    scanf(\"%lf\", &Ti);\n\tif (Ti<0 || Ti>40){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n\n    /* ------- BOJAN ------- */\n\t\n\tprintf(\"Unesite bodove za Bojana:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%lf\", &B1);\n\tif (B1<0 || B1>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"II parcijalni ispit: \");\n    scanf(\"%lf\", &B2);\n\tif (B2<0 || B2>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Prisustvo: \");\n    scanf(\"%lf\", &Bp);\n\tif (Bp<0 || Bp>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Zadace: \");\n    scanf(\"%lf\", &Bz);\n\tif (Bz<0 || Bz>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Zavrsni ispit: \");\n    scanf(\"%lf\", &Bi);\n\tif (Bi<0 || Bi>40){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n\n    /* ------- MIRZA ------- */\n\t\n\tprintf(\"Unesite bodove za Mirzu:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%lf\", &M1);\n\tif (M1<0 || M1>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"II parcijalni ispit: \");\n    scanf(\"%lf\", &M2);\n\tif (M2<0 || M2>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Prisustvo: \");\n    scanf(\"%lf\", &Mp);\n\tif (Mp<0 || Mp>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Zadace: \");\n    scanf(\"%lf\", &Mz);\n\tif (Mz<0 || Mz>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Zavrsni ispit: \");\n    scanf(\"%lf\", &Mi);\n\tif (Mi<0 || Mi>40){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n\n    Tu=T1+T2+Tp+Tz+Ti;\n    Bu=B1+B2+Bp+Bz+Bi;\n    Mu=M1+M2+Mp+Mz+Mi;\n    \n    if (Tu<55) { BrojPalih++; }\n    else if (Tu<65) { o6++; }\n    else if (Tu<75) { o7++; }\n    else if (Tu<85) { o8++; }\n    else if (Tu<92) { o9++; }\n    else { o10++; }\n    \n     if (Bu<55) { BrojPalih++; }\n    else if (Bu<65) { o6++; }\n    else if (Bu<75) { o7++; }\n    else if (Bu<85) { o8++; }\n    else if (Bu<92) { o9++; }\n    else { o10++; }\n    \n     if (Mu<55) { BrojPalih++; }\n    else if (Mu<65) { o6++; }\n    else if (Mu<75) { o7++; }\n    else if (Mu<85) { o8++; }\n    else if (Mu<92) { o9++; }\n    else { o10++; }\n    \n    if (BrojPalih==3)\n       { printf(\"Nijedan student nije polozio.\"); return 0;}\n    else if (BrojPalih==2)\n       { printf(\"Jedan student je polozio.\"); return 0;}\n    else if (BrojPalih==1)\n       { printf(\"Dva studenta su polozila.\"); return 0;}\n    else if (BrojPalih==0)\n       { printf(\"Sva tri studenta su polozila.\");}\n    \t\n    \t\n       if (o6==3 || o7==3 || o8==3 || o9==3 || o10==3)\n               { printf(\"\\nSva tri studenta imaju istu ocjenu.\"); }\n       else if (o6==2 || o7==2 || o8==2 || o9==2 || o10==2)\n               { printf(\"\\nDva od tri studenta imaju istu ocjenu.\"); }\n       else\n               { printf(\"\\nSvaki student ima razlicitu ocjenu.\"); }\n    \n       return 0;\n}",
        "student3424": "#include <stdio.h> \n\nint main()\n{\n    float T1, T2, TP, TZ, TU, B1, B2, BP, BZ, BU, M1, M2, MP, MZ, MU, TB, BB, MB;\n    int TO=0, BO=0, MO=0;                           /*TO-Tarikova ocjena, BO-Bojanova ocjena, MO-Mirzina ocjena*/\n    \n    printf(\"Unesite bodove za Tarika: \\n\");   /*T1-prva parc, T2-druga parc, TP-prisustvo, TZ-zadace, TU-zavrsni-usmeni*/\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\", &T1);\n    if (T1<0.0f || T1>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"II parcijalni ispit: \");\n    scanf(\"%f\", &T2);\n    if (T2<0.0f || T2>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Prisustvo: \");\n    scanf(\"%f\", &TP);\n    if (TP<0.0f || TP>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zadace: \");\n    scanf(\"%f\", &TZ);\n    if (TZ<0.0f || TZ>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zavrsni ispit: \");\n    scanf(\"%f\", &TU);\n    if (TU<0.0f || TU>40.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    \n    printf(\"Unesite bodove za Bojana: \\n\");   /*B1-prva parc, B2-druga parc, BP-prisustvo, BZ-zadace, BU-zavrsni-usmeni*/\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\", &B1);\n    if (B1<0.0f || B1>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"II parcijalni ispit: \");\n    scanf(\"%f\", &B2);\n    if (B2<0.0f || B2>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Prisustvo: \");\n    scanf(\"%f\", &BP);\n    if (BP<0.0f || BP>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zadace: \");\n    scanf(\"%f\", &BZ);\n    if (BZ<0.0f || BZ>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zavrsni ispit: \");\n    scanf(\"%f\", &BU);\n    if (BU<0.0f || BU>40.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    \n    printf(\"Unesite bodove za Mirzu: \\n\");   /*M1-prva parc, M2-druga parc, MP-prisustvo, MZ-zadace, MU-zavrsni-usmeni*/\n    printf(\"I parcijalni ispit: \");\n    scanf(\"%f\", &M1);\n    if (M1<0.0f || M1>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"II parcijalni ispit: \");\n    scanf(\"%f\", &M2);\n    if (M2<0.0f || M2>20.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Prisustvo: \");\n    scanf(\"%f\", &MP);\n    if (MP<0.0f || MP>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zadace: \");\n    scanf(\"%f\", &MZ);\n    if (MZ<0.0f || MZ>10.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    printf(\"Zavrsni ispit: \");\n    scanf(\"%f\", &MU);\n    if (MU<0.0f || MU>40.0f)\n    {\n        printf(\"Neispravan broj bodova\");\n        return 0;\n    }\n    \n    TB=T1+T2+TP+TZ+TU;\n    BB=B1+B2+BP+BZ+BU;\n    MB=M1+M2+MP+MZ+MU;\n    \n    if (TB<50.0f && BB<50.0f && MB<50.0f)\n    {\n        printf(\"Nijedan student nije polozio.\");\n    }\n    else if ((TB>=50.0f && BB<55.0f && MB<55.0f) || (TB<50.0f && BB>=55.0f && MB<55.0f) || (TB<50.0f && BB<55.0f && MB>=55.0f))\n    {\n        printf(\"Jedan student je polozio.\");\n    }\n    else if ((TB>=55.0f && BB>=55.0f && MB<55.0f) || (TB>=55.0f && BB<55.0f && MB>=55.0f) || (TB<55.0f && BB>=55.0f && MB>=55.0f))\n    {\n       printf(\"Dva studenta su polozila.\"); \n    }\n    else if(TB>=50.0f && BB>=55.0f && MB>=55.0f)\n    {\n        printf(\"Sva tri studenta su polozila.\\n\");\n        \n        if(TB>=50.0f && TB<65.0f)\n        {\n            TO=6;\n        }\n        else if (TB>=65.0f && TB<75.0f)\n        {\n            TO=7;\n        }\n        else if (TB>=75.0f && TB<85.0f)\n        {\n            TO=8;\n        }\n        else if (TB>=85.0f && TB<92.0f)\n        {\n            TO=9;\n        }\n        else if (TB>=92.0f && TB<=100.0f)\n        {\n            TO=10;\n        }\n        \n        if(BB>=55.0f && BB<65.0f)\n        {\n            BO=6;\n        }\n        else if (BB>=65.0f && BB<75.0f)\n        {\n            BO=7;\n        }\n        else if (BB>=75.0f && BB<85.0f)\n        {\n            TO=8;\n        }\n        else if (BB>=85.0f && BB<92.0f)\n        {\n            BO=9;\n        }\n        else if (BB>=92.0f && BB<=100.0f)\n        {\n            BO=10;\n        }\n        \n        if(MB>=55.0f && MB<65.0f)\n        {\n            MO=6;\n        }\n        else if (MB>=65.0f && MB<75.0f)\n        {\n            MO=7;\n        }\n        else if (MB>=75.0f && MB<85.0f)\n        {\n            MO=8;\n        }\n        else if (MB>=85.0f && MB<92.0f)\n        {\n            MO=9;\n        }\n        else if (MB>=92.0f && MB<=100.0f)\n        {\n            MO=10;\n        }\n        \n        if (TO==BO && TO==MO && BO==MO)\n        {\n            printf(\"Sva tri studenta imaju istu ocjenu.\");\n        }\n        else if ((TO==BO && BO!=MO) || (TO==MO && TO!=BO) || (BO==MO && TO!=BO))\n        {\n            printf(\"Dva od tri studenta imaju istu ocjenu.\");\n        }\n        else if (TO!=BO && TO!=MO && BO!=MO)\n        {\n            printf(\"Svaki student ima razlicitu ocjenu.\");\n        }\n        \n        \n    }\n    \n    \n    return 0;\n}"
    },
    "176": {
        "label": "1",
        "student7085": "\n#include <iostream>\n#include <vector>\n#include <iomanip>\n#include <stdexcept>\n\n\ntypedef std:: vector<std:: vector<double>> matrica;\n\nmatrica horizontalno_ogledalo(matrica m){\n\tfor(int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[i].size()/2;j++){\n\t\t\tdouble temp=m[i][j];\n\t\t\tm[i][j]=m[i][m[i].size()-1-j];\n\t\t\tm[i][m[i].size()-1-j]=temp;\n\t\t}\n\t}\n\treturn m;\n}\n\nmatrica vertikalno_ogledalo(matrica m){\n\tfor(int i=0;i<m.size()/2;i++){\n\t\tfor(int j=0;j<m[i].size();j++){\n\t\t\tdouble temp=m[i][j];\n\t\t\tm[i][j]=m[m.size()-1-i][j];\n\t\t\tm[m.size()-1-i][j]=temp;\n\t\t}\n\t}\n\treturn m;\n}\n\nmatrica horizontalnoVertikalno_ogledalo(matrica m){\n\treturn vertikalno_ogledalo(horizontalno_ogledalo(m));\n}\n\nmatrica OgledaloMatrica(matrica m){\n\tif((m.size()==0 || m[0].size()==0) || (m.size()==0 && m[0].size()==0)){\n\t\tm.resize(3*m.size());\n\t\treturn m;\n\t}\n\tfor(int i=0;i<m.size();i++){\n\t\tif(m[0].size()!=m[i].size()) throw std::domain_error(\"Matrica nije korektna\");\n\t\t}\n\t\n\tmatrica velika(3*m.size(),std:: vector<double> (3*m[0].size()));\n\tmatrica hV(horizontalnoVertikalno_ogledalo(m));\n\tmatrica V(vertikalno_ogledalo(m));\n\tmatrica h(horizontalno_ogledalo(m));\n\n\t\n\tfor(int i=0;i<hV.size();i++){\n\t\tfor(int j=0;j<hV[0].size();j++){\n\t\t\tvelika[i][j]=hV[i][j];\n\t\t}\n\t}\n\tfor(int i=0;i<V.size();i++){\n\t\tfor(int j=0;j<V[0].size();j++){\n\t\t\tvelika [i][j+hV[0].size()]=V[i][j];\n\t\t}\n\t}\n\tfor(int i=0;i<hV.size();i++){\n\t\tfor(int j=0;j<hV[0].size();j++){\n\t\t\tvelika[i][j+2*hV[0].size()]=hV[i][j];\n\t\t}\n\t}\n\tfor(int i=0;i<h.size();i++){\n\t\tfor(int j=0;j<h[0].size();j++){\n\t\t\tvelika[i+hV.size()][j]=h[i][j];\n\t\t}\n\t}\n\tfor(int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[0].size();j++){\n\t\t\tvelika[i+V.size()][j+h[0].size()]=m[i][j];\n\t\t}\n\t}\n\tfor(int i=0;i<h.size();i++){\n\t\tfor(int j=0;j<h[0].size();j++){\n\t\t\tvelika[i+hV.size()][j+2*h[0].size()]=h[i][j];\n\t\t}\n\t}\n\tfor(int i=0;i<hV.size();i++){\n\t\tfor(int j=0;j<hV[0].size();j++){\n\t\t\tvelika[i+2*hV.size()][j]=hV[i][j];\n\t\t}\n\t}\n\tfor(int i=0;i<V.size();i++){\n\t\tfor(int j=0;j<V[0].size();j++){\n\t\t\tvelika[i+2*hV.size()][j+hV[0].size()]=V[i][j];\n\t\t}\n\t}\n\tfor(int i=0;i<hV.size();i++){\n\t\tfor(int j=0;j<hV[0].size();j++){\n\t\t\tvelika[i+2*hV.size()][j+2*hV[0].size()]=hV[i][j];\n\t\t}\n\t}\n\t   \n\treturn velika;\n}\n\n\nint main ()\n{\n\tint k,n;\n\tstd:: cout<< \"Unesite dimenzije matrice (m n): \";\n\tstd:: cin>> k>>n;\n\tif(k<0 || n<0){\n\t\tstd:: cout<< \"Dimenzije matrice moraju biti nenegativne!\";\n\t\treturn 0;\n\t}\n\tmatrica m(k,std::vector<double> (n));\n\tstd:: cout<< \"Unesite elemente matrice: \";\n\tfor(int i=0;i<k;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tstd:: cin>>m[i][j];\n\t\t}\n\t}\n\tstd:: cout<<std:: endl;\n\tstd:: cout<<\"Rezultantna matrica: \"<<std::endl;\n\ttry{\n\tauto a=OgledaloMatrica(m);\n\n\tfor(int i=0;i<a.size();i++){\n\t\tfor(int j=0;j< a[0].size();j++){\n\t\t\tstd:: cout<<std:: right<<std:: setw(4)<<a[i][j];\n         if(j==a[i].size()-1)std::cout<< std:: endl;\n\t\t}\n\t}\n\t}\n\tcatch(std::domain_error greska){\n\t   std:: cout<< \"IZUZETAK: \"<<greska.what()<<std::endl;\n\t}\n\treturn 0;\n}",
        "student7810": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 2\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n#include <iostream>\n#include <vector>\n#include <iomanip> \n#include <stdexcept>\nusing std::cout;\nusing std::cin;\nusing std::vector;\nusing std::endl;\nusing std::setw;\nusing std::domain_error;\nvector<vector<double>> OgledaloMatrica (vector<vector<double>> m){\n\tif (m.size()==0) return m;\n\tvector<vector<double>> hm;\n\tvector<vector<double>> vm;\n\tvector<vector<double>> mm;\n\thm=m;\n\tvm=m;\n\tmm=m;\n\tfor(int i=0;i<m.size();i++){\n\t\tif(m[0].size()!=m[i].size()) throw domain_error (\"Matrica nije korektna\");\n\t}\n\tfor(int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[i].size()/2;j++){\n\t\t\tdouble temp;\n\t\t\ttemp=hm[i][j];\n\t\t\thm[i][j]=hm[i][m[i].size()-1-j];\n\t\t\thm[i][m[i].size()-1-j]=temp;\n\t\t}\n\t}\n\tfor(int i=0;i<m.size()/2;i++){\n\t\tfor(int j=0;j<m[i].size();j++){\n\t\t\tdouble temp;\n\t\t\ttemp=vm[i][j];\n\t\t\tvm[i][j]=vm[m.size()-1-i][j];\n\t\t\tvm[m.size()-1-i][j]=temp;\n\t\t}\n\t}\n\tfor(int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[i].size()/2;j++){\n\t\t\tdouble temp;\n\t\t\ttemp=mm[i][j];\n\t\t\tmm[i][j]=mm[i][m[i].size()-1-j];\n\t\t\tmm[i][m[i].size()-1-j]=temp;\n\t\t}\n\t}\n\tfor(int i=0;i<m.size()/2;i++){\n\t\tfor(int j=0;j<m[i].size();j++){\n\t\t\tdouble temp;\n\t\t\ttemp=mm[i][j];\n\t\t\tmm[i][j]=mm[m.size()-1-i][j];\n\t\t\tmm[m.size()-1-i][j]=temp;\n\t\t}\n\t}\n\tvector<vector<double>> matrica(3*m.size(),vector<double>(3*m[0].size(),0));\n\tfor (int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[0].size();j++){\n\t\t\tmatrica[i][j]=mm[i][j];\n\t\t}\n\t}\n\tfor (int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[0].size();j++){\n\t\t\tmatrica[i][j+m[0].size()]=vm[i][j];\n\t\t}\n\t}\n\tfor (int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[0].size();j++){\n\t\t\tmatrica[i][j+2*m[0].size()]=mm[i][j];\n\t\t}\n\t}\n\tfor (int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[0].size();j++){\n\t\t\tmatrica[i+m.size()][j]=hm[i][j];\n\t\t}\n\t}\n\tfor (int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[0].size();j++){\n\t\t\tmatrica[i+m.size()][j+m[0].size()]=m[i][j];\n\t\t}\n\t}\n\tfor (int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[0].size();j++){\n\t\t\tmatrica[i+m.size()][j+2*m[0].size()]=hm[i][j];\n\t\t}\n\t}\n\tfor (int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[0].size();j++){\n\t\t\tmatrica[i+2*m.size()][j]=mm[i][j];\n\t\t}\n\t}\n\tfor (int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[0].size();j++){\n\t\t\tmatrica[i+2*m.size()][j+m[0].size()]=vm[i][j];\n\t\t}\n\t}\n\tfor (int i=0;i<m.size();i++){\n\t\tfor(int j=0;j<m[0].size();j++){\n\t\t\tmatrica[i+2*m.size()][j+2*m[0].size()]=mm[i][j];\n\t\t}\n\t}\n\treturn matrica;\n}\nint main ()\n{\n\ttry{\n\tcout<<\"Unesite dimenzije matrice (m n): \";\n\tint m,n;\n\tcin>>m>>n;\n\tif (m<0 || n<0) {cout<<\"Dimenzije matrice moraju biti nenegativne!\"; return 0;}\n\tcout<<\"Unesite elemente matrice:\"<<endl;\n\tvector<vector<double>> matrica(m, vector<double> (n));\n\tfor(int i=0;i<m;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin>>matrica[i][j];\n\t\t}\n\t}\n\tvector<vector<double>> novamatrica=OgledaloMatrica(matrica);\n\tcout<<\"Rezultantna matrica:\"<<endl;\n\tfor(int i=0;i<novamatrica.size();i++){\n\t\tfor(int j=0;j<novamatrica[0].size();j++){\n\t\t\tcout<<setw(4)<<novamatrica[i][j];\n\t\t}cout<<endl;\n\t}\n\t}\n\tcatch(...){\n\t\tcout<<\"Matrica nije korektna\";\n\t}\n\treturn 0;\n}"
    },
    "177": {
        "label": "0",
        "student2351": "#include <stdio.h>\n\nint slovoIliBroj(char c) {\n\treturn (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9');\n}\n\n/**\n * funkcija provjerava da li su dva slova ili broja ista, zanemaruje razliku izmedju\n * \tvelikih i malih slova\n * @param char c1\n * @param char c2\n * @return int | bool vraca 1(true) ako su slova/brojevi ista/i, 0 (false) u suprotnom\n */\nint ista_slova_ili_brojevi(char c1, char c2) {\n\tif (c1 == c2) return 1;\n\t\n\tif (c1 >= 'a' && c1 <= 'z' && c1 - 32 == c2) return 1;\n\t\n\tif (c1 >= 'A' && c1 <= 'Z' && c1 + 32 == c2) return 1;\n\t\n\treturn 0;\n}\n\nint porediStringove(char * prvi, char * drugi) {\n\twhile (*prvi != '\\0') {\n\t\tif (*drugi == '\\0') return 0;\n\t\tif (! ista_slova_ili_brojevi(*prvi, *drugi)) return 0;\n\t\tprvi++;\n\t\tdrugi++;\n\t}\n\treturn *drugi == '\\0';\n}\n\nchar * uzmiOtvarajuciTag(char * s, char * tag) {\n\tint tagUzet= 0;\n\twhile (*s != '<' && *s != '\\0') s++;\n\tif (*s != '\\0') s++;\n\tif (*s == '/') return NULL;\n\twhile (*s != '>' && *s != '\\0') {\n\t\twhile (*s != ' ' && *s != '>' && ! tagUzet && *s != '\\0') {\n\t\t\t*tag++ = *s++;\n\t\t}\n\t\ttagUzet = 1;\n\t\tif (*s == '>') break;\n\t\telse s++;\n\t}\n\t*tag = '\\0';\n\treturn *s == '\\0' ? NULL : s;\n}\n\nchar * uzmiZatvarajuciTag(char * s, char * tag) {\n\tint tagUzet= 0;\n\twhile (*s != '<' && *s != '\\0') s++;\n\tif (*s != '\\0') s++;\n\tif (*s != '/') return NULL;\n\twhile (*s != '>' && *s != '\\0') {\n\t\ts++;\n\t\twhile (*s != ' ' && *s != '>' && ! tagUzet && *s != '\\0') {\n\t\t\t*tag++ = *s++;\n\t\t}\n\t\ttagUzet = 1;\n\t\tif (*s == '>') break;\n\t\telse s++;\n\t}\n\t*tag = '\\0';\n\treturn *s == '\\0' ? NULL : s;\n}\n\nint daLiJeIspravanHTML(char * s) {\n\twhile (*s != '\\0') {\n\t\tif (*s++ == '<') {\n\t\t\tif (*s == '/') s++;\n\t\t\tif (*s == ' ' || *s == '>') {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t\n\t\t\t// <p>jos gore^2, xd, </p </p>\n\t\t\t\n\t\t\t// while (*s != '\\0' && *s != ' ' && slovoIliBroj(*s)) s++;\n\t\t\twhile (*s != '\\0' && slovoIliBroj(*s)) s++;\n\t\t\n\t\t\t// if (*s != ' ' && *s != '/' && *s != '>') return 0;\n\t\t\t\n\t\t\t\n\t\t\twhile (*s != '\\0' && *s != '>') {\n\t\t\t\twhile (*s == ' ') s++;\n\t\t\t\t\n\t\t\t\tif (*s == '<') {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (*s != '\\0' && *s != '>') s++;\n\t\t\t}\n\t\t\tif (*s != '>') {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn 1;\n}\n\nint istiBrojOtvorenihIZatvorenih(char * s) {\n\tchar * p = s, *temp, tag[100];\n\tint otvorenih = 0, zatvorenih = 0;\n\twhile (*p != '\\0') {\n\t\ttemp = uzmiOtvarajuciTag(p, tag);\n\t\tif (temp != NULL && ! porediStringove(tag, \"\")) {\n\t\t\tp = temp;\n\t\t\totvorenih++;\n\t\t} else if (*p != '\\0') {\n\t\t\tp++;\n\t\t}\n\t\t//printf (\"\\t%s\\n\", p);\n\t}\n\tp = s;\n\twhile (*p != '\\0') {\n\t\ttemp = uzmiZatvarajuciTag(p, tag);\n\t\tif (temp != NULL && ! porediStringove(tag, \"\")) {\n\t\t\tp = temp;\n\t\t\tzatvorenih++;\n\t\t} else if (*p != '\\0') {\n\t\t\tp++;\n\t\t}\n\t\t//printf (\"\\t%s\\n\", p);\n\t}\n\t\n\treturn otvorenih == zatvorenih;\n}\n\n\n\nvoid kopirajString(char * s1, char * s2) {\n\twhile (*s1 != '\\0') *s2++ = *s1++;\n\t*s2 = '\\0';\n}\n\nint provjeri(char * tekst) {\n\tchar tag[100], tagZaPoredjenje[200];\n\tchar * p = tekst, *temp = tekst, *q;\n\tint brojacOtvorenih = 0, brojacZatvorenih = 0, pronadjen = 0;\n\tchar izvorni[500];\n\tkopirajString(tekst, izvorni);\n\t\n\tif (! daLiJeIspravanHTML(tekst) || ! istiBrojOtvorenihIZatvorenih(tekst)) return 0;\n\t\n\twhile (*p != '\\0') {\n\t\ttemp = uzmiOtvarajuciTag(p, tag);\n\t\tif (temp != NULL && ! porediStringove(tag, \"\")) {\n\t\t\tp = temp;\n\t\t\tq = p;\n\t\t\t// printf(\"\\t%s - \", tag);\n\t\t\tbrojacOtvorenih = 0;\n\t\t\tbrojacZatvorenih = 0;\n\t\t\tpronadjen = 0;\n\t\t\twhile (*q != '\\0') {\n\t\t\t\ttemp = uzmiZatvarajuciTag(q, tagZaPoredjenje);\n\t\t\t\tif (temp != NULL) {\n\t\t\t\t\t// printf(\"%s,\\t\", tagZaPoredjenje);\n\t\t\t\t\t //printf(\"\\t'%s' poredim sa '%s'\\totvorenih = %d\\tzatvorenih = %d\\n\", \n\t\t\t\t\t //\t\ttag, tagZaPoredjenje, brojacOtvorenih, brojacZatvorenih);\n\t\t\t\t\t\n\t\t\t\t\tif (porediStringove(tag, tagZaPoredjenje)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (brojacOtvorenih == brojacZatvorenih) {\n\t\t\t\t\t\t\tpronadjen = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//return 0;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tbrojacZatvorenih++;\n\t\t\t\t\tq = temp;\n\t\t\t\t} else {\n\t\t\t\t\ttemp = uzmiOtvarajuciTag(q, tagZaPoredjenje);\n\t\t\t\t\tif (temp != NULL) {\n\t\t\t\t\t\t// printf(\"\\t%s\\n\\n\", q);\n\t\t\t\t\t\tbrojacOtvorenih++;\n\t\t\t\t\t\tq = temp;\n\t\t\t\t\t} else if (*q != '\\0') {\n\t\t\t\t\t\tq++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// printf(\"\\t'%s' poredim sa '%s'\\tbrojac = %d\\tpronadjen = %s\\n\", \n\t\t\t// \t\ttag, tagZaPoredjenje, brojac, pronadjen ? \"true\" : \"false\");\n\t\t\tif (! pronadjen) return 0;\n\t\t\t// printf(\"\\n\");\n\t\t} else if (*p != '\\0') {\n\t\t\tp++;\n\t\t}\n\t\t//printf (\"\\t%s\\n\", p);\n\t}\n\treturn 1;\n}\n\nint main() {\n\tchar s[200] = \"<div id=\\\"tekst\\\"><h2>Naslov</h2><p>Ovo je <b>\u010detvrti</b> i <i>posljednji</i> zadatak iz <a href=\\\"zadaca4\\\">zada\u0107e 4</a></p></div>\";\n    // printf(\"%s\\n\\n\", s);\n    // printf(\"\\n\\n%s\", daLiJeIspravanHTML(s) ? \"ispravan\" : \"nije ispravan\");\n    // printf(\"%s\\n\", provjeri(s) ? \"dobar\" : \"los\");\n\t// printf (\"Provjera 1: %d\\n\", provjeri(\"<span><span><span><a href='https://etf.unsa.ba'>etf.unsa.ba stranica</a></span></span>\"));\n\t// printf (\"Provjera 2: %d\\n\", provjeri(\"<span><span><span><a href='https://etf.unsa.ba'>etf.unsa.ba stranica</a><span></span></span>\"));\n\t// printf (\"Provjera 3: %d\\n\", provjeri(\"<span><span><span><a href='https://etf.unsa.ba'>etf.unsa.ba stranica</span></span></span>\"));\n\t// printf (\"Provjera 4: %d\\n\", provjeri(\"<span><span><span><a href='https://etf.unsa.ba'>etf.unsa.ba stranica</a></span></span></span>\"));\n\t\n\t// printf (\"Provjera  3: %d\\n\", provjeri(\"<p>jos gore^2, xd, </p </p>\"));\n\t\n\tchar etfunsaba[] = \"<center>\"\n\t\"<a href=\\\"http://icat.etf.unsa.ba/\\\">\"\n        \"<p class=\\\"tekst\\\">\"\n        \"<span class=\\\"linkovi\\\">\"\n\t\t\"XXVI International Conference on Information,\"\n\t\t\"<br></br>\"\n\t\t\"Communication and Automation Technologies\"\n\t\t\"<br></br>\"\n\t\t\"<br></br>\"\n\t\t\"<strong>ICAT 2017</strong><br></br>\"\n\t\t\"<br></br>\"\n\t\t\"Sarajevo, Bosnia and Herzegovina<br></br>\"\n\t\t\"October 26-28, 2017.<br></br>\"\n\t\t\"</span>\"\n        \"</p>\"\n        \"</a>\"\n    \"</center>\";\n    printf (\"Provjera 1: %d\\n\", provjeri (etfunsaba));\n    //izmijenimo prvi tag <center> da bude <zenter>, pa onda nema zatvarajuceg\n    etfunsaba[1] = 'z';\n    printf (\"Provjera 2: %d\\n\", provjeri (etfunsaba));\n\treturn 0;\n}\n",
        "student9275": "#include <stdio.h>\n\nint provjeri(char* s){\n\tchar *pocetak,*kraj = s,znak1,znak2,*p,*q,*novi;\n\tchar *poc = s;\n\tint cs,duz,br,provjera,prvi_put = 1,brojac_zagrada = 0,pravilno_zatvorena = 0;\nwhile(*s != '\\0'){\n\t\t if(*s == '<'){\n\t\t \tif(prvi_put){if(! (*(s+1) >= 'a' && *(s+1) <= 'z' || *(s+1) >= 'A' && *(s+1) <= 'Z' || *(s+1) >= '0' && *(s+1) <= '9') )return 0; prvi_put = 0;}\n\t\t \tif(*(s+1) == '/')break;\n\t\t\tpravilno_zatvorena = 1;\n\t\t\tduz = 0;\n\t\t\ts++;\n\t\t\tif( ! (*s >= 'a' && *s <= 'z' || *s >= 'A' && *s <= 'Z' || *s >= '0' && *s <= '9') ) return 0;\n\t\t\tpocetak = s;\n\t\t\tduz = 0;\n\t\t\twhile(*s >= 'a' && *s <= 'z' || *s >= 'A' && *s <= 'Z' || *s >= '0' && *s <= '9') {s++; duz++; } \n\t\t\tif(*s == ' ')while (*s != '\\0' && *s != '>')s++;\n\t\t\tif(*s != '>')return 0;\n\t\t\tkraj = s;\n\t\t\t\n\t\t\twhile(*kraj != '\\0'){\n\t\t\t\t\tif(*kraj == '<' && *(kraj + 1) != '/')brojac_zagrada++;\n\t\t\t\t\tif(*kraj == '/'){\n\t\t\t\t\t\tnovi = kraj;\n\t\t\t\t\t\tnovi--;\n\t\t\t\t\t\tkraj++;\n\t\t\t\t\t\tif(*novi != '<' || ! (*kraj >= 'a' && *kraj <= 'z' || *kraj >= 'A' && *kraj <= 'Z' || *kraj >= '0' && *kraj <= '9'))return 0;\n\t\t\t\t\t\tp = kraj;\n\t\t\t\t\t\tbr = duz;\n\t\t\t\t\t\tp = kraj;\n\t\t\t\t\t\tq = pocetak;\n\t\t\t\t\t\tcs = 1;\n\t\t\t\t\t\t\twhile(p != '\\0' && br != 0){\n\t\t\t\t\t\t\t\t\t\tznak1 = *q;\n\t\t\t\t\t\t\t\t\t\tznak2 = *p; \n\t\t\t\t\t\t\t\t\t\tif(znak1 >= 'a' && znak1 <= 'z') znak1 = znak1 - 32;\n\t\t\t\t\t\t\t\t\t\tif(znak2 >= 'a' && znak2 <= 'z') znak2 = znak2 - 32;\n\t\t\t\t\t\t\t\t\t\tif(znak1 != znak2){\n\t\t\t\t\t\t\t\t\t\t\tcs=0;\n\t\t\t\t\t\t\t\t\t\t\tbrojac_zagrada--;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tp++;\n\t\t\t\t\t\t\t\t\t\tq++;\n\t\t\t\t\t\t\t\t\t\tbr--;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(cs){\n\t\t\t\t\t\t\t\t//otvorena zagrada je pravilno zatvorena\n\t\t\t\t\t\t\t\tpravilno_zatvorena--;\n\t\t\t\t\t\t\t\tif(brojac_zagrada != 0)return 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!pravilno_zatvorena)break;\n\t\t\t\t\tkraj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(*s == '\\0')s--;\n\t\t\ts++;\n\t\t\tif(pravilno_zatvorena != 0)return 0;\n\t}\n\t\n\treturn 1;\n}\n\n\nint main() {\n{//AT3: pogresno zatvoreni tagovi i bez tagova\nprintf (\"Provjera  0: %d\\n\", provjeri(\"</p><p>pocelo je zatvorenim tagom</p>\"));\n printf (\"Provjera 4: %d\\n\", provjeri(\"<span><span><span><a href='https://etf.unsa.ba'>etf.unsa.ba stranica</a></span></span></span>\"));\n}\treturn 0;\n}"
    },
    "178": {
        "label": "1",
        "student7425": "// \u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 2\n//\tAutotestovi by Enil Pajic (epajic1@etf.unsa.ba | @eon : etf.ba)\n//\tNAPOMENA: i javni ATo-vi su dio postavke!\t\n#include <iostream>\n#include <vector>\n#include <deque>\n#include <iomanip>\n#include <stdexcept>\n#include <type_traits>\n\nusing namespace std;\n\nenum class SmjerKretanja { NaprijedNazad, NazadNaprijed, GoreDolje, DoljeGore, LijevoDesno, DesnoLijevo };\n\ntemplate<typename t>\nt obrlati(t mat)\n{\n    t mat1;\n    mat1.resize(mat[0].size());\n    for(int i=0; i<mat1.size(); i++) mat1[i].resize(mat.size());\n    for(int i=0; i<mat.size(); i++)\n        for(int j=0; j<mat[i].size(); j++) mat1[j][i]=mat[i][j];\n    return mat1;\n}\n\ntemplate<typename t>\nt duploobrlati(t mat)\n{\n    mat=obrlati(mat);\n    for(int i=0; i<mat.size()/2; i++)\n    {\n        for(int j=0; j<mat[i].size(); j++)\n        {\n            auto pom=mat[i][j];\n            mat[i][j]=mat[mat.size()-1-i][j];\n            mat[mat.size()-i-1][j]=pom;\n        }\n    }\n    return mat;\n}\n\ntemplate<typename kont>\nauto IzdvojiDijagonale3D(kont m, SmjerKretanja s) -> typename remove_reference<decltype(m[0])>::type\n{\n    for(int i=0; i<m.size(); i++)\n    {\n        for(int j=0; j<m[i].size(); j++)\n        {\n            if(m[i][j].size()!=m[0][0].size()) throw domain_error(\"Plohe nemaju isti broj elemenata\");\n        }\n    }\n    for(int i=0; i<m.size(); i++) if(m[i].size()!=m[0].size()) throw domain_error(\"Plohe nemaju isti broj redova\");\n    typename remove_reference<decltype(m[0])>::type dva;\n    int br=0;\n    if(s==SmjerKretanja::NaprijedNazad)\n    {\n        while(br!=m.size())\n        {\n            typename remove_reference<decltype(m[0][0])>::type pom;\n            for(int j=0; j<m[br].size(); j++)\n            {\n                for(int k=0; k<m[br][j].size(); k++)\n                {\n                    if(j==k) pom.push_back(m[br][j][k]);\n                }\n            }\n            dva.push_back(pom);\n            br++;\n        }\n    }\n    if(s==SmjerKretanja::NazadNaprijed)\n    {\n        while(br!=m.size())\n        {\n            typename remove_reference<decltype(m[0][0])>::type pom;\n            for(int j=0; j<m[br].size(); j++)\n            {\n                for(int k=0; k<m[br][j].size(); k++)\n                {\n                    if(j+k==m[br][j].size()-1) pom.push_back(m[m.size()-br-1][j][k]);\n                }\n            }\n            dva.push_back(pom);\n            br++;\n        }\n    }\n    if(s==SmjerKretanja::GoreDolje)\n    {\n        while(br!=m.size())\n        {\n            typename remove_reference<decltype(m[0][0])>::type pom;\n            for(int j=0; j<m[br].size(); j++)\n            {\n                for(int k=0; k<m[br][j].size(); k++)\n                {\n                    if(br==k) pom.push_back(m[br][j][k]);\n                }\n            }\n            dva.push_back(pom);\n            br++;\n        }\n        dva=obrlati(dva);\n    }\n    if(s==SmjerKretanja::DoljeGore)\n    {\n        while(br!=m.size())\n        {\n            typename remove_reference<decltype(m[0][0])>::type pom;\n            for(int j=0; j<m[br].size(); j++)\n            {\n                for(int k=0; k<m[br][j].size(); k++)\n                {\n                    if(k+br==m[br][j].size()-1) pom.push_back(m[m.size()-br-1][m[br].size()-j-1][k]);\n                }\n            }\n            dva.push_back(pom);\n            br++;\n        }\n        dva=obrlati(dva);\n    }\n    if(s==SmjerKretanja::LijevoDesno)\n    {\n        while(br!=m.size())\n        {\n            typename remove_reference<decltype(m[0][0])>::type pom;\n            for(int j=0; j<m[br].size(); j++)\n            {\n                for(int k=0; k<m[br][j].size(); k++)\n                {\n                    if(j+br==m[br].size()-1) pom.push_back(m[m.size()-br-1][m[br].size()-j-1][m[br][j].size()-k-1]);\n                }\n            }\n            dva.push_back(pom);\n            br++;\n        }\n        dva=duploobrlati(dva);\n    }\n    if(s==SmjerKretanja::DesnoLijevo)\n    {\n        while(br!=m.size())\n        {\n            typename remove_reference<decltype(m[0][0])>::type pom;\n            for(int j=0; j<m[br].size(); j++)\n            {\n                for(int k=0; k<m[br][j].size(); k++)\n                {\n                    if(br==j) pom.push_back(m[br][j][k]);\n                }\n            }\n            dva.push_back(pom);\n            br++;\n        }\n        dva=duploobrlati(dva);\n    }\n    return dva;\n}\n\nint main ()\n{\n\tint x,y,z;\n\tcout<<\"Unesite dimenzije (x y z): \";\n\tcin>>x>>y>>z;\n\tif(x<0) {cout<<\"Neispravne dimenzije kontejnera!\"; return 0;}\n\tif(y<0) {cout<<\"Neispravne dimenzije kontejnera!\"; return 0;}\n\tif(z<0) {cout<<\"Neispravne dimenzije kontejnera!\"; return 0;}\n\tdeque<vector<deque<int>>> k;\n\tk.resize(x);\n\tfor(int i=0; i<k.size(); i++) k[i].resize(y);\n\tfor(int i=0; i<k.size(); i++)\n\t    for(int j=0; j<k[i].size(); j++) k[i][j].resize(z);\n\tcout<<\"Unesite elemente kontejnera: \"<<endl;\n\tfor(int i=0; i<k.size(); i++)\n\t    for(int j=0; j<k[i].size(); j++)\n\t        for(int l=0; l<k[i][j].size(); l++) cin>>k[i][j][l];\n\tcout<<\"Unesite smjer kretanja [0 - 5]: \";\n\tvector<deque<int>> r;\n\tcin>>x;\n\ttry\n\t{\n\t    switch(x)\n\t    {\n\t        case 0:\n\t            r=IzdvojiDijagonale3D(k, SmjerKretanja::NaprijedNazad);\n\t            cout<<\"NaprijedNazad: \"<<endl;\n\t            for(int i=0; i<r.size(); i++)\n\t            {\n\t                for(int j=0; j<r[i].size(); j++)\n\t                {\n\t                    cout<<setw(4)<<right<<r[i][j];\n\t                } cout<<endl;\n\t            }\n\t            break;\n\t        case 1:\n\t            r=IzdvojiDijagonale3D(k, SmjerKretanja::NazadNaprijed);\n\t            cout<<\"NazadNaprijed: \"<<endl;\n\t            for(int i=0; i<r.size(); i++)\n\t            {\n\t                for(int j=0; j<r[i].size(); j++)\n\t                {\n\t                    cout<<setw(4)<<right<<r[i][j];\n\t                } cout<<endl;\n\t            }\n\t            break;\n\t       case 2:\n\t       r=IzdvojiDijagonale3D(k, SmjerKretanja::GoreDolje);\n\t       cout<<\"GoreDolje: \"<<endl;\n\t            for(int i=0; i<r.size(); i++)\n\t            {\n\t                for(int j=0; j<r[i].size(); j++)\n\t                {\n\t                    cout<<setw(4)<<right<<r[i][j];\n\t                } cout<<endl;\n\t            }\n\t            break;\n\t       case 3:\n\t       r=IzdvojiDijagonale3D(k, SmjerKretanja::DoljeGore);\n\t       cout<<\"DoljeGore: \"<<endl;\n\t            for(int i=0; i<r.size(); i++)\n\t            {\n\t                for(int j=0; j<r[i].size(); j++)\n\t                {\n\t                    cout<<setw(4)<<right<<r[i][j];\n\t                } cout<<endl;\n\t            }\n\t            break;\n\t      case 4:\n\t      r=IzdvojiDijagonale3D(k, SmjerKretanja::LijevoDesno);\n\t      cout<<\"LijevoDesno: \"<<endl;\n\t            for(int i=0; i<r.size(); i++)\n\t            {\n\t                for(int j=0; j<r[i].size(); j++)\n\t                {\n\t                    cout<<setw(4)<<right<<r[i][j];\n\t                } cout<<endl;\n\t            }\n\t            break;\n\t     case 5:\n\t     r=IzdvojiDijagonale3D(k, SmjerKretanja::DesnoLijevo);\n\t     cout<<\"DesnoLijevo: \"<<endl;\n\t            for(int i=0; i<r.size(); i++)\n\t            {\n\t                for(int j=0; j<r[i].size(); j++)\n\t                {\n\t                    cout<<setw(4)<<right<<r[i][j];\n\t                } cout<<endl;\n\t            }\n\t            break;\n\t     default: cout<<\"Smjer kretanja nije ispravan!\"<<endl;\n\t    }\n\t    return 0;\n\t}\n\tcatch(domain_error izuz) {cout<<izuz.what();}\n}",
        "student9538": "// \u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 2\n//\tAutotestovi by Enil Pajic (epajic1@etf.unsa.ba | @eon : etf.ba)\n//\tNAPOMENA: i javni ATo-vi su dio postavke!\t\n#include <iostream>\n#include <vector>\n#include <deque>\n#include <cmath>\n#include <type_traits>\n#include <iomanip>\n#include <stdexcept>\n\nusing namespace std;\n\nenum class SmjerKretanja {\n NaprijedNazad, NazadNaprijed, GoreDolje, DoljeGore, LijevoDesno, DesnoLijevo\n};\n\n\ntemplate<typename t>\nt Rotiraj(t mat)\n{ \n    t pom(mat[0].size());\n    for(int i=0;i<pom.size();i++)\n        pom[i].resize(mat.size());\n        \n    for(int i=0;i<pom.size();i++)\n    {\n        for(int j=0;j<pom[i].size();j++)\n        {\n            pom[i][j]=mat[j][i];\n        }\n    }\n    return pom;\n}\n\ntemplate <typename kont>\nauto IzdvojiDijagonale3D(kont Kontejner,SmjerKretanja s)->typename remove_reference<decltype(Kontejner[0])>::type\n{   \n    \n    for(int i=0;i<Kontejner.size();i++)\n    {\n        for(int j=0;j<Kontejner[i].size();j++)\n        {\n                if(Kontejner[0][0].size()!=Kontejner[i][j].size())\n                    throw domain_error(\"Redovi nemaju isti broj elemenata! \");\n        }\n        if(Kontejner[0].size()!=Kontejner[i].size())\n                    throw domain_error(\"Plohe nemaju isti broj redova! \");\n    }\n    \n    \n    typedef typename remove_reference<decltype(Kontejner[0])>::type x;\n    typedef typename remove_reference<decltype(Kontejner[0][0])>::type x1;\n    \n    x mat;\n                \n                for(int i=0;i<Kontejner.size();i++)\n                {   x1 v;\n                    for(int j=0;j<Kontejner[i].size();j++)\n                    {   \n                        for(int k=0;k<Kontejner[i][j].size();k++)\n                        {\n                            if(s==SmjerKretanja::NaprijedNazad)\n                            {\n                                if(j==k) v.push_back(Kontejner[i][j][k]);\n                            }\n                            if(s==SmjerKretanja::NazadNaprijed)\n                            {\n                                if(j+k==Kontejner[i].size()) v.push_back(Kontejner[Kontejner.size()-1-i][j][k]);\n                            }\n                            if(s==SmjerKretanja::LijevoDesno)\n                            {\n                                if(i==j)\n                                {\n                                    v.push_back(Kontejner[Kontejner.size()-1-i][j][k]);\n                                }\n                                \n                            }\n                            if(s==SmjerKretanja::DesnoLijevo)\n                            {\n                                if(i+j==Kontejner.size())\n                                {\n                                    v.push_back(Kontejner[i][Kontejner[i].size()-1-j][Kontejner[i][j].size()-1-k]);\n                                }\n                            }\n                            if(s==SmjerKretanja::GoreDolje)\n                            {\n                                if(i==k)\n                                {\n                                    v.push_back(Kontejner[Kontejner.size()-1-i][j][k]);\n                                }\n                                \n                            }\n                            if(s==SmjerKretanja::DoljeGore)\n                            {\n                                if(i+k==Kontejner[i][j].size()-1)\n                                {\n                                    v.push_back(Kontejner[Kontejner.size()-1-i][Kontejner[i].size()-1-j][k]);\n                                }\n                                \n                            }\n                        }\n                    }\n                    mat.push_back(v);\n                }\n           \n    if(s==SmjerKretanja::GoreDolje || s==SmjerKretanja::DoljeGore || s==SmjerKretanja::LijevoDesno || s==SmjerKretanja::DesnoLijevo)\n                 mat=Rotiraj(mat);   \n                \n    return mat;\n}\ntemplate <typename t>\nvoid Ispisi(t mat)\n{\n    for(int i=0;i<mat.size();i++)\n    {\n        for(int j=0;j<mat[i].size();j++)\n            cout<<setw(4)<<mat[i][j];\n        cout<<endl;\n    }\n}\nint main ()\n{   \n    \n    cout<<\"Unesite dimenzije (x y z): \";\n    int x,y,z;\n    cin>>x>>y>>z;\n    if(x<0 || y<0 || z<0){ cout<<\"Neispravne dimenzije kontejnera! \"; return 0;}\n    vector<deque<deque<int>>> Kont(x);\n    \n    for(int i=0;i<Kont.size();i++)\n\t    Kont[i].resize(y);\n\t \n\t for(int i=0;i<Kont.size();i++)\n\t    for(int j=0;j<Kont[i].size();j++)\n\t            Kont[i][j].resize(z);\n\t            \n\t  cout<<\"Unesite elemente kontejnera: \"<<endl;\n\t  for(int i=0;i<Kont.size();i++)\n\t    for(int j=0;j<Kont[i].size();j++)\n\t        for(int k=0;k<Kont[i][j].size();k++)\n\t            cin>>Kont[i][j][k];\n\t            \n\t  cout<<\"Unesite smjer kretanja [0 - 5]: \";\n      int n;\n      cin>>n;\n      try{\n      switch(n)\n      {\n          case 0:cout<<\"NaprijedNazad: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::NaprijedNazad));break;\n          case 1:cout<<\"NazadNaprijed: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::NazadNaprijed));break;\n          case 2:cout<<\"GoreDolje: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::GoreDolje));break;\n          case 3:cout<<\"DoljeGore: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::DoljeGore));break;\n          case 4:cout<<\"LijevoDesno: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::LijevoDesno));break;\n          case 5:cout<<\"DesnoLijevo: \"<<endl;Ispisi(IzdvojiDijagonale3D(Kont,SmjerKretanja::DesnoLijevo));break;\n          default:cout<<\"Smjer kretanja nije ispravan! \"<<endl;break;\n      }\n      }catch(domain_error e){cout<<e.what();}\n    \n      \n\treturn 0;\n}"
    },
    "179": {
        "label": "0",
        "student1200": "#include <stdio.h>\n#define EPSILON 0.00001\nint main()\n{\n\tfloat p1t,p2t,pt,zt,zit,p1b,p2b,pb,zb,zib,p1m,p2m,pm,zm,zim,bp=0,tp=0,mp=0,mbt=0;\n\tint ocjenat,ocjenab,ocjenam;\n\tfloat tu=0,bu=0,mu=0;\n\tprintf(\"Unesite bodove za Tarika:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%f\", &p1t);\n\tif(p1t<0 || p1t>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"II parcijalni ispit: \");\n\tscanf(\"%f\", &p2t);\n\tif(p2t<0 || p2t>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Prisustvo: \");\n\tscanf(\"%f\", &pt);\n\tif(pt<0 || pt>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zadace: \");\n\tscanf(\"%f\", &zt);\n\tif(zt<0 || zt>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zavrsni ispit: \");\n\tscanf(\"%f\",&zit);\n\tif(zit<0 || zit>40) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Unesite bodove za Bojana:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%f\", &p1b);\n\tif(p1b<0 || p1b>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"II parcijalni ispit: \");\n\tscanf(\"%f\", &p2b);\n\tif(p2b<0 || p2b>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Prisustvo: \");\n\tscanf(\"%f\", &pb);\n\tif(pb<0 || pb>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zadace: \");\n\tscanf(\"%f\", &zb);\n\tif(zb<0 || zb>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zavrsni ispit: \");\n\tscanf(\"%f\",&zib);\n\tif(zib<0 || zib>40) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Unesite bodove za Mirzu:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%f\", &p1m);\n\tif(p1m<0 || p1m>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"II parcijalni ispit: \");\n\tscanf(\"%f\", &p2m);\n\tif(p2m<0 || p2m>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Prisustvo: \");\n\tscanf(\"%f\", &pm);\n\tif(pm<0 || pm>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zadace: \");\n\tscanf(\"%f\", &zm);\n\tif(zm<0 || zm>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zavrsni ispit: \");\n\tscanf(\"%f\",&zim);\n\tif(zim<0 || zim>40) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\ttu=p1t+p2t+pt+zt+zit+EPSILON;\n\n\tif(tu<92) {\n\t\tocjenat=(tu+5)/10;\n\t} else ocjenat=(tu+8)/10;\n\tif(tu>=55) {\n\t\ttp=1;\n\t} else tp=0;\n\n\tbu=p1b+p2b+pb+zb+zib+EPSILON;\n\tif(bu<92) {\n\t\tocjenab=(bu+5)/10;\n\n\t} else ocjenab=(bu+8)/10;\n\tif(bu>=55) {\n\t\tbp=1;\n\t} else bp=0;\n\n\n\tmu=p1m+p2m+pm+zm+zim+EPSILON;\n\tif(mu<92) {\n\t\tocjenam=(mu+5)/10;\n\t} else ocjenam=(mu+8)/10;\n\tif(mu>=55) {\n\t\tmp=1;\n\t} else mp=0;\n\tmbt=mp+tp+bp;\n\n\n\tif(bu<55 && mu<55 && tu<55) {\n\t\tprintf(\"Nijedan student nije polozio.\\n\");\n\t} else if(bu>=55 && mu<55 && tu<55) {\n\t\tprintf(\"Jedan student je polozio.\\n\");\n\t} else\tif(bu<55 && mu>=55 && tu<55) {\n\t\tprintf(\"Jedan student je polozio.\\n\");\n\t} else if(bu<55 && mu<=55 && tu>55) {\n\t\tprintf(\"Jedan student je polozio.\\n\");\n\t} else if(bu>=55 && mu>=55 && tu<55) {\n\t\tprintf(\"Dva studenta su polozila.\\n\");\n\t} else if(bu<55 && mu>=55 && tu>=55) {\n\t\tprintf(\"Dva studenta su polozila.\\n\");\n\t} else if(bu>=55 && mu<55 && tu>=55) {\n\t\tprintf(\"Dva studenta su polozila.\\n\");\n\t} else if(bu>=55 && mu>=55 && tu>=55) {\n\t\tprintf(\"Sva tri studenta su polozila.\\n\");\n\t}\n\n\tif(mbt==3) {\n\t\tif(ocjenat==ocjenam && ocjenam==ocjenab && ocjenab==ocjenat) {\n\t\t\tprintf(\"Sva tri studenta imaju istu ocjenu.\\n\");\n\t\t} else if(ocjenat==ocjenab && ocjenab!=ocjenam && ocjenat!=ocjenam && bp==1 && mp==1 && tp==1 && mbt==3) {\n\t\t\tprintf(\"Dva od tri studenta imaju istu ocjenu.\\n\");\n\t\t} else if(ocjenat==ocjenam && ocjenam!=ocjenab && ocjenat!=ocjenab && bp==1 && mp==1 && tp==1 && mbt==3) {\n\t\t\tprintf(\"Dva od tri studenta imaju istu ocjenu.\\n\");\n\t\t} else if(ocjenam==ocjenab && ocjenam!=ocjenat && ocjenab!=ocjenat && bp==1 && mp==1 && tp==1 && mbt==3) {\n\t\t\tprintf(\"Dva od tri studenta imaju istu ocjenu.\\n\");\n\t\t} else if (ocjenam!=ocjenat && ocjenam!=ocjenab && ocjenat!=ocjenab && bp==1 && mp==1 && tp==1 && mbt==3) {\n\t\t\tprintf(\"Svaki student ima razlicitu ocjenu.\\n\");\n\t\t}\n\t}\n\n\treturn 0;\n\n}",
        "student2956": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   float prviT,drugiT,prisustvoT,zadaceT,zavrsniT;\n   float prviB,drugiB,prisustvoB,zadaceB,zavrsniB;\n   float prviM,drugiM,prisustvoM,zadaceM,zavrsniM;\n   float tarik,bojan,mirza;\n   float sestT,sestB,sestM,sedamT,sedamB,sedamM,osamT,osamB,osamM,devetT,devetB,devetM,desetT,desetB,desetM;\n\n   printf(\"Unesite bodove za Tarika:\\n\");\n   printf(\"I parcijalni ispit:\");\n   scanf(\"%f\",&prviT);\n   printf(\"Drugi parcijalni ispit:\");\n   scanf(\"%f\",&drugiT);\n   printf(\"Prisustvo:\");\n   scanf(\"%f\",&prisustvoT);\n   printf(\"Zadace:\");\n   scanf(\"%f\",&zadaceT);\n   printf(\"Zavrsni ispit:\");\n   scanf(\"%f\",&zavrsniT);\n    printf(\"Unesite bodove za Bojana:\\n\");\n   printf(\"I parcijalni ispit:\");\n   scanf(\"%f\",&prviB);\n   printf(\"Drugi parcijalni ispit:\");\n   scanf(\"%f\",&drugiB);\n   printf(\"Prisustvo:\");\n   scanf(\"%f\",&prisustvoB);\n   printf(\"Zadace:\");\n   scanf(\"%f\",&zadaceB);\n   printf(\"Zavrsni ispit:\");\n   scanf(\"%f\",&zavrsniB);\n    printf(\"Unesite bodove za Mirzu:\\n\");\n   printf(\"I parcijalni ispit:\");\n   scanf(\"%f\",&prviM);\n   printf(\"Drugi parcijalni ispit:\");\n   scanf(\"%f\",&drugiM);\n   printf(\"Prisustvo:\");\n   scanf(\"%f\",&prisustvoM);\n   printf(\"Zadace:\");\n   scanf(\"%f\",&zadaceM);\n   printf(\"Zavrsni ispit:\");\n   scanf(\"%f\",&zavrsniM);\n\n   if(prviB<0 || prviB>20 || prviM<0 || prviM>20 || prviT<0 || prviT>20 || drugiB<0 || drugiB>20 || drugiM<0 || drugiM>20 || drugiT<0 || drugiT>20 || prisustvoB<0 || prisustvoB>10 || prisustvoM<0 || prisustvoM>10 || prisustvoT<0 || prisustvoT>10 || zadaceB<0 || zadaceB>10 || zadaceM<0 || zadaceM>10 || zadaceT<0 || zadaceT>10 || zavrsniB<0 || zavrsniB>40 || zavrsniM<0 || zavrsniM>40 || zavrsniT<0 || zavrsniT>40) {\n    printf(\"Neispravan broj bodova\"); return 0;\n   }\n   tarik=prviT+drugiT+prisustvoT+zadaceT+zavrsniT;\n   bojan=prviB+drugiB+prisustvoB+zadaceB+zavrsniB;\n   mirza=prviM+drugiM+prisustvoM+zadaceM+zavrsniM;\n\n\n   if(tarik<55 && bojan<55 && mirza<55) { printf(\"Nijedan student nije polozio\"); return 0;}\n   if((tarik>55 && bojan<55 && mirza<55)||(bojan>55 && tarik<55 && mirza<55)||(mirza>55 && tarik<55 && bojan<55)) { printf(\"Jedan student je polozio\"); return 0;}\n   if((tarik>55 && bojan>55 && mirza<55)||(tarik>55 && mirza>55 && bojan<55)||(bojan>55 && mirza>55 && tarik<55)) { printf(\"Dva studenta su polozila\"); return 0;}\n   if((tarik>=55 || tarik<65 && bojan>=55 || bojan<65 && mirza>=55 || mirza<65)||(tarik>=65 || tarik<75 && bojan>=65 || bojan<75 && mirza>=65 || mirza<75)||(tarik>=75 || tarik<85 && bojan>=75 || bojan<85 && mirza>=75 || mirza<85)||(tarik>=85 || tarik<92 && bojan>=85 || bojan<92 && mirza>=85 || mirza<92)||(tarik>=92 || tarik<=100 && bojan>=92 || bojan<=100 && mirza>=92 || mirza<=100)) {\n    printf(\"Sva tri studenta su polozila\\nSva tri imaju istu ocjenu\");}\n    else { printf(\"Sva tri studenta su polozila\\nSvi studenti imaju razlicitu ocjenu ocjenu\");\n    return 0;\n    }\n\n}\n"
    },
    "180": {
        "label": "1",
        "student5741": "#include <stdio.h>\n\nint main() {\n\tint i,j,n;\n\tjump:\n\tprintf(\"Unesite broj n: \");\n\tscanf(\"%d\",&n);\n\tif(n<=0 || n>50){\n\t\tprintf(\"Pogresan unos\\n\");\n\t\tgoto jump;\n\t}\n\t\n\telse{\n\t\tprintf(\"*\");\n\t\tfor(i=0;i<2*n-3;i++){\n\t\t\tprintf(\" \");\n\t\t}\n\t\tprintf(\"*\");\n\t\tfor(i=0;i<2*n-3;i++){\n\t\t\tprintf(\" \");\n\t\t}\n\t\tprintf(\"*\\n\");\n\t\n\t\tfor(i=0;i<n-2;i++){\n\t\t\tfor(j=0;j<=i;j++){\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t\tprintf(\"*\");\n\t\t\tfor(j=0;j<2*n-5-2*i;j++){\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t\tprintf(\"*\");\n\t\t\tfor(j=0;j<2*(i+1)-1;j++){\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t\tprintf(\"*\");\n\t\t\tfor(j=0;j<2*n-5-2*i;j++){\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t\tprintf(\"*\\n\");\n\t\t}\n\t\n\t\tif(n>1){\n\t\t\tfor(i=0;i<n-1;i++){\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t\tprintf(\"*\");\n\t\t\tfor(i=0;i<2*n-3;i++){\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t\tprintf(\"*\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n",
        "student7495": "#include <stdio.h>\n\nint main() {\n    int i,j,n;\n    skok:\n    printf (\" Unesite broj n: \");\n    scanf(\"%d\", &n);\n    if (n<=0 || n>50) {\n    \tprintf (\"Pogresan unos \\n\");\n    \tgoto skok;\n    }\n    \n    else {\n    \tprintf(\"*\");\n    \tfor (i=0; i<2*n-3;i++){\n    \t\tprintf (\" \");\n    \t}\n    printf (\"*\");\n     for (i=0;i<2*n-3; i++){\n     \tprintf (\" \");\n     }\n     printf (\"*\\n\");\n     for (i=0;i<n-2;i++){\n     \tfor (j=0;j<=i;j++){\n     \t\tprintf(\" \");\n     \t}\n     \tprintf(\"*\");\n     \tfor(j=0;j<2*n-5-2*i;j++){\n     \t\tprintf (\" \");\n     \t}\n     \tprintf(\"*\");\n     \tfor(i=0;i<n-2;j++){\n     \t\tfor(j=0;j<=i;j++)\n     \t\tprintf (\" \");\n     \t\n     \t}\n     \tprintf (\"*\");\n     \tfor (j=0;j<2*n-5-2*i;j++){\n     \t\tprintf (\" \");\n     \t\t\n     \t}\n     \t\n     \tprintf(\"*\");\n     \tfor(j=0;j<2*(i+1)-1;j++)\n     \tprintf(\" \");\n        }\n        printf(\"*\");\n        for(j=0;j<2*n-5-2*i;j++){\n        \tprintf( \" \");\n        }\n        printf (\"*\\n\");\n     }\n     \n     if (n>1){\n     \tfor(i=0;i<n-1;i++){\n     \t\tprintf (\" \");\n     \t}\n     \tprintf (\"*\");\n     \tfor(i=0;i<2*n-3;i++){\n     \t\tprintf(\" \");\n     \t}\n     \tprintf (\"*\\n\");\n     }\n  }\n  return 0;\n}\n"
    },
    "181": {
        "label": "0",
        "student7778": "#include <stdio.h>\n#include <math.h>\n\nint izbaci_cifre (int *niz1, int v1, int *niz2, int v2)\n{\n\tint i,j,k,temp, broj, l, br, da,vrati,a;\n\tint *p=niz1;\n\tint niz3[1000]; \n\tint niz4[1000];\n\ti=0; j=0; k=0; br=0; da=0; vrati=1;\n\twhile(i<v1)\n\t{\n\t\tl=0;\n\t\tbr=0; \n\t\tniz4[i]=0;\n\t\ttemp=fabs(niz1[i]);\n\t\tdo\n\t\t{\n\t\t\tbroj=temp%10;\n\t\t\ttemp/=10;\n\t\t\tniz3[l]=broj;\n\t\t\tl++;\n\t\t}while(temp>0);\n\t\t\n\t\t\n\t\twhile(j<l)\n\t\t{\n\t\t\tda=1;\n\t\t\twhile(k<v2)\n\t\t\t{\n\t\t\t\tif(niz3[j]==niz2[k])\n\t\t\t\tda=0;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tk=0;\n\t\t\t\n\t\t\tif(da==1)\n\t\t\t{\n\t\t\t\ta=1;\n\t\t\t\twhile(k<br) {a=a*10; k++;}k=0;\n\t\t\t\tniz4[i]=niz4[i]+niz3[j]*a;\n\t\t\t\tbr++;\n\t\t\t\tda=0;\n\t\t\t}\n\t\t\tj++;\n\t\t\t\n\t\t\t\n\t\t}\n\t\tj=0;\n\t\n\t\ti++;\t\n\t}\n\t\n\ti=0;\n\tj=0;\n\t\n\twhile(i<v1)\n\t{\n\t\tif(niz1[i]<0)\n\t\tniz4[i]=niz4[i]*(-1);\n\t\ti++;\n\t}i=0;\n\t\n\twhile(i<v1)\n\t{\n\t\t\n\t\t*p=niz4[i];\n\t\tp++;\n\t\ti++;\n\t}i=0;\n\t\n\twhile(i<v2)\n\t{\n\t\tif(niz2[i]<0 || niz2[i]>=10) vrati=0;\n\t\tfor(j=i+1; j<v2; j++)\n\t\t{\n\t\t\tif(niz2[i]==niz2[j])\n\t\t\tvrati=0;\n\t\t}\n\t\ti++;\n\t}\n\treturn vrati;\n}\n\n\n\n\n\n\n\n/*int izbaci_cifre(int niz[10], int niz2[10])\n{\n\tint i,j,suma;\n\t\n\tint  niz3[10];\n\tint k=1;\n\tk*=10;\n\tfor(i=0;i<10;i++) {\n\twhile(niz[i]!=0) {\n\t\tint b=niz[i]%10;\n\t\tint temp=1;\n\t\tfor(i=0;i<10;i++) {\n\t\t\tb==niz[i]; temp=0;\n\t\t}\n\t\tif(temp==1) {\n\t\t\tsuma= b*k;\n\t\t\tk*=10;\n\t\t}\n\t}\n\t\t\n\t}\n\t\n\t\n}*/\n\t\n\n\n\n\n\n\n\n\nint main() {\n\tint brojevi[] = {25, 235, 1235, 252, 22552255};\nint cifre[] = {2, 3, 5};\nint i;\nizbaci_cifre(brojevi, 5, cifre, 3);\nfor (i=0; i<5; i++)\n  printf(\"%d \", brojevi[i]);\n\treturn 0;\n}\n",
        "student9705": "#include <stdio.h>\nint izbaci_cifre(int *niz , int n , int *niz1 , int n1)\n{\n\n\tint\tpredznak=1,cifra,i,j,pom,pom1;\n\n\n\tfor(i=0; i<n1; i++) {\n\n\t\tif(*(niz1+i)<0 || *(niz1+i)>9) return 0;\n\n\t\tfor(j=i-1; j>=0; j--) {\n\t\t\tif(*(niz1+i)==*(niz1+j)) return 0;\n\n\t\t}\n\n\t}\n\n\tfor(i=0; i<n; i++) {\n\t\tpredznak=1;\n\t\tif(*(niz+i)<0) {\n\t\t\t*(niz+i)*=-1;\n\t\t\tpredznak=-1;\n\t\t}\n\n\t\tpom=*(niz+i);\n\t\tpom1=0;\n\n\t\tfor(j=0; j<n1; j++) {\n\t\t\tpom1=0;\n\t\t\twhile(pom!=0) {\n\n\t\t\t\tcifra=pom%10;\n\t\t\t\tif(*(niz1+j)!=cifra) {\n\t\t\t\t\tpom1+=cifra;\n\t\t\t\t\tpom1*=10;\n\t\t\t\t}\n\t\t\t\tpom/=10;\n\t\t\t}\n\t\t\tpom1/=10;\n\t\t\tpom=pom1;\n\t\t}\n\n\n\t\tif(n1%2!=0) {\n\n\t\t\tpom1=0;\n\t\t\twhile(pom!=0) {\n\t\t\t\tpom1+=pom%10;\n\t\t\t\tpom1*=10;\n\t\t\t\tpom/=10;\n\t\t\t}\n\t\t\tpom1/=10;\n\t\t\tpom=pom1;\n\t\t}\n\t\t*(niz+i)=pom*predznak;\n\n\t}\n\treturn 1;\n\n}\n\nint main()\n{\n\tprintf(\"Zada\u0107a 3, Zadatak 3\");\n\treturn 0;\n}\n"
    },
    "182": {
        "label": "1",
        "student9155": "#include <stdio.h>\n\nint main() {\n\t int unos[100]={0},t,i=0,j,temp[1000]={0},brojac=0,izlaz[1000]={0},u=0;\n\t \n\t printf (\"Unesite velicinu niza: \");\n\t scanf (\"%d\",&j);\n\t printf (\"Unesite clanove niza: \");\n\t \n\t while(1) {\n\t \tif (i<j)\n\t scanf (\"%d\",&unos[i++]);\n\t else break;\n\t }\n\t i=j;\n\t \n\t while (--i>=0) {\n\t \tif (unos[i]==0)\n\t { temp[brojac]=0;brojac++; }\n\t while (unos[i]) {\n\t \ttemp [brojac]=unos[i]%10;\n\t unos[i]=unos[i]/10;\n\t brojac ++;\n\t }}\n\t \n\t i=brojac/2;\n\t while (i>-1) {\n\t \tt=temp[i];\n\t \ttemp[i]=temp[brojac-i-1];\n\t \ttemp[brojac-i-1]=t;\n\t \ti--;\n\t }\n\t i=0;\n\t j=0;\n\t while(1) {\n\t \tif(i<brojac) {\n\t \t\tizlaz[u]=temp[i];\n\t \t\tdo { \n\t \t\t\tj++;\n\t \t\t\ti++;\n\t \t\t}\n\t \t\twhile (temp[i-1]==temp[i] && i<brojac);\n\t \t\tu++;\n\t \t\tizlaz[u]=j;\n\t \t\tj=0;\n\t \t\tu++;\n\t \t}\n\t else break;\n\t }\n\t i=u-1;\n\t printf (\"Finalni niz glasi:\\n\");\n\t while (i>-1) \n\t printf (\"%d \",izlaz[u-1-i--]);\n\t return 0;\n}",
        "student9547": "#include <stdio.h>\n\nint main() {\n\t\n\tint unos[100]={0},tmp,i=0,j,temp[1000]={0},brojac=0,izlaz[1000]={0},u=0;\n\t\n\tprintf(\"Unesite velicinu niza: \");\n\tscanf(\"%d\",&j);\n\tprintf(\"Unesite clanove niza: \");\n\n\twhile(i<j) \n\tscanf(\"%d\", &unos[i++]);\n\ti=j;\n\n\twhile(--i>=0){\n\t\tif(unos[i]==0)\n\t\t{\n\t\t\ttemp[brojac]=0;\n\t\t\tbrojac++;}\n\t\twhile (unos[i]) {\n\t\t\ttemp[brojac]=unos[i]%10;\n\t\t\tunos[i]=unos[i]/10;\n\t\t\tbrojac++;\n\t\t}\n\t}\n\ti=-1;\n\twhile(++i<brojac/2){\n\t\ttmp=temp[i];\n\t\ttemp[i]=temp[brojac-i-1];\n\t\ttemp[brojac-i-1]=tmp;\n\t}\n\ti=0;\n\tj=0;\n\twhile(i<brojac){\n\t\tizlaz[u]=temp[i];\n\t\tdo{\n\t\tj++;\n\t\ti++;\n\t\t}\n\t\twhile(temp[i-1]==temp[i] && i<brojac);\n\t\tu++;\n\t\tizlaz[u]=j;\n\t\tj=0;\n\t\tu++;\n\t}\n\ti=0;\n\tprintf(\"Finalni niz glasi:\\n\");\n\twhile(i<u)printf(\"%d \",izlaz[i++]);\n\treturn 0;\n}\n"
    },
    "183": {
        "label": "0",
        "student2704": "#include <stdio.h>\n\n/*Funkcija provjerava da li je unos znak*/\nint je_li_znak(char a){\n    return (a!=' ' && a!='\\0'); /*rijec je omedjena razmakom, pocetkom ili krajem stringa*/\n}\n\n/*Funkcija u stringu trazi rijec; vraca pokazivac na mjesto gdje pocinje ta rijec u stringu*/\nchar *nadji_rijec(char *string, char*rijec){\n    char *pocetak_stringa=string;\n    char *pocetak_rijeci=rijec;\n    \n    while(*string!='\\0'){\n        char *kretanje=string;\n        int nadjena=1; /*pretpostavka da je rijec nadjena*/\n        while(je_li_znak(*rijec) && *kretanje!='\\0'){\n            if(!(*rijec==*kretanje))\n            nadjena=0; /*ako je ono na sta pokazuje string i rijec razlicito, rijec nije nadjena*/\n            rijec++; \n            kretanje++; /*pomjeranje po stringu i rijeci*/\n        }\n        /*ako je nadjena provjera da li su uslovi zadovoljeni*/\n        if(nadjena && !je_li_znak(*rijec) && (string==pocetak_stringa || !je_li_znak(*(string-1))) && !je_li_znak(*kretanje))\n        return string; /*poslije rijeci mora biti razmak ili kraj recenice*/\n        \n        rijec=pocetak_rijeci;\n        string++; \n    }\n    return NULL;\n}\n\n/*Funkcija vraca duzinu rijeci*/\nint duzina(char *rijec){\n    int duz=0; /*brojac se povecava sve dok karakter na kojeg pokazuje zadovoljava uslove*/\n    while(je_li_znak(*(rijec+duz))) /*uslovi odredjeni u f-ji je_li_znak*/\n    duz++; \n    return duz;\n}\n\n/*Funckija nisu iste rijeci*/\nint nisu_iste(char *rijec1, char *rijec2){\n    while (*rijec1!='\\0' && *rijec2!='\\0') { /*provjera: da li su 2 rijeci identicne*/\n        if(*rijec1!=*rijec2)\n        return 1;\n        rijec1++;\n        rijec2++;\n    }\n    return(*rijec1!=*rijec2);\n}\n\n/*Funkcija mijenja rijeci odgovarajucim rijecima iz niza zamjene*/\nchar *zamjena_rijeci(char *tekst, char **rijeci, char **zamjene, int broj_rijeci){\n    \n    int i=0;\n    while(i<broj_rijeci){\n        \n        if(nisu_iste(*(rijeci+i),*(zamjene+i))) /*zamjenu vrsimo samo ako rijeci nisu iste*/\n        {\n            int razlika= duzina(*(rijeci+i))-duzina(*(zamjene+i)); /*poziv f-je duzina*/\n            while(nadji_rijec(tekst,*(rijeci+i))) /*poziv f-je nadji rijec*/\n            {\n                char *kraj=tekst;\n                while(*kraj!='\\0')\n                kraj++;\n                char *pocetak=nadji_rijec(tekst,*(rijeci+i)); /*poziv f-je nadji rijec*/\n                int j=0;\n                if(razlika<0) { /*pomjeranje u desno*/\n                    while(kraj+j!=pocetak){\n                        *(kraj+j-razlika)=*(kraj+j);\n                        j--;\n                    }\n                }\n                else if(razlika>0){ /*pomjeranje u lijevo*/\n                    while(kraj!=pocetak+j){\n                        *(pocetak+j)=*(pocetak+razlika+j);\n                        if(*(pocetak+j)=='\\0') \n                        break; /*u slucaju da se ne pristupi nedeklarisanoj lokaciji*/\n                        j++;\n                    }\n                }\n                else ;\n                \n                int k=0;\n                while(k<duzina(*(zamjene+i))){ /*nakon pomjeranja vrsi se zamjena*/\n                    *(pocetak+k)=*(*(zamjene+i)+k);\n                    k++; \n                }\n            }\n        }\n        i++;\n    }\n    return tekst; /*f-ja vraca tekst*/\n}\n\nint main(){\n    /*rijeci, zamjene i tekst*/\n    char *rijeci[2]={ \" \", \"\" };\n    char *zamjene[2]= {\" \", \" \" };\n    char tekst[100]= \" \";\n    printf(\"%s\", zamjena_rijeci(tekst, rijeci, zamjene, 2)); /*Ispis*/\n    \n    return 0;\n}\n",
        "student9538": "#include <stdio.h>\n\n int daliimarijeci(char*s1,char*s2) {\n \tchar*poc=s1,*p,*q;\n \twhile(*s1!='\\0') {\n \t\tp=s1;q=s2;\n \t\twhile(*p++==*q++) {\n \t\t\tif((s1==poc || *(s1-1)==' ') && (*q=='\\0') && (*p==' ' || *p=='\\0')) return 1;\n \t\t}\n \t\ts1++;\n \t}\n \treturn 0; }\n \tchar*trazi_rijec(char*s1,char*s2) {\n \t\tchar*poc=s1;\n \t\tchar*p=s1;\n \t\tchar*q=s2;\n \t\twhile(*s1!='\\0') {\n \t\t p=s1; q=s2;\n \t\t while(*p++ == *q++)\n \t\tif(*q=='\\0' && (s1==poc|| *(s1-1)==' ') && (*p==' ' || *p=='\\0')) return s1;\n \ts1++; }\n \treturn NULL; }\n \tvoid izbaci(char*p, int vel) {\n \t\tif (vel>0) {\n \t\t\tchar *r=p+vel;\n \t\t\twhile(*r!='\\0')\n \t\t\t*p++=*r++;\n \t\t\t*p='\\0';\n \t\t}\n \t}\n void ubaci(char*p, char*r) {\n \tchar*kraj=p;\n while(*kraj!='\\0') kraj++;\n char*pom=r;\n int duz=0;\n while(*pom!='\\0') {\n \tduz++;\n \tpom++;\n }\n while (kraj>=p) {\n \t*(kraj+duz)=*kraj;\n \tkraj--;\n }\n while(*r!='\\0') {\n \t*p++=*r++;\n } \n  \n }\n char* zamjena_rijeci(char*tekst,char**rijeci,char**zamjene,int broj_rijeci) {\n \tchar*pocetak=tekst;\n \tchar*s=tekst,*p,*n,*r;\n \tint i;\n \tint vel;\n \tchar*rr=rijeci[0];\n \tchar*zz=zamjene[0];\n \tif(*rr==*zz &&*(rr+1)==*(zz+1)&&*(rr+2)==*(zz+2)) return pocetak;\n \tfor(i=0;i<broj_rijeci;i++) {\n \t int izbacivanje=0;\n \t char*pom=rijeci[i];\n \t int duzina=0;\n \t while(*pom!='\\0') {\n \t  duzina++; pom++;\n \t }\n \t\tint vr=daliimarijeci(tekst,rijeci[i]);\n \t\tif (vr==1)  { p=trazi_rijec(tekst,rijeci[i]);\n \t\tizbacivanje=1;}\n \t\tif(vr==1) {\n \t\t\tizbaci(p,duzina);\n \t\t\tif(izbacivanje==1) {\n \t\t\t\tubaci(p,zamjene[i]);\n \t\t\t\ti--; }\n \t\t}\n \t\telse if(vr==0) continue;\n \t}\n \treturn pocetak;\n }\n int main () {\n \tchar*rijeci[2]={\"beli\",\"sneg\"};\n \tchar*zamjene[2]={\"bijeli\",\"snijeg\"};\n \tchar tekst[100]=\"beli sneg je pokrio beli breg\";\n \tprintf(\"%s\",zamjena_rijeci(tekst,rijeci,zamjene,2));\n \treturn 0;\n }\n "
    },
    "184": {
        "label": "1",
        "student4430": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 1\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Ivona Ivkovic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: iivkovic2@etf.unsa.ba\n\t\n*/\n#include <iostream>\n#include <vector>\n#include <stdexcept>\n#include <string>\nusing namespace std; \n\nenum class Polje {Prazno, Posjeceno, Mina, BlokiranoPrazno, BlokiranoPosjeceno, BlokiranoMina}; \ntypedef vector<vector<Polje>> Tabla; \nenum class Smjerovi {GoreLijevo, Gore, GoreDesno, Desno, DoljeDesno, Dolje, DoljeLijevo, Lijevo};\nenum class Status {NijeKraj, KrajPoraz, KrajPobjeda};\nenum class KodoviGresaka {PogresnaKomanda, NedostajeParametar, SuvisanParametar, NeispravanParametar};\nenum class Komande {PomjeriJednoMjesto, PomjeriDalje, Blokiraj, Deblokiraj, PrikaziOkolinu, ZavrsiIgru, KreirajIgru};\n\n\nTabla KreirajIgru (int n, const vector<vector<int>> &mine){\n\tTabla tabla (n); \n\tfor(int i=0; i<n; i++)\t\t\t\t\t\t\t\t\t// formira tablu za igru nxn\n\t\ttabla[i].resize(n); \n\t\t\n\tfor(int i=0; i<mine.size(); i++){\t\t\t\t\t\t// provjera da li svi vektori vektora imaju dva elementa\n\t\t\tif(mine[i].size()!=2) throw domain_error (\"Ilegalan format zadavanja mina\"); \n\t}\n\tfor(int i=0; i<mine.size(); i++){\t\t\t\t\t\t// provjerava da li je neka pozicija, x ili y van formata table\n\t\tfor(int j=0; j<mine[i].size(); j++){\n\t\t\tif(mine[i][j]>=n || mine[i][j]<0) throw domain_error (\"Ilegalne pozicije mina\"); \n\t\t}\n\t}\n\tfor(int i=0; i<n; i++){\t\t\t\t\t\t\t\t\t//popunjava tablu na prazno\n\t\tfor(int j=0; j<n; j++){\n\t\t\ttabla[i][j]=Polje::Prazno; \n\t\t}\n\t}\n\tfor(int i=0; i<n; i++){\t\t\t\t\t\t\t\t\t// popunjava tablu sa minama, na pozicijama koje su date u vektoru \n\t\tfor(int j=0; j<n; j++){\n\t\t\tfor(int k=0; k<mine.size(); k++){\n\t\t\t\t\tif(i==mine[k][0] && j==mine[k][1])\n\t\t\t\t\t\ttabla[i][j]=Polje::Mina; \n\t\t\t}\n\t\t}\n\t}\n\treturn tabla; \n}\nint OkolinaBroja(const Tabla polja, int x, int y){\n\tint brojac=0; \n\tint n=polja.size(); \n\tfor(int i=x-1; i<=x+1; i++){\n\t\tfor(int j=y-1; j<=y+1; j++){\n\t\t\tif(i>=0 && i<n && j>=0 && j<n && polja[i][j]==Polje::Mina) brojac++; \n\t\t}\n\t}\n\treturn brojac; \n}\n\nvector<vector<int>> PrikaziOkolinu(const Tabla &polja, int x, int y){\n\tif(x>= polja.size() || y>= polja.size() || y<0 || x<0){\n\tstring x1=to_string(x); \n\tstring y1=to_string(y); \n\tstring greska= \"Polje (\"+x1+\",\"+y1+\") ne postoji\";\n\tthrow domain_error (greska); \n\t}\n\t\n\tvector<vector<int>> matrica (3); \n\tint n=polja.size(); \n\tvector<int> v; \n\tfor(int i=0; i<3; i++)\t\t\t\t\t\t\t\t\t//kreira matricu 3x3 koja se vra\u0107a iz funkcije\n\t\tmatrica[i].resize(3); \n\n\tfor(int i=x-1; i<=x+1; i++){\n\t\tfor(int j=y-1; j<=y+1; j++){\n\t\t\tv.resize(0); \n\t\t\tif(x-1>=0 && x+1<polja.size() && y-1>=0 && y+1<polja[i].size()){\n\t\t\tint brojac=OkolinaBroja(polja, i, j); \n\t\t\tv.push_back(brojac); \n\t\t\t}\n\t\t}\n\t\tmatrica.push_back(v); \n\t}\n\t\n\t\n\treturn matrica; \n}\nvoid BlokirajPolje(Tabla &polja, int x, int y){\n\tif(x>= polja.size() || y>= polja.size()){\n\tstring x1=to_string(x); \n\tstring y1=to_string(y); \n\tstring greska= \"Polje (\"+x1+\",\"+y1+\") ne postoji\";\n\tthrow domain_error (greska); \n\t}\n\tif(polja[x][y]==Polje::Prazno) polja[x][y]=Polje::BlokiranoPrazno; \n\telse if(polja[x][y]==Polje::Mina) polja[x][y]=Polje::BlokiranoMina; \n\telse if(polja[x][y]==Polje::Posjeceno) polja[x][y]=Polje::BlokiranoPosjeceno; \n}\nvoid DeblokirajPolje(Tabla &polja, int x, int y){\n\t\n\tif(x>= polja.size() || y>= polja.size()){\n\tstring x1=to_string(x); \n\tstring y1=to_string(y); \n\tstring greska= \"Polje (\"+x1+\",\"+y1+\") ne postoji\";\n\tthrow domain_error (greska); \n\t}\n\tif(polja[x][y]==Polje::BlokiranoPrazno) polja[x][y]=Polje::Prazno; \n\telse if(polja[x][y]==Polje::BlokiranoMina) polja[x][y]=Polje::Mina; \n\telse if(polja[x][y]==Polje::BlokiranoPosjeceno) polja[x][y]=Polje::Posjeceno; \n}\nStatus ProvjeraStatusa(Tabla polja){\n\tStatus status=Status::KrajPobjeda; \n\tfor(int i=0; i<polja.size(); i++){\n\t\tfor(int j=0; j<polja[i].size(); j++){\n\t\t\tif(polja[i][j]==Polje::Prazno || polja[i][j]==Polje::BlokiranoPrazno){\n\t\t\t\tstatus=Status::NijeKraj; \n\t\t\t\treturn status; \n\t\t\t}\n\t\t}\n\t}\n\treturn status; \n}\nStatus Idi(Tabla &polja, int &x, int &y, Smjerovi smjer){\n\t\n\tpolja[x][y]=Polje::Posjeceno;\n\tStatus status=ProvjeraStatusa(polja); \n\t\n\tif(smjer==Smjerovi::GoreLijevo){\n\t\tx--; \n\t\ty--; \n\t}\n\telse if(smjer==Smjerovi::GoreDesno){\n\t\tx--; \n\t\ty++; \n\t}\n\telse if(smjer==Smjerovi::Gore){\n\t\tx--; \n\t}\n\telse if(smjer==Smjerovi::Desno){\n\t\ty++; \n\t}\n\telse if(smjer==Smjerovi::Lijevo){\n\t\ty--; \n\t}\n\telse if(smjer==Smjerovi::DoljeDesno){\n\t\tx++;\n\t\ty++;\n\t}\n\telse if(smjer==Smjerovi::DoljeLijevo){\n\t\tx++;\n\t\ty--; \n\t}\n\telse if(smjer==Smjerovi::Dolje){\n\t\tx++;\n\t}\n\tif(x<0 || y<0 || x>=polja.size() || y>=polja.size()) throw out_of_range (\"Izlazak van igrace table\"); \n\tif(polja[x][y]==Polje::BlokiranoPrazno || polja[x][y]==Polje::BlokiranoMina || polja[x][y]==Polje::BlokiranoPosjeceno) throw logic_error (\"Blokirano polje\"); \n\tif(polja[x][y]==Polje::Mina) status=Status::KrajPoraz;\n\t\n\treturn status; \n}\nStatus Idi(Tabla &polja, int &x, int &y, int novi_x, int novi_y){\n\tpolja[x][y]=Polje::Posjeceno; \n\tStatus status=ProvjeraStatusa(polja); \n\tx=novi_x; \n\ty=novi_y; \n\tif(x<0 || y<0 || x>=polja.size() || y>=polja.size()) throw out_of_range (\"Izlazak van igrace table\"); \n\tif(polja[x][y]==Polje::BlokiranoPrazno || polja[x][y]==Polje::BlokiranoMina || polja[x][y]==Polje::BlokiranoPosjeceno) throw logic_error (\"Blokirano polje\"); \n\tif(polja[x][y]==Polje::Mina) status=Status::KrajPoraz;\n\t\n\treturn status;\n}\nvoid PrijaviGresku(KodoviGresaka greska){\n\tif(greska==KodoviGresaka::PogresnaKomanda) cout << \"Nerazumljiva komanda!\" << endl; \n\telse if(greska==KodoviGresaka::NedostajeParametar) cout << \"Komanda trazi parametar koji nije naveden!\" << endl; \n\telse if(greska==KodoviGresaka::NeispravanParametar) cout << \"Parametar komande nije ispravan!\" << endl; \n\telse if(greska==KodoviGresaka::SuvisanParametar) cout << \"Zadan je suvisan parametar nakon komande!\" << endl; \n}\nbool UnosKomande(Komande &komanda, Smjerovi &smjer, int &x, int &y, KodoviGresaka &greska){\n\tstring s; \n\ts.resize(10); \n\tgetline(cin,s); \n\t\n\tfor(int i=0; i<10; i++){\n\t\twhile(s[i]==' ') i++; \t\t\t\t\t\t\t\t\t\t\t// razmaci na po\u010detku komande\n\t\t\n\t\tif(s[i]=='K'){\t\t\t\t\t\t\t\t\t\t\t\t\t// da li je komanda K \n\t\t\ti++; \n\t\t\twhile(s[i]==' ') i++; \t\t\t\t\t\t\t\t\t\t\n\t\t\tif(s[i]=='\\n'){\n\t\t\t\tkomanda=Komande::KreirajIgru; \t\t\t\t\t\t\t// ako iza K nema ni\u0161ta osim razmaka i entera, smjesti u komanda i iza\u0107i iz funkcije\n\t\t\t\treturn true; \n\t\t\t}\n\t\t\telse PrijaviGresku(KodoviGresaka::SuvisanParametar); \t\t// ako iza K ima bilo \u0161ta osim razmaka i entera prijavi gresku \n\t\t}\n\t\telse if(s[i]=='Z'){\t\t\t\t\t\t\t\t\t\t\t\t// da li je komanda Z \n\t\t\ti++; \n\t\t\twhile(s[i]==' ') i++; \t\t\t\t\t\t\t\n\t\t\tif(s[i]=='\\n'){\n\t\t\t\tkomanda=Komande::ZavrsiIgru; \t\t\t\t\t\t\t\n\t\t\t\treturn true; \n\t\t\t}\n\t\t\telse PrijaviGresku(KodoviGresaka::SuvisanParametar); \t\t\n\t\t}\n\t\telse if(s[i]=='B'){\t\t\t\t\t\t\t\t\t\t\t\t// da li je komanda B\n\t\t\ti++; \n\t\t\twhile(s[i]==' ') i++; \n\t\t\tif(s[i]=='\\n'){\n\t\t\t\tkomanda=Komande::Blokiraj; \n\t\t\t\treturn true; \n\t\t\t}\n\t\t\telse PrijaviGresku(KodoviGresaka::SuvisanParametar); \n\t\t}\n\t\telse if(s[i]=='D'){\n\t\t\ti++; \n\t\t\twhile(s[i]==' ') i++; \n\t\t\tif(s[i]=='\\n'){\n\t\t\t\tkomanda=Komande::Deblokiraj; \n\t\t\t}\n\t\t\telse PrijaviGresku(KodoviGresaka::SuvisanParametar); \n\t\t}\n\t\telse if(s[i]=='P' && s[i+1]=='O'){\t\n\t\t\ti=i+2; \n\t\t\t while(s[i]==' ') i++; \n\t\t\t if(s[i]=='\\n'){\n\t\t\t \tkomanda=Komande::PrikaziOkolinu; \n\t\t\t \treturn true; \n\t\t\t }\n\t\t\t else PrijaviGresku(KodoviGresaka::SuvisanParametar);\n\t\t\t}\n\t\telse if(s[i]=='P' && s[i+1]=='1'){\n\t\t\ti=i+2; \n\t\t\twhile(s[i]==' ') i++; \n\t\t\tif(s[i]=='\\n'){\n\t\t\t\tkomanda=Komande::PomjeriJednoMjesto; \n\t\t\t\treturn true; \n\t\t\t}\n\t\t}\n\t\telse if(s[i]=='P' && s[i+1]=='>'){\n\t\t\t\n\t\t}\n\t\telse PrijaviGresku(KodoviGresaka::PogresnaKomanda);\n\t\t\n\t}\n\t\n\t\n\t\n}\nvoid IzvrsiKomandu(Komande komanda, Tabla &polja, int &x, int &y, Smjerovi p_smjer = Smjerovi::Gore, int p_x=0, int p_y=0){\n\tif(komanda==Komande::KreirajIgru){\n\t\t\n\t}\n\telse if(komanda==Komande::ZavrsiIgru){\n\t\t\n\t}\n\telse if(komanda==Komande::Blokiraj){\n\t\tBlokirajPolje(polja, x, y);\n\t}\n\telse if(komanda==Komande::Deblokiraj){\n\t\tDeblokirajPolje(polja, x, y); \n\t}\n\telse if(komanda==Komande::PrikaziOkolinu){\n\t\t\n\t}\n\telse if(komanda==Komande::PomjeriJednoMjesto){\n\t\t\n\t}\n\telse if(komanda==Komande::PomjeriDalje){\n\t\t\n\t}\n}\n\nint main ()\n{\n\ttry{\n\tTabla tabla=KreirajIgru(5, {{0,1}, {0,4}, {1,3}, {1,4}, {2,0}, {2,1}, {2,3}});\n\tvector<vector<int>> matrica; \n\tmatrica=PrikaziOkolinu(tabla, 1,1); \n\tfor(int i=0; i<3; i++){\n\t\tfor(int j=0; j<3; j++){\n\t\t\tcout << matrica[i][j] << \" \"; \n\t\t}\n\t\tcout << endl; \n\t}\n\t}\n\tcatch(domain_error poruka){\n\t\tcout << poruka.what(); \n\t}\n\t\n\t\n\t\n\t\n\treturn 0;\n}",
        "student6053": "/*\u0001B\u0002 16/17, Zada\u0107a 2, Zadatak 1\n\t\n\tNAPOMENA: i javni ATo-vi su dio postavke\n\t\n\tAutotestovi by Ivona Ivkovic. Sva pitanja, sugestije\n\ti prijave gresaka saljite na mail: iivkovic2@etf.unsa.ba\n\t\n*/\n#include<iostream>\n#include<vector>\n#include <string>\n#include <stdexcept>\nusing namespace std;\nenum class Polje {\n\tPrazno, Posjeceno, Mina, BlokiranoPrazno, BlokiranoPosjeceno, BlokiranoMina\n};\nenum class Smjerovi {\n\tGoreLijevo, Gore, GoreDesno, Desno, DoljeDesno, Dolje,  DoljeLijevo, Lijevo\n};\nenum class Status {\n\tNijeKraj, KrajPoraz, KrajPobjeda \n};\nenum class KodoviGresaka {\n\tPogresnaKomanda, NedestajeParametar, SuvisanParametar, NeispravanParametar\n};\n\ntypedef vector<vector<Polje>> Tabla;\n\n\n\nTabla KreirajIgru(int n, const vector<vector<int>> &mine){//funkcija 1\n\nTabla igra(n);\n\nfor(int i(0);i<n;i++)\nigra[i].resize(n);\n\nfor(int i(0);i<mine.size();i++){\n\tif(mine[i].size()!=2) throw domain_error (\"Ilegalan format zadavanja mina\");\n}\n\nfor(int i(0);i<mine.size();i++)\n\tfor(int j(0);j<mine[i].size();j++){\n\t\tif(mine[i][j]>=n) throw domain_error (\"Ilegalna pozicija mina\");\n\t}\nfor(int i(0);i<n;i++)\nfor(int j(0);j<n;j++){\n\tigra[i][j]=Polje::Prazno;\n}\n\nfor(int i(0);i<n;i++){\n\tfor(int j(0);j<n;j++){\n\t\tfor(int l(0);l<mine.size();l++){\n\t\t\tif(i==mine[l][0] && j==mine[l][1])\n\t\t\tigra[i][j]=Polje::Mina;\n\t\t}\n\t}\n}\nreturn igra;\n}\n\n\n\nvoid BlokirajPolje(Tabla &polja, int x,int y){//funkcija 3\nif(x>= polja.size() || y>= polja.size()){\n\tstring x1=to_string(x);\n\tstring y1=to_string(y);\n\tstring greska = \"Polje (\"+x1+\",\"+y1+\") ne postoji\";\n\tthrow domain_error (greska);\n\t\n}\nif(polja[x][y]==Polje::Prazno) polja[x][y]=Polje::BlokiranoPrazno;\nelse if(polja[x][y]==Polje::Mina) polja[x][y]=Polje::BlokiranoMina;\nelse if(polja[x][y]==Polje::Posjeceno) polja[x][y]=Polje::BlokiranoPosjeceno;\n\n}\n\nvoid DeblokirajPolje(Tabla &polja, int x,int y){//funkcija 4\nif(x>= polja.size() || y>= polja.size()){\n\tstring x1=to_string(x);\n\tstring y1=to_string(y);\n\tstring greska = \"Polje (\"+x1+\",\"+y1+\") ne postoji\";\n\tthrow domain_error (greska);\n\t\n}\nif(polja[x][y]==Polje::BlokiranoPrazno) polja[x][y]=Polje::Prazno;\nelse if(polja[x][y]==Polje::BlokiranoMina) polja[x][y]=Polje::Mina;\nelse if(polja[x][y]==Polje::BlokiranoPosjeceno) polja[x][y]=Polje::Posjeceno;\n\n}\nStatus ProvjeraStatusa(Tabla polja){\n\tStatus provjeri=Status::KrajPobjeda;\n\tfor(int i(0);i<polja.size();i++){\n\t\tfor(int j(0);j<polja[i].size();j++){\n\t\t\tif(polja[i][j]==Polje::Prazno || polja[i][j]==Polje::BlokiranoPrazno){\n\t\t\t\tprovjeri=Status::NijeKraj;\n\t\t\t\treturn provjeri;\n\t\t\t}\n\t\t}\n\t}\n\treturn provjeri;\n}\n\nStatus Idi(Tabla &polja, int &x, int y, Smjerovi smjer){//funkcija 5\n\npolja[x][y]=Polje::Posjeceno;\nStatus provjeri=ProvjeraStatusa(polja);\n\nif(smjer==Smjerovi::GoreLijevo){\n\tx--;\n\ty--;\n}\nelse if(smjer==Smjerovi::GoreDesno){\n\tx--;\n\ty++;\n}\nelse if(smjer==Smjerovi::Gore){\n\tx--;\n}\nelse if(smjer==Smjerovi::Desno){\n\ty++;\n}\nelse if(smjer==Smjerovi::Lijevo){\n\ty--;\n}\nelse if(smjer==Smjerovi::DoljeDesno){\n\tx++;\n\ty++;\n}\nelse if(smjer==Smjerovi::DoljeLijevo){\n\tx++;\n\ty--;\n}\nelse if(smjer==Smjerovi::Dolje){\n\tx++;\n}\nif(x<0 || y<0 || x>=polja.size() || y>=polja.size()) throw out_of_range (\"Izlazak van igrace table\");\nif(polja[x][y]==Polje::BlokiranoPrazno || polja[x][y]==Polje::BlokiranoMina || polja[x][y]==Polje::BlokiranoPosjeceno) throw logic_error (\"Blokirano polje\");\nif(polja[x][y]==Polje::Mina) provjeri=Status::KrajPoraz;\nreturn provjeri;\n}\n\nStatus Idi(Tabla &polja, int &x, int &y, int novi_x, int novi_y){\n\tpolja[x][y]=Polje::Posjeceno;\n\tStatus status=ProvjeraStatusa(polja);\n\tx=novi_x;\n\ty=novi_y;\n\tif(x<0 || y<0 || x>=polja.size() || y>=polja.size()) throw out_of_range (\"Izlazak van igrace table\");\n    if(polja[x][y]==Polje::BlokiranoPrazno || polja[x][y]==Polje::BlokiranoMina || polja[x][y]==Polje::BlokiranoPosjeceno) throw logic_error (\"Blokirano polje\");\n\n\treturn status;\n}\nvoid PrijaviGresku(KodoviGresaka greska) {\n\tif(greska==KodoviGresaka::PogresnaKomanda) cout<< \"Nerazumljiva komanda!\" << endl;\n\telse if(greska==KodoviGresaka::SuvisanParametar) cout<< \"Zadan je suvisan parametar nakon komande!\"<< endl;\n    else if(greska==KodoviGresaka::NedestajeParametar) cout <<\"Komanda trazi parametar koji nije naveden!\"<<endl;\n\telse if(greska==KodoviGresaka::NeispravanParametar) cout<<\"Parametar komande nije ispravan!\";\n}\n\n\n\nint main ()\n{\n\treturn 0;\n}"
    },
    "185": {
        "label": "0",
        "student1009": "#include <stdio.h>\n\nchar* ubaci_broj(char* tekst, int broj)\n{\n    int minus,jedan_razmak,p;\n    int broj_razmaka=0;\n    int temp=broj,duzina_broja=0,temp2,pocetak=0,temp3,duzina_obrnut=0,razlika;\n    int obrnut=0;\n    char* poc=tekst;\n    char* kraj=tekst;\n    if(temp<0) temp=-temp;\n    do {\n        int cifra;\n        cifra=temp%10;\n        obrnut=obrnut*10+cifra;\n        duzina_broja++;\n        temp/=10;\n    } while(temp>0);\n    temp3=obrnut;\n    do {\n        duzina_obrnut++;\n        temp3/=10;\n    } while(temp3>0);\n\n    while(*tekst!='\\0') {\n        if(*tekst!=' ') pocetak=1;\n        razlika=duzina_broja-duzina_obrnut;\n        temp2=obrnut;\n        broj_razmaka=0;\n        if(*tekst==' ' && pocetak==1) {\n            char* p=tekst;\n            minus=0,jedan_razmak=0;\n            if(broj<0) minus=1;\n            while(*kraj!='\\0') kraj++;\n            while(*p!='\\0') {\n                if(*p==' ') {\n                    broj_razmaka++;\n                    if(*(p+1)=='\\0') return poc;\n                } else break;\n                p++;\n            }\n            if(broj_razmaka==1) jedan_razmak=1;\n            tekst++;\n            while(kraj>=tekst) {\n                *(kraj+duzina_broja+minus+jedan_razmak)=*kraj;\n                kraj--;\n\n            }\n\n            if(minus==1) *tekst++='-';\n            do {\n                int cifra=temp2%10;\n                temp2/=10;\n                *tekst++=cifra+'0';\n            } while(temp2>0);\n            while(razlika>0) {\n                *tekst++='0';\n                razlika--;\n            }\n            if(jedan_razmak==1) *tekst++=' ';\n            tekst=p+duzina_broja+minus+jedan_razmak;\n        }\n        tekst++;\n    }\n    return poc;\n}\nint main()\n{\n    return 0;\n}\n",
        "student4736": "#include <stdio.h>\n\nchar * obrniStringBroj(char *s)  //12345 => 54321\n{\n\tchar*k=s;\n\tchar*p=s;\n\tif(*p=='-')p++;\n\tchar temp;\n\twhile(*k!='\\0')k++;\n\tk--; // pomjeramo ga za jedno mjesto iza nul-terminiranog znaka\n\twhile(p<k) {\n\t\ttemp = *p;\n\t\t*p=*k;\n\t\t*k=temp;\n\t\tp++;\n\t\tk--;\n\t}\n\n\treturn s;\n}\n\n\n\nchar*brojUString(char *tekst, int broj)\n{\n\tint cifra;\n\tchar*p=tekst;\n\tif(broj<0) {\n\t\t*p++ = '-';\n\t\tbroj*=-1;\n\t} else if(broj==0) {\n\t\t*p++='0';\n\t}\n\twhile(broj!=0) {\n\t\tcifra = broj%10;\n\t\t*p++ = cifra+'0';\n\t\tbroj/=10;\n\t}\n\t*p='\\0';\n\treturn tekst;\n}\n\nint duzina(char*s)\n{\n\tint broj=0;\n\twhile(*s!='\\0') {\n\t\tbroj++;\n\t\ts++;\n\t}\n\treturn broj;\n}\n\nchar* ubaciBrojUtekst(char*tekst, char *broj)\n{\n\tint razmak=1;\n\tchar *p=tekst;\n\tint pomjeriZa;\n\tchar *k=tekst;\n\twhile(*k!='\\0')k++; // k nakon petlje pokazuje na zadnji element nul-terminirani znak\n\tif(*p==' ')razmak=0;\n\tpomjeriZa = duzina(broj)+razmak;\n\tdo {\n\t\t*(k+pomjeriZa)=*k;\n\t\tk--;\n\t} while(k!=p);\n\t*(k+pomjeriZa)=*k;\n\n\twhile(*broj!='\\0') {\n\t\t*p++ = *broj++;\n\t}\n\tif(razmak)*p=' ';\n\treturn tekst;\n}\n\n\nchar* ubaci_broj (char* tekst, int broj)\n{\n\tint pomjeriZa;\n\tchar*p=tekst;\n\tchar *k;\n\tchar tekstualnoBroj[12];\n\tbrojUString(tekstualnoBroj,broj);\n\tobrniStringBroj(tekstualnoBroj);\n\tint brojCifara = duzina(tekstualnoBroj);\n\twhile(*tekst==' ') {\n\t\ttekst++;\n\t}\n\n\tint prethodna=1;\n\tint sljedeca=0;\n\twhile(*tekst!='\\0') {\n\t\tif(*tekst!=' ') {\n\t\t\tprethodna=1;\n\t\t} else {\n\t\t\tif(prethodna) {\n\t\t\t\tk=tekst;\n\t\t\t\twhile(*k!='\\0') {\n\t\t\t\t\tif(*k!=' ') {\n\t\t\t\t\t\tsljedeca=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tif(sljedeca){\n\t\t\t\t\ttekst++;\n\t\t\t\t\tubaciBrojUtekst(tekst,tekstualnoBroj);\n\t\t\t\t\ttekst+=brojCifara;\n\t\t\t\t\tsljedeca=0;\n\t\t\t\t}\n\t\t\t\tprethodna=0;\n\t\t\t}\n\t\t}\n\t\ttekst++;\n\t}\n\n\treturn p;\n}\n\n\nint main()\n{\n\tint broj = -123;\n\tchar t[1000]=\"teksta  asdf  \";\n\tubaci_broj(t,broj);\n\tprintf(\"%s\",t);\n\treturn 0;\n}\n"
    },
    "186": {
        "label": "1",
        "student2526": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#define brel 10\n#define brel2 20\n/* Funkcija ubaci */ \nvoid ubaci(int *niz,int velicina){\n\tint i,cifra,broj,broj2=0;\n\tfor (i=velicina-1;i>=0;i--){    /* Pomjeranje clanova niza */ \n\t\t*(niz+2*i)=*(niz+i);\n\t}\n\tfor (i=0;i<velicina*2;i++){\n\t\tif (i%2==1){\n\t\t\tbroj=*(niz+i-1);\n\t\t\twhile (broj!=0){        /* Dodavanje clanova sabiranjem cifara prethodnog clana */ \n\t\t\t\tcifra=broj%10;\n\t\t\t\tbroj2+=cifra;\n\t\t\t\tbroj/=10;\n\t\t    }\n\t\t    broj2=abs(broj2);\n\t\t\t*(niz+i)=broj2;\n\t\t\tbroj2=0;\n\t\t}\n\t}\n}\n\n/* Funkcija izbaci */ \n/* Formiranje pretlji za prolazak po nizu i uporedivanje njegovih clanova sa Fibonaccijevim nizom, izbacivanje jednakih */\nint izbaci(int *niz,int velicina){\n\tint i,j,m,prvi=0,drugi=1,slijedeci;\n\tfor (i=0;i<velicina;i++){\n\t\tprvi=0;\n\t\tdrugi=1;\n\t\tfor (j=1;j<10000;j++){   \n\t\t\tif (j==1) slijedeci=j;                \n\t\t\telse {\n\t\t\t\tslijedeci=prvi+drugi;\n\t\t\t\tprvi=drugi;\n\t\t\t\tdrugi=slijedeci;\n\t\t\t}\n\t\t\tif (*(niz+i)==slijedeci){\n\t\t\t\tfor (m=i;m<velicina-1;m++){\n\t\t\t\t\t\t*(niz+m)=*(niz+m+1);\n\t\t\t\t}\n\t\t\t\tvelicina--;\n\t\t\t\ti--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn velicina;\n}\n\nint main() {\n\tint niz[20],i,n;\n\t\n\t/* Unos elemenata */ \n\tprintf (\"Unesite niz od 10 brojeva: \");\n\tfor (i=0;i<10;i++){\n\t\tscanf(\"%d\",&niz[i]);\n\t}\n\t\n\t/* Pozivanje funkcije ubaci */ \n\t\n\tubaci(niz,brel);\n\t\n\t/* Pozivanje funkcije izbaci */ \n\t\t\n\tn=izbaci(niz,brel2);\n\t\n\t/* Ispis niza */\n\tprintf (\"Modificirani niz glasi: \");\n\tfor (i=0;i<n;i++){\n\t\tif (i<(n-1)){\n\t\t\tprintf (\"%d, \",niz[i]);\n\t    }\n\t    else {\n\t    \tprintf (\"%d. \",niz[i]);\n\t    }\n\t}\n\t\n\treturn 0;\n}\n",
        "student5612": "#include <stdio.h>\n#include<stdlib.h>\n#define VELICINA 10\n#define velicina_2 20\nvoid ubaci (int *niz, int velicina)\n{\n\tint i, k;\n\tint b1;\n\tint b2;\n\tint b3 = 0;\n\tfor(k = velicina - 1; k >= 0; k--){\n\t\tniz[2*k] = niz[k];\n\t}\n\tfor(i = 0; i < 2 * velicina; i = i + 2){\n\t\tb1 = abs (niz[i]);\n\t\tif (b1 < 10) \n\t\tb3 = b1;\n\t\telse {\n\t\t\tdo{\n\t\t\tb2 = b1  % 10;\n\t\t\tb3 = b3 + b2;\n\t\t\tb1 = b1 / 10;\n\t\t\t}\n\t\t\twhile(b1 != 0);\n\t\t}\n\t\tniz[i + 1] = b3;\n\t\tb3 = 0;\n\t}\n}\nint izbaci(int *niz, int velicina)\n{\n\tint i;\n\tint k;\n\tint x = 1;\n\tint y = 1;\n\tint z;\n\tint u;\n\tfor(i = 0; i < velicina; i++){\n\t\tx = 1;\n\t\ty = 1;\n\t\tfor(k = 1; k < 10000; k++){\n\t\t\tif (k == 1)\n\t\t\tz = 1;\n\t\t\telse {\n\t\t\t\tz = x + y;\n\t\t\t\tx = y;\n\t\t\t\ty = z;\n\t\t\t}\n\t\t\tif(niz[i] == z){\n\t\t\t\tfor(u = i; u < velicina - 1; u++){\n\t\t\t\t\tniz[u] = niz[u+1];\n\t\t\t\t\n\t\t\t\t}\n\t\t\t\tvelicina -- ; \n\t\t\t\ti --; \n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn velicina;\n}\nint main(){\n\tint niz[2 * VELICINA];\n\tint i;\n\tint u;\n\tprintf(\"Unesite niz od 10 brojeva: \");\n\tfor(i = 0; i < VELICINA; i++){\n\t\tscanf(\"%d\", &niz[i]);\n\t}\n\tubaci(niz, VELICINA);\n\tu = izbaci(niz, velicina_2);\n\tprintf(\"Modificirani niz glasi: \");\n\tfor(i = 0; i < u; i++){\n\t\tif (i == u - 1){\n\t\t\tprintf(\"%d.\", niz[i]);\n\t\t}else {\n\t\t\tprintf(\"%d, \", niz[i]);\n\t\t}\n\t}\n\treturn 0;\n}"
    },
    "187": {
        "label": "0",
        "student1200": "#include <stdio.h>\n#define EPSILON 0.00001\nint main()\n{\n\tfloat p1t,p2t,pt,zt,zit,p1b,p2b,pb,zb,zib,p1m,p2m,pm,zm,zim,bp=0,tp=0,mp=0,mbt=0;\n\tint ocjenat,ocjenab,ocjenam;\n\tfloat tu=0,bu=0,mu=0;\n\tprintf(\"Unesite bodove za Tarika:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%f\", &p1t);\n\tif(p1t<0 || p1t>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"II parcijalni ispit: \");\n\tscanf(\"%f\", &p2t);\n\tif(p2t<0 || p2t>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Prisustvo: \");\n\tscanf(\"%f\", &pt);\n\tif(pt<0 || pt>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zadace: \");\n\tscanf(\"%f\", &zt);\n\tif(zt<0 || zt>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zavrsni ispit: \");\n\tscanf(\"%f\",&zit);\n\tif(zit<0 || zit>40) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Unesite bodove za Bojana:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%f\", &p1b);\n\tif(p1b<0 || p1b>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"II parcijalni ispit: \");\n\tscanf(\"%f\", &p2b);\n\tif(p2b<0 || p2b>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Prisustvo: \");\n\tscanf(\"%f\", &pb);\n\tif(pb<0 || pb>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zadace: \");\n\tscanf(\"%f\", &zb);\n\tif(zb<0 || zb>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zavrsni ispit: \");\n\tscanf(\"%f\",&zib);\n\tif(zib<0 || zib>40) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Unesite bodove za Mirzu:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%f\", &p1m);\n\tif(p1m<0 || p1m>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"II parcijalni ispit: \");\n\tscanf(\"%f\", &p2m);\n\tif(p2m<0 || p2m>20) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Prisustvo: \");\n\tscanf(\"%f\", &pm);\n\tif(pm<0 || pm>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zadace: \");\n\tscanf(\"%f\", &zm);\n\tif(zm<0 || zm>10) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\tprintf(\"Zavrsni ispit: \");\n\tscanf(\"%f\",&zim);\n\tif(zim<0 || zim>40) {\n\t\tprintf(\"Neispravan broj bodova\");\n\t\treturn 0;\n\t}\n\ttu=p1t+p2t+pt+zt+zit+EPSILON;\n\n\tif(tu<92) {\n\t\tocjenat=(tu+5)/10;\n\t} else ocjenat=(tu+8)/10;\n\tif(tu>=55) {\n\t\ttp=1;\n\t} else tp=0;\n\n\tbu=p1b+p2b+pb+zb+zib+EPSILON;\n\tif(bu<92) {\n\t\tocjenab=(bu+5)/10;\n\n\t} else ocjenab=(bu+8)/10;\n\tif(bu>=55) {\n\t\tbp=1;\n\t} else bp=0;\n\n\n\tmu=p1m+p2m+pm+zm+zim+EPSILON;\n\tif(mu<92) {\n\t\tocjenam=(mu+5)/10;\n\t} else ocjenam=(mu+8)/10;\n\tif(mu>=55) {\n\t\tmp=1;\n\t} else mp=0;\n\tmbt=mp+tp+bp;\n\n\n\tif(bu<55 && mu<55 && tu<55) {\n\t\tprintf(\"Nijedan student nije polozio.\\n\");\n\t} else if(bu>=55 && mu<55 && tu<55) {\n\t\tprintf(\"Jedan student je polozio.\\n\");\n\t} else\tif(bu<55 && mu>=55 && tu<55) {\n\t\tprintf(\"Jedan student je polozio.\\n\");\n\t} else if(bu<55 && mu<=55 && tu>55) {\n\t\tprintf(\"Jedan student je polozio.\\n\");\n\t} else if(bu>=55 && mu>=55 && tu<55) {\n\t\tprintf(\"Dva studenta su polozila.\\n\");\n\t} else if(bu<55 && mu>=55 && tu>=55) {\n\t\tprintf(\"Dva studenta su polozila.\\n\");\n\t} else if(bu>=55 && mu<55 && tu>=55) {\n\t\tprintf(\"Dva studenta su polozila.\\n\");\n\t} else if(bu>=55 && mu>=55 && tu>=55) {\n\t\tprintf(\"Sva tri studenta su polozila.\\n\");\n\t}\n\n\tif(mbt==3) {\n\t\tif(ocjenat==ocjenam && ocjenam==ocjenab && ocjenab==ocjenat) {\n\t\t\tprintf(\"Sva tri studenta imaju istu ocjenu.\\n\");\n\t\t} else if(ocjenat==ocjenab && ocjenab!=ocjenam && ocjenat!=ocjenam && bp==1 && mp==1 && tp==1 && mbt==3) {\n\t\t\tprintf(\"Dva od tri studenta imaju istu ocjenu.\\n\");\n\t\t} else if(ocjenat==ocjenam && ocjenam!=ocjenab && ocjenat!=ocjenab && bp==1 && mp==1 && tp==1 && mbt==3) {\n\t\t\tprintf(\"Dva od tri studenta imaju istu ocjenu.\\n\");\n\t\t} else if(ocjenam==ocjenab && ocjenam!=ocjenat && ocjenab!=ocjenat && bp==1 && mp==1 && tp==1 && mbt==3) {\n\t\t\tprintf(\"Dva od tri studenta imaju istu ocjenu.\\n\");\n\t\t} else if (ocjenam!=ocjenat && ocjenam!=ocjenab && ocjenat!=ocjenab && bp==1 && mp==1 && tp==1 && mbt==3) {\n\t\t\tprintf(\"Svaki student ima razlicitu ocjenu.\\n\");\n\t\t}\n\t}\n\n\treturn 0;\n\n}",
        "student3116": "#include <stdio.h>\n\nint main() {\n\tdouble T1, T2, Tp, Tz, Ti, B1, B2, Bp, Bz, Bi, M1, M2, Mp, Mz, Mi, Tu, Bu, Mu;\n\tint o6=0, o7=0, o8=0, o9=0, o10=0, BrojPalih=0;\n\t\n\t/* ------- TARIK ------- */\n\t\n\tprintf(\"Unesite bodove za Tarika:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%lf\", &T1);\n\tif (T1<0 || T1>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"II parcijalni ispit: \");\n    scanf(\"%lf\", &T2);\n\tif (T2<0 || T2>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Prisustvo: \");\n    scanf(\"%lf\", &Tp);\n\tif (Tp<0 || Tp>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n   \n    printf(\"Zadace: \");\n    scanf(\"%lf\", &Tz);\n\tif (Tz<0 || Tz>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Zavrsni ispit: \");\n    scanf(\"%lf\", &Ti);\n\tif (Ti<0 || Ti>40){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n\n    /* ------- BOJAN ------- */\n\t\n\tprintf(\"Unesite bodove za Bojana:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%lf\", &B1);\n\tif (B1<0 || B1>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"II parcijalni ispit: \");\n    scanf(\"%lf\", &B2);\n\tif (B2<0 || B2>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Prisustvo: \");\n    scanf(\"%lf\", &Bp);\n\tif (Bp<0 || Bp>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Zadace: \");\n    scanf(\"%lf\", &Bz);\n\tif (Bz<0 || Bz>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Zavrsni ispit: \");\n    scanf(\"%lf\", &Bi);\n\tif (Bi<0 || Bi>40){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n\n    /* ------- MIRZA ------- */\n\t\n\tprintf(\"Unesite bodove za Mirzu:\\n\");\n\tprintf(\"I parcijalni ispit: \");\n\tscanf(\"%lf\", &M1);\n\tif (M1<0 || M1>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"II parcijalni ispit: \");\n    scanf(\"%lf\", &M2);\n\tif (M2<0 || M2>20){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Prisustvo: \");\n    scanf(\"%lf\", &Mp);\n\tif (Mp<0 || Mp>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Zadace: \");\n    scanf(\"%lf\", &Mz);\n\tif (Mz<0 || Mz>10){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n    \n    printf(\"Zavrsni ispit: \");\n    scanf(\"%lf\", &Mi);\n\tif (Mi<0 || Mi>40){\n\t      printf(\"Neispravan broj bodova\");\n\t      return 0;\n\t}\n\n    Tu=T1+T2+Tp+Tz+Ti;\n    Bu=B1+B2+Bp+Bz+Bi;\n    Mu=M1+M2+Mp+Mz+Mi;\n    \n    if (Tu<55) { BrojPalih++; }\n    else if (Tu<65) { o6++; }\n    else if (Tu<75) { o7++; }\n    else if (Tu<85) { o8++; }\n    else if (Tu<92) { o9++; }\n    else { o10++; }\n    \n     if (Bu<55) { BrojPalih++; }\n    else if (Bu<65) { o6++; }\n    else if (Bu<75) { o7++; }\n    else if (Bu<85) { o8++; }\n    else if (Bu<92) { o9++; }\n    else { o10++; }\n    \n     if (Mu<55) { BrojPalih++; }\n    else if (Mu<65) { o6++; }\n    else if (Mu<75) { o7++; }\n    else if (Mu<85) { o8++; }\n    else if (Mu<92) { o9++; }\n    else { o10++; }\n    \n    if (BrojPalih==3)\n       { printf(\"Nijedan student nije polozio.\"); return 0;}\n    else if (BrojPalih==2)\n       { printf(\"Jedan student je polozio.\"); return 0;}\n    else if (BrojPalih==1)\n       { printf(\"Dva studenta su polozila.\"); return 0;}\n    else if (BrojPalih==0)\n       { printf(\"Sva tri studenta su polozila.\");}\n    \t\n    \t\n       if (o6==3 || o7==3 || o8==3 || o9==3 || o10==3)\n               { printf(\"\\nSva tri studenta imaju istu ocjenu.\"); }\n       else if (o6==2 || o7==2 || o8==2 || o9==2 || o10==2)\n               { printf(\"\\nDva od tri studenta imaju istu ocjenu.\"); }\n       else\n               { printf(\"\\nSvaki student ima razlicitu ocjenu.\"); }\n    \n       return 0;\n}"
    },
    "188": {
        "label": "1",
        "student5573": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int m,n,niz[200][200],o,p,z=0,i,j,a,b,brojac=0,brojac2=0,c,d,l,e,r,brojac3=0,poz,h,g;\n    \n    /*unos i ispitivanje ispravnosti brojeva m i n*/\n    \n    do\n    {\n        if(z>0)\n        {\n            printf(\"Brojevi nisu u trazenom opsegu.\\n\");\n        }\n        printf(\"Unesite brojeve M i N: \");\n        scanf(\"%d %d\",&m,&n);\n        z++; \n    }while(m<1 || n<1 || m>200 || n>200);\n    \n    /*unos elemenata matrice*/\n    \n    printf(\"Unesite elemente matrice: \");\n    for(o=0;o<m;o++)\n    {\n        for(p=0;p<n;p++)\n        {\n            scanf(\"%d\",&niz[o][p]);\n        }\n    }\n    \n    /*izbacivanje redova*/\n    \n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            l=j;\n            for(a=i+1;a<m;a++)\n            {\n                for(b=0;b<n;b++)\n                {\n                    if(niz[i][j]==niz[a][b] && j==b)\n                    {\n                        brojac++;\n                        j++;\n                    }\n                }\n                if(brojac==n)\n                {\n                    for(c=a;c<=m-1;c++)\n                    {\n                        for(d=0;d<n;d++)\n                        {\n                            niz[c][d]=niz[c+1][d];\n                        }\n                    }\n                    m--;\n                    i=i-1;\n\n                }\n                brojac=0;\n            }\n        }\n        j=l;\n    }\n    \n    /*izbacivanje kolona*/\n    \n    l3:\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++) \n        {\n            for(a=j+1;a<n;a++)\n            {\n                if(i==0)\n                {\n                    if(niz[i][j]==niz[i][a])\n                    {\n                        brojac3++;\n                        poz=a;\n                        goto l2;\n                    }\n\n                }\n                if(i!=0)\n                {\n                    if(niz[i][j]==niz[i][a] && a==poz)\n                    {\n                        brojac3++;\n                        goto l2;\n                    }\n                }\n            }\n        }\n        l2:\n            if(brojac3==0)\n            {\n                goto l1;\n            }\n            if(brojac3==m)\n            {\n                if(poz<n+1){\n                for(h=0;h<m;h++)\n                {\n                    for(g=poz;g<n;g++)\n                    {\n                        niz[h][g]=niz[h][g+1];\n                    }\n                }}\n                brojac3=0;\n                n--;\n                goto l3;\n            }\n    }\n    l1:\n    \n    /*ispis modifivirane matrie*/\n    \n    printf(\"Nakon izbacivanja redova/kolona matrica glasi: \\n\");\n    for(e=0;e<m;e++)\n    {\n        for(r=0;r<n;r++)\n        {\n            if(niz[e][r]>9 || niz[e][r]<0)\n            {\n                printf(\"   %d\",niz[e][r]);\n            }\n            else{\n            printf(\"    %d\",niz[e][r]);}\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n",
        "student8598": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int m,n,niz[200][200],o,p,z=0,i,j,a,b,brojac=0,brojac2=0,c,d,l,e,r,brojac3=0,poz,h,g;\n        do\n    {\n        if(z>0)\n        {\n            printf(\"Brojevi nisu u trazenom opsegu.\\n\");\n        }\n        printf(\"Unesite brojeve M i N: \");\n        scanf(\"%d %d\",&m,&n);\n        z++; \n    }while(m<1 || n<1 || m>200 || n>200);\n        printf(\"Unesite elemente matrice: \");\n    for(o=0;o<m;o++)\n    {\n        for(p=0;p<n;p++)\n        {\n            scanf(\"%d\",&niz[o][p]);\n        }\n    }\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            l=j;\n            for(a=i+1;a<m;a++)\n            {\n                for(b=0;b<n;b++)\n                {\n                    if(niz[i][j]==niz[a][b] && j==b)\n                    {\n                        brojac++;\n                        j++;\n                    }\n                }\n                if(brojac==n)\n                {\n                    for(c=a;c<=m-1;c++)\n                    {\n                        for(d=0;d<n;d++)\n                        {\n                            niz[c][d]=niz[c+1][d];\n                        }\n                    }\n                    m--;\n                    i=i-1;\n                }\n                brojac=0;\n            }\n        }\n        j=l;\n    }\n    l3:\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++) \n        {\n            for(a=j+1;a<n;a++)\n            {\n                if(i==0)\n                {\n                    if(niz[i][j]==niz[i][a])\n                    {\n                        brojac3++;\n                        poz=a;\n                        goto l2;\n                    }\n\n                }\n                if(i!=0)\n                {\n                    if(niz[i][j]==niz[i][a] && a==poz)\n                    {\n                        brojac3++;\n                        goto l2;\n                    }\n                }\n            }\n        }\n        l2:\n            if(brojac3==0)\n            {\n                goto l1;\n            }\n            if(brojac3==m)\n            {\n                if(poz<n+1){\n                for(h=0;h<m;h++)\n                {\n                    for(g=poz;g<n;g++)\n                    {\n                        niz[h][g]=niz[h][g+1];\n                    }\n                }}\n                brojac3=0;\n                n--;\n                goto l3;\n            }\n    }\n    l1:\n    printf(\"Nakon izbacivanja redova/kolona matrica glasi: \\n\");\n    for(e=0;e<m;e++)\n    {\n        for(r=0;r<n;r++)\n        {\n            if(niz[e][r]>9 || niz[e][r]<0)\n            {\n                printf(\"   %d\",niz[e][r]);\n            }\n            else{\n            printf(\"    %d\",niz[e][r]);}\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"
    },
    "189": {
        "label": "0",
        "student8288": "#include <stdio.h>\n\nint karakter(char c)\n{\n\tif((c>='A' && c<='Z') || (c>='a' && c<='z'))\n\treturn 1;\n\telse return 0;\n}\nvoid najduzi_bp(char* s1, char* s2)\n{\n\tint da = 1;\n\tint i = 0, j;\n\tint poc = 0;\n\tint kraj = 0;\n\tint poc_naj = 0;\n\tint kraj_naj = 0;\n\t\n\twhile(s1[i]!='\\0')\n\t{\n\t\tif(karakter(s1[i]))\n\t\t{\n\t\t\tpoc=i;\n\t\t\tkraj=i;\n\t\t\twhile(karakter(s1[kraj])==1)\n\t\t\t{\n\t\t\t\tda=1;\n\t\t\t\tfor(j=poc;j<kraj;j++)\n\t\t\t\t{\n\t\t\t\t\tif(s1[j] == s1[kraj] && j!=kraj)\n\t\t\t\t\t{\n\t\t\t\t\t\tda=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(da==0 || karakter(s1[kraj])==0) break;\n\t\t\t\tkraj++;\n\t\t\t}\n\t\t\t\n\t\t\tif(kraj-poc > kraj_naj-poc_naj)\n\t\t\t{\n\t\t\t\tkraj_naj = kraj;\n\t\t\t\tpoc_naj = poc;\n\t\t\t}\n\t\t}\n\t\n\t\t\t\n\t\ti++;\n\t}\n\t\n\tfor(i=poc_naj;i<kraj_naj;i++)\n\t{\n\t\ts2[i-poc_naj] = s1[i];\n\t}\n\ts2[i-poc_naj] = '\\0';\n}\n\n\n\nint main() {\n\n\nchar tekst[] = \"Ovo je neki primjer teksta\";\nchar s2[100];\nnajduzi_bp(tekst, s2);\nprintf(\"%s \", s2);\n\n}\n",
        "student9837": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n\n\nint Slovo(char x)\n{\n\tif((x >= 'a' && x <= 'z') || (x >='A' && x<='Z'))return 1;\n\treturn 0;\n}\n\nvoid najduzi_bp(char* s1, char* s2)\n{\n\tint i=0;\n\tint j=0;\n\tint k=0,m=0;\n\tint max_duzina=0, max_index=0;\n\tint brojaci[26];\n\twhile(s1[i]!=0) {\n\t\tj=i+1;\n\t\tmemset(brojaci, 0, sizeof(brojaci));\n\t\tm=0;\n\t\twhile(Slovo(s1[j]) && s1[j]!=s1[i] && s1[j]!=tolower(s1[i]) && Slovo(s1[i]) ) {\n\t\t\tbrojaci[tolower(s1[j])-'a']++;\n\t\t\tfor(k=0; k<26; k++)\n\t\t\t\tif(brojaci[k]>1)m=1;\n\t\t\tif(m==1)break;\n\t\t\tj++;\n\t\t}\n\n\t\tif(j-i>max_duzina ) {\n\t\t\tmax_duzina=j-i;\n\t\t\tmax_index=i;\n\t\t}\n\t\ti++;\n\t}\n\n\tstrncpy(s2,s1+max_index,max_duzina);\n\n\ts2[max_duzina]=0;\n}\n\nint main()\n{\n\tprintf(\"Zada\u0107a 4, Zadatak 3\");\n\treturn 0;\n}\n"
    },
    "190": {
        "label": "1",
        "student3423": "#include <stdio.h>\n\nint main() {\n\tint i,j,n;\n\t\n\tdo{\n\t\tprintf(\"Unesite broj N: \");\n\t\tscanf(\"%d\", &n);\n\t\t\n\t\tif(n<8 || n%4!=0) printf(\"Neispravno N! \\n\");\n\t\t\n\t}while (n<8 || n%4!=0);\n\tprintf(\"\\n\");\n\t\n\tfor (i=0; i<n/2; i++){\n\t\tfor (j=0; j<n/2; j++){\n\t\t\tif (i==j){\n\t\t\t\tprintf(\"\\\\\"); //moraju bit dvije kose \n\t\t\t}\n\t\t\telse if(j==(n/2 -1-i)){\n\t\t\t\tprintf(\"/\");\n\t\t\t}\n\t\t\telse { \n\t\t\t\tprintf(\" \");\n\t\t} \n\t\t// ovo je sve da printa x\n\t\t}\n\t\tfor (j=n/2;j<n;j++){\n\t\t\tif ((i==0 && j==n/2) || (i==0 && j==n-1) || (i==n/2-1 && j==n/2) || (i==n/2-1 && j==n-1)){\n\t\t\t\tprintf(\"+\"); // ovo je za coskove kvadrata\n\t\t\t}\n\t\t\telse if ((i>0 && i<n/2 -1) && (j==n/2 || j==n-1)){\n\t\t\t\tprintf(\"|\"); \n\t\t\t\t// za stranice uspravne\n\t\t\t}\n\t\t\telse if(i==0 && (j>n/2 || j<n-1)){\n\t\t\t\tprintf(\"-\"); \n\t\t\t\t//ovo je za horizontalne stranice (gornja)\n\t\t\t}\n\t\t\telse if (i==n/2 -1 && (j>n/2 || j<n-1)){\n\t\t\t\tprintf(\"-\"); \n\t\t\t\t//horizontalna donja stranica\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n\tfor (i=n/2; i<n; i++){\n\t\tfor (j=0;j<n/2; j++){\n\t\t\tif (i==n/2 && (j==0 || j==n/2-1)){\n\t\t\t\tprintf(\"+\");\n\t\t\t}\n\t\t\telse if (i==n-1 && (j==0 || j==n/2-1)){\n\t\t\t\tprintf(\"+\");\n\t\t\t}\n\t\t\telse if ((j==0 || j==n/2-1) && (i>n/2 && i<n-1) ){\n\t\t\t\tprintf(\"|\");\n\t\t\t}\n\t\t\telse if((i==n/2 || i==n-1) && (j>0 && j<n/2-1)){\n\t\t\t\tprintf(\"-\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\tfor (j=n/2; j<n; j++){\n\t\t\tif ((j==(3*n)/4 || j==(3*n)/4-1) && (i!=(3*n)/4 && i!=(3*n)/4-1)){\n\t\t\t\tprintf(\"|\");\n\t\t\t}\n\t\t\telse if((j==(3*n)/4 || j==(3*n)/4-1) && (i==(3*n)/4 || i==(3*n)/4-1)){\n\t\t\t\tprintf(\"+\");\n\t\t\t}\n\t\t\telse if(i==(3*n)/4 || i==(3*n)/4-1){\n\t\t\t\tprintf(\"-\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t\t\n\t}\n\t\n\t\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n\n",
        "student6813": "#include <stdio.h>\n\nint main() {\n\t\n\tint i,j,n;\n\tdo{\n\tprintf(\"Unesite broj N: \");\n\tscanf(\"%d\", &n);\n\tif(n<8 || n%4!=0) \n\tprintf(\"Neispravno N!\\n\");\n\t}while(n<8 || n%4!=0);\n\tprintf(\"\\n\");\n\tfor(i=0;i<n/2;i++) {\n\t\tfor(j=0;j<n/2;j++){\n\t\t\tif(i==j){\n\t\t\t\tprintf(\"\\\\\");\n\t\t\t}\n\t\t\telse if(j==(n/2 -1-i)) {\n\t\t\t\tprintf(\"/\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\tfor(j=n/2;j<n;j++){\n\t\t\tif( (i==0 && j==n/2) || (i==0 && j==n-1) || (i==n/2-1 && j==n/2) || (i==n/2-1 && j==n-1) ) {\n\t\t\tprintf(\"+\");\n\t\t\t}\n\t\t\telse if((i>0 && i<n/2-1) && (j==n/2 || j==n-1)){\n\t\t\tprintf(\"|\");\n\t\t\t}\n\t\t\telse if(i==0 && (j>n/2 || j<n-1)) {\n\t\t\t\tprintf(\"-\");\n\t\t\t}\n\t\t\telse if(i==n/2-1 && (j>n/2 || j<n-1)){\n\t\t\t\tprintf(\"-\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\tfor(i=n/2;i<n;i++){\n\t\tfor(j=0;j<n/2;j++){\n\t\t\tif(i==n/2 && (j==0 || j==n/2-1)){\n\t\t\t\tprintf(\"+\");\n\t\t\t}\n\t\t\telse if(i==n-1 && (j==0 || j==n/2-1)){\n\t\t\t\tprintf(\"+\");\n\t\t}\n\t\telse if((j==0 || j==n/2-1) && (i>n/2 && i<n-1)){\n\t\t\tprintf(\"|\");\n\t\t}\n\t\telse if((i==n/2 || i==n-1) && (j>0 && j<n/2-1)){\n\t\t\tprintf(\"-\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\" \");\n\t\t}\n\t}\n\tfor(j=n/2;j<n;j++){\n\t\tif((j==(3*n)/4 || j==(3*n)/4-1) && (i!=(3*n)/4 && i!=(3*n)/4-1)){\n\t\t\tprintf(\"|\");\n\t\t}\n\t\telse if((j==(3*n)/4 || j==(3*n)/4-1) && (i==(3*n)/4 || i==(3*n)/4-1)){\n\t\t\tprintf(\"+\");\n\t\t}\n\t\telse if (i==(3*n)/4 || i==(3*n)/4-1) {\n\t\t\tprintf(\"-\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\" \");\n\t\t}\n\t\n\t}\n\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}\n"
    },
    "191": {
        "label": "0",
        "student1600": "#include <stdio.h>\n\nint max(int matrica[100][100], int visina, int sirina)\n{\n\tint i, j, k ,l;\n\tint a, b, brojac;\n\ta=matrica[0][0];\n\tb=1;\n\n\tfor(i=0; i<visina; i++) {\n\t\tbrojac=0;\n\t\tfor(j=0; j<sirina; j++) {\n\t\t\tbrojac=0;\n\t\t\tfor(k=0; k<visina; k++)\n\t\t\t\tfor(l=0; l<sirina; l++)\n\t\t\t\t\tif(matrica[i][j]==matrica[k][l])\n\t\t\t\t\t\tbrojac++;\n\n\t\t\tif(brojac>b || (brojac==b && matrica[i][j]<=a)) {\n\t\t\t\ta=matrica[i][j];\n\t\t\t\tb=brojac;\n\t\t\t}\n\t\t}\n\t}\n\treturn a;\n}\n\nint izbaci_kolone(int matrica[100][100], int visina, int sirina, int N)\n{\n\tint i, j, p=0, q=0;\n\tint mat[100][100]= {{0,0,0}};\n\tint brojac;\n\n\tfor(j=0; j<sirina; j++) {\n\t\tbrojac=0;\n\t\tfor(i=0; i<visina; i++) {\n\t\t\tif(matrica[i][j]!=N)\n\t\t\t\tbrojac++;\n\t\t}\n\t\tif(brojac==visina) {\n\t\t\tfor(p=0; p<visina; p++)\n\t\t\t\tmat[p][q]=matrica[p][j];\n\t\t\tq++;\n\t\t}\n\t}\n\n\tfor(i=0; i<visina; i++)\n\t\tfor(j=0; j<q; j++)\n\t\t\tmatrica[i][j]=mat[i][j];\n\treturn q;\n\n}\n\nint main()\n{\n\tint matrica[100][100];\n\tint i, j,l, sirina, visina;\n\tint k;\n\tprintf(\"Unesite sirinu i visinu matrice: \");\n\tscanf(\"%d %d\", &sirina, &visina);\n\n\tfor(i=0; i<visina; i++) {\n\t\tprintf(\"Unesite elemente %d. reda: \", i+1);\n\t\tfor(j=0; j<sirina; j++) {\n\t\t\tscanf(\"%d\", &matrica[i][j]);\n\t\t}\n\t}\n\tl=1;\n\tk=sirina;\n\twhile(1) {\n\t\tk=izbaci_kolone(matrica, visina, k, max(matrica, visina, k));\n\t\tif(k==0) {\n\t\t\tprintf(\"\\nNakon %d. prolaza matrica je prazna!\",l);\n\t\t\tbreak;\n\t\t}\n\t\tprintf(\"\\nNakon %d. prolaza matrica glasi: \\n\",l);\n\t\tfor(i=0; i<visina; i++) {\n\t\t\tfor(j=0; j<k; j++)\n\t\t\t\tprintf(\"%5d\",matrica[i][j]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\tl++;\n\t}\n\n\treturn 0;\n}\n",
        "student7495": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\n\nint max(int matrica[100][100], int visina, int sirina) {\n\tint i,j,k,l,brojac[100][100],max=0,najmanji=10000;\n\tfor(i=0;i<visina;i++){\n\t\tfor(j=0;j<sirina;j++){\n\t\t\tbrojac[i][j]=0;\n\t\t}\n\t}\n\tfor(i=0;i<visina;i++){\n\t\tfor(j=0;j<sirina;j++){\n\t\t\tfor(k=0;k<visina;k++){\n\t\t\t\tfor(l=0;l<sirina;l++){\n\t\t\t\t\tif(matrica[i][j]==matrica[k][l]){\n\t\t\t\t\t\tbrojac[i][j]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<visina;i++){\n\t\tfor(j=0;j<sirina;j++){\n\t\t\tif(brojac[i][j]>max) max=brojac[i][j];\n\t\t}\n\t}\n\tfor(i=0;i<visina;i++){\n\t\tfor(j=0;j<sirina;j++){\n\t\t\tif(brojac[i][j]==max){\n\t\t\t\tif(matrica[i][j]<najmanji) najmanji=matrica[i][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn najmanji;\n\n\n}\n\nint izbaci_kolone(int niz[100][100], int visina, int sirina, int N) {\n\tint j,i,k,l;\n\tfor(i=0;i<visina;i++){\n\t\tfor(j=0;j<sirina;j++){\n\t\t\tif(niz[i][j]==N){\n\t\t\t\tfor(l=0;l<visina;l++){\n\t\t\t\t\tfor(k=j;k<sirina-1;k++){\n\t\t\t\t\t\tniz[l][k]=niz[l][k+1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsirina--;\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t}\n\treturn sirina;\n}\n\n\nint main() {\n    int matrica[100][100];\n\tint i,j,k,sirina=0,visina=0,niz,velicina=0,maksimalni;\n\tprintf(\"Unesite sirinu i visinu matrice: \");\n\tscanf(\"%d %d\", &sirina, &visina);\n\tfor(i=0;i<visina;i++){\n\t\tprintf(\"Unesite elemente %d. reda: \",i+1);\n\t\tfor(j=0;j<sirina;j++){\n\t\t\tscanf(\"%d\", &matrica[i][j]);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\tvelicina=sirina;\n\tfor(i=0; i<sirina; i++){\n\t\tmaksimalni=max( matrica,visina,velicina);\n\t\tvelicina=izbaci_kolone(matrica,visina,velicina,maksimalni);\n\t\tif(velicina!=0){\n\t\t\tprintf(\"\\nNakon %d. prolaza matrica glasi:\\n\", i+1);\n\t\t\tfor(k=0;k<visina;k++){\n\t\t\t\tfor(j=0;j<velicina;j++){\n\t\t\t\t\tprintf(\"%5d\",matrica[k][j]);\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tprintf(\"Nakon %d. prolaza matrica je prazna!\", i+1);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}"
    },
    "192": {
        "label": "1",
        "student2676": "#include <iostream>\n#include <vector>\n#include <deque>\n#include <stdexcept>\n#include <iomanip>\n\nusing std::cin;\nusing std::cout;\nusing std::vector;\nusing std::deque;\n\nenum class SmjerKretanja\n{\n    NaprijedNazad, NazadNaprijed, GoreDolje, DoljeGore, LijevoDesno, DesnoLijevo\n};\n\ntemplate <typename tip>\nauto IzdvojiDijagonale3D(tip kont, SmjerKretanja s) -> typename std::remove_reference<decltype(kont.at(0))>::type\n{\n    for(int i=0;i<kont.size();i++)\n    {\n        if(kont.at(i).size()!=kont.at(0).size()) throw std::domain_error(\"Plohe nemaju isti broj redova\");\n        for(int j=0;j<kont.at(0).size();j++)\n        {\n            if(kont.at(i).at(j).size()!=kont.at(0).at(0).size()) throw std::domain_error(\"Redovi nemaju isti broj elemenata\");\n        }\n    }\n    if(!kont.size() || !kont.at(0).size() || !kont.at(0).at(0).size())\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2;\n        return d2;\n    }\n    if(s==SmjerKretanja::NaprijedNazad)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.size());\n        int dub;\n        if(kont.at(0).size()<kont.at(0).at(0).size()) dub=kont.at(0).size(); else dub=kont.at(0).at(0).size();\n        for(int i=0;i<kont.size();i++)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(i).push_back(kont.at(i).at(j).at(j));\n            }\n        }\n        return d2;\n    }\n    if(s==SmjerKretanja::NazadNaprijed)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.size());\n        int dub;\n        if(kont.at(0).size()<kont.at(0).at(0).size()) dub=kont.at(0).size(); else dub=kont.at(0).at(0).size();\n        for(int i=kont.size()-1;i>=0;i--)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(kont.size()-1-i).push_back(kont.at(i).at(j).at(kont.at(0).at(0).size()-1-j));\n            }\n        }\n        return d2;\n    }\n    if(s==SmjerKretanja::GoreDolje)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.at(0).size());\n        int dub;\n        if(kont.size()<kont.at(0).at(0).size()) dub=kont.size(); else dub=kont.at(0).at(0).size();\n        for(int i=0;i<kont.at(0).size();i++)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(i).push_back(kont.at(kont.size()-1-j).at(i).at(j));\n            }\n        }\n        return d2;\n    }\n    if(s==SmjerKretanja::DoljeGore)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.at(0).size());\n        int dub;\n        if(kont.size()<kont.at(0).at(0).size()) dub=kont.size(); else dub=kont.at(0).at(0).size();\n        for(int i=kont.at(0).size()-1;i>=0;i--)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(kont.at(0).size()-1-i).push_back(kont.at(kont.size()-1-j).at(i).at(kont.at(0).at(0).size()-1-j));\n            }\n        }\n        return d2;\n    }\n    if(s==SmjerKretanja::LijevoDesno)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.at(0).at(0).size());\n        int dub;\n        if(kont.at(0).size()<kont.size()) dub=kont.at(0).size(); else dub=kont.size();\n        for(int i=0;i<kont.at(0).at(0).size();i++)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(i).push_back(kont.at(kont.size()-1-j).at(j).at(i));\n            }\n        }\n        return d2;\n    }\n    if(s==SmjerKretanja::DesnoLijevo)\n    {\n        typename std::remove_reference<decltype(kont.at(0))>::type d2(kont.at(0).at(0).size());\n        int dub;\n        if(kont.at(0).size()<kont.size()) dub=kont.at(0).size(); else dub=kont.size();\n        for(int i=kont.at(0).at(0).size()-1;i>=0;i--)\n        {\n            for(int j=0;j<dub;j++)\n            {\n                d2.at(kont.at(0).at(0).size()-1-i).push_back(kont.at(j).at(j).at(i));\n            }\n        }\n        return d2;\n    }\n    typename std::remove_reference<decltype(kont.at(0))>::type d2;\n    return d2;\n}\n\nint main ()\n{\n    int x, y, z, si;\n    SmjerKretanja s[6]={SmjerKretanja::NaprijedNazad, SmjerKretanja::NazadNaprijed, SmjerKretanja::GoreDolje, SmjerKretanja::DoljeGore, SmjerKretanja::LijevoDesno, SmjerKretanja::DesnoLijevo};\n    cout << \"Unesite dimenzije (x y z): \";\n    cin >> x >> y >> z;\n    if(x<=0 || y<=0 || z<=0)\n    {\n        cout << \"Neispravne dimenzije kontejnera!\\n\";\n        return 0;\n    }\n    vector<deque<deque<int>>> v(x, deque<deque<int>>(y, deque<int>(z)));\n    cout << \"Unesite elemente kontejnera:\\n\";\n    for(int i=0;i<x;i++)\n    {\n        for(int j=0;j<y;j++)\n        {\n            for(int k=0;k<z;k++)\n            {\n                cin >> v.at(i).at(j).at(k);\n            }\n        }\n    }\n    cout << \"Unesite smjer kretanja [0 - 5]: \";\n    cin >> si;\n    if(si<0 || si>5)\n    {\n        cout << \"Smjer kretanja nije ispravan!\\n\";\n        return 0;\n    }\n    try\n    {\n        deque<deque<int>> vd=IzdvojiDijagonale3D(v, s[si]);\n        if(s[si]==SmjerKretanja::NaprijedNazad) cout << \"NaprijedNazad:\\n\";\n        if(s[si]==SmjerKretanja::NazadNaprijed) cout << \"NazadNaprijed:\\n\";\n        if(s[si]==SmjerKretanja::GoreDolje) cout << \"GoreDolje:\\n\";\n        if(s[si]==SmjerKretanja::DoljeGore) cout << \"DoljeGore:\\n\";\n        if(s[si]==SmjerKretanja::LijevoDesno) cout << \"LijevoDesno:\\n\";\n        if(s[si]==SmjerKretanja::DesnoLijevo) cout << \"DesnoLijevo:\\n\";\n        for(int i=0;i<vd.size();i++)\n        {\n            for(int j=0;j<vd.at(0).size();j++)\n            {\n                cout.width(4);\n                cout << vd.at(i).at(j);\n            }\n            cout << \"\\n\";\n        }\n    }\n    catch(std::domain_error ero)\n    {\n        cout << ero.what();\n    }\n    return 0;\n}",
        "student4495": "#include <iostream>\n#include <vector>\n#include <deque>\n#include <stdexcept>\n#include <type_traits>\n#include <iomanip>\n\nenum class SmjerKretanja {\n NaprijedNazad, NazadNaprijed, GoreDolje, DoljeGore, LijevoDesno, DesnoLijevo\n};\n\ntypedef std::deque<std::vector<int>> matrica;\n\ntemplate <typename kontejner3d>                                                      // size ,at ,push_back //\nauto IzdvojiDijagonale3D (kontejner3d kont, SmjerKretanja smjer) -> typename std::remove_reference<decltype(kont.at(0))>::type{\n    \n   if(kont.size()==0||kont.at(0).size()==0 || kont.at(0).at(0).size()==0){\n       typename std::remove_reference<decltype(kont.at(0))>::type kont2;\n       return kont2;\n   }\n   \n    for(int i=0;i<kont.size();i++){\n     for(int j=0;j<kont.at(0).size();j++){  \n        if(kont.at(i).at(j).size()!=kont.at(0).at(0).size()) throw std::domain_error (\"Redovi nemaju isti broj elemenata\");\n    }  \n    }\n    for(int i=0;i<kont.size();i++){\n        if(kont.at(i).size()!=kont.at(0).size()) throw std::domain_error (\"Plohe nemaju isti broj redova\");\n    }\n    \n    switch(smjer){\n        case SmjerKretanja::NaprijedNazad:\n        {\n            typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.size());\n            int min;\n            if(kont.at(0).size()<kont.at(0).at(0).size())\n                 min=kont.at(0).size();\n                else  min=kont.at(0).at(0).size();\n            \n            for(int i=0;i<kont.size();i++){\n                for(int j=0;j<min;j++){\n                    kont2.at(i).push_back(kont.at(i).at(j).at(j));\n                }\n                \n            }\n            return kont2;\n    }    \n       case SmjerKretanja::NazadNaprijed:{\n            typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.size());\n            int min;\n                if(kont.at(0).size()<kont.at(0).at(0).size())\n                 min=kont.at(0).size();\n                else  min=kont.at(0).at(0).size();\n        \n            for(int i=kont.size()-1;i>=0;i--){\n                for(int j=0;j<min;j++){\n                    kont2.at(kont.size()-1-i).push_back(kont.at(i).at(j).at(kont.at(0).at(0).size()-1-j));\n                }\n                \n                \n            }\n            return kont2;\n            \n       }\n        case SmjerKretanja::GoreDolje:\n        {\n          typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.at(0).size());\n            int min;\n             if(kont.size()<kont.at(0).at(0).size())\n                 min=kont.size();\n                else  min=kont.at(0).at(0).size();\n            \n            \n            for(int i=0;i<kont.at(0).size();i++){\n                for(int j=0;j<min;j++){\n                    kont2.at(i).push_back(kont.at(kont.size()-1-j).at(i).at(j));\n                }\n                \n                \n            }\n            return kont2;\n            \n       }\n     \n      case SmjerKretanja::DoljeGore:{\n       typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.at(0).size());\n            int min;\n             if(kont.size()<kont.at(0).at(0).size())\n                 min=kont.size();\n                else  min=kont.at(0).at(0).size();\n            \n            \n            for(int i=kont.at(0).size()-1;i>=0;i--){\n                for(int j=0;j<min;j++){\n                    kont2.at(kont.at(0).size()-1-i).push_back(kont.at(kont.size()-1-j).at(i).at(kont.at(0).at(0).size()-j-1));\n                }\n                \n                \n            }\n            return kont2;\n      }\n      case SmjerKretanja::LijevoDesno:\n       {\n          typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.at(0).at(0).size());\n            int min;\n             if(kont.at(0).size()<kont.size())\n                 min=kont.at(0).size();\n                else  min=kont.size();\n            \n            \n            for(int i=0;i<kont.at(0).at(0).size();i++){\n                for(int j=0;j<min;j++){\n                    kont2.at(i).push_back(kont.at(kont.size()-1-j).at(j).at(i));\n                }\n                \n                \n            }\n            return kont2;\n            \n       }\n        case SmjerKretanja::DesnoLijevo:{\n         typename std::remove_reference<decltype(kont.at(0))>::type kont2(kont.at(0).at(0).size());\n            int min;\n             if(kont.at(0).size()<kont.size())\n                 min=kont.at(0).size();\n                else  min=kont.size();\n            \n            \n            for(int i=kont.at(0).at(0).size()-1;i>=0;i--){\n                for(int j=0;j<min;j++){\n                    kont2.at(kont.at(0).at(0).size()-1-i).push_back(kont.at(j).at(j).at(i));\n                }\n                \n                \n            }\n            return kont2;\n        }}\n    \n}\n\n\n\n\nint main ()\n{\n    try{\n    std::cout <<\"Unesite dimenzije (x y z): \";\n\n    int x,y,z;\n    std::cin >> x >> y >> z;\n    if(x<0 || y<0 || z <0) throw std::domain_error (\"Neispravne dimenzije kontejnera!\");\n    \n    std::cout << \"Unesite elemente kontejnera: \" << std::endl;\n    std::deque<matrica> kont(x,matrica(y,std::vector<int> (z))) ;\n    for(int i=0; i<x;i++){\n        for(int j=0;j<y;j++){\n            for(int k=0;k<z;k++){\n                    std::cin >> kont.at(i).at(j).at(k);\n            }\n          \n        }\n    }\n    \n    std::cout << \"Unesite smjer kretanja [0 - 5]: \";\n    int smjer;\n    std::cin >> smjer;\n    if(smjer <0 || smjer > 5) throw std::domain_error (\"Smjer kretanja nije ispravan!\") ;\n    \n\tstd::vector<SmjerKretanja> Smjerovi1{SmjerKretanja::NaprijedNazad,  SmjerKretanja::NazadNaprijed, SmjerKretanja::GoreDolje, SmjerKretanja::DoljeGore ,SmjerKretanja::LijevoDesno,SmjerKretanja::DesnoLijevo} ;\n    std::vector<std::string> Smjerovi2{ \"NaprijedNazad\", \"NazadNaprijed\", \"GoreDolje\", \"DoljeGore\", \"LijevoDesno\",\"DesnoLijevo\"} ;\n    \n    \n\tmatrica Dijagonale(IzdvojiDijagonale3D(kont,Smjerovi1[smjer])) ;\n\tstd::cout << Smjerovi2[smjer] << \": \" << std::endl;\n\tfor(int i=0;i<Dijagonale.size();i++){\n\t    for(int j=0;j<Dijagonale.at(0).size();j++)\n\t    std::cout << std::setw(4) << std::right << Dijagonale.at(i).at(j);\n\t\n\t    std::cout << std::endl;\n\t}   \n\t\n    }\n    catch(std::domain_error gres){\n        std::cout << gres.what()<< std::endl;\n    }\n    return 0;\n}"
    },
    "193": {
        "label": "0",
        "student2956": "#include <stdio.h>\n\nint dalijeprost(int x){\n\tint i;\n\tfor(i=2;i<x;i++){\n\tif(x%i==0) return 0;\n}\nreturn 1;\n}\n\nint daj_prost() {\n\tlong int static st=1;\n\tlong int i;\n\tfor(i=st;i<100000;i++){\n\t\tif(i==st) continue;\n\t\tif(i==2){ st=2; return st;\n\t}\n\tif(i>st){\n\tif(dalijeprost(i)){ st=i; return st;}\n\t}\n}\n}\n\t\n\t\n\n\nint main() {\n\tint a,b,i;\n\tint suma=0;\n\tunos:\n\tprintf(\"Unesite brojeve A i B: \");\n\tscanf(\"%d %d\",&a,&b);\n\tif(a<1) { printf(\"A nije prirodan broj.\\n\");\n\tgoto unos;}\n\tif(a>=b) { printf(\"A nije manje od B.\\n\");\n\tgoto unos;}\n\t\n\tfor(i=0;i<b;i++){\n\t\tint prost=daj_prost();\n\t\tif(prost>a && prost<b) suma+=prost;\n\t}\n\tprintf(\"Suma prostih brojeva izmedju %d i %d je %d.\",a,b,suma);\n\treturn 0;\n}\n",
        "student4280": "#include <stdio.h>\n\nint prost (int x){\n\tint i;\n\tif(x==1) {\n\t\treturn 0;\n\t}\n\tfor (i=2;i<x;i++) {\n\t\tif(x%i==0) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\nint daj_prost() {\n\tstatic int A,B;\n\tstatic int i=1;\n\t\n\ti++;\n\tfor(i;;i++) {\n       if(prost(i)==1) {\n       return i;\n     } else continue;\n}\n}\t\nint main () {\n\tint A,B,i,suma=0,x;\n\t\n\tdo {\n\t\tprintf(\"Unesite brojeve A i B: \");\n\t\tscanf(\"%d %d\",&A,&B);\n\t\tif (A<=0) {\n\t\t\tprintf(\"A nije prirodan broj.\\n\");\n\t\t}\n\t\telse if (A>=B) {\n\t\t\tprintf(\"A nije manje od B.\\n\");\n\t\t}\n\t\telse if (B<=0) {\n\t\t\tprintf(\"B nije prirodan broj.\\n\");\n\t\t}\n\t} while (A<=0 || A>=B || B<=0);\n\t\nwhile (A>=0 || A<=B || B<=0) {\n\tx=daj_prost();\n\tif (x<A)\n\t    suma=suma+0;\n\telse if (x>A && x<B)\n\t    suma=suma+x;\n\telse if (x>B)\n\t     break;\n}\n\nprintf(\"Suma prostih brojeva izmedju %d i %d je %d.\",A,B,suma);\nreturn 0;\n} "
    },
    "194": {
        "label": "1",
        "student3517": "#include <stdio.h>\n#include <ctype.h>\nint dajBrojPonavljanjaRijeci (char* s, char* r) {\n    int brojac=0,daLiPokazujeNaKraj=0;\n    while(*s != '\\0')\n    {\n        char* p1=r;\n        while (!isalpha(*s))\n        {\n            if(*s=='\\0') return brojac;\n            s++;\n        }\n        while (isalpha(*p1) && (*p1 == *s || *p1 == *s+32 || *p1 == *s-32 ))\n        {\n            p1++;\n            s++;\n            if(*s == '\\0')\n            {\n                daLiPokazujeNaKraj = 1;\n                break;\n            }\n        }\n        if(!isalpha(*p1) && !isalpha(*s))\n        {\n            brojac++;\n            if(*s == '\\0') return brojac;\n        }\n        else\n        while (isalpha(*s))\n        {\n            s++;\n            if (*s == '\\0') daLiPokazujeNaKraj =1;\n        }\n        if(!daLiPokazujeNaKraj)\n        s++;\n        else continue;\n    }\n    return brojac;\n}\nchar* dajNajcescuRijec (char* s)\n{\n    int maxi = 0, br_ponavljanja;\n    char* najcesca, *p=s,*trenutna;\n    while (!isalpha(*s))\n    s++;\n    while (*s != '\\0')\n    {\n        while (!isalpha(*s) && *s != '\\0')\n        s++;\n        if(*s != '\\0')\n        {\n            trenutna=s;\n            br_ponavljanja=dajBrojPonavljanjaRijeci(p,trenutna);\n            if(maxi <br_ponavljanja)\n            {\n                najcesca=trenutna;\n                maxi=br_ponavljanja;\n            }\n            s++;\n        }\n        else return najcesca;\n    }\n    return najcesca;\n}\nint imaLiRijeci (char *s)\n{\n    for(;*s;s++) if (isalpha(*s)) return 1;\n    return 0;\n}\nchar* izbaci_najcescu (char* s)\n{\n    char *pocRijeci, *p, *krajRijeci,*pom, *pompr, *adr;\n    if (!imaLiRijeci(s)) return s;\n    p=s;\n    pocRijeci=dajNajcescuRijec(s);\n    pom=pocRijeci;\n    while(isalpha(*pom))\n    pom++;\n    krajRijeci=pom;\n    s=krajRijeci;\n    while (*s != '\\0')\n    {\n        pompr=pocRijeci;\n        while (!isalpha(*s))\n        {\n            if (*s == '\\0') break;\n            s++;\n        }\n        if(*s == '\\0') break;\n        pom=s;\n        while(isalpha(*s) && (*pompr == *s || *pompr == *s + 32  || *pompr == *s - 32))\n        {\n            pompr ++;\n            s++;\n        }\n        if(!isalpha(*pompr) && isalpha(*s))\n        {\n            while (isalpha(*s))\n            s++;\n            continue;\n        }\n        else if (isalpha(*pompr) && isalpha(*s))\n        {\n            while(isalpha(*s))\n            s++;\n            continue;\n        }\n        else if (isalpha(*pompr) && !isalpha(*s))\n        continue;\n        else\n        {\n            adr = pom;\n            while (*s != '\\0')\n            {\n                *adr = *s;\n                adr++;\n                s++;\n            }\n            while (*adr != '\\0')\n            *adr++ = '\\0';\n            adr='\\0';\n            s=pom;\n        }\n    }\n    if(*krajRijeci =='\\0')\n    while(*pocRijeci != '\\0')\n    *pocRijeci++ = '\\0';\n    else\n    {\n        while (*krajRijeci != '\\0')\n        {\n        *pocRijeci = *krajRijeci;\n        pocRijeci++;\n        krajRijeci++;\n    }\n    *krajRijeci = '\\0';\n    while (*pocRijeci != '\\0')\n    *pocRijeci++ = '\\0';\n}\nreturn p;\n}\nint main() {\n    \n\t\n\treturn 0;\n}\n",
        "student9391": "#include <stdio.h>\n#include <ctype.h>\n\nint dajBrojPonavljanjaRijeci (char* s, char* r) {\n    int brojac=0, daLiPokazujeNaKraj=0;\n    while (*s!='0') {\n        char* p1=r;\n        while(!isalpha(*s)) {\n            if(*s=='\\0') return brojac;\n            s++;\n        }\n         while (isalpha(*p1) && (*p1==*s || *p1==*s+32 || *p1==*s-32)) {\n             p1++;\n             s++;\n             if(*s=='\\0') {\n                 daLiPokazujeNaKraj=1;\n                 break;\n             }\n         }\n         if(!isalpha(*p1) && !isalpha(*s)) {\n             brojac++;\n             if(*s=='\\0') return brojac;\n         }\n         else while(isalpha(*s)) {\n             s++;\n             if(*s=='\\0') daLiPokazujeNaKraj=1;\n         }\n         if(!daLiPokazujeNaKraj)\n            s++;\n        else continue;\n    }\n    return brojac;\n}\n\nchar* dajNajcescuRijec (char* s) {\n    int maxi=0, br_ponavljanja;\n    char* najcesca, *p=s, *trenutna;\n    while(!isalpha(*s))\n        s++;\n    while(*s!='\\0') {\n        while(!isalpha(*s) && *s!='\\0')\n            s++;\n        if(*s!='\\0') {\n            trenutna=s;\n            br_ponavljanja=dajBrojPonavljanjaRijeci(p,trenutna);\n            if(maxi<br_ponavljanja) {\n                najcesca=trenutna;\n                maxi=br_ponavljanja;\n            }\n            s++;\n        }\n        else return najcesca;\n    }\n    return najcesca;\n}\n\nint imaLiRijeci (char* s) {\n    for(;*s;s++) if(isalpha(*s)) return 1;\n    return 0;\n}\n\nchar* izbaci_najcescu(char* s) {\n    char *pocRijeci, *p, *krajRijeci, *pom, *pompr, *adr;\n    if(!imaLiRijeci(s)) return s;\n    p=s;\n    pocRijeci=dajNajcescuRijec(s);\n    pom=pocRijeci;\n    while(isalpha(*pom))\n        pom++;\n    krajRijeci=pom;\n    s=krajRijeci;\n    while(*s!='\\0') {\n        pompr=pocRijeci;\n        while(!isalpha(*s)) {\n            if(*s=='\\0') break;\n            s++;\n        }\n        if(*s=='\\0') break;\n        pom=s;\n        while(isalpha(*s) && (*pompr==*s || *pompr==*s+32 || *pompr==*s-32)) {\n            pompr++;\n            s++;\n        }\n        if(!isalpha(*pompr) && isalpha(*s)) {\n            while(isalpha(*s))\n                s++;\n            continue;\n        } \n        else if (isalpha(*pompr) && isalpha(*s)) {\n            while (isalpha(*s))\n                s++;\n            continue;\n        }\n        else if (isalpha(*pompr) && !isalpha(*s))\n            continue;\n        else {\n            adr=pom;\n            while(*s!='\\0') {\n                *adr=*s;\n                adr++;\n                s++;\n            }\n            while(*adr!='\\0')\n                *adr++='\\0';\n            adr='\\0';\n            s=pom;\n        }\n    }\n    if(*krajRijeci=='\\0')\n        while(*pocRijeci!='\\0')\n        *pocRijeci++='\\0';\n    else {\n        while (*krajRijeci!='\\0') {\n            *pocRijeci=*krajRijeci;\n            pocRijeci++;\n            krajRijeci++;\n        }\n        *krajRijeci='\\0';\n        while(*pocRijeci!='\\0')\n            *pocRijeci++='\\0';\n    }\n    return p;\n}\n\nint main() {\n\t//printf(\"Zada\u0107a 4, Zadatak 1\");\n\treturn 0;\n}\n"
    },
    "195": {
        "label": "0",
        "student7293": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#define PI 3.1415923\n\nint main() \n{\n\tint bru,i,stepen,minuta,sekunda=0,j;\n\tdouble niz[500], pom=0, broj;\n\t\n\tprintf(\"Unesite broj uglova: \");\n\tscanf (\"%d\", &bru);\n\t\n\t\n\tfor (i=0; i<bru; i++)\n\t{\n\t\tscanf (\"%lf\", &niz[i]);\n\t}\n\t\n\t\n\tfor (i=0; i<bru; i++)\n\t{\n\t\tbroj=niz[i];\n\t\t\n\t\t\n\t\tstepen=broj*(180/PI);\n\t\tpom=(broj*(180/PI))-stepen;\n\t\t\n\t\tminuta=pom*60;\n\t\tpom*=60;\n\t\t\n\t\tpom-=minuta;\n\t\tpom*=60;\n\t\t\n\t\tsekunda=round(pom);\n\t\tif(sekunda==60){\n\t\t\tsekunda=0;\n\t\t\tminuta=minuta+1;\n\t\t\t\n\t\t} if(minuta==60){\n\t\t\t\tminuta=0;\n\t\t\t\tstepen=stepen+1;\n\t\t\t}\n\t\t\tif(sekunda==-60){\n\t\t\t\tsekunda=0;\n\t\t\t\tminuta=minuta-1;\n\t\t\t}\n\t\t\tif(minuta==-60){\n\t\t\t\tminuta=0;\n\t\t\t\tstepen--;\n\t\t\t}\n\t\t\n\t\t\n\t\tif (sekunda>30 || sekunda <-30)\n\t\t{\n\t\t\tif (i==(bru-1))\n\t\t\t{\n\t\t\t\tbru--;\n\t\t\t\ti--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (j=i; j<bru; j++)\n\t\t\t\t{\n\t\t\t\t\tniz[j]=niz[j+1];\n\t\t\t\t\tbru--;\n\t\t\t\t\ti--;\n\t\t\t\t}\t\n\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\n\t}\n\t\n\tbru=i;\n\t\n\tprintf (\"Uglovi su:\\n\");\n\tfor (i=0; i<bru; i++)\n\t{\n\t\tbroj=niz[i];\n\t\t\n\t\tstepen=broj*(180/PI);\n\t\tpom=(broj*(180/PI))-stepen;\n\t\t\n\t\tminuta=pom*60;\n\t\tpom*=60;\n\t\t\n\t\tpom-=minuta;\n\t\tpom*=60;\n\t\t\n\t\t\n\t\tsekunda=round(pom);\n\t\tif(sekunda==60){\n\t\t\tsekunda=0;\n\t\t\tminuta=minuta+1;\n\t\t\t\n\t\t} if(minuta==60){\n\t\t\t\tminuta=0;\n\t\t\t\tstepen=stepen+1;\n\t\t\t}\n\t\t\tif(sekunda==-60){\n\t\t\t\tsekunda=0;\n\t\t\t\tminuta=minuta-1;\n\t\t\t}\n\t\t\tif(minuta==-60){\n\t\t\t\tminuta=0;\n\t\t\t\tstepen--;\n\t\t\t}\n\t\t\n\t\t\n\t\tsekunda=fabs(sekunda);\n\t\tminuta=fabs(minuta);\n\t\tprintf (\"%d stepeni %d minuta %d sekundi\\n\", stepen, minuta,sekunda);\n\t}\n\t\n\treturn 0;\n}\n",
        "student9949": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define PI 3.1415926\nint main () {\n    int i, j, n, stepen, min, s;\n    double niz[500];\n    \n       printf(\"Unesite broj uglova: \");\n       scanf(\"%d\", &n);\n       for(i=0; i<n; i++)\n       { scanf(\"%lf\", &niz[i]);}\n        printf(\"Uglovi su: \\n\");\n      \n       for(i=0; i<n; i++){\n        niz[i]*=180/PI;\n        stepen=(int)niz[i];\n        niz[i]=fabs(niz[i])-abs(stepen);\n        niz[i]*=60;\n        min=(int)niz[i];\n        min=abs(min);\n        niz[i]-=min;\n        niz[i]*=60;\n        s=(int)(niz[i]+0.5);\n        s=abs(s);\n        \n    if(stepen>0 && min==59 && s>=59.5) \n       {\n           stepen=stepen+1;\n           min=0;\n           s=0;\n       }\n    else\n    if(stepen<0 && min==59 && s>=59.5)\n       {\n          stepen=stepen-1;\n          min=0;\n          s=0;\n       }\n    else \n    if(min<59 && s==60)\n      {\n          min=min+1;\n          s=0;\n      }\n    if(s>30)\n       { \n        for(j=i; j<n-1; j++)\n           {niz[j]=niz[j+1];}\n            n--;\n            i--;\n       }\n       \n    if(s<=30)\n       printf(\"%d stepeni %d minuta %d sekundi\\n\", stepen, min, s);\n    else continue;\n        \n        \n       }\n    return 0;\n}"
    },
    "196": {
        "label": "1",
        "student2939": "#include <stdio.h>\nint main() {\n\tchar A;\n\tint C=0,B=0,S=0,V=0,P=0,UEV=0;\n\tfloat UC,UB,US,UV,UP;\n\t      printf(\"Unesite vozila: \");\n\t do {\n\t \t  scanf(\"%c\", &A);\n\t if(A!='C' && A!='c' && A!='B' && A!='b' && A!='S' && A!='s' && A!='V' && A!='v' && A!='P' && A!='p' && A!='K' && A!='k'){\n\t \t  printf(\"Neispravan unos\\n\");}\n\t else if(A=='C' || A=='c' || A=='B'|| A=='b'|| A=='S' || A=='s' || A=='V' || A=='v' || A=='P' || A=='p')\n\t{UEV++;}\n\t\n\tif(A=='C' || A=='c'){C++;}\n\tif(A=='B' || A=='b'){B++;}\n\tif(A=='S' || A=='s'){S++;}\n\tif(A=='V' || A=='v'){V++;}\n\tif(A=='P' || A=='p'){P++;} }\n\twhile (A!='K' && A!='k');\n\tprintf(\"Ukupno evidentirano %d vozila.\\n\", UEV);\n\t\n\tif(UEV!=0){\n\t\tif(C>=B && C>=S && C>=V && C>=P){\n\t\t\tUC=(C*100.0/UEV);\n\t\t\tprintf(\"Najpopularnija boja je crna (%.2f%%).\", UC);}\n\t\telse if(B>=S && B>=V && B>=P && B>=C){\n\t\t\tUB=(B*100.0/UEV);\n\t\t\tprintf(\"Najpopularnija boja je bijela (%.2f%%).\", UB);}\n\t\telse if(S>=V && S>=P && S>=C && S>=B){\n\t\t\tUS=(S*100.0/UEV);\n\t\t\tprintf(\"Najpopularnija boja je siva (%.2f%%).\", US);}\n\t\telse if(V>=P && V>=C && V>=B && V>=S){\n\t\t\tUV=(V*100.0/UEV);\n\t\t\tprintf(\"Najpopularnija boja je crvena (%.2f%%).\", UV);}\n\t\telse if(P>=C && P>=B && P>=S && P>=V){\n\t\t\tUP=(P*100.0/UEV);\n\t\t\tprintf(\"Najpopularnija boja je plava (%.2f%%).\", UP);}}\n\t\telse {\n\t\t\tprintf(\"Najpopularnija boja je crna (0.00%%).\");\n\t\t}\n\t\t return 0;\n\t}\n\t",
        "student9949": "#include <stdio.h>\n#include <math.h>\nint main () {\n    char A;\n    int C=0,B=0,S=0,V=0,P=0,UV=0;\n    float PC,PB,PS,PV,PP;\n    \n    printf(\"Unesite vozila: \");\n    do {\n    scanf(\"%c\", &A);\n    if(A!='C' &&  A!='c' &&  A!='B' &&  A!='b' &&  A!='S' &&  A!='s' &&  A!='V' &&  A!='v' &&  A!='P' &&  A!='p' &&  A!='k' &&  A!='K'){\n        printf(\"Neispravan unos\\n\");}\n    else if(A=='C' || A=='c' || A=='B' || A=='b' || A=='S' || A=='s' || A=='V' || A=='v' || A=='P' || A=='p')\n    {UV++;}\n        if(A=='C' || A=='c'){C++;}\n        if(A=='B' || A=='b'){B++;}\n        if(A=='S' || A=='s'){S++;}\n        if(A=='V' || A=='v'){V++;}\n        if(A=='P' || A=='p'){P++;}\n        } while (A!='K' && A!='k');\n        printf(\"Ukupno evidentirano %d vozila.\\n\", UV);\n    \n    if(UV!=0){\n        if(C>=B && C>=S && C>=V && C>=P){\n            PC=(C*100.0/UV); \n            printf(\"Najpopularnija boja je crna (%.2f%%).\", PC);}\n        else if(B>=C && B>=S && B>=V && B>=P){\n            PB=(B*100.0/UV); \n            printf(\"Najpopularnija boja je bijela (%.2f%%).\", PB);}\n        else if(S>=C && S>=B && S>=V && S>=P){\n            PS=(S*100.0/UV);\n            printf(\"Najpopularnija boja je siva (%.2f%%).\", PS);}\n        else if(V>=C && V>=B && V>=S && V>=P){\n            PV=(V*100.0/UV);\n            printf(\"Najpopularnija boja je crvena (%.2f%%).\", PV);}\n        else if(P>=C && P>=B && P>=S && P>=V){\n            PP=(P*100.0/UV); \n            printf(\"Najpopularnija boja je plava (%.2f%%).\", PP);}}\n    else {\n        printf(\"Najpopularnija boja je crna (0.00%%).\");\n        }\n    return 0;\n}"
    },
    "197": {
        "label": "0",
        "student4280": "#include <stdio.h>\n\n\nvoid unesi(char niz[],int velicina) {\n\tchar znak=getchar();\n\tif(znak=='\\n') znak=getchar();\n\tint i=0;\n\twhile(i<velicina-1 && znak!='\\n') {\n\t\tniz[i]=znak;\n\t\ti++;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n}\n\n\nint provjeri_duzine(char *string, int niz[], int duzina_niza) {\n\tint brojac=0,broj=0, slovo;\n\twhile(*string!='\\0') {\n\t\tslovo=0; \n\t\twhile((*string>='A' && *string<='Z') || (*string>='a' && *string<='z')) { \n\t\t\tbrojac++; \n\t\t\tstring++; \n\t\t\tslovo=1; \n\t\t}\n\t\tif(broj<=duzina_niza) { \n\t\t\tif(slovo==1) \n\t\t\t\tif(brojac!=niz[broj])\n\t\t\t\t\treturn 0;  \n\t\t\tif(slovo==1) broj++; \n\t\t\tif(*string!='\\0') \n\t\t\t\tstring++; \n\t\t\tbrojac=0; \n\t\t} else return 0; \n\t}\n\t\n\tif(broj!=duzina_niza) return 0; \n\t\n\treturn 1; \n}\n\nint main() {\n\tint niz[100],i,n;\n\tchar string[100];\n\tprintf(\"Unesite recenicu: \");\n\tunesi(string, 100);\n\tprintf(\"Unesite velicinu niza: \");\n\tscanf(\"%d\", &n);\n\tprintf(\"Unesite niz: \");\n\tfor(i=0; i<n; i++) {\n\t\tscanf(\"%d\", &niz[i]);\n\t}\n\tprovjeri_duzine(string, niz, n);\n\treturn 0;\n}\n",
        "student7495": "#include <stdio.h>\n\nvoid unesi(char niz[], int velicina) {\n\tint i=0;\n\tchar znak=getchar();\n\tif(znak=='\\n') znak=getchar();\n\twhile(i<velicina-1 && znak != '\\n') {\n\t\tniz[i]=znak;\n\t\ti++;\n\t\tznak=getchar();\n\t}\n\tniz[i]='\\0';\n\t\n}\n\nint provjeri_duzine(char *s, int niz[], int velicina_niza) {\n\tchar *pocetak=s;\n\tint brojac_rijeci=0;\n\tint brojac_slova=0;\n\tint i=0;\n\t\n\t\n\t\n\t\n\twhile(*s!='\\0') {\n\t   /*\twhile(*s !='\\0' && *s == ' ') s++; */\n\t   \tif(*s!='\\0' &&   (!((*s>='a' && *s<='z') || (*s>='A' && *s<='Z')))) s++; \n\t\t\n\t\tif(*s!='\\0' && ((*s>='a' && *s<='z') || (*s>='A' && *s<='Z'))) brojac_rijeci++;\n\t\twhile(*s!='\\0' && ((*s>='a' && *s<='z') || (*s>='A' && *s<='Z'))) s++;\n\t\t\n\t}\n\tif(brojac_rijeci!=velicina_niza) return 0;\n\t\n\t \n\t \n\ts=pocetak;   \n\t\n\ti=0;\n\t\n\t   \t\n\t   \t\n\n\t\twhile(*s!='\\0') {\n\t\t\twhile(*s!='\\0' && *s==' ') s++;\n\t\t\t\tif(*s!='\\0' && ((*s>='a' && *s<='z') || (*s>='A' && *s<='Z'))) {\n\t\t\t\t\tbrojac_slova=0; \n\t\twhile(*s!='\\0' && ((*s>='a' && *s<='z') || (*s>='A' && *s<='Z'))) {\n\t\t\n\t\t\t\tbrojac_slova++;\n\t\t\t\ts++;\n\t\t\t}\n\t\t\tif(brojac_slova!=niz[i]) return 0;\n\t\t\ti++;\n\t\t}\n     \n           \t\n\t\tif(*s =='\\0')\n\t\t  break;\n\t\ts++;\n\t}\n\t\n\t\n\t\n\t\n\treturn 1; \n}\n\n\n\nint main() {\n\t\n \n \n\n\treturn 0;\n}\n"
    },
    "198": {
        "label": "1",
        "student3350": "#include <iostream>\n#include <set>\n#include <vector>\n#include <string>\n#include <list>\n#include <stdexcept>\n\nint Korak(std::string s){\n    int br=0;\n    for(int i=0; i<s.length(); i++){\n        if(s[i]==' ' || s[i]=='-' ) continue;\n        br++;\n    }\n    return br;\n}\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> v, int timovi){\n    if(timovi>v.size() ||timovi <1) throw std::logic_error(\"Razvrstavanje nemoguce\");\n    std::vector<std::set<std::string>> v1(timovi);\n    int n=v.size();\n    std::list<std::string> lista;\n    for(int i=0; i<v.size(); i++){\n        lista.push_back(v[i]);\n    }\n    std::list<std::string>::iterator it(lista.begin()), it2(lista.begin()), it1(lista.begin()), it3(lista.begin());\n    int br_po_timu, prvi, prvi_po_timu, br_djece=v.size(), br_koraka;\n    if(n%timovi==0){\n        br_po_timu=n/timovi; \n        int k=0;\n        while(br_djece!=0){\n            std::set<std::string> skup;\n            for(int i=0; i<br_po_timu; i++){\n                skup.insert(*it);\n                br_koraka=Korak(*it);\n                if(++it2==lista.end()) {\n                    it1=it;\n                    it=lista.begin();\n                    it3=it;\n                    it1=lista.erase(it1);\n                }\n                else it=lista.erase(it);\n           br_djece--;\n                if(br_djece==1 && i<br_po_timu){\n                    skup.insert(*it); \n                    br_djece--;\n                    break; \n                } \n                for(int j=1;j<br_koraka; j++){\n                    it3=it;\n                    if(++it3==lista.end()){ it=lista.begin();}\n                    else it++;\n                    \n                }\n                it2=it;\n                if(it==lista.end()) it--;\n                \n            }\n            v1[k]=skup;\n           k++;\n        }\n    }\n    else {\n        prvi= n%timovi; \n        prvi_po_timu= n/timovi +1; \n        int ostali=n/timovi;\n        int k=0;\n        while(br_djece!=0){\n            std::set<std::string> skup;\n            if(k<prvi){\n                for(int i=0; i<prvi_po_timu; i++){\n                    skup.insert(*it);\n                    //std::cout<<\"Prvi= \"<<*it<<std::endl;\n                    br_koraka=Korak(*it);\n                    if(++it2==lista.end()){\n                        it1=it;\n                        it=lista.begin();\n                        it3=it;\n                        it1=lista.erase(it1);\n                    }\n                    else it=lista.erase(it);\n                  \n                    br_djece--;\n                    for(int j=1; j<br_koraka; j++){\n                       \n                        it3=it;\n                        if(++it3==lista.end()) { it=lista.begin(); }\n                        else it++;\n                        \n                    }\n                    it2=it;\n                    if(it==lista.end()){ it--;}\n                    \n                }\n                v1[k]=skup;\n            }\n            else {\n                it2++;\n                std::set<std::string> skup1;\n                for(int i=0; i<ostali; i++){\n                    skup1.insert(*it);\n                    \n                    br_koraka=Korak(*it);\n                    if(++it2==lista.end()){\n                        it1=it;\n                        it=lista.begin();\n                        it3=it;\n                        \n                        it1=lista.erase(it1);\n                    }\n                    else{ it=lista.erase(it); }\n                   \n                    br_djece--;\n                    if(br_djece==1 && i<ostali){\n                        skup1.insert(*it);\n                        br_djece--;\n                        break;\n                    }\n                    for(int j=1; j<br_koraka; j++){\n                       \n                        if(++it3==lista.end()){ it=lista.begin(); }\n                        else it++;\n                        it3=it;\n                    }\n                    it2=it;\n                    if(it==lista.end()) it--;\n                   \n                }\n                v1[k]=skup1;\n            }\n            k++;\n        }\n    }\n    return v1;\n}\nint main ()\n{\n    std::cout<<\"Unesite broj djece: \";\n    int n;\n    std::cin>>n;\n    std::cout<<\"Unesite imena djece: \\n\";\n    std::cin.ignore(10000,'\\n');\n    std::vector<std::string> v(n);\n    for(int i=0; i<n; i++){\n        std::getline(std::cin,v[i]);\n    }\n    std::cout<<\"Unesite broj timova: \";\n    int k;\n    std::cin>>k;\n    std::vector<std::set<std::string>> novi(Razvrstavanje(v,k));\n    for(int i=0; i<k; i++){\n        std::cout<<\"Tim \"<<i+1<<\": \";\n        auto it2=novi[i].end();\n        it2--;\n        for(auto it=novi[i].begin(); it!=novi[i].end(); it++){\n            std::cout<<*it;\n            if(it!=it2) std::cout<<\", \";\n        }\n        std::cout<<std::endl;\n    }\n\treturn 0;\n}",
        "student7507": "/\u0001B\u00022016/2017: Zada\u0107a 3, Zadatak 4\n#include <iostream>\n#include <set>\n#include <vector>\n#include <string>\n#include <list>\n#include <stdexcept>\n\nint Korak(std::string s){\n    int br=0;\n    for(int i=0; i<s.length(); i++){\n        if(s[i]==' ' || s[i]=='-' ) continue;\n        br++;\n    }\n    return br;\n}\nstd::vector<std::set<std::string>> Razvrstavanje(std::vector<std::string> v, int timovi){\n    if(timovi>v.size() ||timovi <1) throw std::logic_error(\"Razvrstavanje nemoguce\");\n    std::vector<std::set<std::string>> v1(timovi);\n    int n=v.size();\n    std::list<std::string> lista;\n    for(int i=0; i<v.size(); i++){\n        lista.push_back(v[i]);\n    }\n    std::list<std::string>::iterator it(lista.begin()), it2(lista.begin()), it1(lista.begin()), it3(lista.begin());\n    int br_po_timu, prvi, prvi_po_timu, br_djece=v.size(), br_koraka;\n    if(n%timovi==0){\n        br_po_timu=n/timovi; // Jednak broj djece po timovima i to je br_po_timu\n        int k=0;\n        while(br_djece!=0){\n            std::set<std::string> skup;\n            for(int i=0; i<br_po_timu; i++){\n                //std::cout<<\"Prvi=\"<<*it<<std::endl;\n                skup.insert(*it);\n                br_djece--;\n                if(br_djece==0) break;\n                br_koraka=Korak(*it);\n                \n                if(++it2==lista.end()) {\n                    it1=it;\n                    it=lista.begin();\n                    it3=it;\n                    //std::cout<<\"Prije brisanja: \"<<*it<<std::endl;\n                    it1=lista.erase(it1);\n                }\n                else it=lista.erase(it);\n                //std::cout<<\"novi=\"<<*it<<std::endl;\n                \n                if(br_djece==1 && i+1<br_po_timu){\n                    skup.insert(*it); \n                    br_djece--;\n                    break; \n                } \n                for(int j=1;j<br_koraka; j++){\n                    it3=it;\n                    if(++it3==lista.end()){ it=lista.begin(); /*std::cout<<\"pocetak= \"<<*it<<std::endl;*/}\n                    else it++;\n                    \n                }\n                it2=it;\n                if(it==lista.end()) it--;\n                //std::cout<<\"Poslije for= \"<<*it<<std::endl;\n            }\n            v1[k]=skup;\n            //std::cout<<\"upisan\"<<std::endl;\n            k++;\n        }\n    }\n    else {\n        prvi= n%timovi; // Prvih (n%k) timova koji ce imati vise djece\n        prvi_po_timu= n/timovi +1; // Broj djece u tim timovima koji imaju vise djece od ostalih\n        int ostali=n/timovi;\n        int k=0;\n        while(br_djece!=0){\n            std::set<std::string> skup;\n            if(k<prvi){\n                for(int i=0; i<prvi_po_timu; i++){\n                    skup.insert(*it);\n                   // std::cout<<\"Prvi= \"<<*it<<std::endl;\n                    br_koraka=Korak(*it);\n                    //std::cout<<\"br= \"<<br_koraka<<std::endl;\n                    if(++it2==lista.end()){\n                        it1=it;\n                        it=lista.begin();\n                        it3=it;\n                        it1=lista.erase(it1);\n                    }\n                    else it=lista.erase(it);\n                    //std::cout<<\"Novi= \"<<*it<<std::endl;\n                    br_djece--;\n                   \n                    int br=0;\n                    for(int j=1; j<br_koraka; j++){\n                        //std::cout<<\" j= \"<<j;\n                        it3=it;\n                        if(++it3==lista.end()) { it=lista.begin(); /*std::cout<<\"Pocetak \"<<j<<\" \"<<*it<<std::endl;*/}\n                        else it++;\n                        br++;\n                        \n                    }\n                    it2=it;\n                    if(it==lista.end()){ it--;}\n                    //std::cout<<\"Poslije for: \"<<*it<<std::endl;\n                }\n                v1[k]=skup;\n            }\n            else {\n                //it2++;\n                std::set<std::string> skup1;\n                for(int i=0; i<ostali; i++){\n                    skup1.insert(*it);\n                    br_djece--;\n                    if(br_djece==0) break;\n                   // std::cout<<\"Prvi Poslije prvih: \"<<*it<<std::endl;\n                    br_koraka=Korak(*it);\n                    //std::cout<<\"br: \"<<br_koraka<<std::endl;\n                    if(++it2==lista.end() && br_djece!=1){\n                        it1=it;\n                        it=lista.begin();\n                        it3=it;\n                        //std::cout<<\"Prije brisanja: \"<<*it<<std::endl;\n                        it1=lista.erase(it1);\n                    }\n                    else{ it=lista.erase(it); }\n                    //std::cout<<\"Novi poslije prvih: \"<<*it<<std::endl;\n                    if(br_djece==1 && i+1<ostali){\n                        skup1.insert(*it);  \n                        br_djece--;\n                        break;\n                    }\n                    for(int j=1; j<br_koraka; j++){\n                        it3=it;\n                        if(++it3==lista.end()){ it=lista.begin(); /*std::cout<<\"j \"<<j<<\" \"<<*it<<std::endl;*/}\n                        else it++;\n                    }\n                    it2=it;\n                    if(it==lista.end()) it--;\n                    //std::cout<<\"For poslije: \"<<*it<<std::endl;\n                }\n                v1[k]=skup1;\n            }\n            k++;\n        }\n    }\n    return v1;\n}\nint main ()\n{\n    try{\n        std::cout<<\"Unesite broj djece: \";\n        int n;\n        std::cin>>n;\n        std::cout<<\"Unesite imena djece: \\n\";\n        std::cin.ignore(10000,'\\n');\n        std::vector<std::string> v(n);\n        for(int i=0; i<n; i++){\n            std::getline(std::cin,v[i]);\n        }\n        std::cout<<\"Unesite broj timova: \";\n        int k;\n        std::cin>>k;\n        std::vector<std::set<std::string>> novi(Razvrstavanje(v,k));\n        for(int i=0; i<k; i++){\n            std::cout<<\"Tim \"<<i+1<<\": \";\n            int vel=novi[i].size();\n            \n            for(auto it=novi[i].begin(); it!=novi[i].end(); it++){\n                std::cout<<*it;\n                if(vel>1) std::cout<<\", \";\n                vel--;\n            }\n            std::cout<<std::endl;\n        }\n    }\n    catch(std::logic_error izuzetak){\n        std::cout<<\"Izuzetak: \"<<izuzetak.what();\n    }\n\treturn 0;\n}"
    },
    "199": {
        "label": "0",
        "student3253": "/*\u0001B\u0002 2016/2017, Zada\u0107a 1, Zadatak 4\n\t\n\tNAPOMENA: ulaz/izlaz za zadatke je specificiran\n\tjavnim autotestovima. Zalbe za ne analiziranje testova\n\tse ne uvazavaju!\n\t\n\tNAPOMENA: nece svi (javni) testovi sa zamgera biti \n\tdostupni na c9.\n\t\n*/\n\n#include <iostream>\n#include <vector>\n#include <string>\n#include <stdexcept>\n\nstd::string ObrniString(std::string ulaz) {\n    std::string rezultat;\n    long idx_kraj = ulaz.size() - 1;\n    for (long i = idx_kraj; i>=0; i--) {\n        rezultat.push_back(ulaz[i]);\n    }\n    return rezultat;\n}\n\nint PronadjiRijec(std::string recenica, std::string rijec, int pocetak)\n{\n    int duzina_recenice = recenica.length();\n    int duzina_rijeci = rijec.length();\n    for (int i = pocetak; i <= duzina_recenice - duzina_rijeci; i++) {\n        int j = 0;\n        while (j < duzina_rijeci && recenica[i+j] == rijec[j]) {\n            j++;\n            \n        }\n        if (j == duzina_rijeci) { \n            return i;\n    }\n}\n \n return -1;\n}\n\nstd::string ZamijeniRijecURecenici(std::string recenica, std::string rijec, int pozicija, int duzina) {\n    for (int i=0; i<duzina; i++) {\n        recenica[pozicija+i] = rijec[i];\n    }\n    return recenica;\n}\n\nbool PronadjiUVektoru(std::string rijec, std::vector<std::string> rijeci) {\n    for (int i=0; i<rijeci.size(); i++) {\n        if (PronadjiRijec(rijeci[i], rijec, 0) != -1 && rijeci[i].size() == rijec.size()) {\n            return true;\n        }\n    }\n    return false;\n}\n\nstd::string ObrniFrazu(std::string fraza) {\n    std::string obrnuto(fraza);\n    obrnuto = ObrniString(fraza);\n    return obrnuto;\n}\n\nstd::string ObrniFraze(std::string recenica, std::vector<std::string> fraze) {\n    for (int i=0; i<fraze.size(); i++) {\n        std::string obrnuta = ObrniFrazu(fraze[i]);\n        \n        size_t index = 0;\n        while (true) {\n            index = PronadjiRijec(recenica, fraze[i], index);\n            if (index == -1) break;\n            recenica = ZamijeniRijecURecenici(recenica, obrnuta, index, obrnuta.size());\n            index += obrnuta.size();\n            \n        }\n    }\n    return recenica;\n}\n\nstd::string IzmijeniUPigLatin(std::string recenica, std::vector<std::string> rijeci) {\n    std::string rezultat = \"\";\n    std::string rijec = \"\";\n    bool izmijeniSve = false;\n    if (rijeci.size() == 0) {\n        izmijeniSve = true;\n    } else {\n        for (int i=0; i<rijeci.size(); i++) {\n            rijec = rijeci[i];\n            for (int j=0; j<rijec.size(); j++) {\n                if ( !((rijec[j] >= 'a' && rijec[j] <= 'z') || (rijec[j] >= 'A' && rijec[j] <= 'Z'))) {\n                    throw std::domain_error(\"Pogresan argument!\");\n                }\n            }\n        }\n    }\n    \n    recenica = recenica + \" \";\n    size_t index = 0;\n    while ( recenica[index] != '\\0' ) {\n        if ( PronadjiRijec(recenica, \" \", index) != -1 ) {\n            int iducirazmak = PronadjiRijec(recenica, \" \", index);\n            int duzinarijeci = iducirazmak - index;\n            std::string rijec = recenica.substr(index, duzinarijeci);\n            if ( izmijeniSve == true || (izmijeniSve == false && PronadjiUVektoru(rijec, rijeci))) \n            {\n                std::string rijecbezprvog = rijec.substr(1, rijec.size()-1);\n                rijec = rijecbezprvog + rijec[0] + \"ay\";\n            }\n            \n            rezultat = rezultat + rijec + \" \";\n            index = iducirazmak + 1;\n        }\n        else {\n            index++;\n        }\n    }\n    return rezultat;\n}\n\nint main ()\n{\n    std::string recenica = \"\";\n    std::vector<std::string> rijeci;\n    std::cin.clear();\n    std::cout << \"Unesite recenicu: \";\n    std::getline(std::cin, recenica);\n    std::cout << \"Unesite fraze: \";\n    std::string rijec;\n    while ( getline(std::cin, rijec), !rijec.empty()) {\n        rijeci.push_back(rijec);\n    }\n    \n    std::cout << \"Recenica nakon PigLatin transformacije: \";\n    try {\n        std::cout << IzmijeniUPigLatin(recenica, rijeci);\n    }\n    catch(std::domain_error izuzetak) {\n        std::cout << izuzetak.what() << std::endl;\n    }\n    std::cout << std::endl;\n    std::cout << \"Recenica nakon obrtanja fraza: \";\n    std::cout << ObrniFraze(recenica, rijeci);\n    std::cout << std::endl;\n}\n\n\n\n",
        "student4415": "#include <iostream>\n#include <string>\n#include <vector>\n#include <stdexcept>\n\nint Rijec_trazi(const std::string &T, const std::string &P,int i = 0)\n{\n    int n = T.length();\n    int m = P.length();\n\n    for (; i <= n-m; ++i) {\n        int j = 0;\n        while (j < m && T[i+j] == P[j]) {\n            ++j;\n        }\n        if (j == m) {\n\n            return i;\n        }\n    }\n    return -1;\n}\n\nint Rijec_trazi2(const std::string &s, const std::string &rijec)\n{\n    int duz_str = s.length();\n    int duz_rj = rijec.length();\n\n\tint k(0);\n\tint j(0);\n    for (int i = 0; i < duz_str; i++) {\n    \tk = i;\n\t\tj = 0;\n\t\twhile (j < duz_rj && k < duz_str && rijec[j] == s[k]) {\n\t\t\tk++;\n\t\t\tj++;\n\t\t}\n\t\tif (j == duz_rj && (i == 0 || !((s[i-1] >= 'A' && s[i-1] <= 'Z')||(s[i-1] >= 'a' && s[i-1] <= 'z'))) && (k == duz_str || !((s[k] >= 'A' && s[k] <= 'Z')||(s[k] >= 'a' && s[k] <= 'z'))))\n\t\t\treturn i;\n    }\n    return -1;\n}\n\nbool ima_li_ne_slova (std::string s)\n{\n\n    for (auto i : s) {\n        if (!(( i >= 'A' && i <= 'Z') || (i >= 'a' && i <= 'z' ))) {\n            return true;\n        }\n    }\n    return false;\n}\n\nstd::string ObrniFraze (std::string s, std::vector<std::string> rijeci)\n{\n\tif (rijeci.empty()) return s;\n    int t(0);\n    int k(0);\n    for (int i = 0; i < rijeci.size(); i++) {\n\n        if (Rijec_trazi(s,rijeci[i]) != -1) {\n            k = 0;\n            while (Rijec_trazi(s,rijeci[i],k) != -1) {\n                t = Rijec_trazi(s,rijeci[i]); // provjeravamo da li se nalazi i vracamo poziciju\n\n                for (int j = rijeci[i].length()-1; j >= 0 ; j--) {\n                    s[t] = rijeci[i][j];\n                    t++;\n                }\n                k++;\n            }\n        }\n    }\n    return s;\n}\n\nstd::string IzmijeniUPigLatin (std::string s, std::vector<std::string> rijeci)\n{\n    if (rijeci.empty()) {\n        int pocetak(0);\n\n        for (int i = 0; i < s.size(); i++) {\n            pocetak = i;\n            if ((( s[i] >= 'A' && s[i] <= 'Z') || (s[i] >= 'a' && s[i] <= 'z' ))) {\n                while (i < s.size() and (( s[i] >= 'A' && s[i] <= 'Z') || (s[i] >= 'a' && s[i] <= 'z' ))) {\n                    i++;\n                }\n                s.insert(s.begin() + i, s[pocetak]);\n                s.insert(s.begin() + i+1, 'a');\n                s.insert(s.begin() + i+2, 'y');\n                s.erase(s.begin()+pocetak);\n\t\t\t\ti+=2;\n            }//anasDay ejay ijeplay anday\n               \n        }\n    }\n    else {\n        int t(0);\n\n        for (int i = 0; i < rijeci.size(); i++) {\n            if (ima_li_ne_slova(rijeci[i]) == true) { throw std::domain_error(\"Nekorektan izbor rijeci\"); }\n            if (Rijec_trazi2(s,rijeci[i]) != -1) {\n\n                while (Rijec_trazi2(s,rijeci[i]) != -1) {\n                    t = Rijec_trazi2(s,rijeci[i]); // provjeravamo da li se nalazi i vracamo poziciju\n                    s.insert(s.begin() + t + rijeci[i].size(), s[t]);\n                    s.insert(s.begin() + t + rijeci[i].size()+1, 'a');\n                    s.insert(s.begin() + t + rijeci[i].size()+2, 'y');\n                    s.erase(s.begin()+t);\n\n                }\n            }\n        }\n    }\n    return s;\n}\n\nint main()\n{\n\n\n    std::string recenica {};\n    std::vector<std::string> rijeci {};\n\n    std::cout << \"Unesite recenicu: \";\n    std::getline(std::cin, recenica);\n\n    std::cout << \"Unesite fraze: \";\n\n    std::string rijec{\"\"};\n\n    while(1){\n      std::getline(std::cin,rijec);\n      if(rijec.empty())break;\n      rijeci.push_back(rijec);\n\n\t}\n\ttry {\n    std::cout << \"Recenica nakon PigLatin transformacije: \" << IzmijeniUPigLatin(recenica,rijeci) <<std::endl;\n\t}\n\tcatch(std::domain_error izuzetak){\n\t\tstd::cout << \"Izuzetak: \" << izuzetak.what() << std::endl;\n\t}\n\tstd::cout << \"Recenica nakon obrtanja fraza: \" << ObrniFraze(recenica,rijeci);\n    return 0;\n}\n"
    }
}